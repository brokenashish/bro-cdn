import * as he from "react";
import Ke, { useLayoutEffect as oy, useEffect as We, useRef as wt, forwardRef as tt, createContext as cr, useContext as fr, useState as Be, useImperativeHandle as Dx, useMemo as bt, useCallback as Xe, Fragment as R3, useId as Px, cloneElement as kf, Children as Fx, createElement as Bx } from "react";
import * as Hx from "react-dom";
import sy, { flushSync as ay, createPortal as ly } from "react-dom";
var pr = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function oh(t) {
  return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default") ? t.default : t;
}
var k0 = { exports: {} }, nc = {};
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var ck;
function $x() {
  if (ck) return nc;
  ck = 1;
  var t = Ke, e = Symbol.for("react.element"), n = Symbol.for("react.fragment"), i = Object.prototype.hasOwnProperty, r = t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, o = { key: !0, ref: !0, __self: !0, __source: !0 };
  function s(a, l, c) {
    var f, d = {}, u = null, h = null;
    c !== void 0 && (u = "" + c), l.key !== void 0 && (u = "" + l.key), l.ref !== void 0 && (h = l.ref);
    for (f in l) i.call(l, f) && !o.hasOwnProperty(f) && (d[f] = l[f]);
    if (a && a.defaultProps) for (f in l = a.defaultProps, l) d[f] === void 0 && (d[f] = l[f]);
    return { $$typeof: e, type: a, key: u, ref: h, props: d, _owner: r.current };
  }
  return nc.Fragment = n, nc.jsx = s, nc.jsxs = s, nc;
}
var ic = {};
/**
 * @license React
 * react-jsx-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var fk;
function jx() {
  return fk || (fk = 1, process.env.NODE_ENV !== "production" && function() {
    var t = Ke, e = Symbol.for("react.element"), n = Symbol.for("react.portal"), i = Symbol.for("react.fragment"), r = Symbol.for("react.strict_mode"), o = Symbol.for("react.profiler"), s = Symbol.for("react.provider"), a = Symbol.for("react.context"), l = Symbol.for("react.forward_ref"), c = Symbol.for("react.suspense"), f = Symbol.for("react.suspense_list"), d = Symbol.for("react.memo"), u = Symbol.for("react.lazy"), h = Symbol.for("react.offscreen"), p = Symbol.iterator, m = "@@iterator";
    function v(b) {
      if (b === null || typeof b != "object")
        return null;
      var L = p && b[p] || b[m];
      return typeof L == "function" ? L : null;
    }
    var y = t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function C(b) {
      {
        for (var L = arguments.length, z = new Array(L > 1 ? L - 1 : 0), ee = 1; ee < L; ee++)
          z[ee - 1] = arguments[ee];
        k("error", b, z);
      }
    }
    function k(b, L, z) {
      {
        var ee = y.ReactDebugCurrentFrame, pe = ee.getStackAddendum();
        pe !== "" && (L += "%s", z = z.concat([pe]));
        var ke = z.map(function(de) {
          return String(de);
        });
        ke.unshift("Warning: " + L), Function.prototype.apply.call(console[b], console, ke);
      }
    }
    var _ = !1, S = !1, E = !1, x = !1, N = !1, R;
    R = Symbol.for("react.module.reference");
    function A(b) {
      return !!(typeof b == "string" || typeof b == "function" || b === i || b === o || N || b === r || b === c || b === f || x || b === h || _ || S || E || typeof b == "object" && b !== null && (b.$$typeof === u || b.$$typeof === d || b.$$typeof === s || b.$$typeof === a || b.$$typeof === l || // This needs to include all possible module reference object
      // types supported by any Flight configuration anywhere since
      // we don't know which Flight build this will end up being used
      // with.
      b.$$typeof === R || b.getModuleId !== void 0));
    }
    function O(b, L, z) {
      var ee = b.displayName;
      if (ee)
        return ee;
      var pe = L.displayName || L.name || "";
      return pe !== "" ? z + "(" + pe + ")" : z;
    }
    function B(b) {
      return b.displayName || "Context";
    }
    function U(b) {
      if (b == null)
        return null;
      if (typeof b.tag == "number" && C("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof b == "function")
        return b.displayName || b.name || null;
      if (typeof b == "string")
        return b;
      switch (b) {
        case i:
          return "Fragment";
        case n:
          return "Portal";
        case o:
          return "Profiler";
        case r:
          return "StrictMode";
        case c:
          return "Suspense";
        case f:
          return "SuspenseList";
      }
      if (typeof b == "object")
        switch (b.$$typeof) {
          case a:
            var L = b;
            return B(L) + ".Consumer";
          case s:
            var z = b;
            return B(z._context) + ".Provider";
          case l:
            return O(b, b.render, "ForwardRef");
          case d:
            var ee = b.displayName || null;
            return ee !== null ? ee : U(b.type) || "Memo";
          case u: {
            var pe = b, ke = pe._payload, de = pe._init;
            try {
              return U(de(ke));
            } catch {
              return null;
            }
          }
        }
      return null;
    }
    var K = Object.assign, G = 0, J, te, re, X, D, me, Se;
    function F() {
    }
    F.__reactDisabledLog = !0;
    function Oe() {
      {
        if (G === 0) {
          J = console.log, te = console.info, re = console.warn, X = console.error, D = console.group, me = console.groupCollapsed, Se = console.groupEnd;
          var b = {
            configurable: !0,
            enumerable: !0,
            value: F,
            writable: !0
          };
          Object.defineProperties(console, {
            info: b,
            log: b,
            warn: b,
            error: b,
            group: b,
            groupCollapsed: b,
            groupEnd: b
          });
        }
        G++;
      }
    }
    function ft() {
      {
        if (G--, G === 0) {
          var b = {
            configurable: !0,
            enumerable: !0,
            writable: !0
          };
          Object.defineProperties(console, {
            log: K({}, b, {
              value: J
            }),
            info: K({}, b, {
              value: te
            }),
            warn: K({}, b, {
              value: re
            }),
            error: K({}, b, {
              value: X
            }),
            group: K({}, b, {
              value: D
            }),
            groupCollapsed: K({}, b, {
              value: me
            }),
            groupEnd: K({}, b, {
              value: Se
            })
          });
        }
        G < 0 && C("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
      }
    }
    var Re = y.ReactCurrentDispatcher, qe;
    function Ye(b, L, z) {
      {
        if (qe === void 0)
          try {
            throw Error();
          } catch (pe) {
            var ee = pe.stack.trim().match(/\n( *(at )?)/);
            qe = ee && ee[1] || "";
          }
        return `
` + qe + b;
      }
    }
    var Ge = !1, st;
    {
      var Zt = typeof WeakMap == "function" ? WeakMap : Map;
      st = new Zt();
    }
    function Mt(b, L) {
      if (!b || Ge)
        return "";
      {
        var z = st.get(b);
        if (z !== void 0)
          return z;
      }
      var ee;
      Ge = !0;
      var pe = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0;
      var ke;
      ke = Re.current, Re.current = null, Oe();
      try {
        if (L) {
          var de = function() {
            throw Error();
          };
          if (Object.defineProperty(de.prototype, "props", {
            set: function() {
              throw Error();
            }
          }), typeof Reflect == "object" && Reflect.construct) {
            try {
              Reflect.construct(de, []);
            } catch (Je) {
              ee = Je;
            }
            Reflect.construct(b, [], de);
          } else {
            try {
              de.call();
            } catch (Je) {
              ee = Je;
            }
            b.call(de.prototype);
          }
        } else {
          try {
            throw Error();
          } catch (Je) {
            ee = Je;
          }
          b();
        }
      } catch (Je) {
        if (Je && ee && typeof Je.stack == "string") {
          for (var ae = Je.stack.split(`
`), Ue = ee.stack.split(`
`), xe = ae.length - 1, Ne = Ue.length - 1; xe >= 1 && Ne >= 0 && ae[xe] !== Ue[Ne]; )
            Ne--;
          for (; xe >= 1 && Ne >= 0; xe--, Ne--)
            if (ae[xe] !== Ue[Ne]) {
              if (xe !== 1 || Ne !== 1)
                do
                  if (xe--, Ne--, Ne < 0 || ae[xe] !== Ue[Ne]) {
                    var it = `
` + ae[xe].replace(" at new ", " at ");
                    return b.displayName && it.includes("<anonymous>") && (it = it.replace("<anonymous>", b.displayName)), typeof b == "function" && st.set(b, it), it;
                  }
                while (xe >= 1 && Ne >= 0);
              break;
            }
        }
      } finally {
        Ge = !1, Re.current = ke, ft(), Error.prepareStackTrace = pe;
      }
      var an = b ? b.displayName || b.name : "", Vt = an ? Ye(an) : "";
      return typeof b == "function" && st.set(b, Vt), Vt;
    }
    function Dt(b, L, z) {
      return Mt(b, !1);
    }
    function dt(b) {
      var L = b.prototype;
      return !!(L && L.isReactComponent);
    }
    function W(b, L, z) {
      if (b == null)
        return "";
      if (typeof b == "function")
        return Mt(b, dt(b));
      if (typeof b == "string")
        return Ye(b);
      switch (b) {
        case c:
          return Ye("Suspense");
        case f:
          return Ye("SuspenseList");
      }
      if (typeof b == "object")
        switch (b.$$typeof) {
          case l:
            return Dt(b.render);
          case d:
            return W(b.type, L, z);
          case u: {
            var ee = b, pe = ee._payload, ke = ee._init;
            try {
              return W(ke(pe), L, z);
            } catch {
            }
          }
        }
      return "";
    }
    var Y = Object.prototype.hasOwnProperty, fe = {}, Ee = y.ReactDebugCurrentFrame;
    function I(b) {
      if (b) {
        var L = b._owner, z = W(b.type, b._source, L ? L.type : null);
        Ee.setExtraStackFrame(z);
      } else
        Ee.setExtraStackFrame(null);
    }
    function g(b, L, z, ee, pe) {
      {
        var ke = Function.call.bind(Y);
        for (var de in b)
          if (ke(b, de)) {
            var ae = void 0;
            try {
              if (typeof b[de] != "function") {
                var Ue = Error((ee || "React class") + ": " + z + " type `" + de + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof b[de] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                throw Ue.name = "Invariant Violation", Ue;
              }
              ae = b[de](L, de, ee, z, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
            } catch (xe) {
              ae = xe;
            }
            ae && !(ae instanceof Error) && (I(pe), C("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", ee || "React class", z, de, typeof ae), I(null)), ae instanceof Error && !(ae.message in fe) && (fe[ae.message] = !0, I(pe), C("Failed %s type: %s", z, ae.message), I(null));
          }
      }
    }
    var T = Array.isArray;
    function M(b) {
      return T(b);
    }
    function j(b) {
      {
        var L = typeof Symbol == "function" && Symbol.toStringTag, z = L && b[Symbol.toStringTag] || b.constructor.name || "Object";
        return z;
      }
    }
    function q(b) {
      try {
        return Z(b), !1;
      } catch {
        return !0;
      }
    }
    function Z(b) {
      return "" + b;
    }
    function Te(b) {
      if (q(b))
        return C("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", j(b)), Z(b);
    }
    var V = y.ReactCurrentOwner, se = {
      key: !0,
      ref: !0,
      __self: !0,
      __source: !0
    }, ue, _e, Le;
    Le = {};
    function Ht(b) {
      if (Y.call(b, "ref")) {
        var L = Object.getOwnPropertyDescriptor(b, "ref").get;
        if (L && L.isReactWarning)
          return !1;
      }
      return b.ref !== void 0;
    }
    function en(b) {
      if (Y.call(b, "key")) {
        var L = Object.getOwnPropertyDescriptor(b, "key").get;
        if (L && L.isReactWarning)
          return !1;
      }
      return b.key !== void 0;
    }
    function tn(b, L) {
      if (typeof b.ref == "string" && V.current && L && V.current.stateNode !== L) {
        var z = U(V.current.type);
        Le[z] || (C('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', U(V.current.type), b.ref), Le[z] = !0);
      }
    }
    function gn(b, L) {
      {
        var z = function() {
          ue || (ue = !0, C("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", L));
        };
        z.isReactWarning = !0, Object.defineProperty(b, "key", {
          get: z,
          configurable: !0
        });
      }
    }
    function yn(b, L) {
      {
        var z = function() {
          _e || (_e = !0, C("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", L));
        };
        z.isReactWarning = !0, Object.defineProperty(b, "ref", {
          get: z,
          configurable: !0
        });
      }
    }
    var Nt = function(b, L, z, ee, pe, ke, de) {
      var ae = {
        // This tag allows us to uniquely identify this as a React Element
        $$typeof: e,
        // Built-in properties that belong on the element
        type: b,
        key: L,
        ref: z,
        props: de,
        // Record the component responsible for creating this element.
        _owner: ke
      };
      return ae._store = {}, Object.defineProperty(ae._store, "validated", {
        configurable: !1,
        enumerable: !1,
        writable: !0,
        value: !1
      }), Object.defineProperty(ae, "_self", {
        configurable: !1,
        enumerable: !1,
        writable: !1,
        value: ee
      }), Object.defineProperty(ae, "_source", {
        configurable: !1,
        enumerable: !1,
        writable: !1,
        value: pe
      }), Object.freeze && (Object.freeze(ae.props), Object.freeze(ae)), ae;
    };
    function qr(b, L, z, ee, pe) {
      {
        var ke, de = {}, ae = null, Ue = null;
        z !== void 0 && (Te(z), ae = "" + z), en(L) && (Te(L.key), ae = "" + L.key), Ht(L) && (Ue = L.ref, tn(L, pe));
        for (ke in L)
          Y.call(L, ke) && !se.hasOwnProperty(ke) && (de[ke] = L[ke]);
        if (b && b.defaultProps) {
          var xe = b.defaultProps;
          for (ke in xe)
            de[ke] === void 0 && (de[ke] = xe[ke]);
        }
        if (ae || Ue) {
          var Ne = typeof b == "function" ? b.displayName || b.name || "Unknown" : b;
          ae && gn(de, Ne), Ue && yn(de, Ne);
        }
        return Nt(b, ae, Ue, pe, ee, V.current, de);
      }
    }
    var nn = y.ReactCurrentOwner, No = y.ReactDebugCurrentFrame;
    function sn(b) {
      if (b) {
        var L = b._owner, z = W(b.type, b._source, L ? L.type : null);
        No.setExtraStackFrame(z);
      } else
        No.setExtraStackFrame(null);
    }
    var Vi;
    Vi = !1;
    function Wi(b) {
      return typeof b == "object" && b !== null && b.$$typeof === e;
    }
    function Oo() {
      {
        if (nn.current) {
          var b = U(nn.current.type);
          if (b)
            return `

Check the render method of \`` + b + "`.";
        }
        return "";
      }
    }
    function ql(b) {
      return "";
    }
    var Ro = {};
    function Gl(b) {
      {
        var L = Oo();
        if (!L) {
          var z = typeof b == "string" ? b : b.displayName || b.name;
          z && (L = `

Check the top-level render call using <` + z + ">.");
        }
        return L;
      }
    }
    function Io(b, L) {
      {
        if (!b._store || b._store.validated || b.key != null)
          return;
        b._store.validated = !0;
        var z = Gl(L);
        if (Ro[z])
          return;
        Ro[z] = !0;
        var ee = "";
        b && b._owner && b._owner !== nn.current && (ee = " It was passed a child from " + U(b._owner.type) + "."), sn(b), C('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', z, ee), sn(null);
      }
    }
    function Lo(b, L) {
      {
        if (typeof b != "object")
          return;
        if (M(b))
          for (var z = 0; z < b.length; z++) {
            var ee = b[z];
            Wi(ee) && Io(ee, L);
          }
        else if (Wi(b))
          b._store && (b._store.validated = !0);
        else if (b) {
          var pe = v(b);
          if (typeof pe == "function" && pe !== b.entries)
            for (var ke = pe.call(b), de; !(de = ke.next()).done; )
              Wi(de.value) && Io(de.value, L);
        }
      }
    }
    function Kl(b) {
      {
        var L = b.type;
        if (L == null || typeof L == "string")
          return;
        var z;
        if (typeof L == "function")
          z = L.propTypes;
        else if (typeof L == "object" && (L.$$typeof === l || // Note: Memo only checks outer props here.
        // Inner props are checked in the reconciler.
        L.$$typeof === d))
          z = L.propTypes;
        else
          return;
        if (z) {
          var ee = U(L);
          g(z, b.props, "prop", ee, b);
        } else if (L.PropTypes !== void 0 && !Vi) {
          Vi = !0;
          var pe = U(L);
          C("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", pe || "Unknown");
        }
        typeof L.getDefaultProps == "function" && !L.getDefaultProps.isReactClassApproved && C("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
      }
    }
    function Yl(b) {
      {
        for (var L = Object.keys(b.props), z = 0; z < L.length; z++) {
          var ee = L[z];
          if (ee !== "children" && ee !== "key") {
            sn(b), C("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", ee), sn(null);
            break;
          }
        }
        b.ref !== null && (sn(b), C("Invalid attribute `ref` supplied to `React.Fragment`."), sn(null));
      }
    }
    var Do = {};
    function Po(b, L, z, ee, pe, ke) {
      {
        var de = A(b);
        if (!de) {
          var ae = "";
          (b === void 0 || typeof b == "object" && b !== null && Object.keys(b).length === 0) && (ae += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
          var Ue = ql();
          Ue ? ae += Ue : ae += Oo();
          var xe;
          b === null ? xe = "null" : M(b) ? xe = "array" : b !== void 0 && b.$$typeof === e ? (xe = "<" + (U(b.type) || "Unknown") + " />", ae = " Did you accidentally export a JSX literal instead of a component?") : xe = typeof b, C("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", xe, ae);
        }
        var Ne = qr(b, L, z, pe, ke);
        if (Ne == null)
          return Ne;
        if (de) {
          var it = L.children;
          if (it !== void 0)
            if (ee)
              if (M(it)) {
                for (var an = 0; an < it.length; an++)
                  Lo(it[an], b);
                Object.freeze && Object.freeze(it);
              } else
                C("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
            else
              Lo(it, b);
        }
        if (Y.call(L, "key")) {
          var Vt = U(b), Je = Object.keys(L).filter(function(tc) {
            return tc !== "key";
          }), qi = Je.length > 0 ? "{key: someKey, " + Je.join(": ..., ") + ": ...}" : "{key: someKey}";
          if (!Do[Vt + qi]) {
            var ec = Je.length > 0 ? "{" + Je.join(": ..., ") + ": ...}" : "{}";
            C(`A props object containing a "key" prop is being spread into JSX:
  let props = %s;
  <%s {...props} />
React keys must be passed directly to JSX without using spread:
  let props = %s;
  <%s key={someKey} {...props} />`, qi, Vt, ec, Vt), Do[Vt + qi] = !0;
          }
        }
        return b === i ? Yl(Ne) : Kl(Ne), Ne;
      }
    }
    function Jl(b, L, z) {
      return Po(b, L, z, !0);
    }
    function Xl(b, L, z) {
      return Po(b, L, z, !1);
    }
    var Ql = Xl, Zl = Jl;
    ic.Fragment = i, ic.jsx = Ql, ic.jsxs = Zl;
  }()), ic;
}
process.env.NODE_ENV === "production" ? k0.exports = $x() : k0.exports = jx();
var Q = k0.exports;
function sh() {
  return typeof window < "u";
}
function Al(t) {
  return I3(t) ? (t.nodeName || "").toLowerCase() : "#document";
}
function ri(t) {
  var e;
  return (t == null || (e = t.ownerDocument) == null ? void 0 : e.defaultView) || window;
}
function $r(t) {
  var e;
  return (e = (I3(t) ? t.ownerDocument : t.document) || window.document) == null ? void 0 : e.documentElement;
}
function I3(t) {
  return sh() ? t instanceof Node || t instanceof ri(t).Node : !1;
}
function Ft(t) {
  return sh() ? t instanceof Element || t instanceof ri(t).Element : !1;
}
function mi(t) {
  return sh() ? t instanceof HTMLElement || t instanceof ri(t).HTMLElement : !1;
}
function w0(t) {
  return !sh() || typeof ShadowRoot > "u" ? !1 : t instanceof ShadowRoot || t instanceof ri(t).ShadowRoot;
}
function wf(t) {
  const {
    overflow: e,
    overflowX: n,
    overflowY: i,
    display: r
  } = Pi(t);
  return /auto|scroll|overlay|hidden|clip/.test(e + i + n) && !["inline", "contents"].includes(r);
}
function zx(t) {
  return ["table", "td", "th"].includes(Al(t));
}
function ah(t) {
  return [":popover-open", ":modal"].some((e) => {
    try {
      return t.matches(e);
    } catch {
      return !1;
    }
  });
}
function cy(t) {
  const e = lh(), n = Ft(t) ? Pi(t) : t;
  return n.transform !== "none" || n.perspective !== "none" || (n.containerType ? n.containerType !== "normal" : !1) || !e && (n.backdropFilter ? n.backdropFilter !== "none" : !1) || !e && (n.filter ? n.filter !== "none" : !1) || ["transform", "perspective", "filter"].some((i) => (n.willChange || "").includes(i)) || ["paint", "layout", "strict", "content"].some((i) => (n.contain || "").includes(i));
}
function Ux(t) {
  let e = mo(t);
  for (; mi(e) && !ps(e); ) {
    if (cy(e))
      return e;
    if (ah(e))
      return null;
    e = mo(e);
  }
  return null;
}
function lh() {
  return typeof CSS > "u" || !CSS.supports ? !1 : CSS.supports("-webkit-backdrop-filter", "none");
}
function ps(t) {
  return ["html", "body", "#document"].includes(Al(t));
}
function Pi(t) {
  return ri(t).getComputedStyle(t);
}
function ch(t) {
  return Ft(t) ? {
    scrollLeft: t.scrollLeft,
    scrollTop: t.scrollTop
  } : {
    scrollLeft: t.scrollX,
    scrollTop: t.scrollY
  };
}
function mo(t) {
  if (Al(t) === "html")
    return t;
  const e = (
    // Step into the shadow DOM of the parent of a slotted node.
    t.assignedSlot || // DOM Element detected.
    t.parentNode || // ShadowRoot detected.
    w0(t) && t.host || // Fallback.
    $r(t)
  );
  return w0(e) ? e.host : e;
}
function L3(t) {
  const e = mo(t);
  return ps(e) ? t.ownerDocument ? t.ownerDocument.body : t.body : mi(e) && wf(e) ? e : L3(e);
}
function lo(t, e, n) {
  var i;
  e === void 0 && (e = []), n === void 0 && (n = !0);
  const r = L3(t), o = r === ((i = t.ownerDocument) == null ? void 0 : i.body), s = ri(r);
  if (o) {
    const a = _0(s);
    return e.concat(s, s.visualViewport || [], wf(r) ? r : [], a && n ? lo(a) : []);
  }
  return e.concat(r, lo(r, [], n));
}
function _0(t) {
  return t.parent && Object.getPrototypeOf(t.parent) ? t.frameElement : null;
}
function dk(t) {
  let e = t.activeElement;
  for (; ((n = e) == null || (n = n.shadowRoot) == null ? void 0 : n.activeElement) != null; ) {
    var n;
    e = e.shadowRoot.activeElement;
  }
  return e;
}
function qc(t, e) {
  if (!t || !e)
    return !1;
  const n = e.getRootNode == null ? void 0 : e.getRootNode();
  if (t.contains(e))
    return !0;
  if (n && w0(n)) {
    let i = e;
    for (; i; ) {
      if (t === i)
        return !0;
      i = i.parentNode || i.host;
    }
  }
  return !1;
}
function D3() {
  const t = navigator.userAgentData;
  return t != null && t.platform ? t.platform : navigator.platform;
}
function P3() {
  const t = navigator.userAgentData;
  return t && Array.isArray(t.brands) ? t.brands.map((e) => {
    let {
      brand: n,
      version: i
    } = e;
    return n + "/" + i;
  }).join(" ") : navigator.userAgent;
}
function Vx(t) {
  return Gx() ? !1 : !uk() && t.width === 0 && t.height === 0 || uk() && t.width === 1 && t.height === 1 && t.pressure === 0 && t.detail === 0 && t.pointerType === "mouse" || // iOS VoiceOver returns 0.333• for width/height.
  t.width < 1 && t.height < 1 && t.pressure === 0 && t.detail === 0 && t.pointerType === "touch";
}
function Wx() {
  return /apple/i.test(navigator.vendor);
}
function uk() {
  const t = /android/i;
  return t.test(D3()) || t.test(P3());
}
function qx() {
  return D3().toLowerCase().startsWith("mac") && !navigator.maxTouchPoints;
}
function Gx() {
  return P3().includes("jsdom/");
}
function E0(t, e) {
  const n = ["mouse", "pen"];
  return n.push("", void 0), n.includes(t);
}
function Kx(t) {
  return "nativeEvent" in t;
}
function Yx(t) {
  return t.matches("html,body");
}
function Us(t) {
  return (t == null ? void 0 : t.ownerDocument) || document;
}
function xp(t, e) {
  if (e == null)
    return !1;
  if ("composedPath" in t)
    return t.composedPath().includes(e);
  const n = t;
  return n.target != null && e.contains(n.target);
}
function Ba(t) {
  return "composedPath" in t ? t.composedPath()[0] : t.target;
}
const Jx = "input:not([type='hidden']):not([disabled]),[contenteditable]:not([contenteditable='false']),textarea:not([disabled])";
function Xx(t) {
  return mi(t) && t.matches(Jx);
}
const ir = Math.min, Pn = Math.max, Tu = Math.round, Zf = Math.floor, ms = (t) => ({
  x: t,
  y: t
}), Qx = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
}, Zx = {
  start: "end",
  end: "start"
};
function T0(t, e, n) {
  return Pn(t, ir(e, n));
}
function go(t, e) {
  return typeof t == "function" ? t(e) : t;
}
function rr(t) {
  return t.split("-")[0];
}
function Ml(t) {
  return t.split("-")[1];
}
function fy(t) {
  return t === "x" ? "y" : "x";
}
function dy(t) {
  return t === "y" ? "height" : "width";
}
function yo(t) {
  return ["top", "bottom"].includes(rr(t)) ? "y" : "x";
}
function uy(t) {
  return fy(yo(t));
}
function eA(t, e, n) {
  n === void 0 && (n = !1);
  const i = Ml(t), r = uy(t), o = dy(r);
  let s = r === "x" ? i === (n ? "end" : "start") ? "right" : "left" : i === "start" ? "bottom" : "top";
  return e.reference[o] > e.floating[o] && (s = Cu(s)), [s, Cu(s)];
}
function tA(t) {
  const e = Cu(t);
  return [C0(t), e, C0(e)];
}
function C0(t) {
  return t.replace(/start|end/g, (e) => Zx[e]);
}
function nA(t, e, n) {
  const i = ["left", "right"], r = ["right", "left"], o = ["top", "bottom"], s = ["bottom", "top"];
  switch (t) {
    case "top":
    case "bottom":
      return n ? e ? r : i : e ? i : r;
    case "left":
    case "right":
      return e ? o : s;
    default:
      return [];
  }
}
function iA(t, e, n, i) {
  const r = Ml(t);
  let o = nA(rr(t), n === "start", i);
  return r && (o = o.map((s) => s + "-" + r), e && (o = o.concat(o.map(C0)))), o;
}
function Cu(t) {
  return t.replace(/left|right|bottom|top/g, (e) => Qx[e]);
}
function rA(t) {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...t
  };
}
function hy(t) {
  return typeof t != "number" ? rA(t) : {
    top: t,
    right: t,
    bottom: t,
    left: t
  };
}
function fl(t) {
  const {
    x: e,
    y: n,
    width: i,
    height: r
  } = t;
  return {
    width: i,
    height: r,
    top: n,
    left: e,
    right: e + i,
    bottom: n + r,
    x: e,
    y: n
  };
}
function hk(t, e, n) {
  let {
    reference: i,
    floating: r
  } = t;
  const o = yo(e), s = uy(e), a = dy(s), l = rr(e), c = o === "y", f = i.x + i.width / 2 - r.width / 2, d = i.y + i.height / 2 - r.height / 2, u = i[a] / 2 - r[a] / 2;
  let h;
  switch (l) {
    case "top":
      h = {
        x: f,
        y: i.y - r.height
      };
      break;
    case "bottom":
      h = {
        x: f,
        y: i.y + i.height
      };
      break;
    case "right":
      h = {
        x: i.x + i.width,
        y: d
      };
      break;
    case "left":
      h = {
        x: i.x - r.width,
        y: d
      };
      break;
    default:
      h = {
        x: i.x,
        y: i.y
      };
  }
  switch (Ml(e)) {
    case "start":
      h[s] -= u * (n && c ? -1 : 1);
      break;
    case "end":
      h[s] += u * (n && c ? -1 : 1);
      break;
  }
  return h;
}
const oA = async (t, e, n) => {
  const {
    placement: i = "bottom",
    strategy: r = "absolute",
    middleware: o = [],
    platform: s
  } = n, a = o.filter(Boolean), l = await (s.isRTL == null ? void 0 : s.isRTL(e));
  let c = await s.getElementRects({
    reference: t,
    floating: e,
    strategy: r
  }), {
    x: f,
    y: d
  } = hk(c, i, l), u = i, h = {}, p = 0;
  for (let m = 0; m < a.length; m++) {
    const {
      name: v,
      fn: y
    } = a[m], {
      x: C,
      y: k,
      data: _,
      reset: S
    } = await y({
      x: f,
      y: d,
      initialPlacement: i,
      placement: u,
      strategy: r,
      middlewareData: h,
      rects: c,
      platform: s,
      elements: {
        reference: t,
        floating: e
      }
    });
    f = C ?? f, d = k ?? d, h = {
      ...h,
      [v]: {
        ...h[v],
        ..._
      }
    }, S && p <= 50 && (p++, typeof S == "object" && (S.placement && (u = S.placement), S.rects && (c = S.rects === !0 ? await s.getElementRects({
      reference: t,
      floating: e,
      strategy: r
    }) : S.rects), {
      x: f,
      y: d
    } = hk(c, u, l)), m = -1);
  }
  return {
    x: f,
    y: d,
    placement: u,
    strategy: r,
    middlewareData: h
  };
};
async function py(t, e) {
  var n;
  e === void 0 && (e = {});
  const {
    x: i,
    y: r,
    platform: o,
    rects: s,
    elements: a,
    strategy: l
  } = t, {
    boundary: c = "clippingAncestors",
    rootBoundary: f = "viewport",
    elementContext: d = "floating",
    altBoundary: u = !1,
    padding: h = 0
  } = go(e, t), p = hy(h), v = a[u ? d === "floating" ? "reference" : "floating" : d], y = fl(await o.getClippingRect({
    element: (n = await (o.isElement == null ? void 0 : o.isElement(v))) == null || n ? v : v.contextElement || await (o.getDocumentElement == null ? void 0 : o.getDocumentElement(a.floating)),
    boundary: c,
    rootBoundary: f,
    strategy: l
  })), C = d === "floating" ? {
    x: i,
    y: r,
    width: s.floating.width,
    height: s.floating.height
  } : s.reference, k = await (o.getOffsetParent == null ? void 0 : o.getOffsetParent(a.floating)), _ = await (o.isElement == null ? void 0 : o.isElement(k)) ? await (o.getScale == null ? void 0 : o.getScale(k)) || {
    x: 1,
    y: 1
  } : {
    x: 1,
    y: 1
  }, S = fl(o.convertOffsetParentRelativeRectToViewportRelativeRect ? await o.convertOffsetParentRelativeRectToViewportRelativeRect({
    elements: a,
    rect: C,
    offsetParent: k,
    strategy: l
  }) : C);
  return {
    top: (y.top - S.top + p.top) / _.y,
    bottom: (S.bottom - y.bottom + p.bottom) / _.y,
    left: (y.left - S.left + p.left) / _.x,
    right: (S.right - y.right + p.right) / _.x
  };
}
const sA = (t) => ({
  name: "arrow",
  options: t,
  async fn(e) {
    const {
      x: n,
      y: i,
      placement: r,
      rects: o,
      platform: s,
      elements: a,
      middlewareData: l
    } = e, {
      element: c,
      padding: f = 0
    } = go(t, e) || {};
    if (c == null)
      return {};
    const d = hy(f), u = {
      x: n,
      y: i
    }, h = uy(r), p = dy(h), m = await s.getDimensions(c), v = h === "y", y = v ? "top" : "left", C = v ? "bottom" : "right", k = v ? "clientHeight" : "clientWidth", _ = o.reference[p] + o.reference[h] - u[h] - o.floating[p], S = u[h] - o.reference[h], E = await (s.getOffsetParent == null ? void 0 : s.getOffsetParent(c));
    let x = E ? E[k] : 0;
    (!x || !await (s.isElement == null ? void 0 : s.isElement(E))) && (x = a.floating[k] || o.floating[p]);
    const N = _ / 2 - S / 2, R = x / 2 - m[p] / 2 - 1, A = ir(d[y], R), O = ir(d[C], R), B = A, U = x - m[p] - O, K = x / 2 - m[p] / 2 + N, G = T0(B, K, U), J = !l.arrow && Ml(r) != null && K !== G && o.reference[p] / 2 - (K < B ? A : O) - m[p] / 2 < 0, te = J ? K < B ? K - B : K - U : 0;
    return {
      [h]: u[h] + te,
      data: {
        [h]: G,
        centerOffset: K - G - te,
        ...J && {
          alignmentOffset: te
        }
      },
      reset: J
    };
  }
}), aA = function(t) {
  return t === void 0 && (t = {}), {
    name: "flip",
    options: t,
    async fn(e) {
      var n, i;
      const {
        placement: r,
        middlewareData: o,
        rects: s,
        initialPlacement: a,
        platform: l,
        elements: c
      } = e, {
        mainAxis: f = !0,
        crossAxis: d = !0,
        fallbackPlacements: u,
        fallbackStrategy: h = "bestFit",
        fallbackAxisSideDirection: p = "none",
        flipAlignment: m = !0,
        ...v
      } = go(t, e);
      if ((n = o.arrow) != null && n.alignmentOffset)
        return {};
      const y = rr(r), C = yo(a), k = rr(a) === a, _ = await (l.isRTL == null ? void 0 : l.isRTL(c.floating)), S = u || (k || !m ? [Cu(a)] : tA(a)), E = p !== "none";
      !u && E && S.push(...iA(a, m, p, _));
      const x = [a, ...S], N = await py(e, v), R = [];
      let A = ((i = o.flip) == null ? void 0 : i.overflows) || [];
      if (f && R.push(N[y]), d) {
        const K = eA(r, s, _);
        R.push(N[K[0]], N[K[1]]);
      }
      if (A = [...A, {
        placement: r,
        overflows: R
      }], !R.every((K) => K <= 0)) {
        var O, B;
        const K = (((O = o.flip) == null ? void 0 : O.index) || 0) + 1, G = x[K];
        if (G)
          return {
            data: {
              index: K,
              overflows: A
            },
            reset: {
              placement: G
            }
          };
        let J = (B = A.filter((te) => te.overflows[0] <= 0).sort((te, re) => te.overflows[1] - re.overflows[1])[0]) == null ? void 0 : B.placement;
        if (!J)
          switch (h) {
            case "bestFit": {
              var U;
              const te = (U = A.filter((re) => {
                if (E) {
                  const X = yo(re.placement);
                  return X === C || // Create a bias to the `y` side axis due to horizontal
                  // reading directions favoring greater width.
                  X === "y";
                }
                return !0;
              }).map((re) => [re.placement, re.overflows.filter((X) => X > 0).reduce((X, D) => X + D, 0)]).sort((re, X) => re[1] - X[1])[0]) == null ? void 0 : U[0];
              te && (J = te);
              break;
            }
            case "initialPlacement":
              J = a;
              break;
          }
        if (r !== J)
          return {
            reset: {
              placement: J
            }
          };
      }
      return {};
    }
  };
};
function F3(t) {
  const e = ir(...t.map((o) => o.left)), n = ir(...t.map((o) => o.top)), i = Pn(...t.map((o) => o.right)), r = Pn(...t.map((o) => o.bottom));
  return {
    x: e,
    y: n,
    width: i - e,
    height: r - n
  };
}
function lA(t) {
  const e = t.slice().sort((r, o) => r.y - o.y), n = [];
  let i = null;
  for (let r = 0; r < e.length; r++) {
    const o = e[r];
    !i || o.y - i.y > i.height / 2 ? n.push([o]) : n[n.length - 1].push(o), i = o;
  }
  return n.map((r) => fl(F3(r)));
}
const cA = function(t) {
  return t === void 0 && (t = {}), {
    name: "inline",
    options: t,
    async fn(e) {
      const {
        placement: n,
        elements: i,
        rects: r,
        platform: o,
        strategy: s
      } = e, {
        padding: a = 2,
        x: l,
        y: c
      } = go(t, e), f = Array.from(await (o.getClientRects == null ? void 0 : o.getClientRects(i.reference)) || []), d = lA(f), u = fl(F3(f)), h = hy(a);
      function p() {
        if (d.length === 2 && d[0].left > d[1].right && l != null && c != null)
          return d.find((v) => l > v.left - h.left && l < v.right + h.right && c > v.top - h.top && c < v.bottom + h.bottom) || u;
        if (d.length >= 2) {
          if (yo(n) === "y") {
            const A = d[0], O = d[d.length - 1], B = rr(n) === "top", U = A.top, K = O.bottom, G = B ? A.left : O.left, J = B ? A.right : O.right, te = J - G, re = K - U;
            return {
              top: U,
              bottom: K,
              left: G,
              right: J,
              width: te,
              height: re,
              x: G,
              y: U
            };
          }
          const v = rr(n) === "left", y = Pn(...d.map((A) => A.right)), C = ir(...d.map((A) => A.left)), k = d.filter((A) => v ? A.left === C : A.right === y), _ = k[0].top, S = k[k.length - 1].bottom, E = C, x = y, N = x - E, R = S - _;
          return {
            top: _,
            bottom: S,
            left: E,
            right: x,
            width: N,
            height: R,
            x: E,
            y: _
          };
        }
        return u;
      }
      const m = await o.getElementRects({
        reference: {
          getBoundingClientRect: p
        },
        floating: i.floating,
        strategy: s
      });
      return r.reference.x !== m.reference.x || r.reference.y !== m.reference.y || r.reference.width !== m.reference.width || r.reference.height !== m.reference.height ? {
        reset: {
          rects: m
        }
      } : {};
    }
  };
};
async function fA(t, e) {
  const {
    placement: n,
    platform: i,
    elements: r
  } = t, o = await (i.isRTL == null ? void 0 : i.isRTL(r.floating)), s = rr(n), a = Ml(n), l = yo(n) === "y", c = ["left", "top"].includes(s) ? -1 : 1, f = o && l ? -1 : 1, d = go(e, t);
  let {
    mainAxis: u,
    crossAxis: h,
    alignmentAxis: p
  } = typeof d == "number" ? {
    mainAxis: d,
    crossAxis: 0,
    alignmentAxis: null
  } : {
    mainAxis: d.mainAxis || 0,
    crossAxis: d.crossAxis || 0,
    alignmentAxis: d.alignmentAxis
  };
  return a && typeof p == "number" && (h = a === "end" ? p * -1 : p), l ? {
    x: h * f,
    y: u * c
  } : {
    x: u * c,
    y: h * f
  };
}
const dA = function(t) {
  return t === void 0 && (t = 0), {
    name: "offset",
    options: t,
    async fn(e) {
      var n, i;
      const {
        x: r,
        y: o,
        placement: s,
        middlewareData: a
      } = e, l = await fA(e, t);
      return s === ((n = a.offset) == null ? void 0 : n.placement) && (i = a.arrow) != null && i.alignmentOffset ? {} : {
        x: r + l.x,
        y: o + l.y,
        data: {
          ...l,
          placement: s
        }
      };
    }
  };
}, uA = function(t) {
  return t === void 0 && (t = {}), {
    name: "shift",
    options: t,
    async fn(e) {
      const {
        x: n,
        y: i,
        placement: r
      } = e, {
        mainAxis: o = !0,
        crossAxis: s = !1,
        limiter: a = {
          fn: (v) => {
            let {
              x: y,
              y: C
            } = v;
            return {
              x: y,
              y: C
            };
          }
        },
        ...l
      } = go(t, e), c = {
        x: n,
        y: i
      }, f = await py(e, l), d = yo(rr(r)), u = fy(d);
      let h = c[u], p = c[d];
      if (o) {
        const v = u === "y" ? "top" : "left", y = u === "y" ? "bottom" : "right", C = h + f[v], k = h - f[y];
        h = T0(C, h, k);
      }
      if (s) {
        const v = d === "y" ? "top" : "left", y = d === "y" ? "bottom" : "right", C = p + f[v], k = p - f[y];
        p = T0(C, p, k);
      }
      const m = a.fn({
        ...e,
        [u]: h,
        [d]: p
      });
      return {
        ...m,
        data: {
          x: m.x - n,
          y: m.y - i,
          enabled: {
            [u]: o,
            [d]: s
          }
        }
      };
    }
  };
}, hA = function(t) {
  return t === void 0 && (t = {}), {
    options: t,
    fn(e) {
      const {
        x: n,
        y: i,
        placement: r,
        rects: o,
        middlewareData: s
      } = e, {
        offset: a = 0,
        mainAxis: l = !0,
        crossAxis: c = !0
      } = go(t, e), f = {
        x: n,
        y: i
      }, d = yo(r), u = fy(d);
      let h = f[u], p = f[d];
      const m = go(a, e), v = typeof m == "number" ? {
        mainAxis: m,
        crossAxis: 0
      } : {
        mainAxis: 0,
        crossAxis: 0,
        ...m
      };
      if (l) {
        const k = u === "y" ? "height" : "width", _ = o.reference[u] - o.floating[k] + v.mainAxis, S = o.reference[u] + o.reference[k] - v.mainAxis;
        h < _ ? h = _ : h > S && (h = S);
      }
      if (c) {
        var y, C;
        const k = u === "y" ? "width" : "height", _ = ["top", "left"].includes(rr(r)), S = o.reference[d] - o.floating[k] + (_ && ((y = s.offset) == null ? void 0 : y[d]) || 0) + (_ ? 0 : v.crossAxis), E = o.reference[d] + o.reference[k] + (_ ? 0 : ((C = s.offset) == null ? void 0 : C[d]) || 0) - (_ ? v.crossAxis : 0);
        p < S ? p = S : p > E && (p = E);
      }
      return {
        [u]: h,
        [d]: p
      };
    }
  };
}, pA = function(t) {
  return t === void 0 && (t = {}), {
    name: "size",
    options: t,
    async fn(e) {
      var n, i;
      const {
        placement: r,
        rects: o,
        platform: s,
        elements: a
      } = e, {
        apply: l = () => {
        },
        ...c
      } = go(t, e), f = await py(e, c), d = rr(r), u = Ml(r), h = yo(r) === "y", {
        width: p,
        height: m
      } = o.floating;
      let v, y;
      d === "top" || d === "bottom" ? (v = d, y = u === (await (s.isRTL == null ? void 0 : s.isRTL(a.floating)) ? "start" : "end") ? "left" : "right") : (y = d, v = u === "end" ? "top" : "bottom");
      const C = m - f.top - f.bottom, k = p - f.left - f.right, _ = ir(m - f[v], C), S = ir(p - f[y], k), E = !e.middlewareData.shift;
      let x = _, N = S;
      if ((n = e.middlewareData.shift) != null && n.enabled.x && (N = k), (i = e.middlewareData.shift) != null && i.enabled.y && (x = C), E && !u) {
        const A = Pn(f.left, 0), O = Pn(f.right, 0), B = Pn(f.top, 0), U = Pn(f.bottom, 0);
        h ? N = p - 2 * (A !== 0 || O !== 0 ? A + O : Pn(f.left, f.right)) : x = m - 2 * (B !== 0 || U !== 0 ? B + U : Pn(f.top, f.bottom));
      }
      await l({
        ...e,
        availableWidth: N,
        availableHeight: x
      });
      const R = await s.getDimensions(a.floating);
      return p !== R.width || m !== R.height ? {
        reset: {
          rects: !0
        }
      } : {};
    }
  };
};
function B3(t) {
  const e = Pi(t);
  let n = parseFloat(e.width) || 0, i = parseFloat(e.height) || 0;
  const r = mi(t), o = r ? t.offsetWidth : n, s = r ? t.offsetHeight : i, a = Tu(n) !== o || Tu(i) !== s;
  return a && (n = o, i = s), {
    width: n,
    height: i,
    $: a
  };
}
function my(t) {
  return Ft(t) ? t : t.contextElement;
}
function Ja(t) {
  const e = my(t);
  if (!mi(e))
    return ms(1);
  const n = e.getBoundingClientRect(), {
    width: i,
    height: r,
    $: o
  } = B3(e);
  let s = (o ? Tu(n.width) : n.width) / i, a = (o ? Tu(n.height) : n.height) / r;
  return (!s || !Number.isFinite(s)) && (s = 1), (!a || !Number.isFinite(a)) && (a = 1), {
    x: s,
    y: a
  };
}
const mA = /* @__PURE__ */ ms(0);
function H3(t) {
  const e = ri(t);
  return !lh() || !e.visualViewport ? mA : {
    x: e.visualViewport.offsetLeft,
    y: e.visualViewport.offsetTop
  };
}
function gA(t, e, n) {
  return e === void 0 && (e = !1), !n || e && n !== ri(t) ? !1 : e;
}
function ra(t, e, n, i) {
  e === void 0 && (e = !1), n === void 0 && (n = !1);
  const r = t.getBoundingClientRect(), o = my(t);
  let s = ms(1);
  e && (i ? Ft(i) && (s = Ja(i)) : s = Ja(t));
  const a = gA(o, n, i) ? H3(o) : ms(0);
  let l = (r.left + a.x) / s.x, c = (r.top + a.y) / s.y, f = r.width / s.x, d = r.height / s.y;
  if (o) {
    const u = ri(o), h = i && Ft(i) ? ri(i) : i;
    let p = u, m = _0(p);
    for (; m && i && h !== p; ) {
      const v = Ja(m), y = m.getBoundingClientRect(), C = Pi(m), k = y.left + (m.clientLeft + parseFloat(C.paddingLeft)) * v.x, _ = y.top + (m.clientTop + parseFloat(C.paddingTop)) * v.y;
      l *= v.x, c *= v.y, f *= v.x, d *= v.y, l += k, c += _, p = ri(m), m = _0(p);
    }
  }
  return fl({
    width: f,
    height: d,
    x: l,
    y: c
  });
}
function yA(t) {
  let {
    elements: e,
    rect: n,
    offsetParent: i,
    strategy: r
  } = t;
  const o = r === "fixed", s = $r(i), a = e ? ah(e.floating) : !1;
  if (i === s || a && o)
    return n;
  let l = {
    scrollLeft: 0,
    scrollTop: 0
  }, c = ms(1);
  const f = ms(0), d = mi(i);
  if ((d || !d && !o) && ((Al(i) !== "body" || wf(s)) && (l = ch(i)), mi(i))) {
    const u = ra(i);
    c = Ja(i), f.x = u.x + i.clientLeft, f.y = u.y + i.clientTop;
  }
  return {
    width: n.width * c.x,
    height: n.height * c.y,
    x: n.x * c.x - l.scrollLeft * c.x + f.x,
    y: n.y * c.y - l.scrollTop * c.y + f.y
  };
}
function vA(t) {
  return Array.from(t.getClientRects());
}
function S0(t, e) {
  const n = ch(t).scrollLeft;
  return e ? e.left + n : ra($r(t)).left + n;
}
function bA(t) {
  const e = $r(t), n = ch(t), i = t.ownerDocument.body, r = Pn(e.scrollWidth, e.clientWidth, i.scrollWidth, i.clientWidth), o = Pn(e.scrollHeight, e.clientHeight, i.scrollHeight, i.clientHeight);
  let s = -n.scrollLeft + S0(t);
  const a = -n.scrollTop;
  return Pi(i).direction === "rtl" && (s += Pn(e.clientWidth, i.clientWidth) - r), {
    width: r,
    height: o,
    x: s,
    y: a
  };
}
function kA(t, e) {
  const n = ri(t), i = $r(t), r = n.visualViewport;
  let o = i.clientWidth, s = i.clientHeight, a = 0, l = 0;
  if (r) {
    o = r.width, s = r.height;
    const c = lh();
    (!c || c && e === "fixed") && (a = r.offsetLeft, l = r.offsetTop);
  }
  return {
    width: o,
    height: s,
    x: a,
    y: l
  };
}
function wA(t, e) {
  const n = ra(t, !0, e === "fixed"), i = n.top + t.clientTop, r = n.left + t.clientLeft, o = mi(t) ? Ja(t) : ms(1), s = t.clientWidth * o.x, a = t.clientHeight * o.y, l = r * o.x, c = i * o.y;
  return {
    width: s,
    height: a,
    x: l,
    y: c
  };
}
function pk(t, e, n) {
  let i;
  if (e === "viewport")
    i = kA(t, n);
  else if (e === "document")
    i = bA($r(t));
  else if (Ft(e))
    i = wA(e, n);
  else {
    const r = H3(t);
    i = {
      ...e,
      x: e.x - r.x,
      y: e.y - r.y
    };
  }
  return fl(i);
}
function $3(t, e) {
  const n = mo(t);
  return n === e || !Ft(n) || ps(n) ? !1 : Pi(n).position === "fixed" || $3(n, e);
}
function _A(t, e) {
  const n = e.get(t);
  if (n)
    return n;
  let i = lo(t, [], !1).filter((a) => Ft(a) && Al(a) !== "body"), r = null;
  const o = Pi(t).position === "fixed";
  let s = o ? mo(t) : t;
  for (; Ft(s) && !ps(s); ) {
    const a = Pi(s), l = cy(s);
    !l && a.position === "fixed" && (r = null), (o ? !l && !r : !l && a.position === "static" && !!r && ["absolute", "fixed"].includes(r.position) || wf(s) && !l && $3(t, s)) ? i = i.filter((f) => f !== s) : r = a, s = mo(s);
  }
  return e.set(t, i), i;
}
function EA(t) {
  let {
    element: e,
    boundary: n,
    rootBoundary: i,
    strategy: r
  } = t;
  const s = [...n === "clippingAncestors" ? ah(e) ? [] : _A(e, this._c) : [].concat(n), i], a = s[0], l = s.reduce((c, f) => {
    const d = pk(e, f, r);
    return c.top = Pn(d.top, c.top), c.right = ir(d.right, c.right), c.bottom = ir(d.bottom, c.bottom), c.left = Pn(d.left, c.left), c;
  }, pk(e, a, r));
  return {
    width: l.right - l.left,
    height: l.bottom - l.top,
    x: l.left,
    y: l.top
  };
}
function TA(t) {
  const {
    width: e,
    height: n
  } = B3(t);
  return {
    width: e,
    height: n
  };
}
function CA(t, e, n) {
  const i = mi(e), r = $r(e), o = n === "fixed", s = ra(t, !0, o, e);
  let a = {
    scrollLeft: 0,
    scrollTop: 0
  };
  const l = ms(0);
  if (i || !i && !o)
    if ((Al(e) !== "body" || wf(r)) && (a = ch(e)), i) {
      const h = ra(e, !0, o, e);
      l.x = h.x + e.clientLeft, l.y = h.y + e.clientTop;
    } else r && (l.x = S0(r));
  let c = 0, f = 0;
  if (r && !i && !o) {
    const h = r.getBoundingClientRect();
    f = h.top + a.scrollTop, c = h.left + a.scrollLeft - // RTL <body> scrollbar.
    S0(r, h);
  }
  const d = s.left + a.scrollLeft - l.x - c, u = s.top + a.scrollTop - l.y - f;
  return {
    x: d,
    y: u,
    width: s.width,
    height: s.height
  };
}
function Ap(t) {
  return Pi(t).position === "static";
}
function mk(t, e) {
  if (!mi(t) || Pi(t).position === "fixed")
    return null;
  if (e)
    return e(t);
  let n = t.offsetParent;
  return $r(t) === n && (n = n.ownerDocument.body), n;
}
function j3(t, e) {
  const n = ri(t);
  if (ah(t))
    return n;
  if (!mi(t)) {
    let r = mo(t);
    for (; r && !ps(r); ) {
      if (Ft(r) && !Ap(r))
        return r;
      r = mo(r);
    }
    return n;
  }
  let i = mk(t, e);
  for (; i && zx(i) && Ap(i); )
    i = mk(i, e);
  return i && ps(i) && Ap(i) && !cy(i) ? n : i || Ux(t) || n;
}
const SA = async function(t) {
  const e = this.getOffsetParent || j3, n = this.getDimensions, i = await n(t.floating);
  return {
    reference: CA(t.reference, await e(t.floating), t.strategy),
    floating: {
      x: 0,
      y: 0,
      width: i.width,
      height: i.height
    }
  };
};
function xA(t) {
  return Pi(t).direction === "rtl";
}
const AA = {
  convertOffsetParentRelativeRectToViewportRelativeRect: yA,
  getDocumentElement: $r,
  getClippingRect: EA,
  getOffsetParent: j3,
  getElementRects: SA,
  getClientRects: vA,
  getDimensions: TA,
  getScale: Ja,
  isElement: Ft,
  isRTL: xA
};
function MA(t, e) {
  let n = null, i;
  const r = $r(t);
  function o() {
    var a;
    clearTimeout(i), (a = n) == null || a.disconnect(), n = null;
  }
  function s(a, l) {
    a === void 0 && (a = !1), l === void 0 && (l = 1), o();
    const {
      left: c,
      top: f,
      width: d,
      height: u
    } = t.getBoundingClientRect();
    if (a || e(), !d || !u)
      return;
    const h = Zf(f), p = Zf(r.clientWidth - (c + d)), m = Zf(r.clientHeight - (f + u)), v = Zf(c), C = {
      rootMargin: -h + "px " + -p + "px " + -m + "px " + -v + "px",
      threshold: Pn(0, ir(1, l)) || 1
    };
    let k = !0;
    function _(S) {
      const E = S[0].intersectionRatio;
      if (E !== l) {
        if (!k)
          return s();
        E ? s(!1, E) : i = setTimeout(() => {
          s(!1, 1e-7);
        }, 1e3);
      }
      k = !1;
    }
    try {
      n = new IntersectionObserver(_, {
        ...C,
        // Handle <iframe>s
        root: r.ownerDocument
      });
    } catch {
      n = new IntersectionObserver(_, C);
    }
    n.observe(t);
  }
  return s(!0), o;
}
function NA(t, e, n, i) {
  i === void 0 && (i = {});
  const {
    ancestorScroll: r = !0,
    ancestorResize: o = !0,
    elementResize: s = typeof ResizeObserver == "function",
    layoutShift: a = typeof IntersectionObserver == "function",
    animationFrame: l = !1
  } = i, c = my(t), f = r || o ? [...c ? lo(c) : [], ...lo(e)] : [];
  f.forEach((y) => {
    r && y.addEventListener("scroll", n, {
      passive: !0
    }), o && y.addEventListener("resize", n);
  });
  const d = c && a ? MA(c, n) : null;
  let u = -1, h = null;
  s && (h = new ResizeObserver((y) => {
    let [C] = y;
    C && C.target === c && h && (h.unobserve(e), cancelAnimationFrame(u), u = requestAnimationFrame(() => {
      var k;
      (k = h) == null || k.observe(e);
    })), n();
  }), c && !l && h.observe(c), h.observe(e));
  let p, m = l ? ra(t) : null;
  l && v();
  function v() {
    const y = ra(t);
    m && (y.x !== m.x || y.y !== m.y || y.width !== m.width || y.height !== m.height) && n(), m = y, p = requestAnimationFrame(v);
  }
  return n(), () => {
    var y;
    f.forEach((C) => {
      r && C.removeEventListener("scroll", n), o && C.removeEventListener("resize", n);
    }), d == null || d(), (y = h) == null || y.disconnect(), h = null, l && cancelAnimationFrame(p);
  };
}
const OA = dA, RA = uA, IA = aA, LA = pA, gk = sA, DA = cA, PA = hA, FA = (t, e, n) => {
  const i = /* @__PURE__ */ new Map(), r = {
    platform: AA,
    ...n
  }, o = {
    ...r.platform,
    _c: i
  };
  return oA(t, e, {
    ...r,
    platform: o
  });
};
var Qd = typeof document < "u" ? oy : We;
function Su(t, e) {
  if (t === e)
    return !0;
  if (typeof t != typeof e)
    return !1;
  if (typeof t == "function" && t.toString() === e.toString())
    return !0;
  let n, i, r;
  if (t && e && typeof t == "object") {
    if (Array.isArray(t)) {
      if (n = t.length, n !== e.length) return !1;
      for (i = n; i-- !== 0; )
        if (!Su(t[i], e[i]))
          return !1;
      return !0;
    }
    if (r = Object.keys(t), n = r.length, n !== Object.keys(e).length)
      return !1;
    for (i = n; i-- !== 0; )
      if (!{}.hasOwnProperty.call(e, r[i]))
        return !1;
    for (i = n; i-- !== 0; ) {
      const o = r[i];
      if (!(o === "_owner" && t.$$typeof) && !Su(t[o], e[o]))
        return !1;
    }
    return !0;
  }
  return t !== t && e !== e;
}
function z3(t) {
  return typeof window > "u" ? 1 : (t.ownerDocument.defaultView || window).devicePixelRatio || 1;
}
function yk(t, e) {
  const n = z3(t);
  return Math.round(e * n) / n;
}
function Mp(t) {
  const e = he.useRef(t);
  return Qd(() => {
    e.current = t;
  }), e;
}
function BA(t) {
  t === void 0 && (t = {});
  const {
    placement: e = "bottom",
    strategy: n = "absolute",
    middleware: i = [],
    platform: r,
    elements: {
      reference: o,
      floating: s
    } = {},
    transform: a = !0,
    whileElementsMounted: l,
    open: c
  } = t, [f, d] = he.useState({
    x: 0,
    y: 0,
    strategy: n,
    placement: e,
    middlewareData: {},
    isPositioned: !1
  }), [u, h] = he.useState(i);
  Su(u, i) || h(i);
  const [p, m] = he.useState(null), [v, y] = he.useState(null), C = he.useCallback((re) => {
    re !== E.current && (E.current = re, m(re));
  }, []), k = he.useCallback((re) => {
    re !== x.current && (x.current = re, y(re));
  }, []), _ = o || p, S = s || v, E = he.useRef(null), x = he.useRef(null), N = he.useRef(f), R = l != null, A = Mp(l), O = Mp(r), B = Mp(c), U = he.useCallback(() => {
    if (!E.current || !x.current)
      return;
    const re = {
      placement: e,
      strategy: n,
      middleware: u
    };
    O.current && (re.platform = O.current), FA(E.current, x.current, re).then((X) => {
      const D = {
        ...X,
        // The floating element's position may be recomputed while it's closed
        // but still mounted (such as when transitioning out). To ensure
        // `isPositioned` will be `false` initially on the next open, avoid
        // setting it to `true` when `open === false` (must be specified).
        isPositioned: B.current !== !1
      };
      K.current && !Su(N.current, D) && (N.current = D, Hx.flushSync(() => {
        d(D);
      }));
    });
  }, [u, e, n, O, B]);
  Qd(() => {
    c === !1 && N.current.isPositioned && (N.current.isPositioned = !1, d((re) => ({
      ...re,
      isPositioned: !1
    })));
  }, [c]);
  const K = he.useRef(!1);
  Qd(() => (K.current = !0, () => {
    K.current = !1;
  }), []), Qd(() => {
    if (_ && (E.current = _), S && (x.current = S), _ && S) {
      if (A.current)
        return A.current(_, S, U);
      U();
    }
  }, [_, S, U, A, R]);
  const G = he.useMemo(() => ({
    reference: E,
    floating: x,
    setReference: C,
    setFloating: k
  }), [C, k]), J = he.useMemo(() => ({
    reference: _,
    floating: S
  }), [_, S]), te = he.useMemo(() => {
    const re = {
      position: n,
      left: 0,
      top: 0
    };
    if (!J.floating)
      return re;
    const X = yk(J.floating, f.x), D = yk(J.floating, f.y);
    return a ? {
      ...re,
      transform: "translate(" + X + "px, " + D + "px)",
      ...z3(J.floating) >= 1.5 && {
        willChange: "transform"
      }
    } : {
      position: n,
      left: X,
      top: D
    };
  }, [n, a, J.floating, f.x, f.y]);
  return he.useMemo(() => ({
    ...f,
    update: U,
    refs: G,
    elements: J,
    floatingStyles: te
  }), [f, U, G, J, te]);
}
const HA = (t) => {
  function e(n) {
    return {}.hasOwnProperty.call(n, "current");
  }
  return {
    name: "arrow",
    options: t,
    fn(n) {
      const {
        element: i,
        padding: r
      } = typeof t == "function" ? t(n) : t;
      return i && e(i) ? i.current != null ? gk({
        element: i.current,
        padding: r
      }).fn(n) : {} : i ? gk({
        element: i,
        padding: r
      }).fn(n) : {};
    }
  };
}, _s = (t, e) => ({
  ...OA(t),
  options: [t, e]
}), fh = (t, e) => ({
  ...RA(t),
  options: [t, e]
}), vk = (t, e) => ({
  ...PA(t),
  options: [t, e]
}), gs = (t, e) => ({
  ...IA(t),
  options: [t, e]
}), gy = (t, e) => ({
  ...LA(t),
  options: [t, e]
}), x0 = (t, e) => ({
  ...DA(t),
  options: [t, e]
}), U3 = (t, e) => ({
  ...HA(t),
  options: [t, e]
}), V3 = {
  ...he
}, $A = V3.useInsertionEffect, jA = $A || ((t) => t());
function Xo(t) {
  const e = he.useRef(() => {
    if (process.env.NODE_ENV !== "production")
      throw new Error("Cannot call an event handler while rendering.");
  });
  return jA(() => {
    e.current = t;
  }), he.useCallback(function() {
    for (var n = arguments.length, i = new Array(n), r = 0; r < n; r++)
      i[r] = arguments[r];
    return e.current == null ? void 0 : e.current(...i);
  }, []);
}
var Ii = typeof document < "u" ? oy : We;
let bk = !1, zA = 0;
const kk = () => (
  // Ensure the id is unique with multiple independent versions of Floating UI
  // on <React 18
  "floating-ui-" + Math.random().toString(36).slice(2, 6) + zA++
);
function UA() {
  const [t, e] = he.useState(() => bk ? kk() : void 0);
  return Ii(() => {
    t == null && e(kk());
  }, []), he.useEffect(() => {
    bk = !0;
  }, []), t;
}
const VA = V3.useId, W3 = VA || UA;
let A0;
process.env.NODE_ENV !== "production" && (A0 = /* @__PURE__ */ new Set());
function WA() {
  for (var t, e = arguments.length, n = new Array(e), i = 0; i < e; i++)
    n[i] = arguments[i];
  const r = "Floating UI: " + n.join(" ");
  if (!((t = A0) != null && t.has(r))) {
    var o;
    (o = A0) == null || o.add(r), console.error(r);
  }
}
function qA() {
  const t = /* @__PURE__ */ new Map();
  return {
    emit(e, n) {
      var i;
      (i = t.get(e)) == null || i.forEach((r) => r(n));
    },
    on(e, n) {
      t.set(e, [...t.get(e) || [], n]);
    },
    off(e, n) {
      var i;
      t.set(e, ((i = t.get(e)) == null ? void 0 : i.filter((r) => r !== n)) || []);
    }
  };
}
const GA = /* @__PURE__ */ he.createContext(null), KA = /* @__PURE__ */ he.createContext(null), yy = () => {
  var t;
  return ((t = he.useContext(GA)) == null ? void 0 : t.id) || null;
}, vy = () => he.useContext(KA);
function by(t) {
  return "data-floating-ui-" + t;
}
function Vs(t) {
  const e = wt(t);
  return Ii(() => {
    e.current = t;
  }), e;
}
const wk = /* @__PURE__ */ by("safe-polygon");
function Zd(t, e, n) {
  return n && !E0(n) ? 0 : typeof t == "number" ? t : t == null ? void 0 : t[e];
}
function YA(t, e) {
  e === void 0 && (e = {});
  const {
    open: n,
    onOpenChange: i,
    dataRef: r,
    events: o,
    elements: s
  } = t, {
    enabled: a = !0,
    delay: l = 0,
    handleClose: c = null,
    mouseOnly: f = !1,
    restMs: d = 0,
    move: u = !0
  } = e, h = vy(), p = yy(), m = Vs(c), v = Vs(l), y = Vs(n), C = he.useRef(), k = he.useRef(-1), _ = he.useRef(), S = he.useRef(-1), E = he.useRef(!0), x = he.useRef(!1), N = he.useRef(() => {
  }), R = he.useRef(!1), A = he.useCallback(() => {
    var J;
    const te = (J = r.current.openEvent) == null ? void 0 : J.type;
    return (te == null ? void 0 : te.includes("mouse")) && te !== "mousedown";
  }, [r]);
  he.useEffect(() => {
    if (!a) return;
    function J(te) {
      let {
        open: re
      } = te;
      re || (clearTimeout(k.current), clearTimeout(S.current), E.current = !0, R.current = !1);
    }
    return o.on("openchange", J), () => {
      o.off("openchange", J);
    };
  }, [a, o]), he.useEffect(() => {
    if (!a || !m.current || !n) return;
    function J(re) {
      A() && i(!1, re, "hover");
    }
    const te = Us(s.floating).documentElement;
    return te.addEventListener("mouseleave", J), () => {
      te.removeEventListener("mouseleave", J);
    };
  }, [s.floating, n, i, a, m, A]);
  const O = he.useCallback(function(J, te, re) {
    te === void 0 && (te = !0), re === void 0 && (re = "hover");
    const X = Zd(v.current, "close", C.current);
    X && !_.current ? (clearTimeout(k.current), k.current = window.setTimeout(() => i(!1, J, re), X)) : te && (clearTimeout(k.current), i(!1, J, re));
  }, [v, i]), B = Xo(() => {
    N.current(), _.current = void 0;
  }), U = Xo(() => {
    if (x.current) {
      const J = Us(s.floating).body;
      J.style.pointerEvents = "", J.removeAttribute(wk), x.current = !1;
    }
  });
  he.useEffect(() => {
    if (!a) return;
    function J() {
      return r.current.openEvent ? ["click", "mousedown"].includes(r.current.openEvent.type) : !1;
    }
    function te(me) {
      if (clearTimeout(k.current), E.current = !1, f && !E0(C.current) || d > 0 && !Zd(v.current, "open"))
        return;
      const Se = Zd(v.current, "open", C.current);
      Se ? k.current = window.setTimeout(() => {
        y.current || i(!0, me, "hover");
      }, Se) : i(!0, me, "hover");
    }
    function re(me) {
      if (J()) return;
      N.current();
      const Se = Us(s.floating);
      if (clearTimeout(S.current), R.current = !1, m.current && r.current.floatingContext) {
        n || clearTimeout(k.current), _.current = m.current({
          ...r.current.floatingContext,
          tree: h,
          x: me.clientX,
          y: me.clientY,
          onClose() {
            U(), B(), O(me, !0, "safe-polygon");
          }
        });
        const Oe = _.current;
        Se.addEventListener("mousemove", Oe), N.current = () => {
          Se.removeEventListener("mousemove", Oe);
        };
        return;
      }
      (C.current === "touch" ? !qc(s.floating, me.relatedTarget) : !0) && O(me);
    }
    function X(me) {
      J() || r.current.floatingContext && (m.current == null || m.current({
        ...r.current.floatingContext,
        tree: h,
        x: me.clientX,
        y: me.clientY,
        onClose() {
          U(), B(), O(me);
        }
      })(me));
    }
    if (Ft(s.domReference)) {
      var D;
      const me = s.domReference;
      return n && me.addEventListener("mouseleave", X), (D = s.floating) == null || D.addEventListener("mouseleave", X), u && me.addEventListener("mousemove", te, {
        once: !0
      }), me.addEventListener("mouseenter", te), me.addEventListener("mouseleave", re), () => {
        var Se;
        n && me.removeEventListener("mouseleave", X), (Se = s.floating) == null || Se.removeEventListener("mouseleave", X), u && me.removeEventListener("mousemove", te), me.removeEventListener("mouseenter", te), me.removeEventListener("mouseleave", re);
      };
    }
  }, [s, a, t, f, d, u, O, B, U, i, n, y, h, v, m, r]), Ii(() => {
    var J;
    if (a && n && (J = m.current) != null && J.__options.blockPointerEvents && A()) {
      x.current = !0;
      const re = s.floating;
      if (Ft(s.domReference) && re) {
        var te;
        const X = Us(s.floating).body;
        X.setAttribute(wk, "");
        const D = s.domReference, me = h == null || (te = h.nodesRef.current.find((Se) => Se.id === p)) == null || (te = te.context) == null ? void 0 : te.elements.floating;
        return me && (me.style.pointerEvents = ""), X.style.pointerEvents = "none", D.style.pointerEvents = "auto", re.style.pointerEvents = "auto", () => {
          X.style.pointerEvents = "", D.style.pointerEvents = "", re.style.pointerEvents = "";
        };
      }
    }
  }, [a, n, p, s, h, m, A]), Ii(() => {
    n || (C.current = void 0, R.current = !1, B(), U());
  }, [n, B, U]), he.useEffect(() => () => {
    B(), clearTimeout(k.current), clearTimeout(S.current), U();
  }, [a, s.domReference, B, U]);
  const K = he.useMemo(() => {
    function J(te) {
      C.current = te.pointerType;
    }
    return {
      onPointerDown: J,
      onPointerEnter: J,
      onMouseMove(te) {
        const {
          nativeEvent: re
        } = te;
        function X() {
          !E.current && !y.current && i(!0, re, "hover");
        }
        f && !E0(C.current) || n || d === 0 || R.current && te.movementX ** 2 + te.movementY ** 2 < 2 || (clearTimeout(S.current), C.current === "touch" ? X() : (R.current = !0, S.current = window.setTimeout(X, d)));
      }
    };
  }, [f, i, n, y, d]), G = he.useMemo(() => ({
    onMouseEnter() {
      clearTimeout(k.current);
    },
    onMouseLeave(J) {
      O(J.nativeEvent, !1);
    }
  }), [O]);
  return he.useMemo(() => a ? {
    reference: K,
    floating: G
  } : {}, [a, K, G]);
}
const M0 = () => {
}, q3 = /* @__PURE__ */ he.createContext({
  delay: 0,
  initialDelay: 0,
  timeoutMs: 0,
  currentId: null,
  setCurrentId: M0,
  setState: M0,
  isInstantPhase: !1
}), G3 = () => he.useContext(q3);
function JA(t) {
  const {
    children: e,
    delay: n,
    timeoutMs: i = 0
  } = t, [r, o] = he.useReducer((l, c) => ({
    ...l,
    ...c
  }), {
    delay: n,
    timeoutMs: i,
    initialDelay: n,
    currentId: null,
    isInstantPhase: !1
  }), s = he.useRef(null), a = he.useCallback((l) => {
    o({
      currentId: l
    });
  }, []);
  return Ii(() => {
    r.currentId ? s.current === null ? s.current = r.currentId : r.isInstantPhase || o({
      isInstantPhase: !0
    }) : (r.isInstantPhase && o({
      isInstantPhase: !1
    }), s.current = null);
  }, [r.currentId, r.isInstantPhase]), /* @__PURE__ */ he.createElement(q3.Provider, {
    value: he.useMemo(() => ({
      ...r,
      setState: o,
      setCurrentId: a
    }), [r, a])
  }, e);
}
function XA(t, e) {
  e === void 0 && (e = {});
  const {
    open: n,
    onOpenChange: i,
    floatingId: r
  } = t, {
    id: o,
    enabled: s = !0
  } = e, a = o ?? r, l = G3(), {
    currentId: c,
    setCurrentId: f,
    initialDelay: d,
    setState: u,
    timeoutMs: h
  } = l;
  return Ii(() => {
    s && c && (u({
      delay: {
        open: 1,
        close: Zd(d, "close")
      }
    }), c !== a && i(!1));
  }, [s, a, i, u, c, d]), Ii(() => {
    function p() {
      i(!1), u({
        delay: d,
        currentId: null
      });
    }
    if (s && c && !n && c === a) {
      if (h) {
        const m = window.setTimeout(p, h);
        return () => {
          clearTimeout(m);
        };
      }
      p();
    }
  }, [s, n, u, c, a, i, d, h]), Ii(() => {
    s && (f === M0 || !n || f(a));
  }, [s, n, f, a]), l;
}
function Np(t, e) {
  let n = t.filter((r) => {
    var o;
    return r.parentId === e && ((o = r.context) == null ? void 0 : o.open);
  }), i = n;
  for (; i.length; )
    i = t.filter((r) => {
      var o;
      return (o = i) == null ? void 0 : o.some((s) => {
        var a;
        return r.parentId === s.id && ((a = r.context) == null ? void 0 : a.open);
      });
    }), n = n.concat(i);
  return n;
}
const QA = "data-floating-ui-focusable", ZA = {
  pointerdown: "onPointerDown",
  mousedown: "onMouseDown",
  click: "onClick"
}, eM = {
  pointerdown: "onPointerDownCapture",
  mousedown: "onMouseDownCapture",
  click: "onClickCapture"
}, _k = (t) => {
  var e, n;
  return {
    escapeKey: typeof t == "boolean" ? t : (e = t == null ? void 0 : t.escapeKey) != null ? e : !1,
    outsidePress: typeof t == "boolean" ? t : (n = t == null ? void 0 : t.outsidePress) != null ? n : !0
  };
};
function K3(t, e) {
  e === void 0 && (e = {});
  const {
    open: n,
    onOpenChange: i,
    elements: r,
    dataRef: o
  } = t, {
    enabled: s = !0,
    escapeKey: a = !0,
    outsidePress: l = !0,
    outsidePressEvent: c = "pointerdown",
    referencePress: f = !1,
    referencePressEvent: d = "pointerdown",
    ancestorScroll: u = !1,
    bubbles: h,
    capture: p
  } = e, m = vy(), v = Xo(typeof l == "function" ? l : () => !1), y = typeof l == "function" ? v : l, C = he.useRef(!1), k = he.useRef(!1), {
    escapeKey: _,
    outsidePress: S
  } = _k(h), {
    escapeKey: E,
    outsidePress: x
  } = _k(p), N = he.useRef(!1), R = Xo((G) => {
    var J;
    if (!n || !s || !a || G.key !== "Escape" || N.current)
      return;
    const te = (J = o.current.floatingContext) == null ? void 0 : J.nodeId, re = m ? Np(m.nodesRef.current, te) : [];
    if (!_ && (G.stopPropagation(), re.length > 0)) {
      let X = !0;
      if (re.forEach((D) => {
        var me;
        if ((me = D.context) != null && me.open && !D.context.dataRef.current.__escapeKeyBubbles) {
          X = !1;
          return;
        }
      }), !X)
        return;
    }
    i(!1, Kx(G) ? G.nativeEvent : G, "escape-key");
  }), A = Xo((G) => {
    var J;
    const te = () => {
      var re;
      R(G), (re = Ba(G)) == null || re.removeEventListener("keydown", te);
    };
    (J = Ba(G)) == null || J.addEventListener("keydown", te);
  }), O = Xo((G) => {
    var J;
    const te = C.current;
    C.current = !1;
    const re = k.current;
    if (k.current = !1, c === "click" && re || te || typeof y == "function" && !y(G))
      return;
    const X = Ba(G), D = "[" + by("inert") + "]", me = Us(r.floating).querySelectorAll(D);
    let Se = Ft(X) ? X : null;
    for (; Se && !ps(Se); ) {
      const Re = mo(Se);
      if (ps(Re) || !Ft(Re))
        break;
      Se = Re;
    }
    if (me.length && Ft(X) && !Yx(X) && // Clicked on a direct ancestor (e.g. FloatingOverlay).
    !qc(X, r.floating) && // If the target root element contains none of the markers, then the
    // element was injected after the floating element rendered.
    Array.from(me).every((Re) => !qc(Se, Re)))
      return;
    if (mi(X) && K) {
      const Re = X.clientWidth > 0 && X.scrollWidth > X.clientWidth, qe = X.clientHeight > 0 && X.scrollHeight > X.clientHeight;
      let Ye = qe && G.offsetX > X.clientWidth;
      if (qe && Pi(X).direction === "rtl" && (Ye = G.offsetX <= X.offsetWidth - X.clientWidth), Ye || Re && G.offsetY > X.clientHeight)
        return;
    }
    const F = (J = o.current.floatingContext) == null ? void 0 : J.nodeId, Oe = m && Np(m.nodesRef.current, F).some((Re) => {
      var qe;
      return xp(G, (qe = Re.context) == null ? void 0 : qe.elements.floating);
    });
    if (xp(G, r.floating) || xp(G, r.domReference) || Oe)
      return;
    const ft = m ? Np(m.nodesRef.current, F) : [];
    if (ft.length > 0) {
      let Re = !0;
      if (ft.forEach((qe) => {
        var Ye;
        if ((Ye = qe.context) != null && Ye.open && !qe.context.dataRef.current.__outsidePressBubbles) {
          Re = !1;
          return;
        }
      }), !Re)
        return;
    }
    i(!1, G, "outside-press");
  }), B = Xo((G) => {
    var J;
    const te = () => {
      var re;
      O(G), (re = Ba(G)) == null || re.removeEventListener(c, te);
    };
    (J = Ba(G)) == null || J.addEventListener(c, te);
  });
  he.useEffect(() => {
    if (!n || !s)
      return;
    o.current.__escapeKeyBubbles = _, o.current.__outsidePressBubbles = S;
    let G = -1;
    function J(me) {
      i(!1, me, "ancestor-scroll");
    }
    function te() {
      window.clearTimeout(G), N.current = !0;
    }
    function re() {
      G = window.setTimeout(
        () => {
          N.current = !1;
        },
        // 0ms or 1ms don't work in Safari. 5ms appears to consistently work.
        // Only apply to WebKit for the test to remain 0ms.
        lh() ? 5 : 0
      );
    }
    const X = Us(r.floating);
    a && (X.addEventListener("keydown", E ? A : R, E), X.addEventListener("compositionstart", te), X.addEventListener("compositionend", re)), y && X.addEventListener(c, x ? B : O, x);
    let D = [];
    return u && (Ft(r.domReference) && (D = lo(r.domReference)), Ft(r.floating) && (D = D.concat(lo(r.floating))), !Ft(r.reference) && r.reference && r.reference.contextElement && (D = D.concat(lo(r.reference.contextElement)))), D = D.filter((me) => {
      var Se;
      return me !== ((Se = X.defaultView) == null ? void 0 : Se.visualViewport);
    }), D.forEach((me) => {
      me.addEventListener("scroll", J, {
        passive: !0
      });
    }), () => {
      a && (X.removeEventListener("keydown", E ? A : R, E), X.removeEventListener("compositionstart", te), X.removeEventListener("compositionend", re)), y && X.removeEventListener(c, x ? B : O, x), D.forEach((me) => {
        me.removeEventListener("scroll", J);
      }), window.clearTimeout(G);
    };
  }, [o, r, a, y, c, n, i, u, s, _, S, R, E, A, O, x, B]), he.useEffect(() => {
    C.current = !1;
  }, [y, c]);
  const U = he.useMemo(() => ({
    onKeyDown: R,
    [ZA[d]]: (G) => {
      f && i(!1, G.nativeEvent, "reference-press");
    }
  }), [R, i, f, d]), K = he.useMemo(() => ({
    onKeyDown: R,
    onMouseDown() {
      k.current = !0;
    },
    onMouseUp() {
      k.current = !0;
    },
    [eM[c]]: () => {
      C.current = !0;
    }
  }), [R, c]);
  return he.useMemo(() => s ? {
    reference: U,
    floating: K
  } : {}, [s, U, K]);
}
function tM(t) {
  const {
    open: e = !1,
    onOpenChange: n,
    elements: i
  } = t, r = W3(), o = he.useRef({}), [s] = he.useState(() => qA()), a = yy() != null;
  if (process.env.NODE_ENV !== "production") {
    const h = i.reference;
    h && !Ft(h) && WA("Cannot pass a virtual element to the `elements.reference` option,", "as it must be a real DOM element. Use `refs.setPositionReference()`", "instead.");
  }
  const [l, c] = he.useState(i.reference), f = Xo((h, p, m) => {
    o.current.openEvent = h ? p : void 0, s.emit("openchange", {
      open: h,
      event: p,
      reason: m,
      nested: a
    }), n == null || n(h, p, m);
  }), d = he.useMemo(() => ({
    setPositionReference: c
  }), []), u = he.useMemo(() => ({
    reference: l || i.reference || null,
    floating: i.floating || null,
    domReference: i.reference
  }), [l, i.reference, i.floating]);
  return he.useMemo(() => ({
    dataRef: o,
    open: e,
    onOpenChange: f,
    elements: u,
    events: s,
    floatingId: r,
    refs: d
  }), [e, f, u, s, r, d]);
}
function _f(t) {
  t === void 0 && (t = {});
  const {
    nodeId: e
  } = t, n = tM({
    ...t,
    elements: {
      reference: null,
      floating: null,
      ...t.elements
    }
  }), i = t.rootContext || n, r = i.elements, [o, s] = he.useState(null), [a, l] = he.useState(null), f = (r == null ? void 0 : r.reference) || o, d = he.useRef(null), u = vy();
  Ii(() => {
    f && (d.current = f);
  }, [f]);
  const h = BA({
    ...t,
    elements: {
      ...r,
      ...a && {
        reference: a
      }
    }
  }), p = he.useCallback((k) => {
    const _ = Ft(k) ? {
      getBoundingClientRect: () => k.getBoundingClientRect(),
      contextElement: k
    } : k;
    l(_), h.refs.setReference(_);
  }, [h.refs]), m = he.useCallback((k) => {
    (Ft(k) || k === null) && (d.current = k, s(k)), (Ft(h.refs.reference.current) || h.refs.reference.current === null || // Don't allow setting virtual elements using the old technique back to
    // `null` to support `positionReference` + an unstable `reference`
    // callback ref.
    k !== null && !Ft(k)) && h.refs.setReference(k);
  }, [h.refs]), v = he.useMemo(() => ({
    ...h.refs,
    setReference: m,
    setPositionReference: p,
    domReference: d
  }), [h.refs, m, p]), y = he.useMemo(() => ({
    ...h.elements,
    domReference: f
  }), [h.elements, f]), C = he.useMemo(() => ({
    ...h,
    ...i,
    refs: v,
    elements: y,
    nodeId: e
  }), [h, v, y, e, i]);
  return Ii(() => {
    i.dataRef.current.floatingContext = C;
    const k = u == null ? void 0 : u.nodesRef.current.find((_) => _.id === e);
    k && (k.context = C);
  }), he.useMemo(() => ({
    ...h,
    context: C,
    refs: v,
    elements: y
  }), [h, v, y, C]);
}
function nM(t, e) {
  e === void 0 && (e = {});
  const {
    open: n,
    onOpenChange: i,
    events: r,
    dataRef: o,
    elements: s
  } = t, {
    enabled: a = !0,
    visibleOnly: l = !0
  } = e, c = he.useRef(!1), f = he.useRef(), d = he.useRef(!0);
  he.useEffect(() => {
    if (!a) return;
    const h = ri(s.domReference);
    function p() {
      !n && mi(s.domReference) && s.domReference === dk(Us(s.domReference)) && (c.current = !0);
    }
    function m() {
      d.current = !0;
    }
    return h.addEventListener("blur", p), h.addEventListener("keydown", m, !0), () => {
      h.removeEventListener("blur", p), h.removeEventListener("keydown", m, !0);
    };
  }, [s.domReference, n, a]), he.useEffect(() => {
    if (!a) return;
    function h(p) {
      let {
        reason: m
      } = p;
      (m === "reference-press" || m === "escape-key") && (c.current = !0);
    }
    return r.on("openchange", h), () => {
      r.off("openchange", h);
    };
  }, [r, a]), he.useEffect(() => () => {
    clearTimeout(f.current);
  }, []);
  const u = he.useMemo(() => ({
    onPointerDown(h) {
      Vx(h.nativeEvent) || (d.current = !1);
    },
    onMouseLeave() {
      c.current = !1;
    },
    onFocus(h) {
      if (c.current) return;
      const p = Ba(h.nativeEvent);
      if (l && Ft(p))
        try {
          if (Wx() && qx()) throw Error();
          if (!p.matches(":focus-visible")) return;
        } catch {
          if (!d.current && !Xx(p))
            return;
        }
      i(!0, h.nativeEvent, "focus");
    },
    onBlur(h) {
      c.current = !1;
      const p = h.relatedTarget, m = h.nativeEvent, v = Ft(p) && p.hasAttribute(by("focus-guard")) && p.getAttribute("data-type") === "outside";
      f.current = window.setTimeout(() => {
        var y;
        const C = dk(s.domReference ? s.domReference.ownerDocument : document);
        !p && C === s.domReference || qc((y = o.current.floatingContext) == null ? void 0 : y.refs.floating.current, C) || qc(s.domReference, C) || v || i(!1, m, "focus");
      });
    }
  }), [o, s.domReference, i, l]);
  return he.useMemo(() => a ? {
    reference: u
  } : {}, [a, u]);
}
const Ek = "active", Tk = "selected";
function Op(t, e, n) {
  const i = /* @__PURE__ */ new Map(), r = n === "item";
  let o = t;
  if (r && t) {
    const {
      [Ek]: s,
      [Tk]: a,
      ...l
    } = t;
    o = l;
  }
  return {
    ...n === "floating" && {
      tabIndex: -1,
      [QA]: ""
    },
    ...o,
    ...e.map((s) => {
      const a = s ? s[n] : null;
      return typeof a == "function" ? t ? a(t) : null : a;
    }).concat(t).reduce((s, a) => (a && Object.entries(a).forEach((l) => {
      let [c, f] = l;
      if (!(r && [Ek, Tk].includes(c)))
        if (c.indexOf("on") === 0) {
          if (i.has(c) || i.set(c, []), typeof f == "function") {
            var d;
            (d = i.get(c)) == null || d.push(f), s[c] = function() {
              for (var u, h = arguments.length, p = new Array(h), m = 0; m < h; m++)
                p[m] = arguments[m];
              return (u = i.get(c)) == null ? void 0 : u.map((v) => v(...p)).find((v) => v !== void 0);
            };
          }
        } else
          s[c] = f;
    }), s), {})
  };
}
function Y3(t) {
  t === void 0 && (t = []);
  const e = t.map((a) => a == null ? void 0 : a.reference), n = t.map((a) => a == null ? void 0 : a.floating), i = t.map((a) => a == null ? void 0 : a.item), r = he.useCallback(
    (a) => Op(a, t, "reference"),
    // eslint-disable-next-line react-hooks/exhaustive-deps
    e
  ), o = he.useCallback(
    (a) => Op(a, t, "floating"),
    // eslint-disable-next-line react-hooks/exhaustive-deps
    n
  ), s = he.useCallback(
    (a) => Op(a, t, "item"),
    // eslint-disable-next-line react-hooks/exhaustive-deps
    i
  );
  return he.useMemo(() => ({
    getReferenceProps: r,
    getFloatingProps: o,
    getItemProps: s
  }), [r, o, s]);
}
const iM = /* @__PURE__ */ new Map([["select", "listbox"], ["combobox", "listbox"], ["label", !1]]);
function rM(t, e) {
  var n;
  e === void 0 && (e = {});
  const {
    open: i,
    floatingId: r
  } = t, {
    enabled: o = !0,
    role: s = "dialog"
  } = e, a = (n = iM.get(s)) != null ? n : s, l = W3(), f = yy() != null, d = he.useMemo(() => a === "tooltip" || s === "label" ? {
    ["aria-" + (s === "label" ? "labelledby" : "describedby")]: i ? r : void 0
  } : {
    "aria-expanded": i ? "true" : "false",
    "aria-haspopup": a === "alertdialog" ? "dialog" : a,
    "aria-controls": i ? r : void 0,
    ...a === "listbox" && {
      role: "combobox"
    },
    ...a === "menu" && {
      id: l
    },
    ...a === "menu" && f && {
      role: "menuitem"
    },
    ...s === "select" && {
      "aria-autocomplete": "none"
    },
    ...s === "combobox" && {
      "aria-autocomplete": "list"
    }
  }, [a, r, f, i, l, s]), u = he.useMemo(() => {
    const p = {
      id: r,
      ...a && {
        role: a
      }
    };
    return a === "tooltip" || s === "label" ? p : {
      ...p,
      ...a === "menu" && {
        "aria-labelledby": l
      }
    };
  }, [a, r, l, s]), h = he.useCallback((p) => {
    let {
      active: m,
      selected: v
    } = p;
    const y = {
      role: "option",
      ...m && {
        id: r + "-option"
      }
    };
    switch (s) {
      case "select":
        return {
          ...y,
          "aria-selected": m && v
        };
      case "combobox":
        return {
          ...y,
          ...m && {
            "aria-selected": !0
          }
        };
    }
    return {};
  }, [r, s]);
  return he.useMemo(() => o ? {
    reference: d,
    floating: u,
    item: h
  } : {}, [o, d, u, h]);
}
const Ck = (t) => t.replace(/[A-Z]+(?![a-z])|[A-Z]/g, (e, n) => (n ? "-" : "") + e.toLowerCase());
function xa(t, e) {
  return typeof t == "function" ? t(e) : t;
}
function oM(t, e) {
  const [n, i] = he.useState(t);
  return t && !n && i(!0), he.useEffect(() => {
    if (!t && n) {
      const r = setTimeout(() => i(!1), e);
      return () => clearTimeout(r);
    }
  }, [t, n, e]), n;
}
function sM(t, e) {
  e === void 0 && (e = {});
  const {
    open: n,
    elements: {
      floating: i
    }
  } = t, {
    duration: r = 250
  } = e, s = (typeof r == "number" ? r : r.close) || 0, [a, l] = he.useState("unmounted"), c = oM(n, s);
  return !c && a === "close" && l("unmounted"), Ii(() => {
    if (i) {
      if (n) {
        l("initial");
        const f = requestAnimationFrame(() => {
          l("open");
        });
        return () => {
          cancelAnimationFrame(f);
        };
      }
      l("close");
    }
  }, [n, i]), {
    isMounted: c,
    status: a
  };
}
function J3(t, e) {
  e === void 0 && (e = {});
  const {
    initial: n = {
      opacity: 0
    },
    open: i,
    close: r,
    common: o,
    duration: s = 250
  } = e, a = t.placement, l = a.split("-")[0], c = he.useMemo(() => ({
    side: l,
    placement: a
  }), [l, a]), f = typeof s == "number", d = (f ? s : s.open) || 0, u = (f ? s : s.close) || 0, [h, p] = he.useState(() => ({
    ...xa(o, c),
    ...xa(n, c)
  })), {
    isMounted: m,
    status: v
  } = sM(t, {
    duration: s
  }), y = Vs(n), C = Vs(i), k = Vs(r), _ = Vs(o);
  return Ii(() => {
    const S = xa(y.current, c), E = xa(k.current, c), x = xa(_.current, c), N = xa(C.current, c) || Object.keys(S).reduce((R, A) => (R[A] = "", R), {});
    if (v === "initial" && p((R) => ({
      transitionProperty: R.transitionProperty,
      ...x,
      ...S
    })), v === "open" && p({
      transitionProperty: Object.keys(N).map(Ck).join(","),
      transitionDuration: d + "ms",
      ...x,
      ...N
    }), v === "close") {
      const R = E || S;
      p({
        transitionProperty: Object.keys(R).map(Ck).join(","),
        transitionDuration: u + "ms",
        ...x,
        ...R
      });
    }
  }, [u, k, y, C, _, d, v, c]), {
    isMounted: m,
    styles: h
  };
}
function An(t) {
  this.content = t;
}
An.prototype = {
  constructor: An,
  find: function(t) {
    for (var e = 0; e < this.content.length; e += 2)
      if (this.content[e] === t) return e;
    return -1;
  },
  // :: (string) → ?any
  // Retrieve the value stored under `key`, or return undefined when
  // no such key exists.
  get: function(t) {
    var e = this.find(t);
    return e == -1 ? void 0 : this.content[e + 1];
  },
  // :: (string, any, ?string) → OrderedMap
  // Create a new map by replacing the value of `key` with a new
  // value, or adding a binding to the end of the map. If `newKey` is
  // given, the key of the binding will be replaced with that key.
  update: function(t, e, n) {
    var i = n && n != t ? this.remove(n) : this, r = i.find(t), o = i.content.slice();
    return r == -1 ? o.push(n || t, e) : (o[r + 1] = e, n && (o[r] = n)), new An(o);
  },
  // :: (string) → OrderedMap
  // Return a map with the given key removed, if it existed.
  remove: function(t) {
    var e = this.find(t);
    if (e == -1) return this;
    var n = this.content.slice();
    return n.splice(e, 2), new An(n);
  },
  // :: (string, any) → OrderedMap
  // Add a new key to the start of the map.
  addToStart: function(t, e) {
    return new An([t, e].concat(this.remove(t).content));
  },
  // :: (string, any) → OrderedMap
  // Add a new key to the end of the map.
  addToEnd: function(t, e) {
    var n = this.remove(t).content.slice();
    return n.push(t, e), new An(n);
  },
  // :: (string, string, any) → OrderedMap
  // Add a key after the given key. If `place` is not found, the new
  // key is added to the end.
  addBefore: function(t, e, n) {
    var i = this.remove(e), r = i.content.slice(), o = i.find(t);
    return r.splice(o == -1 ? r.length : o, 0, e, n), new An(r);
  },
  // :: ((key: string, value: any))
  // Call the given function for each key/value pair in the map, in
  // order.
  forEach: function(t) {
    for (var e = 0; e < this.content.length; e += 2)
      t(this.content[e], this.content[e + 1]);
  },
  // :: (union<Object, OrderedMap>) → OrderedMap
  // Create a new map by prepending the keys in this map that don't
  // appear in `map` before the keys in `map`.
  prepend: function(t) {
    return t = An.from(t), t.size ? new An(t.content.concat(this.subtract(t).content)) : this;
  },
  // :: (union<Object, OrderedMap>) → OrderedMap
  // Create a new map by appending the keys in this map that don't
  // appear in `map` after the keys in `map`.
  append: function(t) {
    return t = An.from(t), t.size ? new An(this.subtract(t).content.concat(t.content)) : this;
  },
  // :: (union<Object, OrderedMap>) → OrderedMap
  // Create a map containing all the keys in this map that don't
  // appear in `map`.
  subtract: function(t) {
    var e = this;
    t = An.from(t);
    for (var n = 0; n < t.content.length; n += 2)
      e = e.remove(t.content[n]);
    return e;
  },
  // :: () → Object
  // Turn ordered map into a plain object.
  toObject: function() {
    var t = {};
    return this.forEach(function(e, n) {
      t[e] = n;
    }), t;
  },
  // :: number
  // The amount of keys in this map.
  get size() {
    return this.content.length >> 1;
  }
};
An.from = function(t) {
  if (t instanceof An) return t;
  var e = [];
  if (t) for (var n in t) e.push(n, t[n]);
  return new An(e);
};
function X3(t, e, n) {
  for (let i = 0; ; i++) {
    if (i == t.childCount || i == e.childCount)
      return t.childCount == e.childCount ? null : n;
    let r = t.child(i), o = e.child(i);
    if (r == o) {
      n += r.nodeSize;
      continue;
    }
    if (!r.sameMarkup(o))
      return n;
    if (r.isText && r.text != o.text) {
      for (let s = 0; r.text[s] == o.text[s]; s++)
        n++;
      return n;
    }
    if (r.content.size || o.content.size) {
      let s = X3(r.content, o.content, n + 1);
      if (s != null)
        return s;
    }
    n += r.nodeSize;
  }
}
function Q3(t, e, n, i) {
  for (let r = t.childCount, o = e.childCount; ; ) {
    if (r == 0 || o == 0)
      return r == o ? null : { a: n, b: i };
    let s = t.child(--r), a = e.child(--o), l = s.nodeSize;
    if (s == a) {
      n -= l, i -= l;
      continue;
    }
    if (!s.sameMarkup(a))
      return { a: n, b: i };
    if (s.isText && s.text != a.text) {
      let c = 0, f = Math.min(s.text.length, a.text.length);
      for (; c < f && s.text[s.text.length - c - 1] == a.text[a.text.length - c - 1]; )
        c++, n--, i--;
      return { a: n, b: i };
    }
    if (s.content.size || a.content.size) {
      let c = Q3(s.content, a.content, n - 1, i - 1);
      if (c)
        return c;
    }
    n -= l, i -= l;
  }
}
class ie {
  /**
  @internal
  */
  constructor(e, n) {
    if (this.content = e, this.size = n || 0, n == null)
      for (let i = 0; i < e.length; i++)
        this.size += e[i].nodeSize;
  }
  /**
  Invoke a callback for all descendant nodes between the given two
  positions (relative to start of this fragment). Doesn't descend
  into a node when the callback returns `false`.
  */
  nodesBetween(e, n, i, r = 0, o) {
    for (let s = 0, a = 0; a < n; s++) {
      let l = this.content[s], c = a + l.nodeSize;
      if (c > e && i(l, r + a, o || null, s) !== !1 && l.content.size) {
        let f = a + 1;
        l.nodesBetween(Math.max(0, e - f), Math.min(l.content.size, n - f), i, r + f);
      }
      a = c;
    }
  }
  /**
  Call the given callback for every descendant node. `pos` will be
  relative to the start of the fragment. The callback may return
  `false` to prevent traversal of a given node's children.
  */
  descendants(e) {
    this.nodesBetween(0, this.size, e);
  }
  /**
  Extract the text between `from` and `to`. See the same method on
  [`Node`](https://prosemirror.net/docs/ref/#model.Node.textBetween).
  */
  textBetween(e, n, i, r) {
    let o = "", s = !0;
    return this.nodesBetween(e, n, (a, l) => {
      let c = a.isText ? a.text.slice(Math.max(e, l) - l, n - l) : a.isLeaf ? r ? typeof r == "function" ? r(a) : r : a.type.spec.leafText ? a.type.spec.leafText(a) : "" : "";
      a.isBlock && (a.isLeaf && c || a.isTextblock) && i && (s ? s = !1 : o += i), o += c;
    }, 0), o;
  }
  /**
  Create a new fragment containing the combined content of this
  fragment and the other.
  */
  append(e) {
    if (!e.size)
      return this;
    if (!this.size)
      return e;
    let n = this.lastChild, i = e.firstChild, r = this.content.slice(), o = 0;
    for (n.isText && n.sameMarkup(i) && (r[r.length - 1] = n.withText(n.text + i.text), o = 1); o < e.content.length; o++)
      r.push(e.content[o]);
    return new ie(r, this.size + e.size);
  }
  /**
  Cut out the sub-fragment between the two given positions.
  */
  cut(e, n = this.size) {
    if (e == 0 && n == this.size)
      return this;
    let i = [], r = 0;
    if (n > e)
      for (let o = 0, s = 0; s < n; o++) {
        let a = this.content[o], l = s + a.nodeSize;
        l > e && ((s < e || l > n) && (a.isText ? a = a.cut(Math.max(0, e - s), Math.min(a.text.length, n - s)) : a = a.cut(Math.max(0, e - s - 1), Math.min(a.content.size, n - s - 1))), i.push(a), r += a.nodeSize), s = l;
      }
    return new ie(i, r);
  }
  /**
  @internal
  */
  cutByIndex(e, n) {
    return e == n ? ie.empty : e == 0 && n == this.content.length ? this : new ie(this.content.slice(e, n));
  }
  /**
  Create a new fragment in which the node at the given index is
  replaced by the given node.
  */
  replaceChild(e, n) {
    let i = this.content[e];
    if (i == n)
      return this;
    let r = this.content.slice(), o = this.size + n.nodeSize - i.nodeSize;
    return r[e] = n, new ie(r, o);
  }
  /**
  Create a new fragment by prepending the given node to this
  fragment.
  */
  addToStart(e) {
    return new ie([e].concat(this.content), this.size + e.nodeSize);
  }
  /**
  Create a new fragment by appending the given node to this
  fragment.
  */
  addToEnd(e) {
    return new ie(this.content.concat(e), this.size + e.nodeSize);
  }
  /**
  Compare this fragment to another one.
  */
  eq(e) {
    if (this.content.length != e.content.length)
      return !1;
    for (let n = 0; n < this.content.length; n++)
      if (!this.content[n].eq(e.content[n]))
        return !1;
    return !0;
  }
  /**
  The first child of the fragment, or `null` if it is empty.
  */
  get firstChild() {
    return this.content.length ? this.content[0] : null;
  }
  /**
  The last child of the fragment, or `null` if it is empty.
  */
  get lastChild() {
    return this.content.length ? this.content[this.content.length - 1] : null;
  }
  /**
  The number of child nodes in this fragment.
  */
  get childCount() {
    return this.content.length;
  }
  /**
  Get the child node at the given index. Raise an error when the
  index is out of range.
  */
  child(e) {
    let n = this.content[e];
    if (!n)
      throw new RangeError("Index " + e + " out of range for " + this);
    return n;
  }
  /**
  Get the child node at the given index, if it exists.
  */
  maybeChild(e) {
    return this.content[e] || null;
  }
  /**
  Call `f` for every child node, passing the node, its offset
  into this parent node, and its index.
  */
  forEach(e) {
    for (let n = 0, i = 0; n < this.content.length; n++) {
      let r = this.content[n];
      e(r, i, n), i += r.nodeSize;
    }
  }
  /**
  Find the first position at which this fragment and another
  fragment differ, or `null` if they are the same.
  */
  findDiffStart(e, n = 0) {
    return X3(this, e, n);
  }
  /**
  Find the first position, searching from the end, at which this
  fragment and the given fragment differ, or `null` if they are
  the same. Since this position will not be the same in both
  nodes, an object with two separate positions is returned.
  */
  findDiffEnd(e, n = this.size, i = e.size) {
    return Q3(this, e, n, i);
  }
  /**
  Find the index and inner offset corresponding to a given relative
  position in this fragment. The result object will be reused
  (overwritten) the next time the function is called. @internal
  */
  findIndex(e, n = -1) {
    if (e == 0)
      return ed(0, e);
    if (e == this.size)
      return ed(this.content.length, e);
    if (e > this.size || e < 0)
      throw new RangeError(`Position ${e} outside of fragment (${this})`);
    for (let i = 0, r = 0; ; i++) {
      let o = this.child(i), s = r + o.nodeSize;
      if (s >= e)
        return s == e || n > 0 ? ed(i + 1, s) : ed(i, r);
      r = s;
    }
  }
  /**
  Return a debugging string that describes this fragment.
  */
  toString() {
    return "<" + this.toStringInner() + ">";
  }
  /**
  @internal
  */
  toStringInner() {
    return this.content.join(", ");
  }
  /**
  Create a JSON-serializeable representation of this fragment.
  */
  toJSON() {
    return this.content.length ? this.content.map((e) => e.toJSON()) : null;
  }
  /**
  Deserialize a fragment from its JSON representation.
  */
  static fromJSON(e, n) {
    if (!n)
      return ie.empty;
    if (!Array.isArray(n))
      throw new RangeError("Invalid input for Fragment.fromJSON");
    return new ie(n.map(e.nodeFromJSON));
  }
  /**
  Build a fragment from an array of nodes. Ensures that adjacent
  text nodes with the same marks are joined together.
  */
  static fromArray(e) {
    if (!e.length)
      return ie.empty;
    let n, i = 0;
    for (let r = 0; r < e.length; r++) {
      let o = e[r];
      i += o.nodeSize, r && o.isText && e[r - 1].sameMarkup(o) ? (n || (n = e.slice(0, r)), n[n.length - 1] = o.withText(n[n.length - 1].text + o.text)) : n && n.push(o);
    }
    return new ie(n || e, i);
  }
  /**
  Create a fragment from something that can be interpreted as a
  set of nodes. For `null`, it returns the empty fragment. For a
  fragment, the fragment itself. For a node or array of nodes, a
  fragment containing those nodes.
  */
  static from(e) {
    if (!e)
      return ie.empty;
    if (e instanceof ie)
      return e;
    if (Array.isArray(e))
      return this.fromArray(e);
    if (e.attrs)
      return new ie([e], e.nodeSize);
    throw new RangeError("Can not convert " + e + " to a Fragment" + (e.nodesBetween ? " (looks like multiple versions of prosemirror-model were loaded)" : ""));
  }
}
ie.empty = new ie([], 0);
const Rp = { index: 0, offset: 0 };
function ed(t, e) {
  return Rp.index = t, Rp.offset = e, Rp;
}
function xu(t, e) {
  if (t === e)
    return !0;
  if (!(t && typeof t == "object") || !(e && typeof e == "object"))
    return !1;
  let n = Array.isArray(t);
  if (Array.isArray(e) != n)
    return !1;
  if (n) {
    if (t.length != e.length)
      return !1;
    for (let i = 0; i < t.length; i++)
      if (!xu(t[i], e[i]))
        return !1;
  } else {
    for (let i in t)
      if (!(i in e) || !xu(t[i], e[i]))
        return !1;
    for (let i in e)
      if (!(i in t))
        return !1;
  }
  return !0;
}
let Rt = class N0 {
  /**
  @internal
  */
  constructor(e, n) {
    this.type = e, this.attrs = n;
  }
  /**
  Given a set of marks, create a new set which contains this one as
  well, in the right position. If this mark is already in the set,
  the set itself is returned. If any marks that are set to be
  [exclusive](https://prosemirror.net/docs/ref/#model.MarkSpec.excludes) with this mark are present,
  those are replaced by this one.
  */
  addToSet(e) {
    let n, i = !1;
    for (let r = 0; r < e.length; r++) {
      let o = e[r];
      if (this.eq(o))
        return e;
      if (this.type.excludes(o.type))
        n || (n = e.slice(0, r));
      else {
        if (o.type.excludes(this.type))
          return e;
        !i && o.type.rank > this.type.rank && (n || (n = e.slice(0, r)), n.push(this), i = !0), n && n.push(o);
      }
    }
    return n || (n = e.slice()), i || n.push(this), n;
  }
  /**
  Remove this mark from the given set, returning a new set. If this
  mark is not in the set, the set itself is returned.
  */
  removeFromSet(e) {
    for (let n = 0; n < e.length; n++)
      if (this.eq(e[n]))
        return e.slice(0, n).concat(e.slice(n + 1));
    return e;
  }
  /**
  Test whether this mark is in the given set of marks.
  */
  isInSet(e) {
    for (let n = 0; n < e.length; n++)
      if (this.eq(e[n]))
        return !0;
    return !1;
  }
  /**
  Test whether this mark has the same type and attributes as
  another mark.
  */
  eq(e) {
    return this == e || this.type == e.type && xu(this.attrs, e.attrs);
  }
  /**
  Convert this mark to a JSON-serializeable representation.
  */
  toJSON() {
    let e = { type: this.type.name };
    for (let n in this.attrs) {
      e.attrs = this.attrs;
      break;
    }
    return e;
  }
  /**
  Deserialize a mark from JSON.
  */
  static fromJSON(e, n) {
    if (!n)
      throw new RangeError("Invalid input for Mark.fromJSON");
    let i = e.marks[n.type];
    if (!i)
      throw new RangeError(`There is no mark type ${n.type} in this schema`);
    let r = i.create(n.attrs);
    return i.checkAttrs(r.attrs), r;
  }
  /**
  Test whether two sets of marks are identical.
  */
  static sameSet(e, n) {
    if (e == n)
      return !0;
    if (e.length != n.length)
      return !1;
    for (let i = 0; i < e.length; i++)
      if (!e[i].eq(n[i]))
        return !1;
    return !0;
  }
  /**
  Create a properly sorted mark set from null, a single mark, or an
  unsorted array of marks.
  */
  static setFrom(e) {
    if (!e || Array.isArray(e) && e.length == 0)
      return N0.none;
    if (e instanceof N0)
      return [e];
    let n = e.slice();
    return n.sort((i, r) => i.type.rank - r.type.rank), n;
  }
};
Rt.none = [];
class Au extends Error {
}
class be {
  /**
  Create a slice. When specifying a non-zero open depth, you must
  make sure that there are nodes of at least that depth at the
  appropriate side of the fragment—i.e. if the fragment is an
  empty paragraph node, `openStart` and `openEnd` can't be greater
  than 1.
  
  It is not necessary for the content of open nodes to conform to
  the schema's content constraints, though it should be a valid
  start/end/middle for such a node, depending on which sides are
  open.
  */
  constructor(e, n, i) {
    this.content = e, this.openStart = n, this.openEnd = i;
  }
  /**
  The size this slice would add when inserted into a document.
  */
  get size() {
    return this.content.size - this.openStart - this.openEnd;
  }
  /**
  @internal
  */
  insertAt(e, n) {
    let i = e5(this.content, e + this.openStart, n);
    return i && new be(i, this.openStart, this.openEnd);
  }
  /**
  @internal
  */
  removeBetween(e, n) {
    return new be(Z3(this.content, e + this.openStart, n + this.openStart), this.openStart, this.openEnd);
  }
  /**
  Tests whether this slice is equal to another slice.
  */
  eq(e) {
    return this.content.eq(e.content) && this.openStart == e.openStart && this.openEnd == e.openEnd;
  }
  /**
  @internal
  */
  toString() {
    return this.content + "(" + this.openStart + "," + this.openEnd + ")";
  }
  /**
  Convert a slice to a JSON-serializable representation.
  */
  toJSON() {
    if (!this.content.size)
      return null;
    let e = { content: this.content.toJSON() };
    return this.openStart > 0 && (e.openStart = this.openStart), this.openEnd > 0 && (e.openEnd = this.openEnd), e;
  }
  /**
  Deserialize a slice from its JSON representation.
  */
  static fromJSON(e, n) {
    if (!n)
      return be.empty;
    let i = n.openStart || 0, r = n.openEnd || 0;
    if (typeof i != "number" || typeof r != "number")
      throw new RangeError("Invalid input for Slice.fromJSON");
    return new be(ie.fromJSON(e, n.content), i, r);
  }
  /**
  Create a slice from a fragment by taking the maximum possible
  open value on both side of the fragment.
  */
  static maxOpen(e, n = !0) {
    let i = 0, r = 0;
    for (let o = e.firstChild; o && !o.isLeaf && (n || !o.type.spec.isolating); o = o.firstChild)
      i++;
    for (let o = e.lastChild; o && !o.isLeaf && (n || !o.type.spec.isolating); o = o.lastChild)
      r++;
    return new be(e, i, r);
  }
}
be.empty = new be(ie.empty, 0, 0);
function Z3(t, e, n) {
  let { index: i, offset: r } = t.findIndex(e), o = t.maybeChild(i), { index: s, offset: a } = t.findIndex(n);
  if (r == e || o.isText) {
    if (a != n && !t.child(s).isText)
      throw new RangeError("Removing non-flat range");
    return t.cut(0, e).append(t.cut(n));
  }
  if (i != s)
    throw new RangeError("Removing non-flat range");
  return t.replaceChild(i, o.copy(Z3(o.content, e - r - 1, n - r - 1)));
}
function e5(t, e, n, i) {
  let { index: r, offset: o } = t.findIndex(e), s = t.maybeChild(r);
  if (o == e || s.isText)
    return t.cut(0, e).append(n).append(t.cut(e));
  let a = e5(s.content, e - o - 1, n);
  return a && t.replaceChild(r, s.copy(a));
}
function aM(t, e, n) {
  if (n.openStart > t.depth)
    throw new Au("Inserted content deeper than insertion position");
  if (t.depth - n.openStart != e.depth - n.openEnd)
    throw new Au("Inconsistent open depths");
  return t5(t, e, n, 0);
}
function t5(t, e, n, i) {
  let r = t.index(i), o = t.node(i);
  if (r == e.index(i) && i < t.depth - n.openStart) {
    let s = t5(t, e, n, i + 1);
    return o.copy(o.content.replaceChild(r, s));
  } else if (n.content.size)
    if (!n.openStart && !n.openEnd && t.depth == i && e.depth == i) {
      let s = t.parent, a = s.content;
      return Qs(s, a.cut(0, t.parentOffset).append(n.content).append(a.cut(e.parentOffset)));
    } else {
      let { start: s, end: a } = lM(n, t);
      return Qs(o, i5(t, s, a, e, i));
    }
  else return Qs(o, Mu(t, e, i));
}
function n5(t, e) {
  if (!e.type.compatibleContent(t.type))
    throw new Au("Cannot join " + e.type.name + " onto " + t.type.name);
}
function O0(t, e, n) {
  let i = t.node(n);
  return n5(i, e.node(n)), i;
}
function Xs(t, e) {
  let n = e.length - 1;
  n >= 0 && t.isText && t.sameMarkup(e[n]) ? e[n] = t.withText(e[n].text + t.text) : e.push(t);
}
function Sc(t, e, n, i) {
  let r = (e || t).node(n), o = 0, s = e ? e.index(n) : r.childCount;
  t && (o = t.index(n), t.depth > n ? o++ : t.textOffset && (Xs(t.nodeAfter, i), o++));
  for (let a = o; a < s; a++)
    Xs(r.child(a), i);
  e && e.depth == n && e.textOffset && Xs(e.nodeBefore, i);
}
function Qs(t, e) {
  return t.type.checkContent(e), t.copy(e);
}
function i5(t, e, n, i, r) {
  let o = t.depth > r && O0(t, e, r + 1), s = i.depth > r && O0(n, i, r + 1), a = [];
  return Sc(null, t, r, a), o && s && e.index(r) == n.index(r) ? (n5(o, s), Xs(Qs(o, i5(t, e, n, i, r + 1)), a)) : (o && Xs(Qs(o, Mu(t, e, r + 1)), a), Sc(e, n, r, a), s && Xs(Qs(s, Mu(n, i, r + 1)), a)), Sc(i, null, r, a), new ie(a);
}
function Mu(t, e, n) {
  let i = [];
  if (Sc(null, t, n, i), t.depth > n) {
    let r = O0(t, e, n + 1);
    Xs(Qs(r, Mu(t, e, n + 1)), i);
  }
  return Sc(e, null, n, i), new ie(i);
}
function lM(t, e) {
  let n = e.depth - t.openStart, r = e.node(n).copy(t.content);
  for (let o = n - 1; o >= 0; o--)
    r = e.node(o).copy(ie.from(r));
  return {
    start: r.resolveNoCache(t.openStart + n),
    end: r.resolveNoCache(r.content.size - t.openEnd - n)
  };
}
class Gc {
  /**
  @internal
  */
  constructor(e, n, i) {
    this.pos = e, this.path = n, this.parentOffset = i, this.depth = n.length / 3 - 1;
  }
  /**
  @internal
  */
  resolveDepth(e) {
    return e == null ? this.depth : e < 0 ? this.depth + e : e;
  }
  /**
  The parent node that the position points into. Note that even if
  a position points into a text node, that node is not considered
  the parent—text nodes are ‘flat’ in this model, and have no content.
  */
  get parent() {
    return this.node(this.depth);
  }
  /**
  The root node in which the position was resolved.
  */
  get doc() {
    return this.node(0);
  }
  /**
  The ancestor node at the given level. `p.node(p.depth)` is the
  same as `p.parent`.
  */
  node(e) {
    return this.path[this.resolveDepth(e) * 3];
  }
  /**
  The index into the ancestor at the given level. If this points
  at the 3rd node in the 2nd paragraph on the top level, for
  example, `p.index(0)` is 1 and `p.index(1)` is 2.
  */
  index(e) {
    return this.path[this.resolveDepth(e) * 3 + 1];
  }
  /**
  The index pointing after this position into the ancestor at the
  given level.
  */
  indexAfter(e) {
    return e = this.resolveDepth(e), this.index(e) + (e == this.depth && !this.textOffset ? 0 : 1);
  }
  /**
  The (absolute) position at the start of the node at the given
  level.
  */
  start(e) {
    return e = this.resolveDepth(e), e == 0 ? 0 : this.path[e * 3 - 1] + 1;
  }
  /**
  The (absolute) position at the end of the node at the given
  level.
  */
  end(e) {
    return e = this.resolveDepth(e), this.start(e) + this.node(e).content.size;
  }
  /**
  The (absolute) position directly before the wrapping node at the
  given level, or, when `depth` is `this.depth + 1`, the original
  position.
  */
  before(e) {
    if (e = this.resolveDepth(e), !e)
      throw new RangeError("There is no position before the top-level node");
    return e == this.depth + 1 ? this.pos : this.path[e * 3 - 1];
  }
  /**
  The (absolute) position directly after the wrapping node at the
  given level, or the original position when `depth` is `this.depth + 1`.
  */
  after(e) {
    if (e = this.resolveDepth(e), !e)
      throw new RangeError("There is no position after the top-level node");
    return e == this.depth + 1 ? this.pos : this.path[e * 3 - 1] + this.path[e * 3].nodeSize;
  }
  /**
  When this position points into a text node, this returns the
  distance between the position and the start of the text node.
  Will be zero for positions that point between nodes.
  */
  get textOffset() {
    return this.pos - this.path[this.path.length - 1];
  }
  /**
  Get the node directly after the position, if any. If the position
  points into a text node, only the part of that node after the
  position is returned.
  */
  get nodeAfter() {
    let e = this.parent, n = this.index(this.depth);
    if (n == e.childCount)
      return null;
    let i = this.pos - this.path[this.path.length - 1], r = e.child(n);
    return i ? e.child(n).cut(i) : r;
  }
  /**
  Get the node directly before the position, if any. If the
  position points into a text node, only the part of that node
  before the position is returned.
  */
  get nodeBefore() {
    let e = this.index(this.depth), n = this.pos - this.path[this.path.length - 1];
    return n ? this.parent.child(e).cut(0, n) : e == 0 ? null : this.parent.child(e - 1);
  }
  /**
  Get the position at the given index in the parent node at the
  given depth (which defaults to `this.depth`).
  */
  posAtIndex(e, n) {
    n = this.resolveDepth(n);
    let i = this.path[n * 3], r = n == 0 ? 0 : this.path[n * 3 - 1] + 1;
    for (let o = 0; o < e; o++)
      r += i.child(o).nodeSize;
    return r;
  }
  /**
  Get the marks at this position, factoring in the surrounding
  marks' [`inclusive`](https://prosemirror.net/docs/ref/#model.MarkSpec.inclusive) property. If the
  position is at the start of a non-empty node, the marks of the
  node after it (if any) are returned.
  */
  marks() {
    let e = this.parent, n = this.index();
    if (e.content.size == 0)
      return Rt.none;
    if (this.textOffset)
      return e.child(n).marks;
    let i = e.maybeChild(n - 1), r = e.maybeChild(n);
    if (!i) {
      let a = i;
      i = r, r = a;
    }
    let o = i.marks;
    for (var s = 0; s < o.length; s++)
      o[s].type.spec.inclusive === !1 && (!r || !o[s].isInSet(r.marks)) && (o = o[s--].removeFromSet(o));
    return o;
  }
  /**
  Get the marks after the current position, if any, except those
  that are non-inclusive and not present at position `$end`. This
  is mostly useful for getting the set of marks to preserve after a
  deletion. Will return `null` if this position is at the end of
  its parent node or its parent node isn't a textblock (in which
  case no marks should be preserved).
  */
  marksAcross(e) {
    let n = this.parent.maybeChild(this.index());
    if (!n || !n.isInline)
      return null;
    let i = n.marks, r = e.parent.maybeChild(e.index());
    for (var o = 0; o < i.length; o++)
      i[o].type.spec.inclusive === !1 && (!r || !i[o].isInSet(r.marks)) && (i = i[o--].removeFromSet(i));
    return i;
  }
  /**
  The depth up to which this position and the given (non-resolved)
  position share the same parent nodes.
  */
  sharedDepth(e) {
    for (let n = this.depth; n > 0; n--)
      if (this.start(n) <= e && this.end(n) >= e)
        return n;
    return 0;
  }
  /**
  Returns a range based on the place where this position and the
  given position diverge around block content. If both point into
  the same textblock, for example, a range around that textblock
  will be returned. If they point into different blocks, the range
  around those blocks in their shared ancestor is returned. You can
  pass in an optional predicate that will be called with a parent
  node to see if a range into that parent is acceptable.
  */
  blockRange(e = this, n) {
    if (e.pos < this.pos)
      return e.blockRange(this);
    for (let i = this.depth - (this.parent.inlineContent || this.pos == e.pos ? 1 : 0); i >= 0; i--)
      if (e.pos <= this.end(i) && (!n || n(this.node(i))))
        return new Nu(this, e, i);
    return null;
  }
  /**
  Query whether the given position shares the same parent node.
  */
  sameParent(e) {
    return this.pos - this.parentOffset == e.pos - e.parentOffset;
  }
  /**
  Return the greater of this and the given position.
  */
  max(e) {
    return e.pos > this.pos ? e : this;
  }
  /**
  Return the smaller of this and the given position.
  */
  min(e) {
    return e.pos < this.pos ? e : this;
  }
  /**
  @internal
  */
  toString() {
    let e = "";
    for (let n = 1; n <= this.depth; n++)
      e += (e ? "/" : "") + this.node(n).type.name + "_" + this.index(n - 1);
    return e + ":" + this.parentOffset;
  }
  /**
  @internal
  */
  static resolve(e, n) {
    if (!(n >= 0 && n <= e.content.size))
      throw new RangeError("Position " + n + " out of range");
    let i = [], r = 0, o = n;
    for (let s = e; ; ) {
      let { index: a, offset: l } = s.content.findIndex(o), c = o - l;
      if (i.push(s, a, r + l), !c || (s = s.child(a), s.isText))
        break;
      o = c - 1, r += l + 1;
    }
    return new Gc(n, i, o);
  }
  /**
  @internal
  */
  static resolveCached(e, n) {
    let i = Sk.get(e);
    if (i)
      for (let o = 0; o < i.elts.length; o++) {
        let s = i.elts[o];
        if (s.pos == n)
          return s;
      }
    else
      Sk.set(e, i = new cM());
    let r = i.elts[i.i] = Gc.resolve(e, n);
    return i.i = (i.i + 1) % fM, r;
  }
}
class cM {
  constructor() {
    this.elts = [], this.i = 0;
  }
}
const fM = 12, Sk = /* @__PURE__ */ new WeakMap();
class Nu {
  /**
  Construct a node range. `$from` and `$to` should point into the
  same node until at least the given `depth`, since a node range
  denotes an adjacent set of nodes in a single parent node.
  */
  constructor(e, n, i) {
    this.$from = e, this.$to = n, this.depth = i;
  }
  /**
  The position at the start of the range.
  */
  get start() {
    return this.$from.before(this.depth + 1);
  }
  /**
  The position at the end of the range.
  */
  get end() {
    return this.$to.after(this.depth + 1);
  }
  /**
  The parent node that the range points into.
  */
  get parent() {
    return this.$from.node(this.depth);
  }
  /**
  The start index of the range in the parent node.
  */
  get startIndex() {
    return this.$from.index(this.depth);
  }
  /**
  The end index of the range in the parent node.
  */
  get endIndex() {
    return this.$to.indexAfter(this.depth);
  }
}
const dM = /* @__PURE__ */ Object.create(null);
let ls = class R0 {
  /**
  @internal
  */
  constructor(e, n, i, r = Rt.none) {
    this.type = e, this.attrs = n, this.marks = r, this.content = i || ie.empty;
  }
  /**
  The size of this node, as defined by the integer-based [indexing
  scheme](/docs/guide/#doc.indexing). For text nodes, this is the
  amount of characters. For other leaf nodes, it is one. For
  non-leaf nodes, it is the size of the content plus two (the
  start and end token).
  */
  get nodeSize() {
    return this.isLeaf ? 1 : 2 + this.content.size;
  }
  /**
  The number of children that the node has.
  */
  get childCount() {
    return this.content.childCount;
  }
  /**
  Get the child node at the given index. Raises an error when the
  index is out of range.
  */
  child(e) {
    return this.content.child(e);
  }
  /**
  Get the child node at the given index, if it exists.
  */
  maybeChild(e) {
    return this.content.maybeChild(e);
  }
  /**
  Call `f` for every child node, passing the node, its offset
  into this parent node, and its index.
  */
  forEach(e) {
    this.content.forEach(e);
  }
  /**
  Invoke a callback for all descendant nodes recursively between
  the given two positions that are relative to start of this
  node's content. The callback is invoked with the node, its
  position relative to the original node (method receiver),
  its parent node, and its child index. When the callback returns
  false for a given node, that node's children will not be
  recursed over. The last parameter can be used to specify a
  starting position to count from.
  */
  nodesBetween(e, n, i, r = 0) {
    this.content.nodesBetween(e, n, i, r, this);
  }
  /**
  Call the given callback for every descendant node. Doesn't
  descend into a node when the callback returns `false`.
  */
  descendants(e) {
    this.nodesBetween(0, this.content.size, e);
  }
  /**
  Concatenates all the text nodes found in this fragment and its
  children.
  */
  get textContent() {
    return this.isLeaf && this.type.spec.leafText ? this.type.spec.leafText(this) : this.textBetween(0, this.content.size, "");
  }
  /**
  Get all text between positions `from` and `to`. When
  `blockSeparator` is given, it will be inserted to separate text
  from different block nodes. If `leafText` is given, it'll be
  inserted for every non-text leaf node encountered, otherwise
  [`leafText`](https://prosemirror.net/docs/ref/#model.NodeSpec^leafText) will be used.
  */
  textBetween(e, n, i, r) {
    return this.content.textBetween(e, n, i, r);
  }
  /**
  Returns this node's first child, or `null` if there are no
  children.
  */
  get firstChild() {
    return this.content.firstChild;
  }
  /**
  Returns this node's last child, or `null` if there are no
  children.
  */
  get lastChild() {
    return this.content.lastChild;
  }
  /**
  Test whether two nodes represent the same piece of document.
  */
  eq(e) {
    return this == e || this.sameMarkup(e) && this.content.eq(e.content);
  }
  /**
  Compare the markup (type, attributes, and marks) of this node to
  those of another. Returns `true` if both have the same markup.
  */
  sameMarkup(e) {
    return this.hasMarkup(e.type, e.attrs, e.marks);
  }
  /**
  Check whether this node's markup correspond to the given type,
  attributes, and marks.
  */
  hasMarkup(e, n, i) {
    return this.type == e && xu(this.attrs, n || e.defaultAttrs || dM) && Rt.sameSet(this.marks, i || Rt.none);
  }
  /**
  Create a new node with the same markup as this node, containing
  the given content (or empty, if no content is given).
  */
  copy(e = null) {
    return e == this.content ? this : new R0(this.type, this.attrs, e, this.marks);
  }
  /**
  Create a copy of this node, with the given set of marks instead
  of the node's own marks.
  */
  mark(e) {
    return e == this.marks ? this : new R0(this.type, this.attrs, this.content, e);
  }
  /**
  Create a copy of this node with only the content between the
  given positions. If `to` is not given, it defaults to the end of
  the node.
  */
  cut(e, n = this.content.size) {
    return e == 0 && n == this.content.size ? this : this.copy(this.content.cut(e, n));
  }
  /**
  Cut out the part of the document between the given positions, and
  return it as a `Slice` object.
  */
  slice(e, n = this.content.size, i = !1) {
    if (e == n)
      return be.empty;
    let r = this.resolve(e), o = this.resolve(n), s = i ? 0 : r.sharedDepth(n), a = r.start(s), c = r.node(s).content.cut(r.pos - a, o.pos - a);
    return new be(c, r.depth - s, o.depth - s);
  }
  /**
  Replace the part of the document between the given positions with
  the given slice. The slice must 'fit', meaning its open sides
  must be able to connect to the surrounding content, and its
  content nodes must be valid children for the node they are placed
  into. If any of this is violated, an error of type
  [`ReplaceError`](https://prosemirror.net/docs/ref/#model.ReplaceError) is thrown.
  */
  replace(e, n, i) {
    return aM(this.resolve(e), this.resolve(n), i);
  }
  /**
  Find the node directly after the given position.
  */
  nodeAt(e) {
    for (let n = this; ; ) {
      let { index: i, offset: r } = n.content.findIndex(e);
      if (n = n.maybeChild(i), !n)
        return null;
      if (r == e || n.isText)
        return n;
      e -= r + 1;
    }
  }
  /**
  Find the (direct) child node after the given offset, if any,
  and return it along with its index and offset relative to this
  node.
  */
  childAfter(e) {
    let { index: n, offset: i } = this.content.findIndex(e);
    return { node: this.content.maybeChild(n), index: n, offset: i };
  }
  /**
  Find the (direct) child node before the given offset, if any,
  and return it along with its index and offset relative to this
  node.
  */
  childBefore(e) {
    if (e == 0)
      return { node: null, index: 0, offset: 0 };
    let { index: n, offset: i } = this.content.findIndex(e);
    if (i < e)
      return { node: this.content.child(n), index: n, offset: i };
    let r = this.content.child(n - 1);
    return { node: r, index: n - 1, offset: i - r.nodeSize };
  }
  /**
  Resolve the given position in the document, returning an
  [object](https://prosemirror.net/docs/ref/#model.ResolvedPos) with information about its context.
  */
  resolve(e) {
    return Gc.resolveCached(this, e);
  }
  /**
  @internal
  */
  resolveNoCache(e) {
    return Gc.resolve(this, e);
  }
  /**
  Test whether a given mark or mark type occurs in this document
  between the two given positions.
  */
  rangeHasMark(e, n, i) {
    let r = !1;
    return n > e && this.nodesBetween(e, n, (o) => (i.isInSet(o.marks) && (r = !0), !r)), r;
  }
  /**
  True when this is a block (non-inline node)
  */
  get isBlock() {
    return this.type.isBlock;
  }
  /**
  True when this is a textblock node, a block node with inline
  content.
  */
  get isTextblock() {
    return this.type.isTextblock;
  }
  /**
  True when this node allows inline content.
  */
  get inlineContent() {
    return this.type.inlineContent;
  }
  /**
  True when this is an inline node (a text node or a node that can
  appear among text).
  */
  get isInline() {
    return this.type.isInline;
  }
  /**
  True when this is a text node.
  */
  get isText() {
    return this.type.isText;
  }
  /**
  True when this is a leaf node.
  */
  get isLeaf() {
    return this.type.isLeaf;
  }
  /**
  True when this is an atom, i.e. when it does not have directly
  editable content. This is usually the same as `isLeaf`, but can
  be configured with the [`atom` property](https://prosemirror.net/docs/ref/#model.NodeSpec.atom)
  on a node's spec (typically used when the node is displayed as
  an uneditable [node view](https://prosemirror.net/docs/ref/#view.NodeView)).
  */
  get isAtom() {
    return this.type.isAtom;
  }
  /**
  Return a string representation of this node for debugging
  purposes.
  */
  toString() {
    if (this.type.spec.toDebugString)
      return this.type.spec.toDebugString(this);
    let e = this.type.name;
    return this.content.size && (e += "(" + this.content.toStringInner() + ")"), r5(this.marks, e);
  }
  /**
  Get the content match in this node at the given index.
  */
  contentMatchAt(e) {
    let n = this.type.contentMatch.matchFragment(this.content, 0, e);
    if (!n)
      throw new Error("Called contentMatchAt on a node with invalid content");
    return n;
  }
  /**
  Test whether replacing the range between `from` and `to` (by
  child index) with the given replacement fragment (which defaults
  to the empty fragment) would leave the node's content valid. You
  can optionally pass `start` and `end` indices into the
  replacement fragment.
  */
  canReplace(e, n, i = ie.empty, r = 0, o = i.childCount) {
    let s = this.contentMatchAt(e).matchFragment(i, r, o), a = s && s.matchFragment(this.content, n);
    if (!a || !a.validEnd)
      return !1;
    for (let l = r; l < o; l++)
      if (!this.type.allowsMarks(i.child(l).marks))
        return !1;
    return !0;
  }
  /**
  Test whether replacing the range `from` to `to` (by index) with
  a node of the given type would leave the node's content valid.
  */
  canReplaceWith(e, n, i, r) {
    if (r && !this.type.allowsMarks(r))
      return !1;
    let o = this.contentMatchAt(e).matchType(i), s = o && o.matchFragment(this.content, n);
    return s ? s.validEnd : !1;
  }
  /**
  Test whether the given node's content could be appended to this
  node. If that node is empty, this will only return true if there
  is at least one node type that can appear in both nodes (to avoid
  merging completely incompatible nodes).
  */
  canAppend(e) {
    return e.content.size ? this.canReplace(this.childCount, this.childCount, e.content) : this.type.compatibleContent(e.type);
  }
  /**
  Check whether this node and its descendants conform to the
  schema, and raise an exception when they do not.
  */
  check() {
    this.type.checkContent(this.content), this.type.checkAttrs(this.attrs);
    let e = Rt.none;
    for (let n = 0; n < this.marks.length; n++) {
      let i = this.marks[n];
      i.type.checkAttrs(i.attrs), e = i.addToSet(e);
    }
    if (!Rt.sameSet(e, this.marks))
      throw new RangeError(`Invalid collection of marks for node ${this.type.name}: ${this.marks.map((n) => n.type.name)}`);
    this.content.forEach((n) => n.check());
  }
  /**
  Return a JSON-serializeable representation of this node.
  */
  toJSON() {
    let e = { type: this.type.name };
    for (let n in this.attrs) {
      e.attrs = this.attrs;
      break;
    }
    return this.content.size && (e.content = this.content.toJSON()), this.marks.length && (e.marks = this.marks.map((n) => n.toJSON())), e;
  }
  /**
  Deserialize a node from its JSON representation.
  */
  static fromJSON(e, n) {
    if (!n)
      throw new RangeError("Invalid input for Node.fromJSON");
    let i;
    if (n.marks) {
      if (!Array.isArray(n.marks))
        throw new RangeError("Invalid mark data for Node.fromJSON");
      i = n.marks.map(e.markFromJSON);
    }
    if (n.type == "text") {
      if (typeof n.text != "string")
        throw new RangeError("Invalid text node in JSON");
      return e.text(n.text, i);
    }
    let r = ie.fromJSON(e, n.content), o = e.nodeType(n.type).create(n.attrs, r, i);
    return o.type.checkAttrs(o.attrs), o;
  }
};
ls.prototype.text = void 0;
class Ou extends ls {
  /**
  @internal
  */
  constructor(e, n, i, r) {
    if (super(e, n, null, r), !i)
      throw new RangeError("Empty text nodes are not allowed");
    this.text = i;
  }
  toString() {
    return this.type.spec.toDebugString ? this.type.spec.toDebugString(this) : r5(this.marks, JSON.stringify(this.text));
  }
  get textContent() {
    return this.text;
  }
  textBetween(e, n) {
    return this.text.slice(e, n);
  }
  get nodeSize() {
    return this.text.length;
  }
  mark(e) {
    return e == this.marks ? this : new Ou(this.type, this.attrs, this.text, e);
  }
  withText(e) {
    return e == this.text ? this : new Ou(this.type, this.attrs, e, this.marks);
  }
  cut(e = 0, n = this.text.length) {
    return e == 0 && n == this.text.length ? this : this.withText(this.text.slice(e, n));
  }
  eq(e) {
    return this.sameMarkup(e) && this.text == e.text;
  }
  toJSON() {
    let e = super.toJSON();
    return e.text = this.text, e;
  }
}
function r5(t, e) {
  for (let n = t.length - 1; n >= 0; n--)
    e = t[n].type.name + "(" + e + ")";
  return e;
}
class oa {
  /**
  @internal
  */
  constructor(e) {
    this.validEnd = e, this.next = [], this.wrapCache = [];
  }
  /**
  @internal
  */
  static parse(e, n) {
    let i = new uM(e, n);
    if (i.next == null)
      return oa.empty;
    let r = o5(i);
    i.next && i.err("Unexpected trailing text");
    let o = bM(vM(r));
    return kM(o, i), o;
  }
  /**
  Match a node type, returning a match after that node if
  successful.
  */
  matchType(e) {
    for (let n = 0; n < this.next.length; n++)
      if (this.next[n].type == e)
        return this.next[n].next;
    return null;
  }
  /**
  Try to match a fragment. Returns the resulting match when
  successful.
  */
  matchFragment(e, n = 0, i = e.childCount) {
    let r = this;
    for (let o = n; r && o < i; o++)
      r = r.matchType(e.child(o).type);
    return r;
  }
  /**
  @internal
  */
  get inlineContent() {
    return this.next.length != 0 && this.next[0].type.isInline;
  }
  /**
  Get the first matching node type at this match position that can
  be generated.
  */
  get defaultType() {
    for (let e = 0; e < this.next.length; e++) {
      let { type: n } = this.next[e];
      if (!(n.isText || n.hasRequiredAttrs()))
        return n;
    }
    return null;
  }
  /**
  @internal
  */
  compatible(e) {
    for (let n = 0; n < this.next.length; n++)
      for (let i = 0; i < e.next.length; i++)
        if (this.next[n].type == e.next[i].type)
          return !0;
    return !1;
  }
  /**
  Try to match the given fragment, and if that fails, see if it can
  be made to match by inserting nodes in front of it. When
  successful, return a fragment of inserted nodes (which may be
  empty if nothing had to be inserted). When `toEnd` is true, only
  return a fragment if the resulting match goes to the end of the
  content expression.
  */
  fillBefore(e, n = !1, i = 0) {
    let r = [this];
    function o(s, a) {
      let l = s.matchFragment(e, i);
      if (l && (!n || l.validEnd))
        return ie.from(a.map((c) => c.createAndFill()));
      for (let c = 0; c < s.next.length; c++) {
        let { type: f, next: d } = s.next[c];
        if (!(f.isText || f.hasRequiredAttrs()) && r.indexOf(d) == -1) {
          r.push(d);
          let u = o(d, a.concat(f));
          if (u)
            return u;
        }
      }
      return null;
    }
    return o(this, []);
  }
  /**
  Find a set of wrapping node types that would allow a node of the
  given type to appear at this position. The result may be empty
  (when it fits directly) and will be null when no such wrapping
  exists.
  */
  findWrapping(e) {
    for (let i = 0; i < this.wrapCache.length; i += 2)
      if (this.wrapCache[i] == e)
        return this.wrapCache[i + 1];
    let n = this.computeWrapping(e);
    return this.wrapCache.push(e, n), n;
  }
  /**
  @internal
  */
  computeWrapping(e) {
    let n = /* @__PURE__ */ Object.create(null), i = [{ match: this, type: null, via: null }];
    for (; i.length; ) {
      let r = i.shift(), o = r.match;
      if (o.matchType(e)) {
        let s = [];
        for (let a = r; a.type; a = a.via)
          s.push(a.type);
        return s.reverse();
      }
      for (let s = 0; s < o.next.length; s++) {
        let { type: a, next: l } = o.next[s];
        !a.isLeaf && !a.hasRequiredAttrs() && !(a.name in n) && (!r.type || l.validEnd) && (i.push({ match: a.contentMatch, type: a, via: r }), n[a.name] = !0);
      }
    }
    return null;
  }
  /**
  The number of outgoing edges this node has in the finite
  automaton that describes the content expression.
  */
  get edgeCount() {
    return this.next.length;
  }
  /**
  Get the _n_​th outgoing edge from this node in the finite
  automaton that describes the content expression.
  */
  edge(e) {
    if (e >= this.next.length)
      throw new RangeError(`There's no ${e}th edge in this content match`);
    return this.next[e];
  }
  /**
  @internal
  */
  toString() {
    let e = [];
    function n(i) {
      e.push(i);
      for (let r = 0; r < i.next.length; r++)
        e.indexOf(i.next[r].next) == -1 && n(i.next[r].next);
    }
    return n(this), e.map((i, r) => {
      let o = r + (i.validEnd ? "*" : " ") + " ";
      for (let s = 0; s < i.next.length; s++)
        o += (s ? ", " : "") + i.next[s].type.name + "->" + e.indexOf(i.next[s].next);
      return o;
    }).join(`
`);
  }
}
oa.empty = new oa(!0);
class uM {
  constructor(e, n) {
    this.string = e, this.nodeTypes = n, this.inline = null, this.pos = 0, this.tokens = e.split(/\s*(?=\b|\W|$)/), this.tokens[this.tokens.length - 1] == "" && this.tokens.pop(), this.tokens[0] == "" && this.tokens.shift();
  }
  get next() {
    return this.tokens[this.pos];
  }
  eat(e) {
    return this.next == e && (this.pos++ || !0);
  }
  err(e) {
    throw new SyntaxError(e + " (in content expression '" + this.string + "')");
  }
}
function o5(t) {
  let e = [];
  do
    e.push(hM(t));
  while (t.eat("|"));
  return e.length == 1 ? e[0] : { type: "choice", exprs: e };
}
function hM(t) {
  let e = [];
  do
    e.push(pM(t));
  while (t.next && t.next != ")" && t.next != "|");
  return e.length == 1 ? e[0] : { type: "seq", exprs: e };
}
function pM(t) {
  let e = yM(t);
  for (; ; )
    if (t.eat("+"))
      e = { type: "plus", expr: e };
    else if (t.eat("*"))
      e = { type: "star", expr: e };
    else if (t.eat("?"))
      e = { type: "opt", expr: e };
    else if (t.eat("{"))
      e = mM(t, e);
    else
      break;
  return e;
}
function xk(t) {
  /\D/.test(t.next) && t.err("Expected number, got '" + t.next + "'");
  let e = Number(t.next);
  return t.pos++, e;
}
function mM(t, e) {
  let n = xk(t), i = n;
  return t.eat(",") && (t.next != "}" ? i = xk(t) : i = -1), t.eat("}") || t.err("Unclosed braced range"), { type: "range", min: n, max: i, expr: e };
}
function gM(t, e) {
  let n = t.nodeTypes, i = n[e];
  if (i)
    return [i];
  let r = [];
  for (let o in n) {
    let s = n[o];
    s.isInGroup(e) && r.push(s);
  }
  return r.length == 0 && t.err("No node type or group '" + e + "' found"), r;
}
function yM(t) {
  if (t.eat("(")) {
    let e = o5(t);
    return t.eat(")") || t.err("Missing closing paren"), e;
  } else if (/\W/.test(t.next))
    t.err("Unexpected token '" + t.next + "'");
  else {
    let e = gM(t, t.next).map((n) => (t.inline == null ? t.inline = n.isInline : t.inline != n.isInline && t.err("Mixing inline and block content"), { type: "name", value: n }));
    return t.pos++, e.length == 1 ? e[0] : { type: "choice", exprs: e };
  }
}
function vM(t) {
  let e = [[]];
  return r(o(t, 0), n()), e;
  function n() {
    return e.push([]) - 1;
  }
  function i(s, a, l) {
    let c = { term: l, to: a };
    return e[s].push(c), c;
  }
  function r(s, a) {
    s.forEach((l) => l.to = a);
  }
  function o(s, a) {
    if (s.type == "choice")
      return s.exprs.reduce((l, c) => l.concat(o(c, a)), []);
    if (s.type == "seq")
      for (let l = 0; ; l++) {
        let c = o(s.exprs[l], a);
        if (l == s.exprs.length - 1)
          return c;
        r(c, a = n());
      }
    else if (s.type == "star") {
      let l = n();
      return i(a, l), r(o(s.expr, l), l), [i(l)];
    } else if (s.type == "plus") {
      let l = n();
      return r(o(s.expr, a), l), r(o(s.expr, l), l), [i(l)];
    } else {
      if (s.type == "opt")
        return [i(a)].concat(o(s.expr, a));
      if (s.type == "range") {
        let l = a;
        for (let c = 0; c < s.min; c++) {
          let f = n();
          r(o(s.expr, l), f), l = f;
        }
        if (s.max == -1)
          r(o(s.expr, l), l);
        else
          for (let c = s.min; c < s.max; c++) {
            let f = n();
            i(l, f), r(o(s.expr, l), f), l = f;
          }
        return [i(l)];
      } else {
        if (s.type == "name")
          return [i(a, void 0, s.value)];
        throw new Error("Unknown expr type");
      }
    }
  }
}
function s5(t, e) {
  return e - t;
}
function Ak(t, e) {
  let n = [];
  return i(e), n.sort(s5);
  function i(r) {
    let o = t[r];
    if (o.length == 1 && !o[0].term)
      return i(o[0].to);
    n.push(r);
    for (let s = 0; s < o.length; s++) {
      let { term: a, to: l } = o[s];
      !a && n.indexOf(l) == -1 && i(l);
    }
  }
}
function bM(t) {
  let e = /* @__PURE__ */ Object.create(null);
  return n(Ak(t, 0));
  function n(i) {
    let r = [];
    i.forEach((s) => {
      t[s].forEach(({ term: a, to: l }) => {
        if (!a)
          return;
        let c;
        for (let f = 0; f < r.length; f++)
          r[f][0] == a && (c = r[f][1]);
        Ak(t, l).forEach((f) => {
          c || r.push([a, c = []]), c.indexOf(f) == -1 && c.push(f);
        });
      });
    });
    let o = e[i.join(",")] = new oa(i.indexOf(t.length - 1) > -1);
    for (let s = 0; s < r.length; s++) {
      let a = r[s][1].sort(s5);
      o.next.push({ type: r[s][0], next: e[a.join(",")] || n(a) });
    }
    return o;
  }
}
function kM(t, e) {
  for (let n = 0, i = [t]; n < i.length; n++) {
    let r = i[n], o = !r.validEnd, s = [];
    for (let a = 0; a < r.next.length; a++) {
      let { type: l, next: c } = r.next[a];
      s.push(l.name), o && !(l.isText || l.hasRequiredAttrs()) && (o = !1), i.indexOf(c) == -1 && i.push(c);
    }
    o && e.err("Only non-generatable nodes (" + s.join(", ") + ") in a required position (see https://prosemirror.net/docs/guide/#generatable)");
  }
}
function a5(t) {
  let e = /* @__PURE__ */ Object.create(null);
  for (let n in t) {
    let i = t[n];
    if (!i.hasDefault)
      return null;
    e[n] = i.default;
  }
  return e;
}
function l5(t, e) {
  let n = /* @__PURE__ */ Object.create(null);
  for (let i in t) {
    let r = e && e[i];
    if (r === void 0) {
      let o = t[i];
      if (o.hasDefault)
        r = o.default;
      else
        throw new RangeError("No value supplied for attribute " + i);
    }
    n[i] = r;
  }
  return n;
}
function c5(t, e, n, i) {
  for (let r in e)
    if (!(r in t))
      throw new RangeError(`Unsupported attribute ${r} for ${n} of type ${r}`);
  for (let r in t) {
    let o = t[r];
    o.validate && o.validate(e[r]);
  }
}
function f5(t, e) {
  let n = /* @__PURE__ */ Object.create(null);
  if (e)
    for (let i in e)
      n[i] = new _M(t, i, e[i]);
  return n;
}
let Mk = class d5 {
  /**
  @internal
  */
  constructor(e, n, i) {
    this.name = e, this.schema = n, this.spec = i, this.markSet = null, this.groups = i.group ? i.group.split(" ") : [], this.attrs = f5(e, i.attrs), this.defaultAttrs = a5(this.attrs), this.contentMatch = null, this.inlineContent = null, this.isBlock = !(i.inline || e == "text"), this.isText = e == "text";
  }
  /**
  True if this is an inline type.
  */
  get isInline() {
    return !this.isBlock;
  }
  /**
  True if this is a textblock type, a block that contains inline
  content.
  */
  get isTextblock() {
    return this.isBlock && this.inlineContent;
  }
  /**
  True for node types that allow no content.
  */
  get isLeaf() {
    return this.contentMatch == oa.empty;
  }
  /**
  True when this node is an atom, i.e. when it does not have
  directly editable content.
  */
  get isAtom() {
    return this.isLeaf || !!this.spec.atom;
  }
  /**
  Return true when this node type is part of the given
  [group](https://prosemirror.net/docs/ref/#model.NodeSpec.group).
  */
  isInGroup(e) {
    return this.groups.indexOf(e) > -1;
  }
  /**
  The node type's [whitespace](https://prosemirror.net/docs/ref/#model.NodeSpec.whitespace) option.
  */
  get whitespace() {
    return this.spec.whitespace || (this.spec.code ? "pre" : "normal");
  }
  /**
  Tells you whether this node type has any required attributes.
  */
  hasRequiredAttrs() {
    for (let e in this.attrs)
      if (this.attrs[e].isRequired)
        return !0;
    return !1;
  }
  /**
  Indicates whether this node allows some of the same content as
  the given node type.
  */
  compatibleContent(e) {
    return this == e || this.contentMatch.compatible(e.contentMatch);
  }
  /**
  @internal
  */
  computeAttrs(e) {
    return !e && this.defaultAttrs ? this.defaultAttrs : l5(this.attrs, e);
  }
  /**
  Create a `Node` of this type. The given attributes are
  checked and defaulted (you can pass `null` to use the type's
  defaults entirely, if no required attributes exist). `content`
  may be a `Fragment`, a node, an array of nodes, or
  `null`. Similarly `marks` may be `null` to default to the empty
  set of marks.
  */
  create(e = null, n, i) {
    if (this.isText)
      throw new Error("NodeType.create can't construct text nodes");
    return new ls(this, this.computeAttrs(e), ie.from(n), Rt.setFrom(i));
  }
  /**
  Like [`create`](https://prosemirror.net/docs/ref/#model.NodeType.create), but check the given content
  against the node type's content restrictions, and throw an error
  if it doesn't match.
  */
  createChecked(e = null, n, i) {
    return n = ie.from(n), this.checkContent(n), new ls(this, this.computeAttrs(e), n, Rt.setFrom(i));
  }
  /**
  Like [`create`](https://prosemirror.net/docs/ref/#model.NodeType.create), but see if it is
  necessary to add nodes to the start or end of the given fragment
  to make it fit the node. If no fitting wrapping can be found,
  return null. Note that, due to the fact that required nodes can
  always be created, this will always succeed if you pass null or
  `Fragment.empty` as content.
  */
  createAndFill(e = null, n, i) {
    if (e = this.computeAttrs(e), n = ie.from(n), n.size) {
      let s = this.contentMatch.fillBefore(n);
      if (!s)
        return null;
      n = s.append(n);
    }
    let r = this.contentMatch.matchFragment(n), o = r && r.fillBefore(ie.empty, !0);
    return o ? new ls(this, e, n.append(o), Rt.setFrom(i)) : null;
  }
  /**
  Returns true if the given fragment is valid content for this node
  type.
  */
  validContent(e) {
    let n = this.contentMatch.matchFragment(e);
    if (!n || !n.validEnd)
      return !1;
    for (let i = 0; i < e.childCount; i++)
      if (!this.allowsMarks(e.child(i).marks))
        return !1;
    return !0;
  }
  /**
  Throws a RangeError if the given fragment is not valid content for this
  node type.
  @internal
  */
  checkContent(e) {
    if (!this.validContent(e))
      throw new RangeError(`Invalid content for node ${this.name}: ${e.toString().slice(0, 50)}`);
  }
  /**
  @internal
  */
  checkAttrs(e) {
    c5(this.attrs, e, "node", this.name);
  }
  /**
  Check whether the given mark type is allowed in this node.
  */
  allowsMarkType(e) {
    return this.markSet == null || this.markSet.indexOf(e) > -1;
  }
  /**
  Test whether the given set of marks are allowed in this node.
  */
  allowsMarks(e) {
    if (this.markSet == null)
      return !0;
    for (let n = 0; n < e.length; n++)
      if (!this.allowsMarkType(e[n].type))
        return !1;
    return !0;
  }
  /**
  Removes the marks that are not allowed in this node from the given set.
  */
  allowedMarks(e) {
    if (this.markSet == null)
      return e;
    let n;
    for (let i = 0; i < e.length; i++)
      this.allowsMarkType(e[i].type) ? n && n.push(e[i]) : n || (n = e.slice(0, i));
    return n ? n.length ? n : Rt.none : e;
  }
  /**
  @internal
  */
  static compile(e, n) {
    let i = /* @__PURE__ */ Object.create(null);
    e.forEach((o, s) => i[o] = new d5(o, n, s));
    let r = n.spec.topNode || "doc";
    if (!i[r])
      throw new RangeError("Schema is missing its top node type ('" + r + "')");
    if (!i.text)
      throw new RangeError("Every schema needs a 'text' type");
    for (let o in i.text.attrs)
      throw new RangeError("The text node type should not have attributes");
    return i;
  }
};
function wM(t, e, n) {
  let i = n.split("|");
  return (r) => {
    let o = r === null ? "null" : typeof r;
    if (i.indexOf(o) < 0)
      throw new RangeError(`Expected value of type ${i} for attribute ${e} on type ${t}, got ${o}`);
  };
}
class _M {
  constructor(e, n, i) {
    this.hasDefault = Object.prototype.hasOwnProperty.call(i, "default"), this.default = i.default, this.validate = typeof i.validate == "string" ? wM(e, n, i.validate) : i.validate;
  }
  get isRequired() {
    return !this.hasDefault;
  }
}
class dh {
  /**
  @internal
  */
  constructor(e, n, i, r) {
    this.name = e, this.rank = n, this.schema = i, this.spec = r, this.attrs = f5(e, r.attrs), this.excluded = null;
    let o = a5(this.attrs);
    this.instance = o ? new Rt(this, o) : null;
  }
  /**
  Create a mark of this type. `attrs` may be `null` or an object
  containing only some of the mark's attributes. The others, if
  they have defaults, will be added.
  */
  create(e = null) {
    return !e && this.instance ? this.instance : new Rt(this, l5(this.attrs, e));
  }
  /**
  @internal
  */
  static compile(e, n) {
    let i = /* @__PURE__ */ Object.create(null), r = 0;
    return e.forEach((o, s) => i[o] = new dh(o, r++, n, s)), i;
  }
  /**
  When there is a mark of this type in the given set, a new set
  without it is returned. Otherwise, the input set is returned.
  */
  removeFromSet(e) {
    for (var n = 0; n < e.length; n++)
      e[n].type == this && (e = e.slice(0, n).concat(e.slice(n + 1)), n--);
    return e;
  }
  /**
  Tests whether there is a mark of this type in the given set.
  */
  isInSet(e) {
    for (let n = 0; n < e.length; n++)
      if (e[n].type == this)
        return e[n];
  }
  /**
  @internal
  */
  checkAttrs(e) {
    c5(this.attrs, e, "mark", this.name);
  }
  /**
  Queries whether a given mark type is
  [excluded](https://prosemirror.net/docs/ref/#model.MarkSpec.excludes) by this one.
  */
  excludes(e) {
    return this.excluded.indexOf(e) > -1;
  }
}
let u5 = class {
  /**
  Construct a schema from a schema [specification](https://prosemirror.net/docs/ref/#model.SchemaSpec).
  */
  constructor(e) {
    this.linebreakReplacement = null, this.cached = /* @__PURE__ */ Object.create(null);
    let n = this.spec = {};
    for (let r in e)
      n[r] = e[r];
    n.nodes = An.from(e.nodes), n.marks = An.from(e.marks || {}), this.nodes = Mk.compile(this.spec.nodes, this), this.marks = dh.compile(this.spec.marks, this);
    let i = /* @__PURE__ */ Object.create(null);
    for (let r in this.nodes) {
      if (r in this.marks)
        throw new RangeError(r + " can not be both a node and a mark");
      let o = this.nodes[r], s = o.spec.content || "", a = o.spec.marks;
      if (o.contentMatch = i[s] || (i[s] = oa.parse(s, this.nodes)), o.inlineContent = o.contentMatch.inlineContent, o.spec.linebreakReplacement) {
        if (this.linebreakReplacement)
          throw new RangeError("Multiple linebreak nodes defined");
        if (!o.isInline || !o.isLeaf)
          throw new RangeError("Linebreak replacement nodes must be inline leaf nodes");
        this.linebreakReplacement = o;
      }
      o.markSet = a == "_" ? null : a ? Nk(this, a.split(" ")) : a == "" || !o.inlineContent ? [] : null;
    }
    for (let r in this.marks) {
      let o = this.marks[r], s = o.spec.excludes;
      o.excluded = s == null ? [o] : s == "" ? [] : Nk(this, s.split(" "));
    }
    this.nodeFromJSON = this.nodeFromJSON.bind(this), this.markFromJSON = this.markFromJSON.bind(this), this.topNodeType = this.nodes[this.spec.topNode || "doc"], this.cached.wrappings = /* @__PURE__ */ Object.create(null);
  }
  /**
  Create a node in this schema. The `type` may be a string or a
  `NodeType` instance. Attributes will be extended with defaults,
  `content` may be a `Fragment`, `null`, a `Node`, or an array of
  nodes.
  */
  node(e, n = null, i, r) {
    if (typeof e == "string")
      e = this.nodeType(e);
    else if (e instanceof Mk) {
      if (e.schema != this)
        throw new RangeError("Node type from different schema used (" + e.name + ")");
    } else throw new RangeError("Invalid node type: " + e);
    return e.createChecked(n, i, r);
  }
  /**
  Create a text node in the schema. Empty text nodes are not
  allowed.
  */
  text(e, n) {
    let i = this.nodes.text;
    return new Ou(i, i.defaultAttrs, e, Rt.setFrom(n));
  }
  /**
  Create a mark with the given type and attributes.
  */
  mark(e, n) {
    return typeof e == "string" && (e = this.marks[e]), e.create(n);
  }
  /**
  Deserialize a node from its JSON representation. This method is
  bound.
  */
  nodeFromJSON(e) {
    return ls.fromJSON(this, e);
  }
  /**
  Deserialize a mark from its JSON representation. This method is
  bound.
  */
  markFromJSON(e) {
    return Rt.fromJSON(this, e);
  }
  /**
  @internal
  */
  nodeType(e) {
    let n = this.nodes[e];
    if (!n)
      throw new RangeError("Unknown node type: " + e);
    return n;
  }
};
function Nk(t, e) {
  let n = [];
  for (let i = 0; i < e.length; i++) {
    let r = e[i], o = t.marks[r], s = o;
    if (o)
      n.push(o);
    else
      for (let a in t.marks) {
        let l = t.marks[a];
        (r == "_" || l.spec.group && l.spec.group.split(" ").indexOf(r) > -1) && n.push(s = l);
      }
    if (!s)
      throw new SyntaxError("Unknown mark type: '" + e[i] + "'");
  }
  return n;
}
function EM(t) {
  return t.tag != null;
}
function TM(t) {
  return t.style != null;
}
let Xa = class I0 {
  /**
  Create a parser that targets the given schema, using the given
  parsing rules.
  */
  constructor(e, n) {
    this.schema = e, this.rules = n, this.tags = [], this.styles = [];
    let i = this.matchedStyles = [];
    n.forEach((r) => {
      if (EM(r))
        this.tags.push(r);
      else if (TM(r)) {
        let o = /[^=]*/.exec(r.style)[0];
        i.indexOf(o) < 0 && i.push(o), this.styles.push(r);
      }
    }), this.normalizeLists = !this.tags.some((r) => {
      if (!/^(ul|ol)\b/.test(r.tag) || !r.node)
        return !1;
      let o = e.nodes[r.node];
      return o.contentMatch.matchType(o);
    });
  }
  /**
  Parse a document from the content of a DOM node.
  */
  parse(e, n = {}) {
    let i = new Rk(this, n, !1);
    return i.addAll(e, Rt.none, n.from, n.to), i.finish();
  }
  /**
  Parses the content of the given DOM node, like
  [`parse`](https://prosemirror.net/docs/ref/#model.DOMParser.parse), and takes the same set of
  options. But unlike that method, which produces a whole node,
  this one returns a slice that is open at the sides, meaning that
  the schema constraints aren't applied to the start of nodes to
  the left of the input and the end of nodes at the end.
  */
  parseSlice(e, n = {}) {
    let i = new Rk(this, n, !0);
    return i.addAll(e, Rt.none, n.from, n.to), be.maxOpen(i.finish());
  }
  /**
  @internal
  */
  matchTag(e, n, i) {
    for (let r = i ? this.tags.indexOf(i) + 1 : 0; r < this.tags.length; r++) {
      let o = this.tags[r];
      if (xM(e, o.tag) && (o.namespace === void 0 || e.namespaceURI == o.namespace) && (!o.context || n.matchesContext(o.context))) {
        if (o.getAttrs) {
          let s = o.getAttrs(e);
          if (s === !1)
            continue;
          o.attrs = s || void 0;
        }
        return o;
      }
    }
  }
  /**
  @internal
  */
  matchStyle(e, n, i, r) {
    for (let o = r ? this.styles.indexOf(r) + 1 : 0; o < this.styles.length; o++) {
      let s = this.styles[o], a = s.style;
      if (!(a.indexOf(e) != 0 || s.context && !i.matchesContext(s.context) || // Test that the style string either precisely matches the prop,
      // or has an '=' sign after the prop, followed by the given
      // value.
      a.length > e.length && (a.charCodeAt(e.length) != 61 || a.slice(e.length + 1) != n))) {
        if (s.getAttrs) {
          let l = s.getAttrs(n);
          if (l === !1)
            continue;
          s.attrs = l || void 0;
        }
        return s;
      }
    }
  }
  /**
  @internal
  */
  static schemaRules(e) {
    let n = [];
    function i(r) {
      let o = r.priority == null ? 50 : r.priority, s = 0;
      for (; s < n.length; s++) {
        let a = n[s];
        if ((a.priority == null ? 50 : a.priority) < o)
          break;
      }
      n.splice(s, 0, r);
    }
    for (let r in e.marks) {
      let o = e.marks[r].spec.parseDOM;
      o && o.forEach((s) => {
        i(s = Ik(s)), s.mark || s.ignore || s.clearMark || (s.mark = r);
      });
    }
    for (let r in e.nodes) {
      let o = e.nodes[r].spec.parseDOM;
      o && o.forEach((s) => {
        i(s = Ik(s)), s.node || s.ignore || s.mark || (s.node = r);
      });
    }
    return n;
  }
  /**
  Construct a DOM parser using the parsing rules listed in a
  schema's [node specs](https://prosemirror.net/docs/ref/#model.NodeSpec.parseDOM), reordered by
  [priority](https://prosemirror.net/docs/ref/#model.ParseRule.priority).
  */
  static fromSchema(e) {
    return e.cached.domParser || (e.cached.domParser = new I0(e, I0.schemaRules(e)));
  }
};
const h5 = {
  address: !0,
  article: !0,
  aside: !0,
  blockquote: !0,
  canvas: !0,
  dd: !0,
  div: !0,
  dl: !0,
  fieldset: !0,
  figcaption: !0,
  figure: !0,
  footer: !0,
  form: !0,
  h1: !0,
  h2: !0,
  h3: !0,
  h4: !0,
  h5: !0,
  h6: !0,
  header: !0,
  hgroup: !0,
  hr: !0,
  li: !0,
  noscript: !0,
  ol: !0,
  output: !0,
  p: !0,
  pre: !0,
  section: !0,
  table: !0,
  tfoot: !0,
  ul: !0
}, CM = {
  head: !0,
  noscript: !0,
  object: !0,
  script: !0,
  style: !0,
  title: !0
}, p5 = { ol: !0, ul: !0 }, Ru = 1, Iu = 2, xc = 4;
function Ok(t, e, n) {
  return e != null ? (e ? Ru : 0) | (e === "full" ? Iu : 0) : t && t.whitespace == "pre" ? Ru | Iu : n & ~xc;
}
class td {
  constructor(e, n, i, r, o, s) {
    this.type = e, this.attrs = n, this.marks = i, this.solid = r, this.options = s, this.content = [], this.activeMarks = Rt.none, this.match = o || (s & xc ? null : e.contentMatch);
  }
  findWrapping(e) {
    if (!this.match) {
      if (!this.type)
        return [];
      let n = this.type.contentMatch.fillBefore(ie.from(e));
      if (n)
        this.match = this.type.contentMatch.matchFragment(n);
      else {
        let i = this.type.contentMatch, r;
        return (r = i.findWrapping(e.type)) ? (this.match = i, r) : null;
      }
    }
    return this.match.findWrapping(e.type);
  }
  finish(e) {
    if (!(this.options & Ru)) {
      let i = this.content[this.content.length - 1], r;
      if (i && i.isText && (r = /[ \t\r\n\u000c]+$/.exec(i.text))) {
        let o = i;
        i.text.length == r[0].length ? this.content.pop() : this.content[this.content.length - 1] = o.withText(o.text.slice(0, o.text.length - r[0].length));
      }
    }
    let n = ie.from(this.content);
    return !e && this.match && (n = n.append(this.match.fillBefore(ie.empty, !0))), this.type ? this.type.create(this.attrs, n, this.marks) : n;
  }
  inlineContext(e) {
    return this.type ? this.type.inlineContent : this.content.length ? this.content[0].isInline : e.parentNode && !h5.hasOwnProperty(e.parentNode.nodeName.toLowerCase());
  }
}
class Rk {
  constructor(e, n, i) {
    this.parser = e, this.options = n, this.isOpen = i, this.open = 0;
    let r = n.topNode, o, s = Ok(null, n.preserveWhitespace, 0) | (i ? xc : 0);
    r ? o = new td(r.type, r.attrs, Rt.none, !0, n.topMatch || r.type.contentMatch, s) : i ? o = new td(null, null, Rt.none, !0, null, s) : o = new td(e.schema.topNodeType, null, Rt.none, !0, null, s), this.nodes = [o], this.find = n.findPositions, this.needsBlock = !1;
  }
  get top() {
    return this.nodes[this.open];
  }
  // Add a DOM node to the content. Text is inserted as text node,
  // otherwise, the node is passed to `addElement` or, if it has a
  // `style` attribute, `addElementWithStyles`.
  addDOM(e, n) {
    e.nodeType == 3 ? this.addTextNode(e, n) : e.nodeType == 1 && this.addElement(e, n);
  }
  addTextNode(e, n) {
    let i = e.nodeValue, r = this.top;
    if (r.options & Iu || r.inlineContext(e) || /[^ \t\r\n\u000c]/.test(i)) {
      if (r.options & Ru)
        r.options & Iu ? i = i.replace(/\r\n?/g, `
`) : i = i.replace(/\r?\n|\r/g, " ");
      else if (i = i.replace(/[ \t\r\n\u000c]+/g, " "), /^[ \t\r\n\u000c]/.test(i) && this.open == this.nodes.length - 1) {
        let o = r.content[r.content.length - 1], s = e.previousSibling;
        (!o || s && s.nodeName == "BR" || o.isText && /[ \t\r\n\u000c]$/.test(o.text)) && (i = i.slice(1));
      }
      i && this.insertNode(this.parser.schema.text(i), n), this.findInText(e);
    } else
      this.findInside(e);
  }
  // Try to find a handler for the given tag and use that to parse. If
  // none is found, the element's content nodes are added directly.
  addElement(e, n, i) {
    let r = e.nodeName.toLowerCase(), o;
    p5.hasOwnProperty(r) && this.parser.normalizeLists && SM(e);
    let s = this.options.ruleFromNode && this.options.ruleFromNode(e) || (o = this.parser.matchTag(e, this, i));
    if (s ? s.ignore : CM.hasOwnProperty(r))
      this.findInside(e), this.ignoreFallback(e, n);
    else if (!s || s.skip || s.closeParent) {
      s && s.closeParent ? this.open = Math.max(0, this.open - 1) : s && s.skip.nodeType && (e = s.skip);
      let a, l = this.top, c = this.needsBlock;
      if (h5.hasOwnProperty(r))
        l.content.length && l.content[0].isInline && this.open && (this.open--, l = this.top), a = !0, l.type || (this.needsBlock = !0);
      else if (!e.firstChild) {
        this.leafFallback(e, n);
        return;
      }
      let f = s && s.skip ? n : this.readStyles(e, n);
      f && this.addAll(e, f), a && this.sync(l), this.needsBlock = c;
    } else {
      let a = this.readStyles(e, n);
      a && this.addElementByRule(e, s, a, s.consuming === !1 ? o : void 0);
    }
  }
  // Called for leaf DOM nodes that would otherwise be ignored
  leafFallback(e, n) {
    e.nodeName == "BR" && this.top.type && this.top.type.inlineContent && this.addTextNode(e.ownerDocument.createTextNode(`
`), n);
  }
  // Called for ignored nodes
  ignoreFallback(e, n) {
    e.nodeName == "BR" && (!this.top.type || !this.top.type.inlineContent) && this.findPlace(this.parser.schema.text("-"), n);
  }
  // Run any style parser associated with the node's styles. Either
  // return an updated array of marks, or null to indicate some of the
  // styles had a rule with `ignore` set.
  readStyles(e, n) {
    let i = e.style;
    if (i && i.length)
      for (let r = 0; r < this.parser.matchedStyles.length; r++) {
        let o = this.parser.matchedStyles[r], s = i.getPropertyValue(o);
        if (s)
          for (let a = void 0; ; ) {
            let l = this.parser.matchStyle(o, s, this, a);
            if (!l)
              break;
            if (l.ignore)
              return null;
            if (l.clearMark ? n = n.filter((c) => !l.clearMark(c)) : n = n.concat(this.parser.schema.marks[l.mark].create(l.attrs)), l.consuming === !1)
              a = l;
            else
              break;
          }
      }
    return n;
  }
  // Look up a handler for the given node. If none are found, return
  // false. Otherwise, apply it, use its return value to drive the way
  // the node's content is wrapped, and return true.
  addElementByRule(e, n, i, r) {
    let o, s;
    if (n.node)
      if (s = this.parser.schema.nodes[n.node], s.isLeaf)
        this.insertNode(s.create(n.attrs), i) || this.leafFallback(e, i);
      else {
        let l = this.enter(s, n.attrs || null, i, n.preserveWhitespace);
        l && (o = !0, i = l);
      }
    else {
      let l = this.parser.schema.marks[n.mark];
      i = i.concat(l.create(n.attrs));
    }
    let a = this.top;
    if (s && s.isLeaf)
      this.findInside(e);
    else if (r)
      this.addElement(e, i, r);
    else if (n.getContent)
      this.findInside(e), n.getContent(e, this.parser.schema).forEach((l) => this.insertNode(l, i));
    else {
      let l = e;
      typeof n.contentElement == "string" ? l = e.querySelector(n.contentElement) : typeof n.contentElement == "function" ? l = n.contentElement(e) : n.contentElement && (l = n.contentElement), this.findAround(e, l, !0), this.addAll(l, i), this.findAround(e, l, !1);
    }
    o && this.sync(a) && this.open--;
  }
  // Add all child nodes between `startIndex` and `endIndex` (or the
  // whole node, if not given). If `sync` is passed, use it to
  // synchronize after every block element.
  addAll(e, n, i, r) {
    let o = i || 0;
    for (let s = i ? e.childNodes[i] : e.firstChild, a = r == null ? null : e.childNodes[r]; s != a; s = s.nextSibling, ++o)
      this.findAtPoint(e, o), this.addDOM(s, n);
    this.findAtPoint(e, o);
  }
  // Try to find a way to fit the given node type into the current
  // context. May add intermediate wrappers and/or leave non-solid
  // nodes that we're in.
  findPlace(e, n) {
    let i, r;
    for (let o = this.open; o >= 0; o--) {
      let s = this.nodes[o], a = s.findWrapping(e);
      if (a && (!i || i.length > a.length) && (i = a, r = s, !a.length) || s.solid)
        break;
    }
    if (!i)
      return null;
    this.sync(r);
    for (let o = 0; o < i.length; o++)
      n = this.enterInner(i[o], null, n, !1);
    return n;
  }
  // Try to insert the given node, adjusting the context when needed.
  insertNode(e, n) {
    if (e.isInline && this.needsBlock && !this.top.type) {
      let r = this.textblockFromContext();
      r && (n = this.enterInner(r, null, n));
    }
    let i = this.findPlace(e, n);
    if (i) {
      this.closeExtra();
      let r = this.top;
      r.match && (r.match = r.match.matchType(e.type));
      let o = Rt.none;
      for (let s of i.concat(e.marks))
        (r.type ? r.type.allowsMarkType(s.type) : Lk(s.type, e.type)) && (o = s.addToSet(o));
      return r.content.push(e.mark(o)), !0;
    }
    return !1;
  }
  // Try to start a node of the given type, adjusting the context when
  // necessary.
  enter(e, n, i, r) {
    let o = this.findPlace(e.create(n), i);
    return o && (o = this.enterInner(e, n, i, !0, r)), o;
  }
  // Open a node of the given type
  enterInner(e, n, i, r = !1, o) {
    this.closeExtra();
    let s = this.top;
    s.match = s.match && s.match.matchType(e);
    let a = Ok(e, o, s.options);
    s.options & xc && s.content.length == 0 && (a |= xc);
    let l = Rt.none;
    return i = i.filter((c) => (s.type ? s.type.allowsMarkType(c.type) : Lk(c.type, e)) ? (l = c.addToSet(l), !1) : !0), this.nodes.push(new td(e, n, l, r, null, a)), this.open++, i;
  }
  // Make sure all nodes above this.open are finished and added to
  // their parents
  closeExtra(e = !1) {
    let n = this.nodes.length - 1;
    if (n > this.open) {
      for (; n > this.open; n--)
        this.nodes[n - 1].content.push(this.nodes[n].finish(e));
      this.nodes.length = this.open + 1;
    }
  }
  finish() {
    return this.open = 0, this.closeExtra(this.isOpen), this.nodes[0].finish(this.isOpen || this.options.topOpen);
  }
  sync(e) {
    for (let n = this.open; n >= 0; n--)
      if (this.nodes[n] == e)
        return this.open = n, !0;
    return !1;
  }
  get currentPos() {
    this.closeExtra();
    let e = 0;
    for (let n = this.open; n >= 0; n--) {
      let i = this.nodes[n].content;
      for (let r = i.length - 1; r >= 0; r--)
        e += i[r].nodeSize;
      n && e++;
    }
    return e;
  }
  findAtPoint(e, n) {
    if (this.find)
      for (let i = 0; i < this.find.length; i++)
        this.find[i].node == e && this.find[i].offset == n && (this.find[i].pos = this.currentPos);
  }
  findInside(e) {
    if (this.find)
      for (let n = 0; n < this.find.length; n++)
        this.find[n].pos == null && e.nodeType == 1 && e.contains(this.find[n].node) && (this.find[n].pos = this.currentPos);
  }
  findAround(e, n, i) {
    if (e != n && this.find)
      for (let r = 0; r < this.find.length; r++)
        this.find[r].pos == null && e.nodeType == 1 && e.contains(this.find[r].node) && n.compareDocumentPosition(this.find[r].node) & (i ? 2 : 4) && (this.find[r].pos = this.currentPos);
  }
  findInText(e) {
    if (this.find)
      for (let n = 0; n < this.find.length; n++)
        this.find[n].node == e && (this.find[n].pos = this.currentPos - (e.nodeValue.length - this.find[n].offset));
  }
  // Determines whether the given context string matches this context.
  matchesContext(e) {
    if (e.indexOf("|") > -1)
      return e.split(/\s*\|\s*/).some(this.matchesContext, this);
    let n = e.split("/"), i = this.options.context, r = !this.isOpen && (!i || i.parent.type == this.nodes[0].type), o = -(i ? i.depth + 1 : 0) + (r ? 0 : 1), s = (a, l) => {
      for (; a >= 0; a--) {
        let c = n[a];
        if (c == "") {
          if (a == n.length - 1 || a == 0)
            continue;
          for (; l >= o; l--)
            if (s(a - 1, l))
              return !0;
          return !1;
        } else {
          let f = l > 0 || l == 0 && r ? this.nodes[l].type : i && l >= o ? i.node(l - o).type : null;
          if (!f || f.name != c && !f.isInGroup(c))
            return !1;
          l--;
        }
      }
      return !0;
    };
    return s(n.length - 1, this.open);
  }
  textblockFromContext() {
    let e = this.options.context;
    if (e)
      for (let n = e.depth; n >= 0; n--) {
        let i = e.node(n).contentMatchAt(e.indexAfter(n)).defaultType;
        if (i && i.isTextblock && i.defaultAttrs)
          return i;
      }
    for (let n in this.parser.schema.nodes) {
      let i = this.parser.schema.nodes[n];
      if (i.isTextblock && i.defaultAttrs)
        return i;
    }
  }
}
function SM(t) {
  for (let e = t.firstChild, n = null; e; e = e.nextSibling) {
    let i = e.nodeType == 1 ? e.nodeName.toLowerCase() : null;
    i && p5.hasOwnProperty(i) && n ? (n.appendChild(e), e = n) : i == "li" ? n = e : i && (n = null);
  }
}
function xM(t, e) {
  return (t.matches || t.msMatchesSelector || t.webkitMatchesSelector || t.mozMatchesSelector).call(t, e);
}
function Ik(t) {
  let e = {};
  for (let n in t)
    e[n] = t[n];
  return e;
}
function Lk(t, e) {
  let n = e.schema.nodes;
  for (let i in n) {
    let r = n[i];
    if (!r.allowsMarkType(t))
      continue;
    let o = [], s = (a) => {
      o.push(a);
      for (let l = 0; l < a.edgeCount; l++) {
        let { type: c, next: f } = a.edge(l);
        if (c == e || o.indexOf(f) < 0 && s(f))
          return !0;
      }
    };
    if (s(r.contentMatch))
      return !0;
  }
}
class Eo {
  /**
  Create a serializer. `nodes` should map node names to functions
  that take a node and return a description of the corresponding
  DOM. `marks` does the same for mark names, but also gets an
  argument that tells it whether the mark's content is block or
  inline content (for typical use, it'll always be inline). A mark
  serializer may be `null` to indicate that marks of that type
  should not be serialized.
  */
  constructor(e, n) {
    this.nodes = e, this.marks = n;
  }
  /**
  Serialize the content of this fragment to a DOM fragment. When
  not in the browser, the `document` option, containing a DOM
  document, should be passed so that the serializer can create
  nodes.
  */
  serializeFragment(e, n = {}, i) {
    i || (i = Ip(n).createDocumentFragment());
    let r = i, o = [];
    return e.forEach((s) => {
      if (o.length || s.marks.length) {
        let a = 0, l = 0;
        for (; a < o.length && l < s.marks.length; ) {
          let c = s.marks[l];
          if (!this.marks[c.type.name]) {
            l++;
            continue;
          }
          if (!c.eq(o[a][0]) || c.type.spec.spanning === !1)
            break;
          a++, l++;
        }
        for (; a < o.length; )
          r = o.pop()[1];
        for (; l < s.marks.length; ) {
          let c = s.marks[l++], f = this.serializeMark(c, s.isInline, n);
          f && (o.push([c, r]), r.appendChild(f.dom), r = f.contentDOM || f.dom);
        }
      }
      r.appendChild(this.serializeNodeInner(s, n));
    }), i;
  }
  /**
  @internal
  */
  serializeNodeInner(e, n) {
    let { dom: i, contentDOM: r } = eu(Ip(n), this.nodes[e.type.name](e), null, e.attrs);
    if (r) {
      if (e.isLeaf)
        throw new RangeError("Content hole not allowed in a leaf node spec");
      this.serializeFragment(e.content, n, r);
    }
    return i;
  }
  /**
  Serialize this node to a DOM node. This can be useful when you
  need to serialize a part of a document, as opposed to the whole
  document. To serialize a whole document, use
  [`serializeFragment`](https://prosemirror.net/docs/ref/#model.DOMSerializer.serializeFragment) on
  its [content](https://prosemirror.net/docs/ref/#model.Node.content).
  */
  serializeNode(e, n = {}) {
    let i = this.serializeNodeInner(e, n);
    for (let r = e.marks.length - 1; r >= 0; r--) {
      let o = this.serializeMark(e.marks[r], e.isInline, n);
      o && ((o.contentDOM || o.dom).appendChild(i), i = o.dom);
    }
    return i;
  }
  /**
  @internal
  */
  serializeMark(e, n, i = {}) {
    let r = this.marks[e.type.name];
    return r && eu(Ip(i), r(e, n), null, e.attrs);
  }
  static renderSpec(e, n, i = null, r) {
    return eu(e, n, i, r);
  }
  /**
  Build a serializer using the [`toDOM`](https://prosemirror.net/docs/ref/#model.NodeSpec.toDOM)
  properties in a schema's node and mark specs.
  */
  static fromSchema(e) {
    return e.cached.domSerializer || (e.cached.domSerializer = new Eo(this.nodesFromSchema(e), this.marksFromSchema(e)));
  }
  /**
  Gather the serializers in a schema's node specs into an object.
  This can be useful as a base to build a custom serializer from.
  */
  static nodesFromSchema(e) {
    let n = Dk(e.nodes);
    return n.text || (n.text = (i) => i.text), n;
  }
  /**
  Gather the serializers in a schema's mark specs into an object.
  */
  static marksFromSchema(e) {
    return Dk(e.marks);
  }
}
function Dk(t) {
  let e = {};
  for (let n in t) {
    let i = t[n].spec.toDOM;
    i && (e[n] = i);
  }
  return e;
}
function Ip(t) {
  return t.document || window.document;
}
const Pk = /* @__PURE__ */ new WeakMap();
function AM(t) {
  let e = Pk.get(t);
  return e === void 0 && Pk.set(t, e = MM(t)), e;
}
function MM(t) {
  let e = null;
  function n(i) {
    if (i && typeof i == "object")
      if (Array.isArray(i))
        if (typeof i[0] == "string")
          e || (e = []), e.push(i);
        else
          for (let r = 0; r < i.length; r++)
            n(i[r]);
      else
        for (let r in i)
          n(i[r]);
  }
  return n(t), e;
}
function eu(t, e, n, i) {
  if (typeof e == "string")
    return { dom: t.createTextNode(e) };
  if (e.nodeType != null)
    return { dom: e };
  if (e.dom && e.dom.nodeType != null)
    return e;
  let r = e[0], o;
  if (typeof r != "string")
    throw new RangeError("Invalid array passed to renderSpec");
  if (i && (o = AM(i)) && o.indexOf(e) > -1)
    throw new RangeError("Using an array from an attribute object as a DOM spec. This may be an attempted cross site scripting attack.");
  let s = r.indexOf(" ");
  s > 0 && (n = r.slice(0, s), r = r.slice(s + 1));
  let a, l = n ? t.createElementNS(n, r) : t.createElement(r), c = e[1], f = 1;
  if (c && typeof c == "object" && c.nodeType == null && !Array.isArray(c)) {
    f = 2;
    for (let d in c)
      if (c[d] != null) {
        let u = d.indexOf(" ");
        u > 0 ? l.setAttributeNS(d.slice(0, u), d.slice(u + 1), c[d]) : l.setAttribute(d, c[d]);
      }
  }
  for (let d = f; d < e.length; d++) {
    let u = e[d];
    if (u === 0) {
      if (d < e.length - 1 || d > f)
        throw new RangeError("Content hole must be the only child of its parent node");
      return { dom: l, contentDOM: l };
    } else {
      let { dom: h, contentDOM: p } = eu(t, u, n, i);
      if (l.appendChild(h), p) {
        if (a)
          throw new RangeError("Multiple content holes");
        a = p;
      }
    }
  }
  return { dom: l, contentDOM: a };
}
const m5 = 65535, g5 = Math.pow(2, 16);
function NM(t, e) {
  return t + e * g5;
}
function Fk(t) {
  return t & m5;
}
function OM(t) {
  return (t - (t & m5)) / g5;
}
const y5 = 1, v5 = 2, tu = 4, b5 = 8;
class L0 {
  /**
  @internal
  */
  constructor(e, n, i) {
    this.pos = e, this.delInfo = n, this.recover = i;
  }
  /**
  Tells you whether the position was deleted, that is, whether the
  step removed the token on the side queried (via the `assoc`)
  argument from the document.
  */
  get deleted() {
    return (this.delInfo & b5) > 0;
  }
  /**
  Tells you whether the token before the mapped position was deleted.
  */
  get deletedBefore() {
    return (this.delInfo & (y5 | tu)) > 0;
  }
  /**
  True when the token after the mapped position was deleted.
  */
  get deletedAfter() {
    return (this.delInfo & (v5 | tu)) > 0;
  }
  /**
  Tells whether any of the steps mapped through deletes across the
  position (including both the token before and after the
  position).
  */
  get deletedAcross() {
    return (this.delInfo & tu) > 0;
  }
}
class ci {
  /**
  Create a position map. The modifications to the document are
  represented as an array of numbers, in which each group of three
  represents a modified chunk as `[start, oldSize, newSize]`.
  */
  constructor(e, n = !1) {
    if (this.ranges = e, this.inverted = n, !e.length && ci.empty)
      return ci.empty;
  }
  /**
  @internal
  */
  recover(e) {
    let n = 0, i = Fk(e);
    if (!this.inverted)
      for (let r = 0; r < i; r++)
        n += this.ranges[r * 3 + 2] - this.ranges[r * 3 + 1];
    return this.ranges[i * 3] + n + OM(e);
  }
  mapResult(e, n = 1) {
    return this._map(e, n, !1);
  }
  map(e, n = 1) {
    return this._map(e, n, !0);
  }
  /**
  @internal
  */
  _map(e, n, i) {
    let r = 0, o = this.inverted ? 2 : 1, s = this.inverted ? 1 : 2;
    for (let a = 0; a < this.ranges.length; a += 3) {
      let l = this.ranges[a] - (this.inverted ? r : 0);
      if (l > e)
        break;
      let c = this.ranges[a + o], f = this.ranges[a + s], d = l + c;
      if (e <= d) {
        let u = c ? e == l ? -1 : e == d ? 1 : n : n, h = l + r + (u < 0 ? 0 : f);
        if (i)
          return h;
        let p = e == (n < 0 ? l : d) ? null : NM(a / 3, e - l), m = e == l ? v5 : e == d ? y5 : tu;
        return (n < 0 ? e != l : e != d) && (m |= b5), new L0(h, m, p);
      }
      r += f - c;
    }
    return i ? e + r : new L0(e + r, 0, null);
  }
  /**
  @internal
  */
  touches(e, n) {
    let i = 0, r = Fk(n), o = this.inverted ? 2 : 1, s = this.inverted ? 1 : 2;
    for (let a = 0; a < this.ranges.length; a += 3) {
      let l = this.ranges[a] - (this.inverted ? i : 0);
      if (l > e)
        break;
      let c = this.ranges[a + o], f = l + c;
      if (e <= f && a == r * 3)
        return !0;
      i += this.ranges[a + s] - c;
    }
    return !1;
  }
  /**
  Calls the given function on each of the changed ranges included in
  this map.
  */
  forEach(e) {
    let n = this.inverted ? 2 : 1, i = this.inverted ? 1 : 2;
    for (let r = 0, o = 0; r < this.ranges.length; r += 3) {
      let s = this.ranges[r], a = s - (this.inverted ? o : 0), l = s + (this.inverted ? 0 : o), c = this.ranges[r + n], f = this.ranges[r + i];
      e(a, a + c, l, l + f), o += f - c;
    }
  }
  /**
  Create an inverted version of this map. The result can be used to
  map positions in the post-step document to the pre-step document.
  */
  invert() {
    return new ci(this.ranges, !this.inverted);
  }
  /**
  @internal
  */
  toString() {
    return (this.inverted ? "-" : "") + JSON.stringify(this.ranges);
  }
  /**
  Create a map that moves all positions by offset `n` (which may be
  negative). This can be useful when applying steps meant for a
  sub-document to a larger document, or vice-versa.
  */
  static offset(e) {
    return e == 0 ? ci.empty : new ci(e < 0 ? [0, -e, 0] : [0, 0, e]);
  }
}
ci.empty = new ci([]);
class Qa {
  /**
  Create a new mapping with the given position maps.
  */
  constructor(e = [], n, i = 0, r = e.length) {
    this.maps = e, this.mirror = n, this.from = i, this.to = r;
  }
  /**
  Create a mapping that maps only through a part of this one.
  */
  slice(e = 0, n = this.maps.length) {
    return new Qa(this.maps, this.mirror, e, n);
  }
  /**
  @internal
  */
  copy() {
    return new Qa(this.maps.slice(), this.mirror && this.mirror.slice(), this.from, this.to);
  }
  /**
  Add a step map to the end of this mapping. If `mirrors` is
  given, it should be the index of the step map that is the mirror
  image of this one.
  */
  appendMap(e, n) {
    this.to = this.maps.push(e), n != null && this.setMirror(this.maps.length - 1, n);
  }
  /**
  Add all the step maps in a given mapping to this one (preserving
  mirroring information).
  */
  appendMapping(e) {
    for (let n = 0, i = this.maps.length; n < e.maps.length; n++) {
      let r = e.getMirror(n);
      this.appendMap(e.maps[n], r != null && r < n ? i + r : void 0);
    }
  }
  /**
  Finds the offset of the step map that mirrors the map at the
  given offset, in this mapping (as per the second argument to
  `appendMap`).
  */
  getMirror(e) {
    if (this.mirror) {
      for (let n = 0; n < this.mirror.length; n++)
        if (this.mirror[n] == e)
          return this.mirror[n + (n % 2 ? -1 : 1)];
    }
  }
  /**
  @internal
  */
  setMirror(e, n) {
    this.mirror || (this.mirror = []), this.mirror.push(e, n);
  }
  /**
  Append the inverse of the given mapping to this one.
  */
  appendMappingInverted(e) {
    for (let n = e.maps.length - 1, i = this.maps.length + e.maps.length; n >= 0; n--) {
      let r = e.getMirror(n);
      this.appendMap(e.maps[n].invert(), r != null && r > n ? i - r - 1 : void 0);
    }
  }
  /**
  Create an inverted version of this mapping.
  */
  invert() {
    let e = new Qa();
    return e.appendMappingInverted(this), e;
  }
  /**
  Map a position through this mapping.
  */
  map(e, n = 1) {
    if (this.mirror)
      return this._map(e, n, !0);
    for (let i = this.from; i < this.to; i++)
      e = this.maps[i].map(e, n);
    return e;
  }
  /**
  Map a position through this mapping, returning a mapping
  result.
  */
  mapResult(e, n = 1) {
    return this._map(e, n, !1);
  }
  /**
  @internal
  */
  _map(e, n, i) {
    let r = 0;
    for (let o = this.from; o < this.to; o++) {
      let s = this.maps[o], a = s.mapResult(e, n);
      if (a.recover != null) {
        let l = this.getMirror(o);
        if (l != null && l > o && l < this.to) {
          o = l, e = this.maps[l].recover(a.recover);
          continue;
        }
      }
      r |= a.delInfo, e = a.pos;
    }
    return i ? e : new L0(e, r, null);
  }
}
const Lp = /* @__PURE__ */ Object.create(null);
class Un {
  /**
  Get the step map that represents the changes made by this step,
  and which can be used to transform between positions in the old
  and the new document.
  */
  getMap() {
    return ci.empty;
  }
  /**
  Try to merge this step with another one, to be applied directly
  after it. Returns the merged step when possible, null if the
  steps can't be merged.
  */
  merge(e) {
    return null;
  }
  /**
  Deserialize a step from its JSON representation. Will call
  through to the step class' own implementation of this method.
  */
  static fromJSON(e, n) {
    if (!n || !n.stepType)
      throw new RangeError("Invalid input for Step.fromJSON");
    let i = Lp[n.stepType];
    if (!i)
      throw new RangeError(`No step type ${n.stepType} defined`);
    return i.fromJSON(e, n);
  }
  /**
  To be able to serialize steps to JSON, each step needs a string
  ID to attach to its JSON representation. Use this method to
  register an ID for your step classes. Try to pick something
  that's unlikely to clash with steps from other modules.
  */
  static jsonID(e, n) {
    if (e in Lp)
      throw new RangeError("Duplicate use of step JSON ID " + e);
    return Lp[e] = n, n.prototype.jsonID = e, n;
  }
}
class fn {
  /**
  @internal
  */
  constructor(e, n) {
    this.doc = e, this.failed = n;
  }
  /**
  Create a successful step result.
  */
  static ok(e) {
    return new fn(e, null);
  }
  /**
  Create a failed step result.
  */
  static fail(e) {
    return new fn(null, e);
  }
  /**
  Call [`Node.replace`](https://prosemirror.net/docs/ref/#model.Node.replace) with the given
  arguments. Create a successful result if it succeeds, and a
  failed one if it throws a `ReplaceError`.
  */
  static fromReplace(e, n, i, r) {
    try {
      return fn.ok(e.replace(n, i, r));
    } catch (o) {
      if (o instanceof Au)
        return fn.fail(o.message);
      throw o;
    }
  }
}
function ky(t, e, n) {
  let i = [];
  for (let r = 0; r < t.childCount; r++) {
    let o = t.child(r);
    o.content.size && (o = o.copy(ky(o.content, e, o))), o.isInline && (o = e(o, n, r)), i.push(o);
  }
  return ie.fromArray(i);
}
class ns extends Un {
  /**
  Create a mark step.
  */
  constructor(e, n, i) {
    super(), this.from = e, this.to = n, this.mark = i;
  }
  apply(e) {
    let n = e.slice(this.from, this.to), i = e.resolve(this.from), r = i.node(i.sharedDepth(this.to)), o = new be(ky(n.content, (s, a) => !s.isAtom || !a.type.allowsMarkType(this.mark.type) ? s : s.mark(this.mark.addToSet(s.marks)), r), n.openStart, n.openEnd);
    return fn.fromReplace(e, this.from, this.to, o);
  }
  invert() {
    return new Cr(this.from, this.to, this.mark);
  }
  map(e) {
    let n = e.mapResult(this.from, 1), i = e.mapResult(this.to, -1);
    return n.deleted && i.deleted || n.pos >= i.pos ? null : new ns(n.pos, i.pos, this.mark);
  }
  merge(e) {
    return e instanceof ns && e.mark.eq(this.mark) && this.from <= e.to && this.to >= e.from ? new ns(Math.min(this.from, e.from), Math.max(this.to, e.to), this.mark) : null;
  }
  toJSON() {
    return {
      stepType: "addMark",
      mark: this.mark.toJSON(),
      from: this.from,
      to: this.to
    };
  }
  /**
  @internal
  */
  static fromJSON(e, n) {
    if (typeof n.from != "number" || typeof n.to != "number")
      throw new RangeError("Invalid input for AddMarkStep.fromJSON");
    return new ns(n.from, n.to, e.markFromJSON(n.mark));
  }
}
Un.jsonID("addMark", ns);
class Cr extends Un {
  /**
  Create a mark-removing step.
  */
  constructor(e, n, i) {
    super(), this.from = e, this.to = n, this.mark = i;
  }
  apply(e) {
    let n = e.slice(this.from, this.to), i = new be(ky(n.content, (r) => r.mark(this.mark.removeFromSet(r.marks)), e), n.openStart, n.openEnd);
    return fn.fromReplace(e, this.from, this.to, i);
  }
  invert() {
    return new ns(this.from, this.to, this.mark);
  }
  map(e) {
    let n = e.mapResult(this.from, 1), i = e.mapResult(this.to, -1);
    return n.deleted && i.deleted || n.pos >= i.pos ? null : new Cr(n.pos, i.pos, this.mark);
  }
  merge(e) {
    return e instanceof Cr && e.mark.eq(this.mark) && this.from <= e.to && this.to >= e.from ? new Cr(Math.min(this.from, e.from), Math.max(this.to, e.to), this.mark) : null;
  }
  toJSON() {
    return {
      stepType: "removeMark",
      mark: this.mark.toJSON(),
      from: this.from,
      to: this.to
    };
  }
  /**
  @internal
  */
  static fromJSON(e, n) {
    if (typeof n.from != "number" || typeof n.to != "number")
      throw new RangeError("Invalid input for RemoveMarkStep.fromJSON");
    return new Cr(n.from, n.to, e.markFromJSON(n.mark));
  }
}
Un.jsonID("removeMark", Cr);
class is extends Un {
  /**
  Create a node mark step.
  */
  constructor(e, n) {
    super(), this.pos = e, this.mark = n;
  }
  apply(e) {
    let n = e.nodeAt(this.pos);
    if (!n)
      return fn.fail("No node at mark step's position");
    let i = n.type.create(n.attrs, null, this.mark.addToSet(n.marks));
    return fn.fromReplace(e, this.pos, this.pos + 1, new be(ie.from(i), 0, n.isLeaf ? 0 : 1));
  }
  invert(e) {
    let n = e.nodeAt(this.pos);
    if (n) {
      let i = this.mark.addToSet(n.marks);
      if (i.length == n.marks.length) {
        for (let r = 0; r < n.marks.length; r++)
          if (!n.marks[r].isInSet(i))
            return new is(this.pos, n.marks[r]);
        return new is(this.pos, this.mark);
      }
    }
    return new dl(this.pos, this.mark);
  }
  map(e) {
    let n = e.mapResult(this.pos, 1);
    return n.deletedAfter ? null : new is(n.pos, this.mark);
  }
  toJSON() {
    return { stepType: "addNodeMark", pos: this.pos, mark: this.mark.toJSON() };
  }
  /**
  @internal
  */
  static fromJSON(e, n) {
    if (typeof n.pos != "number")
      throw new RangeError("Invalid input for AddNodeMarkStep.fromJSON");
    return new is(n.pos, e.markFromJSON(n.mark));
  }
}
Un.jsonID("addNodeMark", is);
class dl extends Un {
  /**
  Create a mark-removing step.
  */
  constructor(e, n) {
    super(), this.pos = e, this.mark = n;
  }
  apply(e) {
    let n = e.nodeAt(this.pos);
    if (!n)
      return fn.fail("No node at mark step's position");
    let i = n.type.create(n.attrs, null, this.mark.removeFromSet(n.marks));
    return fn.fromReplace(e, this.pos, this.pos + 1, new be(ie.from(i), 0, n.isLeaf ? 0 : 1));
  }
  invert(e) {
    let n = e.nodeAt(this.pos);
    return !n || !this.mark.isInSet(n.marks) ? this : new is(this.pos, this.mark);
  }
  map(e) {
    let n = e.mapResult(this.pos, 1);
    return n.deletedAfter ? null : new dl(n.pos, this.mark);
  }
  toJSON() {
    return { stepType: "removeNodeMark", pos: this.pos, mark: this.mark.toJSON() };
  }
  /**
  @internal
  */
  static fromJSON(e, n) {
    if (typeof n.pos != "number")
      throw new RangeError("Invalid input for RemoveNodeMarkStep.fromJSON");
    return new dl(n.pos, e.markFromJSON(n.mark));
  }
}
Un.jsonID("removeNodeMark", dl);
class wn extends Un {
  /**
  The given `slice` should fit the 'gap' between `from` and
  `to`—the depths must line up, and the surrounding nodes must be
  able to be joined with the open sides of the slice. When
  `structure` is true, the step will fail if the content between
  from and to is not just a sequence of closing and then opening
  tokens (this is to guard against rebased replace steps
  overwriting something they weren't supposed to).
  */
  constructor(e, n, i, r = !1) {
    super(), this.from = e, this.to = n, this.slice = i, this.structure = r;
  }
  apply(e) {
    return this.structure && D0(e, this.from, this.to) ? fn.fail("Structure replace would overwrite content") : fn.fromReplace(e, this.from, this.to, this.slice);
  }
  getMap() {
    return new ci([this.from, this.to - this.from, this.slice.size]);
  }
  invert(e) {
    return new wn(this.from, this.from + this.slice.size, e.slice(this.from, this.to));
  }
  map(e) {
    let n = e.mapResult(this.from, 1), i = e.mapResult(this.to, -1);
    return n.deletedAcross && i.deletedAcross ? null : new wn(n.pos, Math.max(n.pos, i.pos), this.slice);
  }
  merge(e) {
    if (!(e instanceof wn) || e.structure || this.structure)
      return null;
    if (this.from + this.slice.size == e.from && !this.slice.openEnd && !e.slice.openStart) {
      let n = this.slice.size + e.slice.size == 0 ? be.empty : new be(this.slice.content.append(e.slice.content), this.slice.openStart, e.slice.openEnd);
      return new wn(this.from, this.to + (e.to - e.from), n, this.structure);
    } else if (e.to == this.from && !this.slice.openStart && !e.slice.openEnd) {
      let n = this.slice.size + e.slice.size == 0 ? be.empty : new be(e.slice.content.append(this.slice.content), e.slice.openStart, this.slice.openEnd);
      return new wn(e.from, this.to, n, this.structure);
    } else
      return null;
  }
  toJSON() {
    let e = { stepType: "replace", from: this.from, to: this.to };
    return this.slice.size && (e.slice = this.slice.toJSON()), this.structure && (e.structure = !0), e;
  }
  /**
  @internal
  */
  static fromJSON(e, n) {
    if (typeof n.from != "number" || typeof n.to != "number")
      throw new RangeError("Invalid input for ReplaceStep.fromJSON");
    return new wn(n.from, n.to, be.fromJSON(e, n.slice), !!n.structure);
  }
}
Un.jsonID("replace", wn);
class En extends Un {
  /**
  Create a replace-around step with the given range and gap.
  `insert` should be the point in the slice into which the content
  of the gap should be moved. `structure` has the same meaning as
  it has in the [`ReplaceStep`](https://prosemirror.net/docs/ref/#transform.ReplaceStep) class.
  */
  constructor(e, n, i, r, o, s, a = !1) {
    super(), this.from = e, this.to = n, this.gapFrom = i, this.gapTo = r, this.slice = o, this.insert = s, this.structure = a;
  }
  apply(e) {
    if (this.structure && (D0(e, this.from, this.gapFrom) || D0(e, this.gapTo, this.to)))
      return fn.fail("Structure gap-replace would overwrite content");
    let n = e.slice(this.gapFrom, this.gapTo);
    if (n.openStart || n.openEnd)
      return fn.fail("Gap is not a flat range");
    let i = this.slice.insertAt(this.insert, n.content);
    return i ? fn.fromReplace(e, this.from, this.to, i) : fn.fail("Content does not fit in gap");
  }
  getMap() {
    return new ci([
      this.from,
      this.gapFrom - this.from,
      this.insert,
      this.gapTo,
      this.to - this.gapTo,
      this.slice.size - this.insert
    ]);
  }
  invert(e) {
    let n = this.gapTo - this.gapFrom;
    return new En(this.from, this.from + this.slice.size + n, this.from + this.insert, this.from + this.insert + n, e.slice(this.from, this.to).removeBetween(this.gapFrom - this.from, this.gapTo - this.from), this.gapFrom - this.from, this.structure);
  }
  map(e) {
    let n = e.mapResult(this.from, 1), i = e.mapResult(this.to, -1), r = this.from == this.gapFrom ? n.pos : e.map(this.gapFrom, -1), o = this.to == this.gapTo ? i.pos : e.map(this.gapTo, 1);
    return n.deletedAcross && i.deletedAcross || r < n.pos || o > i.pos ? null : new En(n.pos, i.pos, r, o, this.slice, this.insert, this.structure);
  }
  toJSON() {
    let e = {
      stepType: "replaceAround",
      from: this.from,
      to: this.to,
      gapFrom: this.gapFrom,
      gapTo: this.gapTo,
      insert: this.insert
    };
    return this.slice.size && (e.slice = this.slice.toJSON()), this.structure && (e.structure = !0), e;
  }
  /**
  @internal
  */
  static fromJSON(e, n) {
    if (typeof n.from != "number" || typeof n.to != "number" || typeof n.gapFrom != "number" || typeof n.gapTo != "number" || typeof n.insert != "number")
      throw new RangeError("Invalid input for ReplaceAroundStep.fromJSON");
    return new En(n.from, n.to, n.gapFrom, n.gapTo, be.fromJSON(e, n.slice), n.insert, !!n.structure);
  }
}
Un.jsonID("replaceAround", En);
function D0(t, e, n) {
  let i = t.resolve(e), r = n - e, o = i.depth;
  for (; r > 0 && o > 0 && i.indexAfter(o) == i.node(o).childCount; )
    o--, r--;
  if (r > 0) {
    let s = i.node(o).maybeChild(i.indexAfter(o));
    for (; r > 0; ) {
      if (!s || s.isLeaf)
        return !0;
      s = s.firstChild, r--;
    }
  }
  return !1;
}
function RM(t, e, n, i) {
  let r = [], o = [], s, a;
  t.doc.nodesBetween(e, n, (l, c, f) => {
    if (!l.isInline)
      return;
    let d = l.marks;
    if (!i.isInSet(d) && f.type.allowsMarkType(i.type)) {
      let u = Math.max(c, e), h = Math.min(c + l.nodeSize, n), p = i.addToSet(d);
      for (let m = 0; m < d.length; m++)
        d[m].isInSet(p) || (s && s.to == u && s.mark.eq(d[m]) ? s.to = h : r.push(s = new Cr(u, h, d[m])));
      a && a.to == u ? a.to = h : o.push(a = new ns(u, h, i));
    }
  }), r.forEach((l) => t.step(l)), o.forEach((l) => t.step(l));
}
function IM(t, e, n, i) {
  let r = [], o = 0;
  t.doc.nodesBetween(e, n, (s, a) => {
    if (!s.isInline)
      return;
    o++;
    let l = null;
    if (i instanceof dh) {
      let c = s.marks, f;
      for (; f = i.isInSet(c); )
        (l || (l = [])).push(f), c = f.removeFromSet(c);
    } else i ? i.isInSet(s.marks) && (l = [i]) : l = s.marks;
    if (l && l.length) {
      let c = Math.min(a + s.nodeSize, n);
      for (let f = 0; f < l.length; f++) {
        let d = l[f], u;
        for (let h = 0; h < r.length; h++) {
          let p = r[h];
          p.step == o - 1 && d.eq(r[h].style) && (u = p);
        }
        u ? (u.to = c, u.step = o) : r.push({ style: d, from: Math.max(a, e), to: c, step: o });
      }
    }
  }), r.forEach((s) => t.step(new Cr(s.from, s.to, s.style)));
}
function wy(t, e, n, i = n.contentMatch, r = !0) {
  let o = t.doc.nodeAt(e), s = [], a = e + 1;
  for (let l = 0; l < o.childCount; l++) {
    let c = o.child(l), f = a + c.nodeSize, d = i.matchType(c.type);
    if (!d)
      s.push(new wn(a, f, be.empty));
    else {
      i = d;
      for (let u = 0; u < c.marks.length; u++)
        n.allowsMarkType(c.marks[u].type) || t.step(new Cr(a, f, c.marks[u]));
      if (r && c.isText && n.whitespace != "pre") {
        let u, h = /\r?\n|\r/g, p;
        for (; u = h.exec(c.text); )
          p || (p = new be(ie.from(n.schema.text(" ", n.allowedMarks(c.marks))), 0, 0)), s.push(new wn(a + u.index, a + u.index + u[0].length, p));
      }
    }
    a = f;
  }
  if (!i.validEnd) {
    let l = i.fillBefore(ie.empty, !0);
    t.replace(a, a, new be(l, 0, 0));
  }
  for (let l = s.length - 1; l >= 0; l--)
    t.step(s[l]);
}
function LM(t, e, n) {
  return (e == 0 || t.canReplace(e, t.childCount)) && (n == t.childCount || t.canReplace(0, n));
}
function Nl(t) {
  let n = t.parent.content.cutByIndex(t.startIndex, t.endIndex);
  for (let i = t.depth; ; --i) {
    let r = t.$from.node(i), o = t.$from.index(i), s = t.$to.indexAfter(i);
    if (i < t.depth && r.canReplace(o, s, n))
      return i;
    if (i == 0 || r.type.spec.isolating || !LM(r, o, s))
      break;
  }
  return null;
}
function DM(t, e, n) {
  let { $from: i, $to: r, depth: o } = e, s = i.before(o + 1), a = r.after(o + 1), l = s, c = a, f = ie.empty, d = 0;
  for (let p = o, m = !1; p > n; p--)
    m || i.index(p) > 0 ? (m = !0, f = ie.from(i.node(p).copy(f)), d++) : l--;
  let u = ie.empty, h = 0;
  for (let p = o, m = !1; p > n; p--)
    m || r.after(p + 1) < r.end(p) ? (m = !0, u = ie.from(r.node(p).copy(u)), h++) : c++;
  t.step(new En(l, c, s, a, new be(f.append(u), d, h), f.size - d, !0));
}
function k5(t, e, n = null, i = t) {
  let r = PM(t, e), o = r && FM(i, e);
  return o ? r.map(Bk).concat({ type: e, attrs: n }).concat(o.map(Bk)) : null;
}
function Bk(t) {
  return { type: t, attrs: null };
}
function PM(t, e) {
  let { parent: n, startIndex: i, endIndex: r } = t, o = n.contentMatchAt(i).findWrapping(e);
  if (!o)
    return null;
  let s = o.length ? o[0] : e;
  return n.canReplaceWith(i, r, s) ? o : null;
}
function FM(t, e) {
  let { parent: n, startIndex: i, endIndex: r } = t, o = n.child(i), s = e.contentMatch.findWrapping(o.type);
  if (!s)
    return null;
  let l = (s.length ? s[s.length - 1] : e).contentMatch;
  for (let c = i; l && c < r; c++)
    l = l.matchType(n.child(c).type);
  return !l || !l.validEnd ? null : s;
}
function BM(t, e, n) {
  let i = ie.empty;
  for (let s = n.length - 1; s >= 0; s--) {
    if (i.size) {
      let a = n[s].type.contentMatch.matchFragment(i);
      if (!a || !a.validEnd)
        throw new RangeError("Wrapper type given to Transform.wrap does not form valid content of its parent wrapper");
    }
    i = ie.from(n[s].type.create(n[s].attrs, i));
  }
  let r = e.start, o = e.end;
  t.step(new En(r, o, r, o, new be(i, 0, 0), n.length, !0));
}
function HM(t, e, n, i, r) {
  if (!i.isTextblock)
    throw new RangeError("Type given to setBlockType should be a textblock");
  let o = t.steps.length;
  t.doc.nodesBetween(e, n, (s, a) => {
    let l = typeof r == "function" ? r(s) : r;
    if (s.isTextblock && !s.hasMarkup(i, l) && $M(t.doc, t.mapping.slice(o).map(a), i)) {
      let c = null;
      if (i.schema.linebreakReplacement) {
        let h = i.whitespace == "pre", p = !!i.contentMatch.matchType(i.schema.linebreakReplacement);
        h && !p ? c = !1 : !h && p && (c = !0);
      }
      c === !1 && _5(t, s, a, o), wy(t, t.mapping.slice(o).map(a, 1), i, void 0, c === null);
      let f = t.mapping.slice(o), d = f.map(a, 1), u = f.map(a + s.nodeSize, 1);
      return t.step(new En(d, u, d + 1, u - 1, new be(ie.from(i.create(l, null, s.marks)), 0, 0), 1, !0)), c === !0 && w5(t, s, a, o), !1;
    }
  });
}
function w5(t, e, n, i) {
  e.forEach((r, o) => {
    if (r.isText) {
      let s, a = /\r?\n|\r/g;
      for (; s = a.exec(r.text); ) {
        let l = t.mapping.slice(i).map(n + 1 + o + s.index);
        t.replaceWith(l, l + 1, e.type.schema.linebreakReplacement.create());
      }
    }
  });
}
function _5(t, e, n, i) {
  e.forEach((r, o) => {
    if (r.type == r.type.schema.linebreakReplacement) {
      let s = t.mapping.slice(i).map(n + 1 + o);
      t.replaceWith(s, s + 1, e.type.schema.text(`
`));
    }
  });
}
function $M(t, e, n) {
  let i = t.resolve(e), r = i.index();
  return i.parent.canReplaceWith(r, r + 1, n);
}
function jM(t, e, n, i, r) {
  let o = t.doc.nodeAt(e);
  if (!o)
    throw new RangeError("No node at given position");
  n || (n = o.type);
  let s = n.create(i, null, r || o.marks);
  if (o.isLeaf)
    return t.replaceWith(e, e + o.nodeSize, s);
  if (!n.validContent(o.content))
    throw new RangeError("Invalid content for node type " + n.name);
  t.step(new En(e, e + o.nodeSize, e + 1, e + o.nodeSize - 1, new be(ie.from(s), 0, 0), 1, !0));
}
function Za(t, e, n = 1, i) {
  let r = t.resolve(e), o = r.depth - n, s = i && i[i.length - 1] || r.parent;
  if (o < 0 || r.parent.type.spec.isolating || !r.parent.canReplace(r.index(), r.parent.childCount) || !s.type.validContent(r.parent.content.cutByIndex(r.index(), r.parent.childCount)))
    return !1;
  for (let c = r.depth - 1, f = n - 2; c > o; c--, f--) {
    let d = r.node(c), u = r.index(c);
    if (d.type.spec.isolating)
      return !1;
    let h = d.content.cutByIndex(u, d.childCount), p = i && i[f + 1];
    p && (h = h.replaceChild(0, p.type.create(p.attrs)));
    let m = i && i[f] || d;
    if (!d.canReplace(u + 1, d.childCount) || !m.type.validContent(h))
      return !1;
  }
  let a = r.indexAfter(o), l = i && i[0];
  return r.node(o).canReplaceWith(a, a, l ? l.type : r.node(o + 1).type);
}
function zM(t, e, n = 1, i) {
  let r = t.doc.resolve(e), o = ie.empty, s = ie.empty;
  for (let a = r.depth, l = r.depth - n, c = n - 1; a > l; a--, c--) {
    o = ie.from(r.node(a).copy(o));
    let f = i && i[c];
    s = ie.from(f ? f.type.create(f.attrs, s) : r.node(a).copy(s));
  }
  t.step(new wn(e, e, new be(o.append(s), n, n), !0));
}
function va(t, e) {
  let n = t.resolve(e), i = n.index();
  return E5(n.nodeBefore, n.nodeAfter) && n.parent.canReplace(i, i + 1);
}
function UM(t, e) {
  e.content.size || t.type.compatibleContent(e.type);
  let n = t.contentMatchAt(t.childCount), { linebreakReplacement: i } = t.type.schema;
  for (let r = 0; r < e.childCount; r++) {
    let o = e.child(r), s = o.type == i ? t.type.schema.nodes.text : o.type;
    if (n = n.matchType(s), !n || !t.type.allowsMarks(o.marks))
      return !1;
  }
  return n.validEnd;
}
function E5(t, e) {
  return !!(t && e && !t.isLeaf && UM(t, e));
}
function uh(t, e, n = -1) {
  let i = t.resolve(e);
  for (let r = i.depth; ; r--) {
    let o, s, a = i.index(r);
    if (r == i.depth ? (o = i.nodeBefore, s = i.nodeAfter) : n > 0 ? (o = i.node(r + 1), a++, s = i.node(r).maybeChild(a)) : (o = i.node(r).maybeChild(a - 1), s = i.node(r + 1)), o && !o.isTextblock && E5(o, s) && i.node(r).canReplace(a, a + 1))
      return e;
    if (r == 0)
      break;
    e = n < 0 ? i.before(r) : i.after(r);
  }
}
function VM(t, e, n) {
  let i = null, { linebreakReplacement: r } = t.doc.type.schema, o = t.doc.resolve(e - n), s = o.node().type;
  if (r && s.inlineContent) {
    let f = s.whitespace == "pre", d = !!s.contentMatch.matchType(r);
    f && !d ? i = !1 : !f && d && (i = !0);
  }
  let a = t.steps.length;
  if (i === !1) {
    let f = t.doc.resolve(e + n);
    _5(t, f.node(), f.before(), a);
  }
  s.inlineContent && wy(t, e + n - 1, s, o.node().contentMatchAt(o.index()), i == null);
  let l = t.mapping.slice(a), c = l.map(e - n);
  if (t.step(new wn(c, l.map(e + n, -1), be.empty, !0)), i === !0) {
    let f = t.doc.resolve(c);
    w5(t, f.node(), f.before(), t.steps.length);
  }
  return t;
}
function WM(t, e, n) {
  let i = t.resolve(e);
  if (i.parent.canReplaceWith(i.index(), i.index(), n))
    return e;
  if (i.parentOffset == 0)
    for (let r = i.depth - 1; r >= 0; r--) {
      let o = i.index(r);
      if (i.node(r).canReplaceWith(o, o, n))
        return i.before(r + 1);
      if (o > 0)
        return null;
    }
  if (i.parentOffset == i.parent.content.size)
    for (let r = i.depth - 1; r >= 0; r--) {
      let o = i.indexAfter(r);
      if (i.node(r).canReplaceWith(o, o, n))
        return i.after(r + 1);
      if (o < i.node(r).childCount)
        return null;
    }
  return null;
}
function T5(t, e, n) {
  let i = t.resolve(e);
  if (!n.content.size)
    return e;
  let r = n.content;
  for (let o = 0; o < n.openStart; o++)
    r = r.firstChild.content;
  for (let o = 1; o <= (n.openStart == 0 && n.size ? 2 : 1); o++)
    for (let s = i.depth; s >= 0; s--) {
      let a = s == i.depth ? 0 : i.pos <= (i.start(s + 1) + i.end(s + 1)) / 2 ? -1 : 1, l = i.index(s) + (a > 0 ? 1 : 0), c = i.node(s), f = !1;
      if (o == 1)
        f = c.canReplace(l, l, r);
      else {
        let d = c.contentMatchAt(l).findWrapping(r.firstChild.type);
        f = d && c.canReplaceWith(l, l, d[0]);
      }
      if (f)
        return a == 0 ? i.pos : a < 0 ? i.before(s + 1) : i.after(s + 1);
    }
  return null;
}
function hh(t, e, n = e, i = be.empty) {
  if (e == n && !i.size)
    return null;
  let r = t.resolve(e), o = t.resolve(n);
  return C5(r, o, i) ? new wn(e, n, i) : new qM(r, o, i).fit();
}
function C5(t, e, n) {
  return !n.openStart && !n.openEnd && t.start() == e.start() && t.parent.canReplace(t.index(), e.index(), n.content);
}
class qM {
  constructor(e, n, i) {
    this.$from = e, this.$to = n, this.unplaced = i, this.frontier = [], this.placed = ie.empty;
    for (let r = 0; r <= e.depth; r++) {
      let o = e.node(r);
      this.frontier.push({
        type: o.type,
        match: o.contentMatchAt(e.indexAfter(r))
      });
    }
    for (let r = e.depth; r > 0; r--)
      this.placed = ie.from(e.node(r).copy(this.placed));
  }
  get depth() {
    return this.frontier.length - 1;
  }
  fit() {
    for (; this.unplaced.size; ) {
      let c = this.findFittable();
      c ? this.placeNodes(c) : this.openMore() || this.dropNode();
    }
    let e = this.mustMoveInline(), n = this.placed.size - this.depth - this.$from.depth, i = this.$from, r = this.close(e < 0 ? this.$to : i.doc.resolve(e));
    if (!r)
      return null;
    let o = this.placed, s = i.depth, a = r.depth;
    for (; s && a && o.childCount == 1; )
      o = o.firstChild.content, s--, a--;
    let l = new be(o, s, a);
    return e > -1 ? new En(i.pos, e, this.$to.pos, this.$to.end(), l, n) : l.size || i.pos != this.$to.pos ? new wn(i.pos, r.pos, l) : null;
  }
  // Find a position on the start spine of `this.unplaced` that has
  // content that can be moved somewhere on the frontier. Returns two
  // depths, one for the slice and one for the frontier.
  findFittable() {
    let e = this.unplaced.openStart;
    for (let n = this.unplaced.content, i = 0, r = this.unplaced.openEnd; i < e; i++) {
      let o = n.firstChild;
      if (n.childCount > 1 && (r = 0), o.type.spec.isolating && r <= i) {
        e = i;
        break;
      }
      n = o.content;
    }
    for (let n = 1; n <= 2; n++)
      for (let i = n == 1 ? e : this.unplaced.openStart; i >= 0; i--) {
        let r, o = null;
        i ? (o = Dp(this.unplaced.content, i - 1).firstChild, r = o.content) : r = this.unplaced.content;
        let s = r.firstChild;
        for (let a = this.depth; a >= 0; a--) {
          let { type: l, match: c } = this.frontier[a], f, d = null;
          if (n == 1 && (s ? c.matchType(s.type) || (d = c.fillBefore(ie.from(s), !1)) : o && l.compatibleContent(o.type)))
            return { sliceDepth: i, frontierDepth: a, parent: o, inject: d };
          if (n == 2 && s && (f = c.findWrapping(s.type)))
            return { sliceDepth: i, frontierDepth: a, parent: o, wrap: f };
          if (o && c.matchType(o.type))
            break;
        }
      }
  }
  openMore() {
    let { content: e, openStart: n, openEnd: i } = this.unplaced, r = Dp(e, n);
    return !r.childCount || r.firstChild.isLeaf ? !1 : (this.unplaced = new be(e, n + 1, Math.max(i, r.size + n >= e.size - i ? n + 1 : 0)), !0);
  }
  dropNode() {
    let { content: e, openStart: n, openEnd: i } = this.unplaced, r = Dp(e, n);
    if (r.childCount <= 1 && n > 0) {
      let o = e.size - n <= n + r.size;
      this.unplaced = new be(kc(e, n - 1, 1), n - 1, o ? n - 1 : i);
    } else
      this.unplaced = new be(kc(e, n, 1), n, i);
  }
  // Move content from the unplaced slice at `sliceDepth` to the
  // frontier node at `frontierDepth`. Close that frontier node when
  // applicable.
  placeNodes({ sliceDepth: e, frontierDepth: n, parent: i, inject: r, wrap: o }) {
    for (; this.depth > n; )
      this.closeFrontierNode();
    if (o)
      for (let m = 0; m < o.length; m++)
        this.openFrontierNode(o[m]);
    let s = this.unplaced, a = i ? i.content : s.content, l = s.openStart - e, c = 0, f = [], { match: d, type: u } = this.frontier[n];
    if (r) {
      for (let m = 0; m < r.childCount; m++)
        f.push(r.child(m));
      d = d.matchFragment(r);
    }
    let h = a.size + e - (s.content.size - s.openEnd);
    for (; c < a.childCount; ) {
      let m = a.child(c), v = d.matchType(m.type);
      if (!v)
        break;
      c++, (c > 1 || l == 0 || m.content.size) && (d = v, f.push(S5(m.mark(u.allowedMarks(m.marks)), c == 1 ? l : 0, c == a.childCount ? h : -1)));
    }
    let p = c == a.childCount;
    p || (h = -1), this.placed = wc(this.placed, n, ie.from(f)), this.frontier[n].match = d, p && h < 0 && i && i.type == this.frontier[this.depth].type && this.frontier.length > 1 && this.closeFrontierNode();
    for (let m = 0, v = a; m < h; m++) {
      let y = v.lastChild;
      this.frontier.push({ type: y.type, match: y.contentMatchAt(y.childCount) }), v = y.content;
    }
    this.unplaced = p ? e == 0 ? be.empty : new be(kc(s.content, e - 1, 1), e - 1, h < 0 ? s.openEnd : e - 1) : new be(kc(s.content, e, c), s.openStart, s.openEnd);
  }
  mustMoveInline() {
    if (!this.$to.parent.isTextblock)
      return -1;
    let e = this.frontier[this.depth], n;
    if (!e.type.isTextblock || !Pp(this.$to, this.$to.depth, e.type, e.match, !1) || this.$to.depth == this.depth && (n = this.findCloseLevel(this.$to)) && n.depth == this.depth)
      return -1;
    let { depth: i } = this.$to, r = this.$to.after(i);
    for (; i > 1 && r == this.$to.end(--i); )
      ++r;
    return r;
  }
  findCloseLevel(e) {
    e: for (let n = Math.min(this.depth, e.depth); n >= 0; n--) {
      let { match: i, type: r } = this.frontier[n], o = n < e.depth && e.end(n + 1) == e.pos + (e.depth - (n + 1)), s = Pp(e, n, r, i, o);
      if (s) {
        for (let a = n - 1; a >= 0; a--) {
          let { match: l, type: c } = this.frontier[a], f = Pp(e, a, c, l, !0);
          if (!f || f.childCount)
            continue e;
        }
        return { depth: n, fit: s, move: o ? e.doc.resolve(e.after(n + 1)) : e };
      }
    }
  }
  close(e) {
    let n = this.findCloseLevel(e);
    if (!n)
      return null;
    for (; this.depth > n.depth; )
      this.closeFrontierNode();
    n.fit.childCount && (this.placed = wc(this.placed, n.depth, n.fit)), e = n.move;
    for (let i = n.depth + 1; i <= e.depth; i++) {
      let r = e.node(i), o = r.type.contentMatch.fillBefore(r.content, !0, e.index(i));
      this.openFrontierNode(r.type, r.attrs, o);
    }
    return e;
  }
  openFrontierNode(e, n = null, i) {
    let r = this.frontier[this.depth];
    r.match = r.match.matchType(e), this.placed = wc(this.placed, this.depth, ie.from(e.create(n, i))), this.frontier.push({ type: e, match: e.contentMatch });
  }
  closeFrontierNode() {
    let n = this.frontier.pop().match.fillBefore(ie.empty, !0);
    n.childCount && (this.placed = wc(this.placed, this.frontier.length, n));
  }
}
function kc(t, e, n) {
  return e == 0 ? t.cutByIndex(n, t.childCount) : t.replaceChild(0, t.firstChild.copy(kc(t.firstChild.content, e - 1, n)));
}
function wc(t, e, n) {
  return e == 0 ? t.append(n) : t.replaceChild(t.childCount - 1, t.lastChild.copy(wc(t.lastChild.content, e - 1, n)));
}
function Dp(t, e) {
  for (let n = 0; n < e; n++)
    t = t.firstChild.content;
  return t;
}
function S5(t, e, n) {
  if (e <= 0)
    return t;
  let i = t.content;
  return e > 1 && (i = i.replaceChild(0, S5(i.firstChild, e - 1, i.childCount == 1 ? n - 1 : 0))), e > 0 && (i = t.type.contentMatch.fillBefore(i).append(i), n <= 0 && (i = i.append(t.type.contentMatch.matchFragment(i).fillBefore(ie.empty, !0)))), t.copy(i);
}
function Pp(t, e, n, i, r) {
  let o = t.node(e), s = r ? t.indexAfter(e) : t.index(e);
  if (s == o.childCount && !n.compatibleContent(o.type))
    return null;
  let a = i.fillBefore(o.content, !0, s);
  return a && !GM(n, o.content, s) ? a : null;
}
function GM(t, e, n) {
  for (let i = n; i < e.childCount; i++)
    if (!t.allowsMarks(e.child(i).marks))
      return !0;
  return !1;
}
function KM(t) {
  return t.spec.defining || t.spec.definingForContent;
}
function YM(t, e, n, i) {
  if (!i.size)
    return t.deleteRange(e, n);
  let r = t.doc.resolve(e), o = t.doc.resolve(n);
  if (C5(r, o, i))
    return t.step(new wn(e, n, i));
  let s = A5(r, t.doc.resolve(n));
  s[s.length - 1] == 0 && s.pop();
  let a = -(r.depth + 1);
  s.unshift(a);
  for (let u = r.depth, h = r.pos - 1; u > 0; u--, h--) {
    let p = r.node(u).type.spec;
    if (p.defining || p.definingAsContext || p.isolating)
      break;
    s.indexOf(u) > -1 ? a = u : r.before(u) == h && s.splice(1, 0, -u);
  }
  let l = s.indexOf(a), c = [], f = i.openStart;
  for (let u = i.content, h = 0; ; h++) {
    let p = u.firstChild;
    if (c.push(p), h == i.openStart)
      break;
    u = p.content;
  }
  for (let u = f - 1; u >= 0; u--) {
    let h = c[u], p = KM(h.type);
    if (p && !h.sameMarkup(r.node(Math.abs(a) - 1)))
      f = u;
    else if (p || !h.type.isTextblock)
      break;
  }
  for (let u = i.openStart; u >= 0; u--) {
    let h = (u + f + 1) % (i.openStart + 1), p = c[h];
    if (p)
      for (let m = 0; m < s.length; m++) {
        let v = s[(m + l) % s.length], y = !0;
        v < 0 && (y = !1, v = -v);
        let C = r.node(v - 1), k = r.index(v - 1);
        if (C.canReplaceWith(k, k, p.type, p.marks))
          return t.replace(r.before(v), y ? o.after(v) : n, new be(x5(i.content, 0, i.openStart, h), h, i.openEnd));
      }
  }
  let d = t.steps.length;
  for (let u = s.length - 1; u >= 0 && (t.replace(e, n, i), !(t.steps.length > d)); u--) {
    let h = s[u];
    h < 0 || (e = r.before(h), n = o.after(h));
  }
}
function x5(t, e, n, i, r) {
  if (e < n) {
    let o = t.firstChild;
    t = t.replaceChild(0, o.copy(x5(o.content, e + 1, n, i, o)));
  }
  if (e > i) {
    let o = r.contentMatchAt(0), s = o.fillBefore(t).append(t);
    t = s.append(o.matchFragment(s).fillBefore(ie.empty, !0));
  }
  return t;
}
function JM(t, e, n, i) {
  if (!i.isInline && e == n && t.doc.resolve(e).parent.content.size) {
    let r = WM(t.doc, e, i.type);
    r != null && (e = n = r);
  }
  t.replaceRange(e, n, new be(ie.from(i), 0, 0));
}
function XM(t, e, n) {
  let i = t.doc.resolve(e), r = t.doc.resolve(n), o = A5(i, r);
  for (let s = 0; s < o.length; s++) {
    let a = o[s], l = s == o.length - 1;
    if (l && a == 0 || i.node(a).type.contentMatch.validEnd)
      return t.delete(i.start(a), r.end(a));
    if (a > 0 && (l || i.node(a - 1).canReplace(i.index(a - 1), r.indexAfter(a - 1))))
      return t.delete(i.before(a), r.after(a));
  }
  for (let s = 1; s <= i.depth && s <= r.depth; s++)
    if (e - i.start(s) == i.depth - s && n > i.end(s) && r.end(s) - n != r.depth - s && i.start(s - 1) == r.start(s - 1) && i.node(s - 1).canReplace(i.index(s - 1), r.index(s - 1)))
      return t.delete(i.before(s), n);
  t.delete(e, n);
}
function A5(t, e) {
  let n = [], i = Math.min(t.depth, e.depth);
  for (let r = i; r >= 0; r--) {
    let o = t.start(r);
    if (o < t.pos - (t.depth - r) || e.end(r) > e.pos + (e.depth - r) || t.node(r).type.spec.isolating || e.node(r).type.spec.isolating)
      break;
    (o == e.start(r) || r == t.depth && r == e.depth && t.parent.inlineContent && e.parent.inlineContent && r && e.start(r - 1) == o - 1) && n.push(r);
  }
  return n;
}
class el extends Un {
  /**
  Construct an attribute step.
  */
  constructor(e, n, i) {
    super(), this.pos = e, this.attr = n, this.value = i;
  }
  apply(e) {
    let n = e.nodeAt(this.pos);
    if (!n)
      return fn.fail("No node at attribute step's position");
    let i = /* @__PURE__ */ Object.create(null);
    for (let o in n.attrs)
      i[o] = n.attrs[o];
    i[this.attr] = this.value;
    let r = n.type.create(i, null, n.marks);
    return fn.fromReplace(e, this.pos, this.pos + 1, new be(ie.from(r), 0, n.isLeaf ? 0 : 1));
  }
  getMap() {
    return ci.empty;
  }
  invert(e) {
    return new el(this.pos, this.attr, e.nodeAt(this.pos).attrs[this.attr]);
  }
  map(e) {
    let n = e.mapResult(this.pos, 1);
    return n.deletedAfter ? null : new el(n.pos, this.attr, this.value);
  }
  toJSON() {
    return { stepType: "attr", pos: this.pos, attr: this.attr, value: this.value };
  }
  static fromJSON(e, n) {
    if (typeof n.pos != "number" || typeof n.attr != "string")
      throw new RangeError("Invalid input for AttrStep.fromJSON");
    return new el(n.pos, n.attr, n.value);
  }
}
Un.jsonID("attr", el);
class Kc extends Un {
  /**
  Construct an attribute step.
  */
  constructor(e, n) {
    super(), this.attr = e, this.value = n;
  }
  apply(e) {
    let n = /* @__PURE__ */ Object.create(null);
    for (let r in e.attrs)
      n[r] = e.attrs[r];
    n[this.attr] = this.value;
    let i = e.type.create(n, e.content, e.marks);
    return fn.ok(i);
  }
  getMap() {
    return ci.empty;
  }
  invert(e) {
    return new Kc(this.attr, e.attrs[this.attr]);
  }
  map(e) {
    return this;
  }
  toJSON() {
    return { stepType: "docAttr", attr: this.attr, value: this.value };
  }
  static fromJSON(e, n) {
    if (typeof n.attr != "string")
      throw new RangeError("Invalid input for DocAttrStep.fromJSON");
    return new Kc(n.attr, n.value);
  }
}
Un.jsonID("docAttr", Kc);
let ul = class extends Error {
};
ul = function t(e) {
  let n = Error.call(this, e);
  return n.__proto__ = t.prototype, n;
};
ul.prototype = Object.create(Error.prototype);
ul.prototype.constructor = ul;
ul.prototype.name = "TransformError";
class _y {
  /**
  Create a transform that starts with the given document.
  */
  constructor(e) {
    this.doc = e, this.steps = [], this.docs = [], this.mapping = new Qa();
  }
  /**
  The starting document.
  */
  get before() {
    return this.docs.length ? this.docs[0] : this.doc;
  }
  /**
  Apply a new step in this transform, saving the result. Throws an
  error when the step fails.
  */
  step(e) {
    let n = this.maybeStep(e);
    if (n.failed)
      throw new ul(n.failed);
    return this;
  }
  /**
  Try to apply a step in this transformation, ignoring it if it
  fails. Returns the step result.
  */
  maybeStep(e) {
    let n = e.apply(this.doc);
    return n.failed || this.addStep(e, n.doc), n;
  }
  /**
  True when the document has been changed (when there are any
  steps).
  */
  get docChanged() {
    return this.steps.length > 0;
  }
  /**
  @internal
  */
  addStep(e, n) {
    this.docs.push(this.doc), this.steps.push(e), this.mapping.appendMap(e.getMap()), this.doc = n;
  }
  /**
  Replace the part of the document between `from` and `to` with the
  given `slice`.
  */
  replace(e, n = e, i = be.empty) {
    let r = hh(this.doc, e, n, i);
    return r && this.step(r), this;
  }
  /**
  Replace the given range with the given content, which may be a
  fragment, node, or array of nodes.
  */
  replaceWith(e, n, i) {
    return this.replace(e, n, new be(ie.from(i), 0, 0));
  }
  /**
  Delete the content between the given positions.
  */
  delete(e, n) {
    return this.replace(e, n, be.empty);
  }
  /**
  Insert the given content at the given position.
  */
  insert(e, n) {
    return this.replaceWith(e, e, n);
  }
  /**
  Replace a range of the document with a given slice, using
  `from`, `to`, and the slice's
  [`openStart`](https://prosemirror.net/docs/ref/#model.Slice.openStart) property as hints, rather
  than fixed start and end points. This method may grow the
  replaced area or close open nodes in the slice in order to get a
  fit that is more in line with WYSIWYG expectations, by dropping
  fully covered parent nodes of the replaced region when they are
  marked [non-defining as
  context](https://prosemirror.net/docs/ref/#model.NodeSpec.definingAsContext), or including an
  open parent node from the slice that _is_ marked as [defining
  its content](https://prosemirror.net/docs/ref/#model.NodeSpec.definingForContent).
  
  This is the method, for example, to handle paste. The similar
  [`replace`](https://prosemirror.net/docs/ref/#transform.Transform.replace) method is a more
  primitive tool which will _not_ move the start and end of its given
  range, and is useful in situations where you need more precise
  control over what happens.
  */
  replaceRange(e, n, i) {
    return YM(this, e, n, i), this;
  }
  /**
  Replace the given range with a node, but use `from` and `to` as
  hints, rather than precise positions. When from and to are the same
  and are at the start or end of a parent node in which the given
  node doesn't fit, this method may _move_ them out towards a parent
  that does allow the given node to be placed. When the given range
  completely covers a parent node, this method may completely replace
  that parent node.
  */
  replaceRangeWith(e, n, i) {
    return JM(this, e, n, i), this;
  }
  /**
  Delete the given range, expanding it to cover fully covered
  parent nodes until a valid replace is found.
  */
  deleteRange(e, n) {
    return XM(this, e, n), this;
  }
  /**
  Split the content in the given range off from its parent, if there
  is sibling content before or after it, and move it up the tree to
  the depth specified by `target`. You'll probably want to use
  [`liftTarget`](https://prosemirror.net/docs/ref/#transform.liftTarget) to compute `target`, to make
  sure the lift is valid.
  */
  lift(e, n) {
    return DM(this, e, n), this;
  }
  /**
  Join the blocks around the given position. If depth is 2, their
  last and first siblings are also joined, and so on.
  */
  join(e, n = 1) {
    return VM(this, e, n), this;
  }
  /**
  Wrap the given [range](https://prosemirror.net/docs/ref/#model.NodeRange) in the given set of wrappers.
  The wrappers are assumed to be valid in this position, and should
  probably be computed with [`findWrapping`](https://prosemirror.net/docs/ref/#transform.findWrapping).
  */
  wrap(e, n) {
    return BM(this, e, n), this;
  }
  /**
  Set the type of all textblocks (partly) between `from` and `to` to
  the given node type with the given attributes.
  */
  setBlockType(e, n = e, i, r = null) {
    return HM(this, e, n, i, r), this;
  }
  /**
  Change the type, attributes, and/or marks of the node at `pos`.
  When `type` isn't given, the existing node type is preserved,
  */
  setNodeMarkup(e, n, i = null, r) {
    return jM(this, e, n, i, r), this;
  }
  /**
  Set a single attribute on a given node to a new value.
  The `pos` addresses the document content. Use `setDocAttribute`
  to set attributes on the document itself.
  */
  setNodeAttribute(e, n, i) {
    return this.step(new el(e, n, i)), this;
  }
  /**
  Set a single attribute on the document to a new value.
  */
  setDocAttribute(e, n) {
    return this.step(new Kc(e, n)), this;
  }
  /**
  Add a mark to the node at position `pos`.
  */
  addNodeMark(e, n) {
    return this.step(new is(e, n)), this;
  }
  /**
  Remove a mark (or a mark of the given type) from the node at
  position `pos`.
  */
  removeNodeMark(e, n) {
    if (!(n instanceof Rt)) {
      let i = this.doc.nodeAt(e);
      if (!i)
        throw new RangeError("No node at position " + e);
      if (n = n.isInSet(i.marks), !n)
        return this;
    }
    return this.step(new dl(e, n)), this;
  }
  /**
  Split the node at the given position, and optionally, if `depth` is
  greater than one, any number of nodes above that. By default, the
  parts split off will inherit the node type of the original node.
  This can be changed by passing an array of types and attributes to
  use after the split.
  */
  split(e, n = 1, i) {
    return zM(this, e, n, i), this;
  }
  /**
  Add the given mark to the inline content between `from` and `to`.
  */
  addMark(e, n, i) {
    return RM(this, e, n, i), this;
  }
  /**
  Remove marks from inline nodes between `from` and `to`. When
  `mark` is a single mark, remove precisely that mark. When it is
  a mark type, remove all marks of that type. When it is null,
  remove all marks of any type.
  */
  removeMark(e, n, i) {
    return IM(this, e, n, i), this;
  }
  /**
  Removes all marks and nodes from the content of the node at
  `pos` that don't match the given new parent node type. Accepts
  an optional starting [content match](https://prosemirror.net/docs/ref/#model.ContentMatch) as
  third argument.
  */
  clearIncompatible(e, n, i) {
    return wy(this, e, n, i), this;
  }
}
const Fp = /* @__PURE__ */ Object.create(null);
class $e {
  /**
  Initialize a selection with the head and anchor and ranges. If no
  ranges are given, constructs a single range across `$anchor` and
  `$head`.
  */
  constructor(e, n, i) {
    this.$anchor = e, this.$head = n, this.ranges = i || [new M5(e.min(n), e.max(n))];
  }
  /**
  The selection's anchor, as an unresolved position.
  */
  get anchor() {
    return this.$anchor.pos;
  }
  /**
  The selection's head.
  */
  get head() {
    return this.$head.pos;
  }
  /**
  The lower bound of the selection's main range.
  */
  get from() {
    return this.$from.pos;
  }
  /**
  The upper bound of the selection's main range.
  */
  get to() {
    return this.$to.pos;
  }
  /**
  The resolved lower  bound of the selection's main range.
  */
  get $from() {
    return this.ranges[0].$from;
  }
  /**
  The resolved upper bound of the selection's main range.
  */
  get $to() {
    return this.ranges[0].$to;
  }
  /**
  Indicates whether the selection contains any content.
  */
  get empty() {
    let e = this.ranges;
    for (let n = 0; n < e.length; n++)
      if (e[n].$from.pos != e[n].$to.pos)
        return !1;
    return !0;
  }
  /**
  Get the content of this selection as a slice.
  */
  content() {
    return this.$from.doc.slice(this.from, this.to, !0);
  }
  /**
  Replace the selection with a slice or, if no slice is given,
  delete the selection. Will append to the given transaction.
  */
  replace(e, n = be.empty) {
    let i = n.content.lastChild, r = null;
    for (let a = 0; a < n.openEnd; a++)
      r = i, i = i.lastChild;
    let o = e.steps.length, s = this.ranges;
    for (let a = 0; a < s.length; a++) {
      let { $from: l, $to: c } = s[a], f = e.mapping.slice(o);
      e.replaceRange(f.map(l.pos), f.map(c.pos), a ? be.empty : n), a == 0 && jk(e, o, (i ? i.isInline : r && r.isTextblock) ? -1 : 1);
    }
  }
  /**
  Replace the selection with the given node, appending the changes
  to the given transaction.
  */
  replaceWith(e, n) {
    let i = e.steps.length, r = this.ranges;
    for (let o = 0; o < r.length; o++) {
      let { $from: s, $to: a } = r[o], l = e.mapping.slice(i), c = l.map(s.pos), f = l.map(a.pos);
      o ? e.deleteRange(c, f) : (e.replaceRangeWith(c, f, n), jk(e, i, n.isInline ? -1 : 1));
    }
  }
  /**
  Find a valid cursor or leaf node selection starting at the given
  position and searching back if `dir` is negative, and forward if
  positive. When `textOnly` is true, only consider cursor
  selections. Will return null when no valid selection position is
  found.
  */
  static findFrom(e, n, i = !1) {
    let r = e.parent.inlineContent ? new ze(e) : Ha(e.node(0), e.parent, e.pos, e.index(), n, i);
    if (r)
      return r;
    for (let o = e.depth - 1; o >= 0; o--) {
      let s = n < 0 ? Ha(e.node(0), e.node(o), e.before(o + 1), e.index(o), n, i) : Ha(e.node(0), e.node(o), e.after(o + 1), e.index(o) + 1, n, i);
      if (s)
        return s;
    }
    return null;
  }
  /**
  Find a valid cursor or leaf node selection near the given
  position. Searches forward first by default, but if `bias` is
  negative, it will search backwards first.
  */
  static near(e, n = 1) {
    return this.findFrom(e, n) || this.findFrom(e, -n) || new er(e.node(0));
  }
  /**
  Find the cursor or leaf node selection closest to the start of
  the given document. Will return an
  [`AllSelection`](https://prosemirror.net/docs/ref/#state.AllSelection) if no valid position
  exists.
  */
  static atStart(e) {
    return Ha(e, e, 0, 0, 1) || new er(e);
  }
  /**
  Find the cursor or leaf node selection closest to the end of the
  given document.
  */
  static atEnd(e) {
    return Ha(e, e, e.content.size, e.childCount, -1) || new er(e);
  }
  /**
  Deserialize the JSON representation of a selection. Must be
  implemented for custom classes (as a static class method).
  */
  static fromJSON(e, n) {
    if (!n || !n.type)
      throw new RangeError("Invalid input for Selection.fromJSON");
    let i = Fp[n.type];
    if (!i)
      throw new RangeError(`No selection type ${n.type} defined`);
    return i.fromJSON(e, n);
  }
  /**
  To be able to deserialize selections from JSON, custom selection
  classes must register themselves with an ID string, so that they
  can be disambiguated. Try to pick something that's unlikely to
  clash with classes from other modules.
  */
  static jsonID(e, n) {
    if (e in Fp)
      throw new RangeError("Duplicate use of selection JSON ID " + e);
    return Fp[e] = n, n.prototype.jsonID = e, n;
  }
  /**
  Get a [bookmark](https://prosemirror.net/docs/ref/#state.SelectionBookmark) for this selection,
  which is a value that can be mapped without having access to a
  current document, and later resolved to a real selection for a
  given document again. (This is used mostly by the history to
  track and restore old selections.) The default implementation of
  this method just converts the selection to a text selection and
  returns the bookmark for that.
  */
  getBookmark() {
    return ze.between(this.$anchor, this.$head).getBookmark();
  }
}
$e.prototype.visible = !0;
class M5 {
  /**
  Create a range.
  */
  constructor(e, n) {
    this.$from = e, this.$to = n;
  }
}
let Hk = !1;
function $k(t) {
  !Hk && !t.parent.inlineContent && (Hk = !0, console.warn("TextSelection endpoint not pointing into a node with inline content (" + t.parent.type.name + ")"));
}
class ze extends $e {
  /**
  Construct a text selection between the given points.
  */
  constructor(e, n = e) {
    $k(e), $k(n), super(e, n);
  }
  /**
  Returns a resolved position if this is a cursor selection (an
  empty text selection), and null otherwise.
  */
  get $cursor() {
    return this.$anchor.pos == this.$head.pos ? this.$head : null;
  }
  map(e, n) {
    let i = e.resolve(n.map(this.head));
    if (!i.parent.inlineContent)
      return $e.near(i);
    let r = e.resolve(n.map(this.anchor));
    return new ze(r.parent.inlineContent ? r : i, i);
  }
  replace(e, n = be.empty) {
    if (super.replace(e, n), n == be.empty) {
      let i = this.$from.marksAcross(this.$to);
      i && e.ensureMarks(i);
    }
  }
  eq(e) {
    return e instanceof ze && e.anchor == this.anchor && e.head == this.head;
  }
  getBookmark() {
    return new ph(this.anchor, this.head);
  }
  toJSON() {
    return { type: "text", anchor: this.anchor, head: this.head };
  }
  /**
  @internal
  */
  static fromJSON(e, n) {
    if (typeof n.anchor != "number" || typeof n.head != "number")
      throw new RangeError("Invalid input for TextSelection.fromJSON");
    return new ze(e.resolve(n.anchor), e.resolve(n.head));
  }
  /**
  Create a text selection from non-resolved positions.
  */
  static create(e, n, i = n) {
    let r = e.resolve(n);
    return new this(r, i == n ? r : e.resolve(i));
  }
  /**
  Return a text selection that spans the given positions or, if
  they aren't text positions, find a text selection near them.
  `bias` determines whether the method searches forward (default)
  or backwards (negative number) first. Will fall back to calling
  [`Selection.near`](https://prosemirror.net/docs/ref/#state.Selection^near) when the document
  doesn't contain a valid text position.
  */
  static between(e, n, i) {
    let r = e.pos - n.pos;
    if ((!i || r) && (i = r >= 0 ? 1 : -1), !n.parent.inlineContent) {
      let o = $e.findFrom(n, i, !0) || $e.findFrom(n, -i, !0);
      if (o)
        n = o.$head;
      else
        return $e.near(n, i);
    }
    return e.parent.inlineContent || (r == 0 ? e = n : (e = ($e.findFrom(e, -i, !0) || $e.findFrom(e, i, !0)).$anchor, e.pos < n.pos != r < 0 && (e = n))), new ze(e, n);
  }
}
$e.jsonID("text", ze);
class ph {
  constructor(e, n) {
    this.anchor = e, this.head = n;
  }
  map(e) {
    return new ph(e.map(this.anchor), e.map(this.head));
  }
  resolve(e) {
    return ze.between(e.resolve(this.anchor), e.resolve(this.head));
  }
}
class Ie extends $e {
  /**
  Create a node selection. Does not verify the validity of its
  argument.
  */
  constructor(e) {
    let n = e.nodeAfter, i = e.node(0).resolve(e.pos + n.nodeSize);
    super(e, i), this.node = n;
  }
  map(e, n) {
    let { deleted: i, pos: r } = n.mapResult(this.anchor), o = e.resolve(r);
    return i ? $e.near(o) : new Ie(o);
  }
  content() {
    return new be(ie.from(this.node), 0, 0);
  }
  eq(e) {
    return e instanceof Ie && e.anchor == this.anchor;
  }
  toJSON() {
    return { type: "node", anchor: this.anchor };
  }
  getBookmark() {
    return new Ey(this.anchor);
  }
  /**
  @internal
  */
  static fromJSON(e, n) {
    if (typeof n.anchor != "number")
      throw new RangeError("Invalid input for NodeSelection.fromJSON");
    return new Ie(e.resolve(n.anchor));
  }
  /**
  Create a node selection from non-resolved positions.
  */
  static create(e, n) {
    return new Ie(e.resolve(n));
  }
  /**
  Determines whether the given node may be selected as a node
  selection.
  */
  static isSelectable(e) {
    return !e.isText && e.type.spec.selectable !== !1;
  }
}
Ie.prototype.visible = !1;
$e.jsonID("node", Ie);
class Ey {
  constructor(e) {
    this.anchor = e;
  }
  map(e) {
    let { deleted: n, pos: i } = e.mapResult(this.anchor);
    return n ? new ph(i, i) : new Ey(i);
  }
  resolve(e) {
    let n = e.resolve(this.anchor), i = n.nodeAfter;
    return i && Ie.isSelectable(i) ? new Ie(n) : $e.near(n);
  }
}
class er extends $e {
  /**
  Create an all-selection over the given document.
  */
  constructor(e) {
    super(e.resolve(0), e.resolve(e.content.size));
  }
  replace(e, n = be.empty) {
    if (n == be.empty) {
      e.delete(0, e.doc.content.size);
      let i = $e.atStart(e.doc);
      i.eq(e.selection) || e.setSelection(i);
    } else
      super.replace(e, n);
  }
  toJSON() {
    return { type: "all" };
  }
  /**
  @internal
  */
  static fromJSON(e) {
    return new er(e);
  }
  map(e) {
    return new er(e);
  }
  eq(e) {
    return e instanceof er;
  }
  getBookmark() {
    return QM;
  }
}
$e.jsonID("all", er);
const QM = {
  map() {
    return this;
  },
  resolve(t) {
    return new er(t);
  }
};
function Ha(t, e, n, i, r, o = !1) {
  if (e.inlineContent)
    return ze.create(t, n);
  for (let s = i - (r > 0 ? 0 : 1); r > 0 ? s < e.childCount : s >= 0; s += r) {
    let a = e.child(s);
    if (a.isAtom) {
      if (!o && Ie.isSelectable(a))
        return Ie.create(t, n - (r < 0 ? a.nodeSize : 0));
    } else {
      let l = Ha(t, a, n + r, r < 0 ? a.childCount : 0, r, o);
      if (l)
        return l;
    }
    n += a.nodeSize * r;
  }
  return null;
}
function jk(t, e, n) {
  let i = t.steps.length - 1;
  if (i < e)
    return;
  let r = t.steps[i];
  if (!(r instanceof wn || r instanceof En))
    return;
  let o = t.mapping.maps[i], s;
  o.forEach((a, l, c, f) => {
    s == null && (s = f);
  }), t.setSelection($e.near(t.doc.resolve(s), n));
}
const zk = 1, nd = 2, Uk = 4;
let ZM = class extends _y {
  /**
  @internal
  */
  constructor(e) {
    super(e.doc), this.curSelectionFor = 0, this.updated = 0, this.meta = /* @__PURE__ */ Object.create(null), this.time = Date.now(), this.curSelection = e.selection, this.storedMarks = e.storedMarks;
  }
  /**
  The transaction's current selection. This defaults to the editor
  selection [mapped](https://prosemirror.net/docs/ref/#state.Selection.map) through the steps in the
  transaction, but can be overwritten with
  [`setSelection`](https://prosemirror.net/docs/ref/#state.Transaction.setSelection).
  */
  get selection() {
    return this.curSelectionFor < this.steps.length && (this.curSelection = this.curSelection.map(this.doc, this.mapping.slice(this.curSelectionFor)), this.curSelectionFor = this.steps.length), this.curSelection;
  }
  /**
  Update the transaction's current selection. Will determine the
  selection that the editor gets when the transaction is applied.
  */
  setSelection(e) {
    if (e.$from.doc != this.doc)
      throw new RangeError("Selection passed to setSelection must point at the current document");
    return this.curSelection = e, this.curSelectionFor = this.steps.length, this.updated = (this.updated | zk) & ~nd, this.storedMarks = null, this;
  }
  /**
  Whether the selection was explicitly updated by this transaction.
  */
  get selectionSet() {
    return (this.updated & zk) > 0;
  }
  /**
  Set the current stored marks.
  */
  setStoredMarks(e) {
    return this.storedMarks = e, this.updated |= nd, this;
  }
  /**
  Make sure the current stored marks or, if that is null, the marks
  at the selection, match the given set of marks. Does nothing if
  this is already the case.
  */
  ensureMarks(e) {
    return Rt.sameSet(this.storedMarks || this.selection.$from.marks(), e) || this.setStoredMarks(e), this;
  }
  /**
  Add a mark to the set of stored marks.
  */
  addStoredMark(e) {
    return this.ensureMarks(e.addToSet(this.storedMarks || this.selection.$head.marks()));
  }
  /**
  Remove a mark or mark type from the set of stored marks.
  */
  removeStoredMark(e) {
    return this.ensureMarks(e.removeFromSet(this.storedMarks || this.selection.$head.marks()));
  }
  /**
  Whether the stored marks were explicitly set for this transaction.
  */
  get storedMarksSet() {
    return (this.updated & nd) > 0;
  }
  /**
  @internal
  */
  addStep(e, n) {
    super.addStep(e, n), this.updated = this.updated & ~nd, this.storedMarks = null;
  }
  /**
  Update the timestamp for the transaction.
  */
  setTime(e) {
    return this.time = e, this;
  }
  /**
  Replace the current selection with the given slice.
  */
  replaceSelection(e) {
    return this.selection.replace(this, e), this;
  }
  /**
  Replace the selection with the given node. When `inheritMarks` is
  true and the content is inline, it inherits the marks from the
  place where it is inserted.
  */
  replaceSelectionWith(e, n = !0) {
    let i = this.selection;
    return n && (e = e.mark(this.storedMarks || (i.empty ? i.$from.marks() : i.$from.marksAcross(i.$to) || Rt.none))), i.replaceWith(this, e), this;
  }
  /**
  Delete the selection.
  */
  deleteSelection() {
    return this.selection.replace(this), this;
  }
  /**
  Replace the given range, or the selection if no range is given,
  with a text node containing the given string.
  */
  insertText(e, n, i) {
    let r = this.doc.type.schema;
    if (n == null)
      return e ? this.replaceSelectionWith(r.text(e), !0) : this.deleteSelection();
    {
      if (i == null && (i = n), i = i ?? n, !e)
        return this.deleteRange(n, i);
      let o = this.storedMarks;
      if (!o) {
        let s = this.doc.resolve(n);
        o = i == n ? s.marks() : s.marksAcross(this.doc.resolve(i));
      }
      return this.replaceRangeWith(n, i, r.text(e, o)), this.selection.empty || this.setSelection($e.near(this.selection.$to)), this;
    }
  }
  /**
  Store a metadata property in this transaction, keyed either by
  name or by plugin.
  */
  setMeta(e, n) {
    return this.meta[typeof e == "string" ? e : e.key] = n, this;
  }
  /**
  Retrieve a metadata property for a given name or plugin.
  */
  getMeta(e) {
    return this.meta[typeof e == "string" ? e : e.key];
  }
  /**
  Returns true if this transaction doesn't contain any metadata,
  and can thus safely be extended.
  */
  get isGeneric() {
    for (let e in this.meta)
      return !1;
    return !0;
  }
  /**
  Indicate that the editor should scroll the selection into view
  when updated to the state produced by this transaction.
  */
  scrollIntoView() {
    return this.updated |= Uk, this;
  }
  /**
  True when this transaction has had `scrollIntoView` called on it.
  */
  get scrolledIntoView() {
    return (this.updated & Uk) > 0;
  }
};
function Vk(t, e) {
  return !e || !t ? t : t.bind(e);
}
class _c {
  constructor(e, n, i) {
    this.name = e, this.init = Vk(n.init, i), this.apply = Vk(n.apply, i);
  }
}
const eN = [
  new _c("doc", {
    init(t) {
      return t.doc || t.schema.topNodeType.createAndFill();
    },
    apply(t) {
      return t.doc;
    }
  }),
  new _c("selection", {
    init(t, e) {
      return t.selection || $e.atStart(e.doc);
    },
    apply(t) {
      return t.selection;
    }
  }),
  new _c("storedMarks", {
    init(t) {
      return t.storedMarks || null;
    },
    apply(t, e, n, i) {
      return i.selection.$cursor ? t.storedMarks : null;
    }
  }),
  new _c("scrollToSelection", {
    init() {
      return 0;
    },
    apply(t, e) {
      return t.scrolledIntoView ? e + 1 : e;
    }
  })
];
class Bp {
  constructor(e, n) {
    this.schema = e, this.plugins = [], this.pluginsByKey = /* @__PURE__ */ Object.create(null), this.fields = eN.slice(), n && n.forEach((i) => {
      if (this.pluginsByKey[i.key])
        throw new RangeError("Adding different instances of a keyed plugin (" + i.key + ")");
      this.plugins.push(i), this.pluginsByKey[i.key] = i, i.spec.state && this.fields.push(new _c(i.key, i.spec.state, i));
    });
  }
}
class Ws {
  /**
  @internal
  */
  constructor(e) {
    this.config = e;
  }
  /**
  The schema of the state's document.
  */
  get schema() {
    return this.config.schema;
  }
  /**
  The plugins that are active in this state.
  */
  get plugins() {
    return this.config.plugins;
  }
  /**
  Apply the given transaction to produce a new state.
  */
  apply(e) {
    return this.applyTransaction(e).state;
  }
  /**
  @internal
  */
  filterTransaction(e, n = -1) {
    for (let i = 0; i < this.config.plugins.length; i++)
      if (i != n) {
        let r = this.config.plugins[i];
        if (r.spec.filterTransaction && !r.spec.filterTransaction.call(r, e, this))
          return !1;
      }
    return !0;
  }
  /**
  Verbose variant of [`apply`](https://prosemirror.net/docs/ref/#state.EditorState.apply) that
  returns the precise transactions that were applied (which might
  be influenced by the [transaction
  hooks](https://prosemirror.net/docs/ref/#state.PluginSpec.filterTransaction) of
  plugins) along with the new state.
  */
  applyTransaction(e) {
    if (!this.filterTransaction(e))
      return { state: this, transactions: [] };
    let n = [e], i = this.applyInner(e), r = null;
    for (; ; ) {
      let o = !1;
      for (let s = 0; s < this.config.plugins.length; s++) {
        let a = this.config.plugins[s];
        if (a.spec.appendTransaction) {
          let l = r ? r[s].n : 0, c = r ? r[s].state : this, f = l < n.length && a.spec.appendTransaction.call(a, l ? n.slice(l) : n, c, i);
          if (f && i.filterTransaction(f, s)) {
            if (f.setMeta("appendedTransaction", e), !r) {
              r = [];
              for (let d = 0; d < this.config.plugins.length; d++)
                r.push(d < s ? { state: i, n: n.length } : { state: this, n: 0 });
            }
            n.push(f), i = i.applyInner(f), o = !0;
          }
          r && (r[s] = { state: i, n: n.length });
        }
      }
      if (!o)
        return { state: i, transactions: n };
    }
  }
  /**
  @internal
  */
  applyInner(e) {
    if (!e.before.eq(this.doc))
      throw new RangeError("Applying a mismatched transaction");
    let n = new Ws(this.config), i = this.config.fields;
    for (let r = 0; r < i.length; r++) {
      let o = i[r];
      n[o.name] = o.apply(e, this[o.name], this, n);
    }
    return n;
  }
  /**
  Start a [transaction](https://prosemirror.net/docs/ref/#state.Transaction) from this state.
  */
  get tr() {
    return new ZM(this);
  }
  /**
  Create a new state.
  */
  static create(e) {
    let n = new Bp(e.doc ? e.doc.type.schema : e.schema, e.plugins), i = new Ws(n);
    for (let r = 0; r < n.fields.length; r++)
      i[n.fields[r].name] = n.fields[r].init(e, i);
    return i;
  }
  /**
  Create a new state based on this one, but with an adjusted set
  of active plugins. State fields that exist in both sets of
  plugins are kept unchanged. Those that no longer exist are
  dropped, and those that are new are initialized using their
  [`init`](https://prosemirror.net/docs/ref/#state.StateField.init) method, passing in the new
  configuration object..
  */
  reconfigure(e) {
    let n = new Bp(this.schema, e.plugins), i = n.fields, r = new Ws(n);
    for (let o = 0; o < i.length; o++) {
      let s = i[o].name;
      r[s] = this.hasOwnProperty(s) ? this[s] : i[o].init(e, r);
    }
    return r;
  }
  /**
  Serialize this state to JSON. If you want to serialize the state
  of plugins, pass an object mapping property names to use in the
  resulting JSON object to plugin objects. The argument may also be
  a string or number, in which case it is ignored, to support the
  way `JSON.stringify` calls `toString` methods.
  */
  toJSON(e) {
    let n = { doc: this.doc.toJSON(), selection: this.selection.toJSON() };
    if (this.storedMarks && (n.storedMarks = this.storedMarks.map((i) => i.toJSON())), e && typeof e == "object")
      for (let i in e) {
        if (i == "doc" || i == "selection")
          throw new RangeError("The JSON fields `doc` and `selection` are reserved");
        let r = e[i], o = r.spec.state;
        o && o.toJSON && (n[i] = o.toJSON.call(r, this[r.key]));
      }
    return n;
  }
  /**
  Deserialize a JSON representation of a state. `config` should
  have at least a `schema` field, and should contain array of
  plugins to initialize the state with. `pluginFields` can be used
  to deserialize the state of plugins, by associating plugin
  instances with the property names they use in the JSON object.
  */
  static fromJSON(e, n, i) {
    if (!n)
      throw new RangeError("Invalid input for EditorState.fromJSON");
    if (!e.schema)
      throw new RangeError("Required config field 'schema' missing");
    let r = new Bp(e.schema, e.plugins), o = new Ws(r);
    return r.fields.forEach((s) => {
      if (s.name == "doc")
        o.doc = ls.fromJSON(e.schema, n.doc);
      else if (s.name == "selection")
        o.selection = $e.fromJSON(o.doc, n.selection);
      else if (s.name == "storedMarks")
        n.storedMarks && (o.storedMarks = n.storedMarks.map(e.schema.markFromJSON));
      else {
        if (i)
          for (let a in i) {
            let l = i[a], c = l.spec.state;
            if (l.key == s.name && c && c.fromJSON && Object.prototype.hasOwnProperty.call(n, a)) {
              o[s.name] = c.fromJSON.call(l, e, n[a], o);
              return;
            }
          }
        o[s.name] = s.init(e, o);
      }
    }), o;
  }
}
function N5(t, e, n) {
  for (let i in t) {
    let r = t[i];
    r instanceof Function ? r = r.bind(e) : i == "handleDOMEvents" && (r = N5(r, e, {})), n[i] = r;
  }
  return n;
}
class mt {
  /**
  Create a plugin.
  */
  constructor(e) {
    this.spec = e, this.props = {}, e.props && N5(e.props, this, this.props), this.key = e.key ? e.key.key : O5("plugin");
  }
  /**
  Extract the plugin's state field from an editor state.
  */
  getState(e) {
    return e[this.key];
  }
}
const Hp = /* @__PURE__ */ Object.create(null);
function O5(t) {
  return t in Hp ? t + "$" + ++Hp[t] : (Hp[t] = 0, t + "$");
}
class Ct {
  /**
  Create a plugin key.
  */
  constructor(e = "key") {
    this.key = O5(e);
  }
  /**
  Get the active plugin with this key, if any, from an editor
  state.
  */
  get(e) {
    return e.config.pluginsByKey[this.key];
  }
  /**
  Get the plugin's state from an editor state.
  */
  getState(e) {
    return e[this.key];
  }
}
const On = function(t) {
  for (var e = 0; ; e++)
    if (t = t.previousSibling, !t)
      return e;
}, Yc = function(t) {
  let e = t.assignedSlot || t.parentNode;
  return e && e.nodeType == 11 ? e.host : e;
};
let P0 = null;
const ro = function(t, e, n) {
  let i = P0 || (P0 = document.createRange());
  return i.setEnd(t, n ?? t.nodeValue.length), i.setStart(t, e || 0), i;
}, tN = function() {
  P0 = null;
}, sa = function(t, e, n, i) {
  return n && (Wk(t, e, n, i, -1) || Wk(t, e, n, i, 1));
}, nN = /^(img|br|input|textarea|hr)$/i;
function Wk(t, e, n, i, r) {
  for (; ; ) {
    if (t == n && e == i)
      return !0;
    if (e == (r < 0 ? 0 : Ai(t))) {
      let o = t.parentNode;
      if (!o || o.nodeType != 1 || Ef(t) || nN.test(t.nodeName) || t.contentEditable == "false")
        return !1;
      e = On(t) + (r < 0 ? 0 : 1), t = o;
    } else if (t.nodeType == 1) {
      if (t = t.childNodes[e + (r < 0 ? -1 : 0)], t.contentEditable == "false")
        return !1;
      e = r < 0 ? Ai(t) : 0;
    } else
      return !1;
  }
}
function Ai(t) {
  return t.nodeType == 3 ? t.nodeValue.length : t.childNodes.length;
}
function iN(t, e) {
  for (; ; ) {
    if (t.nodeType == 3 && e)
      return t;
    if (t.nodeType == 1 && e > 0) {
      if (t.contentEditable == "false")
        return null;
      t = t.childNodes[e - 1], e = Ai(t);
    } else if (t.parentNode && !Ef(t))
      e = On(t), t = t.parentNode;
    else
      return null;
  }
}
function rN(t, e) {
  for (; ; ) {
    if (t.nodeType == 3 && e < t.nodeValue.length)
      return t;
    if (t.nodeType == 1 && e < t.childNodes.length) {
      if (t.contentEditable == "false")
        return null;
      t = t.childNodes[e], e = 0;
    } else if (t.parentNode && !Ef(t))
      e = On(t) + 1, t = t.parentNode;
    else
      return null;
  }
}
function oN(t, e, n) {
  for (let i = e == 0, r = e == Ai(t); i || r; ) {
    if (t == n)
      return !0;
    let o = On(t);
    if (t = t.parentNode, !t)
      return !1;
    i = i && o == 0, r = r && o == Ai(t);
  }
}
function Ef(t) {
  let e;
  for (let n = t; n && !(e = n.pmViewDesc); n = n.parentNode)
    ;
  return e && e.node && e.node.isBlock && (e.dom == t || e.contentDOM == t);
}
const mh = function(t) {
  return t.focusNode && sa(t.focusNode, t.focusOffset, t.anchorNode, t.anchorOffset);
};
function Hs(t, e) {
  let n = document.createEvent("Event");
  return n.initEvent("keydown", !0, !0), n.keyCode = t, n.key = n.code = e, n;
}
function sN(t) {
  let e = t.activeElement;
  for (; e && e.shadowRoot; )
    e = e.shadowRoot.activeElement;
  return e;
}
function aN(t, e, n) {
  if (t.caretPositionFromPoint)
    try {
      let i = t.caretPositionFromPoint(e, n);
      if (i)
        return { node: i.offsetNode, offset: Math.min(Ai(i.offsetNode), i.offset) };
    } catch {
    }
  if (t.caretRangeFromPoint) {
    let i = t.caretRangeFromPoint(e, n);
    if (i)
      return { node: i.startContainer, offset: Math.min(Ai(i.startContainer), i.startOffset) };
  }
}
const Rr = typeof navigator < "u" ? navigator : null, qk = typeof document < "u" ? document : null, Es = Rr && Rr.userAgent || "", F0 = /Edge\/(\d+)/.exec(Es), R5 = /MSIE \d/.exec(Es), B0 = /Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(Es), oi = !!(R5 || B0 || F0), cs = R5 ? document.documentMode : B0 ? +B0[1] : F0 ? +F0[1] : 0, or = !oi && /gecko\/(\d+)/i.test(Es);
or && +(/Firefox\/(\d+)/.exec(Es) || [0, 0])[1];
const H0 = !oi && /Chrome\/(\d+)/.exec(Es), Hn = !!H0, I5 = H0 ? +H0[1] : 0, Yn = !oi && !!Rr && /Apple Computer/.test(Rr.vendor), hl = Yn && (/Mobile\/\w+/.test(Es) || !!Rr && Rr.maxTouchPoints > 2), Si = hl || (Rr ? /Mac/.test(Rr.platform) : !1), lN = Rr ? /Win/.test(Rr.platform) : !1, Xi = /Android \d/.test(Es), Tf = !!qk && "webkitFontSmoothing" in qk.documentElement.style, cN = Tf ? +(/\bAppleWebKit\/(\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0;
function fN(t) {
  let e = t.defaultView && t.defaultView.visualViewport;
  return e ? {
    left: 0,
    right: e.width,
    top: 0,
    bottom: e.height
  } : {
    left: 0,
    right: t.documentElement.clientWidth,
    top: 0,
    bottom: t.documentElement.clientHeight
  };
}
function Gr(t, e) {
  return typeof t == "number" ? t : t[e];
}
function dN(t) {
  let e = t.getBoundingClientRect(), n = e.width / t.offsetWidth || 1, i = e.height / t.offsetHeight || 1;
  return {
    left: e.left,
    right: e.left + t.clientWidth * n,
    top: e.top,
    bottom: e.top + t.clientHeight * i
  };
}
function Gk(t, e, n) {
  let i = t.someProp("scrollThreshold") || 0, r = t.someProp("scrollMargin") || 5, o = t.dom.ownerDocument;
  for (let s = n || t.dom; s; s = Yc(s)) {
    if (s.nodeType != 1)
      continue;
    let a = s, l = a == o.body, c = l ? fN(o) : dN(a), f = 0, d = 0;
    if (e.top < c.top + Gr(i, "top") ? d = -(c.top - e.top + Gr(r, "top")) : e.bottom > c.bottom - Gr(i, "bottom") && (d = e.bottom - e.top > c.bottom - c.top ? e.top + Gr(r, "top") - c.top : e.bottom - c.bottom + Gr(r, "bottom")), e.left < c.left + Gr(i, "left") ? f = -(c.left - e.left + Gr(r, "left")) : e.right > c.right - Gr(i, "right") && (f = e.right - c.right + Gr(r, "right")), f || d)
      if (l)
        o.defaultView.scrollBy(f, d);
      else {
        let u = a.scrollLeft, h = a.scrollTop;
        d && (a.scrollTop += d), f && (a.scrollLeft += f);
        let p = a.scrollLeft - u, m = a.scrollTop - h;
        e = { left: e.left - p, top: e.top - m, right: e.right - p, bottom: e.bottom - m };
      }
    if (l || /^(fixed|sticky)$/.test(getComputedStyle(s).position))
      break;
  }
}
function uN(t) {
  let e = t.dom.getBoundingClientRect(), n = Math.max(0, e.top), i, r;
  for (let o = (e.left + e.right) / 2, s = n + 1; s < Math.min(innerHeight, e.bottom); s += 5) {
    let a = t.root.elementFromPoint(o, s);
    if (!a || a == t.dom || !t.dom.contains(a))
      continue;
    let l = a.getBoundingClientRect();
    if (l.top >= n - 20) {
      i = a, r = l.top;
      break;
    }
  }
  return { refDOM: i, refTop: r, stack: L5(t.dom) };
}
function L5(t) {
  let e = [], n = t.ownerDocument;
  for (let i = t; i && (e.push({ dom: i, top: i.scrollTop, left: i.scrollLeft }), t != n); i = Yc(i))
    ;
  return e;
}
function hN({ refDOM: t, refTop: e, stack: n }) {
  let i = t ? t.getBoundingClientRect().top : 0;
  D5(n, i == 0 ? 0 : i - e);
}
function D5(t, e) {
  for (let n = 0; n < t.length; n++) {
    let { dom: i, top: r, left: o } = t[n];
    i.scrollTop != r + e && (i.scrollTop = r + e), i.scrollLeft != o && (i.scrollLeft = o);
  }
}
let Aa = null;
function pN(t) {
  if (t.setActive)
    return t.setActive();
  if (Aa)
    return t.focus(Aa);
  let e = L5(t);
  t.focus(Aa == null ? {
    get preventScroll() {
      return Aa = { preventScroll: !0 }, !0;
    }
  } : void 0), Aa || (Aa = !1, D5(e, 0));
}
function P5(t, e) {
  let n, i = 2e8, r, o = 0, s = e.top, a = e.top, l, c;
  for (let f = t.firstChild, d = 0; f; f = f.nextSibling, d++) {
    let u;
    if (f.nodeType == 1)
      u = f.getClientRects();
    else if (f.nodeType == 3)
      u = ro(f).getClientRects();
    else
      continue;
    for (let h = 0; h < u.length; h++) {
      let p = u[h];
      if (p.top <= s && p.bottom >= a) {
        s = Math.max(p.bottom, s), a = Math.min(p.top, a);
        let m = p.left > e.left ? p.left - e.left : p.right < e.left ? e.left - p.right : 0;
        if (m < i) {
          n = f, i = m, r = m && n.nodeType == 3 ? {
            left: p.right < e.left ? p.right : p.left,
            top: e.top
          } : e, f.nodeType == 1 && m && (o = d + (e.left >= (p.left + p.right) / 2 ? 1 : 0));
          continue;
        }
      } else p.top > e.top && !l && p.left <= e.left && p.right >= e.left && (l = f, c = { left: Math.max(p.left, Math.min(p.right, e.left)), top: p.top });
      !n && (e.left >= p.right && e.top >= p.top || e.left >= p.left && e.top >= p.bottom) && (o = d + 1);
    }
  }
  return !n && l && (n = l, r = c, i = 0), n && n.nodeType == 3 ? mN(n, r) : !n || i && n.nodeType == 1 ? { node: t, offset: o } : P5(n, r);
}
function mN(t, e) {
  let n = t.nodeValue.length, i = document.createRange();
  for (let r = 0; r < n; r++) {
    i.setEnd(t, r + 1), i.setStart(t, r);
    let o = Uo(i, 1);
    if (o.top != o.bottom && Ty(e, o))
      return { node: t, offset: r + (e.left >= (o.left + o.right) / 2 ? 1 : 0) };
  }
  return { node: t, offset: 0 };
}
function Ty(t, e) {
  return t.left >= e.left - 1 && t.left <= e.right + 1 && t.top >= e.top - 1 && t.top <= e.bottom + 1;
}
function gN(t, e) {
  let n = t.parentNode;
  return n && /^li$/i.test(n.nodeName) && e.left < t.getBoundingClientRect().left ? n : t;
}
function yN(t, e, n) {
  let { node: i, offset: r } = P5(e, n), o = -1;
  if (i.nodeType == 1 && !i.firstChild) {
    let s = i.getBoundingClientRect();
    o = s.left != s.right && n.left > (s.left + s.right) / 2 ? 1 : -1;
  }
  return t.docView.posFromDOM(i, r, o);
}
function vN(t, e, n, i) {
  let r = -1;
  for (let o = e, s = !1; o != t.dom; ) {
    let a = t.docView.nearestDesc(o, !0);
    if (!a)
      return null;
    if (a.dom.nodeType == 1 && (a.node.isBlock && a.parent || !a.contentDOM)) {
      let l = a.dom.getBoundingClientRect();
      if (a.node.isBlock && a.parent && (!s && l.left > i.left || l.top > i.top ? r = a.posBefore : (!s && l.right < i.left || l.bottom < i.top) && (r = a.posAfter), s = !0), !a.contentDOM && r < 0 && !a.node.isText)
        return (a.node.isBlock ? i.top < (l.top + l.bottom) / 2 : i.left < (l.left + l.right) / 2) ? a.posBefore : a.posAfter;
    }
    o = a.dom.parentNode;
  }
  return r > -1 ? r : t.docView.posFromDOM(e, n, -1);
}
function F5(t, e, n) {
  let i = t.childNodes.length;
  if (i && n.top < n.bottom)
    for (let r = Math.max(0, Math.min(i - 1, Math.floor(i * (e.top - n.top) / (n.bottom - n.top)) - 2)), o = r; ; ) {
      let s = t.childNodes[o];
      if (s.nodeType == 1) {
        let a = s.getClientRects();
        for (let l = 0; l < a.length; l++) {
          let c = a[l];
          if (Ty(e, c))
            return F5(s, e, c);
        }
      }
      if ((o = (o + 1) % i) == r)
        break;
    }
  return t;
}
function bN(t, e) {
  let n = t.dom.ownerDocument, i, r = 0, o = aN(n, e.left, e.top);
  o && ({ node: i, offset: r } = o);
  let s = (t.root.elementFromPoint ? t.root : n).elementFromPoint(e.left, e.top), a;
  if (!s || !t.dom.contains(s.nodeType != 1 ? s.parentNode : s)) {
    let c = t.dom.getBoundingClientRect();
    if (!Ty(e, c) || (s = F5(t.dom, e, c), !s))
      return null;
  }
  if (Yn)
    for (let c = s; i && c; c = Yc(c))
      c.draggable && (i = void 0);
  if (s = gN(s, e), i) {
    if (or && i.nodeType == 1 && (r = Math.min(r, i.childNodes.length), r < i.childNodes.length)) {
      let f = i.childNodes[r], d;
      f.nodeName == "IMG" && (d = f.getBoundingClientRect()).right <= e.left && d.bottom > e.top && r++;
    }
    let c;
    Tf && r && i.nodeType == 1 && (c = i.childNodes[r - 1]).nodeType == 1 && c.contentEditable == "false" && c.getBoundingClientRect().top >= e.top && r--, i == t.dom && r == i.childNodes.length - 1 && i.lastChild.nodeType == 1 && e.top > i.lastChild.getBoundingClientRect().bottom ? a = t.state.doc.content.size : (r == 0 || i.nodeType != 1 || i.childNodes[r - 1].nodeName != "BR") && (a = vN(t, i, r, e));
  }
  a == null && (a = yN(t, s, e));
  let l = t.docView.nearestDesc(s, !0);
  return { pos: a, inside: l ? l.posAtStart - l.border : -1 };
}
function Kk(t) {
  return t.top < t.bottom || t.left < t.right;
}
function Uo(t, e) {
  let n = t.getClientRects();
  if (n.length) {
    let i = n[e < 0 ? 0 : n.length - 1];
    if (Kk(i))
      return i;
  }
  return Array.prototype.find.call(n, Kk) || t.getBoundingClientRect();
}
const kN = /[\u0590-\u05f4\u0600-\u06ff\u0700-\u08ac]/;
function B5(t, e, n) {
  let { node: i, offset: r, atom: o } = t.docView.domFromPos(e, n < 0 ? -1 : 1), s = Tf || or;
  if (i.nodeType == 3)
    if (s && (kN.test(i.nodeValue) || (n < 0 ? !r : r == i.nodeValue.length))) {
      let l = Uo(ro(i, r, r), n);
      if (or && r && /\s/.test(i.nodeValue[r - 1]) && r < i.nodeValue.length) {
        let c = Uo(ro(i, r - 1, r - 1), -1);
        if (c.top == l.top) {
          let f = Uo(ro(i, r, r + 1), -1);
          if (f.top != l.top)
            return rc(f, f.left < c.left);
        }
      }
      return l;
    } else {
      let l = r, c = r, f = n < 0 ? 1 : -1;
      return n < 0 && !r ? (c++, f = -1) : n >= 0 && r == i.nodeValue.length ? (l--, f = 1) : n < 0 ? l-- : c++, rc(Uo(ro(i, l, c), f), f < 0);
    }
  if (!t.state.doc.resolve(e - (o || 0)).parent.inlineContent) {
    if (o == null && r && (n < 0 || r == Ai(i))) {
      let l = i.childNodes[r - 1];
      if (l.nodeType == 1)
        return $p(l.getBoundingClientRect(), !1);
    }
    if (o == null && r < Ai(i)) {
      let l = i.childNodes[r];
      if (l.nodeType == 1)
        return $p(l.getBoundingClientRect(), !0);
    }
    return $p(i.getBoundingClientRect(), n >= 0);
  }
  if (o == null && r && (n < 0 || r == Ai(i))) {
    let l = i.childNodes[r - 1], c = l.nodeType == 3 ? ro(l, Ai(l) - (s ? 0 : 1)) : l.nodeType == 1 && (l.nodeName != "BR" || !l.nextSibling) ? l : null;
    if (c)
      return rc(Uo(c, 1), !1);
  }
  if (o == null && r < Ai(i)) {
    let l = i.childNodes[r];
    for (; l.pmViewDesc && l.pmViewDesc.ignoreForCoords; )
      l = l.nextSibling;
    let c = l ? l.nodeType == 3 ? ro(l, 0, s ? 0 : 1) : l.nodeType == 1 ? l : null : null;
    if (c)
      return rc(Uo(c, -1), !0);
  }
  return rc(Uo(i.nodeType == 3 ? ro(i) : i, -n), n >= 0);
}
function rc(t, e) {
  if (t.width == 0)
    return t;
  let n = e ? t.left : t.right;
  return { top: t.top, bottom: t.bottom, left: n, right: n };
}
function $p(t, e) {
  if (t.height == 0)
    return t;
  let n = e ? t.top : t.bottom;
  return { top: n, bottom: n, left: t.left, right: t.right };
}
function H5(t, e, n) {
  let i = t.state, r = t.root.activeElement;
  i != e && t.updateState(e), r != t.dom && t.focus();
  try {
    return n();
  } finally {
    i != e && t.updateState(i), r != t.dom && r && r.focus();
  }
}
function wN(t, e, n) {
  let i = e.selection, r = n == "up" ? i.$from : i.$to;
  return H5(t, e, () => {
    let { node: o } = t.docView.domFromPos(r.pos, n == "up" ? -1 : 1);
    for (; ; ) {
      let a = t.docView.nearestDesc(o, !0);
      if (!a)
        break;
      if (a.node.isBlock) {
        o = a.contentDOM || a.dom;
        break;
      }
      o = a.dom.parentNode;
    }
    let s = B5(t, r.pos, 1);
    for (let a = o.firstChild; a; a = a.nextSibling) {
      let l;
      if (a.nodeType == 1)
        l = a.getClientRects();
      else if (a.nodeType == 3)
        l = ro(a, 0, a.nodeValue.length).getClientRects();
      else
        continue;
      for (let c = 0; c < l.length; c++) {
        let f = l[c];
        if (f.bottom > f.top + 1 && (n == "up" ? s.top - f.top > (f.bottom - s.top) * 2 : f.bottom - s.bottom > (s.bottom - f.top) * 2))
          return !1;
      }
    }
    return !0;
  });
}
const _N = /[\u0590-\u08ac]/;
function EN(t, e, n) {
  let { $head: i } = e.selection;
  if (!i.parent.isTextblock)
    return !1;
  let r = i.parentOffset, o = !r, s = r == i.parent.content.size, a = t.domSelection();
  return a ? !_N.test(i.parent.textContent) || !a.modify ? n == "left" || n == "backward" ? o : s : H5(t, e, () => {
    let { focusNode: l, focusOffset: c, anchorNode: f, anchorOffset: d } = t.domSelectionRange(), u = a.caretBidiLevel;
    a.modify("move", n, "character");
    let h = i.depth ? t.docView.domAfterPos(i.before()) : t.dom, { focusNode: p, focusOffset: m } = t.domSelectionRange(), v = p && !h.contains(p.nodeType == 1 ? p : p.parentNode) || l == p && c == m;
    try {
      a.collapse(f, d), l && (l != f || c != d) && a.extend && a.extend(l, c);
    } catch {
    }
    return u != null && (a.caretBidiLevel = u), v;
  }) : i.pos == i.start() || i.pos == i.end();
}
let Yk = null, Jk = null, Xk = !1;
function TN(t, e, n) {
  return Yk == e && Jk == n ? Xk : (Yk = e, Jk = n, Xk = n == "up" || n == "down" ? wN(t, e, n) : EN(t, e, n));
}
const Li = 0, Qk = 1, qs = 2, Ir = 3;
class Cf {
  constructor(e, n, i, r) {
    this.parent = e, this.children = n, this.dom = i, this.contentDOM = r, this.dirty = Li, i.pmViewDesc = this;
  }
  // Used to check whether a given description corresponds to a
  // widget/mark/node.
  matchesWidget(e) {
    return !1;
  }
  matchesMark(e) {
    return !1;
  }
  matchesNode(e, n, i) {
    return !1;
  }
  matchesHack(e) {
    return !1;
  }
  // When parsing in-editor content (in domchange.js), we allow
  // descriptions to determine the parse rules that should be used to
  // parse them.
  parseRule() {
    return null;
  }
  // Used by the editor's event handler to ignore events that come
  // from certain descs.
  stopEvent(e) {
    return !1;
  }
  // The size of the content represented by this desc.
  get size() {
    let e = 0;
    for (let n = 0; n < this.children.length; n++)
      e += this.children[n].size;
    return e;
  }
  // For block nodes, this represents the space taken up by their
  // start/end tokens.
  get border() {
    return 0;
  }
  destroy() {
    this.parent = void 0, this.dom.pmViewDesc == this && (this.dom.pmViewDesc = void 0);
    for (let e = 0; e < this.children.length; e++)
      this.children[e].destroy();
  }
  posBeforeChild(e) {
    for (let n = 0, i = this.posAtStart; ; n++) {
      let r = this.children[n];
      if (r == e)
        return i;
      i += r.size;
    }
  }
  get posBefore() {
    return this.parent.posBeforeChild(this);
  }
  get posAtStart() {
    return this.parent ? this.parent.posBeforeChild(this) + this.border : 0;
  }
  get posAfter() {
    return this.posBefore + this.size;
  }
  get posAtEnd() {
    return this.posAtStart + this.size - 2 * this.border;
  }
  localPosFromDOM(e, n, i) {
    if (this.contentDOM && this.contentDOM.contains(e.nodeType == 1 ? e : e.parentNode))
      if (i < 0) {
        let o, s;
        if (e == this.contentDOM)
          o = e.childNodes[n - 1];
        else {
          for (; e.parentNode != this.contentDOM; )
            e = e.parentNode;
          o = e.previousSibling;
        }
        for (; o && !((s = o.pmViewDesc) && s.parent == this); )
          o = o.previousSibling;
        return o ? this.posBeforeChild(s) + s.size : this.posAtStart;
      } else {
        let o, s;
        if (e == this.contentDOM)
          o = e.childNodes[n];
        else {
          for (; e.parentNode != this.contentDOM; )
            e = e.parentNode;
          o = e.nextSibling;
        }
        for (; o && !((s = o.pmViewDesc) && s.parent == this); )
          o = o.nextSibling;
        return o ? this.posBeforeChild(s) : this.posAtEnd;
      }
    let r;
    if (e == this.dom && this.contentDOM)
      r = n > On(this.contentDOM);
    else if (this.contentDOM && this.contentDOM != this.dom && this.dom.contains(this.contentDOM))
      r = e.compareDocumentPosition(this.contentDOM) & 2;
    else if (this.dom.firstChild) {
      if (n == 0)
        for (let o = e; ; o = o.parentNode) {
          if (o == this.dom) {
            r = !1;
            break;
          }
          if (o.previousSibling)
            break;
        }
      if (r == null && n == e.childNodes.length)
        for (let o = e; ; o = o.parentNode) {
          if (o == this.dom) {
            r = !0;
            break;
          }
          if (o.nextSibling)
            break;
        }
    }
    return r ?? i > 0 ? this.posAtEnd : this.posAtStart;
  }
  nearestDesc(e, n = !1) {
    for (let i = !0, r = e; r; r = r.parentNode) {
      let o = this.getDesc(r), s;
      if (o && (!n || o.node))
        if (i && (s = o.nodeDOM) && !(s.nodeType == 1 ? s.contains(e.nodeType == 1 ? e : e.parentNode) : s == e))
          i = !1;
        else
          return o;
    }
  }
  getDesc(e) {
    let n = e.pmViewDesc;
    for (let i = n; i; i = i.parent)
      if (i == this)
        return n;
  }
  posFromDOM(e, n, i) {
    for (let r = e; r; r = r.parentNode) {
      let o = this.getDesc(r);
      if (o)
        return o.localPosFromDOM(e, n, i);
    }
    return -1;
  }
  // Find the desc for the node after the given pos, if any. (When a
  // parent node overrode rendering, there might not be one.)
  descAt(e) {
    for (let n = 0, i = 0; n < this.children.length; n++) {
      let r = this.children[n], o = i + r.size;
      if (i == e && o != i) {
        for (; !r.border && r.children.length; )
          r = r.children[0];
        return r;
      }
      if (e < o)
        return r.descAt(e - i - r.border);
      i = o;
    }
  }
  domFromPos(e, n) {
    if (!this.contentDOM)
      return { node: this.dom, offset: 0, atom: e + 1 };
    let i = 0, r = 0;
    for (let o = 0; i < this.children.length; i++) {
      let s = this.children[i], a = o + s.size;
      if (a > e || s instanceof j5) {
        r = e - o;
        break;
      }
      o = a;
    }
    if (r)
      return this.children[i].domFromPos(r - this.children[i].border, n);
    for (let o; i && !(o = this.children[i - 1]).size && o instanceof $5 && o.side >= 0; i--)
      ;
    if (n <= 0) {
      let o, s = !0;
      for (; o = i ? this.children[i - 1] : null, !(!o || o.dom.parentNode == this.contentDOM); i--, s = !1)
        ;
      return o && n && s && !o.border && !o.domAtom ? o.domFromPos(o.size, n) : { node: this.contentDOM, offset: o ? On(o.dom) + 1 : 0 };
    } else {
      let o, s = !0;
      for (; o = i < this.children.length ? this.children[i] : null, !(!o || o.dom.parentNode == this.contentDOM); i++, s = !1)
        ;
      return o && s && !o.border && !o.domAtom ? o.domFromPos(0, n) : { node: this.contentDOM, offset: o ? On(o.dom) : this.contentDOM.childNodes.length };
    }
  }
  // Used to find a DOM range in a single parent for a given changed
  // range.
  parseRange(e, n, i = 0) {
    if (this.children.length == 0)
      return { node: this.contentDOM, from: e, to: n, fromOffset: 0, toOffset: this.contentDOM.childNodes.length };
    let r = -1, o = -1;
    for (let s = i, a = 0; ; a++) {
      let l = this.children[a], c = s + l.size;
      if (r == -1 && e <= c) {
        let f = s + l.border;
        if (e >= f && n <= c - l.border && l.node && l.contentDOM && this.contentDOM.contains(l.contentDOM))
          return l.parseRange(e, n, f);
        e = s;
        for (let d = a; d > 0; d--) {
          let u = this.children[d - 1];
          if (u.size && u.dom.parentNode == this.contentDOM && !u.emptyChildAt(1)) {
            r = On(u.dom) + 1;
            break;
          }
          e -= u.size;
        }
        r == -1 && (r = 0);
      }
      if (r > -1 && (c > n || a == this.children.length - 1)) {
        n = c;
        for (let f = a + 1; f < this.children.length; f++) {
          let d = this.children[f];
          if (d.size && d.dom.parentNode == this.contentDOM && !d.emptyChildAt(-1)) {
            o = On(d.dom);
            break;
          }
          n += d.size;
        }
        o == -1 && (o = this.contentDOM.childNodes.length);
        break;
      }
      s = c;
    }
    return { node: this.contentDOM, from: e, to: n, fromOffset: r, toOffset: o };
  }
  emptyChildAt(e) {
    if (this.border || !this.contentDOM || !this.children.length)
      return !1;
    let n = this.children[e < 0 ? 0 : this.children.length - 1];
    return n.size == 0 || n.emptyChildAt(e);
  }
  domAfterPos(e) {
    let { node: n, offset: i } = this.domFromPos(e, 0);
    if (n.nodeType != 1 || i == n.childNodes.length)
      throw new RangeError("No node after pos " + e);
    return n.childNodes[i];
  }
  // View descs are responsible for setting any selection that falls
  // entirely inside of them, so that custom implementations can do
  // custom things with the selection. Note that this falls apart when
  // a selection starts in such a node and ends in another, in which
  // case we just use whatever domFromPos produces as a best effort.
  setSelection(e, n, i, r = !1) {
    let o = Math.min(e, n), s = Math.max(e, n);
    for (let u = 0, h = 0; u < this.children.length; u++) {
      let p = this.children[u], m = h + p.size;
      if (o > h && s < m)
        return p.setSelection(e - h - p.border, n - h - p.border, i, r);
      h = m;
    }
    let a = this.domFromPos(e, e ? -1 : 1), l = n == e ? a : this.domFromPos(n, n ? -1 : 1), c = i.getSelection(), f = !1;
    if ((or || Yn) && e == n) {
      let { node: u, offset: h } = a;
      if (u.nodeType == 3) {
        if (f = !!(h && u.nodeValue[h - 1] == `
`), f && h == u.nodeValue.length)
          for (let p = u, m; p; p = p.parentNode) {
            if (m = p.nextSibling) {
              m.nodeName == "BR" && (a = l = { node: m.parentNode, offset: On(m) + 1 });
              break;
            }
            let v = p.pmViewDesc;
            if (v && v.node && v.node.isBlock)
              break;
          }
      } else {
        let p = u.childNodes[h - 1];
        f = p && (p.nodeName == "BR" || p.contentEditable == "false");
      }
    }
    if (or && c.focusNode && c.focusNode != l.node && c.focusNode.nodeType == 1) {
      let u = c.focusNode.childNodes[c.focusOffset];
      u && u.contentEditable == "false" && (r = !0);
    }
    if (!(r || f && Yn) && sa(a.node, a.offset, c.anchorNode, c.anchorOffset) && sa(l.node, l.offset, c.focusNode, c.focusOffset))
      return;
    let d = !1;
    if ((c.extend || e == n) && !f) {
      c.collapse(a.node, a.offset);
      try {
        e != n && c.extend(l.node, l.offset), d = !0;
      } catch {
      }
    }
    if (!d) {
      if (e > n) {
        let h = a;
        a = l, l = h;
      }
      let u = document.createRange();
      u.setEnd(l.node, l.offset), u.setStart(a.node, a.offset), c.removeAllRanges(), c.addRange(u);
    }
  }
  ignoreMutation(e) {
    return !this.contentDOM && e.type != "selection";
  }
  get contentLost() {
    return this.contentDOM && this.contentDOM != this.dom && !this.dom.contains(this.contentDOM);
  }
  // Remove a subtree of the element tree that has been touched
  // by a DOM change, so that the next update will redraw it.
  markDirty(e, n) {
    for (let i = 0, r = 0; r < this.children.length; r++) {
      let o = this.children[r], s = i + o.size;
      if (i == s ? e <= s && n >= i : e < s && n > i) {
        let a = i + o.border, l = s - o.border;
        if (e >= a && n <= l) {
          this.dirty = e == i || n == s ? qs : Qk, e == a && n == l && (o.contentLost || o.dom.parentNode != this.contentDOM) ? o.dirty = Ir : o.markDirty(e - a, n - a);
          return;
        } else
          o.dirty = o.dom == o.contentDOM && o.dom.parentNode == this.contentDOM && !o.children.length ? qs : Ir;
      }
      i = s;
    }
    this.dirty = qs;
  }
  markParentsDirty() {
    let e = 1;
    for (let n = this.parent; n; n = n.parent, e++) {
      let i = e == 1 ? qs : Qk;
      n.dirty < i && (n.dirty = i);
    }
  }
  get domAtom() {
    return !1;
  }
  get ignoreForCoords() {
    return !1;
  }
  isText(e) {
    return !1;
  }
}
class $5 extends Cf {
  constructor(e, n, i, r) {
    let o, s = n.type.toDOM;
    if (typeof s == "function" && (s = s(i, () => {
      if (!o)
        return r;
      if (o.parent)
        return o.parent.posBeforeChild(o);
    })), !n.type.spec.raw) {
      if (s.nodeType != 1) {
        let a = document.createElement("span");
        a.appendChild(s), s = a;
      }
      s.contentEditable = "false", s.classList.add("ProseMirror-widget");
    }
    super(e, [], s, null), this.widget = n, this.widget = n, o = this;
  }
  matchesWidget(e) {
    return this.dirty == Li && e.type.eq(this.widget.type);
  }
  parseRule() {
    return { ignore: !0 };
  }
  stopEvent(e) {
    let n = this.widget.spec.stopEvent;
    return n ? n(e) : !1;
  }
  ignoreMutation(e) {
    return e.type != "selection" || this.widget.spec.ignoreSelection;
  }
  destroy() {
    this.widget.type.destroy(this.dom), super.destroy();
  }
  get domAtom() {
    return !0;
  }
  get side() {
    return this.widget.type.side;
  }
}
class CN extends Cf {
  constructor(e, n, i, r) {
    super(e, [], n, null), this.textDOM = i, this.text = r;
  }
  get size() {
    return this.text.length;
  }
  localPosFromDOM(e, n) {
    return e != this.textDOM ? this.posAtStart + (n ? this.size : 0) : this.posAtStart + n;
  }
  domFromPos(e) {
    return { node: this.textDOM, offset: e };
  }
  ignoreMutation(e) {
    return e.type === "characterData" && e.target.nodeValue == e.oldValue;
  }
}
class aa extends Cf {
  constructor(e, n, i, r) {
    super(e, [], i, r), this.mark = n;
  }
  static create(e, n, i, r) {
    let o = r.nodeViews[n.type.name], s = o && o(n, r, i);
    return (!s || !s.dom) && (s = Eo.renderSpec(document, n.type.spec.toDOM(n, i), null, n.attrs)), new aa(e, n, s.dom, s.contentDOM || s.dom);
  }
  parseRule() {
    return this.dirty & Ir || this.mark.type.spec.reparseInView ? null : { mark: this.mark.type.name, attrs: this.mark.attrs, contentElement: this.contentDOM };
  }
  matchesMark(e) {
    return this.dirty != Ir && this.mark.eq(e);
  }
  markDirty(e, n) {
    if (super.markDirty(e, n), this.dirty != Li) {
      let i = this.parent;
      for (; !i.node; )
        i = i.parent;
      i.dirty < this.dirty && (i.dirty = this.dirty), this.dirty = Li;
    }
  }
  slice(e, n, i) {
    let r = aa.create(this.parent, this.mark, !0, i), o = this.children, s = this.size;
    n < s && (o = j0(o, n, s, i)), e > 0 && (o = j0(o, 0, e, i));
    for (let a = 0; a < o.length; a++)
      o[a].parent = r;
    return r.children = o, r;
  }
}
class fs extends Cf {
  constructor(e, n, i, r, o, s, a, l, c) {
    super(e, [], o, s), this.node = n, this.outerDeco = i, this.innerDeco = r, this.nodeDOM = a;
  }
  // By default, a node is rendered using the `toDOM` method from the
  // node type spec. But client code can use the `nodeViews` spec to
  // supply a custom node view, which can influence various aspects of
  // the way the node works.
  //
  // (Using subclassing for this was intentionally decided against,
  // since it'd require exposing a whole slew of finicky
  // implementation details to the user code that they probably will
  // never need.)
  static create(e, n, i, r, o, s) {
    let a = o.nodeViews[n.type.name], l, c = a && a(n, o, () => {
      if (!l)
        return s;
      if (l.parent)
        return l.parent.posBeforeChild(l);
    }, i, r), f = c && c.dom, d = c && c.contentDOM;
    if (n.isText) {
      if (!f)
        f = document.createTextNode(n.text);
      else if (f.nodeType != 3)
        throw new RangeError("Text must be rendered as a DOM text node");
    } else f || ({ dom: f, contentDOM: d } = Eo.renderSpec(document, n.type.spec.toDOM(n), null, n.attrs));
    !d && !n.isText && f.nodeName != "BR" && (f.hasAttribute("contenteditable") || (f.contentEditable = "false"), n.type.spec.draggable && (f.draggable = !0));
    let u = f;
    return f = V5(f, i, n), c ? l = new SN(e, n, i, r, f, d || null, u, c, o, s + 1) : n.isText ? new gh(e, n, i, r, f, u, o) : new fs(e, n, i, r, f, d || null, u, o, s + 1);
  }
  parseRule() {
    if (this.node.type.spec.reparseInView)
      return null;
    let e = { node: this.node.type.name, attrs: this.node.attrs };
    if (this.node.type.whitespace == "pre" && (e.preserveWhitespace = "full"), !this.contentDOM)
      e.getContent = () => this.node.content;
    else if (!this.contentLost)
      e.contentElement = this.contentDOM;
    else {
      for (let n = this.children.length - 1; n >= 0; n--) {
        let i = this.children[n];
        if (this.dom.contains(i.dom.parentNode)) {
          e.contentElement = i.dom.parentNode;
          break;
        }
      }
      e.contentElement || (e.getContent = () => ie.empty);
    }
    return e;
  }
  matchesNode(e, n, i) {
    return this.dirty == Li && e.eq(this.node) && Lu(n, this.outerDeco) && i.eq(this.innerDeco);
  }
  get size() {
    return this.node.nodeSize;
  }
  get border() {
    return this.node.isLeaf ? 0 : 1;
  }
  // Syncs `this.children` to match `this.node.content` and the local
  // decorations, possibly introducing nesting for marks. Then, in a
  // separate step, syncs the DOM inside `this.contentDOM` to
  // `this.children`.
  updateChildren(e, n) {
    let i = this.node.inlineContent, r = n, o = e.composing ? this.localCompositionInfo(e, n) : null, s = o && o.pos > -1 ? o : null, a = o && o.pos < 0, l = new AN(this, s && s.node, e);
    ON(this.node, this.innerDeco, (c, f, d) => {
      c.spec.marks ? l.syncToMarks(c.spec.marks, i, e) : c.type.side >= 0 && !d && l.syncToMarks(f == this.node.childCount ? Rt.none : this.node.child(f).marks, i, e), l.placeWidget(c, e, r);
    }, (c, f, d, u) => {
      l.syncToMarks(c.marks, i, e);
      let h;
      l.findNodeMatch(c, f, d, u) || a && e.state.selection.from > r && e.state.selection.to < r + c.nodeSize && (h = l.findIndexWithChild(o.node)) > -1 && l.updateNodeAt(c, f, d, h, e) || l.updateNextNode(c, f, d, e, u, r) || l.addNode(c, f, d, e, r), r += c.nodeSize;
    }), l.syncToMarks([], i, e), this.node.isTextblock && l.addTextblockHacks(), l.destroyRest(), (l.changed || this.dirty == qs) && (s && this.protectLocalComposition(e, s), z5(this.contentDOM, this.children, e), hl && RN(this.dom));
  }
  localCompositionInfo(e, n) {
    let { from: i, to: r } = e.state.selection;
    if (!(e.state.selection instanceof ze) || i < n || r > n + this.node.content.size)
      return null;
    let o = e.input.compositionNode;
    if (!o || !this.dom.contains(o.parentNode))
      return null;
    if (this.node.inlineContent) {
      let s = o.nodeValue, a = IN(this.node.content, s, i - n, r - n);
      return a < 0 ? null : { node: o, pos: a, text: s };
    } else
      return { node: o, pos: -1, text: "" };
  }
  protectLocalComposition(e, { node: n, pos: i, text: r }) {
    if (this.getDesc(n))
      return;
    let o = n;
    for (; o.parentNode != this.contentDOM; o = o.parentNode) {
      for (; o.previousSibling; )
        o.parentNode.removeChild(o.previousSibling);
      for (; o.nextSibling; )
        o.parentNode.removeChild(o.nextSibling);
      o.pmViewDesc && (o.pmViewDesc = void 0);
    }
    let s = new CN(this, o, n, r);
    e.input.compositionNodes.push(s), this.children = j0(this.children, i, i + r.length, e, s);
  }
  // If this desc must be updated to match the given node decoration,
  // do so and return true.
  update(e, n, i, r) {
    return this.dirty == Ir || !e.sameMarkup(this.node) ? !1 : (this.updateInner(e, n, i, r), !0);
  }
  updateInner(e, n, i, r) {
    this.updateOuterDeco(n), this.node = e, this.innerDeco = i, this.contentDOM && this.updateChildren(r, this.posAtStart), this.dirty = Li;
  }
  updateOuterDeco(e) {
    if (Lu(e, this.outerDeco))
      return;
    let n = this.nodeDOM.nodeType != 1, i = this.dom;
    this.dom = U5(this.dom, this.nodeDOM, $0(this.outerDeco, this.node, n), $0(e, this.node, n)), this.dom != i && (i.pmViewDesc = void 0, this.dom.pmViewDesc = this), this.outerDeco = e;
  }
  // Mark this node as being the selected node.
  selectNode() {
    this.nodeDOM.nodeType == 1 && this.nodeDOM.classList.add("ProseMirror-selectednode"), (this.contentDOM || !this.node.type.spec.draggable) && (this.dom.draggable = !0);
  }
  // Remove selected node marking from this node.
  deselectNode() {
    this.nodeDOM.nodeType == 1 && (this.nodeDOM.classList.remove("ProseMirror-selectednode"), (this.contentDOM || !this.node.type.spec.draggable) && this.dom.removeAttribute("draggable"));
  }
  get domAtom() {
    return this.node.isAtom;
  }
}
function Zk(t, e, n, i, r) {
  V5(i, e, t);
  let o = new fs(void 0, t, e, n, i, i, i, r, 0);
  return o.contentDOM && o.updateChildren(r, 0), o;
}
class gh extends fs {
  constructor(e, n, i, r, o, s, a) {
    super(e, n, i, r, o, null, s, a, 0);
  }
  parseRule() {
    let e = this.nodeDOM.parentNode;
    for (; e && e != this.dom && !e.pmIsDeco; )
      e = e.parentNode;
    return { skip: e || !0 };
  }
  update(e, n, i, r) {
    return this.dirty == Ir || this.dirty != Li && !this.inParent() || !e.sameMarkup(this.node) ? !1 : (this.updateOuterDeco(n), (this.dirty != Li || e.text != this.node.text) && e.text != this.nodeDOM.nodeValue && (this.nodeDOM.nodeValue = e.text, r.trackWrites == this.nodeDOM && (r.trackWrites = null)), this.node = e, this.dirty = Li, !0);
  }
  inParent() {
    let e = this.parent.contentDOM;
    for (let n = this.nodeDOM; n; n = n.parentNode)
      if (n == e)
        return !0;
    return !1;
  }
  domFromPos(e) {
    return { node: this.nodeDOM, offset: e };
  }
  localPosFromDOM(e, n, i) {
    return e == this.nodeDOM ? this.posAtStart + Math.min(n, this.node.text.length) : super.localPosFromDOM(e, n, i);
  }
  ignoreMutation(e) {
    return e.type != "characterData" && e.type != "selection";
  }
  slice(e, n, i) {
    let r = this.node.cut(e, n), o = document.createTextNode(r.text);
    return new gh(this.parent, r, this.outerDeco, this.innerDeco, o, o, i);
  }
  markDirty(e, n) {
    super.markDirty(e, n), this.dom != this.nodeDOM && (e == 0 || n == this.nodeDOM.nodeValue.length) && (this.dirty = Ir);
  }
  get domAtom() {
    return !1;
  }
  isText(e) {
    return this.node.text == e;
  }
}
class j5 extends Cf {
  parseRule() {
    return { ignore: !0 };
  }
  matchesHack(e) {
    return this.dirty == Li && this.dom.nodeName == e;
  }
  get domAtom() {
    return !0;
  }
  get ignoreForCoords() {
    return this.dom.nodeName == "IMG";
  }
}
class SN extends fs {
  constructor(e, n, i, r, o, s, a, l, c, f) {
    super(e, n, i, r, o, s, a, c, f), this.spec = l;
  }
  // A custom `update` method gets to decide whether the update goes
  // through. If it does, and there's a `contentDOM` node, our logic
  // updates the children.
  update(e, n, i, r) {
    if (this.dirty == Ir)
      return !1;
    if (this.spec.update) {
      let o = this.spec.update(e, n, i);
      return o && this.updateInner(e, n, i, r), o;
    } else return !this.contentDOM && !e.isLeaf ? !1 : super.update(e, n, i, r);
  }
  selectNode() {
    this.spec.selectNode ? this.spec.selectNode() : super.selectNode();
  }
  deselectNode() {
    this.spec.deselectNode ? this.spec.deselectNode() : super.deselectNode();
  }
  setSelection(e, n, i, r) {
    this.spec.setSelection ? this.spec.setSelection(e, n, i) : super.setSelection(e, n, i, r);
  }
  destroy() {
    this.spec.destroy && this.spec.destroy(), super.destroy();
  }
  stopEvent(e) {
    return this.spec.stopEvent ? this.spec.stopEvent(e) : !1;
  }
  ignoreMutation(e) {
    return this.spec.ignoreMutation ? this.spec.ignoreMutation(e) : super.ignoreMutation(e);
  }
}
function z5(t, e, n) {
  let i = t.firstChild, r = !1;
  for (let o = 0; o < e.length; o++) {
    let s = e[o], a = s.dom;
    if (a.parentNode == t) {
      for (; a != i; )
        i = e2(i), r = !0;
      i = i.nextSibling;
    } else
      r = !0, t.insertBefore(a, i);
    if (s instanceof aa) {
      let l = i ? i.previousSibling : t.lastChild;
      z5(s.contentDOM, s.children, n), i = l ? l.nextSibling : t.firstChild;
    }
  }
  for (; i; )
    i = e2(i), r = !0;
  r && n.trackWrites == t && (n.trackWrites = null);
}
const Ac = function(t) {
  t && (this.nodeName = t);
};
Ac.prototype = /* @__PURE__ */ Object.create(null);
const Gs = [new Ac()];
function $0(t, e, n) {
  if (t.length == 0)
    return Gs;
  let i = n ? Gs[0] : new Ac(), r = [i];
  for (let o = 0; o < t.length; o++) {
    let s = t[o].type.attrs;
    if (s) {
      s.nodeName && r.push(i = new Ac(s.nodeName));
      for (let a in s) {
        let l = s[a];
        l != null && (n && r.length == 1 && r.push(i = new Ac(e.isInline ? "span" : "div")), a == "class" ? i.class = (i.class ? i.class + " " : "") + l : a == "style" ? i.style = (i.style ? i.style + ";" : "") + l : a != "nodeName" && (i[a] = l));
      }
    }
  }
  return r;
}
function U5(t, e, n, i) {
  if (n == Gs && i == Gs)
    return e;
  let r = e;
  for (let o = 0; o < i.length; o++) {
    let s = i[o], a = n[o];
    if (o) {
      let l;
      a && a.nodeName == s.nodeName && r != t && (l = r.parentNode) && l.nodeName.toLowerCase() == s.nodeName || (l = document.createElement(s.nodeName), l.pmIsDeco = !0, l.appendChild(r), a = Gs[0]), r = l;
    }
    xN(r, a || Gs[0], s);
  }
  return r;
}
function xN(t, e, n) {
  for (let i in e)
    i != "class" && i != "style" && i != "nodeName" && !(i in n) && t.removeAttribute(i);
  for (let i in n)
    i != "class" && i != "style" && i != "nodeName" && n[i] != e[i] && t.setAttribute(i, n[i]);
  if (e.class != n.class) {
    let i = e.class ? e.class.split(" ").filter(Boolean) : [], r = n.class ? n.class.split(" ").filter(Boolean) : [];
    for (let o = 0; o < i.length; o++)
      r.indexOf(i[o]) == -1 && t.classList.remove(i[o]);
    for (let o = 0; o < r.length; o++)
      i.indexOf(r[o]) == -1 && t.classList.add(r[o]);
    t.classList.length == 0 && t.removeAttribute("class");
  }
  if (e.style != n.style) {
    if (e.style) {
      let i = /\s*([\w\-\xa1-\uffff]+)\s*:(?:"(?:\\.|[^"])*"|'(?:\\.|[^'])*'|\(.*?\)|[^;])*/g, r;
      for (; r = i.exec(e.style); )
        t.style.removeProperty(r[1]);
    }
    n.style && (t.style.cssText += n.style);
  }
}
function V5(t, e, n) {
  return U5(t, t, Gs, $0(e, n, t.nodeType != 1));
}
function Lu(t, e) {
  if (t.length != e.length)
    return !1;
  for (let n = 0; n < t.length; n++)
    if (!t[n].type.eq(e[n].type))
      return !1;
  return !0;
}
function e2(t) {
  let e = t.nextSibling;
  return t.parentNode.removeChild(t), e;
}
class AN {
  constructor(e, n, i) {
    this.lock = n, this.view = i, this.index = 0, this.stack = [], this.changed = !1, this.top = e, this.preMatch = MN(e.node.content, e);
  }
  // Destroy and remove the children between the given indices in
  // `this.top`.
  destroyBetween(e, n) {
    if (e != n) {
      for (let i = e; i < n; i++)
        this.top.children[i].destroy();
      this.top.children.splice(e, n - e), this.changed = !0;
    }
  }
  // Destroy all remaining children in `this.top`.
  destroyRest() {
    this.destroyBetween(this.index, this.top.children.length);
  }
  // Sync the current stack of mark descs with the given array of
  // marks, reusing existing mark descs when possible.
  syncToMarks(e, n, i) {
    let r = 0, o = this.stack.length >> 1, s = Math.min(o, e.length);
    for (; r < s && (r == o - 1 ? this.top : this.stack[r + 1 << 1]).matchesMark(e[r]) && e[r].type.spec.spanning !== !1; )
      r++;
    for (; r < o; )
      this.destroyRest(), this.top.dirty = Li, this.index = this.stack.pop(), this.top = this.stack.pop(), o--;
    for (; o < e.length; ) {
      this.stack.push(this.top, this.index + 1);
      let a = -1;
      for (let l = this.index; l < Math.min(this.index + 3, this.top.children.length); l++) {
        let c = this.top.children[l];
        if (c.matchesMark(e[o]) && !this.isLocked(c.dom)) {
          a = l;
          break;
        }
      }
      if (a > -1)
        a > this.index && (this.changed = !0, this.destroyBetween(this.index, a)), this.top = this.top.children[this.index];
      else {
        let l = aa.create(this.top, e[o], n, i);
        this.top.children.splice(this.index, 0, l), this.top = l, this.changed = !0;
      }
      this.index = 0, o++;
    }
  }
  // Try to find a node desc matching the given data. Skip over it and
  // return true when successful.
  findNodeMatch(e, n, i, r) {
    let o = -1, s;
    if (r >= this.preMatch.index && (s = this.preMatch.matches[r - this.preMatch.index]).parent == this.top && s.matchesNode(e, n, i))
      o = this.top.children.indexOf(s, this.index);
    else
      for (let a = this.index, l = Math.min(this.top.children.length, a + 5); a < l; a++) {
        let c = this.top.children[a];
        if (c.matchesNode(e, n, i) && !this.preMatch.matched.has(c)) {
          o = a;
          break;
        }
      }
    return o < 0 ? !1 : (this.destroyBetween(this.index, o), this.index++, !0);
  }
  updateNodeAt(e, n, i, r, o) {
    let s = this.top.children[r];
    return s.dirty == Ir && s.dom == s.contentDOM && (s.dirty = qs), s.update(e, n, i, o) ? (this.destroyBetween(this.index, r), this.index++, !0) : !1;
  }
  findIndexWithChild(e) {
    for (; ; ) {
      let n = e.parentNode;
      if (!n)
        return -1;
      if (n == this.top.contentDOM) {
        let i = e.pmViewDesc;
        if (i) {
          for (let r = this.index; r < this.top.children.length; r++)
            if (this.top.children[r] == i)
              return r;
        }
        return -1;
      }
      e = n;
    }
  }
  // Try to update the next node, if any, to the given data. Checks
  // pre-matches to avoid overwriting nodes that could still be used.
  updateNextNode(e, n, i, r, o, s) {
    for (let a = this.index; a < this.top.children.length; a++) {
      let l = this.top.children[a];
      if (l instanceof fs) {
        let c = this.preMatch.matched.get(l);
        if (c != null && c != o)
          return !1;
        let f = l.dom, d, u = this.isLocked(f) && !(e.isText && l.node && l.node.isText && l.nodeDOM.nodeValue == e.text && l.dirty != Ir && Lu(n, l.outerDeco));
        if (!u && l.update(e, n, i, r))
          return this.destroyBetween(this.index, a), l.dom != f && (this.changed = !0), this.index++, !0;
        if (!u && (d = this.recreateWrapper(l, e, n, i, r, s)))
          return this.destroyBetween(this.index, a), this.top.children[this.index] = d, d.contentDOM && (d.dirty = qs, d.updateChildren(r, s + 1), d.dirty = Li), this.changed = !0, this.index++, !0;
        break;
      }
    }
    return !1;
  }
  // When a node with content is replaced by a different node with
  // identical content, move over its children.
  recreateWrapper(e, n, i, r, o, s) {
    if (e.dirty || n.isAtom || !e.children.length || !e.node.content.eq(n.content) || !Lu(i, e.outerDeco) || !r.eq(e.innerDeco))
      return null;
    let a = fs.create(this.top, n, i, r, o, s);
    if (a.contentDOM) {
      a.children = e.children, e.children = [];
      for (let l of a.children)
        l.parent = a;
    }
    return e.destroy(), a;
  }
  // Insert the node as a newly created node desc.
  addNode(e, n, i, r, o) {
    let s = fs.create(this.top, e, n, i, r, o);
    s.contentDOM && s.updateChildren(r, o + 1), this.top.children.splice(this.index++, 0, s), this.changed = !0;
  }
  placeWidget(e, n, i) {
    let r = this.index < this.top.children.length ? this.top.children[this.index] : null;
    if (r && r.matchesWidget(e) && (e == r.widget || !r.widget.type.toDOM.parentNode))
      this.index++;
    else {
      let o = new $5(this.top, e, n, i);
      this.top.children.splice(this.index++, 0, o), this.changed = !0;
    }
  }
  // Make sure a textblock looks and behaves correctly in
  // contentEditable.
  addTextblockHacks() {
    let e = this.top.children[this.index - 1], n = this.top;
    for (; e instanceof aa; )
      n = e, e = n.children[n.children.length - 1];
    (!e || // Empty textblock
    !(e instanceof gh) || /\n$/.test(e.node.text) || this.view.requiresGeckoHackNode && /\s$/.test(e.node.text)) && ((Yn || Hn) && e && e.dom.contentEditable == "false" && this.addHackNode("IMG", n), this.addHackNode("BR", this.top));
  }
  addHackNode(e, n) {
    if (n == this.top && this.index < n.children.length && n.children[this.index].matchesHack(e))
      this.index++;
    else {
      let i = document.createElement(e);
      e == "IMG" && (i.className = "ProseMirror-separator", i.alt = ""), e == "BR" && (i.className = "ProseMirror-trailingBreak");
      let r = new j5(this.top, [], i, null);
      n != this.top ? n.children.push(r) : n.children.splice(this.index++, 0, r), this.changed = !0;
    }
  }
  isLocked(e) {
    return this.lock && (e == this.lock || e.nodeType == 1 && e.contains(this.lock.parentNode));
  }
}
function MN(t, e) {
  let n = e, i = n.children.length, r = t.childCount, o = /* @__PURE__ */ new Map(), s = [];
  e: for (; r > 0; ) {
    let a;
    for (; ; )
      if (i) {
        let c = n.children[i - 1];
        if (c instanceof aa)
          n = c, i = c.children.length;
        else {
          a = c, i--;
          break;
        }
      } else {
        if (n == e)
          break e;
        i = n.parent.children.indexOf(n), n = n.parent;
      }
    let l = a.node;
    if (l) {
      if (l != t.child(r - 1))
        break;
      --r, o.set(a, r), s.push(a);
    }
  }
  return { index: r, matched: o, matches: s.reverse() };
}
function NN(t, e) {
  return t.type.side - e.type.side;
}
function ON(t, e, n, i) {
  let r = e.locals(t), o = 0;
  if (r.length == 0) {
    for (let c = 0; c < t.childCount; c++) {
      let f = t.child(c);
      i(f, r, e.forChild(o, f), c), o += f.nodeSize;
    }
    return;
  }
  let s = 0, a = [], l = null;
  for (let c = 0; ; ) {
    let f, d;
    for (; s < r.length && r[s].to == o; ) {
      let v = r[s++];
      v.widget && (f ? (d || (d = [f])).push(v) : f = v);
    }
    if (f)
      if (d) {
        d.sort(NN);
        for (let v = 0; v < d.length; v++)
          n(d[v], c, !!l);
      } else
        n(f, c, !!l);
    let u, h;
    if (l)
      h = -1, u = l, l = null;
    else if (c < t.childCount)
      h = c, u = t.child(c++);
    else
      break;
    for (let v = 0; v < a.length; v++)
      a[v].to <= o && a.splice(v--, 1);
    for (; s < r.length && r[s].from <= o && r[s].to > o; )
      a.push(r[s++]);
    let p = o + u.nodeSize;
    if (u.isText) {
      let v = p;
      s < r.length && r[s].from < v && (v = r[s].from);
      for (let y = 0; y < a.length; y++)
        a[y].to < v && (v = a[y].to);
      v < p && (l = u.cut(v - o), u = u.cut(0, v - o), p = v, h = -1);
    } else
      for (; s < r.length && r[s].to < p; )
        s++;
    let m = u.isInline && !u.isLeaf ? a.filter((v) => !v.inline) : a.slice();
    i(u, m, e.forChild(o, u), h), o = p;
  }
}
function RN(t) {
  if (t.nodeName == "UL" || t.nodeName == "OL") {
    let e = t.style.cssText;
    t.style.cssText = e + "; list-style: square !important", window.getComputedStyle(t).listStyle, t.style.cssText = e;
  }
}
function IN(t, e, n, i) {
  for (let r = 0, o = 0; r < t.childCount && o <= i; ) {
    let s = t.child(r++), a = o;
    if (o += s.nodeSize, !s.isText)
      continue;
    let l = s.text;
    for (; r < t.childCount; ) {
      let c = t.child(r++);
      if (o += c.nodeSize, !c.isText)
        break;
      l += c.text;
    }
    if (o >= n) {
      if (o >= i && l.slice(i - e.length - a, i - a) == e)
        return i - e.length;
      let c = a < i ? l.lastIndexOf(e, i - a - 1) : -1;
      if (c >= 0 && c + e.length + a >= n)
        return a + c;
      if (n == i && l.length >= i + e.length - a && l.slice(i - a, i - a + e.length) == e)
        return i;
    }
  }
  return -1;
}
function j0(t, e, n, i, r) {
  let o = [];
  for (let s = 0, a = 0; s < t.length; s++) {
    let l = t[s], c = a, f = a += l.size;
    c >= n || f <= e ? o.push(l) : (c < e && o.push(l.slice(0, e - c, i)), r && (o.push(r), r = void 0), f > n && o.push(l.slice(n - c, l.size, i)));
  }
  return o;
}
function Cy(t, e = null) {
  let n = t.domSelectionRange(), i = t.state.doc;
  if (!n.focusNode)
    return null;
  let r = t.docView.nearestDesc(n.focusNode), o = r && r.size == 0, s = t.docView.posFromDOM(n.focusNode, n.focusOffset, 1);
  if (s < 0)
    return null;
  let a = i.resolve(s), l, c;
  if (mh(n)) {
    for (l = s; r && !r.node; )
      r = r.parent;
    let d = r.node;
    if (r && d.isAtom && Ie.isSelectable(d) && r.parent && !(d.isInline && oN(n.focusNode, n.focusOffset, r.dom))) {
      let u = r.posBefore;
      c = new Ie(s == u ? a : i.resolve(u));
    }
  } else {
    if (n instanceof t.dom.ownerDocument.defaultView.Selection && n.rangeCount > 1) {
      let d = s, u = s;
      for (let h = 0; h < n.rangeCount; h++) {
        let p = n.getRangeAt(h);
        d = Math.min(d, t.docView.posFromDOM(p.startContainer, p.startOffset, 1)), u = Math.max(u, t.docView.posFromDOM(p.endContainer, p.endOffset, -1));
      }
      if (d < 0)
        return null;
      [l, s] = u == t.state.selection.anchor ? [u, d] : [d, u], a = i.resolve(s);
    } else
      l = t.docView.posFromDOM(n.anchorNode, n.anchorOffset, 1);
    if (l < 0)
      return null;
  }
  let f = i.resolve(l);
  if (!c) {
    let d = e == "pointer" || t.state.selection.head < a.pos && !o ? 1 : -1;
    c = Sy(t, f, a, d);
  }
  return c;
}
function W5(t) {
  return t.editable ? t.hasFocus() : G5(t) && document.activeElement && document.activeElement.contains(t.dom);
}
function co(t, e = !1) {
  let n = t.state.selection;
  if (q5(t, n), !!W5(t)) {
    if (!e && t.input.mouseDown && t.input.mouseDown.allowDefault && Hn) {
      let i = t.domSelectionRange(), r = t.domObserver.currentSelection;
      if (i.anchorNode && r.anchorNode && sa(i.anchorNode, i.anchorOffset, r.anchorNode, r.anchorOffset)) {
        t.input.mouseDown.delayedSelectionSync = !0, t.domObserver.setCurSelection();
        return;
      }
    }
    if (t.domObserver.disconnectSelection(), t.cursorWrapper)
      DN(t);
    else {
      let { anchor: i, head: r } = n, o, s;
      t2 && !(n instanceof ze) && (n.$from.parent.inlineContent || (o = n2(t, n.from)), !n.empty && !n.$from.parent.inlineContent && (s = n2(t, n.to))), t.docView.setSelection(i, r, t.root, e), t2 && (o && i2(o), s && i2(s)), n.visible ? t.dom.classList.remove("ProseMirror-hideselection") : (t.dom.classList.add("ProseMirror-hideselection"), "onselectionchange" in document && LN(t));
    }
    t.domObserver.setCurSelection(), t.domObserver.connectSelection();
  }
}
const t2 = Yn || Hn && I5 < 63;
function n2(t, e) {
  let { node: n, offset: i } = t.docView.domFromPos(e, 0), r = i < n.childNodes.length ? n.childNodes[i] : null, o = i ? n.childNodes[i - 1] : null;
  if (Yn && r && r.contentEditable == "false")
    return jp(r);
  if ((!r || r.contentEditable == "false") && (!o || o.contentEditable == "false")) {
    if (r)
      return jp(r);
    if (o)
      return jp(o);
  }
}
function jp(t) {
  return t.contentEditable = "true", Yn && t.draggable && (t.draggable = !1, t.wasDraggable = !0), t;
}
function i2(t) {
  t.contentEditable = "false", t.wasDraggable && (t.draggable = !0, t.wasDraggable = null);
}
function LN(t) {
  let e = t.dom.ownerDocument;
  e.removeEventListener("selectionchange", t.input.hideSelectionGuard);
  let n = t.domSelectionRange(), i = n.anchorNode, r = n.anchorOffset;
  e.addEventListener("selectionchange", t.input.hideSelectionGuard = () => {
    (n.anchorNode != i || n.anchorOffset != r) && (e.removeEventListener("selectionchange", t.input.hideSelectionGuard), setTimeout(() => {
      (!W5(t) || t.state.selection.visible) && t.dom.classList.remove("ProseMirror-hideselection");
    }, 20));
  });
}
function DN(t) {
  let e = t.domSelection(), n = document.createRange();
  if (!e)
    return;
  let i = t.cursorWrapper.dom, r = i.nodeName == "IMG";
  r ? n.setStart(i.parentNode, On(i) + 1) : n.setStart(i, 0), n.collapse(!0), e.removeAllRanges(), e.addRange(n), !r && !t.state.selection.visible && oi && cs <= 11 && (i.disabled = !0, i.disabled = !1);
}
function q5(t, e) {
  if (e instanceof Ie) {
    let n = t.docView.descAt(e.from);
    n != t.lastSelectedViewDesc && (r2(t), n && n.selectNode(), t.lastSelectedViewDesc = n);
  } else
    r2(t);
}
function r2(t) {
  t.lastSelectedViewDesc && (t.lastSelectedViewDesc.parent && t.lastSelectedViewDesc.deselectNode(), t.lastSelectedViewDesc = void 0);
}
function Sy(t, e, n, i) {
  return t.someProp("createSelectionBetween", (r) => r(t, e, n)) || ze.between(e, n, i);
}
function o2(t) {
  return t.editable && !t.hasFocus() ? !1 : G5(t);
}
function G5(t) {
  let e = t.domSelectionRange();
  if (!e.anchorNode)
    return !1;
  try {
    return t.dom.contains(e.anchorNode.nodeType == 3 ? e.anchorNode.parentNode : e.anchorNode) && (t.editable || t.dom.contains(e.focusNode.nodeType == 3 ? e.focusNode.parentNode : e.focusNode));
  } catch {
    return !1;
  }
}
function PN(t) {
  let e = t.docView.domFromPos(t.state.selection.anchor, 0), n = t.domSelectionRange();
  return sa(e.node, e.offset, n.anchorNode, n.anchorOffset);
}
function z0(t, e) {
  let { $anchor: n, $head: i } = t.selection, r = e > 0 ? n.max(i) : n.min(i), o = r.parent.inlineContent ? r.depth ? t.doc.resolve(e > 0 ? r.after() : r.before()) : null : r;
  return o && $e.findFrom(o, e);
}
function qo(t, e) {
  return t.dispatch(t.state.tr.setSelection(e).scrollIntoView()), !0;
}
function s2(t, e, n) {
  let i = t.state.selection;
  if (i instanceof ze)
    if (n.indexOf("s") > -1) {
      let { $head: r } = i, o = r.textOffset ? null : e < 0 ? r.nodeBefore : r.nodeAfter;
      if (!o || o.isText || !o.isLeaf)
        return !1;
      let s = t.state.doc.resolve(r.pos + o.nodeSize * (e < 0 ? -1 : 1));
      return qo(t, new ze(i.$anchor, s));
    } else if (i.empty) {
      if (t.endOfTextblock(e > 0 ? "forward" : "backward")) {
        let r = z0(t.state, e);
        return r && r instanceof Ie ? qo(t, r) : !1;
      } else if (!(Si && n.indexOf("m") > -1)) {
        let r = i.$head, o = r.textOffset ? null : e < 0 ? r.nodeBefore : r.nodeAfter, s;
        if (!o || o.isText)
          return !1;
        let a = e < 0 ? r.pos - o.nodeSize : r.pos;
        return o.isAtom || (s = t.docView.descAt(a)) && !s.contentDOM ? Ie.isSelectable(o) ? qo(t, new Ie(e < 0 ? t.state.doc.resolve(r.pos - o.nodeSize) : r)) : Tf ? qo(t, new ze(t.state.doc.resolve(e < 0 ? a : a + o.nodeSize))) : !1 : !1;
      }
    } else return !1;
  else {
    if (i instanceof Ie && i.node.isInline)
      return qo(t, new ze(e > 0 ? i.$to : i.$from));
    {
      let r = z0(t.state, e);
      return r ? qo(t, r) : !1;
    }
  }
}
function Du(t) {
  return t.nodeType == 3 ? t.nodeValue.length : t.childNodes.length;
}
function Mc(t, e) {
  let n = t.pmViewDesc;
  return n && n.size == 0 && (e < 0 || t.nextSibling || t.nodeName != "BR");
}
function Ma(t, e) {
  return e < 0 ? FN(t) : BN(t);
}
function FN(t) {
  let e = t.domSelectionRange(), n = e.focusNode, i = e.focusOffset;
  if (!n)
    return;
  let r, o, s = !1;
  for (or && n.nodeType == 1 && i < Du(n) && Mc(n.childNodes[i], -1) && (s = !0); ; )
    if (i > 0) {
      if (n.nodeType != 1)
        break;
      {
        let a = n.childNodes[i - 1];
        if (Mc(a, -1))
          r = n, o = --i;
        else if (a.nodeType == 3)
          n = a, i = n.nodeValue.length;
        else
          break;
      }
    } else {
      if (K5(n))
        break;
      {
        let a = n.previousSibling;
        for (; a && Mc(a, -1); )
          r = n.parentNode, o = On(a), a = a.previousSibling;
        if (a)
          n = a, i = Du(n);
        else {
          if (n = n.parentNode, n == t.dom)
            break;
          i = 0;
        }
      }
    }
  s ? U0(t, n, i) : r && U0(t, r, o);
}
function BN(t) {
  let e = t.domSelectionRange(), n = e.focusNode, i = e.focusOffset;
  if (!n)
    return;
  let r = Du(n), o, s;
  for (; ; )
    if (i < r) {
      if (n.nodeType != 1)
        break;
      let a = n.childNodes[i];
      if (Mc(a, 1))
        o = n, s = ++i;
      else
        break;
    } else {
      if (K5(n))
        break;
      {
        let a = n.nextSibling;
        for (; a && Mc(a, 1); )
          o = a.parentNode, s = On(a) + 1, a = a.nextSibling;
        if (a)
          n = a, i = 0, r = Du(n);
        else {
          if (n = n.parentNode, n == t.dom)
            break;
          i = r = 0;
        }
      }
    }
  o && U0(t, o, s);
}
function K5(t) {
  let e = t.pmViewDesc;
  return e && e.node && e.node.isBlock;
}
function HN(t, e) {
  for (; t && e == t.childNodes.length && !Ef(t); )
    e = On(t) + 1, t = t.parentNode;
  for (; t && e < t.childNodes.length; ) {
    let n = t.childNodes[e];
    if (n.nodeType == 3)
      return n;
    if (n.nodeType == 1 && n.contentEditable == "false")
      break;
    t = n, e = 0;
  }
}
function $N(t, e) {
  for (; t && !e && !Ef(t); )
    e = On(t), t = t.parentNode;
  for (; t && e; ) {
    let n = t.childNodes[e - 1];
    if (n.nodeType == 3)
      return n;
    if (n.nodeType == 1 && n.contentEditable == "false")
      break;
    t = n, e = t.childNodes.length;
  }
}
function U0(t, e, n) {
  if (e.nodeType != 3) {
    let o, s;
    (s = HN(e, n)) ? (e = s, n = 0) : (o = $N(e, n)) && (e = o, n = o.nodeValue.length);
  }
  let i = t.domSelection();
  if (!i)
    return;
  if (mh(i)) {
    let o = document.createRange();
    o.setEnd(e, n), o.setStart(e, n), i.removeAllRanges(), i.addRange(o);
  } else i.extend && i.extend(e, n);
  t.domObserver.setCurSelection();
  let { state: r } = t;
  setTimeout(() => {
    t.state == r && co(t);
  }, 50);
}
function a2(t, e) {
  let n = t.state.doc.resolve(e);
  if (!(Hn || lN) && n.parent.inlineContent) {
    let r = t.coordsAtPos(e);
    if (e > n.start()) {
      let o = t.coordsAtPos(e - 1), s = (o.top + o.bottom) / 2;
      if (s > r.top && s < r.bottom && Math.abs(o.left - r.left) > 1)
        return o.left < r.left ? "ltr" : "rtl";
    }
    if (e < n.end()) {
      let o = t.coordsAtPos(e + 1), s = (o.top + o.bottom) / 2;
      if (s > r.top && s < r.bottom && Math.abs(o.left - r.left) > 1)
        return o.left > r.left ? "ltr" : "rtl";
    }
  }
  return getComputedStyle(t.dom).direction == "rtl" ? "rtl" : "ltr";
}
function l2(t, e, n) {
  let i = t.state.selection;
  if (i instanceof ze && !i.empty || n.indexOf("s") > -1 || Si && n.indexOf("m") > -1)
    return !1;
  let { $from: r, $to: o } = i;
  if (!r.parent.inlineContent || t.endOfTextblock(e < 0 ? "up" : "down")) {
    let s = z0(t.state, e);
    if (s && s instanceof Ie)
      return qo(t, s);
  }
  if (!r.parent.inlineContent) {
    let s = e < 0 ? r : o, a = i instanceof er ? $e.near(s, e) : $e.findFrom(s, e);
    return a ? qo(t, a) : !1;
  }
  return !1;
}
function c2(t, e) {
  if (!(t.state.selection instanceof ze))
    return !0;
  let { $head: n, $anchor: i, empty: r } = t.state.selection;
  if (!n.sameParent(i))
    return !0;
  if (!r)
    return !1;
  if (t.endOfTextblock(e > 0 ? "forward" : "backward"))
    return !0;
  let o = !n.textOffset && (e < 0 ? n.nodeBefore : n.nodeAfter);
  if (o && !o.isText) {
    let s = t.state.tr;
    return e < 0 ? s.delete(n.pos - o.nodeSize, n.pos) : s.delete(n.pos, n.pos + o.nodeSize), t.dispatch(s), !0;
  }
  return !1;
}
function f2(t, e, n) {
  t.domObserver.stop(), e.contentEditable = n, t.domObserver.start();
}
function jN(t) {
  if (!Yn || t.state.selection.$head.parentOffset > 0)
    return !1;
  let { focusNode: e, focusOffset: n } = t.domSelectionRange();
  if (e && e.nodeType == 1 && n == 0 && e.firstChild && e.firstChild.contentEditable == "false") {
    let i = e.firstChild;
    f2(t, i, "true"), setTimeout(() => f2(t, i, "false"), 20);
  }
  return !1;
}
function zN(t) {
  let e = "";
  return t.ctrlKey && (e += "c"), t.metaKey && (e += "m"), t.altKey && (e += "a"), t.shiftKey && (e += "s"), e;
}
function UN(t, e) {
  let n = e.keyCode, i = zN(e);
  if (n == 8 || Si && n == 72 && i == "c")
    return c2(t, -1) || Ma(t, -1);
  if (n == 46 && !e.shiftKey || Si && n == 68 && i == "c")
    return c2(t, 1) || Ma(t, 1);
  if (n == 13 || n == 27)
    return !0;
  if (n == 37 || Si && n == 66 && i == "c") {
    let r = n == 37 ? a2(t, t.state.selection.from) == "ltr" ? -1 : 1 : -1;
    return s2(t, r, i) || Ma(t, r);
  } else if (n == 39 || Si && n == 70 && i == "c") {
    let r = n == 39 ? a2(t, t.state.selection.from) == "ltr" ? 1 : -1 : 1;
    return s2(t, r, i) || Ma(t, r);
  } else {
    if (n == 38 || Si && n == 80 && i == "c")
      return l2(t, -1, i) || Ma(t, -1);
    if (n == 40 || Si && n == 78 && i == "c")
      return jN(t) || l2(t, 1, i) || Ma(t, 1);
    if (i == (Si ? "m" : "c") && (n == 66 || n == 73 || n == 89 || n == 90))
      return !0;
  }
  return !1;
}
function xy(t, e) {
  t.someProp("transformCopied", (h) => {
    e = h(e, t);
  });
  let n = [], { content: i, openStart: r, openEnd: o } = e;
  for (; r > 1 && o > 1 && i.childCount == 1 && i.firstChild.childCount == 1; ) {
    r--, o--;
    let h = i.firstChild;
    n.push(h.type.name, h.attrs != h.type.defaultAttrs ? h.attrs : null), i = h.content;
  }
  let s = t.someProp("clipboardSerializer") || Eo.fromSchema(t.state.schema), a = e6(), l = a.createElement("div");
  l.appendChild(s.serializeFragment(i, { document: a }));
  let c = l.firstChild, f, d = 0;
  for (; c && c.nodeType == 1 && (f = Z5[c.nodeName.toLowerCase()]); ) {
    for (let h = f.length - 1; h >= 0; h--) {
      let p = a.createElement(f[h]);
      for (; l.firstChild; )
        p.appendChild(l.firstChild);
      l.appendChild(p), d++;
    }
    c = l.firstChild;
  }
  c && c.nodeType == 1 && c.setAttribute("data-pm-slice", `${r} ${o}${d ? ` -${d}` : ""} ${JSON.stringify(n)}`);
  let u = t.someProp("clipboardTextSerializer", (h) => h(e, t)) || e.content.textBetween(0, e.content.size, `

`);
  return { dom: l, text: u, slice: e };
}
function Y5(t, e, n, i, r) {
  let o = r.parent.type.spec.code, s, a;
  if (!n && !e)
    return null;
  let l = e && (i || o || !n);
  if (l) {
    if (t.someProp("transformPastedText", (u) => {
      e = u(e, o || i, t);
    }), o)
      return e ? new be(ie.from(t.state.schema.text(e.replace(/\r\n?/g, `
`))), 0, 0) : be.empty;
    let d = t.someProp("clipboardTextParser", (u) => u(e, r, i, t));
    if (d)
      a = d;
    else {
      let u = r.marks(), { schema: h } = t.state, p = Eo.fromSchema(h);
      s = document.createElement("div"), e.split(/(?:\r\n?|\n)+/).forEach((m) => {
        let v = s.appendChild(document.createElement("p"));
        m && v.appendChild(p.serializeNode(h.text(m, u)));
      });
    }
  } else
    t.someProp("transformPastedHTML", (d) => {
      n = d(n, t);
    }), s = GN(n), Tf && KN(s);
  let c = s && s.querySelector("[data-pm-slice]"), f = c && /^(\d+) (\d+)(?: -(\d+))? (.*)/.exec(c.getAttribute("data-pm-slice") || "");
  if (f && f[3])
    for (let d = +f[3]; d > 0; d--) {
      let u = s.firstChild;
      for (; u && u.nodeType != 1; )
        u = u.nextSibling;
      if (!u)
        break;
      s = u;
    }
  if (a || (a = (t.someProp("clipboardParser") || t.someProp("domParser") || Xa.fromSchema(t.state.schema)).parseSlice(s, {
    preserveWhitespace: !!(l || f),
    context: r,
    ruleFromNode(u) {
      return u.nodeName == "BR" && !u.nextSibling && u.parentNode && !VN.test(u.parentNode.nodeName) ? { ignore: !0 } : null;
    }
  })), f)
    a = YN(d2(a, +f[1], +f[2]), f[4]);
  else if (a = be.maxOpen(WN(a.content, r), !0), a.openStart || a.openEnd) {
    let d = 0, u = 0;
    for (let h = a.content.firstChild; d < a.openStart && !h.type.spec.isolating; d++, h = h.firstChild)
      ;
    for (let h = a.content.lastChild; u < a.openEnd && !h.type.spec.isolating; u++, h = h.lastChild)
      ;
    a = d2(a, d, u);
  }
  return t.someProp("transformPasted", (d) => {
    a = d(a, t);
  }), a;
}
const VN = /^(a|abbr|acronym|b|cite|code|del|em|i|ins|kbd|label|output|q|ruby|s|samp|span|strong|sub|sup|time|u|tt|var)$/i;
function WN(t, e) {
  if (t.childCount < 2)
    return t;
  for (let n = e.depth; n >= 0; n--) {
    let r = e.node(n).contentMatchAt(e.index(n)), o, s = [];
    if (t.forEach((a) => {
      if (!s)
        return;
      let l = r.findWrapping(a.type), c;
      if (!l)
        return s = null;
      if (c = s.length && o.length && X5(l, o, a, s[s.length - 1], 0))
        s[s.length - 1] = c;
      else {
        s.length && (s[s.length - 1] = Q5(s[s.length - 1], o.length));
        let f = J5(a, l);
        s.push(f), r = r.matchType(f.type), o = l;
      }
    }), s)
      return ie.from(s);
  }
  return t;
}
function J5(t, e, n = 0) {
  for (let i = e.length - 1; i >= n; i--)
    t = e[i].create(null, ie.from(t));
  return t;
}
function X5(t, e, n, i, r) {
  if (r < t.length && r < e.length && t[r] == e[r]) {
    let o = X5(t, e, n, i.lastChild, r + 1);
    if (o)
      return i.copy(i.content.replaceChild(i.childCount - 1, o));
    if (i.contentMatchAt(i.childCount).matchType(r == t.length - 1 ? n.type : t[r + 1]))
      return i.copy(i.content.append(ie.from(J5(n, t, r + 1))));
  }
}
function Q5(t, e) {
  if (e == 0)
    return t;
  let n = t.content.replaceChild(t.childCount - 1, Q5(t.lastChild, e - 1)), i = t.contentMatchAt(t.childCount).fillBefore(ie.empty, !0);
  return t.copy(n.append(i));
}
function V0(t, e, n, i, r, o) {
  let s = e < 0 ? t.firstChild : t.lastChild, a = s.content;
  return t.childCount > 1 && (o = 0), r < i - 1 && (a = V0(a, e, n, i, r + 1, o)), r >= n && (a = e < 0 ? s.contentMatchAt(0).fillBefore(a, o <= r).append(a) : a.append(s.contentMatchAt(s.childCount).fillBefore(ie.empty, !0))), t.replaceChild(e < 0 ? 0 : t.childCount - 1, s.copy(a));
}
function d2(t, e, n) {
  return e < t.openStart && (t = new be(V0(t.content, -1, e, t.openStart, 0, t.openEnd), e, t.openEnd)), n < t.openEnd && (t = new be(V0(t.content, 1, n, t.openEnd, 0, 0), t.openStart, n)), t;
}
const Z5 = {
  thead: ["table"],
  tbody: ["table"],
  tfoot: ["table"],
  caption: ["table"],
  colgroup: ["table"],
  col: ["table", "colgroup"],
  tr: ["table", "tbody"],
  td: ["table", "tbody", "tr"],
  th: ["table", "tbody", "tr"]
};
let u2 = null;
function e6() {
  return u2 || (u2 = document.implementation.createHTMLDocument("title"));
}
function qN(t) {
  let e = window.trustedTypes;
  return e ? e.createPolicy("detachedDocument", { createHTML: (n) => n }).createHTML(t) : t;
}
function GN(t) {
  let e = /^(\s*<meta [^>]*>)*/.exec(t);
  e && (t = t.slice(e[0].length));
  let n = e6().createElement("div"), i = /<([a-z][^>\s]+)/i.exec(t), r;
  if ((r = i && Z5[i[1].toLowerCase()]) && (t = r.map((o) => "<" + o + ">").join("") + t + r.map((o) => "</" + o + ">").reverse().join("")), n.innerHTML = qN(t), r)
    for (let o = 0; o < r.length; o++)
      n = n.querySelector(r[o]) || n;
  return n;
}
function KN(t) {
  let e = t.querySelectorAll(Hn ? "span:not([class]):not([style])" : "span.Apple-converted-space");
  for (let n = 0; n < e.length; n++) {
    let i = e[n];
    i.childNodes.length == 1 && i.textContent == " " && i.parentNode && i.parentNode.replaceChild(t.ownerDocument.createTextNode(" "), i);
  }
}
function YN(t, e) {
  if (!t.size)
    return t;
  let n = t.content.firstChild.type.schema, i;
  try {
    i = JSON.parse(e);
  } catch {
    return t;
  }
  let { content: r, openStart: o, openEnd: s } = t;
  for (let a = i.length - 2; a >= 0; a -= 2) {
    let l = n.nodes[i[a]];
    if (!l || l.hasRequiredAttrs())
      break;
    r = ie.from(l.create(i[a + 1], r)), o++, s++;
  }
  return new be(r, o, s);
}
const Jn = {}, Xn = {}, JN = { touchstart: !0, touchmove: !0 };
class XN {
  constructor() {
    this.shiftKey = !1, this.mouseDown = null, this.lastKeyCode = null, this.lastKeyCodeTime = 0, this.lastClick = { time: 0, x: 0, y: 0, type: "" }, this.lastSelectionOrigin = null, this.lastSelectionTime = 0, this.lastIOSEnter = 0, this.lastIOSEnterFallbackTimeout = -1, this.lastFocus = 0, this.lastTouch = 0, this.lastAndroidDelete = 0, this.composing = !1, this.compositionNode = null, this.composingTimeout = -1, this.compositionNodes = [], this.compositionEndedAt = -2e8, this.compositionID = 1, this.compositionPendingChanges = 0, this.domChangeCount = 0, this.eventHandlers = /* @__PURE__ */ Object.create(null), this.hideSelectionGuard = null;
  }
}
function QN(t) {
  for (let e in Jn) {
    let n = Jn[e];
    t.dom.addEventListener(e, t.input.eventHandlers[e] = (i) => {
      eO(t, i) && !Ay(t, i) && (t.editable || !(i.type in Xn)) && n(t, i);
    }, JN[e] ? { passive: !0 } : void 0);
  }
  Yn && t.dom.addEventListener("input", () => null), W0(t);
}
function rs(t, e) {
  t.input.lastSelectionOrigin = e, t.input.lastSelectionTime = Date.now();
}
function ZN(t) {
  t.domObserver.stop();
  for (let e in t.input.eventHandlers)
    t.dom.removeEventListener(e, t.input.eventHandlers[e]);
  clearTimeout(t.input.composingTimeout), clearTimeout(t.input.lastIOSEnterFallbackTimeout);
}
function W0(t) {
  t.someProp("handleDOMEvents", (e) => {
    for (let n in e)
      t.input.eventHandlers[n] || t.dom.addEventListener(n, t.input.eventHandlers[n] = (i) => Ay(t, i));
  });
}
function Ay(t, e) {
  return t.someProp("handleDOMEvents", (n) => {
    let i = n[e.type];
    return i ? i(t, e) || e.defaultPrevented : !1;
  });
}
function eO(t, e) {
  if (!e.bubbles)
    return !0;
  if (e.defaultPrevented)
    return !1;
  for (let n = e.target; n != t.dom; n = n.parentNode)
    if (!n || n.nodeType == 11 || n.pmViewDesc && n.pmViewDesc.stopEvent(e))
      return !1;
  return !0;
}
function tO(t, e) {
  !Ay(t, e) && Jn[e.type] && (t.editable || !(e.type in Xn)) && Jn[e.type](t, e);
}
Xn.keydown = (t, e) => {
  let n = e;
  if (t.input.shiftKey = n.keyCode == 16 || n.shiftKey, !n6(t, n) && (t.input.lastKeyCode = n.keyCode, t.input.lastKeyCodeTime = Date.now(), !(Xi && Hn && n.keyCode == 13)))
    if (t.domObserver.selectionChanged(t.domSelectionRange()) ? t.domObserver.flush() : n.keyCode != 229 && t.domObserver.forceFlush(), hl && n.keyCode == 13 && !n.ctrlKey && !n.altKey && !n.metaKey) {
      let i = Date.now();
      t.input.lastIOSEnter = i, t.input.lastIOSEnterFallbackTimeout = setTimeout(() => {
        t.input.lastIOSEnter == i && (t.someProp("handleKeyDown", (r) => r(t, Hs(13, "Enter"))), t.input.lastIOSEnter = 0);
      }, 200);
    } else t.someProp("handleKeyDown", (i) => i(t, n)) || UN(t, n) ? n.preventDefault() : rs(t, "key");
};
Xn.keyup = (t, e) => {
  e.keyCode == 16 && (t.input.shiftKey = !1);
};
Xn.keypress = (t, e) => {
  let n = e;
  if (n6(t, n) || !n.charCode || n.ctrlKey && !n.altKey || Si && n.metaKey)
    return;
  if (t.someProp("handleKeyPress", (r) => r(t, n))) {
    n.preventDefault();
    return;
  }
  let i = t.state.selection;
  if (!(i instanceof ze) || !i.$from.sameParent(i.$to)) {
    let r = String.fromCharCode(n.charCode);
    !/[\r\n]/.test(r) && !t.someProp("handleTextInput", (o) => o(t, i.$from.pos, i.$to.pos, r)) && t.dispatch(t.state.tr.insertText(r).scrollIntoView()), n.preventDefault();
  }
};
function yh(t) {
  return { left: t.clientX, top: t.clientY };
}
function nO(t, e) {
  let n = e.x - t.clientX, i = e.y - t.clientY;
  return n * n + i * i < 100;
}
function My(t, e, n, i, r) {
  if (i == -1)
    return !1;
  let o = t.state.doc.resolve(i);
  for (let s = o.depth + 1; s > 0; s--)
    if (t.someProp(e, (a) => s > o.depth ? a(t, n, o.nodeAfter, o.before(s), r, !0) : a(t, n, o.node(s), o.before(s), r, !1)))
      return !0;
  return !1;
}
function tl(t, e, n) {
  if (t.focused || t.focus(), t.state.selection.eq(e))
    return;
  let i = t.state.tr.setSelection(e);
  i.setMeta("pointer", !0), t.dispatch(i);
}
function iO(t, e) {
  if (e == -1)
    return !1;
  let n = t.state.doc.resolve(e), i = n.nodeAfter;
  return i && i.isAtom && Ie.isSelectable(i) ? (tl(t, new Ie(n)), !0) : !1;
}
function rO(t, e) {
  if (e == -1)
    return !1;
  let n = t.state.selection, i, r;
  n instanceof Ie && (i = n.node);
  let o = t.state.doc.resolve(e);
  for (let s = o.depth + 1; s > 0; s--) {
    let a = s > o.depth ? o.nodeAfter : o.node(s);
    if (Ie.isSelectable(a)) {
      i && n.$from.depth > 0 && s >= n.$from.depth && o.before(n.$from.depth + 1) == n.$from.pos ? r = o.before(n.$from.depth) : r = o.before(s);
      break;
    }
  }
  return r != null ? (tl(t, Ie.create(t.state.doc, r)), !0) : !1;
}
function oO(t, e, n, i, r) {
  return My(t, "handleClickOn", e, n, i) || t.someProp("handleClick", (o) => o(t, e, i)) || (r ? rO(t, n) : iO(t, n));
}
function sO(t, e, n, i) {
  return My(t, "handleDoubleClickOn", e, n, i) || t.someProp("handleDoubleClick", (r) => r(t, e, i));
}
function aO(t, e, n, i) {
  return My(t, "handleTripleClickOn", e, n, i) || t.someProp("handleTripleClick", (r) => r(t, e, i)) || lO(t, n, i);
}
function lO(t, e, n) {
  if (n.button != 0)
    return !1;
  let i = t.state.doc;
  if (e == -1)
    return i.inlineContent ? (tl(t, ze.create(i, 0, i.content.size)), !0) : !1;
  let r = i.resolve(e);
  for (let o = r.depth + 1; o > 0; o--) {
    let s = o > r.depth ? r.nodeAfter : r.node(o), a = r.before(o);
    if (s.inlineContent)
      tl(t, ze.create(i, a + 1, a + 1 + s.content.size));
    else if (Ie.isSelectable(s))
      tl(t, Ie.create(i, a));
    else
      continue;
    return !0;
  }
}
function Ny(t) {
  return Pu(t);
}
const t6 = Si ? "metaKey" : "ctrlKey";
Jn.mousedown = (t, e) => {
  let n = e;
  t.input.shiftKey = n.shiftKey;
  let i = Ny(t), r = Date.now(), o = "singleClick";
  r - t.input.lastClick.time < 500 && nO(n, t.input.lastClick) && !n[t6] && (t.input.lastClick.type == "singleClick" ? o = "doubleClick" : t.input.lastClick.type == "doubleClick" && (o = "tripleClick")), t.input.lastClick = { time: r, x: n.clientX, y: n.clientY, type: o };
  let s = t.posAtCoords(yh(n));
  s && (o == "singleClick" ? (t.input.mouseDown && t.input.mouseDown.done(), t.input.mouseDown = new cO(t, s, n, !!i)) : (o == "doubleClick" ? sO : aO)(t, s.pos, s.inside, n) ? n.preventDefault() : rs(t, "pointer"));
};
class cO {
  constructor(e, n, i, r) {
    this.view = e, this.pos = n, this.event = i, this.flushed = r, this.delayedSelectionSync = !1, this.mightDrag = null, this.startDoc = e.state.doc, this.selectNode = !!i[t6], this.allowDefault = i.shiftKey;
    let o, s;
    if (n.inside > -1)
      o = e.state.doc.nodeAt(n.inside), s = n.inside;
    else {
      let f = e.state.doc.resolve(n.pos);
      o = f.parent, s = f.depth ? f.before() : 0;
    }
    const a = r ? null : i.target, l = a ? e.docView.nearestDesc(a, !0) : null;
    this.target = l && l.dom.nodeType == 1 ? l.dom : null;
    let { selection: c } = e.state;
    (i.button == 0 && o.type.spec.draggable && o.type.spec.selectable !== !1 || c instanceof Ie && c.from <= s && c.to > s) && (this.mightDrag = {
      node: o,
      pos: s,
      addAttr: !!(this.target && !this.target.draggable),
      setUneditable: !!(this.target && or && !this.target.hasAttribute("contentEditable"))
    }), this.target && this.mightDrag && (this.mightDrag.addAttr || this.mightDrag.setUneditable) && (this.view.domObserver.stop(), this.mightDrag.addAttr && (this.target.draggable = !0), this.mightDrag.setUneditable && setTimeout(() => {
      this.view.input.mouseDown == this && this.target.setAttribute("contentEditable", "false");
    }, 20), this.view.domObserver.start()), e.root.addEventListener("mouseup", this.up = this.up.bind(this)), e.root.addEventListener("mousemove", this.move = this.move.bind(this)), rs(e, "pointer");
  }
  done() {
    this.view.root.removeEventListener("mouseup", this.up), this.view.root.removeEventListener("mousemove", this.move), this.mightDrag && this.target && (this.view.domObserver.stop(), this.mightDrag.addAttr && this.target.removeAttribute("draggable"), this.mightDrag.setUneditable && this.target.removeAttribute("contentEditable"), this.view.domObserver.start()), this.delayedSelectionSync && setTimeout(() => co(this.view)), this.view.input.mouseDown = null;
  }
  up(e) {
    if (this.done(), !this.view.dom.contains(e.target))
      return;
    let n = this.pos;
    this.view.state.doc != this.startDoc && (n = this.view.posAtCoords(yh(e))), this.updateAllowDefault(e), this.allowDefault || !n ? rs(this.view, "pointer") : oO(this.view, n.pos, n.inside, e, this.selectNode) ? e.preventDefault() : e.button == 0 && (this.flushed || // Safari ignores clicks on draggable elements
    Yn && this.mightDrag && !this.mightDrag.node.isAtom || // Chrome will sometimes treat a node selection as a
    // cursor, but still report that the node is selected
    // when asked through getSelection. You'll then get a
    // situation where clicking at the point where that
    // (hidden) cursor is doesn't change the selection, and
    // thus doesn't get a reaction from ProseMirror. This
    // works around that.
    Hn && !this.view.state.selection.visible && Math.min(Math.abs(n.pos - this.view.state.selection.from), Math.abs(n.pos - this.view.state.selection.to)) <= 2) ? (tl(this.view, $e.near(this.view.state.doc.resolve(n.pos))), e.preventDefault()) : rs(this.view, "pointer");
  }
  move(e) {
    this.updateAllowDefault(e), rs(this.view, "pointer"), e.buttons == 0 && this.done();
  }
  updateAllowDefault(e) {
    !this.allowDefault && (Math.abs(this.event.x - e.clientX) > 4 || Math.abs(this.event.y - e.clientY) > 4) && (this.allowDefault = !0);
  }
}
Jn.touchstart = (t) => {
  t.input.lastTouch = Date.now(), Ny(t), rs(t, "pointer");
};
Jn.touchmove = (t) => {
  t.input.lastTouch = Date.now(), rs(t, "pointer");
};
Jn.contextmenu = (t) => Ny(t);
function n6(t, e) {
  return t.composing ? !0 : Yn && Math.abs(e.timeStamp - t.input.compositionEndedAt) < 500 ? (t.input.compositionEndedAt = -2e8, !0) : !1;
}
const fO = Xi ? 5e3 : -1;
Xn.compositionstart = Xn.compositionupdate = (t) => {
  if (!t.composing) {
    t.domObserver.flush();
    let { state: e } = t, n = e.selection.$to;
    if (e.selection instanceof ze && (e.storedMarks || !n.textOffset && n.parentOffset && n.nodeBefore.marks.some((i) => i.type.spec.inclusive === !1)))
      t.markCursor = t.state.storedMarks || n.marks(), Pu(t, !0), t.markCursor = null;
    else if (Pu(t, !e.selection.empty), or && e.selection.empty && n.parentOffset && !n.textOffset && n.nodeBefore.marks.length) {
      let i = t.domSelectionRange();
      for (let r = i.focusNode, o = i.focusOffset; r && r.nodeType == 1 && o != 0; ) {
        let s = o < 0 ? r.lastChild : r.childNodes[o - 1];
        if (!s)
          break;
        if (s.nodeType == 3) {
          let a = t.domSelection();
          a && a.collapse(s, s.nodeValue.length);
          break;
        } else
          r = s, o = -1;
      }
    }
    t.input.composing = !0;
  }
  i6(t, fO);
};
Xn.compositionend = (t, e) => {
  t.composing && (t.input.composing = !1, t.input.compositionEndedAt = e.timeStamp, t.input.compositionPendingChanges = t.domObserver.pendingRecords().length ? t.input.compositionID : 0, t.input.compositionNode = null, t.input.compositionPendingChanges && Promise.resolve().then(() => t.domObserver.flush()), t.input.compositionID++, i6(t, 20));
};
function i6(t, e) {
  clearTimeout(t.input.composingTimeout), e > -1 && (t.input.composingTimeout = setTimeout(() => Pu(t), e));
}
function r6(t) {
  for (t.composing && (t.input.composing = !1, t.input.compositionEndedAt = uO()); t.input.compositionNodes.length > 0; )
    t.input.compositionNodes.pop().markParentsDirty();
}
function dO(t) {
  let e = t.domSelectionRange();
  if (!e.focusNode)
    return null;
  let n = iN(e.focusNode, e.focusOffset), i = rN(e.focusNode, e.focusOffset);
  if (n && i && n != i) {
    let r = i.pmViewDesc, o = t.domObserver.lastChangedTextNode;
    if (n == o || i == o)
      return o;
    if (!r || !r.isText(i.nodeValue))
      return i;
    if (t.input.compositionNode == i) {
      let s = n.pmViewDesc;
      if (!(!s || !s.isText(n.nodeValue)))
        return i;
    }
  }
  return n || i;
}
function uO() {
  let t = document.createEvent("Event");
  return t.initEvent("event", !0, !0), t.timeStamp;
}
function Pu(t, e = !1) {
  if (!(Xi && t.domObserver.flushingSoon >= 0)) {
    if (t.domObserver.forceFlush(), r6(t), e || t.docView && t.docView.dirty) {
      let n = Cy(t);
      return n && !n.eq(t.state.selection) ? t.dispatch(t.state.tr.setSelection(n)) : (t.markCursor || e) && !t.state.selection.empty ? t.dispatch(t.state.tr.deleteSelection()) : t.updateState(t.state), !0;
    }
    return !1;
  }
}
function hO(t, e) {
  if (!t.dom.parentNode)
    return;
  let n = t.dom.parentNode.appendChild(document.createElement("div"));
  n.appendChild(e), n.style.cssText = "position: fixed; left: -10000px; top: 10px";
  let i = getSelection(), r = document.createRange();
  r.selectNodeContents(e), t.dom.blur(), i.removeAllRanges(), i.addRange(r), setTimeout(() => {
    n.parentNode && n.parentNode.removeChild(n), t.focus();
  }, 50);
}
const Jc = oi && cs < 15 || hl && cN < 604;
Jn.copy = Xn.cut = (t, e) => {
  let n = e, i = t.state.selection, r = n.type == "cut";
  if (i.empty)
    return;
  let o = Jc ? null : n.clipboardData, s = i.content(), { dom: a, text: l } = xy(t, s);
  o ? (n.preventDefault(), o.clearData(), o.setData("text/html", a.innerHTML), o.setData("text/plain", l)) : hO(t, a), r && t.dispatch(t.state.tr.deleteSelection().scrollIntoView().setMeta("uiEvent", "cut"));
};
function pO(t) {
  return t.openStart == 0 && t.openEnd == 0 && t.content.childCount == 1 ? t.content.firstChild : null;
}
function mO(t, e) {
  if (!t.dom.parentNode)
    return;
  let n = t.input.shiftKey || t.state.selection.$from.parent.type.spec.code, i = t.dom.parentNode.appendChild(document.createElement(n ? "textarea" : "div"));
  n || (i.contentEditable = "true"), i.style.cssText = "position: fixed; left: -10000px; top: 10px", i.focus();
  let r = t.input.shiftKey && t.input.lastKeyCode != 45;
  setTimeout(() => {
    t.focus(), i.parentNode && i.parentNode.removeChild(i), n ? Xc(t, i.value, null, r, e) : Xc(t, i.textContent, i.innerHTML, r, e);
  }, 50);
}
function Xc(t, e, n, i, r) {
  let o = Y5(t, e, n, i, t.state.selection.$from);
  if (t.someProp("handlePaste", (l) => l(t, r, o || be.empty)))
    return !0;
  if (!o)
    return !1;
  let s = pO(o), a = s ? t.state.tr.replaceSelectionWith(s, i) : t.state.tr.replaceSelection(o);
  return t.dispatch(a.scrollIntoView().setMeta("paste", !0).setMeta("uiEvent", "paste")), !0;
}
function o6(t) {
  let e = t.getData("text/plain") || t.getData("Text");
  if (e)
    return e;
  let n = t.getData("text/uri-list");
  return n ? n.replace(/\r?\n/g, " ") : "";
}
Xn.paste = (t, e) => {
  let n = e;
  if (t.composing && !Xi)
    return;
  let i = Jc ? null : n.clipboardData, r = t.input.shiftKey && t.input.lastKeyCode != 45;
  i && Xc(t, o6(i), i.getData("text/html"), r, n) ? n.preventDefault() : mO(t, n);
};
class s6 {
  constructor(e, n, i) {
    this.slice = e, this.move = n, this.node = i;
  }
}
const a6 = Si ? "altKey" : "ctrlKey";
Jn.dragstart = (t, e) => {
  let n = e, i = t.input.mouseDown;
  if (i && i.done(), !n.dataTransfer)
    return;
  let r = t.state.selection, o = r.empty ? null : t.posAtCoords(yh(n)), s;
  if (!(o && o.pos >= r.from && o.pos <= (r instanceof Ie ? r.to - 1 : r.to))) {
    if (i && i.mightDrag)
      s = Ie.create(t.state.doc, i.mightDrag.pos);
    else if (n.target && n.target.nodeType == 1) {
      let d = t.docView.nearestDesc(n.target, !0);
      d && d.node.type.spec.draggable && d != t.docView && (s = Ie.create(t.state.doc, d.posBefore));
    }
  }
  let a = (s || t.state.selection).content(), { dom: l, text: c, slice: f } = xy(t, a);
  (!n.dataTransfer.files.length || !Hn || I5 > 120) && n.dataTransfer.clearData(), n.dataTransfer.setData(Jc ? "Text" : "text/html", l.innerHTML), n.dataTransfer.effectAllowed = "copyMove", Jc || n.dataTransfer.setData("text/plain", c), t.dragging = new s6(f, !n[a6], s);
};
Jn.dragend = (t) => {
  let e = t.dragging;
  window.setTimeout(() => {
    t.dragging == e && (t.dragging = null);
  }, 50);
};
Xn.dragover = Xn.dragenter = (t, e) => e.preventDefault();
Xn.drop = (t, e) => {
  let n = e, i = t.dragging;
  if (t.dragging = null, !n.dataTransfer)
    return;
  let r = t.posAtCoords(yh(n));
  if (!r)
    return;
  let o = t.state.doc.resolve(r.pos), s = i && i.slice;
  s ? t.someProp("transformPasted", (p) => {
    s = p(s, t);
  }) : s = Y5(t, o6(n.dataTransfer), Jc ? null : n.dataTransfer.getData("text/html"), !1, o);
  let a = !!(i && !n[a6]);
  if (t.someProp("handleDrop", (p) => p(t, n, s || be.empty, a))) {
    n.preventDefault();
    return;
  }
  if (!s)
    return;
  n.preventDefault();
  let l = s ? T5(t.state.doc, o.pos, s) : o.pos;
  l == null && (l = o.pos);
  let c = t.state.tr;
  if (a) {
    let { node: p } = i;
    p ? p.replace(c) : c.deleteSelection();
  }
  let f = c.mapping.map(l), d = s.openStart == 0 && s.openEnd == 0 && s.content.childCount == 1, u = c.doc;
  if (d ? c.replaceRangeWith(f, f, s.content.firstChild) : c.replaceRange(f, f, s), c.doc.eq(u))
    return;
  let h = c.doc.resolve(f);
  if (d && Ie.isSelectable(s.content.firstChild) && h.nodeAfter && h.nodeAfter.sameMarkup(s.content.firstChild))
    c.setSelection(new Ie(h));
  else {
    let p = c.mapping.map(l);
    c.mapping.maps[c.mapping.maps.length - 1].forEach((m, v, y, C) => p = C), c.setSelection(Sy(t, h, c.doc.resolve(p)));
  }
  t.focus(), t.dispatch(c.setMeta("uiEvent", "drop"));
};
Jn.focus = (t) => {
  t.input.lastFocus = Date.now(), t.focused || (t.domObserver.stop(), t.dom.classList.add("ProseMirror-focused"), t.domObserver.start(), t.focused = !0, setTimeout(() => {
    t.docView && t.hasFocus() && !t.domObserver.currentSelection.eq(t.domSelectionRange()) && co(t);
  }, 20));
};
Jn.blur = (t, e) => {
  let n = e;
  t.focused && (t.domObserver.stop(), t.dom.classList.remove("ProseMirror-focused"), t.domObserver.start(), n.relatedTarget && t.dom.contains(n.relatedTarget) && t.domObserver.currentSelection.clear(), t.focused = !1);
};
Jn.beforeinput = (t, e) => {
  if (Hn && Xi && e.inputType == "deleteContentBackward") {
    t.domObserver.flushSoon();
    let { domChangeCount: i } = t.input;
    setTimeout(() => {
      if (t.input.domChangeCount != i || (t.dom.blur(), t.focus(), t.someProp("handleKeyDown", (o) => o(t, Hs(8, "Backspace")))))
        return;
      let { $cursor: r } = t.state.selection;
      r && r.pos > 0 && t.dispatch(t.state.tr.delete(r.pos - 1, r.pos).scrollIntoView());
    }, 50);
  }
};
for (let t in Xn)
  Jn[t] = Xn[t];
function Qc(t, e) {
  if (t == e)
    return !0;
  for (let n in t)
    if (t[n] !== e[n])
      return !1;
  for (let n in e)
    if (!(n in t))
      return !1;
  return !0;
}
class Fu {
  constructor(e, n) {
    this.toDOM = e, this.spec = n || Zs, this.side = this.spec.side || 0;
  }
  map(e, n, i, r) {
    let { pos: o, deleted: s } = e.mapResult(n.from + r, this.side < 0 ? -1 : 1);
    return s ? null : new Qt(o - i, o - i, this);
  }
  valid() {
    return !0;
  }
  eq(e) {
    return this == e || e instanceof Fu && (this.spec.key && this.spec.key == e.spec.key || this.toDOM == e.toDOM && Qc(this.spec, e.spec));
  }
  destroy(e) {
    this.spec.destroy && this.spec.destroy(e);
  }
}
class ds {
  constructor(e, n) {
    this.attrs = e, this.spec = n || Zs;
  }
  map(e, n, i, r) {
    let o = e.map(n.from + r, this.spec.inclusiveStart ? -1 : 1) - i, s = e.map(n.to + r, this.spec.inclusiveEnd ? 1 : -1) - i;
    return o >= s ? null : new Qt(o, s, this);
  }
  valid(e, n) {
    return n.from < n.to;
  }
  eq(e) {
    return this == e || e instanceof ds && Qc(this.attrs, e.attrs) && Qc(this.spec, e.spec);
  }
  static is(e) {
    return e.type instanceof ds;
  }
  destroy() {
  }
}
class Oy {
  constructor(e, n) {
    this.attrs = e, this.spec = n || Zs;
  }
  map(e, n, i, r) {
    let o = e.mapResult(n.from + r, 1);
    if (o.deleted)
      return null;
    let s = e.mapResult(n.to + r, -1);
    return s.deleted || s.pos <= o.pos ? null : new Qt(o.pos - i, s.pos - i, this);
  }
  valid(e, n) {
    let { index: i, offset: r } = e.content.findIndex(n.from), o;
    return r == n.from && !(o = e.child(i)).isText && r + o.nodeSize == n.to;
  }
  eq(e) {
    return this == e || e instanceof Oy && Qc(this.attrs, e.attrs) && Qc(this.spec, e.spec);
  }
  destroy() {
  }
}
class Qt {
  /**
  @internal
  */
  constructor(e, n, i) {
    this.from = e, this.to = n, this.type = i;
  }
  /**
  @internal
  */
  copy(e, n) {
    return new Qt(e, n, this.type);
  }
  /**
  @internal
  */
  eq(e, n = 0) {
    return this.type.eq(e.type) && this.from + n == e.from && this.to + n == e.to;
  }
  /**
  @internal
  */
  map(e, n, i) {
    return this.type.map(e, this, n, i);
  }
  /**
  Creates a widget decoration, which is a DOM node that's shown in
  the document at the given position. It is recommended that you
  delay rendering the widget by passing a function that will be
  called when the widget is actually drawn in a view, but you can
  also directly pass a DOM node. `getPos` can be used to find the
  widget's current document position.
  */
  static widget(e, n, i) {
    return new Qt(e, e, new Fu(n, i));
  }
  /**
  Creates an inline decoration, which adds the given attributes to
  each inline node between `from` and `to`.
  */
  static inline(e, n, i, r) {
    return new Qt(e, n, new ds(i, r));
  }
  /**
  Creates a node decoration. `from` and `to` should point precisely
  before and after a node in the document. That node, and only that
  node, will receive the given attributes.
  */
  static node(e, n, i, r) {
    return new Qt(e, n, new Oy(i, r));
  }
  /**
  The spec provided when creating this decoration. Can be useful
  if you've stored extra information in that object.
  */
  get spec() {
    return this.type.spec;
  }
  /**
  @internal
  */
  get inline() {
    return this.type instanceof ds;
  }
  /**
  @internal
  */
  get widget() {
    return this.type instanceof Fu;
  }
}
const $a = [], Zs = {};
class Tt {
  /**
  @internal
  */
  constructor(e, n) {
    this.local = e.length ? e : $a, this.children = n.length ? n : $a;
  }
  /**
  Create a set of decorations, using the structure of the given
  document. This will consume (modify) the `decorations` array, so
  you must make a copy if you want need to preserve that.
  */
  static create(e, n) {
    return n.length ? Bu(n, e, 0, Zs) : Dn;
  }
  /**
  Find all decorations in this set which touch the given range
  (including decorations that start or end directly at the
  boundaries) and match the given predicate on their spec. When
  `start` and `end` are omitted, all decorations in the set are
  considered. When `predicate` isn't given, all decorations are
  assumed to match.
  */
  find(e, n, i) {
    let r = [];
    return this.findInner(e ?? 0, n ?? 1e9, r, 0, i), r;
  }
  findInner(e, n, i, r, o) {
    for (let s = 0; s < this.local.length; s++) {
      let a = this.local[s];
      a.from <= n && a.to >= e && (!o || o(a.spec)) && i.push(a.copy(a.from + r, a.to + r));
    }
    for (let s = 0; s < this.children.length; s += 3)
      if (this.children[s] < n && this.children[s + 1] > e) {
        let a = this.children[s] + 1;
        this.children[s + 2].findInner(e - a, n - a, i, r + a, o);
      }
  }
  /**
  Map the set of decorations in response to a change in the
  document.
  */
  map(e, n, i) {
    return this == Dn || e.maps.length == 0 ? this : this.mapInner(e, n, 0, 0, i || Zs);
  }
  /**
  @internal
  */
  mapInner(e, n, i, r, o) {
    let s;
    for (let a = 0; a < this.local.length; a++) {
      let l = this.local[a].map(e, i, r);
      l && l.type.valid(n, l) ? (s || (s = [])).push(l) : o.onRemove && o.onRemove(this.local[a].spec);
    }
    return this.children.length ? gO(this.children, s || [], e, n, i, r, o) : s ? new Tt(s.sort(ea), $a) : Dn;
  }
  /**
  Add the given array of decorations to the ones in the set,
  producing a new set. Consumes the `decorations` array. Needs
  access to the current document to create the appropriate tree
  structure.
  */
  add(e, n) {
    return n.length ? this == Dn ? Tt.create(e, n) : this.addInner(e, n, 0) : this;
  }
  addInner(e, n, i) {
    let r, o = 0;
    e.forEach((a, l) => {
      let c = l + i, f;
      if (f = c6(n, a, c)) {
        for (r || (r = this.children.slice()); o < r.length && r[o] < l; )
          o += 3;
        r[o] == l ? r[o + 2] = r[o + 2].addInner(a, f, c + 1) : r.splice(o, 0, l, l + a.nodeSize, Bu(f, a, c + 1, Zs)), o += 3;
      }
    });
    let s = l6(o ? f6(n) : n, -i);
    for (let a = 0; a < s.length; a++)
      s[a].type.valid(e, s[a]) || s.splice(a--, 1);
    return new Tt(s.length ? this.local.concat(s).sort(ea) : this.local, r || this.children);
  }
  /**
  Create a new set that contains the decorations in this set, minus
  the ones in the given array.
  */
  remove(e) {
    return e.length == 0 || this == Dn ? this : this.removeInner(e, 0);
  }
  removeInner(e, n) {
    let i = this.children, r = this.local;
    for (let o = 0; o < i.length; o += 3) {
      let s, a = i[o] + n, l = i[o + 1] + n;
      for (let f = 0, d; f < e.length; f++)
        (d = e[f]) && d.from > a && d.to < l && (e[f] = null, (s || (s = [])).push(d));
      if (!s)
        continue;
      i == this.children && (i = this.children.slice());
      let c = i[o + 2].removeInner(s, a + 1);
      c != Dn ? i[o + 2] = c : (i.splice(o, 3), o -= 3);
    }
    if (r.length) {
      for (let o = 0, s; o < e.length; o++)
        if (s = e[o])
          for (let a = 0; a < r.length; a++)
            r[a].eq(s, n) && (r == this.local && (r = this.local.slice()), r.splice(a--, 1));
    }
    return i == this.children && r == this.local ? this : r.length || i.length ? new Tt(r, i) : Dn;
  }
  forChild(e, n) {
    if (this == Dn)
      return this;
    if (n.isLeaf)
      return Tt.empty;
    let i, r;
    for (let a = 0; a < this.children.length; a += 3)
      if (this.children[a] >= e) {
        this.children[a] == e && (i = this.children[a + 2]);
        break;
      }
    let o = e + 1, s = o + n.content.size;
    for (let a = 0; a < this.local.length; a++) {
      let l = this.local[a];
      if (l.from < s && l.to > o && l.type instanceof ds) {
        let c = Math.max(o, l.from) - o, f = Math.min(s, l.to) - o;
        c < f && (r || (r = [])).push(l.copy(c, f));
      }
    }
    if (r) {
      let a = new Tt(r.sort(ea), $a);
      return i ? new Qo([a, i]) : a;
    }
    return i || Dn;
  }
  /**
  @internal
  */
  eq(e) {
    if (this == e)
      return !0;
    if (!(e instanceof Tt) || this.local.length != e.local.length || this.children.length != e.children.length)
      return !1;
    for (let n = 0; n < this.local.length; n++)
      if (!this.local[n].eq(e.local[n]))
        return !1;
    for (let n = 0; n < this.children.length; n += 3)
      if (this.children[n] != e.children[n] || this.children[n + 1] != e.children[n + 1] || !this.children[n + 2].eq(e.children[n + 2]))
        return !1;
    return !0;
  }
  /**
  @internal
  */
  locals(e) {
    return Ry(this.localsInner(e));
  }
  /**
  @internal
  */
  localsInner(e) {
    if (this == Dn)
      return $a;
    if (e.inlineContent || !this.local.some(ds.is))
      return this.local;
    let n = [];
    for (let i = 0; i < this.local.length; i++)
      this.local[i].type instanceof ds || n.push(this.local[i]);
    return n;
  }
  forEachSet(e) {
    e(this);
  }
}
Tt.empty = new Tt([], []);
Tt.removeOverlap = Ry;
const Dn = Tt.empty;
class Qo {
  constructor(e) {
    this.members = e;
  }
  map(e, n) {
    const i = this.members.map((r) => r.map(e, n, Zs));
    return Qo.from(i);
  }
  forChild(e, n) {
    if (n.isLeaf)
      return Tt.empty;
    let i = [];
    for (let r = 0; r < this.members.length; r++) {
      let o = this.members[r].forChild(e, n);
      o != Dn && (o instanceof Qo ? i = i.concat(o.members) : i.push(o));
    }
    return Qo.from(i);
  }
  eq(e) {
    if (!(e instanceof Qo) || e.members.length != this.members.length)
      return !1;
    for (let n = 0; n < this.members.length; n++)
      if (!this.members[n].eq(e.members[n]))
        return !1;
    return !0;
  }
  locals(e) {
    let n, i = !0;
    for (let r = 0; r < this.members.length; r++) {
      let o = this.members[r].localsInner(e);
      if (o.length)
        if (!n)
          n = o;
        else {
          i && (n = n.slice(), i = !1);
          for (let s = 0; s < o.length; s++)
            n.push(o[s]);
        }
    }
    return n ? Ry(i ? n : n.sort(ea)) : $a;
  }
  // Create a group for the given array of decoration sets, or return
  // a single set when possible.
  static from(e) {
    switch (e.length) {
      case 0:
        return Dn;
      case 1:
        return e[0];
      default:
        return new Qo(e.every((n) => n instanceof Tt) ? e : e.reduce((n, i) => n.concat(i instanceof Tt ? i : i.members), []));
    }
  }
  forEachSet(e) {
    for (let n = 0; n < this.members.length; n++)
      this.members[n].forEachSet(e);
  }
}
function gO(t, e, n, i, r, o, s) {
  let a = t.slice();
  for (let c = 0, f = o; c < n.maps.length; c++) {
    let d = 0;
    n.maps[c].forEach((u, h, p, m) => {
      let v = m - p - (h - u);
      for (let y = 0; y < a.length; y += 3) {
        let C = a[y + 1];
        if (C < 0 || u > C + f - d)
          continue;
        let k = a[y] + f - d;
        h >= k ? a[y + 1] = u <= k ? -2 : -1 : u >= f && v && (a[y] += v, a[y + 1] += v);
      }
      d += v;
    }), f = n.maps[c].map(f, -1);
  }
  let l = !1;
  for (let c = 0; c < a.length; c += 3)
    if (a[c + 1] < 0) {
      if (a[c + 1] == -2) {
        l = !0, a[c + 1] = -1;
        continue;
      }
      let f = n.map(t[c] + o), d = f - r;
      if (d < 0 || d >= i.content.size) {
        l = !0;
        continue;
      }
      let u = n.map(t[c + 1] + o, -1), h = u - r, { index: p, offset: m } = i.content.findIndex(d), v = i.maybeChild(p);
      if (v && m == d && m + v.nodeSize == h) {
        let y = a[c + 2].mapInner(n, v, f + 1, t[c] + o + 1, s);
        y != Dn ? (a[c] = d, a[c + 1] = h, a[c + 2] = y) : (a[c + 1] = -2, l = !0);
      } else
        l = !0;
    }
  if (l) {
    let c = yO(a, t, e, n, r, o, s), f = Bu(c, i, 0, s);
    e = f.local;
    for (let d = 0; d < a.length; d += 3)
      a[d + 1] < 0 && (a.splice(d, 3), d -= 3);
    for (let d = 0, u = 0; d < f.children.length; d += 3) {
      let h = f.children[d];
      for (; u < a.length && a[u] < h; )
        u += 3;
      a.splice(u, 0, f.children[d], f.children[d + 1], f.children[d + 2]);
    }
  }
  return new Tt(e.sort(ea), a);
}
function l6(t, e) {
  if (!e || !t.length)
    return t;
  let n = [];
  for (let i = 0; i < t.length; i++) {
    let r = t[i];
    n.push(new Qt(r.from + e, r.to + e, r.type));
  }
  return n;
}
function yO(t, e, n, i, r, o, s) {
  function a(l, c) {
    for (let f = 0; f < l.local.length; f++) {
      let d = l.local[f].map(i, r, c);
      d ? n.push(d) : s.onRemove && s.onRemove(l.local[f].spec);
    }
    for (let f = 0; f < l.children.length; f += 3)
      a(l.children[f + 2], l.children[f] + c + 1);
  }
  for (let l = 0; l < t.length; l += 3)
    t[l + 1] == -1 && a(t[l + 2], e[l] + o + 1);
  return n;
}
function c6(t, e, n) {
  if (e.isLeaf)
    return null;
  let i = n + e.nodeSize, r = null;
  for (let o = 0, s; o < t.length; o++)
    (s = t[o]) && s.from > n && s.to < i && ((r || (r = [])).push(s), t[o] = null);
  return r;
}
function f6(t) {
  let e = [];
  for (let n = 0; n < t.length; n++)
    t[n] != null && e.push(t[n]);
  return e;
}
function Bu(t, e, n, i) {
  let r = [], o = !1;
  e.forEach((a, l) => {
    let c = c6(t, a, l + n);
    if (c) {
      o = !0;
      let f = Bu(c, a, n + l + 1, i);
      f != Dn && r.push(l, l + a.nodeSize, f);
    }
  });
  let s = l6(o ? f6(t) : t, -n).sort(ea);
  for (let a = 0; a < s.length; a++)
    s[a].type.valid(e, s[a]) || (i.onRemove && i.onRemove(s[a].spec), s.splice(a--, 1));
  return s.length || r.length ? new Tt(s, r) : Dn;
}
function ea(t, e) {
  return t.from - e.from || t.to - e.to;
}
function Ry(t) {
  let e = t;
  for (let n = 0; n < e.length - 1; n++) {
    let i = e[n];
    if (i.from != i.to)
      for (let r = n + 1; r < e.length; r++) {
        let o = e[r];
        if (o.from == i.from) {
          o.to != i.to && (e == t && (e = t.slice()), e[r] = o.copy(o.from, i.to), h2(e, r + 1, o.copy(i.to, o.to)));
          continue;
        } else {
          o.from < i.to && (e == t && (e = t.slice()), e[n] = i.copy(i.from, o.from), h2(e, r, i.copy(o.from, i.to)));
          break;
        }
      }
  }
  return e;
}
function h2(t, e, n) {
  for (; e < t.length && ea(n, t[e]) > 0; )
    e++;
  t.splice(e, 0, n);
}
function zp(t) {
  let e = [];
  return t.someProp("decorations", (n) => {
    let i = n(t.state);
    i && i != Dn && e.push(i);
  }), t.cursorWrapper && e.push(Tt.create(t.state.doc, [t.cursorWrapper.deco])), Qo.from(e);
}
const vO = {
  childList: !0,
  characterData: !0,
  characterDataOldValue: !0,
  attributes: !0,
  attributeOldValue: !0,
  subtree: !0
}, bO = oi && cs <= 11;
class kO {
  constructor() {
    this.anchorNode = null, this.anchorOffset = 0, this.focusNode = null, this.focusOffset = 0;
  }
  set(e) {
    this.anchorNode = e.anchorNode, this.anchorOffset = e.anchorOffset, this.focusNode = e.focusNode, this.focusOffset = e.focusOffset;
  }
  clear() {
    this.anchorNode = this.focusNode = null;
  }
  eq(e) {
    return e.anchorNode == this.anchorNode && e.anchorOffset == this.anchorOffset && e.focusNode == this.focusNode && e.focusOffset == this.focusOffset;
  }
}
class wO {
  constructor(e, n) {
    this.view = e, this.handleDOMChange = n, this.queue = [], this.flushingSoon = -1, this.observer = null, this.currentSelection = new kO(), this.onCharData = null, this.suppressingSelectionUpdates = !1, this.lastChangedTextNode = null, this.observer = window.MutationObserver && new window.MutationObserver((i) => {
      for (let r = 0; r < i.length; r++)
        this.queue.push(i[r]);
      oi && cs <= 11 && i.some((r) => r.type == "childList" && r.removedNodes.length || r.type == "characterData" && r.oldValue.length > r.target.nodeValue.length) ? this.flushSoon() : this.flush();
    }), bO && (this.onCharData = (i) => {
      this.queue.push({ target: i.target, type: "characterData", oldValue: i.prevValue }), this.flushSoon();
    }), this.onSelectionChange = this.onSelectionChange.bind(this);
  }
  flushSoon() {
    this.flushingSoon < 0 && (this.flushingSoon = window.setTimeout(() => {
      this.flushingSoon = -1, this.flush();
    }, 20));
  }
  forceFlush() {
    this.flushingSoon > -1 && (window.clearTimeout(this.flushingSoon), this.flushingSoon = -1, this.flush());
  }
  start() {
    this.observer && (this.observer.takeRecords(), this.observer.observe(this.view.dom, vO)), this.onCharData && this.view.dom.addEventListener("DOMCharacterDataModified", this.onCharData), this.connectSelection();
  }
  stop() {
    if (this.observer) {
      let e = this.observer.takeRecords();
      if (e.length) {
        for (let n = 0; n < e.length; n++)
          this.queue.push(e[n]);
        window.setTimeout(() => this.flush(), 20);
      }
      this.observer.disconnect();
    }
    this.onCharData && this.view.dom.removeEventListener("DOMCharacterDataModified", this.onCharData), this.disconnectSelection();
  }
  connectSelection() {
    this.view.dom.ownerDocument.addEventListener("selectionchange", this.onSelectionChange);
  }
  disconnectSelection() {
    this.view.dom.ownerDocument.removeEventListener("selectionchange", this.onSelectionChange);
  }
  suppressSelectionUpdates() {
    this.suppressingSelectionUpdates = !0, setTimeout(() => this.suppressingSelectionUpdates = !1, 50);
  }
  onSelectionChange() {
    if (o2(this.view)) {
      if (this.suppressingSelectionUpdates)
        return co(this.view);
      if (oi && cs <= 11 && !this.view.state.selection.empty) {
        let e = this.view.domSelectionRange();
        if (e.focusNode && sa(e.focusNode, e.focusOffset, e.anchorNode, e.anchorOffset))
          return this.flushSoon();
      }
      this.flush();
    }
  }
  setCurSelection() {
    this.currentSelection.set(this.view.domSelectionRange());
  }
  ignoreSelectionChange(e) {
    if (!e.focusNode)
      return !0;
    let n = /* @__PURE__ */ new Set(), i;
    for (let o = e.focusNode; o; o = Yc(o))
      n.add(o);
    for (let o = e.anchorNode; o; o = Yc(o))
      if (n.has(o)) {
        i = o;
        break;
      }
    let r = i && this.view.docView.nearestDesc(i);
    if (r && r.ignoreMutation({
      type: "selection",
      target: i.nodeType == 3 ? i.parentNode : i
    }))
      return this.setCurSelection(), !0;
  }
  pendingRecords() {
    if (this.observer)
      for (let e of this.observer.takeRecords())
        this.queue.push(e);
    return this.queue;
  }
  selectionChanged(e) {
    return !this.suppressingSelectionUpdates && !this.currentSelection.eq(e) && o2(this.view) && !this.ignoreSelectionChange(e);
  }
  flush() {
    let { view: e } = this;
    if (!e.docView || this.flushingSoon > -1)
      return;
    let n = this.pendingRecords();
    n.length && (this.queue = []);
    let i = e.domSelectionRange(), r = this.selectionChanged(i), o = -1, s = -1, a = !1, l = [];
    if (e.editable)
      for (let f = 0; f < n.length; f++) {
        let d = this.registerMutation(n[f], l);
        d && (o = o < 0 ? d.from : Math.min(d.from, o), s = s < 0 ? d.to : Math.max(d.to, s), d.typeOver && (a = !0));
      }
    if (or && l.length) {
      let f = l.filter((d) => d.nodeName == "BR");
      if (f.length == 2) {
        let [d, u] = f;
        d.parentNode && d.parentNode.parentNode == u.parentNode ? u.remove() : d.remove();
      } else {
        let { focusNode: d } = this.currentSelection;
        for (let u of f) {
          let h = u.parentNode;
          h && h.nodeName == "LI" && (!d || TO(e, d) != h) && u.remove();
        }
      }
    }
    let c = null;
    o < 0 && r && e.input.lastFocus > Date.now() - 200 && Math.max(e.input.lastTouch, e.input.lastClick.time) < Date.now() - 300 && mh(i) && (c = Cy(e)) && c.eq($e.near(e.state.doc.resolve(0), 1)) ? (e.input.lastFocus = 0, co(e), this.currentSelection.set(i), e.scrollToSelection()) : (o > -1 || r) && (o > -1 && (e.docView.markDirty(o, s), _O(e)), this.handleDOMChange(o, s, a, l), e.docView && e.docView.dirty ? e.updateState(e.state) : this.currentSelection.eq(i) || co(e), this.currentSelection.set(i));
  }
  registerMutation(e, n) {
    if (n.indexOf(e.target) > -1)
      return null;
    let i = this.view.docView.nearestDesc(e.target);
    if (e.type == "attributes" && (i == this.view.docView || e.attributeName == "contenteditable" || // Firefox sometimes fires spurious events for null/empty styles
    e.attributeName == "style" && !e.oldValue && !e.target.getAttribute("style")) || !i || i.ignoreMutation(e))
      return null;
    if (e.type == "childList") {
      for (let f = 0; f < e.addedNodes.length; f++) {
        let d = e.addedNodes[f];
        n.push(d), d.nodeType == 3 && (this.lastChangedTextNode = d);
      }
      if (i.contentDOM && i.contentDOM != i.dom && !i.contentDOM.contains(e.target))
        return { from: i.posBefore, to: i.posAfter };
      let r = e.previousSibling, o = e.nextSibling;
      if (oi && cs <= 11 && e.addedNodes.length)
        for (let f = 0; f < e.addedNodes.length; f++) {
          let { previousSibling: d, nextSibling: u } = e.addedNodes[f];
          (!d || Array.prototype.indexOf.call(e.addedNodes, d) < 0) && (r = d), (!u || Array.prototype.indexOf.call(e.addedNodes, u) < 0) && (o = u);
        }
      let s = r && r.parentNode == e.target ? On(r) + 1 : 0, a = i.localPosFromDOM(e.target, s, -1), l = o && o.parentNode == e.target ? On(o) : e.target.childNodes.length, c = i.localPosFromDOM(e.target, l, 1);
      return { from: a, to: c };
    } else return e.type == "attributes" ? { from: i.posAtStart - i.border, to: i.posAtEnd + i.border } : (this.lastChangedTextNode = e.target, {
      from: i.posAtStart,
      to: i.posAtEnd,
      // An event was generated for a text change that didn't change
      // any text. Mark the dom change to fall back to assuming the
      // selection was typed over with an identical value if it can't
      // find another change.
      typeOver: e.target.nodeValue == e.oldValue
    });
  }
}
let p2 = /* @__PURE__ */ new WeakMap(), m2 = !1;
function _O(t) {
  if (!p2.has(t) && (p2.set(t, null), ["normal", "nowrap", "pre-line"].indexOf(getComputedStyle(t.dom).whiteSpace) !== -1)) {
    if (t.requiresGeckoHackNode = or, m2)
      return;
    console.warn("ProseMirror expects the CSS white-space property to be set, preferably to 'pre-wrap'. It is recommended to load style/prosemirror.css from the prosemirror-view package."), m2 = !0;
  }
}
function g2(t, e) {
  let n = e.startContainer, i = e.startOffset, r = e.endContainer, o = e.endOffset, s = t.domAtPos(t.state.selection.anchor);
  return sa(s.node, s.offset, r, o) && ([n, i, r, o] = [r, o, n, i]), { anchorNode: n, anchorOffset: i, focusNode: r, focusOffset: o };
}
function EO(t, e) {
  if (e.getComposedRanges) {
    let r = e.getComposedRanges(t.root)[0];
    if (r)
      return g2(t, r);
  }
  let n;
  function i(r) {
    r.preventDefault(), r.stopImmediatePropagation(), n = r.getTargetRanges()[0];
  }
  return t.dom.addEventListener("beforeinput", i, !0), document.execCommand("indent"), t.dom.removeEventListener("beforeinput", i, !0), n ? g2(t, n) : null;
}
function TO(t, e) {
  for (let n = e.parentNode; n && n != t.dom; n = n.parentNode) {
    let i = t.docView.nearestDesc(n, !0);
    if (i && i.node.isBlock)
      return n;
  }
  return null;
}
function CO(t, e, n) {
  let { node: i, fromOffset: r, toOffset: o, from: s, to: a } = t.docView.parseRange(e, n), l = t.domSelectionRange(), c, f = l.anchorNode;
  if (f && t.dom.contains(f.nodeType == 1 ? f : f.parentNode) && (c = [{ node: f, offset: l.anchorOffset }], mh(l) || c.push({ node: l.focusNode, offset: l.focusOffset })), Hn && t.input.lastKeyCode === 8)
    for (let v = o; v > r; v--) {
      let y = i.childNodes[v - 1], C = y.pmViewDesc;
      if (y.nodeName == "BR" && !C) {
        o = v;
        break;
      }
      if (!C || C.size)
        break;
    }
  let d = t.state.doc, u = t.someProp("domParser") || Xa.fromSchema(t.state.schema), h = d.resolve(s), p = null, m = u.parse(i, {
    topNode: h.parent,
    topMatch: h.parent.contentMatchAt(h.index()),
    topOpen: !0,
    from: r,
    to: o,
    preserveWhitespace: h.parent.type.whitespace == "pre" ? "full" : !0,
    findPositions: c,
    ruleFromNode: SO,
    context: h
  });
  if (c && c[0].pos != null) {
    let v = c[0].pos, y = c[1] && c[1].pos;
    y == null && (y = v), p = { anchor: v + s, head: y + s };
  }
  return { doc: m, sel: p, from: s, to: a };
}
function SO(t) {
  let e = t.pmViewDesc;
  if (e)
    return e.parseRule();
  if (t.nodeName == "BR" && t.parentNode) {
    if (Yn && /^(ul|ol)$/i.test(t.parentNode.nodeName)) {
      let n = document.createElement("div");
      return n.appendChild(document.createElement("li")), { skip: n };
    } else if (t.parentNode.lastChild == t || Yn && /^(tr|table)$/i.test(t.parentNode.nodeName))
      return { ignore: !0 };
  } else if (t.nodeName == "IMG" && t.getAttribute("mark-placeholder"))
    return { ignore: !0 };
  return null;
}
const xO = /^(a|abbr|acronym|b|bd[io]|big|br|button|cite|code|data(list)?|del|dfn|em|i|ins|kbd|label|map|mark|meter|output|q|ruby|s|samp|small|span|strong|su[bp]|time|u|tt|var)$/i;
function AO(t, e, n, i, r) {
  let o = t.input.compositionPendingChanges || (t.composing ? t.input.compositionID : 0);
  if (t.input.compositionPendingChanges = 0, e < 0) {
    let R = t.input.lastSelectionTime > Date.now() - 50 ? t.input.lastSelectionOrigin : null, A = Cy(t, R);
    if (A && !t.state.selection.eq(A)) {
      if (Hn && Xi && t.input.lastKeyCode === 13 && Date.now() - 100 < t.input.lastKeyCodeTime && t.someProp("handleKeyDown", (B) => B(t, Hs(13, "Enter"))))
        return;
      let O = t.state.tr.setSelection(A);
      R == "pointer" ? O.setMeta("pointer", !0) : R == "key" && O.scrollIntoView(), o && O.setMeta("composition", o), t.dispatch(O);
    }
    return;
  }
  let s = t.state.doc.resolve(e), a = s.sharedDepth(n);
  e = s.before(a + 1), n = t.state.doc.resolve(n).after(a + 1);
  let l = t.state.selection, c = CO(t, e, n), f = t.state.doc, d = f.slice(c.from, c.to), u, h;
  t.input.lastKeyCode === 8 && Date.now() - 100 < t.input.lastKeyCodeTime ? (u = t.state.selection.to, h = "end") : (u = t.state.selection.from, h = "start"), t.input.lastKeyCode = null;
  let p = OO(d.content, c.doc.content, c.from, u, h);
  if (p && t.input.domChangeCount++, (hl && t.input.lastIOSEnter > Date.now() - 225 || Xi) && r.some((R) => R.nodeType == 1 && !xO.test(R.nodeName)) && (!p || p.endA >= p.endB) && t.someProp("handleKeyDown", (R) => R(t, Hs(13, "Enter")))) {
    t.input.lastIOSEnter = 0;
    return;
  }
  if (!p)
    if (i && l instanceof ze && !l.empty && l.$head.sameParent(l.$anchor) && !t.composing && !(c.sel && c.sel.anchor != c.sel.head))
      p = { start: l.from, endA: l.to, endB: l.to };
    else {
      if (c.sel) {
        let R = y2(t, t.state.doc, c.sel);
        if (R && !R.eq(t.state.selection)) {
          let A = t.state.tr.setSelection(R);
          o && A.setMeta("composition", o), t.dispatch(A);
        }
      }
      return;
    }
  t.state.selection.from < t.state.selection.to && p.start == p.endB && t.state.selection instanceof ze && (p.start > t.state.selection.from && p.start <= t.state.selection.from + 2 && t.state.selection.from >= c.from ? p.start = t.state.selection.from : p.endA < t.state.selection.to && p.endA >= t.state.selection.to - 2 && t.state.selection.to <= c.to && (p.endB += t.state.selection.to - p.endA, p.endA = t.state.selection.to)), oi && cs <= 11 && p.endB == p.start + 1 && p.endA == p.start && p.start > c.from && c.doc.textBetween(p.start - c.from - 1, p.start - c.from + 1) == "  " && (p.start--, p.endA--, p.endB--);
  let m = c.doc.resolveNoCache(p.start - c.from), v = c.doc.resolveNoCache(p.endB - c.from), y = f.resolve(p.start), C = m.sameParent(v) && m.parent.inlineContent && y.end() >= p.endA, k;
  if ((hl && t.input.lastIOSEnter > Date.now() - 225 && (!C || r.some((R) => R.nodeName == "DIV" || R.nodeName == "P")) || !C && m.pos < c.doc.content.size && !m.sameParent(v) && (k = $e.findFrom(c.doc.resolve(m.pos + 1), 1, !0)) && k.head == v.pos) && t.someProp("handleKeyDown", (R) => R(t, Hs(13, "Enter")))) {
    t.input.lastIOSEnter = 0;
    return;
  }
  if (t.state.selection.anchor > p.start && NO(f, p.start, p.endA, m, v) && t.someProp("handleKeyDown", (R) => R(t, Hs(8, "Backspace")))) {
    Xi && Hn && t.domObserver.suppressSelectionUpdates();
    return;
  }
  Hn && Xi && p.endB == p.start && (t.input.lastAndroidDelete = Date.now()), Xi && !C && m.start() != v.start() && v.parentOffset == 0 && m.depth == v.depth && c.sel && c.sel.anchor == c.sel.head && c.sel.head == p.endA && (p.endB -= 2, v = c.doc.resolveNoCache(p.endB - c.from), setTimeout(() => {
    t.someProp("handleKeyDown", function(R) {
      return R(t, Hs(13, "Enter"));
    });
  }, 20));
  let _ = p.start, S = p.endA, E, x, N;
  if (C) {
    if (m.pos == v.pos)
      oi && cs <= 11 && m.parentOffset == 0 && (t.domObserver.suppressSelectionUpdates(), setTimeout(() => co(t), 20)), E = t.state.tr.delete(_, S), x = f.resolve(p.start).marksAcross(f.resolve(p.endA));
    else if (
      // Adding or removing a mark
      p.endA == p.endB && (N = MO(m.parent.content.cut(m.parentOffset, v.parentOffset), y.parent.content.cut(y.parentOffset, p.endA - y.start())))
    )
      E = t.state.tr, N.type == "add" ? E.addMark(_, S, N.mark) : E.removeMark(_, S, N.mark);
    else if (m.parent.child(m.index()).isText && m.index() == v.index() - (v.textOffset ? 0 : 1)) {
      let R = m.parent.textBetween(m.parentOffset, v.parentOffset);
      if (t.someProp("handleTextInput", (A) => A(t, _, S, R)))
        return;
      E = t.state.tr.insertText(R, _, S);
    }
  }
  if (E || (E = t.state.tr.replace(_, S, c.doc.slice(p.start - c.from, p.endB - c.from))), c.sel) {
    let R = y2(t, E.doc, c.sel);
    R && !(Hn && Xi && t.composing && R.empty && (p.start != p.endB || t.input.lastAndroidDelete < Date.now() - 100) && (R.head == _ || R.head == E.mapping.map(S) - 1) || oi && R.empty && R.head == _) && E.setSelection(R);
  }
  x && E.ensureMarks(x), o && E.setMeta("composition", o), t.dispatch(E.scrollIntoView());
}
function y2(t, e, n) {
  return Math.max(n.anchor, n.head) > e.content.size ? null : Sy(t, e.resolve(n.anchor), e.resolve(n.head));
}
function MO(t, e) {
  let n = t.firstChild.marks, i = e.firstChild.marks, r = n, o = i, s, a, l;
  for (let f = 0; f < i.length; f++)
    r = i[f].removeFromSet(r);
  for (let f = 0; f < n.length; f++)
    o = n[f].removeFromSet(o);
  if (r.length == 1 && o.length == 0)
    a = r[0], s = "add", l = (f) => f.mark(a.addToSet(f.marks));
  else if (r.length == 0 && o.length == 1)
    a = o[0], s = "remove", l = (f) => f.mark(a.removeFromSet(f.marks));
  else
    return null;
  let c = [];
  for (let f = 0; f < e.childCount; f++)
    c.push(l(e.child(f)));
  if (ie.from(c).eq(t))
    return { mark: a, type: s };
}
function NO(t, e, n, i, r) {
  if (
    // The content must have shrunk
    n - e <= r.pos - i.pos || // newEnd must point directly at or after the end of the block that newStart points into
    Up(i, !0, !1) < r.pos
  )
    return !1;
  let o = t.resolve(e);
  if (!i.parent.isTextblock) {
    let a = o.nodeAfter;
    return a != null && n == e + a.nodeSize;
  }
  if (o.parentOffset < o.parent.content.size || !o.parent.isTextblock)
    return !1;
  let s = t.resolve(Up(o, !0, !0));
  return !s.parent.isTextblock || s.pos > n || Up(s, !0, !1) < n ? !1 : i.parent.content.cut(i.parentOffset).eq(s.parent.content);
}
function Up(t, e, n) {
  let i = t.depth, r = e ? t.end() : t.pos;
  for (; i > 0 && (e || t.indexAfter(i) == t.node(i).childCount); )
    i--, r++, e = !1;
  if (n) {
    let o = t.node(i).maybeChild(t.indexAfter(i));
    for (; o && !o.isLeaf; )
      o = o.firstChild, r++;
  }
  return r;
}
function OO(t, e, n, i, r) {
  let o = t.findDiffStart(e, n);
  if (o == null)
    return null;
  let { a: s, b: a } = t.findDiffEnd(e, n + t.size, n + e.size);
  if (r == "end") {
    let l = Math.max(0, o - Math.min(s, a));
    i -= s + l - o;
  }
  if (s < o && t.size < e.size) {
    let l = i <= o && i >= s ? o - i : 0;
    o -= l, o && o < e.size && v2(e.textBetween(o - 1, o + 1)) && (o += l ? 1 : -1), a = o + (a - s), s = o;
  } else if (a < o) {
    let l = i <= o && i >= a ? o - i : 0;
    o -= l, o && o < t.size && v2(t.textBetween(o - 1, o + 1)) && (o += l ? 1 : -1), s = o + (s - a), a = o;
  }
  return { start: o, endA: s, endB: a };
}
function v2(t) {
  if (t.length != 2)
    return !1;
  let e = t.charCodeAt(0), n = t.charCodeAt(1);
  return e >= 56320 && e <= 57343 && n >= 55296 && n <= 56319;
}
const d6 = xy;
class u6 {
  /**
  Create a view. `place` may be a DOM node that the editor should
  be appended to, a function that will place it into the document,
  or an object whose `mount` property holds the node to use as the
  document container. If it is `null`, the editor will not be
  added to the document.
  */
  constructor(e, n) {
    this._root = null, this.focused = !1, this.trackWrites = null, this.mounted = !1, this.markCursor = null, this.cursorWrapper = null, this.lastSelectedViewDesc = void 0, this.input = new XN(), this.prevDirectPlugins = [], this.pluginViews = [], this.requiresGeckoHackNode = !1, this.dragging = null, this._props = n, this.state = n.state, this.directPlugins = n.plugins || [], this.directPlugins.forEach(E2), this.dispatch = this.dispatch.bind(this), this.dom = e && e.mount || document.createElement("div"), e && (e.appendChild ? e.appendChild(this.dom) : typeof e == "function" ? e(this.dom) : e.mount && (this.mounted = !0)), this.editable = w2(this), k2(this), this.nodeViews = _2(this), this.docView = Zk(this.state.doc, b2(this), zp(this), this.dom, this), this.domObserver = new wO(this, (i, r, o, s) => AO(this, i, r, o, s)), this.domObserver.start(), QN(this), this.updatePluginViews();
  }
  /**
  Holds `true` when a
  [composition](https://w3c.github.io/uievents/#events-compositionevents)
  is active.
  */
  get composing() {
    return this.input.composing;
  }
  /**
  The view's current [props](https://prosemirror.net/docs/ref/#view.EditorProps).
  */
  get props() {
    if (this._props.state != this.state) {
      let e = this._props;
      this._props = {};
      for (let n in e)
        this._props[n] = e[n];
      this._props.state = this.state;
    }
    return this._props;
  }
  /**
  Update the view's props. Will immediately cause an update to
  the DOM.
  */
  update(e) {
    e.handleDOMEvents != this._props.handleDOMEvents && W0(this);
    let n = this._props;
    this._props = e, e.plugins && (e.plugins.forEach(E2), this.directPlugins = e.plugins), this.updateStateInner(e.state, n);
  }
  /**
  Update the view by updating existing props object with the object
  given as argument. Equivalent to `view.update(Object.assign({},
  view.props, props))`.
  */
  setProps(e) {
    let n = {};
    for (let i in this._props)
      n[i] = this._props[i];
    n.state = this.state;
    for (let i in e)
      n[i] = e[i];
    this.update(n);
  }
  /**
  Update the editor's `state` prop, without touching any of the
  other props.
  */
  updateState(e) {
    this.updateStateInner(e, this._props);
  }
  updateStateInner(e, n) {
    var i;
    let r = this.state, o = !1, s = !1;
    e.storedMarks && this.composing && (r6(this), s = !0), this.state = e;
    let a = r.plugins != e.plugins || this._props.plugins != n.plugins;
    if (a || this._props.plugins != n.plugins || this._props.nodeViews != n.nodeViews) {
      let h = _2(this);
      IO(h, this.nodeViews) && (this.nodeViews = h, o = !0);
    }
    (a || n.handleDOMEvents != this._props.handleDOMEvents) && W0(this), this.editable = w2(this), k2(this);
    let l = zp(this), c = b2(this), f = r.plugins != e.plugins && !r.doc.eq(e.doc) ? "reset" : e.scrollToSelection > r.scrollToSelection ? "to selection" : "preserve", d = o || !this.docView.matchesNode(e.doc, c, l);
    (d || !e.selection.eq(r.selection)) && (s = !0);
    let u = f == "preserve" && s && this.dom.style.overflowAnchor == null && uN(this);
    if (s) {
      this.domObserver.stop();
      let h = d && (oi || Hn) && !this.composing && !r.selection.empty && !e.selection.empty && RO(r.selection, e.selection);
      if (d) {
        let p = Hn ? this.trackWrites = this.domSelectionRange().focusNode : null;
        this.composing && (this.input.compositionNode = dO(this)), (o || !this.docView.update(e.doc, c, l, this)) && (this.docView.updateOuterDeco(c), this.docView.destroy(), this.docView = Zk(e.doc, c, l, this.dom, this)), p && !this.trackWrites && (h = !0);
      }
      h || !(this.input.mouseDown && this.domObserver.currentSelection.eq(this.domSelectionRange()) && PN(this)) ? co(this, h) : (q5(this, e.selection), this.domObserver.setCurSelection()), this.domObserver.start();
    }
    this.updatePluginViews(r), !((i = this.dragging) === null || i === void 0) && i.node && !r.doc.eq(e.doc) && this.updateDraggedNode(this.dragging, r), f == "reset" ? this.dom.scrollTop = 0 : f == "to selection" ? this.scrollToSelection() : u && hN(u);
  }
  /**
  @internal
  */
  scrollToSelection() {
    let e = this.domSelectionRange().focusNode;
    if (!this.someProp("handleScrollToSelection", (n) => n(this))) if (this.state.selection instanceof Ie) {
      let n = this.docView.domAfterPos(this.state.selection.from);
      n.nodeType == 1 && Gk(this, n.getBoundingClientRect(), e);
    } else
      Gk(this, this.coordsAtPos(this.state.selection.head, 1), e);
  }
  destroyPluginViews() {
    let e;
    for (; e = this.pluginViews.pop(); )
      e.destroy && e.destroy();
  }
  updatePluginViews(e) {
    if (!e || e.plugins != this.state.plugins || this.directPlugins != this.prevDirectPlugins) {
      this.prevDirectPlugins = this.directPlugins, this.destroyPluginViews();
      for (let n = 0; n < this.directPlugins.length; n++) {
        let i = this.directPlugins[n];
        i.spec.view && this.pluginViews.push(i.spec.view(this));
      }
      for (let n = 0; n < this.state.plugins.length; n++) {
        let i = this.state.plugins[n];
        i.spec.view && this.pluginViews.push(i.spec.view(this));
      }
    } else
      for (let n = 0; n < this.pluginViews.length; n++) {
        let i = this.pluginViews[n];
        i.update && i.update(this, e);
      }
  }
  updateDraggedNode(e, n) {
    let i = e.node, r = -1;
    if (this.state.doc.nodeAt(i.from) == i.node)
      r = i.from;
    else {
      let o = i.from + (this.state.doc.content.size - n.doc.content.size);
      (o > 0 && this.state.doc.nodeAt(o)) == i.node && (r = o);
    }
    this.dragging = new s6(e.slice, e.move, r < 0 ? void 0 : Ie.create(this.state.doc, r));
  }
  someProp(e, n) {
    let i = this._props && this._props[e], r;
    if (i != null && (r = n ? n(i) : i))
      return r;
    for (let s = 0; s < this.directPlugins.length; s++) {
      let a = this.directPlugins[s].props[e];
      if (a != null && (r = n ? n(a) : a))
        return r;
    }
    let o = this.state.plugins;
    if (o)
      for (let s = 0; s < o.length; s++) {
        let a = o[s].props[e];
        if (a != null && (r = n ? n(a) : a))
          return r;
      }
  }
  /**
  Query whether the view has focus.
  */
  hasFocus() {
    if (oi) {
      let e = this.root.activeElement;
      if (e == this.dom)
        return !0;
      if (!e || !this.dom.contains(e))
        return !1;
      for (; e && this.dom != e && this.dom.contains(e); ) {
        if (e.contentEditable == "false")
          return !1;
        e = e.parentElement;
      }
      return !0;
    }
    return this.root.activeElement == this.dom;
  }
  /**
  Focus the editor.
  */
  focus() {
    this.domObserver.stop(), this.editable && pN(this.dom), co(this), this.domObserver.start();
  }
  /**
  Get the document root in which the editor exists. This will
  usually be the top-level `document`, but might be a [shadow
  DOM](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Shadow_DOM)
  root if the editor is inside one.
  */
  get root() {
    let e = this._root;
    if (e == null) {
      for (let n = this.dom.parentNode; n; n = n.parentNode)
        if (n.nodeType == 9 || n.nodeType == 11 && n.host)
          return n.getSelection || (Object.getPrototypeOf(n).getSelection = () => n.ownerDocument.getSelection()), this._root = n;
    }
    return e || document;
  }
  /**
  When an existing editor view is moved to a new document or
  shadow tree, call this to make it recompute its root.
  */
  updateRoot() {
    this._root = null;
  }
  /**
  Given a pair of viewport coordinates, return the document
  position that corresponds to them. May return null if the given
  coordinates aren't inside of the editor. When an object is
  returned, its `pos` property is the position nearest to the
  coordinates, and its `inside` property holds the position of the
  inner node that the position falls inside of, or -1 if it is at
  the top level, not in any node.
  */
  posAtCoords(e) {
    return bN(this, e);
  }
  /**
  Returns the viewport rectangle at a given document position.
  `left` and `right` will be the same number, as this returns a
  flat cursor-ish rectangle. If the position is between two things
  that aren't directly adjacent, `side` determines which element
  is used. When < 0, the element before the position is used,
  otherwise the element after.
  */
  coordsAtPos(e, n = 1) {
    return B5(this, e, n);
  }
  /**
  Find the DOM position that corresponds to the given document
  position. When `side` is negative, find the position as close as
  possible to the content before the position. When positive,
  prefer positions close to the content after the position. When
  zero, prefer as shallow a position as possible.
  
  Note that you should **not** mutate the editor's internal DOM,
  only inspect it (and even that is usually not necessary).
  */
  domAtPos(e, n = 0) {
    return this.docView.domFromPos(e, n);
  }
  /**
  Find the DOM node that represents the document node after the
  given position. May return `null` when the position doesn't point
  in front of a node or if the node is inside an opaque node view.
  
  This is intended to be able to call things like
  `getBoundingClientRect` on that DOM node. Do **not** mutate the
  editor DOM directly, or add styling this way, since that will be
  immediately overriden by the editor as it redraws the node.
  */
  nodeDOM(e) {
    let n = this.docView.descAt(e);
    return n ? n.nodeDOM : null;
  }
  /**
  Find the document position that corresponds to a given DOM
  position. (Whenever possible, it is preferable to inspect the
  document structure directly, rather than poking around in the
  DOM, but sometimes—for example when interpreting an event
  target—you don't have a choice.)
  
  The `bias` parameter can be used to influence which side of a DOM
  node to use when the position is inside a leaf node.
  */
  posAtDOM(e, n, i = -1) {
    let r = this.docView.posFromDOM(e, n, i);
    if (r == null)
      throw new RangeError("DOM position not inside the editor");
    return r;
  }
  /**
  Find out whether the selection is at the end of a textblock when
  moving in a given direction. When, for example, given `"left"`,
  it will return true if moving left from the current cursor
  position would leave that position's parent textblock. Will apply
  to the view's current state by default, but it is possible to
  pass a different state.
  */
  endOfTextblock(e, n) {
    return TN(this, n || this.state, e);
  }
  /**
  Run the editor's paste logic with the given HTML string. The
  `event`, if given, will be passed to the
  [`handlePaste`](https://prosemirror.net/docs/ref/#view.EditorProps.handlePaste) hook.
  */
  pasteHTML(e, n) {
    return Xc(this, "", e, !1, n || new ClipboardEvent("paste"));
  }
  /**
  Run the editor's paste logic with the given plain-text input.
  */
  pasteText(e, n) {
    return Xc(this, e, null, !0, n || new ClipboardEvent("paste"));
  }
  /**
  Removes the editor from the DOM and destroys all [node
  views](https://prosemirror.net/docs/ref/#view.NodeView).
  */
  destroy() {
    this.docView && (ZN(this), this.destroyPluginViews(), this.mounted ? (this.docView.update(this.state.doc, [], zp(this), this), this.dom.textContent = "") : this.dom.parentNode && this.dom.parentNode.removeChild(this.dom), this.docView.destroy(), this.docView = null, tN());
  }
  /**
  This is true when the view has been
  [destroyed](https://prosemirror.net/docs/ref/#view.EditorView.destroy) (and thus should not be
  used anymore).
  */
  get isDestroyed() {
    return this.docView == null;
  }
  /**
  Used for testing.
  */
  dispatchEvent(e) {
    return tO(this, e);
  }
  /**
  Dispatch a transaction. Will call
  [`dispatchTransaction`](https://prosemirror.net/docs/ref/#view.DirectEditorProps.dispatchTransaction)
  when given, and otherwise defaults to applying the transaction to
  the current state and calling
  [`updateState`](https://prosemirror.net/docs/ref/#view.EditorView.updateState) with the result.
  This method is bound to the view instance, so that it can be
  easily passed around.
  */
  dispatch(e) {
    let n = this._props.dispatchTransaction;
    n ? n.call(this, e) : this.updateState(this.state.apply(e));
  }
  /**
  @internal
  */
  domSelectionRange() {
    let e = this.domSelection();
    return e ? Yn && this.root.nodeType === 11 && sN(this.dom.ownerDocument) == this.dom && EO(this, e) || e : { focusNode: null, focusOffset: 0, anchorNode: null, anchorOffset: 0 };
  }
  /**
  @internal
  */
  domSelection() {
    return this.root.getSelection();
  }
}
function b2(t) {
  let e = /* @__PURE__ */ Object.create(null);
  return e.class = "ProseMirror", e.contenteditable = String(t.editable), t.someProp("attributes", (n) => {
    if (typeof n == "function" && (n = n(t.state)), n)
      for (let i in n)
        i == "class" ? e.class += " " + n[i] : i == "style" ? e.style = (e.style ? e.style + ";" : "") + n[i] : !e[i] && i != "contenteditable" && i != "nodeName" && (e[i] = String(n[i]));
  }), e.translate || (e.translate = "no"), [Qt.node(0, t.state.doc.content.size, e)];
}
function k2(t) {
  if (t.markCursor) {
    let e = document.createElement("img");
    e.className = "ProseMirror-separator", e.setAttribute("mark-placeholder", "true"), e.setAttribute("alt", ""), t.cursorWrapper = { dom: e, deco: Qt.widget(t.state.selection.from, e, { raw: !0, marks: t.markCursor }) };
  } else
    t.cursorWrapper = null;
}
function w2(t) {
  return !t.someProp("editable", (e) => e(t.state) === !1);
}
function RO(t, e) {
  let n = Math.min(t.$anchor.sharedDepth(t.head), e.$anchor.sharedDepth(e.head));
  return t.$anchor.start(n) != e.$anchor.start(n);
}
function _2(t) {
  let e = /* @__PURE__ */ Object.create(null);
  function n(i) {
    for (let r in i)
      Object.prototype.hasOwnProperty.call(e, r) || (e[r] = i[r]);
  }
  return t.someProp("nodeViews", n), t.someProp("markViews", n), e;
}
function IO(t, e) {
  let n = 0, i = 0;
  for (let r in t) {
    if (t[r] != e[r])
      return !0;
    n++;
  }
  for (let r in e)
    i++;
  return n != i;
}
function E2(t) {
  if (t.spec.state || t.spec.filterTransaction || t.spec.appendTransaction)
    throw new RangeError("Plugins passed directly to the view must not have a state component");
}
var ys = {
  8: "Backspace",
  9: "Tab",
  10: "Enter",
  12: "NumLock",
  13: "Enter",
  16: "Shift",
  17: "Control",
  18: "Alt",
  20: "CapsLock",
  27: "Escape",
  32: " ",
  33: "PageUp",
  34: "PageDown",
  35: "End",
  36: "Home",
  37: "ArrowLeft",
  38: "ArrowUp",
  39: "ArrowRight",
  40: "ArrowDown",
  44: "PrintScreen",
  45: "Insert",
  46: "Delete",
  59: ";",
  61: "=",
  91: "Meta",
  92: "Meta",
  106: "*",
  107: "+",
  108: ",",
  109: "-",
  110: ".",
  111: "/",
  144: "NumLock",
  145: "ScrollLock",
  160: "Shift",
  161: "Shift",
  162: "Control",
  163: "Control",
  164: "Alt",
  165: "Alt",
  173: "-",
  186: ";",
  187: "=",
  188: ",",
  189: "-",
  190: ".",
  191: "/",
  192: "`",
  219: "[",
  220: "\\",
  221: "]",
  222: "'"
}, Hu = {
  48: ")",
  49: "!",
  50: "@",
  51: "#",
  52: "$",
  53: "%",
  54: "^",
  55: "&",
  56: "*",
  57: "(",
  59: ":",
  61: "+",
  173: "_",
  186: ":",
  187: "+",
  188: "<",
  189: "_",
  190: ">",
  191: "?",
  192: "~",
  219: "{",
  220: "|",
  221: "}",
  222: '"'
}, LO = typeof navigator < "u" && /Mac/.test(navigator.platform), DO = typeof navigator < "u" && /MSIE \d|Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(navigator.userAgent);
for (var Rn = 0; Rn < 10; Rn++) ys[48 + Rn] = ys[96 + Rn] = String(Rn);
for (var Rn = 1; Rn <= 24; Rn++) ys[Rn + 111] = "F" + Rn;
for (var Rn = 65; Rn <= 90; Rn++)
  ys[Rn] = String.fromCharCode(Rn + 32), Hu[Rn] = String.fromCharCode(Rn);
for (var Vp in ys) Hu.hasOwnProperty(Vp) || (Hu[Vp] = ys[Vp]);
function PO(t) {
  var e = LO && t.metaKey && t.shiftKey && !t.ctrlKey && !t.altKey || DO && t.shiftKey && t.key && t.key.length == 1 || t.key == "Unidentified", n = !e && t.key || (t.shiftKey ? Hu : ys)[t.keyCode] || t.key || "Unidentified";
  return n == "Esc" && (n = "Escape"), n == "Del" && (n = "Delete"), n == "Left" && (n = "ArrowLeft"), n == "Up" && (n = "ArrowUp"), n == "Right" && (n = "ArrowRight"), n == "Down" && (n = "ArrowDown"), n;
}
const FO = typeof navigator < "u" ? /Mac|iP(hone|[oa]d)/.test(navigator.platform) : !1;
function BO(t) {
  let e = t.split(/-(?!$)/), n = e[e.length - 1];
  n == "Space" && (n = " ");
  let i, r, o, s;
  for (let a = 0; a < e.length - 1; a++) {
    let l = e[a];
    if (/^(cmd|meta|m)$/i.test(l))
      s = !0;
    else if (/^a(lt)?$/i.test(l))
      i = !0;
    else if (/^(c|ctrl|control)$/i.test(l))
      r = !0;
    else if (/^s(hift)?$/i.test(l))
      o = !0;
    else if (/^mod$/i.test(l))
      FO ? s = !0 : r = !0;
    else
      throw new Error("Unrecognized modifier name: " + l);
  }
  return i && (n = "Alt-" + n), r && (n = "Ctrl-" + n), s && (n = "Meta-" + n), o && (n = "Shift-" + n), n;
}
function HO(t) {
  let e = /* @__PURE__ */ Object.create(null);
  for (let n in t)
    e[BO(n)] = t[n];
  return e;
}
function Wp(t, e, n = !0) {
  return e.altKey && (t = "Alt-" + t), e.ctrlKey && (t = "Ctrl-" + t), e.metaKey && (t = "Meta-" + t), n && e.shiftKey && (t = "Shift-" + t), t;
}
function $O(t) {
  return new mt({ props: { handleKeyDown: Iy(t) } });
}
function Iy(t) {
  let e = HO(t);
  return function(n, i) {
    let r = PO(i), o, s = e[Wp(r, i)];
    if (s && s(n.state, n.dispatch, n))
      return !0;
    if (r.length == 1 && r != " ") {
      if (i.shiftKey) {
        let a = e[Wp(r, i, !1)];
        if (a && a(n.state, n.dispatch, n))
          return !0;
      }
      if ((i.shiftKey || i.altKey || i.metaKey || r.charCodeAt(0) > 127) && (o = ys[i.keyCode]) && o != r) {
        let a = e[Wp(o, i)];
        if (a && a(n.state, n.dispatch, n))
          return !0;
      }
    }
    return !1;
  };
}
const jO = (t, e) => t.selection.empty ? !1 : (e && e(t.tr.deleteSelection().scrollIntoView()), !0);
function h6(t, e) {
  let { $cursor: n } = t.selection;
  return !n || (e ? !e.endOfTextblock("backward", t) : n.parentOffset > 0) ? null : n;
}
const zO = (t, e, n) => {
  let i = h6(t, n);
  if (!i)
    return !1;
  let r = Ly(i);
  if (!r) {
    let s = i.blockRange(), a = s && Nl(s);
    return a == null ? !1 : (e && e(t.tr.lift(s, a).scrollIntoView()), !0);
  }
  let o = r.nodeBefore;
  if (y6(t, r, e, -1))
    return !0;
  if (i.parent.content.size == 0 && (pl(o, "end") || Ie.isSelectable(o)))
    for (let s = i.depth; ; s--) {
      let a = hh(t.doc, i.before(s), i.after(s), be.empty);
      if (a && a.slice.size < a.to - a.from) {
        if (e) {
          let l = t.tr.step(a);
          l.setSelection(pl(o, "end") ? $e.findFrom(l.doc.resolve(l.mapping.map(r.pos, -1)), -1) : Ie.create(l.doc, r.pos - o.nodeSize)), e(l.scrollIntoView());
        }
        return !0;
      }
      if (s == 1 || i.node(s - 1).childCount > 1)
        break;
    }
  return o.isAtom && r.depth == i.depth - 1 ? (e && e(t.tr.delete(r.pos - o.nodeSize, r.pos).scrollIntoView()), !0) : !1;
}, UO = (t, e, n) => {
  let i = h6(t, n);
  if (!i)
    return !1;
  let r = Ly(i);
  return r ? p6(t, r, e) : !1;
}, VO = (t, e, n) => {
  let i = m6(t, n);
  if (!i)
    return !1;
  let r = Dy(i);
  return r ? p6(t, r, e) : !1;
};
function p6(t, e, n) {
  let i = e.nodeBefore, r = i, o = e.pos - 1;
  for (; !r.isTextblock; o--) {
    if (r.type.spec.isolating)
      return !1;
    let f = r.lastChild;
    if (!f)
      return !1;
    r = f;
  }
  let s = e.nodeAfter, a = s, l = e.pos + 1;
  for (; !a.isTextblock; l++) {
    if (a.type.spec.isolating)
      return !1;
    let f = a.firstChild;
    if (!f)
      return !1;
    a = f;
  }
  let c = hh(t.doc, o, l, be.empty);
  if (!c || c.from != o || c instanceof wn && c.slice.size >= l - o)
    return !1;
  if (n) {
    let f = t.tr.step(c);
    f.setSelection(ze.create(f.doc, o)), n(f.scrollIntoView());
  }
  return !0;
}
function pl(t, e, n = !1) {
  for (let i = t; i; i = e == "start" ? i.firstChild : i.lastChild) {
    if (i.isTextblock)
      return !0;
    if (n && i.childCount != 1)
      return !1;
  }
  return !1;
}
const WO = (t, e, n) => {
  let { $head: i, empty: r } = t.selection, o = i;
  if (!r)
    return !1;
  if (i.parent.isTextblock) {
    if (n ? !n.endOfTextblock("backward", t) : i.parentOffset > 0)
      return !1;
    o = Ly(i);
  }
  let s = o && o.nodeBefore;
  return !s || !Ie.isSelectable(s) ? !1 : (e && e(t.tr.setSelection(Ie.create(t.doc, o.pos - s.nodeSize)).scrollIntoView()), !0);
};
function Ly(t) {
  if (!t.parent.type.spec.isolating)
    for (let e = t.depth - 1; e >= 0; e--) {
      if (t.index(e) > 0)
        return t.doc.resolve(t.before(e + 1));
      if (t.node(e).type.spec.isolating)
        break;
    }
  return null;
}
function m6(t, e) {
  let { $cursor: n } = t.selection;
  return !n || (e ? !e.endOfTextblock("forward", t) : n.parentOffset < n.parent.content.size) ? null : n;
}
const qO = (t, e, n) => {
  let i = m6(t, n);
  if (!i)
    return !1;
  let r = Dy(i);
  if (!r)
    return !1;
  let o = r.nodeAfter;
  if (y6(t, r, e, 1))
    return !0;
  if (i.parent.content.size == 0 && (pl(o, "start") || Ie.isSelectable(o))) {
    let s = hh(t.doc, i.before(), i.after(), be.empty);
    if (s && s.slice.size < s.to - s.from) {
      if (e) {
        let a = t.tr.step(s);
        a.setSelection(pl(o, "start") ? $e.findFrom(a.doc.resolve(a.mapping.map(r.pos)), 1) : Ie.create(a.doc, a.mapping.map(r.pos))), e(a.scrollIntoView());
      }
      return !0;
    }
  }
  return o.isAtom && r.depth == i.depth - 1 ? (e && e(t.tr.delete(r.pos, r.pos + o.nodeSize).scrollIntoView()), !0) : !1;
}, GO = (t, e, n) => {
  let { $head: i, empty: r } = t.selection, o = i;
  if (!r)
    return !1;
  if (i.parent.isTextblock) {
    if (n ? !n.endOfTextblock("forward", t) : i.parentOffset < i.parent.content.size)
      return !1;
    o = Dy(i);
  }
  let s = o && o.nodeAfter;
  return !s || !Ie.isSelectable(s) ? !1 : (e && e(t.tr.setSelection(Ie.create(t.doc, o.pos)).scrollIntoView()), !0);
};
function Dy(t) {
  if (!t.parent.type.spec.isolating)
    for (let e = t.depth - 1; e >= 0; e--) {
      let n = t.node(e);
      if (t.index(e) + 1 < n.childCount)
        return t.doc.resolve(t.after(e + 1));
      if (n.type.spec.isolating)
        break;
    }
  return null;
}
const KO = (t, e) => {
  let n = t.selection, i = n instanceof Ie, r;
  if (i) {
    if (n.node.isTextblock || !va(t.doc, n.from))
      return !1;
    r = n.from;
  } else if (r = uh(t.doc, n.from, -1), r == null)
    return !1;
  if (e) {
    let o = t.tr.join(r);
    i && o.setSelection(Ie.create(o.doc, r - t.doc.resolve(r).nodeBefore.nodeSize)), e(o.scrollIntoView());
  }
  return !0;
}, YO = (t, e) => {
  let n = t.selection, i;
  if (n instanceof Ie) {
    if (n.node.isTextblock || !va(t.doc, n.to))
      return !1;
    i = n.to;
  } else if (i = uh(t.doc, n.to, 1), i == null)
    return !1;
  return e && e(t.tr.join(i).scrollIntoView()), !0;
}, JO = (t, e) => {
  let { $from: n, $to: i } = t.selection, r = n.blockRange(i), o = r && Nl(r);
  return o == null ? !1 : (e && e(t.tr.lift(r, o).scrollIntoView()), !0);
}, XO = (t, e) => {
  let { $head: n, $anchor: i } = t.selection;
  return !n.parent.type.spec.code || !n.sameParent(i) ? !1 : (e && e(t.tr.insertText(`
`).scrollIntoView()), !0);
};
function g6(t) {
  for (let e = 0; e < t.edgeCount; e++) {
    let { type: n } = t.edge(e);
    if (n.isTextblock && !n.hasRequiredAttrs())
      return n;
  }
  return null;
}
const QO = (t, e) => {
  let { $head: n, $anchor: i } = t.selection;
  if (!n.parent.type.spec.code || !n.sameParent(i))
    return !1;
  let r = n.node(-1), o = n.indexAfter(-1), s = g6(r.contentMatchAt(o));
  if (!s || !r.canReplaceWith(o, o, s))
    return !1;
  if (e) {
    let a = n.after(), l = t.tr.replaceWith(a, a, s.createAndFill());
    l.setSelection($e.near(l.doc.resolve(a), 1)), e(l.scrollIntoView());
  }
  return !0;
}, ZO = (t, e) => {
  let n = t.selection, { $from: i, $to: r } = n;
  if (n instanceof er || i.parent.inlineContent || r.parent.inlineContent)
    return !1;
  let o = g6(r.parent.contentMatchAt(r.indexAfter()));
  if (!o || !o.isTextblock)
    return !1;
  if (e) {
    let s = (!i.parentOffset && r.index() < r.parent.childCount ? i : r).pos, a = t.tr.insert(s, o.createAndFill());
    a.setSelection(ze.create(a.doc, s + 1)), e(a.scrollIntoView());
  }
  return !0;
}, eR = (t, e) => {
  let { $cursor: n } = t.selection;
  if (!n || n.parent.content.size)
    return !1;
  if (n.depth > 1 && n.after() != n.end(-1)) {
    let o = n.before();
    if (Za(t.doc, o))
      return e && e(t.tr.split(o).scrollIntoView()), !0;
  }
  let i = n.blockRange(), r = i && Nl(i);
  return r == null ? !1 : (e && e(t.tr.lift(i, r).scrollIntoView()), !0);
}, tR = (t, e) => {
  let { $from: n, to: i } = t.selection, r, o = n.sharedDepth(i);
  return o == 0 ? !1 : (r = n.before(o), e && e(t.tr.setSelection(Ie.create(t.doc, r))), !0);
};
function nR(t, e, n) {
  let i = e.nodeBefore, r = e.nodeAfter, o = e.index();
  return !i || !r || !i.type.compatibleContent(r.type) ? !1 : !i.content.size && e.parent.canReplace(o - 1, o) ? (n && n(t.tr.delete(e.pos - i.nodeSize, e.pos).scrollIntoView()), !0) : !e.parent.canReplace(o, o + 1) || !(r.isTextblock || va(t.doc, e.pos)) ? !1 : (n && n(t.tr.join(e.pos).scrollIntoView()), !0);
}
function y6(t, e, n, i) {
  let r = e.nodeBefore, o = e.nodeAfter, s, a, l = r.type.spec.isolating || o.type.spec.isolating;
  if (!l && nR(t, e, n))
    return !0;
  let c = !l && e.parent.canReplace(e.index(), e.index() + 1);
  if (c && (s = (a = r.contentMatchAt(r.childCount)).findWrapping(o.type)) && a.matchType(s[0] || o.type).validEnd) {
    if (n) {
      let h = e.pos + o.nodeSize, p = ie.empty;
      for (let y = s.length - 1; y >= 0; y--)
        p = ie.from(s[y].create(null, p));
      p = ie.from(r.copy(p));
      let m = t.tr.step(new En(e.pos - 1, h, e.pos, h, new be(p, 1, 0), s.length, !0)), v = m.doc.resolve(h + 2 * s.length);
      v.nodeAfter && v.nodeAfter.type == r.type && va(m.doc, v.pos) && m.join(v.pos), n(m.scrollIntoView());
    }
    return !0;
  }
  let f = o.type.spec.isolating || i > 0 && l ? null : $e.findFrom(e, 1), d = f && f.$from.blockRange(f.$to), u = d && Nl(d);
  if (u != null && u >= e.depth)
    return n && n(t.tr.lift(d, u).scrollIntoView()), !0;
  if (c && pl(o, "start", !0) && pl(r, "end")) {
    let h = r, p = [];
    for (; p.push(h), !h.isTextblock; )
      h = h.lastChild;
    let m = o, v = 1;
    for (; !m.isTextblock; m = m.firstChild)
      v++;
    if (h.canReplace(h.childCount, h.childCount, m.content)) {
      if (n) {
        let y = ie.empty;
        for (let k = p.length - 1; k >= 0; k--)
          y = ie.from(p[k].copy(y));
        let C = t.tr.step(new En(e.pos - p.length, e.pos + o.nodeSize, e.pos + v, e.pos + o.nodeSize - v, new be(y, p.length, 0), 0, !0));
        n(C.scrollIntoView());
      }
      return !0;
    }
  }
  return !1;
}
function v6(t) {
  return function(e, n) {
    let i = e.selection, r = t < 0 ? i.$from : i.$to, o = r.depth;
    for (; r.node(o).isInline; ) {
      if (!o)
        return !1;
      o--;
    }
    return r.node(o).isTextblock ? (n && n(e.tr.setSelection(ze.create(e.doc, t < 0 ? r.start(o) : r.end(o)))), !0) : !1;
  };
}
const iR = v6(-1), rR = v6(1);
function oR(t, e = null) {
  return function(n, i) {
    let { $from: r, $to: o } = n.selection, s = r.blockRange(o), a = s && k5(s, t, e);
    return a ? (i && i(n.tr.wrap(s, a).scrollIntoView()), !0) : !1;
  };
}
function T2(t, e = null) {
  return function(n, i) {
    let r = !1;
    for (let o = 0; o < n.selection.ranges.length && !r; o++) {
      let { $from: { pos: s }, $to: { pos: a } } = n.selection.ranges[o];
      n.doc.nodesBetween(s, a, (l, c) => {
        if (r)
          return !1;
        if (!(!l.isTextblock || l.hasMarkup(t, e)))
          if (l.type == t)
            r = !0;
          else {
            let f = n.doc.resolve(c), d = f.index();
            r = f.parent.canReplaceWith(d, d + 1, t);
          }
      });
    }
    if (!r)
      return !1;
    if (i) {
      let o = n.tr;
      for (let s = 0; s < n.selection.ranges.length; s++) {
        let { $from: { pos: a }, $to: { pos: l } } = n.selection.ranges[s];
        o.setBlockType(a, l, t, e);
      }
      i(o.scrollIntoView());
    }
    return !0;
  };
}
typeof navigator < "u" ? /Mac|iP(hone|[oa]d)/.test(navigator.platform) : typeof os < "u" && os.platform && os.platform() == "darwin";
function sR(t, e = null) {
  return function(n, i) {
    let { $from: r, $to: o } = n.selection, s = r.blockRange(o), a = !1, l = s;
    if (!s)
      return !1;
    if (s.depth >= 2 && r.node(s.depth - 1).type.compatibleContent(t) && s.startIndex == 0) {
      if (r.index(s.depth - 1) == 0)
        return !1;
      let f = n.doc.resolve(s.start - 2);
      l = new Nu(f, f, s.depth), s.endIndex < s.parent.childCount && (s = new Nu(r, n.doc.resolve(o.end(s.depth)), s.depth)), a = !0;
    }
    let c = k5(l, t, e, s);
    return c ? (i && i(aR(n.tr, s, c, a, t).scrollIntoView()), !0) : !1;
  };
}
function aR(t, e, n, i, r) {
  let o = ie.empty;
  for (let f = n.length - 1; f >= 0; f--)
    o = ie.from(n[f].type.create(n[f].attrs, o));
  t.step(new En(e.start - (i ? 2 : 0), e.end, e.start, e.end, new be(o, 0, 0), n.length, !0));
  let s = 0;
  for (let f = 0; f < n.length; f++)
    n[f].type == r && (s = f + 1);
  let a = n.length - s, l = e.start + n.length - (i ? 2 : 0), c = e.parent;
  for (let f = e.startIndex, d = e.endIndex, u = !0; f < d; f++, u = !1)
    !u && Za(t.doc, l, a) && (t.split(l, a), l += 2 * a), l += c.child(f).nodeSize;
  return t;
}
function lR(t) {
  return function(e, n) {
    let { $from: i, $to: r } = e.selection, o = i.blockRange(r, (s) => s.childCount > 0 && s.firstChild.type == t);
    return o ? n ? i.node(o.depth - 1).type == t ? cR(e, n, t, o) : fR(e, n, o) : !0 : !1;
  };
}
function cR(t, e, n, i) {
  let r = t.tr, o = i.end, s = i.$to.end(i.depth);
  o < s && (r.step(new En(o - 1, s, o, s, new be(ie.from(n.create(null, i.parent.copy())), 1, 0), 1, !0)), i = new Nu(r.doc.resolve(i.$from.pos), r.doc.resolve(s), i.depth));
  const a = Nl(i);
  if (a == null)
    return !1;
  r.lift(i, a);
  let l = r.mapping.map(o, -1) - 1;
  return va(r.doc, l) && r.join(l), e(r.scrollIntoView()), !0;
}
function fR(t, e, n) {
  let i = t.tr, r = n.parent;
  for (let h = n.end, p = n.endIndex - 1, m = n.startIndex; p > m; p--)
    h -= r.child(p).nodeSize, i.delete(h - 1, h + 1);
  let o = i.doc.resolve(n.start), s = o.nodeAfter;
  if (i.mapping.map(n.end) != n.start + o.nodeAfter.nodeSize)
    return !1;
  let a = n.startIndex == 0, l = n.endIndex == r.childCount, c = o.node(-1), f = o.index(-1);
  if (!c.canReplace(f + (a ? 0 : 1), f + 1, s.content.append(l ? ie.empty : ie.from(r))))
    return !1;
  let d = o.pos, u = d + s.nodeSize;
  return i.step(new En(d - (a ? 1 : 0), u + (l ? 1 : 0), d + 1, u - 1, new be((a ? ie.empty : ie.from(r.copy(ie.empty))).append(l ? ie.empty : ie.from(r.copy(ie.empty))), a ? 0 : 1, l ? 0 : 1), a ? 0 : 1)), e(i.scrollIntoView()), !0;
}
function dR(t) {
  return function(e, n) {
    let { $from: i, $to: r } = e.selection, o = i.blockRange(r, (c) => c.childCount > 0 && c.firstChild.type == t);
    if (!o)
      return !1;
    let s = o.startIndex;
    if (s == 0)
      return !1;
    let a = o.parent, l = a.child(s - 1);
    if (l.type != t)
      return !1;
    if (n) {
      let c = l.lastChild && l.lastChild.type == a.type, f = ie.from(c ? t.create() : null), d = new be(ie.from(t.create(null, ie.from(a.type.create(null, f)))), c ? 3 : 1, 0), u = o.start, h = o.end;
      n(e.tr.step(new En(u - (c ? 3 : 1), h, u, h, d, 1, !0)).scrollIntoView());
    }
    return !0;
  };
}
function vh(t) {
  const { state: e, transaction: n } = t;
  let { selection: i } = n, { doc: r } = n, { storedMarks: o } = n;
  return {
    ...e,
    apply: e.apply.bind(e),
    applyTransaction: e.applyTransaction.bind(e),
    plugins: e.plugins,
    schema: e.schema,
    reconfigure: e.reconfigure.bind(e),
    toJSON: e.toJSON.bind(e),
    get storedMarks() {
      return o;
    },
    get selection() {
      return i;
    },
    get doc() {
      return r;
    },
    get tr() {
      return i = n.selection, r = n.doc, o = n.storedMarks, n;
    }
  };
}
class bh {
  constructor(e) {
    this.editor = e.editor, this.rawCommands = this.editor.extensionManager.commands, this.customState = e.state;
  }
  get hasCustomState() {
    return !!this.customState;
  }
  get state() {
    return this.customState || this.editor.state;
  }
  get commands() {
    const { rawCommands: e, editor: n, state: i } = this, { view: r } = n, { tr: o } = i, s = this.buildProps(o);
    return Object.fromEntries(Object.entries(e).map(([a, l]) => [a, (...f) => {
      const d = l(...f)(s);
      return !o.getMeta("preventDispatch") && !this.hasCustomState && r.dispatch(o), d;
    }]));
  }
  get chain() {
    return () => this.createChain();
  }
  get can() {
    return () => this.createCan();
  }
  createChain(e, n = !0) {
    const { rawCommands: i, editor: r, state: o } = this, { view: s } = r, a = [], l = !!e, c = e || o.tr, f = () => (!l && n && !c.getMeta("preventDispatch") && !this.hasCustomState && s.dispatch(c), a.every((u) => u === !0)), d = {
      ...Object.fromEntries(Object.entries(i).map(([u, h]) => [u, (...m) => {
        const v = this.buildProps(c, n), y = h(...m)(v);
        return a.push(y), d;
      }])),
      run: f
    };
    return d;
  }
  createCan(e) {
    const { rawCommands: n, state: i } = this, r = !1, o = e || i.tr, s = this.buildProps(o, r);
    return {
      ...Object.fromEntries(Object.entries(n).map(([l, c]) => [l, (...f) => c(...f)({ ...s, dispatch: void 0 })])),
      chain: () => this.createChain(o, r)
    };
  }
  buildProps(e, n = !0) {
    const { rawCommands: i, editor: r, state: o } = this, { view: s } = r, a = {
      tr: e,
      editor: r,
      view: s,
      state: vh({
        state: o,
        transaction: e
      }),
      dispatch: n ? () => {
      } : void 0,
      chain: () => this.createChain(e, n),
      can: () => this.createCan(e),
      get commands() {
        return Object.fromEntries(Object.entries(i).map(([l, c]) => [l, (...f) => c(...f)(a)]));
      }
    };
    return a;
  }
}
class uR {
  constructor() {
    this.callbacks = {};
  }
  on(e, n) {
    return this.callbacks[e] || (this.callbacks[e] = []), this.callbacks[e].push(n), this;
  }
  emit(e, ...n) {
    const i = this.callbacks[e];
    return i && i.forEach((r) => r.apply(this, n)), this;
  }
  off(e, n) {
    const i = this.callbacks[e];
    return i && (n ? this.callbacks[e] = i.filter((r) => r !== n) : delete this.callbacks[e]), this;
  }
  removeAllListeners() {
    this.callbacks = {};
  }
}
function Me(t, e, n) {
  return t.config[e] === void 0 && t.parent ? Me(t.parent, e, n) : typeof t.config[e] == "function" ? t.config[e].bind({
    ...n,
    parent: t.parent ? Me(t.parent, e, n) : null
  }) : t.config[e];
}
function kh(t) {
  const e = t.filter((r) => r.type === "extension"), n = t.filter((r) => r.type === "node"), i = t.filter((r) => r.type === "mark");
  return {
    baseExtensions: e,
    nodeExtensions: n,
    markExtensions: i
  };
}
function b6(t) {
  const e = [], { nodeExtensions: n, markExtensions: i } = kh(t), r = [...n, ...i], o = {
    default: null,
    rendered: !0,
    renderHTML: null,
    parseHTML: null,
    keepOnSplit: !0,
    isRequired: !1
  };
  return t.forEach((s) => {
    const a = {
      name: s.name,
      options: s.options,
      storage: s.storage,
      extensions: r
    }, l = Me(s, "addGlobalAttributes", a);
    if (!l)
      return;
    l().forEach((f) => {
      f.types.forEach((d) => {
        Object.entries(f.attributes).forEach(([u, h]) => {
          e.push({
            type: d,
            name: u,
            attribute: {
              ...o,
              ...h
            }
          });
        });
      });
    });
  }), r.forEach((s) => {
    const a = {
      name: s.name,
      options: s.options,
      storage: s.storage
    }, l = Me(s, "addAttributes", a);
    if (!l)
      return;
    const c = l();
    Object.entries(c).forEach(([f, d]) => {
      const u = {
        ...o,
        ...d
      };
      typeof (u == null ? void 0 : u.default) == "function" && (u.default = u.default()), u != null && u.isRequired && (u == null ? void 0 : u.default) === void 0 && delete u.default, e.push({
        type: s.name,
        name: f,
        attribute: u
      });
    });
  }), e;
}
function Cn(t, e) {
  if (typeof t == "string") {
    if (!e.nodes[t])
      throw Error(`There is no node type named '${t}'. Maybe you forgot to add the extension?`);
    return e.nodes[t];
  }
  return t;
}
function gi(...t) {
  return t.filter((e) => !!e).reduce((e, n) => {
    const i = { ...e };
    return Object.entries(n).forEach(([r, o]) => {
      if (!i[r]) {
        i[r] = o;
        return;
      }
      if (r === "class") {
        const a = o ? o.split(" ") : [], l = i[r] ? i[r].split(" ") : [], c = a.filter((f) => !l.includes(f));
        i[r] = [...l, ...c].join(" ");
      } else if (r === "style") {
        const a = o ? o.split(";").map((f) => f.trim()).filter(Boolean) : [], l = i[r] ? i[r].split(";").map((f) => f.trim()).filter(Boolean) : [], c = /* @__PURE__ */ new Map();
        l.forEach((f) => {
          const [d, u] = f.split(":").map((h) => h.trim());
          c.set(d, u);
        }), a.forEach((f) => {
          const [d, u] = f.split(":").map((h) => h.trim());
          c.set(d, u);
        }), i[r] = Array.from(c.entries()).map(([f, d]) => `${f}: ${d}`).join("; ");
      } else
        i[r] = o;
    }), i;
  }, {});
}
function $u(t, e) {
  return e.filter((n) => n.type === t.type.name).filter((n) => n.attribute.rendered).map((n) => n.attribute.renderHTML ? n.attribute.renderHTML(t.attrs) || {} : {
    [n.name]: t.attrs[n.name]
  }).reduce((n, i) => gi(n, i), {});
}
function k6(t) {
  return typeof t == "function";
}
function ht(t, e = void 0, ...n) {
  return k6(t) ? e ? t.bind(e)(...n) : t(...n) : t;
}
function hR(t = {}) {
  return Object.keys(t).length === 0 && t.constructor === Object;
}
function pR(t) {
  return typeof t != "string" ? t : t.match(/^[+-]?(?:\d*\.)?\d+$/) ? Number(t) : t === "true" ? !0 : t === "false" ? !1 : t;
}
function C2(t, e) {
  return "style" in t ? t : {
    ...t,
    getAttrs: (n) => {
      const i = t.getAttrs ? t.getAttrs(n) : t.attrs;
      if (i === !1)
        return !1;
      const r = e.reduce((o, s) => {
        const a = s.attribute.parseHTML ? s.attribute.parseHTML(n) : pR(n.getAttribute(s.name));
        return a == null ? o : {
          ...o,
          [s.name]: a
        };
      }, {});
      return { ...i, ...r };
    }
  };
}
function S2(t) {
  return Object.fromEntries(
    // @ts-ignore
    Object.entries(t).filter(([e, n]) => e === "attrs" && hR(n) ? !1 : n != null)
  );
}
function w6(t, e) {
  var n;
  const i = b6(t), { nodeExtensions: r, markExtensions: o } = kh(t), s = (n = r.find((c) => Me(c, "topNode"))) === null || n === void 0 ? void 0 : n.name, a = Object.fromEntries(r.map((c) => {
    const f = i.filter((y) => y.type === c.name), d = {
      name: c.name,
      options: c.options,
      storage: c.storage,
      editor: e
    }, u = t.reduce((y, C) => {
      const k = Me(C, "extendNodeSchema", d);
      return {
        ...y,
        ...k ? k(c) : {}
      };
    }, {}), h = S2({
      ...u,
      content: ht(Me(c, "content", d)),
      marks: ht(Me(c, "marks", d)),
      group: ht(Me(c, "group", d)),
      inline: ht(Me(c, "inline", d)),
      atom: ht(Me(c, "atom", d)),
      selectable: ht(Me(c, "selectable", d)),
      draggable: ht(Me(c, "draggable", d)),
      code: ht(Me(c, "code", d)),
      whitespace: ht(Me(c, "whitespace", d)),
      defining: ht(Me(c, "defining", d)),
      isolating: ht(Me(c, "isolating", d)),
      attrs: Object.fromEntries(f.map((y) => {
        var C;
        return [y.name, { default: (C = y == null ? void 0 : y.attribute) === null || C === void 0 ? void 0 : C.default }];
      }))
    }), p = ht(Me(c, "parseHTML", d));
    p && (h.parseDOM = p.map((y) => C2(y, f)));
    const m = Me(c, "renderHTML", d);
    m && (h.toDOM = (y) => m({
      node: y,
      HTMLAttributes: $u(y, f)
    }));
    const v = Me(c, "renderText", d);
    return v && (h.toText = v), [c.name, h];
  })), l = Object.fromEntries(o.map((c) => {
    const f = i.filter((v) => v.type === c.name), d = {
      name: c.name,
      options: c.options,
      storage: c.storage,
      editor: e
    }, u = t.reduce((v, y) => {
      const C = Me(y, "extendMarkSchema", d);
      return {
        ...v,
        ...C ? C(c) : {}
      };
    }, {}), h = S2({
      ...u,
      inclusive: ht(Me(c, "inclusive", d)),
      excludes: ht(Me(c, "excludes", d)),
      group: ht(Me(c, "group", d)),
      spanning: ht(Me(c, "spanning", d)),
      code: ht(Me(c, "code", d)),
      attrs: Object.fromEntries(f.map((v) => {
        var y;
        return [v.name, { default: (y = v == null ? void 0 : v.attribute) === null || y === void 0 ? void 0 : y.default }];
      }))
    }), p = ht(Me(c, "parseHTML", d));
    p && (h.parseDOM = p.map((v) => C2(v, f)));
    const m = Me(c, "renderHTML", d);
    return m && (h.toDOM = (v) => m({
      mark: v,
      HTMLAttributes: $u(v, f)
    })), [c.name, h];
  }));
  return new u5({
    topNode: s,
    nodes: a,
    marks: l
  });
}
function qp(t, e) {
  return e.nodes[t] || e.marks[t] || null;
}
function x2(t, e) {
  return Array.isArray(e) ? e.some((n) => (typeof n == "string" ? n : n.name) === t.name) : e;
}
const mR = (t, e = 500) => {
  let n = "";
  const i = t.parentOffset;
  return t.parent.nodesBetween(Math.max(0, i - e), i, (r, o, s, a) => {
    var l, c;
    const f = ((c = (l = r.type.spec).toText) === null || c === void 0 ? void 0 : c.call(l, {
      node: r,
      pos: o,
      parent: s,
      index: a
    })) || r.textContent || "%leaf%";
    n += r.isAtom && !r.isText ? f : f.slice(0, Math.max(0, i - o));
  }), n;
};
function Py(t) {
  return Object.prototype.toString.call(t) === "[object RegExp]";
}
class ml {
  constructor(e) {
    this.find = e.find, this.handler = e.handler;
  }
}
const gR = (t, e) => {
  if (Py(e))
    return e.exec(t);
  const n = e(t);
  if (!n)
    return null;
  const i = [n.text];
  return i.index = n.index, i.input = t, i.data = n.data, n.replaceWith && (n.text.includes(n.replaceWith) || console.warn('[tiptap warn]: "inputRuleMatch.replaceWith" must be part of "inputRuleMatch.text".'), i.push(n.replaceWith)), i;
};
function id(t) {
  var e;
  const { editor: n, from: i, to: r, text: o, rules: s, plugin: a } = t, { view: l } = n;
  if (l.composing)
    return !1;
  const c = l.state.doc.resolve(i);
  if (
    // check for code node
    c.parent.type.spec.code || !((e = c.nodeBefore || c.nodeAfter) === null || e === void 0) && e.marks.find((u) => u.type.spec.code)
  )
    return !1;
  let f = !1;
  const d = mR(c) + o;
  return s.forEach((u) => {
    if (f)
      return;
    const h = gR(d, u.find);
    if (!h)
      return;
    const p = l.state.tr, m = vh({
      state: l.state,
      transaction: p
    }), v = {
      from: i - (h[0].length - o.length),
      to: r
    }, { commands: y, chain: C, can: k } = new bh({
      editor: n,
      state: m
    });
    u.handler({
      state: m,
      range: v,
      match: h,
      commands: y,
      chain: C,
      can: k
    }) === null || !p.steps.length || (p.setMeta(a, {
      transform: p,
      from: i,
      to: r,
      text: o
    }), l.dispatch(p), f = !0);
  }), f;
}
function yR(t) {
  const { editor: e, rules: n } = t, i = new mt({
    state: {
      init() {
        return null;
      },
      apply(r, o) {
        const s = r.getMeta(i);
        if (s)
          return s;
        const a = r.getMeta("applyInputRules");
        return !!a && setTimeout(() => {
          const { from: c, text: f } = a, d = c + f.length;
          id({
            editor: e,
            from: c,
            to: d,
            text: f,
            rules: n,
            plugin: i
          });
        }), r.selectionSet || r.docChanged ? null : o;
      }
    },
    props: {
      handleTextInput(r, o, s, a) {
        return id({
          editor: e,
          from: o,
          to: s,
          text: a,
          rules: n,
          plugin: i
        });
      },
      handleDOMEvents: {
        compositionend: (r) => (setTimeout(() => {
          const { $cursor: o } = r.state.selection;
          o && id({
            editor: e,
            from: o.pos,
            to: o.pos,
            text: "",
            rules: n,
            plugin: i
          });
        }), !1)
      },
      // add support for input rules to trigger on enter
      // this is useful for example for code blocks
      handleKeyDown(r, o) {
        if (o.key !== "Enter")
          return !1;
        const { $cursor: s } = r.state.selection;
        return s ? id({
          editor: e,
          from: s.pos,
          to: s.pos,
          text: `
`,
          rules: n,
          plugin: i
        }) : !1;
      }
    },
    // @ts-ignore
    isInputRules: !0
  });
  return i;
}
function vR(t) {
  return Object.prototype.toString.call(t).slice(8, -1);
}
function rd(t) {
  return vR(t) !== "Object" ? !1 : t.constructor === Object && Object.getPrototypeOf(t) === Object.prototype;
}
function wh(t, e) {
  const n = { ...t };
  return rd(t) && rd(e) && Object.keys(e).forEach((i) => {
    rd(e[i]) && rd(t[i]) ? n[i] = wh(t[i], e[i]) : n[i] = e[i];
  }), n;
}
class Fi {
  constructor(e = {}) {
    this.type = "mark", this.name = "mark", this.parent = null, this.child = null, this.config = {
      name: this.name,
      defaultOptions: {}
    }, this.config = {
      ...this.config,
      ...e
    }, this.name = this.config.name, e.defaultOptions && Object.keys(e.defaultOptions).length > 0 && console.warn(`[tiptap warn]: BREAKING CHANGE: "defaultOptions" is deprecated. Please use "addOptions" instead. Found in extension: "${this.name}".`), this.options = this.config.defaultOptions, this.config.addOptions && (this.options = ht(Me(this, "addOptions", {
      name: this.name
    }))), this.storage = ht(Me(this, "addStorage", {
      name: this.name,
      options: this.options
    })) || {};
  }
  static create(e = {}) {
    return new Fi(e);
  }
  configure(e = {}) {
    const n = this.extend({
      ...this.config,
      addOptions: () => wh(this.options, e)
    });
    return n.name = this.name, n.parent = this.parent, n;
  }
  extend(e = {}) {
    const n = new Fi(e);
    return n.parent = this, this.child = n, n.name = e.name ? e.name : n.parent.name, e.defaultOptions && Object.keys(e.defaultOptions).length > 0 && console.warn(`[tiptap warn]: BREAKING CHANGE: "defaultOptions" is deprecated. Please use "addOptions" instead. Found in extension: "${n.name}".`), n.options = ht(Me(n, "addOptions", {
      name: n.name
    })), n.storage = ht(Me(n, "addStorage", {
      name: n.name,
      options: n.options
    })), n;
  }
  static handleExit({ editor: e, mark: n }) {
    const { tr: i } = e.state, r = e.state.selection.$from;
    if (r.pos === r.end()) {
      const s = r.marks();
      if (!!!s.find((c) => (c == null ? void 0 : c.type.name) === n.name))
        return !1;
      const l = s.find((c) => (c == null ? void 0 : c.type.name) === n.name);
      return l && i.removeStoredMark(l), i.insertText(" ", r.pos), e.view.dispatch(i), !0;
    }
    return !1;
  }
}
function bR(t) {
  return typeof t == "number";
}
class kR {
  constructor(e) {
    this.find = e.find, this.handler = e.handler;
  }
}
const wR = (t, e, n) => {
  if (Py(e))
    return [...t.matchAll(e)];
  const i = e(t, n);
  return i ? i.map((r) => {
    const o = [r.text];
    return o.index = r.index, o.input = t, o.data = r.data, r.replaceWith && (r.text.includes(r.replaceWith) || console.warn('[tiptap warn]: "pasteRuleMatch.replaceWith" must be part of "pasteRuleMatch.text".'), o.push(r.replaceWith)), o;
  }) : [];
};
function _R(t) {
  const { editor: e, state: n, from: i, to: r, rule: o, pasteEvent: s, dropEvent: a } = t, { commands: l, chain: c, can: f } = new bh({
    editor: e,
    state: n
  }), d = [];
  return n.doc.nodesBetween(i, r, (h, p) => {
    if (!h.isTextblock || h.type.spec.code)
      return;
    const m = Math.max(i, p), v = Math.min(r, p + h.content.size), y = h.textBetween(m - p, v - p, void 0, "￼");
    wR(y, o.find, s).forEach((k) => {
      if (k.index === void 0)
        return;
      const _ = m + k.index + 1, S = _ + k[0].length, E = {
        from: n.tr.mapping.map(_),
        to: n.tr.mapping.map(S)
      }, x = o.handler({
        state: n,
        range: E,
        match: k,
        commands: l,
        chain: c,
        can: f,
        pasteEvent: s,
        dropEvent: a
      });
      d.push(x);
    });
  }), d.every((h) => h !== null);
}
const ER = (t) => {
  var e;
  const n = new ClipboardEvent("paste", {
    clipboardData: new DataTransfer()
  });
  return (e = n.clipboardData) === null || e === void 0 || e.setData("text/html", t), n;
};
function TR(t) {
  const { editor: e, rules: n } = t;
  let i = null, r = !1, o = !1, s = typeof ClipboardEvent < "u" ? new ClipboardEvent("paste") : null, a = typeof DragEvent < "u" ? new DragEvent("drop") : null;
  const l = ({ state: f, from: d, to: u, rule: h, pasteEvt: p }) => {
    const m = f.tr, v = vh({
      state: f,
      transaction: m
    });
    if (!(!_R({
      editor: e,
      state: v,
      from: Math.max(d - 1, 0),
      to: u.b - 1,
      rule: h,
      pasteEvent: p,
      dropEvent: a
    }) || !m.steps.length))
      return a = typeof DragEvent < "u" ? new DragEvent("drop") : null, s = typeof ClipboardEvent < "u" ? new ClipboardEvent("paste") : null, m;
  };
  return n.map((f) => new mt({
    // we register a global drag handler to track the current drag source element
    view(d) {
      const u = (h) => {
        var p;
        i = !((p = d.dom.parentElement) === null || p === void 0) && p.contains(h.target) ? d.dom.parentElement : null;
      };
      return window.addEventListener("dragstart", u), {
        destroy() {
          window.removeEventListener("dragstart", u);
        }
      };
    },
    props: {
      handleDOMEvents: {
        drop: (d, u) => (o = i === d.dom.parentElement, a = u, !1),
        paste: (d, u) => {
          var h;
          const p = (h = u.clipboardData) === null || h === void 0 ? void 0 : h.getData("text/html");
          return s = u, r = !!(p != null && p.includes("data-pm-slice")), !1;
        }
      }
    },
    appendTransaction: (d, u, h) => {
      const p = d[0], m = p.getMeta("uiEvent") === "paste" && !r, v = p.getMeta("uiEvent") === "drop" && !o, y = p.getMeta("applyPasteRules"), C = !!y;
      if (!m && !v && !C)
        return;
      if (C) {
        const { from: S, text: E } = y, x = S + E.length, N = ER(E);
        return l({
          rule: f,
          state: h,
          from: S,
          to: { b: x },
          pasteEvt: N
        });
      }
      const k = u.doc.content.findDiffStart(h.doc.content), _ = u.doc.content.findDiffEnd(h.doc.content);
      if (!(!bR(k) || !_ || k === _.b))
        return l({
          rule: f,
          state: h,
          from: k,
          to: _,
          pasteEvt: s
        });
    }
  }));
}
function CR(t) {
  const e = t.filter((n, i) => t.indexOf(n) !== i);
  return Array.from(new Set(e));
}
class Ks {
  constructor(e, n) {
    this.splittableMarks = [], this.editor = n, this.extensions = Ks.resolve(e), this.schema = w6(this.extensions, n), this.setupExtensions();
  }
  /**
   * Returns a flattened and sorted extension list while
   * also checking for duplicated extensions and warns the user.
   * @param extensions An array of Tiptap extensions
   * @returns An flattened and sorted array of Tiptap extensions
   */
  static resolve(e) {
    const n = Ks.sort(Ks.flatten(e)), i = CR(n.map((r) => r.name));
    return i.length && console.warn(`[tiptap warn]: Duplicate extension names found: [${i.map((r) => `'${r}'`).join(", ")}]. This can lead to issues.`), n;
  }
  /**
   * Create a flattened array of extensions by traversing the `addExtensions` field.
   * @param extensions An array of Tiptap extensions
   * @returns A flattened array of Tiptap extensions
   */
  static flatten(e) {
    return e.map((n) => {
      const i = {
        name: n.name,
        options: n.options,
        storage: n.storage
      }, r = Me(n, "addExtensions", i);
      return r ? [n, ...this.flatten(r())] : n;
    }).flat(10);
  }
  /**
   * Sort extensions by priority.
   * @param extensions An array of Tiptap extensions
   * @returns A sorted array of Tiptap extensions by priority
   */
  static sort(e) {
    return e.sort((i, r) => {
      const o = Me(i, "priority") || 100, s = Me(r, "priority") || 100;
      return o > s ? -1 : o < s ? 1 : 0;
    });
  }
  /**
   * Get all commands from the extensions.
   * @returns An object with all commands where the key is the command name and the value is the command function
   */
  get commands() {
    return this.extensions.reduce((e, n) => {
      const i = {
        name: n.name,
        options: n.options,
        storage: n.storage,
        editor: this.editor,
        type: qp(n.name, this.schema)
      }, r = Me(n, "addCommands", i);
      return r ? {
        ...e,
        ...r()
      } : e;
    }, {});
  }
  /**
   * Get all registered Prosemirror plugins from the extensions.
   * @returns An array of Prosemirror plugins
   */
  get plugins() {
    const { editor: e } = this, n = Ks.sort([...this.extensions].reverse()), i = [], r = [], o = n.map((s) => {
      const a = {
        name: s.name,
        options: s.options,
        storage: s.storage,
        editor: e,
        type: qp(s.name, this.schema)
      }, l = [], c = Me(s, "addKeyboardShortcuts", a);
      let f = {};
      if (s.type === "mark" && Me(s, "exitable", a) && (f.ArrowRight = () => Fi.handleExit({ editor: e, mark: s })), c) {
        const m = Object.fromEntries(Object.entries(c()).map(([v, y]) => [v, () => y({ editor: e })]));
        f = { ...f, ...m };
      }
      const d = $O(f);
      l.push(d);
      const u = Me(s, "addInputRules", a);
      x2(s, e.options.enableInputRules) && u && i.push(...u());
      const h = Me(s, "addPasteRules", a);
      x2(s, e.options.enablePasteRules) && h && r.push(...h());
      const p = Me(s, "addProseMirrorPlugins", a);
      if (p) {
        const m = p();
        l.push(...m);
      }
      return l;
    }).flat();
    return [
      yR({
        editor: e,
        rules: i
      }),
      ...TR({
        editor: e,
        rules: r
      }),
      ...o
    ];
  }
  /**
   * Get all attributes from the extensions.
   * @returns An array of attributes
   */
  get attributes() {
    return b6(this.extensions);
  }
  /**
   * Get all node views from the extensions.
   * @returns An object with all node views where the key is the node name and the value is the node view function
   */
  get nodeViews() {
    const { editor: e } = this, { nodeExtensions: n } = kh(this.extensions);
    return Object.fromEntries(n.filter((i) => !!Me(i, "addNodeView")).map((i) => {
      const r = this.attributes.filter((l) => l.type === i.name), o = {
        name: i.name,
        options: i.options,
        storage: i.storage,
        editor: e,
        type: Cn(i.name, this.schema)
      }, s = Me(i, "addNodeView", o);
      if (!s)
        return [];
      const a = (l, c, f, d, u) => {
        const h = $u(l, r);
        return s()({
          // pass-through
          node: l,
          view: c,
          getPos: f,
          decorations: d,
          innerDecorations: u,
          // tiptap-specific
          editor: e,
          extension: i,
          HTMLAttributes: h
        });
      };
      return [i.name, a];
    }));
  }
  /**
   * Go through all extensions, create extension storages & setup marks
   * & bind editor event listener.
   */
  setupExtensions() {
    this.extensions.forEach((e) => {
      var n;
      this.editor.extensionStorage[e.name] = e.storage;
      const i = {
        name: e.name,
        options: e.options,
        storage: e.storage,
        editor: this.editor,
        type: qp(e.name, this.schema)
      };
      e.type === "mark" && (!((n = ht(Me(e, "keepOnSplit", i))) !== null && n !== void 0) || n) && this.splittableMarks.push(e.name);
      const r = Me(e, "onBeforeCreate", i), o = Me(e, "onCreate", i), s = Me(e, "onUpdate", i), a = Me(e, "onSelectionUpdate", i), l = Me(e, "onTransaction", i), c = Me(e, "onFocus", i), f = Me(e, "onBlur", i), d = Me(e, "onDestroy", i);
      r && this.editor.on("beforeCreate", r), o && this.editor.on("create", o), s && this.editor.on("update", s), a && this.editor.on("selectionUpdate", a), l && this.editor.on("transaction", l), c && this.editor.on("focus", c), f && this.editor.on("blur", f), d && this.editor.on("destroy", d);
    });
  }
}
class At {
  constructor(e = {}) {
    this.type = "extension", this.name = "extension", this.parent = null, this.child = null, this.config = {
      name: this.name,
      defaultOptions: {}
    }, this.config = {
      ...this.config,
      ...e
    }, this.name = this.config.name, e.defaultOptions && Object.keys(e.defaultOptions).length > 0 && console.warn(`[tiptap warn]: BREAKING CHANGE: "defaultOptions" is deprecated. Please use "addOptions" instead. Found in extension: "${this.name}".`), this.options = this.config.defaultOptions, this.config.addOptions && (this.options = ht(Me(this, "addOptions", {
      name: this.name
    }))), this.storage = ht(Me(this, "addStorage", {
      name: this.name,
      options: this.options
    })) || {};
  }
  static create(e = {}) {
    return new At(e);
  }
  configure(e = {}) {
    const n = this.extend({
      ...this.config,
      addOptions: () => wh(this.options, e)
    });
    return n.name = this.name, n.parent = this.parent, n;
  }
  extend(e = {}) {
    const n = new At({ ...this.config, ...e });
    return n.parent = this, this.child = n, n.name = e.name ? e.name : n.parent.name, e.defaultOptions && Object.keys(e.defaultOptions).length > 0 && console.warn(`[tiptap warn]: BREAKING CHANGE: "defaultOptions" is deprecated. Please use "addOptions" instead. Found in extension: "${n.name}".`), n.options = ht(Me(n, "addOptions", {
      name: n.name
    })), n.storage = ht(Me(n, "addStorage", {
      name: n.name,
      options: n.options
    })), n;
  }
}
function _6(t, e, n) {
  const { from: i, to: r } = e, { blockSeparator: o = `

`, textSerializers: s = {} } = n || {};
  let a = "";
  return t.nodesBetween(i, r, (l, c, f, d) => {
    var u;
    l.isBlock && c > i && (a += o);
    const h = s == null ? void 0 : s[l.type.name];
    if (h)
      return f && (a += h({
        node: l,
        pos: c,
        parent: f,
        index: d,
        range: e
      })), !1;
    l.isText && (a += (u = l == null ? void 0 : l.text) === null || u === void 0 ? void 0 : u.slice(Math.max(i, c) - c, r - c));
  }), a;
}
function E6(t) {
  return Object.fromEntries(Object.entries(t.nodes).filter(([, e]) => e.spec.toText).map(([e, n]) => [e, n.spec.toText]));
}
const T6 = At.create({
  name: "clipboardTextSerializer",
  addOptions() {
    return {
      blockSeparator: void 0
    };
  },
  addProseMirrorPlugins() {
    return [
      new mt({
        key: new Ct("clipboardTextSerializer"),
        props: {
          clipboardTextSerializer: () => {
            const { editor: t } = this, { state: e, schema: n } = t, { doc: i, selection: r } = e, { ranges: o } = r, s = Math.min(...o.map((f) => f.$from.pos)), a = Math.max(...o.map((f) => f.$to.pos)), l = E6(n);
            return _6(i, { from: s, to: a }, {
              ...this.options.blockSeparator !== void 0 ? { blockSeparator: this.options.blockSeparator } : {},
              textSerializers: l
            });
          }
        }
      })
    ];
  }
}), SR = () => ({ editor: t, view: e }) => (requestAnimationFrame(() => {
  var n;
  t.isDestroyed || (e.dom.blur(), (n = window == null ? void 0 : window.getSelection()) === null || n === void 0 || n.removeAllRanges());
}), !0), xR = (t = !1) => ({ commands: e }) => e.setContent("", t), AR = () => ({ state: t, tr: e, dispatch: n }) => {
  const { selection: i } = e, { ranges: r } = i;
  return n && r.forEach(({ $from: o, $to: s }) => {
    t.doc.nodesBetween(o.pos, s.pos, (a, l) => {
      if (a.type.isText)
        return;
      const { doc: c, mapping: f } = e, d = c.resolve(f.map(l)), u = c.resolve(f.map(l + a.nodeSize)), h = d.blockRange(u);
      if (!h)
        return;
      const p = Nl(h);
      if (a.type.isTextblock) {
        const { defaultType: m } = d.parent.contentMatchAt(d.index());
        e.setNodeMarkup(h.start, m);
      }
      (p || p === 0) && e.lift(h, p);
    });
  }), !0;
}, MR = (t) => (e) => t(e), NR = () => ({ state: t, dispatch: e }) => ZO(t, e), OR = (t, e) => ({ editor: n, tr: i }) => {
  const { state: r } = n, o = r.doc.slice(t.from, t.to);
  i.deleteRange(t.from, t.to);
  const s = i.mapping.map(e);
  return i.insert(s, o.content), i.setSelection(new ze(i.doc.resolve(s - 1))), !0;
}, RR = () => ({ tr: t, dispatch: e }) => {
  const { selection: n } = t, i = n.$anchor.node();
  if (i.content.size > 0)
    return !1;
  const r = t.selection.$anchor;
  for (let o = r.depth; o > 0; o -= 1)
    if (r.node(o).type === i.type) {
      if (e) {
        const a = r.before(o), l = r.after(o);
        t.delete(a, l).scrollIntoView();
      }
      return !0;
    }
  return !1;
}, IR = (t) => ({ tr: e, state: n, dispatch: i }) => {
  const r = Cn(t, n.schema), o = e.selection.$anchor;
  for (let s = o.depth; s > 0; s -= 1)
    if (o.node(s).type === r) {
      if (i) {
        const l = o.before(s), c = o.after(s);
        e.delete(l, c).scrollIntoView();
      }
      return !0;
    }
  return !1;
}, LR = (t) => ({ tr: e, dispatch: n }) => {
  const { from: i, to: r } = t;
  return n && e.delete(i, r), !0;
}, DR = () => ({ state: t, dispatch: e }) => jO(t, e), PR = () => ({ commands: t }) => t.keyboardShortcut("Enter"), FR = () => ({ state: t, dispatch: e }) => QO(t, e);
function ju(t, e, n = { strict: !0 }) {
  const i = Object.keys(e);
  return i.length ? i.every((r) => n.strict ? e[r] === t[r] : Py(e[r]) ? e[r].test(t[r]) : e[r] === t[r]) : !0;
}
function q0(t, e, n = {}) {
  return t.find((i) => i.type === e && ju(i.attrs, n));
}
function BR(t, e, n = {}) {
  return !!q0(t, e, n);
}
function Zc(t, e, n = {}) {
  if (!t || !e)
    return;
  let i = t.parent.childAfter(t.parentOffset);
  if (t.parentOffset === i.offset && i.offset !== 0 && (i = t.parent.childBefore(t.parentOffset)), !i.node)
    return;
  const r = q0([...i.node.marks], e, n);
  if (!r)
    return;
  let o = i.index, s = t.start() + i.offset, a = o + 1, l = s + i.node.nodeSize;
  for (q0([...i.node.marks], e, n); o > 0 && r.isInSet(t.parent.child(o - 1).marks); )
    o -= 1, s -= t.parent.child(o).nodeSize;
  for (; a < t.parent.childCount && BR([...t.parent.child(a).marks], e, n); )
    l += t.parent.child(a).nodeSize, a += 1;
  return {
    from: s,
    to: l
  };
}
function Ts(t, e) {
  if (typeof t == "string") {
    if (!e.marks[t])
      throw Error(`There is no mark type named '${t}'. Maybe you forgot to add the extension?`);
    return e.marks[t];
  }
  return t;
}
const HR = (t, e = {}) => ({ tr: n, state: i, dispatch: r }) => {
  const o = Ts(t, i.schema), { doc: s, selection: a } = n, { $from: l, from: c, to: f } = a;
  if (r) {
    const d = Zc(l, o, e);
    if (d && d.from <= c && d.to >= f) {
      const u = ze.create(s, d.from, d.to);
      n.setSelection(u);
    }
  }
  return !0;
}, $R = (t) => (e) => {
  const n = typeof t == "function" ? t(e) : t;
  for (let i = 0; i < n.length; i += 1)
    if (n[i](e))
      return !0;
  return !1;
};
function Fy(t) {
  return t instanceof ze;
}
function so(t = 0, e = 0, n = 0) {
  return Math.min(Math.max(t, e), n);
}
function C6(t, e = null) {
  if (!e)
    return null;
  const n = $e.atStart(t), i = $e.atEnd(t);
  if (e === "start" || e === !0)
    return n;
  if (e === "end")
    return i;
  const r = n.from, o = i.to;
  return e === "all" ? ze.create(t, so(0, r, o), so(t.content.size, r, o)) : ze.create(t, so(e, r, o), so(e, r, o));
}
function _h() {
  return [
    "iPad Simulator",
    "iPhone Simulator",
    "iPod Simulator",
    "iPad",
    "iPhone",
    "iPod"
  ].includes(navigator.platform) || navigator.userAgent.includes("Mac") && "ontouchend" in document;
}
const jR = (t = null, e = {}) => ({ editor: n, view: i, tr: r, dispatch: o }) => {
  e = {
    scrollIntoView: !0,
    ...e
  };
  const s = () => {
    _h() && i.dom.focus(), requestAnimationFrame(() => {
      n.isDestroyed || (i.focus(), e != null && e.scrollIntoView && n.commands.scrollIntoView());
    });
  };
  if (i.hasFocus() && t === null || t === !1)
    return !0;
  if (o && t === null && !Fy(n.state.selection))
    return s(), !0;
  const a = C6(r.doc, t) || n.state.selection, l = n.state.selection.eq(a);
  return o && (l || r.setSelection(a), l && r.storedMarks && r.setStoredMarks(r.storedMarks), s()), !0;
}, zR = (t, e) => (n) => t.every((i, r) => e(i, { ...n, index: r })), UR = (t, e) => ({ tr: n, commands: i }) => i.insertContentAt({ from: n.selection.from, to: n.selection.to }, t, e), S6 = (t) => {
  const e = t.childNodes;
  for (let n = e.length - 1; n >= 0; n -= 1) {
    const i = e[n];
    i.nodeType === 3 && i.nodeValue && /^(\n\s\s|\n)$/.test(i.nodeValue) ? t.removeChild(i) : i.nodeType === 1 && S6(i);
  }
  return t;
};
function od(t) {
  const e = `<body>${t}</body>`, n = new window.DOMParser().parseFromString(e, "text/html").body;
  return S6(n);
}
function zu(t, e, n) {
  n = {
    slice: !0,
    parseOptions: {},
    ...n
  };
  const i = typeof t == "object" && t !== null, r = typeof t == "string";
  if (i)
    try {
      if (Array.isArray(t) && t.length > 0)
        return ie.fromArray(t.map((a) => e.nodeFromJSON(a)));
      const s = e.nodeFromJSON(t);
      return n.errorOnInvalidContent && s.check(), s;
    } catch (o) {
      if (n.errorOnInvalidContent)
        throw new Error("[tiptap error]: Invalid JSON content", { cause: o });
      return console.warn("[tiptap warn]: Invalid content.", "Passed value:", t, "Error:", o), zu("", e, n);
    }
  if (r) {
    if (n.errorOnInvalidContent) {
      let s = !1, a = "";
      const l = new u5({
        topNode: e.spec.topNode,
        marks: e.spec.marks,
        // Prosemirror's schemas are executed such that: the last to execute, matches last
        // This means that we can add a catch-all node at the end of the schema to catch any content that we don't know how to handle
        nodes: e.spec.nodes.append({
          __tiptap__private__unknown__catch__all__node: {
            content: "inline*",
            group: "block",
            parseDOM: [
              {
                tag: "*",
                getAttrs: (c) => (s = !0, a = typeof c == "string" ? c : c.outerHTML, null)
              }
            ]
          }
        })
      });
      if (n.slice ? Xa.fromSchema(l).parseSlice(od(t), n.parseOptions) : Xa.fromSchema(l).parse(od(t), n.parseOptions), n.errorOnInvalidContent && s)
        throw new Error("[tiptap error]: Invalid HTML content", { cause: new Error(`Invalid element found: ${a}`) });
    }
    const o = Xa.fromSchema(e);
    return n.slice ? o.parseSlice(od(t), n.parseOptions).content : o.parse(od(t), n.parseOptions);
  }
  return zu("", e, n);
}
function x6(t, e, n) {
  const i = t.steps.length - 1;
  if (i < e)
    return;
  const r = t.steps[i];
  if (!(r instanceof wn || r instanceof En))
    return;
  const o = t.mapping.maps[i];
  let s = 0;
  o.forEach((a, l, c, f) => {
    s === 0 && (s = f);
  }), t.setSelection($e.near(t.doc.resolve(s), n));
}
const VR = (t) => !("type" in t), WR = (t, e, n) => ({ tr: i, dispatch: r, editor: o }) => {
  var s;
  if (r) {
    n = {
      parseOptions: {},
      updateSelection: !0,
      applyInputRules: !1,
      applyPasteRules: !1,
      ...n
    };
    let a;
    try {
      a = zu(e, o.schema, {
        parseOptions: {
          preserveWhitespace: "full",
          ...n.parseOptions
        },
        errorOnInvalidContent: (s = n.errorOnInvalidContent) !== null && s !== void 0 ? s : o.options.enableContentCheck
      });
    } catch (p) {
      return o.emit("contentError", {
        editor: o,
        error: p,
        disableCollaboration: () => {
          console.error("[tiptap error]: Unable to disable collaboration at this point in time");
        }
      }), !1;
    }
    let { from: l, to: c } = typeof t == "number" ? { from: t, to: t } : { from: t.from, to: t.to }, f = !0, d = !0;
    if ((VR(a) ? a : [a]).forEach((p) => {
      p.check(), f = f ? p.isText && p.marks.length === 0 : !1, d = d ? p.isBlock : !1;
    }), l === c && d) {
      const { parent: p } = i.doc.resolve(l);
      p.isTextblock && !p.type.spec.code && !p.childCount && (l -= 1, c += 1);
    }
    let h;
    f ? (Array.isArray(e) ? h = e.map((p) => p.text || "").join("") : typeof e == "object" && e && e.text ? h = e.text : h = e, i.insertText(h, l, c)) : (h = a, i.replaceWith(l, c, h)), n.updateSelection && x6(i, i.steps.length - 1, -1), n.applyInputRules && i.setMeta("applyInputRules", { from: l, text: h }), n.applyPasteRules && i.setMeta("applyPasteRules", { from: l, text: h });
  }
  return !0;
}, qR = () => ({ state: t, dispatch: e }) => KO(t, e), GR = () => ({ state: t, dispatch: e }) => YO(t, e), KR = () => ({ state: t, dispatch: e }) => zO(t, e), YR = () => ({ state: t, dispatch: e }) => qO(t, e), JR = () => ({ state: t, dispatch: e, tr: n }) => {
  try {
    const i = uh(t.doc, t.selection.$from.pos, -1);
    return i == null ? !1 : (n.join(i, 2), e && e(n), !0);
  } catch {
    return !1;
  }
}, XR = () => ({ state: t, dispatch: e, tr: n }) => {
  try {
    const i = uh(t.doc, t.selection.$from.pos, 1);
    return i == null ? !1 : (n.join(i, 2), e && e(n), !0);
  } catch {
    return !1;
  }
}, QR = () => ({ state: t, dispatch: e }) => UO(t, e), ZR = () => ({ state: t, dispatch: e }) => VO(t, e);
function A6() {
  return typeof navigator < "u" ? /Mac/.test(navigator.platform) : !1;
}
function eI(t) {
  const e = t.split(/-(?!$)/);
  let n = e[e.length - 1];
  n === "Space" && (n = " ");
  let i, r, o, s;
  for (let a = 0; a < e.length - 1; a += 1) {
    const l = e[a];
    if (/^(cmd|meta|m)$/i.test(l))
      s = !0;
    else if (/^a(lt)?$/i.test(l))
      i = !0;
    else if (/^(c|ctrl|control)$/i.test(l))
      r = !0;
    else if (/^s(hift)?$/i.test(l))
      o = !0;
    else if (/^mod$/i.test(l))
      _h() || A6() ? s = !0 : r = !0;
    else
      throw new Error(`Unrecognized modifier name: ${l}`);
  }
  return i && (n = `Alt-${n}`), r && (n = `Ctrl-${n}`), s && (n = `Meta-${n}`), o && (n = `Shift-${n}`), n;
}
const tI = (t) => ({ editor: e, view: n, tr: i, dispatch: r }) => {
  const o = eI(t).split(/-(?!$)/), s = o.find((c) => !["Alt", "Ctrl", "Meta", "Shift"].includes(c)), a = new KeyboardEvent("keydown", {
    key: s === "Space" ? " " : s,
    altKey: o.includes("Alt"),
    ctrlKey: o.includes("Ctrl"),
    metaKey: o.includes("Meta"),
    shiftKey: o.includes("Shift"),
    bubbles: !0,
    cancelable: !0
  }), l = e.captureTransaction(() => {
    n.someProp("handleKeyDown", (c) => c(n, a));
  });
  return l == null || l.steps.forEach((c) => {
    const f = c.map(i.mapping);
    f && r && i.maybeStep(f);
  }), !0;
};
function ef(t, e, n = {}) {
  const { from: i, to: r, empty: o } = t.selection, s = e ? Cn(e, t.schema) : null, a = [];
  t.doc.nodesBetween(i, r, (d, u) => {
    if (d.isText)
      return;
    const h = Math.max(i, u), p = Math.min(r, u + d.nodeSize);
    a.push({
      node: d,
      from: h,
      to: p
    });
  });
  const l = r - i, c = a.filter((d) => s ? s.name === d.node.type.name : !0).filter((d) => ju(d.node.attrs, n, { strict: !1 }));
  return o ? !!c.length : c.reduce((d, u) => d + u.to - u.from, 0) >= l;
}
const nI = (t, e = {}) => ({ state: n, dispatch: i }) => {
  const r = Cn(t, n.schema);
  return ef(n, r, e) ? JO(n, i) : !1;
}, iI = () => ({ state: t, dispatch: e }) => eR(t, e), rI = (t) => ({ state: e, dispatch: n }) => {
  const i = Cn(t, e.schema);
  return lR(i)(e, n);
}, oI = () => ({ state: t, dispatch: e }) => XO(t, e);
function Eh(t, e) {
  return e.nodes[t] ? "node" : e.marks[t] ? "mark" : null;
}
function A2(t, e) {
  const n = typeof e == "string" ? [e] : e;
  return Object.keys(t).reduce((i, r) => (n.includes(r) || (i[r] = t[r]), i), {});
}
const sI = (t, e) => ({ tr: n, state: i, dispatch: r }) => {
  let o = null, s = null;
  const a = Eh(typeof t == "string" ? t : t.name, i.schema);
  return a ? (a === "node" && (o = Cn(t, i.schema)), a === "mark" && (s = Ts(t, i.schema)), r && n.selection.ranges.forEach((l) => {
    i.doc.nodesBetween(l.$from.pos, l.$to.pos, (c, f) => {
      o && o === c.type && n.setNodeMarkup(f, void 0, A2(c.attrs, e)), s && c.marks.length && c.marks.forEach((d) => {
        s === d.type && n.addMark(f, f + c.nodeSize, s.create(A2(d.attrs, e)));
      });
    });
  }), !0) : !1;
}, aI = () => ({ tr: t, dispatch: e }) => (e && t.scrollIntoView(), !0), lI = () => ({ tr: t, commands: e }) => e.setTextSelection({
  from: 0,
  to: t.doc.content.size
}), cI = () => ({ state: t, dispatch: e }) => WO(t, e), fI = () => ({ state: t, dispatch: e }) => GO(t, e), dI = () => ({ state: t, dispatch: e }) => tR(t, e), uI = () => ({ state: t, dispatch: e }) => rR(t, e), hI = () => ({ state: t, dispatch: e }) => iR(t, e);
function Uu(t, e, n = {}, i = {}) {
  return zu(t, e, {
    slice: !1,
    parseOptions: n,
    errorOnInvalidContent: i.errorOnInvalidContent
  });
}
const pI = (t, e = !1, n = {}, i = {}) => ({ editor: r, tr: o, dispatch: s, commands: a }) => {
  var l, c;
  const { doc: f } = o;
  if (n.preserveWhitespace !== "full") {
    const d = Uu(t, r.schema, n, {
      errorOnInvalidContent: (l = i.errorOnInvalidContent) !== null && l !== void 0 ? l : r.options.enableContentCheck
    });
    return s && o.replaceWith(0, f.content.size, d).setMeta("preventUpdate", !e), !0;
  }
  return s && o.setMeta("preventUpdate", !e), a.insertContentAt({ from: 0, to: f.content.size }, t, {
    parseOptions: n,
    errorOnInvalidContent: (c = i.errorOnInvalidContent) !== null && c !== void 0 ? c : r.options.enableContentCheck
  });
};
function M6(t, e) {
  const n = Ts(e, t.schema), { from: i, to: r, empty: o } = t.selection, s = [];
  o ? (t.storedMarks && s.push(...t.storedMarks), s.push(...t.selection.$head.marks())) : t.doc.nodesBetween(i, r, (l) => {
    s.push(...l.marks);
  });
  const a = s.find((l) => l.type.name === n.name);
  return a ? { ...a.attrs } : {};
}
function N6(t, e) {
  const n = new _y(t);
  return e.forEach((i) => {
    i.steps.forEach((r) => {
      n.step(r);
    });
  }), n;
}
function mI(t) {
  for (let e = 0; e < t.edgeCount; e += 1) {
    const { type: n } = t.edge(e);
    if (n.isTextblock && !n.hasRequiredAttrs())
      return n;
  }
  return null;
}
function M2(t, e) {
  const n = [];
  return t.descendants((i, r) => {
    e(i) && n.push({
      node: i,
      pos: r
    });
  }), n;
}
function O6(t, e, n) {
  const i = [];
  return t.nodesBetween(e.from, e.to, (r, o) => {
    n(r) && i.push({
      node: r,
      pos: o
    });
  }), i;
}
function gI(t, e) {
  for (let n = t.depth; n > 0; n -= 1) {
    const i = t.node(n);
    if (e(i))
      return {
        pos: n > 0 ? t.before(n) : 0,
        start: t.start(n),
        depth: n,
        node: i
      };
  }
}
function Th(t) {
  return (e) => gI(e.$from, t);
}
function yI(t, e) {
  const n = Eo.fromSchema(e).serializeFragment(t), r = document.implementation.createHTMLDocument().createElement("div");
  return r.appendChild(n), r.innerHTML;
}
function vI(t, e) {
  const n = Ks.resolve(t);
  return w6(n, e);
}
function bI(t, e) {
  const n = {
    from: 0,
    to: t.content.size
  };
  return _6(t, n, e);
}
function kI(t, e) {
  const n = Cn(e, t.schema), { from: i, to: r } = t.selection, o = [];
  t.doc.nodesBetween(i, r, (a) => {
    o.push(a);
  });
  const s = o.reverse().find((a) => a.type.name === n.name);
  return s ? { ...s.attrs } : {};
}
function R6(t, e) {
  const n = Eh(typeof e == "string" ? e : e.name, t.schema);
  return n === "node" ? kI(t, e) : n === "mark" ? M6(t, e) : {};
}
function wI(t, e = JSON.stringify) {
  const n = {};
  return t.filter((i) => {
    const r = e(i);
    return Object.prototype.hasOwnProperty.call(n, r) ? !1 : n[r] = !0;
  });
}
function _I(t) {
  const e = wI(t);
  return e.length === 1 ? e : e.filter((n, i) => !e.filter((o, s) => s !== i).some((o) => n.oldRange.from >= o.oldRange.from && n.oldRange.to <= o.oldRange.to && n.newRange.from >= o.newRange.from && n.newRange.to <= o.newRange.to));
}
function I6(t) {
  const { mapping: e, steps: n } = t, i = [];
  return e.maps.forEach((r, o) => {
    const s = [];
    if (r.ranges.length)
      r.forEach((a, l) => {
        s.push({ from: a, to: l });
      });
    else {
      const { from: a, to: l } = n[o];
      if (a === void 0 || l === void 0)
        return;
      s.push({ from: a, to: l });
    }
    s.forEach(({ from: a, to: l }) => {
      const c = e.slice(o).map(a, -1), f = e.slice(o).map(l), d = e.invert().map(c, -1), u = e.invert().map(f);
      i.push({
        oldRange: {
          from: d,
          to: u
        },
        newRange: {
          from: c,
          to: f
        }
      });
    });
  }), _I(i);
}
function By(t, e, n) {
  const i = [];
  return t === e ? n.resolve(t).marks().forEach((r) => {
    const o = n.resolve(t), s = Zc(o, r.type);
    s && i.push({
      mark: r,
      ...s
    });
  }) : n.nodesBetween(t, e, (r, o) => {
    !r || (r == null ? void 0 : r.nodeSize) === void 0 || i.push(...r.marks.map((s) => ({
      from: o,
      to: o + r.nodeSize,
      mark: s
    })));
  }), i;
}
function nu(t, e, n) {
  return Object.fromEntries(Object.entries(n).filter(([i]) => {
    const r = t.find((o) => o.type === e && o.name === i);
    return r ? r.attribute.keepOnSplit : !1;
  }));
}
function G0(t, e, n = {}) {
  const { empty: i, ranges: r } = t.selection, o = e ? Ts(e, t.schema) : null;
  if (i)
    return !!(t.storedMarks || t.selection.$from.marks()).filter((d) => o ? o.name === d.type.name : !0).find((d) => ju(d.attrs, n, { strict: !1 }));
  let s = 0;
  const a = [];
  if (r.forEach(({ $from: d, $to: u }) => {
    const h = d.pos, p = u.pos;
    t.doc.nodesBetween(h, p, (m, v) => {
      if (!m.isText && !m.marks.length)
        return;
      const y = Math.max(h, v), C = Math.min(p, v + m.nodeSize), k = C - y;
      s += k, a.push(...m.marks.map((_) => ({
        mark: _,
        from: y,
        to: C
      })));
    });
  }), s === 0)
    return !1;
  const l = a.filter((d) => o ? o.name === d.mark.type.name : !0).filter((d) => ju(d.mark.attrs, n, { strict: !1 })).reduce((d, u) => d + u.to - u.from, 0), c = a.filter((d) => o ? d.mark.type !== o && d.mark.type.excludes(o) : !0).reduce((d, u) => d + u.to - u.from, 0);
  return (l > 0 ? l + c : l) >= s;
}
function EI(t, e, n = {}) {
  if (!e)
    return ef(t, null, n) || G0(t, null, n);
  const i = Eh(e, t.schema);
  return i === "node" ? ef(t, e, n) : i === "mark" ? G0(t, e, n) : !1;
}
function N2(t, e) {
  const { nodeExtensions: n } = kh(e), i = n.find((s) => s.name === t);
  if (!i)
    return !1;
  const r = {
    name: i.name,
    options: i.options,
    storage: i.storage
  }, o = ht(Me(i, "group", r));
  return typeof o != "string" ? !1 : o.split(" ").includes("list");
}
function Hy(t, { checkChildren: e = !0, ignoreWhitespace: n = !1 } = {}) {
  var i;
  if (n) {
    if (t.type.name === "hardBreak")
      return !0;
    if (t.isText)
      return /^\s*$/m.test((i = t.text) !== null && i !== void 0 ? i : "");
  }
  if (t.isText)
    return !t.text;
  if (t.isAtom || t.isLeaf)
    return !1;
  if (t.content.childCount === 0)
    return !0;
  if (e) {
    let r = !0;
    return t.content.forEach((o) => {
      r !== !1 && (Hy(o, { ignoreWhitespace: n, checkChildren: e }) || (r = !1));
    }), r;
  }
  return !1;
}
function TI(t) {
  return t instanceof Ie;
}
function K0(t, e, n) {
  const r = t.state.doc.content.size, o = so(e, 0, r), s = so(n, 0, r), a = t.coordsAtPos(o), l = t.coordsAtPos(s, -1), c = Math.min(a.top, l.top), f = Math.max(a.bottom, l.bottom), d = Math.min(a.left, l.left), u = Math.max(a.right, l.right), h = u - d, p = f - c, y = {
    top: c,
    bottom: f,
    left: d,
    right: u,
    width: h,
    height: p,
    x: d,
    y: c
  };
  return {
    ...y,
    toJSON: () => y
  };
}
function CI(t, e, n) {
  var i;
  const { selection: r } = e;
  let o = null;
  if (Fy(r) && (o = r.$cursor), o) {
    const a = (i = t.storedMarks) !== null && i !== void 0 ? i : o.marks();
    return !!n.isInSet(a) || !a.some((l) => l.type.excludes(n));
  }
  const { ranges: s } = r;
  return s.some(({ $from: a, $to: l }) => {
    let c = a.depth === 0 ? t.doc.inlineContent && t.doc.type.allowsMarkType(n) : !1;
    return t.doc.nodesBetween(a.pos, l.pos, (f, d, u) => {
      if (c)
        return !1;
      if (f.isInline) {
        const h = !u || u.type.allowsMarkType(n), p = !!n.isInSet(f.marks) || !f.marks.some((m) => m.type.excludes(n));
        c = h && p;
      }
      return !c;
    }), c;
  });
}
const SI = (t, e = {}) => ({ tr: n, state: i, dispatch: r }) => {
  const { selection: o } = n, { empty: s, ranges: a } = o, l = Ts(t, i.schema);
  if (r)
    if (s) {
      const c = M6(i, l);
      n.addStoredMark(l.create({
        ...c,
        ...e
      }));
    } else
      a.forEach((c) => {
        const f = c.$from.pos, d = c.$to.pos;
        i.doc.nodesBetween(f, d, (u, h) => {
          const p = Math.max(h, f), m = Math.min(h + u.nodeSize, d);
          u.marks.find((y) => y.type === l) ? u.marks.forEach((y) => {
            l === y.type && n.addMark(p, m, l.create({
              ...y.attrs,
              ...e
            }));
          }) : n.addMark(p, m, l.create(e));
        });
      });
  return CI(i, n, l);
}, xI = (t, e) => ({ tr: n }) => (n.setMeta(t, e), !0), AI = (t, e = {}) => ({ state: n, dispatch: i, chain: r }) => {
  const o = Cn(t, n.schema);
  return o.isTextblock ? r().command(({ commands: s }) => T2(o, e)(n) ? !0 : s.clearNodes()).command(({ state: s }) => T2(o, e)(s, i)).run() : (console.warn('[tiptap warn]: Currently "setNode()" only supports text block nodes.'), !1);
}, MI = (t) => ({ tr: e, dispatch: n }) => {
  if (n) {
    const { doc: i } = e, r = so(t, 0, i.content.size), o = Ie.create(i, r);
    e.setSelection(o);
  }
  return !0;
}, NI = (t) => ({ tr: e, dispatch: n }) => {
  if (n) {
    const { doc: i } = e, { from: r, to: o } = typeof t == "number" ? { from: t, to: t } : t, s = ze.atStart(i).from, a = ze.atEnd(i).to, l = so(r, s, a), c = so(o, s, a), f = ze.create(i, l, c);
    e.setSelection(f);
  }
  return !0;
}, OI = (t) => ({ state: e, dispatch: n }) => {
  const i = Cn(t, e.schema);
  return dR(i)(e, n);
};
function O2(t, e) {
  const n = t.storedMarks || t.selection.$to.parentOffset && t.selection.$from.marks();
  if (n) {
    const i = n.filter((r) => e == null ? void 0 : e.includes(r.type.name));
    t.tr.ensureMarks(i);
  }
}
const RI = ({ keepMarks: t = !0 } = {}) => ({ tr: e, state: n, dispatch: i, editor: r }) => {
  const { selection: o, doc: s } = e, { $from: a, $to: l } = o, c = r.extensionManager.attributes, f = nu(c, a.node().type.name, a.node().attrs);
  if (o instanceof Ie && o.node.isBlock)
    return !a.parentOffset || !Za(s, a.pos) ? !1 : (i && (t && O2(n, r.extensionManager.splittableMarks), e.split(a.pos).scrollIntoView()), !0);
  if (!a.parent.isBlock)
    return !1;
  const d = l.parentOffset === l.parent.content.size, u = a.depth === 0 ? void 0 : mI(a.node(-1).contentMatchAt(a.indexAfter(-1)));
  let h = d && u ? [
    {
      type: u,
      attrs: f
    }
  ] : void 0, p = Za(e.doc, e.mapping.map(a.pos), 1, h);
  if (!h && !p && Za(e.doc, e.mapping.map(a.pos), 1, u ? [{ type: u }] : void 0) && (p = !0, h = u ? [
    {
      type: u,
      attrs: f
    }
  ] : void 0), i) {
    if (p && (o instanceof ze && e.deleteSelection(), e.split(e.mapping.map(a.pos), 1, h), u && !d && !a.parentOffset && a.parent.type !== u)) {
      const m = e.mapping.map(a.before()), v = e.doc.resolve(m);
      a.node(-1).canReplaceWith(v.index(), v.index() + 1, u) && e.setNodeMarkup(e.mapping.map(a.before()), u);
    }
    t && O2(n, r.extensionManager.splittableMarks), e.scrollIntoView();
  }
  return p;
}, II = (t, e = {}) => ({ tr: n, state: i, dispatch: r, editor: o }) => {
  var s;
  const a = Cn(t, i.schema), { $from: l, $to: c } = i.selection, f = i.selection.node;
  if (f && f.isBlock || l.depth < 2 || !l.sameParent(c))
    return !1;
  const d = l.node(-1);
  if (d.type !== a)
    return !1;
  const u = o.extensionManager.attributes;
  if (l.parent.content.size === 0 && l.node(-1).childCount === l.indexAfter(-1)) {
    if (l.depth === 2 || l.node(-3).type !== a || l.index(-2) !== l.node(-2).childCount - 1)
      return !1;
    if (r) {
      let y = ie.empty;
      const C = l.index(-1) ? 1 : l.index(-2) ? 2 : 3;
      for (let N = l.depth - C; N >= l.depth - 3; N -= 1)
        y = ie.from(l.node(N).copy(y));
      const k = l.indexAfter(-1) < l.node(-2).childCount ? 1 : l.indexAfter(-2) < l.node(-3).childCount ? 2 : 3, _ = {
        ...nu(u, l.node().type.name, l.node().attrs),
        ...e
      }, S = ((s = a.contentMatch.defaultType) === null || s === void 0 ? void 0 : s.createAndFill(_)) || void 0;
      y = y.append(ie.from(a.createAndFill(null, S) || void 0));
      const E = l.before(l.depth - (C - 1));
      n.replace(E, l.after(-k), new be(y, 4 - C, 0));
      let x = -1;
      n.doc.nodesBetween(E, n.doc.content.size, (N, R) => {
        if (x > -1)
          return !1;
        N.isTextblock && N.content.size === 0 && (x = R + 1);
      }), x > -1 && n.setSelection(ze.near(n.doc.resolve(x))), n.scrollIntoView();
    }
    return !0;
  }
  const h = c.pos === l.end() ? d.contentMatchAt(0).defaultType : null, p = {
    ...nu(u, d.type.name, d.attrs),
    ...e
  }, m = {
    ...nu(u, l.node().type.name, l.node().attrs),
    ...e
  };
  n.delete(l.pos, c.pos);
  const v = h ? [
    { type: a, attrs: p },
    { type: h, attrs: m }
  ] : [{ type: a, attrs: p }];
  if (!Za(n.doc, l.pos, 2))
    return !1;
  if (r) {
    const { selection: y, storedMarks: C } = i, { splittableMarks: k } = o.extensionManager, _ = C || y.$to.parentOffset && y.$from.marks();
    if (n.split(l.pos, 2, v).scrollIntoView(), !_ || !r)
      return !0;
    const S = _.filter((E) => k.includes(E.type.name));
    n.ensureMarks(S);
  }
  return !0;
}, Gp = (t, e) => {
  const n = Th((s) => s.type === e)(t.selection);
  if (!n)
    return !0;
  const i = t.doc.resolve(Math.max(0, n.pos - 1)).before(n.depth);
  if (i === void 0)
    return !0;
  const r = t.doc.nodeAt(i);
  return n.node.type === (r == null ? void 0 : r.type) && va(t.doc, n.pos) && t.join(n.pos), !0;
}, Kp = (t, e) => {
  const n = Th((s) => s.type === e)(t.selection);
  if (!n)
    return !0;
  const i = t.doc.resolve(n.start).after(n.depth);
  if (i === void 0)
    return !0;
  const r = t.doc.nodeAt(i);
  return n.node.type === (r == null ? void 0 : r.type) && va(t.doc, i) && t.join(i), !0;
}, LI = (t, e, n, i = {}) => ({ editor: r, tr: o, state: s, dispatch: a, chain: l, commands: c, can: f }) => {
  const { extensions: d, splittableMarks: u } = r.extensionManager, h = Cn(t, s.schema), p = Cn(e, s.schema), { selection: m, storedMarks: v } = s, { $from: y, $to: C } = m, k = y.blockRange(C), _ = v || m.$to.parentOffset && m.$from.marks();
  if (!k)
    return !1;
  const S = Th((E) => N2(E.type.name, d))(m);
  if (k.depth >= 1 && S && k.depth - S.depth <= 1) {
    if (S.node.type === h)
      return c.liftListItem(p);
    if (N2(S.node.type.name, d) && h.validContent(S.node.content) && a)
      return l().command(() => (o.setNodeMarkup(S.pos, h), !0)).command(() => Gp(o, h)).command(() => Kp(o, h)).run();
  }
  return !n || !_ || !a ? l().command(() => f().wrapInList(h, i) ? !0 : c.clearNodes()).wrapInList(h, i).command(() => Gp(o, h)).command(() => Kp(o, h)).run() : l().command(() => {
    const E = f().wrapInList(h, i), x = _.filter((N) => u.includes(N.type.name));
    return o.ensureMarks(x), E ? !0 : c.clearNodes();
  }).wrapInList(h, i).command(() => Gp(o, h)).command(() => Kp(o, h)).run();
}, DI = (t, e = {}, n = {}) => ({ state: i, commands: r }) => {
  const { extendEmptyMarkRange: o = !1 } = n, s = Ts(t, i.schema);
  return G0(i, s, e) ? r.unsetMark(s, { extendEmptyMarkRange: o }) : r.setMark(s, e);
}, PI = (t, e, n = {}) => ({ state: i, commands: r }) => {
  const o = Cn(t, i.schema), s = Cn(e, i.schema), a = ef(i, o, n);
  let l;
  return i.selection.$anchor.sameParent(i.selection.$head) && (l = i.selection.$anchor.parent.attrs), a ? r.setNode(s, l) : r.setNode(o, { ...l, ...n });
}, FI = (t, e = {}) => ({ state: n, commands: i }) => {
  const r = Cn(t, n.schema);
  return ef(n, r, e) ? i.lift(r) : i.wrapIn(r, e);
}, BI = () => ({ state: t, dispatch: e }) => {
  const n = t.plugins;
  for (let i = 0; i < n.length; i += 1) {
    const r = n[i];
    let o;
    if (r.spec.isInputRules && (o = r.getState(t))) {
      if (e) {
        const s = t.tr, a = o.transform;
        for (let l = a.steps.length - 1; l >= 0; l -= 1)
          s.step(a.steps[l].invert(a.docs[l]));
        if (o.text) {
          const l = s.doc.resolve(o.from).marks();
          s.replaceWith(o.from, o.to, t.schema.text(o.text, l));
        } else
          s.delete(o.from, o.to);
      }
      return !0;
    }
  }
  return !1;
}, HI = () => ({ tr: t, dispatch: e }) => {
  const { selection: n } = t, { empty: i, ranges: r } = n;
  return i || e && r.forEach((o) => {
    t.removeMark(o.$from.pos, o.$to.pos);
  }), !0;
}, $I = (t, e = {}) => ({ tr: n, state: i, dispatch: r }) => {
  var o;
  const { extendEmptyMarkRange: s = !1 } = e, { selection: a } = n, l = Ts(t, i.schema), { $from: c, empty: f, ranges: d } = a;
  if (!r)
    return !0;
  if (f && s) {
    let { from: u, to: h } = a;
    const p = (o = c.marks().find((v) => v.type === l)) === null || o === void 0 ? void 0 : o.attrs, m = Zc(c, l, p);
    m && (u = m.from, h = m.to), n.removeMark(u, h, l);
  } else
    d.forEach((u) => {
      n.removeMark(u.$from.pos, u.$to.pos, l);
    });
  return n.removeStoredMark(l), !0;
}, jI = (t, e = {}) => ({ tr: n, state: i, dispatch: r }) => {
  let o = null, s = null;
  const a = Eh(typeof t == "string" ? t : t.name, i.schema);
  return a ? (a === "node" && (o = Cn(t, i.schema)), a === "mark" && (s = Ts(t, i.schema)), r && n.selection.ranges.forEach((l) => {
    const c = l.$from.pos, f = l.$to.pos;
    i.doc.nodesBetween(c, f, (d, u) => {
      o && o === d.type && n.setNodeMarkup(u, void 0, {
        ...d.attrs,
        ...e
      }), s && d.marks.length && d.marks.forEach((h) => {
        if (s === h.type) {
          const p = Math.max(u, c), m = Math.min(u + d.nodeSize, f);
          n.addMark(p, m, s.create({
            ...h.attrs,
            ...e
          }));
        }
      });
    });
  }), !0) : !1;
}, zI = (t, e = {}) => ({ state: n, dispatch: i }) => {
  const r = Cn(t, n.schema);
  return oR(r, e)(n, i);
}, UI = (t, e = {}) => ({ state: n, dispatch: i }) => {
  const r = Cn(t, n.schema);
  return sR(r, e)(n, i);
};
var VI = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  blur: SR,
  clearContent: xR,
  clearNodes: AR,
  command: MR,
  createParagraphNear: NR,
  cut: OR,
  deleteCurrentNode: RR,
  deleteNode: IR,
  deleteRange: LR,
  deleteSelection: DR,
  enter: PR,
  exitCode: FR,
  extendMarkRange: HR,
  first: $R,
  focus: jR,
  forEach: zR,
  insertContent: UR,
  insertContentAt: WR,
  joinBackward: KR,
  joinDown: GR,
  joinForward: YR,
  joinItemBackward: JR,
  joinItemForward: XR,
  joinTextblockBackward: QR,
  joinTextblockForward: ZR,
  joinUp: qR,
  keyboardShortcut: tI,
  lift: nI,
  liftEmptyBlock: iI,
  liftListItem: rI,
  newlineInCode: oI,
  resetAttributes: sI,
  scrollIntoView: aI,
  selectAll: lI,
  selectNodeBackward: cI,
  selectNodeForward: fI,
  selectParentNode: dI,
  selectTextblockEnd: uI,
  selectTextblockStart: hI,
  setContent: pI,
  setMark: SI,
  setMeta: xI,
  setNode: AI,
  setNodeSelection: MI,
  setTextSelection: NI,
  sinkListItem: OI,
  splitBlock: RI,
  splitListItem: II,
  toggleList: LI,
  toggleMark: DI,
  toggleNode: PI,
  toggleWrap: FI,
  undoInputRule: BI,
  unsetAllMarks: HI,
  unsetMark: $I,
  updateAttributes: jI,
  wrapIn: zI,
  wrapInList: UI
});
const L6 = At.create({
  name: "commands",
  addCommands() {
    return {
      ...VI
    };
  }
}), D6 = At.create({
  name: "drop",
  addProseMirrorPlugins() {
    return [
      new mt({
        key: new Ct("tiptapDrop"),
        props: {
          handleDrop: (t, e, n, i) => {
            this.editor.emit("drop", {
              editor: this.editor,
              event: e,
              slice: n,
              moved: i
            });
          }
        }
      })
    ];
  }
}), P6 = At.create({
  name: "editable",
  addProseMirrorPlugins() {
    return [
      new mt({
        key: new Ct("editable"),
        props: {
          editable: () => this.editor.options.editable
        }
      })
    ];
  }
}), F6 = At.create({
  name: "focusEvents",
  addProseMirrorPlugins() {
    const { editor: t } = this;
    return [
      new mt({
        key: new Ct("focusEvents"),
        props: {
          handleDOMEvents: {
            focus: (e, n) => {
              t.isFocused = !0;
              const i = t.state.tr.setMeta("focus", { event: n }).setMeta("addToHistory", !1);
              return e.dispatch(i), !1;
            },
            blur: (e, n) => {
              t.isFocused = !1;
              const i = t.state.tr.setMeta("blur", { event: n }).setMeta("addToHistory", !1);
              return e.dispatch(i), !1;
            }
          }
        }
      })
    ];
  }
}), B6 = At.create({
  name: "keymap",
  addKeyboardShortcuts() {
    const t = () => this.editor.commands.first(({ commands: s }) => [
      () => s.undoInputRule(),
      // maybe convert first text block node to default node
      () => s.command(({ tr: a }) => {
        const { selection: l, doc: c } = a, { empty: f, $anchor: d } = l, { pos: u, parent: h } = d, p = d.parent.isTextblock && u > 0 ? a.doc.resolve(u - 1) : d, m = p.parent.type.spec.isolating, v = d.pos - d.parentOffset, y = m && p.parent.childCount === 1 ? v === d.pos : $e.atStart(c).from === u;
        return !f || !h.type.isTextblock || h.textContent.length || !y || y && d.parent.type.name === "paragraph" ? !1 : s.clearNodes();
      }),
      () => s.deleteSelection(),
      () => s.joinBackward(),
      () => s.selectNodeBackward()
    ]), e = () => this.editor.commands.first(({ commands: s }) => [
      () => s.deleteSelection(),
      () => s.deleteCurrentNode(),
      () => s.joinForward(),
      () => s.selectNodeForward()
    ]), i = {
      Enter: () => this.editor.commands.first(({ commands: s }) => [
        () => s.newlineInCode(),
        () => s.createParagraphNear(),
        () => s.liftEmptyBlock(),
        () => s.splitBlock()
      ]),
      "Mod-Enter": () => this.editor.commands.exitCode(),
      Backspace: t,
      "Mod-Backspace": t,
      "Shift-Backspace": t,
      Delete: e,
      "Mod-Delete": e,
      "Mod-a": () => this.editor.commands.selectAll()
    }, r = {
      ...i
    }, o = {
      ...i,
      "Ctrl-h": t,
      "Alt-Backspace": t,
      "Ctrl-d": e,
      "Ctrl-Alt-Backspace": e,
      "Alt-Delete": e,
      "Alt-d": e,
      "Ctrl-a": () => this.editor.commands.selectTextblockStart(),
      "Ctrl-e": () => this.editor.commands.selectTextblockEnd()
    };
    return _h() || A6() ? o : r;
  },
  addProseMirrorPlugins() {
    return [
      // With this plugin we check if the whole document was selected and deleted.
      // In this case we will additionally call `clearNodes()` to convert e.g. a heading
      // to a paragraph if necessary.
      // This is an alternative to ProseMirror's `AllSelection`, which doesn’t work well
      // with many other commands.
      new mt({
        key: new Ct("clearDocument"),
        appendTransaction: (t, e, n) => {
          const i = t.some((m) => m.docChanged) && !e.doc.eq(n.doc), r = t.some((m) => m.getMeta("preventClearDocument"));
          if (!i || r)
            return;
          const { empty: o, from: s, to: a } = e.selection, l = $e.atStart(e.doc).from, c = $e.atEnd(e.doc).to;
          if (o || !(s === l && a === c) || !Hy(n.doc))
            return;
          const u = n.tr, h = vh({
            state: n,
            transaction: u
          }), { commands: p } = new bh({
            editor: this.editor,
            state: h
          });
          if (p.clearNodes(), !!u.steps.length)
            return u;
        }
      })
    ];
  }
}), H6 = At.create({
  name: "paste",
  addProseMirrorPlugins() {
    return [
      new mt({
        key: new Ct("tiptapPaste"),
        props: {
          handlePaste: (t, e, n) => {
            this.editor.emit("paste", {
              editor: this.editor,
              event: e,
              slice: n
            });
          }
        }
      })
    ];
  }
}), $6 = At.create({
  name: "tabindex",
  addProseMirrorPlugins() {
    return [
      new mt({
        key: new Ct("tabindex"),
        props: {
          attributes: () => this.editor.isEditable ? { tabindex: "0" } : {}
        }
      })
    ];
  }
});
var oc = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  ClipboardTextSerializer: T6,
  Commands: L6,
  Drop: D6,
  Editable: P6,
  FocusEvents: F6,
  Keymap: B6,
  Paste: H6,
  Tabindex: $6
});
class $s {
  get name() {
    return this.node.type.name;
  }
  constructor(e, n, i = !1, r = null) {
    this.currentNode = null, this.actualDepth = null, this.isBlock = i, this.resolvedPos = e, this.editor = n, this.currentNode = r;
  }
  get node() {
    return this.currentNode || this.resolvedPos.node();
  }
  get element() {
    return this.editor.view.domAtPos(this.pos).node;
  }
  get depth() {
    var e;
    return (e = this.actualDepth) !== null && e !== void 0 ? e : this.resolvedPos.depth;
  }
  get pos() {
    return this.resolvedPos.pos;
  }
  get content() {
    return this.node.content;
  }
  set content(e) {
    let n = this.from, i = this.to;
    if (this.isBlock) {
      if (this.content.size === 0) {
        console.error(`You can’t set content on a block node. Tried to set content on ${this.name} at ${this.pos}`);
        return;
      }
      n = this.from + 1, i = this.to - 1;
    }
    this.editor.commands.insertContentAt({ from: n, to: i }, e);
  }
  get attributes() {
    return this.node.attrs;
  }
  get textContent() {
    return this.node.textContent;
  }
  get size() {
    return this.node.nodeSize;
  }
  get from() {
    return this.isBlock ? this.pos : this.resolvedPos.start(this.resolvedPos.depth);
  }
  get range() {
    return {
      from: this.from,
      to: this.to
    };
  }
  get to() {
    return this.isBlock ? this.pos + this.size : this.resolvedPos.end(this.resolvedPos.depth) + (this.node.isText ? 0 : 1);
  }
  get parent() {
    if (this.depth === 0)
      return null;
    const e = this.resolvedPos.start(this.resolvedPos.depth - 1), n = this.resolvedPos.doc.resolve(e);
    return new $s(n, this.editor);
  }
  get before() {
    let e = this.resolvedPos.doc.resolve(this.from - (this.isBlock ? 1 : 2));
    return e.depth !== this.depth && (e = this.resolvedPos.doc.resolve(this.from - 3)), new $s(e, this.editor);
  }
  get after() {
    let e = this.resolvedPos.doc.resolve(this.to + (this.isBlock ? 2 : 1));
    return e.depth !== this.depth && (e = this.resolvedPos.doc.resolve(this.to + 3)), new $s(e, this.editor);
  }
  get children() {
    const e = [];
    return this.node.content.forEach((n, i) => {
      const r = n.isBlock && !n.isTextblock, o = this.pos + i + 1, s = this.resolvedPos.doc.resolve(o);
      if (!r && s.depth <= this.depth)
        return;
      const a = new $s(s, this.editor, r, r ? n : null);
      r && (a.actualDepth = this.depth + 1), e.push(new $s(s, this.editor, r, r ? n : null));
    }), e;
  }
  get firstChild() {
    return this.children[0] || null;
  }
  get lastChild() {
    const e = this.children;
    return e[e.length - 1] || null;
  }
  closest(e, n = {}) {
    let i = null, r = this.parent;
    for (; r && !i; ) {
      if (r.node.type.name === e)
        if (Object.keys(n).length > 0) {
          const o = r.node.attrs, s = Object.keys(n);
          for (let a = 0; a < s.length; a += 1) {
            const l = s[a];
            if (o[l] !== n[l])
              break;
          }
        } else
          i = r;
      r = r.parent;
    }
    return i;
  }
  querySelector(e, n = {}) {
    return this.querySelectorAll(e, n, !0)[0] || null;
  }
  querySelectorAll(e, n = {}, i = !1) {
    let r = [];
    if (!this.children || this.children.length === 0)
      return r;
    const o = Object.keys(n);
    return this.children.forEach((s) => {
      i && r.length > 0 || (s.node.type.name === e && o.every((l) => n[l] === s.node.attrs[l]) && r.push(s), !(i && r.length > 0) && (r = r.concat(s.querySelectorAll(e, n, i))));
    }), r;
  }
  setAttribute(e) {
    const n = this.editor.state.selection;
    this.editor.chain().setTextSelection(this.from).updateAttributes(this.node.type.name, e).setTextSelection(n.from).run();
  }
}
const WI = `.ProseMirror {
  position: relative;
}

.ProseMirror {
  word-wrap: break-word;
  white-space: pre-wrap;
  white-space: break-spaces;
  -webkit-font-variant-ligatures: none;
  font-variant-ligatures: none;
  font-feature-settings: "liga" 0; /* the above doesn't seem to work in Edge */
}

.ProseMirror [contenteditable="false"] {
  white-space: normal;
}

.ProseMirror [contenteditable="false"] [contenteditable="true"] {
  white-space: pre-wrap;
}

.ProseMirror pre {
  white-space: pre-wrap;
}

img.ProseMirror-separator {
  display: inline !important;
  border: none !important;
  margin: 0 !important;
  width: 0 !important;
  height: 0 !important;
}

.ProseMirror-gapcursor {
  display: none;
  pointer-events: none;
  position: absolute;
  margin: 0;
}

.ProseMirror-gapcursor:after {
  content: "";
  display: block;
  position: absolute;
  top: -2px;
  width: 20px;
  border-top: 1px solid black;
  animation: ProseMirror-cursor-blink 1.1s steps(2, start) infinite;
}

@keyframes ProseMirror-cursor-blink {
  to {
    visibility: hidden;
  }
}

.ProseMirror-hideselection *::selection {
  background: transparent;
}

.ProseMirror-hideselection *::-moz-selection {
  background: transparent;
}

.ProseMirror-hideselection * {
  caret-color: transparent;
}

.ProseMirror-focused .ProseMirror-gapcursor {
  display: block;
}

.tippy-box[data-animation=fade][data-state=hidden] {
  opacity: 0
}`;
function qI(t, e, n) {
  const i = document.querySelector("style[data-tiptap-style]");
  if (i !== null)
    return i;
  const r = document.createElement("style");
  return e && r.setAttribute("nonce", e), r.setAttribute("data-tiptap-style", ""), r.innerHTML = t, document.getElementsByTagName("head")[0].appendChild(r), r;
}
class GI extends uR {
  constructor(e = {}) {
    super(), this.isFocused = !1, this.isInitialized = !1, this.extensionStorage = {}, this.options = {
      element: document.createElement("div"),
      content: "",
      injectCSS: !0,
      injectNonce: void 0,
      extensions: [],
      autofocus: !1,
      editable: !0,
      editorProps: {},
      parseOptions: {},
      coreExtensionOptions: {},
      enableInputRules: !0,
      enablePasteRules: !0,
      enableCoreExtensions: !0,
      enableContentCheck: !1,
      onBeforeCreate: () => null,
      onCreate: () => null,
      onUpdate: () => null,
      onSelectionUpdate: () => null,
      onTransaction: () => null,
      onFocus: () => null,
      onBlur: () => null,
      onDestroy: () => null,
      onContentError: ({ error: n }) => {
        throw n;
      },
      onPaste: () => null,
      onDrop: () => null
    }, this.isCapturingTransaction = !1, this.capturedTransaction = null, this.setOptions(e), this.createExtensionManager(), this.createCommandManager(), this.createSchema(), this.on("beforeCreate", this.options.onBeforeCreate), this.emit("beforeCreate", { editor: this }), this.on("contentError", this.options.onContentError), this.createView(), this.injectCSS(), this.on("create", this.options.onCreate), this.on("update", this.options.onUpdate), this.on("selectionUpdate", this.options.onSelectionUpdate), this.on("transaction", this.options.onTransaction), this.on("focus", this.options.onFocus), this.on("blur", this.options.onBlur), this.on("destroy", this.options.onDestroy), this.on("drop", ({ event: n, slice: i, moved: r }) => this.options.onDrop(n, i, r)), this.on("paste", ({ event: n, slice: i }) => this.options.onPaste(n, i)), window.setTimeout(() => {
      this.isDestroyed || (this.commands.focus(this.options.autofocus), this.emit("create", { editor: this }), this.isInitialized = !0);
    }, 0);
  }
  /**
   * Returns the editor storage.
   */
  get storage() {
    return this.extensionStorage;
  }
  /**
   * An object of all registered commands.
   */
  get commands() {
    return this.commandManager.commands;
  }
  /**
   * Create a command chain to call multiple commands at once.
   */
  chain() {
    return this.commandManager.chain();
  }
  /**
   * Check if a command or a command chain can be executed. Without executing it.
   */
  can() {
    return this.commandManager.can();
  }
  /**
   * Inject CSS styles.
   */
  injectCSS() {
    this.options.injectCSS && document && (this.css = qI(WI, this.options.injectNonce));
  }
  /**
   * Update editor options.
   *
   * @param options A list of options
   */
  setOptions(e = {}) {
    this.options = {
      ...this.options,
      ...e
    }, !(!this.view || !this.state || this.isDestroyed) && (this.options.editorProps && this.view.setProps(this.options.editorProps), this.view.updateState(this.state));
  }
  /**
   * Update editable state of the editor.
   */
  setEditable(e, n = !0) {
    this.setOptions({ editable: e }), n && this.emit("update", { editor: this, transaction: this.state.tr });
  }
  /**
   * Returns whether the editor is editable.
   */
  get isEditable() {
    return this.options.editable && this.view && this.view.editable;
  }
  /**
   * Returns the editor state.
   */
  get state() {
    return this.view.state;
  }
  /**
   * Register a ProseMirror plugin.
   *
   * @param plugin A ProseMirror plugin
   * @param handlePlugins Control how to merge the plugin into the existing plugins.
   * @returns The new editor state
   */
  registerPlugin(e, n) {
    const i = k6(n) ? n(e, [...this.state.plugins]) : [...this.state.plugins, e], r = this.state.reconfigure({ plugins: i });
    return this.view.updateState(r), r;
  }
  /**
   * Unregister a ProseMirror plugin.
   *
   * @param nameOrPluginKey The plugins name
   * @returns The new editor state or undefined if the editor is destroyed
   */
  unregisterPlugin(e) {
    if (this.isDestroyed)
      return;
    const n = typeof e == "string" ? `${e}$` : e.key, i = this.state.reconfigure({
      // @ts-ignore
      plugins: this.state.plugins.filter((r) => !r.key.startsWith(n))
    });
    return this.view.updateState(i), i;
  }
  /**
   * Creates an extension manager.
   */
  createExtensionManager() {
    var e, n;
    const r = [...this.options.enableCoreExtensions ? [
      P6,
      T6.configure({
        blockSeparator: (n = (e = this.options.coreExtensionOptions) === null || e === void 0 ? void 0 : e.clipboardTextSerializer) === null || n === void 0 ? void 0 : n.blockSeparator
      }),
      L6,
      F6,
      B6,
      $6,
      D6,
      H6
    ].filter((o) => typeof this.options.enableCoreExtensions == "object" ? this.options.enableCoreExtensions[o.name] !== !1 : !0) : [], ...this.options.extensions].filter((o) => ["extension", "node", "mark"].includes(o == null ? void 0 : o.type));
    this.extensionManager = new Ks(r, this);
  }
  /**
   * Creates an command manager.
   */
  createCommandManager() {
    this.commandManager = new bh({
      editor: this
    });
  }
  /**
   * Creates a ProseMirror schema.
   */
  createSchema() {
    this.schema = this.extensionManager.schema;
  }
  /**
   * Creates a ProseMirror view.
   */
  createView() {
    let e;
    try {
      e = Uu(this.options.content, this.schema, this.options.parseOptions, { errorOnInvalidContent: this.options.enableContentCheck });
    } catch (o) {
      if (!(o instanceof Error) || !["[tiptap error]: Invalid JSON content", "[tiptap error]: Invalid HTML content"].includes(o.message))
        throw o;
      this.emit("contentError", {
        editor: this,
        error: o,
        disableCollaboration: () => {
          this.options.extensions = this.options.extensions.filter((s) => s.name !== "collaboration"), this.createExtensionManager();
        }
      }), e = Uu(this.options.content, this.schema, this.options.parseOptions, { errorOnInvalidContent: !1 });
    }
    const n = C6(e, this.options.autofocus);
    this.view = new u6(this.options.element, {
      ...this.options.editorProps,
      dispatchTransaction: this.dispatchTransaction.bind(this),
      state: Ws.create({
        doc: e,
        selection: n || void 0
      })
    });
    const i = this.state.reconfigure({
      plugins: this.extensionManager.plugins
    });
    this.view.updateState(i), this.createNodeViews(), this.prependClass();
    const r = this.view.dom;
    r.editor = this;
  }
  /**
   * Creates all node views.
   */
  createNodeViews() {
    this.view.isDestroyed || this.view.setProps({
      nodeViews: this.extensionManager.nodeViews
    });
  }
  /**
   * Prepend class name to element.
   */
  prependClass() {
    this.view.dom.className = `tiptap ${this.view.dom.className}`;
  }
  captureTransaction(e) {
    this.isCapturingTransaction = !0, e(), this.isCapturingTransaction = !1;
    const n = this.capturedTransaction;
    return this.capturedTransaction = null, n;
  }
  /**
   * The callback over which to send transactions (state updates) produced by the view.
   *
   * @param transaction An editor state transaction
   */
  dispatchTransaction(e) {
    if (this.view.isDestroyed)
      return;
    if (this.isCapturingTransaction) {
      if (!this.capturedTransaction) {
        this.capturedTransaction = e;
        return;
      }
      e.steps.forEach((s) => {
        var a;
        return (a = this.capturedTransaction) === null || a === void 0 ? void 0 : a.step(s);
      });
      return;
    }
    const n = this.state.apply(e), i = !this.state.selection.eq(n.selection);
    this.emit("beforeTransaction", {
      editor: this,
      transaction: e,
      nextState: n
    }), this.view.updateState(n), this.emit("transaction", {
      editor: this,
      transaction: e
    }), i && this.emit("selectionUpdate", {
      editor: this,
      transaction: e
    });
    const r = e.getMeta("focus"), o = e.getMeta("blur");
    r && this.emit("focus", {
      editor: this,
      event: r.event,
      transaction: e
    }), o && this.emit("blur", {
      editor: this,
      event: o.event,
      transaction: e
    }), !(!e.docChanged || e.getMeta("preventUpdate")) && this.emit("update", {
      editor: this,
      transaction: e
    });
  }
  /**
   * Get attributes of the currently selected node or mark.
   */
  getAttributes(e) {
    return R6(this.state, e);
  }
  isActive(e, n) {
    const i = typeof e == "string" ? e : null, r = typeof e == "string" ? n : e;
    return EI(this.state, i, r);
  }
  /**
   * Get the document as JSON.
   */
  getJSON() {
    return this.state.doc.toJSON();
  }
  /**
   * Get the document as HTML.
   */
  getHTML() {
    return yI(this.state.doc.content, this.schema);
  }
  /**
   * Get the document as text.
   */
  getText(e) {
    const { blockSeparator: n = `

`, textSerializers: i = {} } = e || {};
    return bI(this.state.doc, {
      blockSeparator: n,
      textSerializers: {
        ...E6(this.schema),
        ...i
      }
    });
  }
  /**
   * Check if there is no content.
   */
  get isEmpty() {
    return Hy(this.state.doc);
  }
  /**
   * Get the number of characters for the current document.
   *
   * @deprecated
   */
  getCharacterCount() {
    return console.warn('[tiptap warn]: "editor.getCharacterCount()" is deprecated. Please use "editor.storage.characterCount.characters()" instead.'), this.state.doc.content.size - 2;
  }
  /**
   * Destroy the editor.
   */
  destroy() {
    if (this.emit("destroy"), this.view) {
      const e = this.view.dom;
      e && e.editor && delete e.editor, this.view.destroy();
    }
    this.removeAllListeners();
  }
  /**
   * Check if the editor is already destroyed.
   */
  get isDestroyed() {
    var e;
    return !(!((e = this.view) === null || e === void 0) && e.docView);
  }
  $node(e, n) {
    var i;
    return ((i = this.$doc) === null || i === void 0 ? void 0 : i.querySelector(e, n)) || null;
  }
  $nodes(e, n) {
    var i;
    return ((i = this.$doc) === null || i === void 0 ? void 0 : i.querySelectorAll(e, n)) || null;
  }
  $pos(e) {
    const n = this.state.doc.resolve(e);
    return new $s(n, this);
  }
  get $doc() {
    return this.$pos(0);
  }
}
function gl(t) {
  return new ml({
    find: t.find,
    handler: ({ state: e, range: n, match: i }) => {
      const r = ht(t.getAttributes, void 0, i);
      if (r === !1 || r === null)
        return null;
      const { tr: o } = e, s = i[i.length - 1], a = i[0];
      if (s) {
        const l = a.search(/\S/), c = n.from + a.indexOf(s), f = c + s.length;
        if (By(n.from, n.to, e.doc).filter((h) => h.mark.type.excluded.find((m) => m === t.type && m !== h.mark.type)).filter((h) => h.to > c).length)
          return null;
        f < n.to && o.delete(f, n.to), c > n.from && o.delete(n.from + l, c);
        const u = n.from + l + s.length;
        o.addMark(n.from + l, u, t.type.create(r || {})), o.removeStoredMark(t.type);
      }
    }
  });
}
let jr = class Y0 {
  constructor(e = {}) {
    this.type = "node", this.name = "node", this.parent = null, this.child = null, this.config = {
      name: this.name,
      defaultOptions: {}
    }, this.config = {
      ...this.config,
      ...e
    }, this.name = this.config.name, e.defaultOptions && Object.keys(e.defaultOptions).length > 0 && console.warn(`[tiptap warn]: BREAKING CHANGE: "defaultOptions" is deprecated. Please use "addOptions" instead. Found in extension: "${this.name}".`), this.options = this.config.defaultOptions, this.config.addOptions && (this.options = ht(Me(this, "addOptions", {
      name: this.name
    }))), this.storage = ht(Me(this, "addStorage", {
      name: this.name,
      options: this.options
    })) || {};
  }
  static create(e = {}) {
    return new Y0(e);
  }
  configure(e = {}) {
    const n = this.extend({
      ...this.config,
      addOptions: () => wh(this.options, e)
    });
    return n.name = this.name, n.parent = this.parent, n;
  }
  extend(e = {}) {
    const n = new Y0(e);
    return n.parent = this, this.child = n, n.name = e.name ? e.name : n.parent.name, e.defaultOptions && Object.keys(e.defaultOptions).length > 0 && console.warn(`[tiptap warn]: BREAKING CHANGE: "defaultOptions" is deprecated. Please use "addOptions" instead. Found in extension: "${n.name}".`), n.options = ht(Me(n, "addOptions", {
      name: n.name
    })), n.storage = ht(Me(n, "addStorage", {
      name: n.name,
      options: n.options
    })), n;
  }
};
function KI() {
  return navigator.platform === "Android" || /android/i.test(navigator.userAgent);
}
class YI {
  constructor(e, n, i) {
    this.isDragging = !1, this.component = e, this.editor = n.editor, this.options = {
      stopEvent: null,
      ignoreMutation: null,
      ...i
    }, this.extension = n.extension, this.node = n.node, this.decorations = n.decorations, this.innerDecorations = n.innerDecorations, this.view = n.view, this.HTMLAttributes = n.HTMLAttributes, this.getPos = n.getPos, this.mount();
  }
  mount() {
  }
  get dom() {
    return this.editor.view.dom;
  }
  get contentDOM() {
    return null;
  }
  onDragStart(e) {
    var n, i, r, o, s, a, l;
    const { view: c } = this.editor, f = e.target, d = f.nodeType === 3 ? (n = f.parentElement) === null || n === void 0 ? void 0 : n.closest("[data-drag-handle]") : f.closest("[data-drag-handle]");
    if (!this.dom || !((i = this.contentDOM) === null || i === void 0) && i.contains(f) || !d)
      return;
    let u = 0, h = 0;
    if (this.dom !== d) {
      const y = this.dom.getBoundingClientRect(), C = d.getBoundingClientRect(), k = (r = e.offsetX) !== null && r !== void 0 ? r : (o = e.nativeEvent) === null || o === void 0 ? void 0 : o.offsetX, _ = (s = e.offsetY) !== null && s !== void 0 ? s : (a = e.nativeEvent) === null || a === void 0 ? void 0 : a.offsetY;
      u = C.x - y.x + k, h = C.y - y.y + _;
    }
    (l = e.dataTransfer) === null || l === void 0 || l.setDragImage(this.dom, u, h);
    const p = this.getPos();
    if (typeof p != "number")
      return;
    const m = Ie.create(c.state.doc, p), v = c.state.tr.setSelection(m);
    c.dispatch(v);
  }
  stopEvent(e) {
    var n;
    if (!this.dom)
      return !1;
    if (typeof this.options.stopEvent == "function")
      return this.options.stopEvent({ event: e });
    const i = e.target;
    if (!(this.dom.contains(i) && !(!((n = this.contentDOM) === null || n === void 0) && n.contains(i))))
      return !1;
    const o = e.type.startsWith("drag"), s = e.type === "drop";
    if ((["INPUT", "BUTTON", "SELECT", "TEXTAREA"].includes(i.tagName) || i.isContentEditable) && !s && !o)
      return !0;
    const { isEditable: l } = this.editor, { isDragging: c } = this, f = !!this.node.type.spec.draggable, d = Ie.isSelectable(this.node), u = e.type === "copy", h = e.type === "paste", p = e.type === "cut", m = e.type === "mousedown";
    if (!f && d && o && e.preventDefault(), f && o && !c)
      return e.preventDefault(), !1;
    if (f && l && !c && m) {
      const v = i.closest("[data-drag-handle]");
      v && (this.dom === v || this.dom.contains(v)) && (this.isDragging = !0, document.addEventListener("dragend", () => {
        this.isDragging = !1;
      }, { once: !0 }), document.addEventListener("drop", () => {
        this.isDragging = !1;
      }, { once: !0 }), document.addEventListener("mouseup", () => {
        this.isDragging = !1;
      }, { once: !0 }));
    }
    return !(c || s || u || h || p || m && d);
  }
  /**
   * Called when a DOM [mutation](https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver) or a selection change happens within the view.
   * @return `false` if the editor should re-read the selection or re-parse the range around the mutation
   * @return `true` if it can safely be ignored.
   */
  ignoreMutation(e) {
    return !this.dom || !this.contentDOM ? !0 : typeof this.options.ignoreMutation == "function" ? this.options.ignoreMutation({ mutation: e }) : this.node.isLeaf || this.node.isAtom ? !0 : e.type === "selection" || this.dom.contains(e.target) && e.type === "childList" && (_h() || KI()) && this.editor.isFocused && [
      ...Array.from(e.addedNodes),
      ...Array.from(e.removedNodes)
    ].every((i) => i.isContentEditable) ? !1 : this.contentDOM === e.target && e.type === "attributes" ? !0 : !this.contentDOM.contains(e.target);
  }
  /**
   * Update the attributes of the prosemirror node.
   */
  updateAttributes(e) {
    this.editor.commands.command(({ tr: n }) => {
      const i = this.getPos();
      return typeof i != "number" ? !1 : (n.setNodeMarkup(i, void 0, {
        ...this.node.attrs,
        ...e
      }), !0);
    });
  }
  /**
   * Delete the node.
   */
  deleteNode() {
    const e = this.getPos();
    if (typeof e != "number")
      return;
    const n = e + this.node.nodeSize;
    this.editor.commands.deleteRange({ from: e, to: n });
  }
}
function la(t) {
  return new kR({
    find: t.find,
    handler: ({ state: e, range: n, match: i, pasteEvent: r }) => {
      const o = ht(t.getAttributes, void 0, i, r);
      if (o === !1 || o === null)
        return null;
      const { tr: s } = e, a = i[i.length - 1], l = i[0];
      let c = n.to;
      if (a) {
        const f = l.search(/\S/), d = n.from + l.indexOf(a), u = d + a.length;
        if (By(n.from, n.to, e.doc).filter((p) => p.mark.type.excluded.find((v) => v === t.type && v !== p.mark.type)).filter((p) => p.to > d).length)
          return null;
        u < n.to && s.delete(u, n.to), d > n.from && s.delete(n.from + f, d), c = n.from + f + a.length, s.addMark(n.from + f, c, t.type.create(o || {})), s.removeStoredMark(t.type);
      }
    }
  });
}
var sd, JI = new Uint8Array(16);
function XI() {
  if (!sd && (sd = typeof crypto < "u" && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto < "u" && typeof msCrypto.getRandomValues == "function" && msCrypto.getRandomValues.bind(msCrypto), !sd))
    throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
  return sd(JI);
}
const QI = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
function ZI(t) {
  return typeof t == "string" && QI.test(t);
}
var Sn = [];
for (var Yp = 0; Yp < 256; ++Yp)
  Sn.push((Yp + 256).toString(16).substr(1));
function eL(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, n = (Sn[t[e + 0]] + Sn[t[e + 1]] + Sn[t[e + 2]] + Sn[t[e + 3]] + "-" + Sn[t[e + 4]] + Sn[t[e + 5]] + "-" + Sn[t[e + 6]] + Sn[t[e + 7]] + "-" + Sn[t[e + 8]] + Sn[t[e + 9]] + "-" + Sn[t[e + 10]] + Sn[t[e + 11]] + Sn[t[e + 12]] + Sn[t[e + 13]] + Sn[t[e + 14]] + Sn[t[e + 15]]).toLowerCase();
  if (!ZI(n))
    throw TypeError("Stringified UUID is invalid");
  return n;
}
function tL(t, e, n) {
  t = t || {};
  var i = t.random || (t.rng || XI)();
  return i[6] = i[6] & 15 | 64, i[8] = i[8] & 63 | 128, eL(i);
}
const nL = /(?:^|\s)(\*\*(?!\s+\*\*)((?:[^*]+))\*\*(?!\s+\*\*))$/, iL = /(?:^|\s)(\*\*(?!\s+\*\*)((?:[^*]+))\*\*(?!\s+\*\*))/g, rL = /(?:^|\s)(__(?!\s+__)((?:[^_]+))__(?!\s+__))$/, oL = /(?:^|\s)(__(?!\s+__)((?:[^_]+))__(?!\s+__))/g, sL = Fi.create({
  name: "bold",
  addOptions() {
    return {
      HTMLAttributes: {}
    };
  },
  parseHTML() {
    return [
      {
        tag: "strong"
      },
      {
        tag: "b",
        getAttrs: (t) => t.style.fontWeight !== "normal" && null
      },
      {
        style: "font-weight",
        getAttrs: (t) => /^(bold(er)?|[5-9]\d{2,})$/.test(t) && null
      }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    return ["strong", gi(this.options.HTMLAttributes, t), 0];
  },
  addCommands() {
    return {
      setBold: () => ({ commands: t }) => t.setMark(this.name),
      toggleBold: () => ({ commands: t }) => t.toggleMark(this.name),
      unsetBold: () => ({ commands: t }) => t.unsetMark(this.name)
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-b": () => this.editor.commands.toggleBold(),
      "Mod-B": () => this.editor.commands.toggleBold()
    };
  },
  addInputRules() {
    return [
      gl({
        find: nL,
        type: this.type
      }),
      gl({
        find: rL,
        type: this.type
      })
    ];
  },
  addPasteRules() {
    return [
      la({
        find: iL,
        type: this.type
      }),
      la({
        find: oL,
        type: this.type
      })
    ];
  }
}), aL = /(?:^|\s)(`(?!\s+`)((?:[^`]+))`(?!\s+`))$/, lL = /(?:^|\s)(`(?!\s+`)((?:[^`]+))`(?!\s+`))/g, cL = Fi.create({
  name: "code",
  addOptions() {
    return {
      HTMLAttributes: {}
    };
  },
  excludes: "_",
  code: !0,
  exitable: !0,
  parseHTML() {
    return [
      { tag: "code" }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    return ["code", gi(this.options.HTMLAttributes, t), 0];
  },
  addCommands() {
    return {
      setCode: () => ({ commands: t }) => t.setMark(this.name),
      toggleCode: () => ({ commands: t }) => t.toggleMark(this.name),
      unsetCode: () => ({ commands: t }) => t.unsetMark(this.name)
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-e": () => this.editor.commands.toggleCode()
    };
  },
  addInputRules() {
    return [
      gl({
        find: aL,
        type: this.type
      })
    ];
  },
  addPasteRules() {
    return [
      la({
        find: lL,
        type: this.type
      })
    ];
  }
}), fL = /(?:^|\s)(\*(?!\s+\*)((?:[^*]+))\*(?!\s+\*))$/, dL = /(?:^|\s)(\*(?!\s+\*)((?:[^*]+))\*(?!\s+\*))/g, uL = /(?:^|\s)(_(?!\s+_)((?:[^_]+))_(?!\s+_))$/, hL = /(?:^|\s)(_(?!\s+_)((?:[^_]+))_(?!\s+_))/g, pL = Fi.create({
  name: "italic",
  addOptions() {
    return {
      HTMLAttributes: {}
    };
  },
  parseHTML() {
    return [
      {
        tag: "em"
      },
      {
        tag: "i",
        getAttrs: (t) => t.style.fontStyle !== "normal" && null
      },
      {
        style: "font-style=italic"
      }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    return ["em", gi(this.options.HTMLAttributes, t), 0];
  },
  addCommands() {
    return {
      setItalic: () => ({ commands: t }) => t.setMark(this.name),
      toggleItalic: () => ({ commands: t }) => t.toggleMark(this.name),
      unsetItalic: () => ({ commands: t }) => t.unsetMark(this.name)
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-i": () => this.editor.commands.toggleItalic(),
      "Mod-I": () => this.editor.commands.toggleItalic()
    };
  },
  addInputRules() {
    return [
      gl({
        find: fL,
        type: this.type
      }),
      gl({
        find: uL,
        type: this.type
      })
    ];
  },
  addPasteRules() {
    return [
      la({
        find: dL,
        type: this.type
      }),
      la({
        find: hL,
        type: this.type
      })
    ];
  }
}), mL = /(?:^|\s)(~~(?!\s+~~)((?:[^~]+))~~(?!\s+~~))$/, gL = /(?:^|\s)(~~(?!\s+~~)((?:[^~]+))~~(?!\s+~~))/g, yL = Fi.create({
  name: "strike",
  addOptions() {
    return {
      HTMLAttributes: {}
    };
  },
  parseHTML() {
    return [
      {
        tag: "s"
      },
      {
        tag: "del"
      },
      {
        tag: "strike"
      },
      {
        style: "text-decoration",
        consuming: !1,
        getAttrs: (t) => t.includes("line-through") ? {} : !1
      }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    return ["s", gi(this.options.HTMLAttributes, t), 0];
  },
  addCommands() {
    return {
      setStrike: () => ({ commands: t }) => t.setMark(this.name),
      toggleStrike: () => ({ commands: t }) => t.toggleMark(this.name),
      unsetStrike: () => ({ commands: t }) => t.unsetMark(this.name)
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-Shift-s": () => this.editor.commands.toggleStrike()
    };
  },
  addInputRules() {
    return [
      gl({
        find: mL,
        type: this.type
      })
    ];
  },
  addPasteRules() {
    return [
      la({
        find: gL,
        type: this.type
      })
    ];
  }
}), vL = Fi.create({
  name: "underline",
  addOptions() {
    return {
      HTMLAttributes: {}
    };
  },
  parseHTML() {
    return [
      {
        tag: "u"
      },
      {
        style: "text-decoration",
        consuming: !1,
        getAttrs: (t) => t.includes("underline") ? {} : !1
      }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    return ["u", gi(this.options.HTMLAttributes, t), 0];
  },
  addCommands() {
    return {
      setUnderline: () => ({ commands: t }) => t.setMark(this.name),
      toggleUnderline: () => ({ commands: t }) => t.toggleMark(this.name),
      unsetUnderline: () => ({ commands: t }) => t.unsetMark(this.name)
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-u": () => this.editor.commands.toggleUnderline(),
      "Mod-U": () => this.editor.commands.toggleUnderline()
    };
  }
}), bL = jr.create({
  name: "tableCell",
  addOptions() {
    return {
      HTMLAttributes: {}
    };
  },
  content: "block+",
  addAttributes() {
    return {
      colspan: {
        default: 1
      },
      rowspan: {
        default: 1
      },
      colwidth: {
        default: null,
        parseHTML: (t) => {
          const e = t.getAttribute("colwidth");
          return e ? [parseInt(e, 10)] : null;
        }
      }
    };
  },
  tableRole: "cell",
  isolating: !0,
  parseHTML() {
    return [
      { tag: "td" }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    return ["td", gi(this.options.HTMLAttributes, t), 0];
  }
}), kL = jr.create({
  name: "tableHeader",
  addOptions() {
    return {
      HTMLAttributes: {}
    };
  },
  content: "block+",
  addAttributes() {
    return {
      colspan: {
        default: 1
      },
      rowspan: {
        default: 1
      },
      colwidth: {
        default: null,
        parseHTML: (t) => {
          const e = t.getAttribute("colwidth");
          return e ? [parseInt(e, 10)] : null;
        }
      }
    };
  },
  tableRole: "header_cell",
  isolating: !0,
  parseHTML() {
    return [
      { tag: "th" }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    return ["th", gi(this.options.HTMLAttributes, t), 0];
  }
}), wL = jr.create({
  name: "tableRow",
  addOptions() {
    return {
      HTMLAttributes: {}
    };
  },
  content: "(tableCell | tableHeader)*",
  tableRole: "row",
  parseHTML() {
    return [
      { tag: "tr" }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    return ["tr", gi(this.options.HTMLAttributes, t), 0];
  }
});
var J0, X0;
if (typeof WeakMap < "u") {
  let t = /* @__PURE__ */ new WeakMap();
  J0 = (e) => t.get(e), X0 = (e, n) => (t.set(e, n), n);
} else {
  const t = [];
  let n = 0;
  J0 = (i) => {
    for (let r = 0; r < t.length; r += 2)
      if (t[r] == i)
        return t[r + 1];
  }, X0 = (i, r) => (n == 10 && (n = 0), t[n++] = i, t[n++] = r);
}
var cn = class {
  constructor(t, e, n, i) {
    this.width = t, this.height = e, this.map = n, this.problems = i;
  }
  // Find the dimensions of the cell at the given position.
  findCell(t) {
    for (let e = 0; e < this.map.length; e++) {
      const n = this.map[e];
      if (n != t)
        continue;
      const i = e % this.width, r = e / this.width | 0;
      let o = i + 1, s = r + 1;
      for (let a = 1; o < this.width && this.map[e + a] == n; a++)
        o++;
      for (let a = 1; s < this.height && this.map[e + this.width * a] == n; a++)
        s++;
      return { left: i, top: r, right: o, bottom: s };
    }
    throw new RangeError(`No cell with offset ${t} found`);
  }
  // Find the left side of the cell at the given position.
  colCount(t) {
    for (let e = 0; e < this.map.length; e++)
      if (this.map[e] == t)
        return e % this.width;
    throw new RangeError(`No cell with offset ${t} found`);
  }
  // Find the next cell in the given direction, starting from the cell
  // at `pos`, if any.
  nextCell(t, e, n) {
    const { left: i, right: r, top: o, bottom: s } = this.findCell(t);
    return e == "horiz" ? (n < 0 ? i == 0 : r == this.width) ? null : this.map[o * this.width + (n < 0 ? i - 1 : r)] : (n < 0 ? o == 0 : s == this.height) ? null : this.map[i + this.width * (n < 0 ? o - 1 : s)];
  }
  // Get the rectangle spanning the two given cells.
  rectBetween(t, e) {
    const {
      left: n,
      right: i,
      top: r,
      bottom: o
    } = this.findCell(t), {
      left: s,
      right: a,
      top: l,
      bottom: c
    } = this.findCell(e);
    return {
      left: Math.min(n, s),
      top: Math.min(r, l),
      right: Math.max(i, a),
      bottom: Math.max(o, c)
    };
  }
  // Return the position of all cells that have the top left corner in
  // the given rectangle.
  cellsInRect(t) {
    const e = [], n = {};
    for (let i = t.top; i < t.bottom; i++)
      for (let r = t.left; r < t.right; r++) {
        const o = i * this.width + r, s = this.map[o];
        n[s] || (n[s] = !0, !(r == t.left && r && this.map[o - 1] == s || i == t.top && i && this.map[o - this.width] == s) && e.push(s));
      }
    return e;
  }
  // Return the position at which the cell at the given row and column
  // starts, or would start, if a cell started there.
  positionAt(t, e, n) {
    for (let i = 0, r = 0; ; i++) {
      const o = r + n.child(i).nodeSize;
      if (i == t) {
        let s = e + t * this.width;
        const a = (t + 1) * this.width;
        for (; s < a && this.map[s] < r; )
          s++;
        return s == a ? o - 1 : this.map[s];
      }
      r = o;
    }
  }
  // Find the table map for the given table node.
  static get(t) {
    return J0(t) || X0(t, _L(t));
  }
};
function _L(t) {
  if (t.type.spec.tableRole != "table")
    throw new RangeError("Not a table node: " + t.type.name);
  const e = EL(t), n = t.childCount, i = [];
  let r = 0, o = null;
  const s = [];
  for (let c = 0, f = e * n; c < f; c++)
    i[c] = 0;
  for (let c = 0, f = 0; c < n; c++) {
    const d = t.child(c);
    f++;
    for (let p = 0; ; p++) {
      for (; r < i.length && i[r] != 0; )
        r++;
      if (p == d.childCount)
        break;
      const m = d.child(p), { colspan: v, rowspan: y, colwidth: C } = m.attrs;
      for (let k = 0; k < y; k++) {
        if (k + c >= n) {
          (o || (o = [])).push({
            type: "overlong_rowspan",
            pos: f,
            n: y - k
          });
          break;
        }
        const _ = r + k * e;
        for (let S = 0; S < v; S++) {
          i[_ + S] == 0 ? i[_ + S] = f : (o || (o = [])).push({
            type: "collision",
            row: c,
            pos: f,
            n: v - S
          });
          const E = C && C[S];
          if (E) {
            const x = (_ + S) % e * 2, N = s[x];
            N == null || N != E && s[x + 1] == 1 ? (s[x] = E, s[x + 1] = 1) : N == E && s[x + 1]++;
          }
        }
      }
      r += v, f += m.nodeSize;
    }
    const u = (c + 1) * e;
    let h = 0;
    for (; r < u; )
      i[r++] == 0 && h++;
    h && (o || (o = [])).push({ type: "missing", row: c, n: h }), f++;
  }
  const a = new cn(e, n, i, o);
  let l = !1;
  for (let c = 0; !l && c < s.length; c += 2)
    s[c] != null && s[c + 1] < n && (l = !0);
  return l && TL(a, s, t), a;
}
function EL(t) {
  let e = -1, n = !1;
  for (let i = 0; i < t.childCount; i++) {
    const r = t.child(i);
    let o = 0;
    if (n)
      for (let s = 0; s < i; s++) {
        const a = t.child(s);
        for (let l = 0; l < a.childCount; l++) {
          const c = a.child(l);
          s + c.attrs.rowspan > i && (o += c.attrs.colspan);
        }
      }
    for (let s = 0; s < r.childCount; s++) {
      const a = r.child(s);
      o += a.attrs.colspan, a.attrs.rowspan > 1 && (n = !0);
    }
    e == -1 ? e = o : e != o && (e = Math.max(e, o));
  }
  return e;
}
function TL(t, e, n) {
  t.problems || (t.problems = []);
  const i = {};
  for (let r = 0; r < t.map.length; r++) {
    const o = t.map[r];
    if (i[o])
      continue;
    i[o] = !0;
    const s = n.nodeAt(o);
    if (!s)
      throw new RangeError(`No cell with offset ${o} found`);
    let a = null;
    const l = s.attrs;
    for (let c = 0; c < l.colspan; c++) {
      const f = (r + c) % t.width, d = e[f * 2];
      d != null && (!l.colwidth || l.colwidth[c] != d) && ((a || (a = CL(l)))[c] = d);
    }
    a && t.problems.unshift({
      type: "colwidth mismatch",
      pos: o,
      colwidth: a
    });
  }
}
function CL(t) {
  if (t.colwidth)
    return t.colwidth.slice();
  const e = [];
  for (let n = 0; n < t.colspan; n++)
    e.push(0);
  return e;
}
function Lr(t) {
  let e = t.cached.tableNodeTypes;
  if (!e) {
    e = t.cached.tableNodeTypes = {};
    for (const n in t.nodes) {
      const i = t.nodes[n], r = i.spec.tableRole;
      r && (e[r] = i);
    }
  }
  return e;
}
var Zo = new Ct("selectingCells");
function Sf(t) {
  for (let e = t.depth - 1; e > 0; e--)
    if (t.node(e).type.spec.tableRole == "row")
      return t.node(0).resolve(t.before(e + 1));
  return null;
}
function $y(t) {
  const e = t.selection.$head;
  for (let n = e.depth; n > 0; n--)
    if (e.node(n).type.spec.tableRole == "row")
      return !0;
  return !1;
}
function j6(t) {
  const e = t.selection;
  if ("$anchorCell" in e && e.$anchorCell)
    return e.$anchorCell.pos > e.$headCell.pos ? e.$anchorCell : e.$headCell;
  if ("node" in e && e.node && e.node.type.spec.tableRole == "cell")
    return e.$anchor;
  const n = Sf(e.$head) || SL(e.$head);
  if (n)
    return n;
  throw new RangeError(`No cell found around position ${e.head}`);
}
function SL(t) {
  for (let e = t.nodeAfter, n = t.pos; e; e = e.firstChild, n++) {
    const i = e.type.spec.tableRole;
    if (i == "cell" || i == "header_cell")
      return t.doc.resolve(n);
  }
  for (let e = t.nodeBefore, n = t.pos; e; e = e.lastChild, n--) {
    const i = e.type.spec.tableRole;
    if (i == "cell" || i == "header_cell")
      return t.doc.resolve(n - e.nodeSize);
  }
}
function Q0(t) {
  return t.parent.type.spec.tableRole == "row" && !!t.nodeAfter;
}
function jy(t, e) {
  return t.depth == e.depth && t.pos >= e.start(-1) && t.pos <= e.end(-1);
}
function z6(t, e, n) {
  const i = t.node(-1), r = cn.get(i), o = t.start(-1), s = r.nextCell(t.pos - o, e, n);
  return s == null ? null : t.node(0).resolve(o + s);
}
function yl(t, e, n = 1) {
  const i = { ...t, colspan: t.colspan - n };
  return i.colwidth && (i.colwidth = i.colwidth.slice(), i.colwidth.splice(e, n), i.colwidth.some((r) => r > 0) || (i.colwidth = null)), i;
}
var on = class to extends $e {
  // A table selection is identified by its anchor and head cells. The
  // positions given to this constructor should point _before_ two
  // cells in the same table. They may be the same, to select a single
  // cell.
  constructor(e, n = e) {
    const i = e.node(-1), r = cn.get(i), o = e.start(-1), s = r.rectBetween(
      e.pos - o,
      n.pos - o
    ), a = e.node(0), l = r.cellsInRect(s).filter((f) => f != n.pos - o);
    l.unshift(n.pos - o);
    const c = l.map((f) => {
      const d = i.nodeAt(f);
      if (!d)
        throw RangeError(`No cell with offset ${f} found`);
      const u = o + f + 1;
      return new M5(
        a.resolve(u),
        a.resolve(u + d.content.size)
      );
    });
    super(c[0].$from, c[0].$to, c), this.$anchorCell = e, this.$headCell = n;
  }
  map(e, n) {
    const i = e.resolve(n.map(this.$anchorCell.pos)), r = e.resolve(n.map(this.$headCell.pos));
    if (Q0(i) && Q0(r) && jy(i, r)) {
      const o = this.$anchorCell.node(-1) != i.node(-1);
      return o && this.isRowSelection() ? to.rowSelection(i, r) : o && this.isColSelection() ? to.colSelection(i, r) : new to(i, r);
    }
    return ze.between(i, r);
  }
  // Returns a rectangular slice of table rows containing the selected
  // cells.
  content() {
    const e = this.$anchorCell.node(-1), n = cn.get(e), i = this.$anchorCell.start(-1), r = n.rectBetween(
      this.$anchorCell.pos - i,
      this.$headCell.pos - i
    ), o = {}, s = [];
    for (let l = r.top; l < r.bottom; l++) {
      const c = [];
      for (let f = l * n.width + r.left, d = r.left; d < r.right; d++, f++) {
        const u = n.map[f];
        if (o[u])
          continue;
        o[u] = !0;
        const h = n.findCell(u);
        let p = e.nodeAt(u);
        if (!p)
          throw RangeError(`No cell with offset ${u} found`);
        const m = r.left - h.left, v = h.right - r.right;
        if (m > 0 || v > 0) {
          let y = p.attrs;
          if (m > 0 && (y = yl(y, 0, m)), v > 0 && (y = yl(
            y,
            y.colspan - v,
            v
          )), h.left < r.left) {
            if (p = p.type.createAndFill(y), !p)
              throw RangeError(
                `Could not create cell with attrs ${JSON.stringify(y)}`
              );
          } else
            p = p.type.create(y, p.content);
        }
        if (h.top < r.top || h.bottom > r.bottom) {
          const y = {
            ...p.attrs,
            rowspan: Math.min(h.bottom, r.bottom) - Math.max(h.top, r.top)
          };
          h.top < r.top ? p = p.type.createAndFill(y) : p = p.type.create(y, p.content);
        }
        c.push(p);
      }
      s.push(e.child(l).copy(ie.from(c)));
    }
    const a = this.isColSelection() && this.isRowSelection() ? e : s;
    return new be(ie.from(a), 1, 1);
  }
  replace(e, n = be.empty) {
    const i = e.steps.length, r = this.ranges;
    for (let s = 0; s < r.length; s++) {
      const { $from: a, $to: l } = r[s], c = e.mapping.slice(i);
      e.replace(
        c.map(a.pos),
        c.map(l.pos),
        s ? be.empty : n
      );
    }
    const o = $e.findFrom(
      e.doc.resolve(e.mapping.slice(i).map(this.to)),
      -1
    );
    o && e.setSelection(o);
  }
  replaceWith(e, n) {
    this.replace(e, new be(ie.from(n), 0, 0));
  }
  forEachCell(e) {
    const n = this.$anchorCell.node(-1), i = cn.get(n), r = this.$anchorCell.start(-1), o = i.cellsInRect(
      i.rectBetween(
        this.$anchorCell.pos - r,
        this.$headCell.pos - r
      )
    );
    for (let s = 0; s < o.length; s++)
      e(n.nodeAt(o[s]), r + o[s]);
  }
  // True if this selection goes all the way from the top to the
  // bottom of the table.
  isColSelection() {
    const e = this.$anchorCell.index(-1), n = this.$headCell.index(-1);
    if (Math.min(e, n) > 0)
      return !1;
    const i = e + this.$anchorCell.nodeAfter.attrs.rowspan, r = n + this.$headCell.nodeAfter.attrs.rowspan;
    return Math.max(i, r) == this.$headCell.node(-1).childCount;
  }
  // Returns the smallest column selection that covers the given anchor
  // and head cell.
  static colSelection(e, n = e) {
    const i = e.node(-1), r = cn.get(i), o = e.start(-1), s = r.findCell(e.pos - o), a = r.findCell(n.pos - o), l = e.node(0);
    return s.top <= a.top ? (s.top > 0 && (e = l.resolve(o + r.map[s.left])), a.bottom < r.height && (n = l.resolve(
      o + r.map[r.width * (r.height - 1) + a.right - 1]
    ))) : (a.top > 0 && (n = l.resolve(o + r.map[a.left])), s.bottom < r.height && (e = l.resolve(
      o + r.map[r.width * (r.height - 1) + s.right - 1]
    ))), new to(e, n);
  }
  // True if this selection goes all the way from the left to the
  // right of the table.
  isRowSelection() {
    const e = this.$anchorCell.node(-1), n = cn.get(e), i = this.$anchorCell.start(-1), r = n.colCount(this.$anchorCell.pos - i), o = n.colCount(this.$headCell.pos - i);
    if (Math.min(r, o) > 0)
      return !1;
    const s = r + this.$anchorCell.nodeAfter.attrs.colspan, a = o + this.$headCell.nodeAfter.attrs.colspan;
    return Math.max(s, a) == n.width;
  }
  eq(e) {
    return e instanceof to && e.$anchorCell.pos == this.$anchorCell.pos && e.$headCell.pos == this.$headCell.pos;
  }
  // Returns the smallest row selection that covers the given anchor
  // and head cell.
  static rowSelection(e, n = e) {
    const i = e.node(-1), r = cn.get(i), o = e.start(-1), s = r.findCell(e.pos - o), a = r.findCell(n.pos - o), l = e.node(0);
    return s.left <= a.left ? (s.left > 0 && (e = l.resolve(
      o + r.map[s.top * r.width]
    )), a.right < r.width && (n = l.resolve(
      o + r.map[r.width * (a.top + 1) - 1]
    ))) : (a.left > 0 && (n = l.resolve(o + r.map[a.top * r.width])), s.right < r.width && (e = l.resolve(
      o + r.map[r.width * (s.top + 1) - 1]
    ))), new to(e, n);
  }
  toJSON() {
    return {
      type: "cell",
      anchor: this.$anchorCell.pos,
      head: this.$headCell.pos
    };
  }
  static fromJSON(e, n) {
    return new to(e.resolve(n.anchor), e.resolve(n.head));
  }
  static create(e, n, i = n) {
    return new to(e.resolve(n), e.resolve(i));
  }
  getBookmark() {
    return new xL(this.$anchorCell.pos, this.$headCell.pos);
  }
};
on.prototype.visible = !1;
$e.jsonID("cell", on);
var xL = class U6 {
  constructor(e, n) {
    this.anchor = e, this.head = n;
  }
  map(e) {
    return new U6(e.map(this.anchor), e.map(this.head));
  }
  resolve(e) {
    const n = e.resolve(this.anchor), i = e.resolve(this.head);
    return n.parent.type.spec.tableRole == "row" && i.parent.type.spec.tableRole == "row" && n.index() < n.parent.childCount && i.index() < i.parent.childCount && jy(n, i) ? new on(n, i) : $e.near(i, 1);
  }
};
function AL(t) {
  if (!(t.selection instanceof on))
    return null;
  const e = [];
  return t.selection.forEachCell((n, i) => {
    e.push(
      Qt.node(i, i + n.nodeSize, { class: "selectedCell" })
    );
  }), Tt.create(t.doc, e);
}
function ML({ $from: t, $to: e }) {
  if (t.pos == e.pos || t.pos < t.pos - 6)
    return !1;
  let n = t.pos, i = e.pos, r = t.depth;
  for (; r >= 0 && !(t.after(r + 1) < t.end(r)); r--, n++)
    ;
  for (let o = e.depth; o >= 0 && !(e.before(o + 1) > e.start(o)); o--, i--)
    ;
  return n == i && /row|table/.test(t.node(r).type.spec.tableRole);
}
function NL({ $from: t, $to: e }) {
  let n, i;
  for (let r = t.depth; r > 0; r--) {
    const o = t.node(r);
    if (o.type.spec.tableRole === "cell" || o.type.spec.tableRole === "header_cell") {
      n = o;
      break;
    }
  }
  for (let r = e.depth; r > 0; r--) {
    const o = e.node(r);
    if (o.type.spec.tableRole === "cell" || o.type.spec.tableRole === "header_cell") {
      i = o;
      break;
    }
  }
  return n !== i && e.parentOffset === 0;
}
function OL(t, e, n) {
  const i = (e || t).selection, r = (e || t).doc;
  let o, s;
  if (i instanceof Ie && (s = i.node.type.spec.tableRole)) {
    if (s == "cell" || s == "header_cell")
      o = on.create(r, i.from);
    else if (s == "row") {
      const a = r.resolve(i.from + 1);
      o = on.rowSelection(a, a);
    } else if (!n) {
      const a = cn.get(i.node), l = i.from + 1, c = l + a.map[a.width * a.height - 1];
      o = on.create(r, l + 1, c);
    }
  } else i instanceof ze && ML(i) ? o = ze.create(r, i.from) : i instanceof ze && NL(i) && (o = ze.create(r, i.$from.start(), i.$from.end()));
  return o && (e || (e = t.tr)).setSelection(o), e;
}
var RL = new Ct("fix-tables");
function V6(t, e, n, i) {
  const r = t.childCount, o = e.childCount;
  e:
    for (let s = 0, a = 0; s < o; s++) {
      const l = e.child(s);
      for (let c = a, f = Math.min(r, s + 3); c < f; c++)
        if (t.child(c) == l) {
          a = c + 1, n += l.nodeSize;
          continue e;
        }
      i(l, n), a < r && t.child(a).sameMarkup(l) ? V6(t.child(a), l, n + 1, i) : l.nodesBetween(0, l.content.size, i, n + 1), n += l.nodeSize;
    }
}
function IL(t, e) {
  let n;
  const i = (r, o) => {
    r.type.spec.tableRole == "table" && (n = LL(t, r, o, n));
  };
  return e ? e.doc != t.doc && V6(e.doc, t.doc, 0, i) : t.doc.descendants(i), n;
}
function LL(t, e, n, i) {
  const r = cn.get(e);
  if (!r.problems)
    return i;
  i || (i = t.tr);
  const o = [];
  for (let l = 0; l < r.height; l++)
    o.push(0);
  for (let l = 0; l < r.problems.length; l++) {
    const c = r.problems[l];
    if (c.type == "collision") {
      const f = e.nodeAt(c.pos);
      if (!f)
        continue;
      const d = f.attrs;
      for (let u = 0; u < d.rowspan; u++)
        o[c.row + u] += c.n;
      i.setNodeMarkup(
        i.mapping.map(n + 1 + c.pos),
        null,
        yl(d, d.colspan - c.n, c.n)
      );
    } else if (c.type == "missing")
      o[c.row] += c.n;
    else if (c.type == "overlong_rowspan") {
      const f = e.nodeAt(c.pos);
      if (!f)
        continue;
      i.setNodeMarkup(i.mapping.map(n + 1 + c.pos), null, {
        ...f.attrs,
        rowspan: f.attrs.rowspan - c.n
      });
    } else if (c.type == "colwidth mismatch") {
      const f = e.nodeAt(c.pos);
      if (!f)
        continue;
      i.setNodeMarkup(i.mapping.map(n + 1 + c.pos), null, {
        ...f.attrs,
        colwidth: c.colwidth
      });
    }
  }
  let s, a;
  for (let l = 0; l < o.length; l++)
    o[l] && (s == null && (s = l), a = l);
  for (let l = 0, c = n + 1; l < r.height; l++) {
    const f = e.child(l), d = c + f.nodeSize, u = o[l];
    if (u > 0) {
      let h = "cell";
      f.firstChild && (h = f.firstChild.type.spec.tableRole);
      const p = [];
      for (let v = 0; v < u; v++) {
        const y = Lr(t.schema)[h].createAndFill();
        y && p.push(y);
      }
      const m = (l == 0 || s == l - 1) && a == l ? c + 1 : d - 1;
      i.insert(i.mapping.map(m), p);
    }
    c = d;
  }
  return i.setMeta(RL, { fixTables: !0 });
}
function W6(t) {
  const e = t.selection, n = j6(t), i = n.node(-1), r = n.start(-1), o = cn.get(i);
  return { ...e instanceof on ? o.rectBetween(
    e.$anchorCell.pos - r,
    e.$headCell.pos - r
  ) : o.findCell(n.pos - r), tableStart: r, map: o, table: i };
}
function DL(t) {
  return function(e, n) {
    if (!$y(e))
      return !1;
    if (n) {
      const i = Lr(e.schema), r = W6(e), o = e.tr, s = r.map.cellsInRect(
        t == "column" ? {
          left: r.left,
          top: 0,
          right: r.right,
          bottom: r.map.height
        } : t == "row" ? {
          left: 0,
          top: r.top,
          right: r.map.width,
          bottom: r.bottom
        } : r
      ), a = s.map((l) => r.table.nodeAt(l));
      for (let l = 0; l < s.length; l++)
        a[l].type == i.header_cell && o.setNodeMarkup(
          r.tableStart + s[l],
          i.cell,
          a[l].attrs
        );
      if (o.steps.length == 0)
        for (let l = 0; l < s.length; l++)
          o.setNodeMarkup(
            r.tableStart + s[l],
            i.header_cell,
            a[l].attrs
          );
      n(o);
    }
    return !0;
  };
}
function R2(t, e, n) {
  const i = e.map.cellsInRect({
    left: 0,
    top: 0,
    right: t == "row" ? e.map.width : 1,
    bottom: t == "column" ? e.map.height : 1
  });
  for (let r = 0; r < i.length; r++) {
    const o = e.table.nodeAt(i[r]);
    if (o && o.type !== n.header_cell)
      return !1;
  }
  return !0;
}
function zy(t, e) {
  return e = e || { useDeprecatedLogic: !1 }, e.useDeprecatedLogic ? DL(t) : function(n, i) {
    if (!$y(n))
      return !1;
    if (i) {
      const r = Lr(n.schema), o = W6(n), s = n.tr, a = R2("row", o, r), l = R2(
        "column",
        o,
        r
      ), f = (t === "column" ? a : t === "row" ? l : !1) ? 1 : 0, d = t == "column" ? {
        left: 0,
        top: f,
        right: 1,
        bottom: o.map.height
      } : t == "row" ? {
        left: f,
        top: 0,
        right: o.map.width,
        bottom: 1
      } : o, u = t == "column" ? l ? r.cell : r.header_cell : t == "row" ? a ? r.cell : r.header_cell : r.cell;
      o.map.cellsInRect(d).forEach((h) => {
        const p = h + o.tableStart, m = s.doc.nodeAt(p);
        m && s.setNodeMarkup(p, u, m.attrs);
      }), i(s);
    }
    return !0;
  };
}
zy("row", {
  useDeprecatedLogic: !0
});
zy("column", {
  useDeprecatedLogic: !0
});
zy("cell", {
  useDeprecatedLogic: !0
});
function ad(t, e) {
  const n = t.selection;
  if (!(n instanceof on))
    return !1;
  if (e) {
    const i = t.tr, r = Lr(t.schema).cell.createAndFill().content;
    n.forEachCell((o, s) => {
      o.content.eq(r) || i.replace(
        i.mapping.map(s + 1),
        i.mapping.map(s + o.nodeSize - 1),
        new be(r, 0, 0)
      );
    }), i.docChanged && e(i);
  }
  return !0;
}
function PL(t) {
  if (!t.size)
    return null;
  let { content: e, openStart: n, openEnd: i } = t;
  for (; e.childCount == 1 && (n > 0 && i > 0 || e.child(0).type.spec.tableRole == "table"); )
    n--, i--, e = e.child(0).content;
  const r = e.child(0), o = r.type.spec.tableRole, s = r.type.schema, a = [];
  if (o == "row")
    for (let l = 0; l < e.childCount; l++) {
      let c = e.child(l).content;
      const f = l ? 0 : Math.max(0, n - 1), d = l < e.childCount - 1 ? 0 : Math.max(0, i - 1);
      (f || d) && (c = Z0(
        Lr(s).row,
        new be(c, f, d)
      ).content), a.push(c);
    }
  else if (o == "cell" || o == "header_cell")
    a.push(
      n || i ? Z0(
        Lr(s).row,
        new be(e, n, i)
      ).content : e
    );
  else
    return null;
  return FL(s, a);
}
function FL(t, e) {
  const n = [];
  for (let r = 0; r < e.length; r++) {
    const o = e[r];
    for (let s = o.childCount - 1; s >= 0; s--) {
      const { rowspan: a, colspan: l } = o.child(s).attrs;
      for (let c = r; c < r + a; c++)
        n[c] = (n[c] || 0) + l;
    }
  }
  let i = 0;
  for (let r = 0; r < n.length; r++)
    i = Math.max(i, n[r]);
  for (let r = 0; r < n.length; r++)
    if (r >= e.length && e.push(ie.empty), n[r] < i) {
      const o = Lr(t).cell.createAndFill(), s = [];
      for (let a = n[r]; a < i; a++)
        s.push(o);
      e[r] = e[r].append(ie.from(s));
    }
  return { height: e.length, width: i, rows: e };
}
function Z0(t, e) {
  const n = t.createAndFill();
  return new _y(n).replace(0, n.content.size, e).doc;
}
function BL({ width: t, height: e, rows: n }, i, r) {
  if (t != i) {
    const o = [], s = [];
    for (let a = 0; a < n.length; a++) {
      const l = n[a], c = [];
      for (let f = o[a] || 0, d = 0; f < i; d++) {
        let u = l.child(d % l.childCount);
        f + u.attrs.colspan > i && (u = u.type.createChecked(
          yl(
            u.attrs,
            u.attrs.colspan,
            f + u.attrs.colspan - i
          ),
          u.content
        )), c.push(u), f += u.attrs.colspan;
        for (let h = 1; h < u.attrs.rowspan; h++)
          o[a + h] = (o[a + h] || 0) + u.attrs.colspan;
      }
      s.push(ie.from(c));
    }
    n = s, t = i;
  }
  if (e != r) {
    const o = [];
    for (let s = 0, a = 0; s < r; s++, a++) {
      const l = [], c = n[a % e];
      for (let f = 0; f < c.childCount; f++) {
        let d = c.child(f);
        s + d.attrs.rowspan > r && (d = d.type.create(
          {
            ...d.attrs,
            rowspan: Math.max(1, r - d.attrs.rowspan)
          },
          d.content
        )), l.push(d);
      }
      o.push(ie.from(l));
    }
    n = o, e = r;
  }
  return { width: t, height: e, rows: n };
}
function HL(t, e, n, i, r, o, s) {
  const a = t.doc.type.schema, l = Lr(a);
  let c, f;
  if (r > e.width)
    for (let d = 0, u = 0; d < e.height; d++) {
      const h = n.child(d);
      u += h.nodeSize;
      const p = [];
      let m;
      h.lastChild == null || h.lastChild.type == l.cell ? m = c || (c = l.cell.createAndFill()) : m = f || (f = l.header_cell.createAndFill());
      for (let v = e.width; v < r; v++)
        p.push(m);
      t.insert(t.mapping.slice(s).map(u - 1 + i), p);
    }
  if (o > e.height) {
    const d = [];
    for (let p = 0, m = (e.height - 1) * e.width; p < Math.max(e.width, r); p++) {
      const v = p >= e.width ? !1 : n.nodeAt(e.map[m + p]).type == l.header_cell;
      d.push(
        v ? f || (f = l.header_cell.createAndFill()) : c || (c = l.cell.createAndFill())
      );
    }
    const u = l.row.create(null, ie.from(d)), h = [];
    for (let p = e.height; p < o; p++)
      h.push(u);
    t.insert(t.mapping.slice(s).map(i + n.nodeSize - 2), h);
  }
  return !!(c || f);
}
function I2(t, e, n, i, r, o, s, a) {
  if (s == 0 || s == e.height)
    return !1;
  let l = !1;
  for (let c = r; c < o; c++) {
    const f = s * e.width + c, d = e.map[f];
    if (e.map[f - e.width] == d) {
      l = !0;
      const u = n.nodeAt(d), { top: h, left: p } = e.findCell(d);
      t.setNodeMarkup(t.mapping.slice(a).map(d + i), null, {
        ...u.attrs,
        rowspan: s - h
      }), t.insert(
        t.mapping.slice(a).map(e.positionAt(s, p, n)),
        u.type.createAndFill({
          ...u.attrs,
          rowspan: h + u.attrs.rowspan - s
        })
      ), c += u.attrs.colspan - 1;
    }
  }
  return l;
}
function L2(t, e, n, i, r, o, s, a) {
  if (s == 0 || s == e.width)
    return !1;
  let l = !1;
  for (let c = r; c < o; c++) {
    const f = c * e.width + s, d = e.map[f];
    if (e.map[f - 1] == d) {
      l = !0;
      const u = n.nodeAt(d), h = e.colCount(d), p = t.mapping.slice(a).map(d + i);
      t.setNodeMarkup(
        p,
        null,
        yl(
          u.attrs,
          s - h,
          u.attrs.colspan - (s - h)
        )
      ), t.insert(
        p + u.nodeSize,
        u.type.createAndFill(
          yl(u.attrs, 0, s - h)
        )
      ), c += u.attrs.rowspan - 1;
    }
  }
  return l;
}
function D2(t, e, n, i, r) {
  let o = n ? t.doc.nodeAt(n - 1) : t.doc;
  if (!o)
    throw new Error("No table found");
  let s = cn.get(o);
  const { top: a, left: l } = i, c = l + r.width, f = a + r.height, d = t.tr;
  let u = 0;
  function h() {
    if (o = n ? d.doc.nodeAt(n - 1) : d.doc, !o)
      throw new Error("No table found");
    s = cn.get(o), u = d.mapping.maps.length;
  }
  HL(d, s, o, n, c, f, u) && h(), I2(d, s, o, n, l, c, a, u) && h(), I2(d, s, o, n, l, c, f, u) && h(), L2(d, s, o, n, a, f, l, u) && h(), L2(d, s, o, n, a, f, c, u) && h();
  for (let p = a; p < f; p++) {
    const m = s.positionAt(p, l, o), v = s.positionAt(p, c, o);
    d.replace(
      d.mapping.slice(u).map(m + n),
      d.mapping.slice(u).map(v + n),
      new be(r.rows[p - a], 0, 0)
    );
  }
  h(), d.setSelection(
    new on(
      d.doc.resolve(n + s.positionAt(a, l, o)),
      d.doc.resolve(n + s.positionAt(f - 1, c - 1, o))
    )
  ), e(d);
}
var $L = Iy({
  ArrowLeft: ld("horiz", -1),
  ArrowRight: ld("horiz", 1),
  ArrowUp: ld("vert", -1),
  ArrowDown: ld("vert", 1),
  "Shift-ArrowLeft": cd("horiz", -1),
  "Shift-ArrowRight": cd("horiz", 1),
  "Shift-ArrowUp": cd("vert", -1),
  "Shift-ArrowDown": cd("vert", 1),
  Backspace: ad,
  "Mod-Backspace": ad,
  Delete: ad,
  "Mod-Delete": ad
});
function iu(t, e, n) {
  return n.eq(t.selection) ? !1 : (e && e(t.tr.setSelection(n).scrollIntoView()), !0);
}
function ld(t, e) {
  return (n, i, r) => {
    if (!r)
      return !1;
    const o = n.selection;
    if (o instanceof on)
      return iu(
        n,
        i,
        $e.near(o.$headCell, e)
      );
    if (t != "horiz" && !o.empty)
      return !1;
    const s = q6(r, t, e);
    if (s == null)
      return !1;
    if (t == "horiz")
      return iu(
        n,
        i,
        $e.near(n.doc.resolve(o.head + e), e)
      );
    {
      const a = n.doc.resolve(s), l = z6(a, t, e);
      let c;
      return l ? c = $e.near(l, 1) : e < 0 ? c = $e.near(n.doc.resolve(a.before(-1)), -1) : c = $e.near(n.doc.resolve(a.after(-1)), 1), iu(n, i, c);
    }
  };
}
function cd(t, e) {
  return (n, i, r) => {
    if (!r)
      return !1;
    const o = n.selection;
    let s;
    if (o instanceof on)
      s = o;
    else {
      const l = q6(r, t, e);
      if (l == null)
        return !1;
      s = new on(n.doc.resolve(l));
    }
    const a = z6(s.$headCell, t, e);
    return a ? iu(
      n,
      i,
      new on(s.$anchorCell, a)
    ) : !1;
  };
}
function jL(t, e) {
  const n = t.state.doc, i = Sf(n.resolve(e));
  return i ? (t.dispatch(t.state.tr.setSelection(new on(i))), !0) : !1;
}
function zL(t, e, n) {
  if (!$y(t.state))
    return !1;
  let i = PL(n);
  const r = t.state.selection;
  if (r instanceof on) {
    i || (i = {
      width: 1,
      height: 1,
      rows: [
        ie.from(
          Z0(Lr(t.state.schema).cell, n)
        )
      ]
    });
    const o = r.$anchorCell.node(-1), s = r.$anchorCell.start(-1), a = cn.get(o).rectBetween(
      r.$anchorCell.pos - s,
      r.$headCell.pos - s
    );
    return i = BL(i, a.right - a.left, a.bottom - a.top), D2(t.state, t.dispatch, s, a, i), !0;
  } else if (i) {
    const o = j6(t.state), s = o.start(-1);
    return D2(
      t.state,
      t.dispatch,
      s,
      cn.get(o.node(-1)).findCell(o.pos - s),
      i
    ), !0;
  } else
    return !1;
}
function UL(t, e) {
  var n;
  if (e.ctrlKey || e.metaKey)
    return;
  const i = P2(t, e.target);
  let r;
  if (e.shiftKey && t.state.selection instanceof on)
    o(t.state.selection.$anchorCell, e), e.preventDefault();
  else if (e.shiftKey && i && (r = Sf(t.state.selection.$anchor)) != null && ((n = Jp(t, e)) == null ? void 0 : n.pos) != r.pos)
    o(r, e), e.preventDefault();
  else if (!i)
    return;
  function o(l, c) {
    let f = Jp(t, c);
    const d = Zo.getState(t.state) == null;
    if (!f || !jy(l, f))
      if (d)
        f = l;
      else
        return;
    const u = new on(l, f);
    if (d || !t.state.selection.eq(u)) {
      const h = t.state.tr.setSelection(u);
      d && h.setMeta(Zo, l.pos), t.dispatch(h);
    }
  }
  function s() {
    t.root.removeEventListener("mouseup", s), t.root.removeEventListener("dragstart", s), t.root.removeEventListener("mousemove", a), Zo.getState(t.state) != null && t.dispatch(t.state.tr.setMeta(Zo, -1));
  }
  function a(l) {
    const c = l, f = Zo.getState(t.state);
    let d;
    if (f != null)
      d = t.state.doc.resolve(f);
    else if (P2(t, c.target) != i && (d = Jp(t, e), !d))
      return s();
    d && o(d, c);
  }
  t.root.addEventListener("mouseup", s), t.root.addEventListener("dragstart", s), t.root.addEventListener("mousemove", a);
}
function q6(t, e, n) {
  if (!(t.state.selection instanceof ze))
    return null;
  const { $head: i } = t.state.selection;
  for (let r = i.depth - 1; r >= 0; r--) {
    const o = i.node(r);
    if ((n < 0 ? i.index(r) : i.indexAfter(r)) != (n < 0 ? 0 : o.childCount))
      return null;
    if (o.type.spec.tableRole == "cell" || o.type.spec.tableRole == "header_cell") {
      const a = i.before(r), l = e == "vert" ? n > 0 ? "down" : "up" : n > 0 ? "right" : "left";
      return t.endOfTextblock(l) ? a : null;
    }
  }
  return null;
}
function P2(t, e) {
  for (; e && e != t.dom; e = e.parentNode)
    if (e.nodeName == "TD" || e.nodeName == "TH")
      return e;
  return null;
}
function Jp(t, e) {
  const n = t.posAtCoords({
    left: e.clientX,
    top: e.clientY
  });
  return n && n ? Sf(t.state.doc.resolve(n.pos)) : null;
}
var VL = class {
  constructor(t, e) {
    this.node = t, this.cellMinWidth = e, this.dom = document.createElement("div"), this.dom.className = "tableWrapper", this.table = this.dom.appendChild(document.createElement("table")), this.colgroup = this.table.appendChild(document.createElement("colgroup")), eg(t, this.colgroup, this.table, e), this.contentDOM = this.table.appendChild(document.createElement("tbody"));
  }
  update(t) {
    return t.type != this.node.type ? !1 : (this.node = t, eg(t, this.colgroup, this.table, this.cellMinWidth), !0);
  }
  ignoreMutation(t) {
    return t.type == "attributes" && (t.target == this.table || this.colgroup.contains(t.target));
  }
};
function eg(t, e, n, i, r, o) {
  var s;
  let a = 0, l = !0, c = e.firstChild;
  const f = t.firstChild;
  if (f) {
    for (let d = 0, u = 0; d < f.childCount; d++) {
      const { colspan: h, colwidth: p } = f.child(d).attrs;
      for (let m = 0; m < h; m++, u++) {
        const v = r == u ? o : p && p[m], y = v ? v + "px" : "";
        a += v || i, v || (l = !1), c ? (c.style.width != y && (c.style.width = y), c = c.nextSibling) : e.appendChild(document.createElement("col")).style.width = y;
      }
    }
    for (; c; ) {
      const d = c.nextSibling;
      (s = c.parentNode) == null || s.removeChild(c), c = d;
    }
    l ? (n.style.width = a + "px", n.style.minWidth = "") : (n.style.width = "", n.style.minWidth = a + "px");
  }
}
var Mi = new Ct(
  "tableColumnResizing"
);
function WL({
  handleWidth: t = 5,
  cellMinWidth: e = 25,
  View: n = VL,
  lastColumnResizable: i = !0
} = {}) {
  const r = new mt({
    key: Mi,
    state: {
      init(o, s) {
        var a, l;
        const c = (l = (a = r.spec) == null ? void 0 : a.props) == null ? void 0 : l.nodeViews, f = Lr(s.schema).table.name;
        return n && c && (c[f] = (d, u) => new n(d, e, u)), new qL(-1, !1);
      },
      apply(o, s) {
        return s.apply(o);
      }
    },
    props: {
      attributes: (o) => {
        const s = Mi.getState(o);
        return s && s.activeHandle > -1 ? { class: "resize-cursor" } : {};
      },
      handleDOMEvents: {
        mousemove: (o, s) => {
          GL(
            o,
            s,
            t,
            e,
            i
          );
        },
        mouseleave: (o) => {
          KL(o);
        },
        mousedown: (o, s) => {
          YL(o, s, e);
        }
      },
      decorations: (o) => {
        const s = Mi.getState(o);
        if (s && s.activeHandle > -1)
          return tD(o, s.activeHandle);
      },
      nodeViews: {}
    }
  });
  return r;
}
var qL = class ru {
  constructor(e, n) {
    this.activeHandle = e, this.dragging = n;
  }
  apply(e) {
    const n = this, i = e.getMeta(Mi);
    if (i && i.setHandle != null)
      return new ru(i.setHandle, !1);
    if (i && i.setDragging !== void 0)
      return new ru(n.activeHandle, i.setDragging);
    if (n.activeHandle > -1 && e.docChanged) {
      let r = e.mapping.map(n.activeHandle, -1);
      return Q0(e.doc.resolve(r)) || (r = -1), new ru(r, n.dragging);
    }
    return n;
  }
};
function GL(t, e, n, i, r) {
  const o = Mi.getState(t.state);
  if (o && !o.dragging) {
    const s = XL(e.target);
    let a = -1;
    if (s) {
      const { left: l, right: c } = s.getBoundingClientRect();
      e.clientX - l <= n ? a = F2(t, e, "left", n) : c - e.clientX <= n && (a = F2(t, e, "right", n));
    }
    if (a != o.activeHandle) {
      if (!r && a !== -1) {
        const l = t.state.doc.resolve(a), c = l.node(-1), f = cn.get(c), d = l.start(-1);
        if (f.colCount(l.pos - d) + l.nodeAfter.attrs.colspan - 1 == f.width - 1)
          return;
      }
      G6(t, a);
    }
  }
}
function KL(t) {
  const e = Mi.getState(t.state);
  e && e.activeHandle > -1 && !e.dragging && G6(t, -1);
}
function YL(t, e, n) {
  var i;
  const r = (i = t.dom.ownerDocument.defaultView) != null ? i : window, o = Mi.getState(t.state);
  if (!o || o.activeHandle == -1 || o.dragging)
    return !1;
  const s = t.state.doc.nodeAt(o.activeHandle), a = JL(t, o.activeHandle, s.attrs);
  t.dispatch(
    t.state.tr.setMeta(Mi, {
      setDragging: { startX: e.clientX, startWidth: a }
    })
  );
  function l(f) {
    r.removeEventListener("mouseup", l), r.removeEventListener("mousemove", c);
    const d = Mi.getState(t.state);
    d != null && d.dragging && (QL(
      t,
      d.activeHandle,
      B2(d.dragging, f, n)
    ), t.dispatch(
      t.state.tr.setMeta(Mi, { setDragging: null })
    ));
  }
  function c(f) {
    if (!f.which)
      return l(f);
    const d = Mi.getState(t.state);
    if (d && d.dragging) {
      const u = B2(d.dragging, f, n);
      ZL(t, d.activeHandle, u, n);
    }
  }
  return r.addEventListener("mouseup", l), r.addEventListener("mousemove", c), e.preventDefault(), !0;
}
function JL(t, e, { colspan: n, colwidth: i }) {
  const r = i && i[i.length - 1];
  if (r)
    return r;
  const o = t.domAtPos(e);
  let a = o.node.childNodes[o.offset].offsetWidth, l = n;
  if (i)
    for (let c = 0; c < n; c++)
      i[c] && (a -= i[c], l--);
  return a / l;
}
function XL(t) {
  for (; t && t.nodeName != "TD" && t.nodeName != "TH"; )
    t = t.classList && t.classList.contains("ProseMirror") ? null : t.parentNode;
  return t;
}
function F2(t, e, n, i) {
  const r = n == "right" ? -i : i, o = t.posAtCoords({
    left: e.clientX + r,
    top: e.clientY
  });
  if (!o)
    return -1;
  const { pos: s } = o, a = Sf(t.state.doc.resolve(s));
  if (!a)
    return -1;
  if (n == "right")
    return a.pos;
  const l = cn.get(a.node(-1)), c = a.start(-1), f = l.map.indexOf(a.pos - c);
  return f % l.width == 0 ? -1 : c + l.map[f - 1];
}
function B2(t, e, n) {
  const i = e.clientX - t.startX;
  return Math.max(n, t.startWidth + i);
}
function G6(t, e) {
  t.dispatch(
    t.state.tr.setMeta(Mi, { setHandle: e })
  );
}
function QL(t, e, n) {
  const i = t.state.doc.resolve(e), r = i.node(-1), o = cn.get(r), s = i.start(-1), a = o.colCount(i.pos - s) + i.nodeAfter.attrs.colspan - 1, l = t.state.tr;
  for (let c = 0; c < o.height; c++) {
    const f = c * o.width + a;
    if (c && o.map[f] == o.map[f - o.width])
      continue;
    const d = o.map[f], u = r.nodeAt(d).attrs, h = u.colspan == 1 ? 0 : a - o.colCount(d);
    if (u.colwidth && u.colwidth[h] == n)
      continue;
    const p = u.colwidth ? u.colwidth.slice() : eD(u.colspan);
    p[h] = n, l.setNodeMarkup(s + d, null, { ...u, colwidth: p });
  }
  l.docChanged && t.dispatch(l);
}
function ZL(t, e, n, i) {
  const r = t.state.doc.resolve(e), o = r.node(-1), s = r.start(-1), a = cn.get(o).colCount(r.pos - s) + r.nodeAfter.attrs.colspan - 1;
  let l = t.domAtPos(r.start(-1)).node;
  for (; l && l.nodeName != "TABLE"; )
    l = l.parentNode;
  l && eg(
    o,
    l.firstChild,
    l,
    i,
    a,
    n
  );
}
function eD(t) {
  return Array(t).fill(0);
}
function tD(t, e) {
  const n = [], i = t.doc.resolve(e), r = i.node(-1);
  if (!r)
    return Tt.empty;
  const o = cn.get(r), s = i.start(-1), a = o.colCount(i.pos - s) + i.nodeAfter.attrs.colspan - 1;
  for (let l = 0; l < o.height; l++) {
    const c = a + l * o.width;
    if ((a == o.width - 1 || o.map[c] != o.map[c + 1]) && (l == 0 || o.map[c] != o.map[c - o.width])) {
      const f = o.map[c], d = s + f + r.nodeAt(f).nodeSize - 1, u = document.createElement("div");
      u.className = "column-resize-handle", n.push(Qt.widget(d, u));
    }
  }
  return Tt.create(t.doc, n);
}
function nD({
  allowTableNodeSelection: t = !1
} = {}) {
  return new mt({
    key: Zo,
    // This piece of state is used to remember when a mouse-drag
    // cell-selection is happening, so that it can continue even as
    // transactions (which might move its anchor cell) come in.
    state: {
      init() {
        return null;
      },
      apply(e, n) {
        const i = e.getMeta(Zo);
        if (i != null)
          return i == -1 ? null : i;
        if (n == null || !e.docChanged)
          return n;
        const { deleted: r, pos: o } = e.mapping.mapResult(n);
        return r ? null : o;
      }
    },
    props: {
      decorations: AL,
      handleDOMEvents: {
        mousedown: UL
      },
      createSelectionBetween(e) {
        return Zo.getState(e.state) != null ? e.state.selection : null;
      },
      handleTripleClick: jL,
      handleKeyDown: $L,
      handlePaste: zL
    },
    appendTransaction(e, n, i) {
      return OL(
        i,
        IL(i, n),
        t
      );
    }
  });
}
const Gn = () => /* @__PURE__ */ new Map(), tg = (t) => {
  const e = Gn();
  return t.forEach((n, i) => {
    e.set(i, n);
  }), e;
}, si = (t, e, n) => {
  let i = t.get(e);
  return i === void 0 && t.set(e, i = n()), i;
}, iD = (t, e) => {
  const n = [];
  for (const [i, r] of t)
    n.push(e(r, i));
  return n;
}, rD = (t, e) => {
  for (const [n, i] of t)
    if (e(i, n))
      return !0;
  return !1;
}, vo = () => /* @__PURE__ */ new Set(), Xp = (t) => t[t.length - 1], oD = (t, e) => {
  for (let n = 0; n < e.length; n++)
    t.push(e[n]);
}, bo = Array.from, sD = (t, e) => {
  for (let n = 0; n < t.length; n++)
    if (e(t[n], n, t))
      return !0;
  return !1;
}, ng = Array.isArray;
class Uy {
  constructor() {
    this._observers = Gn();
  }
  /**
   * @template {keyof EVENTS & string} NAME
   * @param {NAME} name
   * @param {EVENTS[NAME]} f
   */
  on(e, n) {
    return si(
      this._observers,
      /** @type {string} */
      e,
      vo
    ).add(n), n;
  }
  /**
   * @template {keyof EVENTS & string} NAME
   * @param {NAME} name
   * @param {EVENTS[NAME]} f
   */
  once(e, n) {
    const i = (...r) => {
      this.off(
        e,
        /** @type {any} */
        i
      ), n(...r);
    };
    this.on(
      e,
      /** @type {any} */
      i
    );
  }
  /**
   * @template {keyof EVENTS & string} NAME
   * @param {NAME} name
   * @param {EVENTS[NAME]} f
   */
  off(e, n) {
    const i = this._observers.get(e);
    i !== void 0 && (i.delete(n), i.size === 0 && this._observers.delete(e));
  }
  /**
   * Emit a named event. All registered event listeners that listen to the
   * specified name will receive the event.
   *
   * @todo This should catch exceptions
   *
   * @template {keyof EVENTS & string} NAME
   * @param {NAME} name The event name.
   * @param {Parameters<EVENTS[NAME]>} args The arguments that are applied to the event listener.
   */
  emit(e, n) {
    return bo((this._observers.get(e) || Gn()).values()).forEach((i) => i(...n));
  }
  destroy() {
    this._observers = Gn();
  }
}
class K6 {
  constructor() {
    this._observers = Gn();
  }
  /**
   * @param {N} name
   * @param {function} f
   */
  on(e, n) {
    si(this._observers, e, vo).add(n);
  }
  /**
   * @param {N} name
   * @param {function} f
   */
  once(e, n) {
    const i = (...r) => {
      this.off(e, i), n(...r);
    };
    this.on(e, i);
  }
  /**
   * @param {N} name
   * @param {function} f
   */
  off(e, n) {
    const i = this._observers.get(e);
    i !== void 0 && (i.delete(n), i.size === 0 && this._observers.delete(e));
  }
  /**
   * Emit a named event. All registered event listeners that listen to the
   * specified name will receive the event.
   *
   * @todo This should catch exceptions
   *
   * @param {N} name The event name.
   * @param {Array<any>} args The arguments that are applied to the event listener.
   */
  emit(e, n) {
    return bo((this._observers.get(e) || Gn()).values()).forEach((i) => i(...n));
  }
  destroy() {
    this._observers = Gn();
  }
}
const sr = Math.floor, ou = Math.abs, aD = Math.log10, us = (t, e) => t < e ? t : e, ko = (t, e) => t > e ? t : e, Y6 = (t) => t !== 0 ? t < 0 : 1 / t < 0, H2 = 1, $2 = 2, Qp = 4, Zp = 8, tf = 32, fo = 64, di = 128, Ch = 31, ig = 63, ta = 127, lD = 2147483647, J6 = Number.MAX_SAFE_INTEGER, cD = Number.isInteger || ((t) => typeof t == "number" && isFinite(t) && sr(t) === t), fD = String.fromCharCode, dD = (t) => t.toLowerCase(), uD = /^\s*/g, hD = (t) => t.replace(uD, ""), pD = /([A-Z])/g, j2 = (t, e) => hD(t.replace(pD, (n) => `${e}${dD(n)}`)), mD = (t) => {
  const e = unescape(encodeURIComponent(t)), n = e.length, i = new Uint8Array(n);
  for (let r = 0; r < n; r++)
    i[r] = /** @type {number} */
    e.codePointAt(r);
  return i;
}, nf = (
  /** @type {TextEncoder} */
  typeof TextEncoder < "u" ? new TextEncoder() : null
), gD = (t) => nf.encode(t), rg = nf ? gD : mD;
let Nc = typeof TextDecoder > "u" ? null : new TextDecoder("utf-8", { fatal: !0, ignoreBOM: !0 });
Nc && Nc.decode(new Uint8Array()).length === 1 && (Nc = null);
class xf {
  constructor() {
    this.cpos = 0, this.cbuf = new Uint8Array(100), this.bufs = [];
  }
}
const kn = () => new xf(), yD = (t) => {
  let e = t.cpos;
  for (let n = 0; n < t.bufs.length; n++)
    e += t.bufs[n].length;
  return e;
}, qt = (t) => {
  const e = new Uint8Array(yD(t));
  let n = 0;
  for (let i = 0; i < t.bufs.length; i++) {
    const r = t.bufs[i];
    e.set(r, n), n += r.length;
  }
  return e.set(new Uint8Array(t.cbuf.buffer, 0, t.cpos), n), e;
}, vD = (t, e) => {
  const n = t.cbuf.length;
  n - t.cpos < e && (t.bufs.push(new Uint8Array(t.cbuf.buffer, 0, t.cpos)), t.cbuf = new Uint8Array(ko(n, e) * 2), t.cpos = 0);
}, vn = (t, e) => {
  const n = t.cbuf.length;
  t.cpos === n && (t.bufs.push(t.cbuf), t.cbuf = new Uint8Array(n * 2), t.cpos = 0), t.cbuf[t.cpos++] = e;
}, rf = vn, Fe = (t, e) => {
  for (; e > ta; )
    vn(t, di | ta & e), e = sr(e / 128);
  vn(t, ta & e);
}, Vy = (t, e) => {
  const n = Y6(e);
  for (n && (e = -e), vn(t, (e > ig ? di : 0) | (n ? fo : 0) | ig & e), e = sr(e / 64); e > 0; )
    vn(t, (e > ta ? di : 0) | ta & e), e = sr(e / 128);
}, og = new Uint8Array(3e4), bD = og.length / 3, kD = (t, e) => {
  if (e.length < bD) {
    const n = nf.encodeInto(e, og).written || 0;
    Fe(t, n);
    for (let i = 0; i < n; i++)
      vn(t, og[i]);
  } else
    Jt(t, rg(e));
}, wD = (t, e) => {
  const n = unescape(encodeURIComponent(e)), i = n.length;
  Fe(t, i);
  for (let r = 0; r < i; r++)
    vn(
      t,
      /** @type {number} */
      n.codePointAt(r)
    );
}, xr = nf && /** @type {any} */
nf.encodeInto ? kD : wD, Sh = (t, e) => {
  const n = t.cbuf.length, i = t.cpos, r = us(n - i, e.length), o = e.length - r;
  t.cbuf.set(e.subarray(0, r), i), t.cpos += r, o > 0 && (t.bufs.push(t.cbuf), t.cbuf = new Uint8Array(ko(n * 2, o)), t.cbuf.set(e.subarray(r)), t.cpos = o);
}, Jt = (t, e) => {
  Fe(t, e.byteLength), Sh(t, e);
}, Wy = (t, e) => {
  vD(t, e);
  const n = new DataView(t.cbuf.buffer, t.cpos, e);
  return t.cpos += e, n;
}, _D = (t, e) => Wy(t, 4).setFloat32(0, e, !1), ED = (t, e) => Wy(t, 8).setFloat64(0, e, !1), TD = (t, e) => (
  /** @type {any} */
  Wy(t, 8).setBigInt64(0, e, !1)
), z2 = new DataView(new ArrayBuffer(4)), CD = (t) => (z2.setFloat32(0, t), z2.getFloat32(0) === t), vl = (t, e) => {
  switch (typeof e) {
    case "string":
      vn(t, 119), xr(t, e);
      break;
    case "number":
      cD(e) && ou(e) <= lD ? (vn(t, 125), Vy(t, e)) : CD(e) ? (vn(t, 124), _D(t, e)) : (vn(t, 123), ED(t, e));
      break;
    case "bigint":
      vn(t, 122), TD(t, e);
      break;
    case "object":
      if (e === null)
        vn(t, 126);
      else if (ng(e)) {
        vn(t, 117), Fe(t, e.length);
        for (let n = 0; n < e.length; n++)
          vl(t, e[n]);
      } else if (e instanceof Uint8Array)
        vn(t, 116), Jt(t, e);
      else {
        vn(t, 118);
        const n = Object.keys(e);
        Fe(t, n.length);
        for (let i = 0; i < n.length; i++) {
          const r = n[i];
          xr(t, r), vl(t, e[r]);
        }
      }
      break;
    case "boolean":
      vn(t, e ? 120 : 121);
      break;
    default:
      vn(t, 127);
  }
};
class U2 extends xf {
  /**
   * @param {function(Encoder, T):void} writer
   */
  constructor(e) {
    super(), this.w = e, this.s = null, this.count = 0;
  }
  /**
   * @param {T} v
   */
  write(e) {
    this.s === e ? this.count++ : (this.count > 0 && Fe(this, this.count - 1), this.count = 1, this.w(this, e), this.s = e);
  }
}
const V2 = (t) => {
  t.count > 0 && (Vy(t.encoder, t.count === 1 ? t.s : -t.s), t.count > 1 && Fe(t.encoder, t.count - 2));
};
class su {
  constructor() {
    this.encoder = new xf(), this.s = 0, this.count = 0;
  }
  /**
   * @param {number} v
   */
  write(e) {
    this.s === e ? this.count++ : (V2(this), this.count = 1, this.s = e);
  }
  /**
   * Flush the encoded state and transform this to a Uint8Array.
   *
   * Note that this should only be called once.
   */
  toUint8Array() {
    return V2(this), qt(this.encoder);
  }
}
const W2 = (t) => {
  if (t.count > 0) {
    const e = t.diff * 2 + (t.count === 1 ? 0 : 1);
    Vy(t.encoder, e), t.count > 1 && Fe(t.encoder, t.count - 2);
  }
};
class em {
  constructor() {
    this.encoder = new xf(), this.s = 0, this.count = 0, this.diff = 0;
  }
  /**
   * @param {number} v
   */
  write(e) {
    this.diff === e - this.s ? (this.s = e, this.count++) : (W2(this), this.count = 1, this.diff = e - this.s, this.s = e);
  }
  /**
   * Flush the encoded state and transform this to a Uint8Array.
   *
   * Note that this should only be called once.
   */
  toUint8Array() {
    return W2(this), qt(this.encoder);
  }
}
class SD {
  constructor() {
    this.sarr = [], this.s = "", this.lensE = new su();
  }
  /**
   * @param {string} string
   */
  write(e) {
    this.s += e, this.s.length > 19 && (this.sarr.push(this.s), this.s = ""), this.lensE.write(e.length);
  }
  toUint8Array() {
    const e = new xf();
    return this.sarr.push(this.s), this.s = "", xr(e, this.sarr.join("")), Sh(e, this.lensE.toUint8Array()), qt(e);
  }
}
const Dr = (t) => new Error(t), tr = () => {
  throw Dr("Method unimplemented");
}, yi = () => {
  throw Dr("Unexpected case");
}, X6 = Dr("Unexpected end of array"), Q6 = Dr("Integer out of Range");
class xh {
  /**
   * @param {Uint8Array} uint8Array Binary data to decode
   */
  constructor(e) {
    this.arr = e, this.pos = 0;
  }
}
const zr = (t) => new xh(t), xD = (t) => t.pos !== t.arr.length, AD = (t, e) => {
  const n = new Uint8Array(t.arr.buffer, t.pos + t.arr.byteOffset, e);
  return t.pos += e, n;
}, bn = (t) => AD(t, Qe(t)), ca = (t) => t.arr[t.pos++], Qe = (t) => {
  let e = 0, n = 1;
  const i = t.arr.length;
  for (; t.pos < i; ) {
    const r = t.arr[t.pos++];
    if (e = e + (r & ta) * n, n *= 128, r < di)
      return e;
    if (e > J6)
      throw Q6;
  }
  throw X6;
}, qy = (t) => {
  let e = t.arr[t.pos++], n = e & ig, i = 64;
  const r = (e & fo) > 0 ? -1 : 1;
  if (!(e & di))
    return r * n;
  const o = t.arr.length;
  for (; t.pos < o; ) {
    if (e = t.arr[t.pos++], n = n + (e & ta) * i, i *= 128, e < di)
      return r * n;
    if (n > J6)
      throw Q6;
  }
  throw X6;
}, MD = (t) => {
  let e = Qe(t);
  if (e === 0)
    return "";
  {
    let n = String.fromCodePoint(ca(t));
    if (--e < 100)
      for (; e--; )
        n += String.fromCodePoint(ca(t));
    else
      for (; e > 0; ) {
        const i = e < 1e4 ? e : 1e4, r = t.arr.subarray(t.pos, t.pos + i);
        t.pos += i, n += String.fromCodePoint.apply(
          null,
          /** @type {any} */
          r
        ), e -= i;
      }
    return decodeURIComponent(escape(n));
  }
}, ND = (t) => (
  /** @type any */
  Nc.decode(bn(t))
), uo = Nc ? ND : MD, Gy = (t, e) => {
  const n = new DataView(t.arr.buffer, t.arr.byteOffset + t.pos, e);
  return t.pos += e, n;
}, OD = (t) => Gy(t, 4).getFloat32(0, !1), RD = (t) => Gy(t, 8).getFloat64(0, !1), ID = (t) => (
  /** @type {any} */
  Gy(t, 8).getBigInt64(0, !1)
), LD = [
  (t) => {
  },
  // CASE 127: undefined
  (t) => null,
  // CASE 126: null
  qy,
  // CASE 125: integer
  OD,
  // CASE 124: float32
  RD,
  // CASE 123: float64
  ID,
  // CASE 122: bigint
  (t) => !1,
  // CASE 121: boolean (false)
  (t) => !0,
  // CASE 120: boolean (true)
  uo,
  // CASE 119: string
  (t) => {
    const e = Qe(t), n = {};
    for (let i = 0; i < e; i++) {
      const r = uo(t);
      n[r] = bl(t);
    }
    return n;
  },
  (t) => {
    const e = Qe(t), n = [];
    for (let i = 0; i < e; i++)
      n.push(bl(t));
    return n;
  },
  bn
  // CASE 116: Uint8Array
], bl = (t) => LD[127 - ca(t)](t);
class q2 extends xh {
  /**
   * @param {Uint8Array} uint8Array
   * @param {function(Decoder):T} reader
   */
  constructor(e, n) {
    super(e), this.reader = n, this.s = null, this.count = 0;
  }
  read() {
    return this.count === 0 && (this.s = this.reader(this), xD(this) ? this.count = Qe(this) + 1 : this.count = -1), this.count--, /** @type {T} */
    this.s;
  }
}
class au extends xh {
  /**
   * @param {Uint8Array} uint8Array
   */
  constructor(e) {
    super(e), this.s = 0, this.count = 0;
  }
  read() {
    if (this.count === 0) {
      this.s = qy(this);
      const e = Y6(this.s);
      this.count = 1, e && (this.s = -this.s, this.count = Qe(this) + 2);
    }
    return this.count--, /** @type {number} */
    this.s;
  }
}
class tm extends xh {
  /**
   * @param {Uint8Array} uint8Array
   */
  constructor(e) {
    super(e), this.s = 0, this.count = 0, this.diff = 0;
  }
  /**
   * @return {number}
   */
  read() {
    if (this.count === 0) {
      const e = qy(this), n = e & 1;
      this.diff = sr(e / 2), this.count = 1, n && (this.count = Qe(this) + 2);
    }
    return this.s += this.diff, this.count--, this.s;
  }
}
class DD {
  /**
   * @param {Uint8Array} uint8Array
   */
  constructor(e) {
    this.decoder = new au(e), this.str = uo(this.decoder), this.spos = 0;
  }
  /**
   * @return {string}
   */
  read() {
    const e = this.spos + this.decoder.read(), n = this.str.slice(this.spos, e);
    return this.spos = e, n;
  }
}
const PD = crypto.getRandomValues.bind(crypto), Z6 = Math.random, e8 = () => PD(new Uint32Array(1))[0], FD = (t) => t[sr(Z6() * t.length)], BD = "10000000-1000-4000-8000" + -1e11, t8 = () => BD.replace(
  /[018]/g,
  /** @param {number} c */
  (t) => (t ^ e8() & 15 >> t / 4).toString(16)
), Pr = Date.now, G2 = (t) => (
  /** @type {Promise<T>} */
  new Promise(t)
);
Promise.all.bind(Promise);
const HD = (t) => Promise.reject(t), Ky = (t) => Promise.resolve(t), K2 = (t) => t === void 0 ? null : t;
class $D {
  constructor() {
    this.map = /* @__PURE__ */ new Map();
  }
  /**
   * @param {string} key
   * @param {any} newValue
   */
  setItem(e, n) {
    this.map.set(e, n);
  }
  /**
   * @param {string} key
   */
  getItem(e) {
    return this.map.get(e);
  }
}
let n8 = new $D(), Yy = !0;
try {
  typeof localStorage < "u" && localStorage && (n8 = localStorage, Yy = !1);
} catch {
}
const i8 = n8, jD = (t) => Yy || addEventListener(
  "storage",
  /** @type {any} */
  t
), zD = (t) => Yy || removeEventListener(
  "storage",
  /** @type {any} */
  t
), UD = Object.assign, Jy = Object.keys, VD = (t, e) => {
  for (const n in t)
    e(t[n], n);
}, Y2 = (t) => Jy(t).length, J2 = (t) => Jy(t).length, WD = (t) => {
  for (const e in t)
    return !1;
  return !0;
}, qD = (t, e) => {
  for (const n in t)
    if (!e(t[n], n))
      return !1;
  return !0;
}, r8 = (t, e) => Object.prototype.hasOwnProperty.call(t, e), GD = (t, e) => t === e || J2(t) === J2(e) && qD(t, (n, i) => (n !== void 0 || r8(e, i)) && e[i] === n), KD = Object.freeze, o8 = (t) => {
  for (const e in t) {
    const n = t[e];
    (typeof n == "object" || typeof n == "function") && o8(t[e]);
  }
  return KD(t);
}, Xy = (t, e, n = 0) => {
  try {
    for (; n < t.length; n++)
      t[n](...e);
  } finally {
    n < t.length && Xy(t, e, n + 1);
  }
}, YD = () => {
}, JD = (t) => t, XD = (t, e) => t === e, Oc = (t, e) => {
  if (t == null || e == null)
    return XD(t, e);
  if (t.constructor !== e.constructor)
    return !1;
  if (t === e)
    return !0;
  switch (t.constructor) {
    case ArrayBuffer:
      t = new Uint8Array(t), e = new Uint8Array(e);
    case Uint8Array: {
      if (t.byteLength !== e.byteLength)
        return !1;
      for (let n = 0; n < t.length; n++)
        if (t[n] !== e[n])
          return !1;
      break;
    }
    case Set: {
      if (t.size !== e.size)
        return !1;
      for (const n of t)
        if (!e.has(n))
          return !1;
      break;
    }
    case Map: {
      if (t.size !== e.size)
        return !1;
      for (const n of t.keys())
        if (!e.has(n) || !Oc(t.get(n), e.get(n)))
          return !1;
      break;
    }
    case Object:
      if (Y2(t) !== Y2(e))
        return !1;
      for (const n in t)
        if (!r8(t, n) || !Oc(t[n], e[n]))
          return !1;
      break;
    case Array:
      if (t.length !== e.length)
        return !1;
      for (let n = 0; n < t.length; n++)
        if (!Oc(t[n], e[n]))
          return !1;
      break;
    default:
      return !1;
  }
  return !0;
}, QD = (t, e) => e.includes(t), kl = typeof process < "u" && process.release && /node|io\.js/.test(process.release.name) && Object.prototype.toString.call(typeof process < "u" ? process : 0) === "[object process]", Qy = typeof window < "u" && typeof document < "u" && !kl;
let mr;
const ZD = () => {
  if (mr === void 0)
    if (kl) {
      mr = Gn();
      const t = process.argv;
      let e = null;
      for (let n = 0; n < t.length; n++) {
        const i = t[n];
        i[0] === "-" ? (e !== null && mr.set(e, ""), e = i) : e !== null && (mr.set(e, i), e = null);
      }
      e !== null && mr.set(e, "");
    } else typeof location == "object" ? (mr = Gn(), (location.search || "?").slice(1).split("&").forEach((t) => {
      if (t.length !== 0) {
        const [e, n] = t.split("=");
        mr.set(`--${j2(e, "-")}`, n), mr.set(`-${j2(e, "-")}`, n);
      }
    })) : mr = Gn();
  return mr;
}, sg = (t) => ZD().has(t), of = (t) => K2(kl ? process.env[t.toUpperCase().replaceAll("-", "_")] : i8.getItem(t)), s8 = (t) => sg("--" + t) || of(t) !== null;
s8("production");
const eP = kl && QD(process.env.FORCE_COLOR, ["true", "1", "2"]), tP = eP || !sg("--no-colors") && // @todo deprecate --no-colors
!s8("no-color") && (!kl || process.stdout.isTTY) && (!kl || sg("--color") || of("COLORTERM") !== null || (of("TERM") || "").includes("color")), a8 = (t) => new Uint8Array(t), nP = (t, e, n) => new Uint8Array(t, e, n), iP = (t) => new Uint8Array(t), rP = (t) => {
  let e = "";
  for (let n = 0; n < t.byteLength; n++)
    e += fD(t[n]);
  return btoa(e);
}, oP = (t) => Buffer.from(t.buffer, t.byteOffset, t.byteLength).toString("base64"), sP = (t) => {
  const e = atob(t), n = a8(e.length);
  for (let i = 0; i < e.length; i++)
    n[i] = e.charCodeAt(i);
  return n;
}, aP = (t) => {
  const e = Buffer.from(t, "base64");
  return nP(e.buffer, e.byteOffset, e.byteLength);
}, l8 = Qy ? rP : oP, c8 = Qy ? sP : aP, lP = (t) => {
  const e = a8(t.byteLength);
  return e.set(t), e;
};
class cP {
  /**
   * @param {L} left
   * @param {R} right
   */
  constructor(e, n) {
    this.left = e, this.right = n;
  }
}
const Kr = (t, e) => new cP(t, e), fP = (
  /** @type {Document} */
  typeof document < "u" ? document : {}
);
typeof DOMParser < "u" && new DOMParser();
const dP = (t) => iD(t, (e, n) => `${n}:${e};`).join(""), uP = JSON.stringify, hP = (t) => class {
  /**
   * @param {number} timeoutId
   */
  constructor(n) {
    this._ = n;
  }
  destroy() {
    t(this._);
  }
}, pP = hP(clearTimeout), Zy = (t, e) => new pP(setTimeout(e, t)), To = Symbol, Ri = To(), fa = To(), f8 = To(), ev = To(), d8 = To(), u8 = To(), h8 = To(), Ah = To(), Mh = To(), mP = (t) => {
  var r;
  t.length === 1 && ((r = t[0]) == null ? void 0 : r.constructor) === Function && (t = /** @type {Array<string|Symbol|Object|number>} */
  /** @type {[function]} */
  t[0]());
  const e = [], n = [];
  let i = 0;
  for (; i < t.length; i++) {
    const o = t[i];
    if (o === void 0)
      break;
    if (o.constructor === String || o.constructor === Number)
      e.push(o);
    else if (o.constructor === Object)
      break;
  }
  for (i > 0 && n.push(e.join("")); i < t.length; i++) {
    const o = t[i];
    o instanceof Symbol || n.push(o);
  }
  return n;
}, X2 = [d8, h8, Ah, f8];
let nm = 0, Q2 = Pr();
const gP = (t, e) => {
  const n = X2[nm], i = of("log"), r = i !== null && (i === "*" || i === "true" || new RegExp(i, "gi").test(e));
  return nm = (nm + 1) % X2.length, e += ": ", r ? (...o) => {
    var l;
    o.length === 1 && ((l = o[0]) == null ? void 0 : l.constructor) === Function && (o = o[0]());
    const s = Pr(), a = s - Q2;
    Q2 = s, t(
      n,
      e,
      Mh,
      ...o.map((c) => {
        switch (c != null && c.constructor === Uint8Array && (c = Array.from(c)), typeof c) {
          case "string":
          case "symbol":
            return c;
          default:
            return uP(c);
        }
      }),
      n,
      " +" + a + "ms"
    );
  } : YD;
}, yP = {
  [Ri]: Kr("font-weight", "bold"),
  [fa]: Kr("font-weight", "normal"),
  [f8]: Kr("color", "blue"),
  [d8]: Kr("color", "green"),
  [ev]: Kr("color", "grey"),
  [u8]: Kr("color", "red"),
  [h8]: Kr("color", "purple"),
  [Ah]: Kr("color", "orange"),
  // not well supported in chrome when debugging node with inspector - TODO: deprecate
  [Mh]: Kr("color", "black")
}, vP = (t) => {
  var s;
  t.length === 1 && ((s = t[0]) == null ? void 0 : s.constructor) === Function && (t = /** @type {Array<string|Symbol|Object|number>} */
  /** @type {[function]} */
  t[0]());
  const e = [], n = [], i = Gn();
  let r = [], o = 0;
  for (; o < t.length; o++) {
    const a = t[o], l = yP[a];
    if (l !== void 0)
      i.set(l.left, l.right);
    else {
      if (a === void 0)
        break;
      if (a.constructor === String || a.constructor === Number) {
        const c = dP(i);
        o > 0 || c.length > 0 ? (e.push("%c" + a), n.push(c)) : e.push(a);
      } else
        break;
    }
  }
  for (o > 0 && (r = n, r.unshift(e.join(""))); o < t.length; o++) {
    const a = t[o];
    a instanceof Symbol || r.push(a);
  }
  return r;
}, p8 = tP ? vP : mP, m8 = (...t) => {
  console.log(...p8(t)), y8.forEach((e) => e.print(t));
}, g8 = (...t) => {
  console.warn(...p8(t)), t.unshift(Ah), y8.forEach((e) => e.print(t));
}, y8 = vo(), bP = (t) => gP(m8, t), v8 = (t) => ({
  /**
   * @return {IterableIterator<T>}
   */
  [Symbol.iterator]() {
    return this;
  },
  // @ts-ignore
  next: t
}), kP = (t, e) => v8(() => {
  let n;
  do
    n = t.next();
  while (!n.done && !e(n.value));
  return n;
}), im = (t, e) => v8(() => {
  const { done: n, value: i } = t.next();
  return { done: n, value: n ? void 0 : e(i) };
});
class tv {
  /**
   * @param {number} clock
   * @param {number} len
   */
  constructor(e, n) {
    this.clock = e, this.len = n;
  }
}
class Ol {
  constructor() {
    this.clients = /* @__PURE__ */ new Map();
  }
}
const vs = (t, e, n) => e.clients.forEach((i, r) => {
  const o = (
    /** @type {Array<GC|Item>} */
    t.doc.store.clients.get(r)
  );
  for (let s = 0; s < i.length; s++) {
    const a = i[s];
    R8(t, o, a.clock, a.len, n);
  }
}), wP = (t, e) => {
  let n = 0, i = t.length - 1;
  for (; n <= i; ) {
    const r = sr((n + i) / 2), o = t[r], s = o.clock;
    if (s <= e) {
      if (e < s + o.len)
        return r;
      n = r + 1;
    } else
      i = r - 1;
  }
  return null;
}, Rl = (t, e) => {
  const n = t.clients.get(e.client);
  return n !== void 0 && wP(n, e.clock) !== null;
}, nv = (t) => {
  t.clients.forEach((e) => {
    e.sort((r, o) => r.clock - o.clock);
    let n, i;
    for (n = 1, i = 1; n < e.length; n++) {
      const r = e[i - 1], o = e[n];
      r.clock + r.len >= o.clock ? r.len = ko(r.len, o.clock + o.len - r.clock) : (i < n && (e[i] = o), i++);
    }
    e.length = i;
  });
}, ag = (t) => {
  const e = new Ol();
  for (let n = 0; n < t.length; n++)
    t[n].clients.forEach((i, r) => {
      if (!e.clients.has(r)) {
        const o = i.slice();
        for (let s = n + 1; s < t.length; s++)
          oD(o, t[s].clients.get(r) || []);
        e.clients.set(r, o);
      }
    });
  return nv(e), e;
}, sf = (t, e, n, i) => {
  si(t.clients, e, () => (
    /** @type {Array<DeleteItem>} */
    []
  )).push(new tv(n, i));
}, b8 = () => new Ol(), k8 = (t) => {
  const e = b8();
  return t.clients.forEach((n, i) => {
    const r = [];
    for (let o = 0; o < n.length; o++) {
      const s = n[o];
      if (s.deleted) {
        const a = s.id.clock;
        let l = s.length;
        if (o + 1 < n.length)
          for (let c = n[o + 1]; o + 1 < n.length && c.deleted; c = n[++o + 1])
            l += c.length;
        r.push(new tv(a, l));
      }
    }
    r.length > 0 && e.clients.set(i, r);
  }), e;
}, Il = (t, e) => {
  Fe(t.restEncoder, e.clients.size), bo(e.clients.entries()).sort((n, i) => i[0] - n[0]).forEach(([n, i]) => {
    t.resetDsCurVal(), Fe(t.restEncoder, n);
    const r = i.length;
    Fe(t.restEncoder, r);
    for (let o = 0; o < r; o++) {
      const s = i[o];
      t.writeDsClock(s.clock), t.writeDsLen(s.len);
    }
  });
}, iv = (t) => {
  const e = new Ol(), n = Qe(t.restDecoder);
  for (let i = 0; i < n; i++) {
    t.resetDsCurVal();
    const r = Qe(t.restDecoder), o = Qe(t.restDecoder);
    if (o > 0) {
      const s = si(e.clients, r, () => (
        /** @type {Array<DeleteItem>} */
        []
      ));
      for (let a = 0; a < o; a++)
        s.push(new tv(t.readDsClock(), t.readDsLen()));
    }
  }
  return e;
}, Z2 = (t, e, n) => {
  const i = new Ol(), r = Qe(t.restDecoder);
  for (let o = 0; o < r; o++) {
    t.resetDsCurVal();
    const s = Qe(t.restDecoder), a = Qe(t.restDecoder), l = n.clients.get(s) || [], c = rn(n, s);
    for (let f = 0; f < a; f++) {
      const d = t.readDsClock(), u = d + t.readDsLen();
      if (d < c) {
        c < u && sf(i, s, c, u - c);
        let h = Fr(l, d), p = l[h];
        for (!p.deleted && p.id.clock < d && (l.splice(h + 1, 0, Ju(e, p, d - p.id.clock)), h++); h < l.length && (p = l[h++], p.id.clock < u); )
          p.deleted || (u < p.id.clock + p.length && l.splice(h, 0, Ju(e, p, u - p.id.clock)), p.delete(e));
      } else
        sf(i, s, d, u - d);
    }
  }
  if (i.clients.size > 0) {
    const o = new da();
    return Fe(o.restEncoder, 0), Il(o, i), o.toUint8Array();
  }
  return null;
}, w8 = e8;
class ba extends Uy {
  /**
   * @param {DocOpts} opts configuration
   */
  constructor({ guid: e = t8(), collectionid: n = null, gc: i = !0, gcFilter: r = () => !0, meta: o = null, autoLoad: s = !1, shouldLoad: a = !0 } = {}) {
    super(), this.gc = i, this.gcFilter = r, this.clientID = w8(), this.guid = e, this.collectionid = n, this.share = /* @__PURE__ */ new Map(), this.store = new N8(), this._transaction = null, this._transactionCleanups = [], this.subdocs = /* @__PURE__ */ new Set(), this._item = null, this.shouldLoad = a, this.autoLoad = s, this.meta = o, this.isLoaded = !1, this.isSynced = !1, this.isDestroyed = !1, this.whenLoaded = G2((c) => {
      this.on("load", () => {
        this.isLoaded = !0, c(this);
      });
    });
    const l = () => G2((c) => {
      const f = (d) => {
        (d === void 0 || d === !0) && (this.off("sync", f), c());
      };
      this.on("sync", f);
    });
    this.on("sync", (c) => {
      c === !1 && this.isSynced && (this.whenSynced = l()), this.isSynced = c === void 0 || c === !0, this.isSynced && !this.isLoaded && this.emit("load", [this]);
    }), this.whenSynced = l();
  }
  /**
   * Notify the parent document that you request to load data into this subdocument (if it is a subdocument).
   *
   * `load()` might be used in the future to request any provider to load the most current data.
   *
   * It is safe to call `load()` multiple times.
   */
  load() {
    const e = this._item;
    e !== null && !this.shouldLoad && Ot(
      /** @type {any} */
      e.parent.doc,
      (n) => {
        n.subdocsLoaded.add(this);
      },
      null,
      !0
    ), this.shouldLoad = !0;
  }
  getSubdocs() {
    return this.subdocs;
  }
  getSubdocGuids() {
    return new Set(bo(this.subdocs).map((e) => e.guid));
  }
  /**
   * Changes that happen inside of a transaction are bundled. This means that
   * the observer fires _after_ the transaction is finished and that all changes
   * that happened inside of the transaction are sent as one message to the
   * other peers.
   *
   * @template T
   * @param {function(Transaction):T} f The function that should be executed as a transaction
   * @param {any} [origin] Origin of who started the transaction. Will be stored on transaction.origin
   * @return T
   *
   * @public
   */
  transact(e, n = null) {
    return Ot(this, e, n);
  }
  /**
   * Define a shared data type.
   *
   * Multiple calls of `ydoc.get(name, TypeConstructor)` yield the same result
   * and do not overwrite each other. I.e.
   * `ydoc.get(name, Y.Array) === ydoc.get(name, Y.Array)`
   *
   * After this method is called, the type is also available on `ydoc.share.get(name)`.
   *
   * *Best Practices:*
   * Define all types right after the Y.Doc instance is created and store them in a separate object.
   * Also use the typed methods `getText(name)`, `getArray(name)`, ..
   *
   * @template {typeof AbstractType<any>} Type
   * @example
   *   const ydoc = new Y.Doc(..)
   *   const appState = {
   *     document: ydoc.getText('document')
   *     comments: ydoc.getArray('comments')
   *   }
   *
   * @param {string} name
   * @param {Type} TypeConstructor The constructor of the type definition. E.g. Y.Text, Y.Array, Y.Map, ...
   * @return {InstanceType<Type>} The created type. Constructed with TypeConstructor
   *
   * @public
   */
  get(e, n = (
    /** @type {any} */
    In
  )) {
    const i = si(this.share, e, () => {
      const o = new n();
      return o._integrate(this, null), o;
    }), r = i.constructor;
    if (n !== In && r !== n)
      if (r === In) {
        const o = new n();
        o._map = i._map, i._map.forEach(
          /** @param {Item?} n */
          (s) => {
            for (; s !== null; s = s.left)
              s.parent = o;
          }
        ), o._start = i._start;
        for (let s = o._start; s !== null; s = s.right)
          s.parent = o;
        return o._length = i._length, this.share.set(e, o), o._integrate(this, null), /** @type {InstanceType<Type>} */
        o;
      } else
        throw new Error(`Type with the name ${e} has already been defined with a different constructor`);
    return (
      /** @type {InstanceType<Type>} */
      i
    );
  }
  /**
   * @template T
   * @param {string} [name]
   * @return {YArray<T>}
   *
   * @public
   */
  getArray(e = "") {
    return (
      /** @type {YArray<T>} */
      this.get(e, rl)
    );
  }
  /**
   * @param {string} [name]
   * @return {YText}
   *
   * @public
   */
  getText(e = "") {
    return this.get(e, bs);
  }
  /**
   * @template T
   * @param {string} [name]
   * @return {YMap<T>}
   *
   * @public
   */
  getMap(e = "") {
    return (
      /** @type {YMap<T>} */
      this.get(e, _l)
    );
  }
  /**
   * @param {string} [name]
   * @return {YXmlElement}
   *
   * @public
   */
  getXmlElement(e = "") {
    return (
      /** @type {YXmlElement<{[key:string]:string}>} */
      this.get(e, Wn)
    );
  }
  /**
   * @param {string} [name]
   * @return {YXmlFragment}
   *
   * @public
   */
  getXmlFragment(e = "") {
    return this.get(e, ua);
  }
  /**
   * Converts the entire document into a js object, recursively traversing each yjs type
   * Doesn't log types that have not been defined (using ydoc.getType(..)).
   *
   * @deprecated Do not use this method and rather call toJSON directly on the shared types.
   *
   * @return {Object<string, any>}
   */
  toJSON() {
    const e = {};
    return this.share.forEach((n, i) => {
      e[i] = n.toJSON();
    }), e;
  }
  /**
   * Emit `destroy` event and unregister all event handlers.
   */
  destroy() {
    this.isDestroyed = !0, bo(this.subdocs).forEach((n) => n.destroy());
    const e = this._item;
    if (e !== null) {
      this._item = null;
      const n = (
        /** @type {ContentDoc} */
        e.content
      );
      n.doc = new ba({ guid: this.guid, ...n.opts, shouldLoad: !1 }), n.doc._item = e, Ot(
        /** @type {any} */
        e.parent.doc,
        (i) => {
          const r = n.doc;
          e.deleted || i.subdocsAdded.add(r), i.subdocsRemoved.add(this);
        },
        null,
        !0
      );
    }
    this.emit("destroyed", [!0]), this.emit("destroy", [this]), super.destroy();
  }
}
class _8 {
  /**
   * @param {decoding.Decoder} decoder
   */
  constructor(e) {
    this.restDecoder = e;
  }
  resetDsCurVal() {
  }
  /**
   * @return {number}
   */
  readDsClock() {
    return Qe(this.restDecoder);
  }
  /**
   * @return {number}
   */
  readDsLen() {
    return Qe(this.restDecoder);
  }
}
class E8 extends _8 {
  /**
   * @return {ID}
   */
  readLeftID() {
    return Ze(Qe(this.restDecoder), Qe(this.restDecoder));
  }
  /**
   * @return {ID}
   */
  readRightID() {
    return Ze(Qe(this.restDecoder), Qe(this.restDecoder));
  }
  /**
   * Read the next client id.
   * Use this in favor of readID whenever possible to reduce the number of objects created.
   */
  readClient() {
    return Qe(this.restDecoder);
  }
  /**
   * @return {number} info An unsigned 8-bit integer
   */
  readInfo() {
    return ca(this.restDecoder);
  }
  /**
   * @return {string}
   */
  readString() {
    return uo(this.restDecoder);
  }
  /**
   * @return {boolean} isKey
   */
  readParentInfo() {
    return Qe(this.restDecoder) === 1;
  }
  /**
   * @return {number} info An unsigned 8-bit integer
   */
  readTypeRef() {
    return Qe(this.restDecoder);
  }
  /**
   * Write len of a struct - well suited for Opt RLE encoder.
   *
   * @return {number} len
   */
  readLen() {
    return Qe(this.restDecoder);
  }
  /**
   * @return {any}
   */
  readAny() {
    return bl(this.restDecoder);
  }
  /**
   * @return {Uint8Array}
   */
  readBuf() {
    return lP(bn(this.restDecoder));
  }
  /**
   * Legacy implementation uses JSON parse. We use any-decoding in v2.
   *
   * @return {any}
   */
  readJSON() {
    return JSON.parse(uo(this.restDecoder));
  }
  /**
   * @return {string}
   */
  readKey() {
    return uo(this.restDecoder);
  }
}
class _P {
  /**
   * @param {decoding.Decoder} decoder
   */
  constructor(e) {
    this.dsCurrVal = 0, this.restDecoder = e;
  }
  resetDsCurVal() {
    this.dsCurrVal = 0;
  }
  /**
   * @return {number}
   */
  readDsClock() {
    return this.dsCurrVal += Qe(this.restDecoder), this.dsCurrVal;
  }
  /**
   * @return {number}
   */
  readDsLen() {
    const e = Qe(this.restDecoder) + 1;
    return this.dsCurrVal += e, e;
  }
}
class wl extends _P {
  /**
   * @param {decoding.Decoder} decoder
   */
  constructor(e) {
    super(e), this.keys = [], Qe(e), this.keyClockDecoder = new tm(bn(e)), this.clientDecoder = new au(bn(e)), this.leftClockDecoder = new tm(bn(e)), this.rightClockDecoder = new tm(bn(e)), this.infoDecoder = new q2(bn(e), ca), this.stringDecoder = new DD(bn(e)), this.parentInfoDecoder = new q2(bn(e), ca), this.typeRefDecoder = new au(bn(e)), this.lenDecoder = new au(bn(e));
  }
  /**
   * @return {ID}
   */
  readLeftID() {
    return new nl(this.clientDecoder.read(), this.leftClockDecoder.read());
  }
  /**
   * @return {ID}
   */
  readRightID() {
    return new nl(this.clientDecoder.read(), this.rightClockDecoder.read());
  }
  /**
   * Read the next client id.
   * Use this in favor of readID whenever possible to reduce the number of objects created.
   */
  readClient() {
    return this.clientDecoder.read();
  }
  /**
   * @return {number} info An unsigned 8-bit integer
   */
  readInfo() {
    return (
      /** @type {number} */
      this.infoDecoder.read()
    );
  }
  /**
   * @return {string}
   */
  readString() {
    return this.stringDecoder.read();
  }
  /**
   * @return {boolean}
   */
  readParentInfo() {
    return this.parentInfoDecoder.read() === 1;
  }
  /**
   * @return {number} An unsigned 8-bit integer
   */
  readTypeRef() {
    return this.typeRefDecoder.read();
  }
  /**
   * Write len of a struct - well suited for Opt RLE encoder.
   *
   * @return {number}
   */
  readLen() {
    return this.lenDecoder.read();
  }
  /**
   * @return {any}
   */
  readAny() {
    return bl(this.restDecoder);
  }
  /**
   * @return {Uint8Array}
   */
  readBuf() {
    return bn(this.restDecoder);
  }
  /**
   * This is mainly here for legacy purposes.
   *
   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.
   *
   * @return {any}
   */
  readJSON() {
    return bl(this.restDecoder);
  }
  /**
   * @return {string}
   */
  readKey() {
    const e = this.keyClockDecoder.read();
    if (e < this.keys.length)
      return this.keys[e];
    {
      const n = this.stringDecoder.read();
      return this.keys.push(n), n;
    }
  }
}
class T8 {
  constructor() {
    this.restEncoder = kn();
  }
  toUint8Array() {
    return qt(this.restEncoder);
  }
  resetDsCurVal() {
  }
  /**
   * @param {number} clock
   */
  writeDsClock(e) {
    Fe(this.restEncoder, e);
  }
  /**
   * @param {number} len
   */
  writeDsLen(e) {
    Fe(this.restEncoder, e);
  }
}
class Af extends T8 {
  /**
   * @param {ID} id
   */
  writeLeftID(e) {
    Fe(this.restEncoder, e.client), Fe(this.restEncoder, e.clock);
  }
  /**
   * @param {ID} id
   */
  writeRightID(e) {
    Fe(this.restEncoder, e.client), Fe(this.restEncoder, e.clock);
  }
  /**
   * Use writeClient and writeClock instead of writeID if possible.
   * @param {number} client
   */
  writeClient(e) {
    Fe(this.restEncoder, e);
  }
  /**
   * @param {number} info An unsigned 8-bit integer
   */
  writeInfo(e) {
    rf(this.restEncoder, e);
  }
  /**
   * @param {string} s
   */
  writeString(e) {
    xr(this.restEncoder, e);
  }
  /**
   * @param {boolean} isYKey
   */
  writeParentInfo(e) {
    Fe(this.restEncoder, e ? 1 : 0);
  }
  /**
   * @param {number} info An unsigned 8-bit integer
   */
  writeTypeRef(e) {
    Fe(this.restEncoder, e);
  }
  /**
   * Write len of a struct - well suited for Opt RLE encoder.
   *
   * @param {number} len
   */
  writeLen(e) {
    Fe(this.restEncoder, e);
  }
  /**
   * @param {any} any
   */
  writeAny(e) {
    vl(this.restEncoder, e);
  }
  /**
   * @param {Uint8Array} buf
   */
  writeBuf(e) {
    Jt(this.restEncoder, e);
  }
  /**
   * @param {any} embed
   */
  writeJSON(e) {
    xr(this.restEncoder, JSON.stringify(e));
  }
  /**
   * @param {string} key
   */
  writeKey(e) {
    xr(this.restEncoder, e);
  }
}
class C8 {
  constructor() {
    this.restEncoder = kn(), this.dsCurrVal = 0;
  }
  toUint8Array() {
    return qt(this.restEncoder);
  }
  resetDsCurVal() {
    this.dsCurrVal = 0;
  }
  /**
   * @param {number} clock
   */
  writeDsClock(e) {
    const n = e - this.dsCurrVal;
    this.dsCurrVal = e, Fe(this.restEncoder, n);
  }
  /**
   * @param {number} len
   */
  writeDsLen(e) {
    e === 0 && yi(), Fe(this.restEncoder, e - 1), this.dsCurrVal += e;
  }
}
class da extends C8 {
  constructor() {
    super(), this.keyMap = /* @__PURE__ */ new Map(), this.keyClock = 0, this.keyClockEncoder = new em(), this.clientEncoder = new su(), this.leftClockEncoder = new em(), this.rightClockEncoder = new em(), this.infoEncoder = new U2(rf), this.stringEncoder = new SD(), this.parentInfoEncoder = new U2(rf), this.typeRefEncoder = new su(), this.lenEncoder = new su();
  }
  toUint8Array() {
    const e = kn();
    return Fe(e, 0), Jt(e, this.keyClockEncoder.toUint8Array()), Jt(e, this.clientEncoder.toUint8Array()), Jt(e, this.leftClockEncoder.toUint8Array()), Jt(e, this.rightClockEncoder.toUint8Array()), Jt(e, qt(this.infoEncoder)), Jt(e, this.stringEncoder.toUint8Array()), Jt(e, qt(this.parentInfoEncoder)), Jt(e, this.typeRefEncoder.toUint8Array()), Jt(e, this.lenEncoder.toUint8Array()), Sh(e, qt(this.restEncoder)), qt(e);
  }
  /**
   * @param {ID} id
   */
  writeLeftID(e) {
    this.clientEncoder.write(e.client), this.leftClockEncoder.write(e.clock);
  }
  /**
   * @param {ID} id
   */
  writeRightID(e) {
    this.clientEncoder.write(e.client), this.rightClockEncoder.write(e.clock);
  }
  /**
   * @param {number} client
   */
  writeClient(e) {
    this.clientEncoder.write(e);
  }
  /**
   * @param {number} info An unsigned 8-bit integer
   */
  writeInfo(e) {
    this.infoEncoder.write(e);
  }
  /**
   * @param {string} s
   */
  writeString(e) {
    this.stringEncoder.write(e);
  }
  /**
   * @param {boolean} isYKey
   */
  writeParentInfo(e) {
    this.parentInfoEncoder.write(e ? 1 : 0);
  }
  /**
   * @param {number} info An unsigned 8-bit integer
   */
  writeTypeRef(e) {
    this.typeRefEncoder.write(e);
  }
  /**
   * Write len of a struct - well suited for Opt RLE encoder.
   *
   * @param {number} len
   */
  writeLen(e) {
    this.lenEncoder.write(e);
  }
  /**
   * @param {any} any
   */
  writeAny(e) {
    vl(this.restEncoder, e);
  }
  /**
   * @param {Uint8Array} buf
   */
  writeBuf(e) {
    Jt(this.restEncoder, e);
  }
  /**
   * This is mainly here for legacy purposes.
   *
   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.
   *
   * @param {any} embed
   */
  writeJSON(e) {
    vl(this.restEncoder, e);
  }
  /**
   * Property keys are often reused. For example, in y-prosemirror the key `bold` might
   * occur very often. For a 3d application, the key `position` might occur very often.
   *
   * We cache these keys in a Map and refer to them via a unique number.
   *
   * @param {string} key
   */
  writeKey(e) {
    const n = this.keyMap.get(e);
    n === void 0 ? (this.keyClockEncoder.write(this.keyClock++), this.stringEncoder.write(e)) : this.keyClockEncoder.write(n);
  }
}
const EP = (t, e, n, i) => {
  i = ko(i, e[0].id.clock);
  const r = Fr(e, i);
  Fe(t.restEncoder, e.length - r), t.writeClient(n), Fe(t.restEncoder, i);
  const o = e[r];
  o.write(t, i - o.id.clock);
  for (let s = r + 1; s < e.length; s++)
    e[s].write(t, 0);
}, rv = (t, e, n) => {
  const i = /* @__PURE__ */ new Map();
  n.forEach((r, o) => {
    rn(e, o) > r && i.set(o, r);
  }), Mf(e).forEach((r, o) => {
    n.has(o) || i.set(o, 0);
  }), Fe(t.restEncoder, i.size), bo(i.entries()).sort((r, o) => o[0] - r[0]).forEach(([r, o]) => {
    EP(
      t,
      /** @type {Array<GC|Item>} */
      e.clients.get(r),
      r,
      o
    );
  });
}, TP = (t, e) => {
  const n = Gn(), i = Qe(t.restDecoder);
  for (let r = 0; r < i; r++) {
    const o = Qe(t.restDecoder), s = new Array(o), a = t.readClient();
    let l = Qe(t.restDecoder);
    n.set(a, { i: 0, refs: s });
    for (let c = 0; c < o; c++) {
      const f = t.readInfo();
      switch (Ch & f) {
        case 0: {
          const d = t.readLen();
          s[c] = new Ni(Ze(a, l), d), l += d;
          break;
        }
        case 10: {
          const d = Qe(t.restDecoder);
          s[c] = new Oi(Ze(a, l), d), l += d;
          break;
        }
        default: {
          const d = (f & (fo | di)) === 0, u = new Bt(
            Ze(a, l),
            null,
            // left
            (f & di) === di ? t.readLeftID() : null,
            // origin
            null,
            // right
            (f & fo) === fo ? t.readRightID() : null,
            // right origin
            d ? t.readParentInfo() ? e.get(t.readString()) : t.readLeftID() : null,
            // parent
            d && (f & tf) === tf ? t.readString() : null,
            // parentSub
            eE(t, f)
            // item content
          );
          s[c] = u, l += u.length;
        }
      }
    }
  }
  return n;
}, CP = (t, e, n) => {
  const i = [];
  let r = bo(n.keys()).sort((h, p) => h - p);
  if (r.length === 0)
    return null;
  const o = () => {
    if (r.length === 0)
      return null;
    let h = (
      /** @type {{i:number,refs:Array<GC|Item>}} */
      n.get(r[r.length - 1])
    );
    for (; h.refs.length === h.i; )
      if (r.pop(), r.length > 0)
        h = /** @type {{i:number,refs:Array<GC|Item>}} */
        n.get(r[r.length - 1]);
      else
        return null;
    return h;
  };
  let s = o();
  if (s === null)
    return null;
  const a = new N8(), l = /* @__PURE__ */ new Map(), c = (h, p) => {
    const m = l.get(h);
    (m == null || m > p) && l.set(h, p);
  };
  let f = (
    /** @type {any} */
    s.refs[
      /** @type {any} */
      s.i++
    ]
  );
  const d = /* @__PURE__ */ new Map(), u = () => {
    for (const h of i) {
      const p = h.id.client, m = n.get(p);
      m ? (m.i--, a.clients.set(p, m.refs.slice(m.i)), n.delete(p), m.i = 0, m.refs = []) : a.clients.set(p, [h]), r = r.filter((v) => v !== p);
    }
    i.length = 0;
  };
  for (; ; ) {
    if (f.constructor !== Oi) {
      const p = si(d, f.id.client, () => rn(e, f.id.client)) - f.id.clock;
      if (p < 0)
        i.push(f), c(f.id.client, f.id.clock - 1), u();
      else {
        const m = f.getMissing(t, e);
        if (m !== null) {
          i.push(f);
          const v = n.get(
            /** @type {number} */
            m
          ) || { refs: [], i: 0 };
          if (v.refs.length === v.i)
            c(
              /** @type {number} */
              m,
              rn(e, m)
            ), u();
          else {
            f = v.refs[v.i++];
            continue;
          }
        } else (p === 0 || p < f.length) && (f.integrate(t, p), d.set(f.id.client, f.id.clock + f.length));
      }
    }
    if (i.length > 0)
      f = /** @type {GC|Item} */
      i.pop();
    else if (s !== null && s.i < s.refs.length)
      f = /** @type {GC|Item} */
      s.refs[s.i++];
    else {
      if (s = o(), s === null)
        break;
      f = /** @type {GC|Item} */
      s.refs[s.i++];
    }
  }
  if (a.clients.size > 0) {
    const h = new da();
    return rv(h, a, /* @__PURE__ */ new Map()), Fe(h.restEncoder, 0), { missing: l, update: h.toUint8Array() };
  }
  return null;
}, SP = (t, e) => rv(t, e.doc.store, e.beforeState), xP = (t, e, n, i = new wl(t)) => Ot(e, (r) => {
  r.local = !1;
  let o = !1;
  const s = r.doc, a = s.store, l = TP(i, s), c = CP(r, a, l), f = a.pendingStructs;
  if (f) {
    for (const [u, h] of f.missing)
      if (h < rn(a, u)) {
        o = !0;
        break;
      }
    if (c) {
      for (const [u, h] of c.missing) {
        const p = f.missing.get(u);
        (p == null || p > h) && f.missing.set(u, h);
      }
      f.update = Wu([f.update, c.update]);
    }
  } else
    a.pendingStructs = c;
  const d = Z2(i, r, a);
  if (a.pendingDs) {
    const u = new wl(zr(a.pendingDs));
    Qe(u.restDecoder);
    const h = Z2(u, r, a);
    d && h ? a.pendingDs = Wu([d, h]) : a.pendingDs = d || h;
  } else
    a.pendingDs = d;
  if (o) {
    const u = (
      /** @type {{update: Uint8Array}} */
      a.pendingStructs.update
    );
    a.pendingStructs = null, Vu(r.doc, u);
  }
}, n, !1), Vu = (t, e, n, i = wl) => {
  const r = zr(e);
  xP(r, t, n, new i(r));
}, AP = (t, e, n) => Vu(t, e, n, E8), MP = (t, e, n = /* @__PURE__ */ new Map()) => {
  rv(t, e.store, n), Il(t, k8(e.store));
}, NP = (t, e = new Uint8Array([0]), n = new da()) => {
  const i = S8(e);
  MP(n, t, i);
  const r = [n.toUint8Array()];
  if (t.store.pendingDs && r.push(t.store.pendingDs), t.store.pendingStructs && r.push(YP(t.store.pendingStructs.update, e)), r.length > 1) {
    if (n.constructor === Af)
      return GP(r.map((o, s) => s === 0 ? o : XP(o)));
    if (n.constructor === da)
      return Wu(r);
  }
  return r[0];
}, OP = (t, e) => NP(t, e, new Af()), RP = (t) => {
  const e = /* @__PURE__ */ new Map(), n = Qe(t.restDecoder);
  for (let i = 0; i < n; i++) {
    const r = Qe(t.restDecoder), o = Qe(t.restDecoder);
    e.set(r, o);
  }
  return e;
}, S8 = (t) => RP(new _8(zr(t))), x8 = (t, e) => (Fe(t.restEncoder, e.size), bo(e.entries()).sort((n, i) => i[0] - n[0]).forEach(([n, i]) => {
  Fe(t.restEncoder, n), Fe(t.restEncoder, i);
}), t), IP = (t, e) => x8(t, Mf(e.store)), LP = (t, e = new C8()) => (t instanceof Map ? x8(e, t) : IP(e, t), e.toUint8Array()), DP = (t) => LP(t, new T8());
class PP {
  constructor() {
    this.l = [];
  }
}
const ew = () => new PP(), tw = (t, e) => t.l.push(e), nw = (t, e) => {
  const n = t.l, i = n.length;
  t.l = n.filter((r) => e !== r), i === t.l.length && console.error("[yjs] Tried to remove event handler that doesn't exist.");
}, A8 = (t, e, n) => Xy(t.l, [e, n]);
class nl {
  /**
   * @param {number} client client id
   * @param {number} clock unique per client id, continuous number
   */
  constructor(e, n) {
    this.client = e, this.clock = n;
  }
}
const qa = (t, e) => t === e || t !== null && e !== null && t.client === e.client && t.clock === e.clock, Ze = (t, e) => new nl(t, e), af = (t) => {
  for (const [e, n] of t.doc.share.entries())
    if (n === t)
      return e;
  throw yi();
}, lf = (t, e) => {
  for (; e !== null; ) {
    if (e.parent === t)
      return !0;
    e = /** @type {AbstractType<any>} */
    e.parent._item;
  }
  return !1;
};
class cf {
  /**
   * @param {ID|null} type
   * @param {string|null} tname
   * @param {ID|null} item
   * @param {number} assoc
   */
  constructor(e, n, i, r = 0) {
    this.type = e, this.tname = n, this.item = i, this.assoc = r;
  }
}
const Rc = (t) => new cf(t.type == null ? null : Ze(t.type.client, t.type.clock), t.tname ?? null, t.item == null ? null : Ze(t.item.client, t.item.clock), t.assoc == null ? 0 : t.assoc);
class FP {
  /**
   * @param {AbstractType<any>} type
   * @param {number} index
   * @param {number} [assoc]
   */
  constructor(e, n, i = 0) {
    this.type = e, this.index = n, this.assoc = i;
  }
}
const BP = (t, e, n = 0) => new FP(t, e, n), fd = (t, e, n) => {
  let i = null, r = null;
  return t._item === null ? r = af(t) : i = Ze(t._item.id.client, t._item.id.clock), new cf(i, r, e, n);
}, rm = (t, e, n = 0) => {
  let i = t._start;
  if (n < 0) {
    if (e === 0)
      return fd(t, null, n);
    e--;
  }
  for (; i !== null; ) {
    if (!i.deleted && i.countable) {
      if (i.length > e)
        return fd(t, Ze(i.id.client, i.id.clock + e), n);
      e -= i.length;
    }
    if (i.right === null && n < 0)
      return fd(t, i.lastId, n);
    i = i.right;
  }
  return fd(t, null, n);
}, HP = (t, e, n = !0) => {
  const i = e.store, r = t.item, o = t.type, s = t.tname, a = t.assoc;
  let l = null, c = 0;
  if (r !== null) {
    if (rn(i, r.client) <= r.clock)
      return null;
    const f = n ? dg(i, r) : { item: il(i, r), diff: 0 }, d = f.item;
    if (!(d instanceof Bt))
      return null;
    if (l = /** @type {AbstractType<any>} */
    d.parent, l._item === null || !l._item.deleted) {
      c = d.deleted || !d.countable ? 0 : f.diff + (a >= 0 ? 0 : 1);
      let u = d.left;
      for (; u !== null; )
        !u.deleted && u.countable && (c += u.length), u = u.left;
    }
  } else {
    if (s !== null)
      l = e.get(s);
    else if (o !== null) {
      if (rn(i, o.client) <= o.clock)
        return null;
      const { item: f } = n ? dg(i, o) : { item: il(i, o) };
      if (f instanceof Bt && f.content instanceof dr)
        l = f.content.type;
      else
        return null;
    } else
      throw yi();
    a >= 0 ? c = l._length : c = 0;
  }
  return BP(l, c, t.assoc);
}, iw = (t, e) => t === e || t !== null && e !== null && t.tname === e.tname && qa(t.item, e.item) && qa(t.type, e.type) && t.assoc === e.assoc;
class ov {
  /**
   * @param {DeleteSet} ds
   * @param {Map<number,number>} sv state map
   */
  constructor(e, n) {
    this.ds = e, this.sv = n;
  }
}
const M8 = (t, e) => new ov(t, e), om = (t) => M8(k8(t.store), Mf(t.store)), js = (t, e) => e === void 0 ? !t.deleted : e.sv.has(t.id.client) && (e.sv.get(t.id.client) || 0) > t.id.clock && !Rl(e.ds, t.id), lg = (t, e) => {
  const n = si(t.meta, lg, vo), i = t.doc.store;
  n.has(e) || (e.sv.forEach((r, o) => {
    r < rn(i, o) && ii(t, Ze(o, r));
  }), vs(t, e.ds, (r) => {
  }), n.add(e));
};
class N8 {
  constructor() {
    this.clients = /* @__PURE__ */ new Map(), this.pendingStructs = null, this.pendingDs = null;
  }
}
const Mf = (t) => {
  const e = /* @__PURE__ */ new Map();
  return t.clients.forEach((n, i) => {
    const r = n[n.length - 1];
    e.set(i, r.id.clock + r.length);
  }), e;
}, rn = (t, e) => {
  const n = t.clients.get(e);
  if (n === void 0)
    return 0;
  const i = n[n.length - 1];
  return i.id.clock + i.length;
}, O8 = (t, e) => {
  let n = t.clients.get(e.id.client);
  if (n === void 0)
    n = [], t.clients.set(e.id.client, n);
  else {
    const i = n[n.length - 1];
    if (i.id.clock + i.length !== e.id.clock)
      throw yi();
  }
  n.push(e);
}, Fr = (t, e) => {
  let n = 0, i = t.length - 1, r = t[i], o = r.id.clock;
  if (o === e)
    return i;
  let s = sr(e / (o + r.length - 1) * i);
  for (; n <= i; ) {
    if (r = t[s], o = r.id.clock, o <= e) {
      if (e < o + r.length)
        return s;
      n = s + 1;
    } else
      i = s - 1;
    s = sr((n + i) / 2);
  }
  throw yi();
}, $P = (t, e) => {
  const n = t.clients.get(e.client);
  return n[Fr(n, e.clock)];
}, il = (
  /** @type {function(StructStore,ID):Item} */
  $P
), cg = (t, e, n) => {
  const i = Fr(e, n), r = e[i];
  return r.id.clock < n && r instanceof Bt ? (e.splice(i + 1, 0, Ju(t, r, n - r.id.clock)), i + 1) : i;
}, ii = (t, e) => {
  const n = (
    /** @type {Array<Item>} */
    t.doc.store.clients.get(e.client)
  );
  return n[cg(t, n, e.clock)];
}, rw = (t, e, n) => {
  const i = e.clients.get(n.client), r = Fr(i, n.clock), o = i[r];
  return n.clock !== o.id.clock + o.length - 1 && o.constructor !== Ni && i.splice(r + 1, 0, Ju(t, o, n.clock - o.id.clock + 1)), o;
}, jP = (t, e, n) => {
  const i = (
    /** @type {Array<GC|Item>} */
    t.clients.get(e.id.client)
  );
  i[Fr(i, e.id.clock)] = n;
}, R8 = (t, e, n, i, r) => {
  if (i === 0)
    return;
  const o = n + i;
  let s = cg(t, e, n), a;
  do
    a = e[s++], o < a.id.clock + a.length && cg(t, e, o), r(a);
  while (s < e.length && e[s].id.clock < o);
};
class zP {
  /**
   * @param {Doc} doc
   * @param {any} origin
   * @param {boolean} local
   */
  constructor(e, n, i) {
    this.doc = e, this.deleteSet = new Ol(), this.beforeState = Mf(e.store), this.afterState = /* @__PURE__ */ new Map(), this.changed = /* @__PURE__ */ new Map(), this.changedParentTypes = /* @__PURE__ */ new Map(), this._mergeStructs = [], this.origin = n, this.meta = /* @__PURE__ */ new Map(), this.local = i, this.subdocsAdded = /* @__PURE__ */ new Set(), this.subdocsRemoved = /* @__PURE__ */ new Set(), this.subdocsLoaded = /* @__PURE__ */ new Set(), this._needFormattingCleanup = !1;
  }
}
const ow = (t, e) => e.deleteSet.clients.size === 0 && !rD(e.afterState, (n, i) => e.beforeState.get(i) !== n) ? !1 : (nv(e.deleteSet), SP(t, e), Il(t, e.deleteSet), !0), sw = (t, e, n) => {
  const i = e._item;
  (i === null || i.id.clock < (t.beforeState.get(i.id.client) || 0) && !i.deleted) && si(t.changed, e, vo).add(n);
}, lu = (t, e) => {
  let n = t[e], i = t[e - 1], r = e;
  for (; r > 0; n = i, i = t[--r - 1]) {
    if (i.deleted === n.deleted && i.constructor === n.constructor && i.mergeWith(n)) {
      n instanceof Bt && n.parentSub !== null && /** @type {AbstractType<any>} */
      n.parent._map.get(n.parentSub) === n && n.parent._map.set(
        n.parentSub,
        /** @type {Item} */
        i
      );
      continue;
    }
    break;
  }
  const o = e - r;
  return o && t.splice(e + 1 - o, o), o;
}, UP = (t, e, n) => {
  for (const [i, r] of t.clients.entries()) {
    const o = (
      /** @type {Array<GC|Item>} */
      e.clients.get(i)
    );
    for (let s = r.length - 1; s >= 0; s--) {
      const a = r[s], l = a.clock + a.len;
      for (let c = Fr(o, a.clock), f = o[c]; c < o.length && f.id.clock < l; f = o[++c]) {
        const d = o[c];
        if (a.clock + a.len <= d.id.clock)
          break;
        d instanceof Bt && d.deleted && !d.keep && n(d) && d.gc(e, !1);
      }
    }
  }
}, VP = (t, e) => {
  t.clients.forEach((n, i) => {
    const r = (
      /** @type {Array<GC|Item>} */
      e.clients.get(i)
    );
    for (let o = n.length - 1; o >= 0; o--) {
      const s = n[o], a = us(r.length - 1, 1 + Fr(r, s.clock + s.len - 1));
      for (let l = a, c = r[l]; l > 0 && c.id.clock >= s.clock; c = r[l])
        l -= 1 + lu(r, l);
    }
  });
}, I8 = (t, e) => {
  if (e < t.length) {
    const n = t[e], i = n.doc, r = i.store, o = n.deleteSet, s = n._mergeStructs;
    try {
      nv(o), n.afterState = Mf(n.doc.store), i.emit("beforeObserverCalls", [n, i]);
      const a = [];
      n.changed.forEach(
        (l, c) => a.push(() => {
          (c._item === null || !c._item.deleted) && c._callObserver(n, l);
        })
      ), a.push(() => {
        n.changedParentTypes.forEach((l, c) => {
          c._dEH.l.length > 0 && (c._item === null || !c._item.deleted) && (l = l.filter(
            (f) => f.target._item === null || !f.target._item.deleted
          ), l.forEach((f) => {
            f.currentTarget = c, f._path = null;
          }), l.sort((f, d) => f.path.length - d.path.length), A8(c._dEH, l, n));
        });
      }), a.push(() => i.emit("afterTransaction", [n, i])), Xy(a, []), n._needFormattingCleanup && dF(n);
    } finally {
      i.gc && UP(o, r, i.gcFilter), VP(o, r), n.afterState.forEach((f, d) => {
        const u = n.beforeState.get(d) || 0;
        if (u !== f) {
          const h = (
            /** @type {Array<GC|Item>} */
            r.clients.get(d)
          ), p = ko(Fr(h, u), 1);
          for (let m = h.length - 1; m >= p; )
            m -= 1 + lu(h, m);
        }
      });
      for (let f = s.length - 1; f >= 0; f--) {
        const { client: d, clock: u } = s[f].id, h = (
          /** @type {Array<GC|Item>} */
          r.clients.get(d)
        ), p = Fr(h, u);
        p + 1 < h.length && lu(h, p + 1) > 1 || p > 0 && lu(h, p);
      }
      if (!n.local && n.afterState.get(i.clientID) !== n.beforeState.get(i.clientID) && (m8(Ah, Ri, "[yjs] ", fa, u8, "Changed the client-id because another client seems to be using it."), i.clientID = w8()), i.emit("afterTransactionCleanup", [n, i]), i._observers.has("update")) {
        const f = new Af();
        ow(f, n) && i.emit("update", [f.toUint8Array(), n.origin, i, n]);
      }
      if (i._observers.has("updateV2")) {
        const f = new da();
        ow(f, n) && i.emit("updateV2", [f.toUint8Array(), n.origin, i, n]);
      }
      const { subdocsAdded: a, subdocsLoaded: l, subdocsRemoved: c } = n;
      (a.size > 0 || c.size > 0 || l.size > 0) && (a.forEach((f) => {
        f.clientID = i.clientID, f.collectionid == null && (f.collectionid = i.collectionid), i.subdocs.add(f);
      }), c.forEach((f) => i.subdocs.delete(f)), i.emit("subdocs", [{ loaded: l, added: a, removed: c }, i, n]), c.forEach((f) => f.destroy())), t.length <= e + 1 ? (i._transactionCleanups = [], i.emit("afterAllTransactions", [i, t])) : I8(t, e + 1);
    }
  }
}, Ot = (t, e, n = null, i = !0) => {
  const r = t._transactionCleanups;
  let o = !1, s = null;
  t._transaction === null && (o = !0, t._transaction = new zP(t, n, i), r.push(t._transaction), r.length === 1 && t.emit("beforeAllTransactions", [t]), t.emit("beforeTransaction", [t._transaction, t]));
  try {
    s = e(t._transaction);
  } finally {
    if (o) {
      const a = t._transaction === r[0];
      t._transaction = null, a && I8(r, 0);
    }
  }
  return s;
};
class WP {
  /**
   * @param {DeleteSet} deletions
   * @param {DeleteSet} insertions
   */
  constructor(e, n) {
    this.insertions = n, this.deletions = e, this.meta = /* @__PURE__ */ new Map();
  }
}
const aw = (t, e, n) => {
  vs(t, n.deletions, (i) => {
    i instanceof Bt && e.scope.some((r) => lf(r, i)) && hv(i, !1);
  });
}, lw = (t, e, n) => {
  let i = null;
  const r = t.doc, o = t.scope;
  Ot(r, (a) => {
    for (; e.length > 0 && t.currStackItem === null; ) {
      const l = r.store, c = (
        /** @type {StackItem} */
        e.pop()
      ), f = /* @__PURE__ */ new Set(), d = [];
      let u = !1;
      vs(a, c.insertions, (h) => {
        if (h instanceof Bt) {
          if (h.redone !== null) {
            let { item: p, diff: m } = dg(l, h.id);
            m > 0 && (p = ii(a, Ze(p.id.client, p.id.clock + m))), h = p;
          }
          !h.deleted && o.some((p) => lf(
            p,
            /** @type {Item} */
            h
          )) && d.push(h);
        }
      }), vs(a, c.deletions, (h) => {
        h instanceof Bt && o.some((p) => lf(p, h)) && // Never redo structs in stackItem.insertions because they were created and deleted in the same capture interval.
        !Rl(c.insertions, h.id) && f.add(h);
      }), f.forEach((h) => {
        u = Z8(a, h, f, c.insertions, t.ignoreRemoteMapChanges, t) !== null || u;
      });
      for (let h = d.length - 1; h >= 0; h--) {
        const p = d[h];
        t.deleteFilter(p) && (p.delete(a), u = !0);
      }
      t.currStackItem = u ? c : null;
    }
    a.changed.forEach((l, c) => {
      l.has(null) && c._searchMarker && (c._searchMarker.length = 0);
    }), i = a;
  }, t);
  const s = t.currStackItem;
  if (s != null) {
    const a = i.changedParentTypes;
    t.emit("stack-item-popped", [{ stackItem: s, type: n, changedParentTypes: a, origin: t }, t]), t.currStackItem = null;
  }
  return s;
};
class L8 extends Uy {
  /**
   * @param {AbstractType<any>|Array<AbstractType<any>>} typeScope Accepts either a single type, or an array of types
   * @param {UndoManagerOptions} options
   */
  constructor(e, {
    captureTimeout: n = 500,
    captureTransaction: i = (l) => !0,
    deleteFilter: r = () => !0,
    trackedOrigins: o = /* @__PURE__ */ new Set([null]),
    ignoreRemoteMapChanges: s = !1,
    doc: a = (
      /** @type {Doc} */
      ng(e) ? e[0].doc : e.doc
    )
  } = {}) {
    super(), this.scope = [], this.doc = a, this.addToScope(e), this.deleteFilter = r, o.add(this), this.trackedOrigins = o, this.captureTransaction = i, this.undoStack = [], this.redoStack = [], this.undoing = !1, this.redoing = !1, this.currStackItem = null, this.lastChange = 0, this.ignoreRemoteMapChanges = s, this.captureTimeout = n, this.afterTransactionHandler = (l) => {
      if (!this.captureTransaction(l) || !this.scope.some((v) => l.changedParentTypes.has(v)) || !this.trackedOrigins.has(l.origin) && (!l.origin || !this.trackedOrigins.has(l.origin.constructor)))
        return;
      const c = this.undoing, f = this.redoing, d = c ? this.redoStack : this.undoStack;
      c ? this.stopCapturing() : f || this.clear(!1, !0);
      const u = new Ol();
      l.afterState.forEach((v, y) => {
        const C = l.beforeState.get(y) || 0, k = v - C;
        k > 0 && sf(u, y, C, k);
      });
      const h = Pr();
      let p = !1;
      if (this.lastChange > 0 && h - this.lastChange < this.captureTimeout && d.length > 0 && !c && !f) {
        const v = d[d.length - 1];
        v.deletions = ag([v.deletions, l.deleteSet]), v.insertions = ag([v.insertions, u]);
      } else
        d.push(new WP(l.deleteSet, u)), p = !0;
      !c && !f && (this.lastChange = h), vs(
        l,
        l.deleteSet,
        /** @param {Item|GC} item */
        (v) => {
          v instanceof Bt && this.scope.some((y) => lf(y, v)) && hv(v, !0);
        }
      );
      const m = [{ stackItem: d[d.length - 1], origin: l.origin, type: c ? "redo" : "undo", changedParentTypes: l.changedParentTypes }, this];
      p ? this.emit("stack-item-added", m) : this.emit("stack-item-updated", m);
    }, this.doc.on("afterTransaction", this.afterTransactionHandler), this.doc.on("destroy", () => {
      this.destroy();
    });
  }
  /**
   * @param {Array<AbstractType<any>> | AbstractType<any>} ytypes
   */
  addToScope(e) {
    e = ng(e) ? e : [e], e.forEach((n) => {
      this.scope.every((i) => i !== n) && (n.doc !== this.doc && g8("[yjs#509] Not same Y.Doc"), this.scope.push(n));
    });
  }
  /**
   * @param {any} origin
   */
  addTrackedOrigin(e) {
    this.trackedOrigins.add(e);
  }
  /**
   * @param {any} origin
   */
  removeTrackedOrigin(e) {
    this.trackedOrigins.delete(e);
  }
  clear(e = !0, n = !0) {
    (e && this.canUndo() || n && this.canRedo()) && this.doc.transact((i) => {
      e && (this.undoStack.forEach((r) => aw(i, this, r)), this.undoStack = []), n && (this.redoStack.forEach((r) => aw(i, this, r)), this.redoStack = []), this.emit("stack-cleared", [{ undoStackCleared: e, redoStackCleared: n }]);
    });
  }
  /**
   * UndoManager merges Undo-StackItem if they are created within time-gap
   * smaller than `options.captureTimeout`. Call `um.stopCapturing()` so that the next
   * StackItem won't be merged.
   *
   *
   * @example
   *     // without stopCapturing
   *     ytext.insert(0, 'a')
   *     ytext.insert(1, 'b')
   *     um.undo()
   *     ytext.toString() // => '' (note that 'ab' was removed)
   *     // with stopCapturing
   *     ytext.insert(0, 'a')
   *     um.stopCapturing()
   *     ytext.insert(0, 'b')
   *     um.undo()
   *     ytext.toString() // => 'a' (note that only 'b' was removed)
   *
   */
  stopCapturing() {
    this.lastChange = 0;
  }
  /**
   * Undo last changes on type.
   *
   * @return {StackItem?} Returns StackItem if a change was applied
   */
  undo() {
    this.undoing = !0;
    let e;
    try {
      e = lw(this, this.undoStack, "undo");
    } finally {
      this.undoing = !1;
    }
    return e;
  }
  /**
   * Redo last undo operation.
   *
   * @return {StackItem?} Returns StackItem if a change was applied
   */
  redo() {
    this.redoing = !0;
    let e;
    try {
      e = lw(this, this.redoStack, "redo");
    } finally {
      this.redoing = !1;
    }
    return e;
  }
  /**
   * Are undo steps available?
   *
   * @return {boolean} `true` if undo is possible
   */
  canUndo() {
    return this.undoStack.length > 0;
  }
  /**
   * Are redo steps available?
   *
   * @return {boolean} `true` if redo is possible
   */
  canRedo() {
    return this.redoStack.length > 0;
  }
  destroy() {
    this.trackedOrigins.delete(this), this.doc.off("afterTransaction", this.afterTransactionHandler), super.destroy();
  }
}
function* qP(t) {
  const e = Qe(t.restDecoder);
  for (let n = 0; n < e; n++) {
    const i = Qe(t.restDecoder), r = t.readClient();
    let o = Qe(t.restDecoder);
    for (let s = 0; s < i; s++) {
      const a = t.readInfo();
      if (a === 10) {
        const l = Qe(t.restDecoder);
        yield new Oi(Ze(r, o), l), o += l;
      } else if (Ch & a) {
        const l = (a & (fo | di)) === 0, c = new Bt(
          Ze(r, o),
          null,
          // left
          (a & di) === di ? t.readLeftID() : null,
          // origin
          null,
          // right
          (a & fo) === fo ? t.readRightID() : null,
          // right origin
          // @ts-ignore Force writing a string here.
          l ? t.readParentInfo() ? t.readString() : t.readLeftID() : null,
          // parent
          l && (a & tf) === tf ? t.readString() : null,
          // parentSub
          eE(t, a)
          // item content
        );
        yield c, o += c.length;
      } else {
        const l = t.readLen();
        yield new Ni(Ze(r, o), l), o += l;
      }
    }
  }
}
class sv {
  /**
   * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder
   * @param {boolean} filterSkips
   */
  constructor(e, n) {
    this.gen = qP(e), this.curr = null, this.done = !1, this.filterSkips = n, this.next();
  }
  /**
   * @return {Item | GC | Skip |null}
   */
  next() {
    do
      this.curr = this.gen.next().value || null;
    while (this.filterSkips && this.curr !== null && this.curr.constructor === Oi);
    return this.curr;
  }
}
class av {
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   */
  constructor(e) {
    this.currClient = 0, this.startClock = 0, this.written = 0, this.encoder = e, this.clientStructs = [];
  }
}
const GP = (t) => Wu(t, E8, Af), KP = (t, e) => {
  if (t.constructor === Ni) {
    const { client: n, clock: i } = t.id;
    return new Ni(Ze(n, i + e), t.length - e);
  } else if (t.constructor === Oi) {
    const { client: n, clock: i } = t.id;
    return new Oi(Ze(n, i + e), t.length - e);
  } else {
    const n = (
      /** @type {Item} */
      t
    ), { client: i, clock: r } = n.id;
    return new Bt(
      Ze(i, r + e),
      null,
      Ze(i, r + e - 1),
      null,
      n.rightOrigin,
      n.parent,
      n.parentSub,
      n.content.splice(e)
    );
  }
}, Wu = (t, e = wl, n = da) => {
  if (t.length === 1)
    return t[0];
  const i = t.map((f) => new e(zr(f)));
  let r = i.map((f) => new sv(f, !0)), o = null;
  const s = new n(), a = new av(s);
  for (; r = r.filter((u) => u.curr !== null), r.sort(
    /** @type {function(any,any):number} */
    (u, h) => {
      if (u.curr.id.client === h.curr.id.client) {
        const p = u.curr.id.clock - h.curr.id.clock;
        return p === 0 ? u.curr.constructor === h.curr.constructor ? 0 : u.curr.constructor === Oi ? 1 : -1 : p;
      } else
        return h.curr.id.client - u.curr.id.client;
    }
  ), r.length !== 0; ) {
    const f = r[0], d = (
      /** @type {Item | GC} */
      f.curr.id.client
    );
    if (o !== null) {
      let u = (
        /** @type {Item | GC | null} */
        f.curr
      ), h = !1;
      for (; u !== null && u.id.clock + u.length <= o.struct.id.clock + o.struct.length && u.id.client >= o.struct.id.client; )
        u = f.next(), h = !0;
      if (u === null || // current decoder is empty
      u.id.client !== d || // check whether there is another decoder that has has updates from `firstClient`
      h && u.id.clock > o.struct.id.clock + o.struct.length)
        continue;
      if (d !== o.struct.id.client)
        es(a, o.struct, o.offset), o = { struct: u, offset: 0 }, f.next();
      else if (o.struct.id.clock + o.struct.length < u.id.clock)
        if (o.struct.constructor === Oi)
          o.struct.length = u.id.clock + u.length - o.struct.id.clock;
        else {
          es(a, o.struct, o.offset);
          const p = u.id.clock - o.struct.id.clock - o.struct.length;
          o = { struct: new Oi(Ze(d, o.struct.id.clock + o.struct.length), p), offset: 0 };
        }
      else {
        const p = o.struct.id.clock + o.struct.length - u.id.clock;
        p > 0 && (o.struct.constructor === Oi ? o.struct.length -= p : u = KP(u, p)), o.struct.mergeWith(
          /** @type {any} */
          u
        ) || (es(a, o.struct, o.offset), o = { struct: u, offset: 0 }, f.next());
      }
    } else
      o = { struct: (
        /** @type {Item | GC} */
        f.curr
      ), offset: 0 }, f.next();
    for (let u = f.curr; u !== null && u.id.client === d && u.id.clock === o.struct.id.clock + o.struct.length && u.constructor !== Oi; u = f.next())
      es(a, o.struct, o.offset), o = { struct: u, offset: 0 };
  }
  o !== null && (es(a, o.struct, o.offset), o = null), lv(a);
  const l = i.map((f) => iv(f)), c = ag(l);
  return Il(s, c), s.toUint8Array();
}, YP = (t, e, n = wl, i = da) => {
  const r = S8(e), o = new i(), s = new av(o), a = new n(zr(t)), l = new sv(a, !1);
  for (; l.curr; ) {
    const f = l.curr, d = f.id.client, u = r.get(d) || 0;
    if (l.curr.constructor === Oi) {
      l.next();
      continue;
    }
    if (f.id.clock + f.length > u)
      for (es(s, f, ko(u - f.id.clock, 0)), l.next(); l.curr && l.curr.id.client === d; )
        es(s, l.curr, 0), l.next();
    else
      for (; l.curr && l.curr.id.client === d && l.curr.id.clock + l.curr.length <= u; )
        l.next();
  }
  lv(s);
  const c = iv(a);
  return Il(o, c), o.toUint8Array();
}, D8 = (t) => {
  t.written > 0 && (t.clientStructs.push({ written: t.written, restEncoder: qt(t.encoder.restEncoder) }), t.encoder.restEncoder = kn(), t.written = 0);
}, es = (t, e, n) => {
  t.written > 0 && t.currClient !== e.id.client && D8(t), t.written === 0 && (t.currClient = e.id.client, t.encoder.writeClient(e.id.client), Fe(t.encoder.restEncoder, e.id.clock + n)), e.write(t.encoder, n), t.written++;
}, lv = (t) => {
  D8(t);
  const e = t.encoder.restEncoder;
  Fe(e, t.clientStructs.length);
  for (let n = 0; n < t.clientStructs.length; n++) {
    const i = t.clientStructs[n];
    Fe(e, i.written), Sh(e, i.restEncoder);
  }
}, JP = (t, e, n, i) => {
  const r = new n(zr(t)), o = new sv(r, !1), s = new i(), a = new av(s);
  for (let c = o.curr; c !== null; c = o.next())
    es(a, e(c), 0);
  lv(a);
  const l = iv(r);
  return Il(s, l), s.toUint8Array();
}, XP = (t) => JP(t, JD, wl, Af), cw = "You must not compute changes after the event-handler fired.";
class Nh {
  /**
   * @param {T} target The changed type.
   * @param {Transaction} transaction
   */
  constructor(e, n) {
    this.target = e, this.currentTarget = e, this.transaction = n, this._changes = null, this._keys = null, this._delta = null, this._path = null;
  }
  /**
   * Computes the path from `y` to the changed type.
   *
   * @todo v14 should standardize on path: Array<{parent, index}> because that is easier to work with.
   *
   * The following property holds:
   * @example
   *   let type = y
   *   event.path.forEach(dir => {
   *     type = type.get(dir)
   *   })
   *   type === event.target // => true
   */
  get path() {
    return this._path || (this._path = QP(this.currentTarget, this.target));
  }
  /**
   * Check if a struct is deleted by this event.
   *
   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.
   *
   * @param {AbstractStruct} struct
   * @return {boolean}
   */
  deletes(e) {
    return Rl(this.transaction.deleteSet, e.id);
  }
  /**
   * @type {Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}
   */
  get keys() {
    if (this._keys === null) {
      if (this.transaction.doc._transactionCleanups.length === 0)
        throw Dr(cw);
      const e = /* @__PURE__ */ new Map(), n = this.target;
      /** @type Set<string|null> */
      this.transaction.changed.get(n).forEach((r) => {
        if (r !== null) {
          const o = (
            /** @type {Item} */
            n._map.get(r)
          );
          let s, a;
          if (this.adds(o)) {
            let l = o.left;
            for (; l !== null && this.adds(l); )
              l = l.left;
            if (this.deletes(o))
              if (l !== null && this.deletes(l))
                s = "delete", a = Xp(l.content.getContent());
              else
                return;
            else
              l !== null && this.deletes(l) ? (s = "update", a = Xp(l.content.getContent())) : (s = "add", a = void 0);
          } else if (this.deletes(o))
            s = "delete", a = Xp(
              /** @type {Item} */
              o.content.getContent()
            );
          else
            return;
          e.set(r, { action: s, oldValue: a });
        }
      }), this._keys = e;
    }
    return this._keys;
  }
  /**
   * This is a computed property. Note that this can only be safely computed during the
   * event call. Computing this property after other changes happened might result in
   * unexpected behavior (incorrect computation of deltas). A safe way to collect changes
   * is to store the `changes` or the `delta` object. Avoid storing the `transaction` object.
   *
   * @type {Array<{insert?: string | Array<any> | object | AbstractType<any>, retain?: number, delete?: number, attributes?: Object<string, any>}>}
   */
  get delta() {
    return this.changes.delta;
  }
  /**
   * Check if a struct is added by this event.
   *
   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.
   *
   * @param {AbstractStruct} struct
   * @return {boolean}
   */
  adds(e) {
    return e.id.clock >= (this.transaction.beforeState.get(e.id.client) || 0);
  }
  /**
   * This is a computed property. Note that this can only be safely computed during the
   * event call. Computing this property after other changes happened might result in
   * unexpected behavior (incorrect computation of deltas). A safe way to collect changes
   * is to store the `changes` or the `delta` object. Avoid storing the `transaction` object.
   *
   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}
   */
  get changes() {
    let e = this._changes;
    if (e === null) {
      if (this.transaction.doc._transactionCleanups.length === 0)
        throw Dr(cw);
      const n = this.target, i = vo(), r = vo(), o = [];
      if (e = {
        added: i,
        deleted: r,
        delta: o,
        keys: this.keys
      }, /** @type Set<string|null> */
      this.transaction.changed.get(n).has(null)) {
        let a = null;
        const l = () => {
          a && o.push(a);
        };
        for (let c = n._start; c !== null; c = c.right)
          c.deleted ? this.deletes(c) && !this.adds(c) && ((a === null || a.delete === void 0) && (l(), a = { delete: 0 }), a.delete += c.length, r.add(c)) : this.adds(c) ? ((a === null || a.insert === void 0) && (l(), a = { insert: [] }), a.insert = a.insert.concat(c.content.getContent()), i.add(c)) : ((a === null || a.retain === void 0) && (l(), a = { retain: 0 }), a.retain += c.length);
        a !== null && a.retain === void 0 && l();
      }
      this._changes = e;
    }
    return (
      /** @type {any} */
      e
    );
  }
}
const QP = (t, e) => {
  const n = [];
  for (; e._item !== null && e !== t; ) {
    if (e._item.parentSub !== null)
      n.unshift(e._item.parentSub);
    else {
      let i = 0, r = (
        /** @type {AbstractType<any>} */
        e._item.parent._start
      );
      for (; r !== e._item && r !== null; )
        !r.deleted && r.countable && (i += r.length), r = r.right;
      n.unshift(i);
    }
    e = /** @type {AbstractType<any>} */
    e._item.parent;
  }
  return n;
}, zn = () => {
  g8("Invalid access: Add Yjs type to a document before reading data.");
}, P8 = 80;
let cv = 0;
class ZP {
  /**
   * @param {Item} p
   * @param {number} index
   */
  constructor(e, n) {
    e.marker = !0, this.p = e, this.index = n, this.timestamp = cv++;
  }
}
const eF = (t) => {
  t.timestamp = cv++;
}, F8 = (t, e, n) => {
  t.p.marker = !1, t.p = e, e.marker = !0, t.index = n, t.timestamp = cv++;
}, tF = (t, e, n) => {
  if (t.length >= P8) {
    const i = t.reduce((r, o) => r.timestamp < o.timestamp ? r : o);
    return F8(i, e, n), i;
  } else {
    const i = new ZP(e, n);
    return t.push(i), i;
  }
}, Oh = (t, e) => {
  if (t._start === null || e === 0 || t._searchMarker === null)
    return null;
  const n = t._searchMarker.length === 0 ? null : t._searchMarker.reduce((o, s) => ou(e - o.index) < ou(e - s.index) ? o : s);
  let i = t._start, r = 0;
  for (n !== null && (i = n.p, r = n.index, eF(n)); i.right !== null && r < e; ) {
    if (!i.deleted && i.countable) {
      if (e < r + i.length)
        break;
      r += i.length;
    }
    i = i.right;
  }
  for (; i.left !== null && r > e; )
    i = i.left, !i.deleted && i.countable && (r -= i.length);
  for (; i.left !== null && i.left.id.client === i.id.client && i.left.id.clock + i.left.length === i.id.clock; )
    i = i.left, !i.deleted && i.countable && (r -= i.length);
  return n !== null && ou(n.index - r) < /** @type {YText|YArray<any>} */
  i.parent.length / P8 ? (F8(n, i, r), n) : tF(t._searchMarker, i, r);
}, ff = (t, e, n) => {
  for (let i = t.length - 1; i >= 0; i--) {
    const r = t[i];
    if (n > 0) {
      let o = r.p;
      for (o.marker = !1; o && (o.deleted || !o.countable); )
        o = o.left, o && !o.deleted && o.countable && (r.index -= o.length);
      if (o === null || o.marker === !0) {
        t.splice(i, 1);
        continue;
      }
      r.p = o, o.marker = !0;
    }
    (e < r.index || n > 0 && e === r.index) && (r.index = ko(e, r.index + n));
  }
}, Rh = (t, e, n) => {
  const i = t, r = e.changedParentTypes;
  for (; si(r, t, () => []).push(n), t._item !== null; )
    t = /** @type {AbstractType<any>} */
    t._item.parent;
  A8(i._eH, n, e);
};
class In {
  constructor() {
    this._item = null, this._map = /* @__PURE__ */ new Map(), this._start = null, this.doc = null, this._length = 0, this._eH = ew(), this._dEH = ew(), this._searchMarker = null;
  }
  /**
   * @return {AbstractType<any>|null}
   */
  get parent() {
    return this._item ? (
      /** @type {AbstractType<any>} */
      this._item.parent
    ) : null;
  }
  /**
   * Integrate this type into the Yjs instance.
   *
   * * Save this struct in the os
   * * This type is sent to other client
   * * Observer functions are fired
   *
   * @param {Doc} y The Yjs instance
   * @param {Item|null} item
   */
  _integrate(e, n) {
    this.doc = e, this._item = n;
  }
  /**
   * @return {AbstractType<EventType>}
   */
  _copy() {
    throw tr();
  }
  /**
   * Makes a copy of this data type that can be included somewhere else.
   *
   * Note that the content is only readable _after_ it has been included somewhere in the Ydoc.
   *
   * @return {AbstractType<EventType>}
   */
  clone() {
    throw tr();
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} _encoder
   */
  _write(e) {
  }
  /**
   * The first non-deleted item
   */
  get _first() {
    let e = this._start;
    for (; e !== null && e.deleted; )
      e = e.right;
    return e;
  }
  /**
   * Creates YEvent and calls all type observers.
   * Must be implemented by each type.
   *
   * @param {Transaction} transaction
   * @param {Set<null|string>} _parentSubs Keys changed on this type. `null` if list was modified.
   */
  _callObserver(e, n) {
    !e.local && this._searchMarker && (this._searchMarker.length = 0);
  }
  /**
   * Observe all events that are created on this type.
   *
   * @param {function(EventType, Transaction):void} f Observer function
   */
  observe(e) {
    tw(this._eH, e);
  }
  /**
   * Observe all events that are created by this type and its children.
   *
   * @param {function(Array<YEvent<any>>,Transaction):void} f Observer function
   */
  observeDeep(e) {
    tw(this._dEH, e);
  }
  /**
   * Unregister an observer function.
   *
   * @param {function(EventType,Transaction):void} f Observer function
   */
  unobserve(e) {
    nw(this._eH, e);
  }
  /**
   * Unregister an observer function.
   *
   * @param {function(Array<YEvent<any>>,Transaction):void} f Observer function
   */
  unobserveDeep(e) {
    nw(this._dEH, e);
  }
  /**
   * @abstract
   * @return {any}
   */
  toJSON() {
  }
}
const B8 = (t, e, n) => {
  t.doc ?? zn(), e < 0 && (e = t._length + e), n < 0 && (n = t._length + n);
  let i = n - e;
  const r = [];
  let o = t._start;
  for (; o !== null && i > 0; ) {
    if (o.countable && !o.deleted) {
      const s = o.content.getContent();
      if (s.length <= e)
        e -= s.length;
      else {
        for (let a = e; a < s.length && i > 0; a++)
          r.push(s[a]), i--;
        e = 0;
      }
    }
    o = o.right;
  }
  return r;
}, H8 = (t) => {
  t.doc ?? zn();
  const e = [];
  let n = t._start;
  for (; n !== null; ) {
    if (n.countable && !n.deleted) {
      const i = n.content.getContent();
      for (let r = 0; r < i.length; r++)
        e.push(i[r]);
    }
    n = n.right;
  }
  return e;
}, $8 = (t, e) => {
  const n = [];
  let i = t._start;
  for (; i !== null; ) {
    if (i.countable && js(i, e)) {
      const r = i.content.getContent();
      for (let o = 0; o < r.length; o++)
        n.push(r[o]);
    }
    i = i.right;
  }
  return n;
}, df = (t, e) => {
  let n = 0, i = t._start;
  for (t.doc ?? zn(); i !== null; ) {
    if (i.countable && !i.deleted) {
      const r = i.content.getContent();
      for (let o = 0; o < r.length; o++)
        e(r[o], n++, t);
    }
    i = i.right;
  }
}, j8 = (t, e) => {
  const n = [];
  return df(t, (i, r) => {
    n.push(e(i, r, t));
  }), n;
}, nF = (t) => {
  let e = t._start, n = null, i = 0;
  return {
    [Symbol.iterator]() {
      return this;
    },
    next: () => {
      if (n === null) {
        for (; e !== null && e.deleted; )
          e = e.right;
        if (e === null)
          return {
            done: !0,
            value: void 0
          };
        n = e.content.getContent(), i = 0, e = e.right;
      }
      const r = n[i++];
      return n.length <= i && (n = null), {
        done: !1,
        value: r
      };
    }
  };
}, z8 = (t, e) => {
  t.doc ?? zn();
  const n = Oh(t, e);
  let i = t._start;
  for (n !== null && (i = n.p, e -= n.index); i !== null; i = i.right)
    if (!i.deleted && i.countable) {
      if (e < i.length)
        return i.content.getContent()[e];
      e -= i.length;
    }
}, qu = (t, e, n, i) => {
  let r = n;
  const o = t.doc, s = o.clientID, a = o.store, l = n === null ? e._start : n.right;
  let c = [];
  const f = () => {
    c.length > 0 && (r = new Bt(Ze(s, rn(a, s)), r, r && r.lastId, l, l && l.id, e, null, new ha(c)), r.integrate(t, 0), c = []);
  };
  i.forEach((d) => {
    if (d === null)
      c.push(d);
    else
      switch (d.constructor) {
        case Number:
        case Object:
        case Boolean:
        case Array:
        case String:
          c.push(d);
          break;
        default:
          switch (f(), d.constructor) {
            case Uint8Array:
            case ArrayBuffer:
              r = new Bt(Ze(s, rn(a, s)), r, r && r.lastId, l, l && l.id, e, null, new Nf(new Uint8Array(
                /** @type {Uint8Array} */
                d
              ))), r.integrate(t, 0);
              break;
            case ba:
              r = new Bt(Ze(s, rn(a, s)), r, r && r.lastId, l, l && l.id, e, null, new Of(
                /** @type {Doc} */
                d
              )), r.integrate(t, 0);
              break;
            default:
              if (d instanceof In)
                r = new Bt(Ze(s, rn(a, s)), r, r && r.lastId, l, l && l.id, e, null, new dr(d)), r.integrate(t, 0);
              else
                throw new Error("Unexpected content type in insert operation");
          }
      }
  }), f();
}, U8 = () => Dr("Length exceeded!"), V8 = (t, e, n, i) => {
  if (n > e._length)
    throw U8();
  if (n === 0)
    return e._searchMarker && ff(e._searchMarker, n, i.length), qu(t, e, null, i);
  const r = n, o = Oh(e, n);
  let s = e._start;
  for (o !== null && (s = o.p, n -= o.index, n === 0 && (s = s.prev, n += s && s.countable && !s.deleted ? s.length : 0)); s !== null; s = s.right)
    if (!s.deleted && s.countable) {
      if (n <= s.length) {
        n < s.length && ii(t, Ze(s.id.client, s.id.clock + n));
        break;
      }
      n -= s.length;
    }
  return e._searchMarker && ff(e._searchMarker, r, i.length), qu(t, e, s, i);
}, iF = (t, e, n) => {
  let r = (e._searchMarker || []).reduce((o, s) => s.index > o.index ? s : o, { index: 0, p: e._start }).p;
  if (r)
    for (; r.right; )
      r = r.right;
  return qu(t, e, r, n);
}, W8 = (t, e, n, i) => {
  if (i === 0)
    return;
  const r = n, o = i, s = Oh(e, n);
  let a = e._start;
  for (s !== null && (a = s.p, n -= s.index); a !== null && n > 0; a = a.right)
    !a.deleted && a.countable && (n < a.length && ii(t, Ze(a.id.client, a.id.clock + n)), n -= a.length);
  for (; i > 0 && a !== null; )
    a.deleted || (i < a.length && ii(t, Ze(a.id.client, a.id.clock + i)), a.delete(t), i -= a.length), a = a.right;
  if (i > 0)
    throw U8();
  e._searchMarker && ff(
    e._searchMarker,
    r,
    -o + i
    /* in case we remove the above exception */
  );
}, Gu = (t, e, n) => {
  const i = e._map.get(n);
  i !== void 0 && i.delete(t);
}, fv = (t, e, n, i) => {
  const r = e._map.get(n) || null, o = t.doc, s = o.clientID;
  let a;
  if (i == null)
    a = new ha([i]);
  else
    switch (i.constructor) {
      case Number:
      case Object:
      case Boolean:
      case Array:
      case String:
        a = new ha([i]);
        break;
      case Uint8Array:
        a = new Nf(
          /** @type {Uint8Array} */
          i
        );
        break;
      case ba:
        a = new Of(
          /** @type {Doc} */
          i
        );
        break;
      default:
        if (i instanceof In)
          a = new dr(i);
        else
          throw new Error("Unexpected content type");
    }
  new Bt(Ze(s, rn(o.store, s)), r, r && r.lastId, null, null, e, n, a).integrate(t, 0);
}, dv = (t, e) => {
  t.doc ?? zn();
  const n = t._map.get(e);
  return n !== void 0 && !n.deleted ? n.content.getContent()[n.length - 1] : void 0;
}, q8 = (t) => {
  const e = {};
  return t.doc ?? zn(), t._map.forEach((n, i) => {
    n.deleted || (e[i] = n.content.getContent()[n.length - 1]);
  }), e;
}, G8 = (t, e) => {
  t.doc ?? zn();
  const n = t._map.get(e);
  return n !== void 0 && !n.deleted;
}, rF = (t, e) => {
  const n = {};
  return t._map.forEach((i, r) => {
    let o = i;
    for (; o !== null && (!e.sv.has(o.id.client) || o.id.clock >= (e.sv.get(o.id.client) || 0)); )
      o = o.left;
    o !== null && js(o, e) && (n[r] = o.content.getContent()[o.length - 1]);
  }), n;
}, dd = (t) => (t.doc ?? zn(), kP(
  t._map.entries(),
  /** @param {any} entry */
  (e) => !e[1].deleted
));
class oF extends Nh {
}
class rl extends In {
  constructor() {
    super(), this._prelimContent = [], this._searchMarker = [];
  }
  /**
   * Construct a new YArray containing the specified items.
   * @template {Object<string,any>|Array<any>|number|null|string|Uint8Array} T
   * @param {Array<T>} items
   * @return {YArray<T>}
   */
  static from(e) {
    const n = new rl();
    return n.push(e), n;
  }
  /**
   * Integrate this type into the Yjs instance.
   *
   * * Save this struct in the os
   * * This type is sent to other client
   * * Observer functions are fired
   *
   * @param {Doc} y The Yjs instance
   * @param {Item} item
   */
  _integrate(e, n) {
    super._integrate(e, n), this.insert(
      0,
      /** @type {Array<any>} */
      this._prelimContent
    ), this._prelimContent = null;
  }
  /**
   * @return {YArray<T>}
   */
  _copy() {
    return new rl();
  }
  /**
   * Makes a copy of this data type that can be included somewhere else.
   *
   * Note that the content is only readable _after_ it has been included somewhere in the Ydoc.
   *
   * @return {YArray<T>}
   */
  clone() {
    const e = new rl();
    return e.insert(0, this.toArray().map(
      (n) => n instanceof In ? (
        /** @type {typeof el} */
        n.clone()
      ) : n
    )), e;
  }
  get length() {
    return this.doc ?? zn(), this._length;
  }
  /**
   * Creates YArrayEvent and calls observers.
   *
   * @param {Transaction} transaction
   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.
   */
  _callObserver(e, n) {
    super._callObserver(e, n), Rh(this, e, new oF(this, e));
  }
  /**
   * Inserts new content at an index.
   *
   * Important: This function expects an array of content. Not just a content
   * object. The reason for this "weirdness" is that inserting several elements
   * is very efficient when it is done as a single operation.
   *
   * @example
   *  // Insert character 'a' at position 0
   *  yarray.insert(0, ['a'])
   *  // Insert numbers 1, 2 at position 1
   *  yarray.insert(1, [1, 2])
   *
   * @param {number} index The index to insert content at.
   * @param {Array<T>} content The array of content
   */
  insert(e, n) {
    this.doc !== null ? Ot(this.doc, (i) => {
      V8(
        i,
        this,
        e,
        /** @type {any} */
        n
      );
    }) : this._prelimContent.splice(e, 0, ...n);
  }
  /**
   * Appends content to this YArray.
   *
   * @param {Array<T>} content Array of content to append.
   *
   * @todo Use the following implementation in all types.
   */
  push(e) {
    this.doc !== null ? Ot(this.doc, (n) => {
      iF(
        n,
        this,
        /** @type {any} */
        e
      );
    }) : this._prelimContent.push(...e);
  }
  /**
   * Prepends content to this YArray.
   *
   * @param {Array<T>} content Array of content to prepend.
   */
  unshift(e) {
    this.insert(0, e);
  }
  /**
   * Deletes elements starting from an index.
   *
   * @param {number} index Index at which to start deleting elements
   * @param {number} length The number of elements to remove. Defaults to 1.
   */
  delete(e, n = 1) {
    this.doc !== null ? Ot(this.doc, (i) => {
      W8(i, this, e, n);
    }) : this._prelimContent.splice(e, n);
  }
  /**
   * Returns the i-th element from a YArray.
   *
   * @param {number} index The index of the element to return from the YArray
   * @return {T}
   */
  get(e) {
    return z8(this, e);
  }
  /**
   * Transforms this YArray to a JavaScript Array.
   *
   * @return {Array<T>}
   */
  toArray() {
    return H8(this);
  }
  /**
   * Returns a portion of this YArray into a JavaScript Array selected
   * from start to end (end not included).
   *
   * @param {number} [start]
   * @param {number} [end]
   * @return {Array<T>}
   */
  slice(e = 0, n = this.length) {
    return B8(this, e, n);
  }
  /**
   * Transforms this Shared Type to a JSON object.
   *
   * @return {Array<any>}
   */
  toJSON() {
    return this.map((e) => e instanceof In ? e.toJSON() : e);
  }
  /**
   * Returns an Array with the result of calling a provided function on every
   * element of this YArray.
   *
   * @template M
   * @param {function(T,number,YArray<T>):M} f Function that produces an element of the new Array
   * @return {Array<M>} A new array with each element being the result of the
   *                 callback function
   */
  map(e) {
    return j8(
      this,
      /** @type {any} */
      e
    );
  }
  /**
   * Executes a provided function once on every element of this YArray.
   *
   * @param {function(T,number,YArray<T>):void} f A function to execute on every element of this YArray.
   */
  forEach(e) {
    df(this, e);
  }
  /**
   * @return {IterableIterator<T>}
   */
  [Symbol.iterator]() {
    return nF(this);
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   */
  _write(e) {
    e.writeTypeRef(NF);
  }
}
const sF = (t) => new rl();
class aF extends Nh {
  /**
   * @param {YMap<T>} ymap The YArray that changed.
   * @param {Transaction} transaction
   * @param {Set<any>} subs The keys that changed.
   */
  constructor(e, n, i) {
    super(e, n), this.keysChanged = i;
  }
}
class _l extends In {
  /**
   *
   * @param {Iterable<readonly [string, any]>=} entries - an optional iterable to initialize the YMap
   */
  constructor(e) {
    super(), this._prelimContent = null, e === void 0 ? this._prelimContent = /* @__PURE__ */ new Map() : this._prelimContent = new Map(e);
  }
  /**
   * Integrate this type into the Yjs instance.
   *
   * * Save this struct in the os
   * * This type is sent to other client
   * * Observer functions are fired
   *
   * @param {Doc} y The Yjs instance
   * @param {Item} item
   */
  _integrate(e, n) {
    super._integrate(e, n), this._prelimContent.forEach((i, r) => {
      this.set(r, i);
    }), this._prelimContent = null;
  }
  /**
   * @return {YMap<MapType>}
   */
  _copy() {
    return new _l();
  }
  /**
   * Makes a copy of this data type that can be included somewhere else.
   *
   * Note that the content is only readable _after_ it has been included somewhere in the Ydoc.
   *
   * @return {YMap<MapType>}
   */
  clone() {
    const e = new _l();
    return this.forEach((n, i) => {
      e.set(i, n instanceof In ? (
        /** @type {typeof value} */
        n.clone()
      ) : n);
    }), e;
  }
  /**
   * Creates YMapEvent and calls observers.
   *
   * @param {Transaction} transaction
   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.
   */
  _callObserver(e, n) {
    Rh(this, e, new aF(this, e, n));
  }
  /**
   * Transforms this Shared Type to a JSON object.
   *
   * @return {Object<string,any>}
   */
  toJSON() {
    this.doc ?? zn();
    const e = {};
    return this._map.forEach((n, i) => {
      if (!n.deleted) {
        const r = n.content.getContent()[n.length - 1];
        e[i] = r instanceof In ? r.toJSON() : r;
      }
    }), e;
  }
  /**
   * Returns the size of the YMap (count of key/value pairs)
   *
   * @return {number}
   */
  get size() {
    return [...dd(this)].length;
  }
  /**
   * Returns the keys for each element in the YMap Type.
   *
   * @return {IterableIterator<string>}
   */
  keys() {
    return im(
      dd(this),
      /** @param {any} v */
      (e) => e[0]
    );
  }
  /**
   * Returns the values for each element in the YMap Type.
   *
   * @return {IterableIterator<MapType>}
   */
  values() {
    return im(
      dd(this),
      /** @param {any} v */
      (e) => e[1].content.getContent()[e[1].length - 1]
    );
  }
  /**
   * Returns an Iterator of [key, value] pairs
   *
   * @return {IterableIterator<[string, MapType]>}
   */
  entries() {
    return im(
      dd(this),
      /** @param {any} v */
      (e) => (
        /** @type {any} */
        [e[0], e[1].content.getContent()[e[1].length - 1]]
      )
    );
  }
  /**
   * Executes a provided function on once on every key-value pair.
   *
   * @param {function(MapType,string,YMap<MapType>):void} f A function to execute on every element of this YArray.
   */
  forEach(e) {
    this.doc ?? zn(), this._map.forEach((n, i) => {
      n.deleted || e(n.content.getContent()[n.length - 1], i, this);
    });
  }
  /**
   * Returns an Iterator of [key, value] pairs
   *
   * @return {IterableIterator<[string, MapType]>}
   */
  [Symbol.iterator]() {
    return this.entries();
  }
  /**
   * Remove a specified element from this YMap.
   *
   * @param {string} key The key of the element to remove.
   */
  delete(e) {
    this.doc !== null ? Ot(this.doc, (n) => {
      Gu(n, this, e);
    }) : this._prelimContent.delete(e);
  }
  /**
   * Adds or updates an element with a specified key and value.
   * @template {MapType} VAL
   *
   * @param {string} key The key of the element to add to this YMap
   * @param {VAL} value The value of the element to add
   * @return {VAL}
   */
  set(e, n) {
    return this.doc !== null ? Ot(this.doc, (i) => {
      fv(
        i,
        this,
        e,
        /** @type {any} */
        n
      );
    }) : this._prelimContent.set(e, n), n;
  }
  /**
   * Returns a specified element from this YMap.
   *
   * @param {string} key
   * @return {MapType|undefined}
   */
  get(e) {
    return (
      /** @type {any} */
      dv(this, e)
    );
  }
  /**
   * Returns a boolean indicating whether the specified key exists or not.
   *
   * @param {string} key The key to test.
   * @return {boolean}
   */
  has(e) {
    return G8(this, e);
  }
  /**
   * Removes all elements from this YMap.
   */
  clear() {
    this.doc !== null ? Ot(this.doc, (e) => {
      this.forEach(function(n, i, r) {
        Gu(e, r, i);
      });
    }) : this._prelimContent.clear();
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   */
  _write(e) {
    e.writeTypeRef(OF);
  }
}
const lF = (t) => new _l(), ss = (t, e) => t === e || typeof t == "object" && typeof e == "object" && t && e && GD(t, e);
class fg {
  /**
   * @param {Item|null} left
   * @param {Item|null} right
   * @param {number} index
   * @param {Map<string,any>} currentAttributes
   */
  constructor(e, n, i, r) {
    this.left = e, this.right = n, this.index = i, this.currentAttributes = r;
  }
  /**
   * Only call this if you know that this.right is defined
   */
  forward() {
    switch (this.right === null && yi(), this.right.content.constructor) {
      case un:
        this.right.deleted || Ll(
          this.currentAttributes,
          /** @type {ContentFormat} */
          this.right.content
        );
        break;
      default:
        this.right.deleted || (this.index += this.right.length);
        break;
    }
    this.left = this.right, this.right = this.right.right;
  }
}
const fw = (t, e, n) => {
  for (; e.right !== null && n > 0; ) {
    switch (e.right.content.constructor) {
      case un:
        e.right.deleted || Ll(
          e.currentAttributes,
          /** @type {ContentFormat} */
          e.right.content
        );
        break;
      default:
        e.right.deleted || (n < e.right.length && ii(t, Ze(e.right.id.client, e.right.id.clock + n)), e.index += e.right.length, n -= e.right.length);
        break;
    }
    e.left = e.right, e.right = e.right.right;
  }
  return e;
}, ud = (t, e, n, i) => {
  const r = /* @__PURE__ */ new Map(), o = i ? Oh(e, n) : null;
  if (o) {
    const s = new fg(o.p.left, o.p, o.index, r);
    return fw(t, s, n - o.index);
  } else {
    const s = new fg(null, e._start, 0, r);
    return fw(t, s, n);
  }
}, K8 = (t, e, n, i) => {
  for (; n.right !== null && (n.right.deleted === !0 || n.right.content.constructor === un && ss(
    i.get(
      /** @type {ContentFormat} */
      n.right.content.key
    ),
    /** @type {ContentFormat} */
    n.right.content.value
  )); )
    n.right.deleted || i.delete(
      /** @type {ContentFormat} */
      n.right.content.key
    ), n.forward();
  const r = t.doc, o = r.clientID;
  i.forEach((s, a) => {
    const l = n.left, c = n.right, f = new Bt(Ze(o, rn(r.store, o)), l, l && l.lastId, c, c && c.id, e, null, new un(a, s));
    f.integrate(t, 0), n.right = f, n.forward();
  });
}, Ll = (t, e) => {
  const { key: n, value: i } = e;
  i === null ? t.delete(n) : t.set(n, i);
}, Y8 = (t, e) => {
  for (; t.right !== null; ) {
    if (!(t.right.deleted || t.right.content.constructor === un && ss(
      e[
        /** @type {ContentFormat} */
        t.right.content.key
      ] ?? null,
      /** @type {ContentFormat} */
      t.right.content.value
    ))) break;
    t.forward();
  }
}, J8 = (t, e, n, i) => {
  const r = t.doc, o = r.clientID, s = /* @__PURE__ */ new Map();
  for (const a in i) {
    const l = i[a], c = n.currentAttributes.get(a) ?? null;
    if (!ss(c, l)) {
      s.set(a, c);
      const { left: f, right: d } = n;
      n.right = new Bt(Ze(o, rn(r.store, o)), f, f && f.lastId, d, d && d.id, e, null, new un(a, l)), n.right.integrate(t, 0), n.forward();
    }
  }
  return s;
}, sm = (t, e, n, i, r) => {
  n.currentAttributes.forEach((u, h) => {
    r[h] === void 0 && (r[h] = null);
  });
  const o = t.doc, s = o.clientID;
  Y8(n, r);
  const a = J8(t, e, n, r), l = i.constructor === String ? new ar(
    /** @type {string} */
    i
  ) : i instanceof In ? new dr(i) : new ka(i);
  let { left: c, right: f, index: d } = n;
  e._searchMarker && ff(e._searchMarker, n.index, l.getLength()), f = new Bt(Ze(s, rn(o.store, s)), c, c && c.lastId, f, f && f.id, e, null, l), f.integrate(t, 0), n.right = f, n.index = d, n.forward(), K8(t, e, n, a);
}, dw = (t, e, n, i, r) => {
  const o = t.doc, s = o.clientID;
  Y8(n, r);
  const a = J8(t, e, n, r);
  e: for (; n.right !== null && (i > 0 || a.size > 0 && (n.right.deleted || n.right.content.constructor === un)); ) {
    if (!n.right.deleted)
      switch (n.right.content.constructor) {
        case un: {
          const { key: l, value: c } = (
            /** @type {ContentFormat} */
            n.right.content
          ), f = r[l];
          if (f !== void 0) {
            if (ss(f, c))
              a.delete(l);
            else {
              if (i === 0)
                break e;
              a.set(l, c);
            }
            n.right.delete(t);
          } else
            n.currentAttributes.set(l, c);
          break;
        }
        default:
          i < n.right.length && ii(t, Ze(n.right.id.client, n.right.id.clock + i)), i -= n.right.length;
          break;
      }
    n.forward();
  }
  if (i > 0) {
    let l = "";
    for (; i > 0; i--)
      l += `
`;
    n.right = new Bt(Ze(s, rn(o.store, s)), n.left, n.left && n.left.lastId, n.right, n.right && n.right.id, e, null, new ar(l)), n.right.integrate(t, 0), n.forward();
  }
  K8(t, e, n, a);
}, X8 = (t, e, n, i, r) => {
  let o = e;
  const s = Gn();
  for (; o && (!o.countable || o.deleted); ) {
    if (!o.deleted && o.content.constructor === un) {
      const c = (
        /** @type {ContentFormat} */
        o.content
      );
      s.set(c.key, c);
    }
    o = o.right;
  }
  let a = 0, l = !1;
  for (; e !== o; ) {
    if (n === e && (l = !0), !e.deleted) {
      const c = e.content;
      switch (c.constructor) {
        case un: {
          const { key: f, value: d } = (
            /** @type {ContentFormat} */
            c
          ), u = i.get(f) ?? null;
          (s.get(f) !== c || u === d) && (e.delete(t), a++, !l && (r.get(f) ?? null) === d && u !== d && (u === null ? r.delete(f) : r.set(f, u))), !l && !e.deleted && Ll(
            r,
            /** @type {ContentFormat} */
            c
          );
          break;
        }
      }
    }
    e = /** @type {Item} */
    e.right;
  }
  return a;
}, cF = (t, e) => {
  for (; e && e.right && (e.right.deleted || !e.right.countable); )
    e = e.right;
  const n = /* @__PURE__ */ new Set();
  for (; e && (e.deleted || !e.countable); ) {
    if (!e.deleted && e.content.constructor === un) {
      const i = (
        /** @type {ContentFormat} */
        e.content.key
      );
      n.has(i) ? e.delete(t) : n.add(i);
    }
    e = e.left;
  }
}, fF = (t) => {
  let e = 0;
  return Ot(
    /** @type {Doc} */
    t.doc,
    (n) => {
      let i = (
        /** @type {Item} */
        t._start
      ), r = t._start, o = Gn();
      const s = tg(o);
      for (; r; ) {
        if (r.deleted === !1)
          switch (r.content.constructor) {
            case un:
              Ll(
                s,
                /** @type {ContentFormat} */
                r.content
              );
              break;
            default:
              e += X8(n, i, r, o, s), o = tg(s), i = r;
              break;
          }
        r = r.right;
      }
    }
  ), e;
}, dF = (t) => {
  const e = /* @__PURE__ */ new Set(), n = t.doc;
  for (const [i, r] of t.afterState.entries()) {
    const o = t.beforeState.get(i) || 0;
    r !== o && R8(
      t,
      /** @type {Array<Item|GC>} */
      n.store.clients.get(i),
      o,
      r,
      (s) => {
        !s.deleted && /** @type {Item} */
        s.content.constructor === un && s.constructor !== Ni && e.add(
          /** @type {any} */
          s.parent
        );
      }
    );
  }
  Ot(n, (i) => {
    vs(t, t.deleteSet, (r) => {
      if (r instanceof Ni || !/** @type {YText} */
      r.parent._hasFormatting || e.has(
        /** @type {YText} */
        r.parent
      ))
        return;
      const o = (
        /** @type {YText} */
        r.parent
      );
      r.content.constructor === un ? e.add(o) : cF(i, r);
    });
    for (const r of e)
      fF(r);
  });
}, uw = (t, e, n) => {
  const i = n, r = tg(e.currentAttributes), o = e.right;
  for (; n > 0 && e.right !== null; ) {
    if (e.right.deleted === !1)
      switch (e.right.content.constructor) {
        case dr:
        case ka:
        case ar:
          n < e.right.length && ii(t, Ze(e.right.id.client, e.right.id.clock + n)), n -= e.right.length, e.right.delete(t);
          break;
      }
    e.forward();
  }
  o && X8(t, o, e.right, r, e.currentAttributes);
  const s = (
    /** @type {AbstractType<any>} */
    /** @type {Item} */
    (e.left || e.right).parent
  );
  return s._searchMarker && ff(s._searchMarker, e.index, -i + n), e;
};
class uF extends Nh {
  /**
   * @param {YText} ytext
   * @param {Transaction} transaction
   * @param {Set<any>} subs The keys that changed
   */
  constructor(e, n, i) {
    super(e, n), this.childListChanged = !1, this.keysChanged = /* @__PURE__ */ new Set(), i.forEach((r) => {
      r === null ? this.childListChanged = !0 : this.keysChanged.add(r);
    });
  }
  /**
   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}
   */
  get changes() {
    if (this._changes === null) {
      const e = {
        keys: this.keys,
        delta: this.delta,
        added: /* @__PURE__ */ new Set(),
        deleted: /* @__PURE__ */ new Set()
      };
      this._changes = e;
    }
    return (
      /** @type {any} */
      this._changes
    );
  }
  /**
   * Compute the changes in the delta format.
   * A {@link https://quilljs.com/docs/delta/|Quill Delta}) that represents the changes on the document.
   *
   * @type {Array<{insert?:string|object|AbstractType<any>, delete?:number, retain?:number, attributes?: Object<string,any>}>}
   *
   * @public
   */
  get delta() {
    if (this._delta === null) {
      const e = (
        /** @type {Doc} */
        this.target.doc
      ), n = [];
      Ot(e, (i) => {
        const r = /* @__PURE__ */ new Map(), o = /* @__PURE__ */ new Map();
        let s = this.target._start, a = null;
        const l = {};
        let c = "", f = 0, d = 0;
        const u = () => {
          if (a !== null) {
            let h = null;
            switch (a) {
              case "delete":
                d > 0 && (h = { delete: d }), d = 0;
                break;
              case "insert":
                (typeof c == "object" || c.length > 0) && (h = { insert: c }, r.size > 0 && (h.attributes = {}, r.forEach((p, m) => {
                  p !== null && (h.attributes[m] = p);
                }))), c = "";
                break;
              case "retain":
                f > 0 && (h = { retain: f }, WD(l) || (h.attributes = UD({}, l))), f = 0;
                break;
            }
            h && n.push(h), a = null;
          }
        };
        for (; s !== null; ) {
          switch (s.content.constructor) {
            case dr:
            case ka:
              this.adds(s) ? this.deletes(s) || (u(), a = "insert", c = s.content.getContent()[0], u()) : this.deletes(s) ? (a !== "delete" && (u(), a = "delete"), d += 1) : s.deleted || (a !== "retain" && (u(), a = "retain"), f += 1);
              break;
            case ar:
              this.adds(s) ? this.deletes(s) || (a !== "insert" && (u(), a = "insert"), c += /** @type {ContentString} */
              s.content.str) : this.deletes(s) ? (a !== "delete" && (u(), a = "delete"), d += s.length) : s.deleted || (a !== "retain" && (u(), a = "retain"), f += s.length);
              break;
            case un: {
              const { key: h, value: p } = (
                /** @type {ContentFormat} */
                s.content
              );
              if (this.adds(s)) {
                if (!this.deletes(s)) {
                  const m = r.get(h) ?? null;
                  ss(m, p) ? p !== null && s.delete(i) : (a === "retain" && u(), ss(p, o.get(h) ?? null) ? delete l[h] : l[h] = p);
                }
              } else if (this.deletes(s)) {
                o.set(h, p);
                const m = r.get(h) ?? null;
                ss(m, p) || (a === "retain" && u(), l[h] = m);
              } else if (!s.deleted) {
                o.set(h, p);
                const m = l[h];
                m !== void 0 && (ss(m, p) ? m !== null && s.delete(i) : (a === "retain" && u(), p === null ? delete l[h] : l[h] = p));
              }
              s.deleted || (a === "insert" && u(), Ll(
                r,
                /** @type {ContentFormat} */
                s.content
              ));
              break;
            }
          }
          s = s.right;
        }
        for (u(); n.length > 0; ) {
          const h = n[n.length - 1];
          if (h.retain !== void 0 && h.attributes === void 0)
            n.pop();
          else
            break;
        }
      }), this._delta = n;
    }
    return (
      /** @type {any} */
      this._delta
    );
  }
}
class bs extends In {
  /**
   * @param {String} [string] The initial value of the YText.
   */
  constructor(e) {
    super(), this._pending = e !== void 0 ? [() => this.insert(0, e)] : [], this._searchMarker = [], this._hasFormatting = !1;
  }
  /**
   * Number of characters of this text type.
   *
   * @type {number}
   */
  get length() {
    return this.doc ?? zn(), this._length;
  }
  /**
   * @param {Doc} y
   * @param {Item} item
   */
  _integrate(e, n) {
    super._integrate(e, n);
    try {
      this._pending.forEach((i) => i());
    } catch (i) {
      console.error(i);
    }
    this._pending = null;
  }
  _copy() {
    return new bs();
  }
  /**
   * Makes a copy of this data type that can be included somewhere else.
   *
   * Note that the content is only readable _after_ it has been included somewhere in the Ydoc.
   *
   * @return {YText}
   */
  clone() {
    const e = new bs();
    return e.applyDelta(this.toDelta()), e;
  }
  /**
   * Creates YTextEvent and calls observers.
   *
   * @param {Transaction} transaction
   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.
   */
  _callObserver(e, n) {
    super._callObserver(e, n);
    const i = new uF(this, e, n);
    Rh(this, e, i), !e.local && this._hasFormatting && (e._needFormattingCleanup = !0);
  }
  /**
   * Returns the unformatted string representation of this YText type.
   *
   * @public
   */
  toString() {
    this.doc ?? zn();
    let e = "", n = this._start;
    for (; n !== null; )
      !n.deleted && n.countable && n.content.constructor === ar && (e += /** @type {ContentString} */
      n.content.str), n = n.right;
    return e;
  }
  /**
   * Returns the unformatted string representation of this YText type.
   *
   * @return {string}
   * @public
   */
  toJSON() {
    return this.toString();
  }
  /**
   * Apply a {@link Delta} on this shared YText type.
   *
   * @param {any} delta The changes to apply on this element.
   * @param {object}  opts
   * @param {boolean} [opts.sanitize] Sanitize input delta. Removes ending newlines if set to true.
   *
   *
   * @public
   */
  applyDelta(e, { sanitize: n = !0 } = {}) {
    this.doc !== null ? Ot(this.doc, (i) => {
      const r = new fg(null, this._start, 0, /* @__PURE__ */ new Map());
      for (let o = 0; o < e.length; o++) {
        const s = e[o];
        if (s.insert !== void 0) {
          const a = !n && typeof s.insert == "string" && o === e.length - 1 && r.right === null && s.insert.slice(-1) === `
` ? s.insert.slice(0, -1) : s.insert;
          (typeof a != "string" || a.length > 0) && sm(i, this, r, a, s.attributes || {});
        } else s.retain !== void 0 ? dw(i, this, r, s.retain, s.attributes || {}) : s.delete !== void 0 && uw(i, r, s.delete);
      }
    }) : this._pending.push(() => this.applyDelta(e));
  }
  /**
   * Returns the Delta representation of this YText type.
   *
   * @param {Snapshot} [snapshot]
   * @param {Snapshot} [prevSnapshot]
   * @param {function('removed' | 'added', ID):any} [computeYChange]
   * @return {any} The Delta representation of this type.
   *
   * @public
   */
  toDelta(e, n, i) {
    this.doc ?? zn();
    const r = [], o = /* @__PURE__ */ new Map(), s = (
      /** @type {Doc} */
      this.doc
    );
    let a = "", l = this._start;
    function c() {
      if (a.length > 0) {
        const d = {};
        let u = !1;
        o.forEach((p, m) => {
          u = !0, d[m] = p;
        });
        const h = { insert: a };
        u && (h.attributes = d), r.push(h), a = "";
      }
    }
    const f = () => {
      for (; l !== null; ) {
        if (js(l, e) || n !== void 0 && js(l, n))
          switch (l.content.constructor) {
            case ar: {
              const d = o.get("ychange");
              e !== void 0 && !js(l, e) ? (d === void 0 || d.user !== l.id.client || d.type !== "removed") && (c(), o.set("ychange", i ? i("removed", l.id) : { type: "removed" })) : n !== void 0 && !js(l, n) ? (d === void 0 || d.user !== l.id.client || d.type !== "added") && (c(), o.set("ychange", i ? i("added", l.id) : { type: "added" })) : d !== void 0 && (c(), o.delete("ychange")), a += /** @type {ContentString} */
              l.content.str;
              break;
            }
            case dr:
            case ka: {
              c();
              const d = {
                insert: l.content.getContent()[0]
              };
              if (o.size > 0) {
                const u = (
                  /** @type {Object<string,any>} */
                  {}
                );
                d.attributes = u, o.forEach((h, p) => {
                  u[p] = h;
                });
              }
              r.push(d);
              break;
            }
            case un:
              js(l, e) && (c(), Ll(
                o,
                /** @type {ContentFormat} */
                l.content
              ));
              break;
          }
        l = l.right;
      }
      c();
    };
    return e || n ? Ot(s, (d) => {
      e && lg(d, e), n && lg(d, n), f();
    }, "cleanup") : f(), r;
  }
  /**
   * Insert text at a given index.
   *
   * @param {number} index The index at which to start inserting.
   * @param {String} text The text to insert at the specified position.
   * @param {TextAttributes} [attributes] Optionally define some formatting
   *                                    information to apply on the inserted
   *                                    Text.
   * @public
   */
  insert(e, n, i) {
    if (n.length <= 0)
      return;
    const r = this.doc;
    r !== null ? Ot(r, (o) => {
      const s = ud(o, this, e, !i);
      i || (i = {}, s.currentAttributes.forEach((a, l) => {
        i[l] = a;
      })), sm(o, this, s, n, i);
    }) : this._pending.push(() => this.insert(e, n, i));
  }
  /**
   * Inserts an embed at a index.
   *
   * @param {number} index The index to insert the embed at.
   * @param {Object | AbstractType<any>} embed The Object that represents the embed.
   * @param {TextAttributes} [attributes] Attribute information to apply on the
   *                                    embed
   *
   * @public
   */
  insertEmbed(e, n, i) {
    const r = this.doc;
    r !== null ? Ot(r, (o) => {
      const s = ud(o, this, e, !i);
      sm(o, this, s, n, i || {});
    }) : this._pending.push(() => this.insertEmbed(e, n, i || {}));
  }
  /**
   * Deletes text starting from an index.
   *
   * @param {number} index Index at which to start deleting.
   * @param {number} length The number of characters to remove. Defaults to 1.
   *
   * @public
   */
  delete(e, n) {
    if (n === 0)
      return;
    const i = this.doc;
    i !== null ? Ot(i, (r) => {
      uw(r, ud(r, this, e, !0), n);
    }) : this._pending.push(() => this.delete(e, n));
  }
  /**
   * Assigns properties to a range of text.
   *
   * @param {number} index The position where to start formatting.
   * @param {number} length The amount of characters to assign properties to.
   * @param {TextAttributes} attributes Attribute information to apply on the
   *                                    text.
   *
   * @public
   */
  format(e, n, i) {
    if (n === 0)
      return;
    const r = this.doc;
    r !== null ? Ot(r, (o) => {
      const s = ud(o, this, e, !1);
      s.right !== null && dw(o, this, s, n, i);
    }) : this._pending.push(() => this.format(e, n, i));
  }
  /**
   * Removes an attribute.
   *
   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.
   *
   * @param {String} attributeName The attribute name that is to be removed.
   *
   * @public
   */
  removeAttribute(e) {
    this.doc !== null ? Ot(this.doc, (n) => {
      Gu(n, this, e);
    }) : this._pending.push(() => this.removeAttribute(e));
  }
  /**
   * Sets or updates an attribute.
   *
   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.
   *
   * @param {String} attributeName The attribute name that is to be set.
   * @param {any} attributeValue The attribute value that is to be set.
   *
   * @public
   */
  setAttribute(e, n) {
    this.doc !== null ? Ot(this.doc, (i) => {
      fv(i, this, e, n);
    }) : this._pending.push(() => this.setAttribute(e, n));
  }
  /**
   * Returns an attribute value that belongs to the attribute name.
   *
   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.
   *
   * @param {String} attributeName The attribute name that identifies the
   *                               queried value.
   * @return {any} The queried attribute value.
   *
   * @public
   */
  getAttribute(e) {
    return (
      /** @type {any} */
      dv(this, e)
    );
  }
  /**
   * Returns all attribute name/value pairs in a JSON Object.
   *
   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.
   *
   * @return {Object<string, any>} A JSON Object that describes the attributes.
   *
   * @public
   */
  getAttributes() {
    return q8(this);
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   */
  _write(e) {
    e.writeTypeRef(RF);
  }
}
const hF = (t) => new bs();
class am {
  /**
   * @param {YXmlFragment | YXmlElement} root
   * @param {function(AbstractType<any>):boolean} [f]
   */
  constructor(e, n = () => !0) {
    this._filter = n, this._root = e, this._currentNode = /** @type {Item} */
    e._start, this._firstCall = !0, e.doc ?? zn();
  }
  [Symbol.iterator]() {
    return this;
  }
  /**
   * Get the next node.
   *
   * @return {IteratorResult<YXmlElement|YXmlText|YXmlHook>} The next node.
   *
   * @public
   */
  next() {
    let e = this._currentNode, n = e && e.content && /** @type {any} */
    e.content.type;
    if (e !== null && (!this._firstCall || e.deleted || !this._filter(n)))
      do
        if (n = /** @type {any} */
        e.content.type, !e.deleted && (n.constructor === Wn || n.constructor === ua) && n._start !== null)
          e = n._start;
        else
          for (; e !== null; )
            if (e.right !== null) {
              e = e.right;
              break;
            } else e.parent === this._root ? e = null : e = /** @type {AbstractType<any>} */
            e.parent._item;
      while (e !== null && (e.deleted || !this._filter(
        /** @type {ContentType} */
        e.content.type
      )));
    return this._firstCall = !1, e === null ? { value: void 0, done: !0 } : (this._currentNode = e, { value: (
      /** @type {any} */
      e.content.type
    ), done: !1 });
  }
}
class ua extends In {
  constructor() {
    super(), this._prelimContent = [];
  }
  /**
   * @type {YXmlElement|YXmlText|null}
   */
  get firstChild() {
    const e = this._first;
    return e ? e.content.getContent()[0] : null;
  }
  /**
   * Integrate this type into the Yjs instance.
   *
   * * Save this struct in the os
   * * This type is sent to other client
   * * Observer functions are fired
   *
   * @param {Doc} y The Yjs instance
   * @param {Item} item
   */
  _integrate(e, n) {
    super._integrate(e, n), this.insert(
      0,
      /** @type {Array<any>} */
      this._prelimContent
    ), this._prelimContent = null;
  }
  _copy() {
    return new ua();
  }
  /**
   * Makes a copy of this data type that can be included somewhere else.
   *
   * Note that the content is only readable _after_ it has been included somewhere in the Ydoc.
   *
   * @return {YXmlFragment}
   */
  clone() {
    const e = new ua();
    return e.insert(0, this.toArray().map((n) => n instanceof In ? n.clone() : n)), e;
  }
  get length() {
    return this.doc ?? zn(), this._prelimContent === null ? this._length : this._prelimContent.length;
  }
  /**
   * Create a subtree of childNodes.
   *
   * @example
   * const walker = elem.createTreeWalker(dom => dom.nodeName === 'div')
   * for (let node in walker) {
   *   // `node` is a div node
   *   nop(node)
   * }
   *
   * @param {function(AbstractType<any>):boolean} filter Function that is called on each child element and
   *                          returns a Boolean indicating whether the child
   *                          is to be included in the subtree.
   * @return {YXmlTreeWalker} A subtree and a position within it.
   *
   * @public
   */
  createTreeWalker(e) {
    return new am(this, e);
  }
  /**
   * Returns the first YXmlElement that matches the query.
   * Similar to DOM's {@link querySelector}.
   *
   * Query support:
   *   - tagname
   * TODO:
   *   - id
   *   - attribute
   *
   * @param {CSS_Selector} query The query on the children.
   * @return {YXmlElement|YXmlText|YXmlHook|null} The first element that matches the query or null.
   *
   * @public
   */
  querySelector(e) {
    e = e.toUpperCase();
    const i = new am(this, (r) => r.nodeName && r.nodeName.toUpperCase() === e).next();
    return i.done ? null : i.value;
  }
  /**
   * Returns all YXmlElements that match the query.
   * Similar to Dom's {@link querySelectorAll}.
   *
   * @todo Does not yet support all queries. Currently only query by tagName.
   *
   * @param {CSS_Selector} query The query on the children
   * @return {Array<YXmlElement|YXmlText|YXmlHook|null>} The elements that match this query.
   *
   * @public
   */
  querySelectorAll(e) {
    return e = e.toUpperCase(), bo(new am(this, (n) => n.nodeName && n.nodeName.toUpperCase() === e));
  }
  /**
   * Creates YXmlEvent and calls observers.
   *
   * @param {Transaction} transaction
   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.
   */
  _callObserver(e, n) {
    Rh(this, e, new gF(this, n, e));
  }
  /**
   * Get the string representation of all the children of this YXmlFragment.
   *
   * @return {string} The string representation of all children.
   */
  toString() {
    return j8(this, (e) => e.toString()).join("");
  }
  /**
   * @return {string}
   */
  toJSON() {
    return this.toString();
  }
  /**
   * Creates a Dom Element that mirrors this YXmlElement.
   *
   * @param {Document} [_document=document] The document object (you must define
   *                                        this when calling this method in
   *                                        nodejs)
   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks
   *                                             are presented in the DOM
   * @param {any} [binding] You should not set this property. This is
   *                               used if DomBinding wants to create a
   *                               association to the created DOM type.
   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}
   *
   * @public
   */
  toDOM(e = document, n = {}, i) {
    const r = e.createDocumentFragment();
    return i !== void 0 && i._createAssociation(r, this), df(this, (o) => {
      r.insertBefore(o.toDOM(e, n, i), null);
    }), r;
  }
  /**
   * Inserts new content at an index.
   *
   * @example
   *  // Insert character 'a' at position 0
   *  xml.insert(0, [new Y.XmlText('text')])
   *
   * @param {number} index The index to insert content at
   * @param {Array<YXmlElement|YXmlText>} content The array of content
   */
  insert(e, n) {
    this.doc !== null ? Ot(this.doc, (i) => {
      V8(i, this, e, n);
    }) : this._prelimContent.splice(e, 0, ...n);
  }
  /**
   * Inserts new content at an index.
   *
   * @example
   *  // Insert character 'a' at position 0
   *  xml.insert(0, [new Y.XmlText('text')])
   *
   * @param {null|Item|YXmlElement|YXmlText} ref The index to insert content at
   * @param {Array<YXmlElement|YXmlText>} content The array of content
   */
  insertAfter(e, n) {
    if (this.doc !== null)
      Ot(this.doc, (i) => {
        const r = e && e instanceof In ? e._item : e;
        qu(i, this, r, n);
      });
    else {
      const i = (
        /** @type {Array<any>} */
        this._prelimContent
      ), r = e === null ? 0 : i.findIndex((o) => o === e) + 1;
      if (r === 0 && e !== null)
        throw Dr("Reference item not found");
      i.splice(r, 0, ...n);
    }
  }
  /**
   * Deletes elements starting from an index.
   *
   * @param {number} index Index at which to start deleting elements
   * @param {number} [length=1] The number of elements to remove. Defaults to 1.
   */
  delete(e, n = 1) {
    this.doc !== null ? Ot(this.doc, (i) => {
      W8(i, this, e, n);
    }) : this._prelimContent.splice(e, n);
  }
  /**
   * Transforms this YArray to a JavaScript Array.
   *
   * @return {Array<YXmlElement|YXmlText|YXmlHook>}
   */
  toArray() {
    return H8(this);
  }
  /**
   * Appends content to this YArray.
   *
   * @param {Array<YXmlElement|YXmlText>} content Array of content to append.
   */
  push(e) {
    this.insert(this.length, e);
  }
  /**
   * Prepends content to this YArray.
   *
   * @param {Array<YXmlElement|YXmlText>} content Array of content to prepend.
   */
  unshift(e) {
    this.insert(0, e);
  }
  /**
   * Returns the i-th element from a YArray.
   *
   * @param {number} index The index of the element to return from the YArray
   * @return {YXmlElement|YXmlText}
   */
  get(e) {
    return z8(this, e);
  }
  /**
   * Returns a portion of this YXmlFragment into a JavaScript Array selected
   * from start to end (end not included).
   *
   * @param {number} [start]
   * @param {number} [end]
   * @return {Array<YXmlElement|YXmlText>}
   */
  slice(e = 0, n = this.length) {
    return B8(this, e, n);
  }
  /**
   * Executes a provided function on once on every child element.
   *
   * @param {function(YXmlElement|YXmlText,number, typeof self):void} f A function to execute on every element of this YArray.
   */
  forEach(e) {
    df(this, e);
  }
  /**
   * Transform the properties of this type to binary and write it to an
   * BinaryEncoder.
   *
   * This is called when this Item is sent to a remote peer.
   *
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.
   */
  _write(e) {
    e.writeTypeRef(LF);
  }
}
const pF = (t) => new ua();
class Wn extends ua {
  constructor(e = "UNDEFINED") {
    super(), this.nodeName = e, this._prelimAttrs = /* @__PURE__ */ new Map();
  }
  /**
   * @type {YXmlElement|YXmlText|null}
   */
  get nextSibling() {
    const e = this._item ? this._item.next : null;
    return e ? (
      /** @type {YXmlElement|YXmlText} */
      /** @type {ContentType} */
      e.content.type
    ) : null;
  }
  /**
   * @type {YXmlElement|YXmlText|null}
   */
  get prevSibling() {
    const e = this._item ? this._item.prev : null;
    return e ? (
      /** @type {YXmlElement|YXmlText} */
      /** @type {ContentType} */
      e.content.type
    ) : null;
  }
  /**
   * Integrate this type into the Yjs instance.
   *
   * * Save this struct in the os
   * * This type is sent to other client
   * * Observer functions are fired
   *
   * @param {Doc} y The Yjs instance
   * @param {Item} item
   */
  _integrate(e, n) {
    super._integrate(e, n), /** @type {Map<string, any>} */
    this._prelimAttrs.forEach((i, r) => {
      this.setAttribute(r, i);
    }), this._prelimAttrs = null;
  }
  /**
   * Creates an Item with the same effect as this Item (without position effect)
   *
   * @return {YXmlElement}
   */
  _copy() {
    return new Wn(this.nodeName);
  }
  /**
   * Makes a copy of this data type that can be included somewhere else.
   *
   * Note that the content is only readable _after_ it has been included somewhere in the Ydoc.
   *
   * @return {YXmlElement<KV>}
   */
  clone() {
    const e = new Wn(this.nodeName), n = this.getAttributes();
    return VD(n, (i, r) => {
      typeof i == "string" && e.setAttribute(r, i);
    }), e.insert(0, this.toArray().map((i) => i instanceof In ? i.clone() : i)), e;
  }
  /**
   * Returns the XML serialization of this YXmlElement.
   * The attributes are ordered by attribute-name, so you can easily use this
   * method to compare YXmlElements
   *
   * @return {string} The string representation of this type.
   *
   * @public
   */
  toString() {
    const e = this.getAttributes(), n = [], i = [];
    for (const a in e)
      i.push(a);
    i.sort();
    const r = i.length;
    for (let a = 0; a < r; a++) {
      const l = i[a];
      n.push(l + '="' + e[l] + '"');
    }
    const o = this.nodeName.toLocaleLowerCase(), s = n.length > 0 ? " " + n.join(" ") : "";
    return `<${o}${s}>${super.toString()}</${o}>`;
  }
  /**
   * Removes an attribute from this YXmlElement.
   *
   * @param {string} attributeName The attribute name that is to be removed.
   *
   * @public
   */
  removeAttribute(e) {
    this.doc !== null ? Ot(this.doc, (n) => {
      Gu(n, this, e);
    }) : this._prelimAttrs.delete(e);
  }
  /**
   * Sets or updates an attribute.
   *
   * @template {keyof KV & string} KEY
   *
   * @param {KEY} attributeName The attribute name that is to be set.
   * @param {KV[KEY]} attributeValue The attribute value that is to be set.
   *
   * @public
   */
  setAttribute(e, n) {
    this.doc !== null ? Ot(this.doc, (i) => {
      fv(i, this, e, n);
    }) : this._prelimAttrs.set(e, n);
  }
  /**
   * Returns an attribute value that belongs to the attribute name.
   *
   * @template {keyof KV & string} KEY
   *
   * @param {KEY} attributeName The attribute name that identifies the
   *                               queried value.
   * @return {KV[KEY]|undefined} The queried attribute value.
   *
   * @public
   */
  getAttribute(e) {
    return (
      /** @type {any} */
      dv(this, e)
    );
  }
  /**
   * Returns whether an attribute exists
   *
   * @param {string} attributeName The attribute name to check for existence.
   * @return {boolean} whether the attribute exists.
   *
   * @public
   */
  hasAttribute(e) {
    return (
      /** @type {any} */
      G8(this, e)
    );
  }
  /**
   * Returns all attribute name/value pairs in a JSON Object.
   *
   * @param {Snapshot} [snapshot]
   * @return {{ [Key in Extract<keyof KV,string>]?: KV[Key]}} A JSON Object that describes the attributes.
   *
   * @public
   */
  getAttributes(e) {
    return (
      /** @type {any} */
      e ? rF(this, e) : q8(this)
    );
  }
  /**
   * Creates a Dom Element that mirrors this YXmlElement.
   *
   * @param {Document} [_document=document] The document object (you must define
   *                                        this when calling this method in
   *                                        nodejs)
   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks
   *                                             are presented in the DOM
   * @param {any} [binding] You should not set this property. This is
   *                               used if DomBinding wants to create a
   *                               association to the created DOM type.
   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}
   *
   * @public
   */
  toDOM(e = document, n = {}, i) {
    const r = e.createElement(this.nodeName), o = this.getAttributes();
    for (const s in o) {
      const a = o[s];
      typeof a == "string" && r.setAttribute(s, a);
    }
    return df(this, (s) => {
      r.appendChild(s.toDOM(e, n, i));
    }), i !== void 0 && i._createAssociation(r, this), r;
  }
  /**
   * Transform the properties of this type to binary and write it to an
   * BinaryEncoder.
   *
   * This is called when this Item is sent to a remote peer.
   *
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.
   */
  _write(e) {
    e.writeTypeRef(IF), e.writeKey(this.nodeName);
  }
}
const mF = (t) => new Wn(t.readKey());
class gF extends Nh {
  /**
   * @param {YXmlElement|YXmlText|YXmlFragment} target The target on which the event is created.
   * @param {Set<string|null>} subs The set of changed attributes. `null` is included if the
   *                   child list changed.
   * @param {Transaction} transaction The transaction instance with wich the
   *                                  change was created.
   */
  constructor(e, n, i) {
    super(e, i), this.childListChanged = !1, this.attributesChanged = /* @__PURE__ */ new Set(), n.forEach((r) => {
      r === null ? this.childListChanged = !0 : this.attributesChanged.add(r);
    });
  }
}
class Ku extends _l {
  /**
   * @param {string} hookName nodeName of the Dom Node.
   */
  constructor(e) {
    super(), this.hookName = e;
  }
  /**
   * Creates an Item with the same effect as this Item (without position effect)
   */
  _copy() {
    return new Ku(this.hookName);
  }
  /**
   * Makes a copy of this data type that can be included somewhere else.
   *
   * Note that the content is only readable _after_ it has been included somewhere in the Ydoc.
   *
   * @return {YXmlHook}
   */
  clone() {
    const e = new Ku(this.hookName);
    return this.forEach((n, i) => {
      e.set(i, n);
    }), e;
  }
  /**
   * Creates a Dom Element that mirrors this YXmlElement.
   *
   * @param {Document} [_document=document] The document object (you must define
   *                                        this when calling this method in
   *                                        nodejs)
   * @param {Object.<string, any>} [hooks] Optional property to customize how hooks
   *                                             are presented in the DOM
   * @param {any} [binding] You should not set this property. This is
   *                               used if DomBinding wants to create a
   *                               association to the created DOM type
   * @return {Element} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}
   *
   * @public
   */
  toDOM(e = document, n = {}, i) {
    const r = n[this.hookName];
    let o;
    return r !== void 0 ? o = r.createDom(this) : o = document.createElement(this.hookName), o.setAttribute("data-yjs-hook", this.hookName), i !== void 0 && i._createAssociation(o, this), o;
  }
  /**
   * Transform the properties of this type to binary and write it to an
   * BinaryEncoder.
   *
   * This is called when this Item is sent to a remote peer.
   *
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.
   */
  _write(e) {
    e.writeTypeRef(DF), e.writeKey(this.hookName);
  }
}
const yF = (t) => new Ku(t.readKey());
class ui extends bs {
  /**
   * @type {YXmlElement|YXmlText|null}
   */
  get nextSibling() {
    const e = this._item ? this._item.next : null;
    return e ? (
      /** @type {YXmlElement|YXmlText} */
      /** @type {ContentType} */
      e.content.type
    ) : null;
  }
  /**
   * @type {YXmlElement|YXmlText|null}
   */
  get prevSibling() {
    const e = this._item ? this._item.prev : null;
    return e ? (
      /** @type {YXmlElement|YXmlText} */
      /** @type {ContentType} */
      e.content.type
    ) : null;
  }
  _copy() {
    return new ui();
  }
  /**
   * Makes a copy of this data type that can be included somewhere else.
   *
   * Note that the content is only readable _after_ it has been included somewhere in the Ydoc.
   *
   * @return {YXmlText}
   */
  clone() {
    const e = new ui();
    return e.applyDelta(this.toDelta()), e;
  }
  /**
   * Creates a Dom Element that mirrors this YXmlText.
   *
   * @param {Document} [_document=document] The document object (you must define
   *                                        this when calling this method in
   *                                        nodejs)
   * @param {Object<string, any>} [hooks] Optional property to customize how hooks
   *                                             are presented in the DOM
   * @param {any} [binding] You should not set this property. This is
   *                               used if DomBinding wants to create a
   *                               association to the created DOM type.
   * @return {Text} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}
   *
   * @public
   */
  toDOM(e = document, n, i) {
    const r = e.createTextNode(this.toString());
    return i !== void 0 && i._createAssociation(r, this), r;
  }
  toString() {
    return this.toDelta().map((e) => {
      const n = [];
      for (const r in e.attributes) {
        const o = [];
        for (const s in e.attributes[r])
          o.push({ key: s, value: e.attributes[r][s] });
        o.sort((s, a) => s.key < a.key ? -1 : 1), n.push({ nodeName: r, attrs: o });
      }
      n.sort((r, o) => r.nodeName < o.nodeName ? -1 : 1);
      let i = "";
      for (let r = 0; r < n.length; r++) {
        const o = n[r];
        i += `<${o.nodeName}`;
        for (let s = 0; s < o.attrs.length; s++) {
          const a = o.attrs[s];
          i += ` ${a.key}="${a.value}"`;
        }
        i += ">";
      }
      i += e.insert;
      for (let r = n.length - 1; r >= 0; r--)
        i += `</${n[r].nodeName}>`;
      return i;
    }).join("");
  }
  /**
   * @return {string}
   */
  toJSON() {
    return this.toString();
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   */
  _write(e) {
    e.writeTypeRef(PF);
  }
}
const vF = (t) => new ui();
class uv {
  /**
   * @param {ID} id
   * @param {number} length
   */
  constructor(e, n) {
    this.id = e, this.length = n;
  }
  /**
   * @type {boolean}
   */
  get deleted() {
    throw tr();
  }
  /**
   * Merge this struct with the item to the right.
   * This method is already assuming that `this.id.clock + this.length === this.id.clock`.
   * Also this method does *not* remove right from StructStore!
   * @param {AbstractStruct} right
   * @return {boolean} wether this merged with right
   */
  mergeWith(e) {
    return !1;
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.
   * @param {number} offset
   * @param {number} encodingRef
   */
  write(e, n, i) {
    throw tr();
  }
  /**
   * @param {Transaction} transaction
   * @param {number} offset
   */
  integrate(e, n) {
    throw tr();
  }
}
const bF = 0;
class Ni extends uv {
  get deleted() {
    return !0;
  }
  delete() {
  }
  /**
   * @param {GC} right
   * @return {boolean}
   */
  mergeWith(e) {
    return this.constructor !== e.constructor ? !1 : (this.length += e.length, !0);
  }
  /**
   * @param {Transaction} transaction
   * @param {number} offset
   */
  integrate(e, n) {
    n > 0 && (this.id.clock += n, this.length -= n), O8(e.doc.store, this);
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   * @param {number} offset
   */
  write(e, n) {
    e.writeInfo(bF), e.writeLen(this.length - n);
  }
  /**
   * @param {Transaction} transaction
   * @param {StructStore} store
   * @return {null | number}
   */
  getMissing(e, n) {
    return null;
  }
}
class Nf {
  /**
   * @param {Uint8Array} content
   */
  constructor(e) {
    this.content = e;
  }
  /**
   * @return {number}
   */
  getLength() {
    return 1;
  }
  /**
   * @return {Array<any>}
   */
  getContent() {
    return [this.content];
  }
  /**
   * @return {boolean}
   */
  isCountable() {
    return !0;
  }
  /**
   * @return {ContentBinary}
   */
  copy() {
    return new Nf(this.content);
  }
  /**
   * @param {number} offset
   * @return {ContentBinary}
   */
  splice(e) {
    throw tr();
  }
  /**
   * @param {ContentBinary} right
   * @return {boolean}
   */
  mergeWith(e) {
    return !1;
  }
  /**
   * @param {Transaction} transaction
   * @param {Item} item
   */
  integrate(e, n) {
  }
  /**
   * @param {Transaction} transaction
   */
  delete(e) {
  }
  /**
   * @param {StructStore} store
   */
  gc(e) {
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   * @param {number} offset
   */
  write(e, n) {
    e.writeBuf(this.content);
  }
  /**
   * @return {number}
   */
  getRef() {
    return 3;
  }
}
const kF = (t) => new Nf(t.readBuf());
class uf {
  /**
   * @param {number} len
   */
  constructor(e) {
    this.len = e;
  }
  /**
   * @return {number}
   */
  getLength() {
    return this.len;
  }
  /**
   * @return {Array<any>}
   */
  getContent() {
    return [];
  }
  /**
   * @return {boolean}
   */
  isCountable() {
    return !1;
  }
  /**
   * @return {ContentDeleted}
   */
  copy() {
    return new uf(this.len);
  }
  /**
   * @param {number} offset
   * @return {ContentDeleted}
   */
  splice(e) {
    const n = new uf(this.len - e);
    return this.len = e, n;
  }
  /**
   * @param {ContentDeleted} right
   * @return {boolean}
   */
  mergeWith(e) {
    return this.len += e.len, !0;
  }
  /**
   * @param {Transaction} transaction
   * @param {Item} item
   */
  integrate(e, n) {
    sf(e.deleteSet, n.id.client, n.id.clock, this.len), n.markDeleted();
  }
  /**
   * @param {Transaction} transaction
   */
  delete(e) {
  }
  /**
   * @param {StructStore} store
   */
  gc(e) {
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   * @param {number} offset
   */
  write(e, n) {
    e.writeLen(this.len - n);
  }
  /**
   * @return {number}
   */
  getRef() {
    return 1;
  }
}
const wF = (t) => new uf(t.readLen()), Q8 = (t, e) => new ba({ guid: t, ...e, shouldLoad: e.shouldLoad || e.autoLoad || !1 });
class Of {
  /**
   * @param {Doc} doc
   */
  constructor(e) {
    e._item && console.error("This document was already integrated as a sub-document. You should create a second instance instead with the same guid."), this.doc = e;
    const n = {};
    this.opts = n, e.gc || (n.gc = !1), e.autoLoad && (n.autoLoad = !0), e.meta !== null && (n.meta = e.meta);
  }
  /**
   * @return {number}
   */
  getLength() {
    return 1;
  }
  /**
   * @return {Array<any>}
   */
  getContent() {
    return [this.doc];
  }
  /**
   * @return {boolean}
   */
  isCountable() {
    return !0;
  }
  /**
   * @return {ContentDoc}
   */
  copy() {
    return new Of(Q8(this.doc.guid, this.opts));
  }
  /**
   * @param {number} offset
   * @return {ContentDoc}
   */
  splice(e) {
    throw tr();
  }
  /**
   * @param {ContentDoc} right
   * @return {boolean}
   */
  mergeWith(e) {
    return !1;
  }
  /**
   * @param {Transaction} transaction
   * @param {Item} item
   */
  integrate(e, n) {
    this.doc._item = n, e.subdocsAdded.add(this.doc), this.doc.shouldLoad && e.subdocsLoaded.add(this.doc);
  }
  /**
   * @param {Transaction} transaction
   */
  delete(e) {
    e.subdocsAdded.has(this.doc) ? e.subdocsAdded.delete(this.doc) : e.subdocsRemoved.add(this.doc);
  }
  /**
   * @param {StructStore} store
   */
  gc(e) {
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   * @param {number} offset
   */
  write(e, n) {
    e.writeString(this.doc.guid), e.writeAny(this.opts);
  }
  /**
   * @return {number}
   */
  getRef() {
    return 9;
  }
}
const _F = (t) => new Of(Q8(t.readString(), t.readAny()));
class ka {
  /**
   * @param {Object} embed
   */
  constructor(e) {
    this.embed = e;
  }
  /**
   * @return {number}
   */
  getLength() {
    return 1;
  }
  /**
   * @return {Array<any>}
   */
  getContent() {
    return [this.embed];
  }
  /**
   * @return {boolean}
   */
  isCountable() {
    return !0;
  }
  /**
   * @return {ContentEmbed}
   */
  copy() {
    return new ka(this.embed);
  }
  /**
   * @param {number} offset
   * @return {ContentEmbed}
   */
  splice(e) {
    throw tr();
  }
  /**
   * @param {ContentEmbed} right
   * @return {boolean}
   */
  mergeWith(e) {
    return !1;
  }
  /**
   * @param {Transaction} transaction
   * @param {Item} item
   */
  integrate(e, n) {
  }
  /**
   * @param {Transaction} transaction
   */
  delete(e) {
  }
  /**
   * @param {StructStore} store
   */
  gc(e) {
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   * @param {number} offset
   */
  write(e, n) {
    e.writeJSON(this.embed);
  }
  /**
   * @return {number}
   */
  getRef() {
    return 5;
  }
}
const EF = (t) => new ka(t.readJSON());
class un {
  /**
   * @param {string} key
   * @param {Object} value
   */
  constructor(e, n) {
    this.key = e, this.value = n;
  }
  /**
   * @return {number}
   */
  getLength() {
    return 1;
  }
  /**
   * @return {Array<any>}
   */
  getContent() {
    return [];
  }
  /**
   * @return {boolean}
   */
  isCountable() {
    return !1;
  }
  /**
   * @return {ContentFormat}
   */
  copy() {
    return new un(this.key, this.value);
  }
  /**
   * @param {number} _offset
   * @return {ContentFormat}
   */
  splice(e) {
    throw tr();
  }
  /**
   * @param {ContentFormat} _right
   * @return {boolean}
   */
  mergeWith(e) {
    return !1;
  }
  /**
   * @param {Transaction} _transaction
   * @param {Item} item
   */
  integrate(e, n) {
    const i = (
      /** @type {YText} */
      n.parent
    );
    i._searchMarker = null, i._hasFormatting = !0;
  }
  /**
   * @param {Transaction} transaction
   */
  delete(e) {
  }
  /**
   * @param {StructStore} store
   */
  gc(e) {
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   * @param {number} offset
   */
  write(e, n) {
    e.writeKey(this.key), e.writeJSON(this.value);
  }
  /**
   * @return {number}
   */
  getRef() {
    return 6;
  }
}
const TF = (t) => new un(t.readKey(), t.readJSON());
class Yu {
  /**
   * @param {Array<any>} arr
   */
  constructor(e) {
    this.arr = e;
  }
  /**
   * @return {number}
   */
  getLength() {
    return this.arr.length;
  }
  /**
   * @return {Array<any>}
   */
  getContent() {
    return this.arr;
  }
  /**
   * @return {boolean}
   */
  isCountable() {
    return !0;
  }
  /**
   * @return {ContentJSON}
   */
  copy() {
    return new Yu(this.arr);
  }
  /**
   * @param {number} offset
   * @return {ContentJSON}
   */
  splice(e) {
    const n = new Yu(this.arr.slice(e));
    return this.arr = this.arr.slice(0, e), n;
  }
  /**
   * @param {ContentJSON} right
   * @return {boolean}
   */
  mergeWith(e) {
    return this.arr = this.arr.concat(e.arr), !0;
  }
  /**
   * @param {Transaction} transaction
   * @param {Item} item
   */
  integrate(e, n) {
  }
  /**
   * @param {Transaction} transaction
   */
  delete(e) {
  }
  /**
   * @param {StructStore} store
   */
  gc(e) {
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   * @param {number} offset
   */
  write(e, n) {
    const i = this.arr.length;
    e.writeLen(i - n);
    for (let r = n; r < i; r++) {
      const o = this.arr[r];
      e.writeString(o === void 0 ? "undefined" : JSON.stringify(o));
    }
  }
  /**
   * @return {number}
   */
  getRef() {
    return 2;
  }
}
const CF = (t) => {
  const e = t.readLen(), n = [];
  for (let i = 0; i < e; i++) {
    const r = t.readString();
    r === "undefined" ? n.push(void 0) : n.push(JSON.parse(r));
  }
  return new Yu(n);
}, SF = of("node_env") === "development";
class ha {
  /**
   * @param {Array<any>} arr
   */
  constructor(e) {
    this.arr = e, SF && o8(e);
  }
  /**
   * @return {number}
   */
  getLength() {
    return this.arr.length;
  }
  /**
   * @return {Array<any>}
   */
  getContent() {
    return this.arr;
  }
  /**
   * @return {boolean}
   */
  isCountable() {
    return !0;
  }
  /**
   * @return {ContentAny}
   */
  copy() {
    return new ha(this.arr);
  }
  /**
   * @param {number} offset
   * @return {ContentAny}
   */
  splice(e) {
    const n = new ha(this.arr.slice(e));
    return this.arr = this.arr.slice(0, e), n;
  }
  /**
   * @param {ContentAny} right
   * @return {boolean}
   */
  mergeWith(e) {
    return this.arr = this.arr.concat(e.arr), !0;
  }
  /**
   * @param {Transaction} transaction
   * @param {Item} item
   */
  integrate(e, n) {
  }
  /**
   * @param {Transaction} transaction
   */
  delete(e) {
  }
  /**
   * @param {StructStore} store
   */
  gc(e) {
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   * @param {number} offset
   */
  write(e, n) {
    const i = this.arr.length;
    e.writeLen(i - n);
    for (let r = n; r < i; r++) {
      const o = this.arr[r];
      e.writeAny(o);
    }
  }
  /**
   * @return {number}
   */
  getRef() {
    return 8;
  }
}
const xF = (t) => {
  const e = t.readLen(), n = [];
  for (let i = 0; i < e; i++)
    n.push(t.readAny());
  return new ha(n);
};
class ar {
  /**
   * @param {string} str
   */
  constructor(e) {
    this.str = e;
  }
  /**
   * @return {number}
   */
  getLength() {
    return this.str.length;
  }
  /**
   * @return {Array<any>}
   */
  getContent() {
    return this.str.split("");
  }
  /**
   * @return {boolean}
   */
  isCountable() {
    return !0;
  }
  /**
   * @return {ContentString}
   */
  copy() {
    return new ar(this.str);
  }
  /**
   * @param {number} offset
   * @return {ContentString}
   */
  splice(e) {
    const n = new ar(this.str.slice(e));
    this.str = this.str.slice(0, e);
    const i = this.str.charCodeAt(e - 1);
    return i >= 55296 && i <= 56319 && (this.str = this.str.slice(0, e - 1) + "�", n.str = "�" + n.str.slice(1)), n;
  }
  /**
   * @param {ContentString} right
   * @return {boolean}
   */
  mergeWith(e) {
    return this.str += e.str, !0;
  }
  /**
   * @param {Transaction} transaction
   * @param {Item} item
   */
  integrate(e, n) {
  }
  /**
   * @param {Transaction} transaction
   */
  delete(e) {
  }
  /**
   * @param {StructStore} store
   */
  gc(e) {
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   * @param {number} offset
   */
  write(e, n) {
    e.writeString(n === 0 ? this.str : this.str.slice(n));
  }
  /**
   * @return {number}
   */
  getRef() {
    return 4;
  }
}
const AF = (t) => new ar(t.readString()), MF = [
  sF,
  lF,
  hF,
  mF,
  pF,
  yF,
  vF
], NF = 0, OF = 1, RF = 2, IF = 3, LF = 4, DF = 5, PF = 6;
class dr {
  /**
   * @param {AbstractType<any>} type
   */
  constructor(e) {
    this.type = e;
  }
  /**
   * @return {number}
   */
  getLength() {
    return 1;
  }
  /**
   * @return {Array<any>}
   */
  getContent() {
    return [this.type];
  }
  /**
   * @return {boolean}
   */
  isCountable() {
    return !0;
  }
  /**
   * @return {ContentType}
   */
  copy() {
    return new dr(this.type._copy());
  }
  /**
   * @param {number} offset
   * @return {ContentType}
   */
  splice(e) {
    throw tr();
  }
  /**
   * @param {ContentType} right
   * @return {boolean}
   */
  mergeWith(e) {
    return !1;
  }
  /**
   * @param {Transaction} transaction
   * @param {Item} item
   */
  integrate(e, n) {
    this.type._integrate(e.doc, n);
  }
  /**
   * @param {Transaction} transaction
   */
  delete(e) {
    let n = this.type._start;
    for (; n !== null; )
      n.deleted ? n.id.clock < (e.beforeState.get(n.id.client) || 0) && e._mergeStructs.push(n) : n.delete(e), n = n.right;
    this.type._map.forEach((i) => {
      i.deleted ? i.id.clock < (e.beforeState.get(i.id.client) || 0) && e._mergeStructs.push(i) : i.delete(e);
    }), e.changed.delete(this.type);
  }
  /**
   * @param {StructStore} store
   */
  gc(e) {
    let n = this.type._start;
    for (; n !== null; )
      n.gc(e, !0), n = n.right;
    this.type._start = null, this.type._map.forEach(
      /** @param {Item | null} item */
      (i) => {
        for (; i !== null; )
          i.gc(e, !0), i = i.left;
      }
    ), this.type._map = /* @__PURE__ */ new Map();
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   * @param {number} offset
   */
  write(e, n) {
    this.type._write(e);
  }
  /**
   * @return {number}
   */
  getRef() {
    return 7;
  }
}
const FF = (t) => new dr(MF[t.readTypeRef()](t)), dg = (t, e) => {
  let n = e, i = 0, r;
  do
    i > 0 && (n = Ze(n.client, n.clock + i)), r = il(t, n), i = n.clock - r.id.clock, n = r.redone;
  while (n !== null && r instanceof Bt);
  return {
    item: r,
    diff: i
  };
}, hv = (t, e) => {
  for (; t !== null && t.keep !== e; )
    t.keep = e, t = /** @type {AbstractType<any>} */
    t.parent._item;
}, Ju = (t, e, n) => {
  const { client: i, clock: r } = e.id, o = new Bt(
    Ze(i, r + n),
    e,
    Ze(i, r + n - 1),
    e.right,
    e.rightOrigin,
    e.parent,
    e.parentSub,
    e.content.splice(n)
  );
  return e.deleted && o.markDeleted(), e.keep && (o.keep = !0), e.redone !== null && (o.redone = Ze(e.redone.client, e.redone.clock + n)), e.right = o, o.right !== null && (o.right.left = o), t._mergeStructs.push(o), o.parentSub !== null && o.right === null && o.parent._map.set(o.parentSub, o), e.length = n, o;
}, hw = (t, e) => sD(
  t,
  /** @param {StackItem} s */
  (n) => Rl(n.deletions, e)
), Z8 = (t, e, n, i, r, o) => {
  const s = t.doc, a = s.store, l = s.clientID, c = e.redone;
  if (c !== null)
    return ii(t, c);
  let f = (
    /** @type {AbstractType<any>} */
    e.parent._item
  ), d = null, u;
  if (f !== null && f.deleted === !0) {
    if (f.redone === null && (!n.has(f) || Z8(t, f, n, i, r, o) === null))
      return null;
    for (; f.redone !== null; )
      f = ii(t, f.redone);
  }
  const h = f === null ? (
    /** @type {AbstractType<any>} */
    e.parent
  ) : (
    /** @type {ContentType} */
    f.content.type
  );
  if (e.parentSub === null) {
    for (d = e.left, u = e; d !== null; ) {
      let y = d;
      for (; y !== null && /** @type {AbstractType<any>} */
      y.parent._item !== f; )
        y = y.redone === null ? null : ii(t, y.redone);
      if (y !== null && /** @type {AbstractType<any>} */
      y.parent._item === f) {
        d = y;
        break;
      }
      d = d.left;
    }
    for (; u !== null; ) {
      let y = u;
      for (; y !== null && /** @type {AbstractType<any>} */
      y.parent._item !== f; )
        y = y.redone === null ? null : ii(t, y.redone);
      if (y !== null && /** @type {AbstractType<any>} */
      y.parent._item === f) {
        u = y;
        break;
      }
      u = u.right;
    }
  } else if (u = null, e.right && !r) {
    for (d = e; d !== null && d.right !== null && (d.right.redone || Rl(i, d.right.id) || hw(o.undoStack, d.right.id) || hw(o.redoStack, d.right.id)); )
      for (d = d.right; d.redone; ) d = ii(t, d.redone);
    if (d && d.right !== null)
      return null;
  } else
    d = h._map.get(e.parentSub) || null;
  const p = rn(a, l), m = Ze(l, p), v = new Bt(
    m,
    d,
    d && d.lastId,
    u,
    u && u.id,
    h,
    e.parentSub,
    e.content.copy()
  );
  return e.redone = m, hv(v, !0), v.integrate(t, 0), v;
};
let Bt = class ug extends uv {
  /**
   * @param {ID} id
   * @param {Item | null} left
   * @param {ID | null} origin
   * @param {Item | null} right
   * @param {ID | null} rightOrigin
   * @param {AbstractType<any>|ID|null} parent Is a type if integrated, is null if it is possible to copy parent from left or right, is ID before integration to search for it.
   * @param {string | null} parentSub
   * @param {AbstractContent} content
   */
  constructor(e, n, i, r, o, s, a, l) {
    super(e, l.getLength()), this.origin = i, this.left = n, this.right = r, this.rightOrigin = o, this.parent = s, this.parentSub = a, this.redone = null, this.content = l, this.info = this.content.isCountable() ? $2 : 0;
  }
  /**
   * This is used to mark the item as an indexed fast-search marker
   *
   * @type {boolean}
   */
  set marker(e) {
    (this.info & Zp) > 0 !== e && (this.info ^= Zp);
  }
  get marker() {
    return (this.info & Zp) > 0;
  }
  /**
   * If true, do not garbage collect this Item.
   */
  get keep() {
    return (this.info & H2) > 0;
  }
  set keep(e) {
    this.keep !== e && (this.info ^= H2);
  }
  get countable() {
    return (this.info & $2) > 0;
  }
  /**
   * Whether this item was deleted or not.
   * @type {Boolean}
   */
  get deleted() {
    return (this.info & Qp) > 0;
  }
  set deleted(e) {
    this.deleted !== e && (this.info ^= Qp);
  }
  markDeleted() {
    this.info |= Qp;
  }
  /**
   * Return the creator clientID of the missing op or define missing items and return null.
   *
   * @param {Transaction} transaction
   * @param {StructStore} store
   * @return {null | number}
   */
  getMissing(e, n) {
    if (this.origin && this.origin.client !== this.id.client && this.origin.clock >= rn(n, this.origin.client))
      return this.origin.client;
    if (this.rightOrigin && this.rightOrigin.client !== this.id.client && this.rightOrigin.clock >= rn(n, this.rightOrigin.client))
      return this.rightOrigin.client;
    if (this.parent && this.parent.constructor === nl && this.id.client !== this.parent.client && this.parent.clock >= rn(n, this.parent.client))
      return this.parent.client;
    if (this.origin && (this.left = rw(e, n, this.origin), this.origin = this.left.lastId), this.rightOrigin && (this.right = ii(e, this.rightOrigin), this.rightOrigin = this.right.id), this.left && this.left.constructor === Ni || this.right && this.right.constructor === Ni)
      this.parent = null;
    else if (!this.parent)
      this.left && this.left.constructor === ug && (this.parent = this.left.parent, this.parentSub = this.left.parentSub), this.right && this.right.constructor === ug && (this.parent = this.right.parent, this.parentSub = this.right.parentSub);
    else if (this.parent.constructor === nl) {
      const i = il(n, this.parent);
      i.constructor === Ni ? this.parent = null : this.parent = /** @type {ContentType} */
      i.content.type;
    }
    return null;
  }
  /**
   * @param {Transaction} transaction
   * @param {number} offset
   */
  integrate(e, n) {
    if (n > 0 && (this.id.clock += n, this.left = rw(e, e.doc.store, Ze(this.id.client, this.id.clock - 1)), this.origin = this.left.lastId, this.content = this.content.splice(n), this.length -= n), this.parent) {
      if (!this.left && (!this.right || this.right.left !== null) || this.left && this.left.right !== this.right) {
        let i = this.left, r;
        if (i !== null)
          r = i.right;
        else if (this.parentSub !== null)
          for (r = /** @type {AbstractType<any>} */
          this.parent._map.get(this.parentSub) || null; r !== null && r.left !== null; )
            r = r.left;
        else
          r = /** @type {AbstractType<any>} */
          this.parent._start;
        const o = /* @__PURE__ */ new Set(), s = /* @__PURE__ */ new Set();
        for (; r !== null && r !== this.right; ) {
          if (s.add(r), o.add(r), qa(this.origin, r.origin)) {
            if (r.id.client < this.id.client)
              i = r, o.clear();
            else if (qa(this.rightOrigin, r.rightOrigin))
              break;
          } else if (r.origin !== null && s.has(il(e.doc.store, r.origin)))
            o.has(il(e.doc.store, r.origin)) || (i = r, o.clear());
          else
            break;
          r = r.right;
        }
        this.left = i;
      }
      if (this.left !== null) {
        const i = this.left.right;
        this.right = i, this.left.right = this;
      } else {
        let i;
        if (this.parentSub !== null)
          for (i = /** @type {AbstractType<any>} */
          this.parent._map.get(this.parentSub) || null; i !== null && i.left !== null; )
            i = i.left;
        else
          i = /** @type {AbstractType<any>} */
          this.parent._start, this.parent._start = this;
        this.right = i;
      }
      this.right !== null ? this.right.left = this : this.parentSub !== null && (this.parent._map.set(this.parentSub, this), this.left !== null && this.left.delete(e)), this.parentSub === null && this.countable && !this.deleted && (this.parent._length += this.length), O8(e.doc.store, this), this.content.integrate(e, this), sw(
        e,
        /** @type {AbstractType<any>} */
        this.parent,
        this.parentSub
      ), /** @type {AbstractType<any>} */
      (this.parent._item !== null && /** @type {AbstractType<any>} */
      this.parent._item.deleted || this.parentSub !== null && this.right !== null) && this.delete(e);
    } else
      new Ni(this.id, this.length).integrate(e, 0);
  }
  /**
   * Returns the next non-deleted item
   */
  get next() {
    let e = this.right;
    for (; e !== null && e.deleted; )
      e = e.right;
    return e;
  }
  /**
   * Returns the previous non-deleted item
   */
  get prev() {
    let e = this.left;
    for (; e !== null && e.deleted; )
      e = e.left;
    return e;
  }
  /**
   * Computes the last content address of this Item.
   */
  get lastId() {
    return this.length === 1 ? this.id : Ze(this.id.client, this.id.clock + this.length - 1);
  }
  /**
   * Try to merge two items
   *
   * @param {Item} right
   * @return {boolean}
   */
  mergeWith(e) {
    if (this.constructor === e.constructor && qa(e.origin, this.lastId) && this.right === e && qa(this.rightOrigin, e.rightOrigin) && this.id.client === e.id.client && this.id.clock + this.length === e.id.clock && this.deleted === e.deleted && this.redone === null && e.redone === null && this.content.constructor === e.content.constructor && this.content.mergeWith(e.content)) {
      const n = (
        /** @type {AbstractType<any>} */
        this.parent._searchMarker
      );
      return n && n.forEach((i) => {
        i.p === e && (i.p = this, !this.deleted && this.countable && (i.index -= this.length));
      }), e.keep && (this.keep = !0), this.right = e.right, this.right !== null && (this.right.left = this), this.length += e.length, !0;
    }
    return !1;
  }
  /**
   * Mark this Item as deleted.
   *
   * @param {Transaction} transaction
   */
  delete(e) {
    if (!this.deleted) {
      const n = (
        /** @type {AbstractType<any>} */
        this.parent
      );
      this.countable && this.parentSub === null && (n._length -= this.length), this.markDeleted(), sf(e.deleteSet, this.id.client, this.id.clock, this.length), sw(e, n, this.parentSub), this.content.delete(e);
    }
  }
  /**
   * @param {StructStore} store
   * @param {boolean} parentGCd
   */
  gc(e, n) {
    if (!this.deleted)
      throw yi();
    this.content.gc(e), n ? jP(e, this, new Ni(this.id, this.length)) : this.content = new uf(this.length);
  }
  /**
   * Transform the properties of this type to binary and write it to an
   * BinaryEncoder.
   *
   * This is called when this Item is sent to a remote peer.
   *
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.
   * @param {number} offset
   */
  write(e, n) {
    const i = n > 0 ? Ze(this.id.client, this.id.clock + n - 1) : this.origin, r = this.rightOrigin, o = this.parentSub, s = this.content.getRef() & Ch | (i === null ? 0 : di) | // origin is defined
    (r === null ? 0 : fo) | // right origin is defined
    (o === null ? 0 : tf);
    if (e.writeInfo(s), i !== null && e.writeLeftID(i), r !== null && e.writeRightID(r), i === null && r === null) {
      const a = (
        /** @type {AbstractType<any>} */
        this.parent
      );
      if (a._item !== void 0) {
        const l = a._item;
        if (l === null) {
          const c = af(a);
          e.writeParentInfo(!0), e.writeString(c);
        } else
          e.writeParentInfo(!1), e.writeLeftID(l.id);
      } else a.constructor === String ? (e.writeParentInfo(!0), e.writeString(a)) : a.constructor === nl ? (e.writeParentInfo(!1), e.writeLeftID(a)) : yi();
      o !== null && e.writeString(o);
    }
    this.content.write(e, n);
  }
};
const eE = (t, e) => BF[e & Ch](t), BF = [
  () => {
    yi();
  },
  // GC is not ItemContent
  wF,
  // 1
  CF,
  // 2
  kF,
  // 3
  AF,
  // 4
  EF,
  // 5
  TF,
  // 6
  FF,
  // 7
  xF,
  // 8
  _F,
  // 9
  () => {
    yi();
  }
  // 10 - Skip is not ItemContent
], HF = 10;
class Oi extends uv {
  get deleted() {
    return !0;
  }
  delete() {
  }
  /**
   * @param {Skip} right
   * @return {boolean}
   */
  mergeWith(e) {
    return this.constructor !== e.constructor ? !1 : (this.length += e.length, !0);
  }
  /**
   * @param {Transaction} transaction
   * @param {number} offset
   */
  integrate(e, n) {
    yi();
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   * @param {number} offset
   */
  write(e, n) {
    e.writeInfo(HF), Fe(e.restEncoder, this.length - n);
  }
  /**
   * @param {Transaction} transaction
   * @param {StructStore} store
   * @return {null | number}
   */
  getMissing(e, n) {
    return null;
  }
}
const tE = (
  /** @type {any} */
  typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : {}
), nE = "__ $YJS$ __";
tE[nE] === !0 && console.error("Yjs was already imported. This breaks constructor checks and will lead to issues! - https://github.com/yjs/yjs/issues/438");
tE[nE] = !0;
const lm = 3e4;
class $F extends K6 {
  /**
   * @param {Y.Doc} doc
   */
  constructor(e) {
    super(), this.doc = e, this.clientID = e.clientID, this.states = /* @__PURE__ */ new Map(), this.meta = /* @__PURE__ */ new Map(), this._checkInterval = /** @type {any} */
    setInterval(() => {
      const n = Pr();
      this.getLocalState() !== null && lm / 2 <= n - /** @type {{lastUpdated:number}} */
      this.meta.get(this.clientID).lastUpdated && this.setLocalState(this.getLocalState());
      const i = [];
      this.meta.forEach((r, o) => {
        o !== this.clientID && lm <= n - r.lastUpdated && this.states.has(o) && i.push(o);
      }), i.length > 0 && hg(this, i, "timeout");
    }, sr(lm / 10)), e.on("destroy", () => {
      this.destroy();
    }), this.setLocalState({});
  }
  destroy() {
    this.emit("destroy", [this]), this.setLocalState(null), super.destroy(), clearInterval(this._checkInterval);
  }
  /**
   * @return {Object<string,any>|null}
   */
  getLocalState() {
    return this.states.get(this.clientID) || null;
  }
  /**
   * @param {Object<string,any>|null} state
   */
  setLocalState(e) {
    const n = this.clientID, i = this.meta.get(n), r = i === void 0 ? 0 : i.clock + 1, o = this.states.get(n);
    e === null ? this.states.delete(n) : this.states.set(n, e), this.meta.set(n, {
      clock: r,
      lastUpdated: Pr()
    });
    const s = [], a = [], l = [], c = [];
    e === null ? c.push(n) : o == null ? e != null && s.push(n) : (a.push(n), Oc(o, e) || l.push(n)), (s.length > 0 || l.length > 0 || c.length > 0) && this.emit("change", [{ added: s, updated: l, removed: c }, "local"]), this.emit("update", [{ added: s, updated: a, removed: c }, "local"]);
  }
  /**
   * @param {string} field
   * @param {any} value
   */
  setLocalStateField(e, n) {
    const i = this.getLocalState();
    i !== null && this.setLocalState({
      ...i,
      [e]: n
    });
  }
  /**
   * @return {Map<number,Object<string,any>>}
   */
  getStates() {
    return this.states;
  }
}
const hg = (t, e, n) => {
  const i = [];
  for (let r = 0; r < e.length; r++) {
    const o = e[r];
    if (t.states.has(o)) {
      if (t.states.delete(o), o === t.clientID) {
        const s = (
          /** @type {MetaClientState} */
          t.meta.get(o)
        );
        t.meta.set(o, {
          clock: s.clock + 1,
          lastUpdated: Pr()
        });
      }
      i.push(o);
    }
  }
  i.length > 0 && (t.emit("change", [{ added: [], updated: [], removed: i }, n]), t.emit("update", [{ added: [], updated: [], removed: i }, n]));
}, Xu = (t, e, n = t.states) => {
  const i = e.length, r = kn();
  Fe(r, i);
  for (let o = 0; o < i; o++) {
    const s = e[o], a = n.get(s) || null, l = (
      /** @type {MetaClientState} */
      t.meta.get(s).clock
    );
    Fe(r, s), Fe(r, l), xr(r, JSON.stringify(a));
  }
  return qt(r);
}, jF = (t, e, n) => {
  const i = zr(e), r = Pr(), o = [], s = [], a = [], l = [], c = Qe(i);
  for (let f = 0; f < c; f++) {
    const d = Qe(i);
    let u = Qe(i);
    const h = JSON.parse(uo(i)), p = t.meta.get(d), m = t.states.get(d), v = p === void 0 ? 0 : p.clock;
    (v < u || v === u && h === null && t.states.has(d)) && (h === null ? d === t.clientID && t.getLocalState() != null ? u++ : t.states.delete(d) : t.states.set(d, h), t.meta.set(d, {
      clock: u,
      lastUpdated: r
    }), p === void 0 && h !== null ? o.push(d) : p !== void 0 && h === null ? l.push(d) : h !== null && (Oc(h, m) || a.push(d), s.push(d)));
  }
  (o.length > 0 || a.length > 0 || l.length > 0) && t.emit("change", [{
    added: o,
    updated: a,
    removed: l
  }, n]), (o.length > 0 || s.length > 0 || l.length > 0) && t.emit("update", [{
    added: o,
    updated: s,
    removed: l
  }, n]);
}, iE = () => {
  let t = !0;
  return (e, n) => {
    if (t) {
      t = !1;
      try {
        e();
      } finally {
        t = !0;
      }
    } else n !== void 0 && n();
  };
}, zF = /[\uD800-\uDBFF]/, UF = /[\uDC00-\uDFFF]/, VF = (t, e) => {
  let n = 0, i = 0;
  for (; n < t.length && n < e.length && t[n] === e[n]; )
    n++;
  for (n > 0 && zF.test(t[n - 1]) && n--; i + n < t.length && i + n < e.length && t[t.length - i - 1] === e[e.length - i - 1]; )
    i++;
  return i > 0 && UF.test(t[t.length - i]) && i--, {
    index: n,
    remove: t.length - n - i,
    insert: e.slice(n, e.length - i)
  };
}, WF = VF, Gt = new Ct("y-sync"), ho = new Ct("y-undo"), hd = new Ct("yjs-cursor"), Qu = (t, e) => e === void 0 ? !t.deleted : e.sv.has(t.id.client) && /** @type {number} */
e.sv.get(t.id.client) > t.id.clock && !Rl(e.ds, t.id), qF = [{ light: "#ecd44433", dark: "#ecd444" }], GF = (t, e, n) => {
  if (!t.has(n)) {
    if (t.size < e.length) {
      const i = vo();
      t.forEach((r) => i.add(r)), e = e.filter((r) => !i.has(r));
    }
    t.set(n, FD(e));
  }
  return (
    /** @type {ColorDef} */
    t.get(n)
  );
}, KF = (t, {
  colors: e = qF,
  colorMapping: n = /* @__PURE__ */ new Map(),
  permanentUserData: i = null,
  onFirstRender: r = () => {
  },
  mapping: o
} = {}) => {
  let s = !1;
  const a = new JF(t, o), l = new mt({
    props: {
      editable: (c) => {
        const f = Gt.getState(c);
        return f.snapshot == null && f.prevSnapshot == null;
      }
    },
    key: Gt,
    state: {
      /**
       * @returns {any}
       */
      init: (c, f) => ({
        type: t,
        doc: t.doc,
        binding: a,
        snapshot: null,
        prevSnapshot: null,
        isChangeOrigin: !1,
        isUndoRedoOperation: !1,
        addToHistory: !0,
        colors: e,
        colorMapping: n,
        permanentUserData: i
      }),
      apply: (c, f) => {
        const d = c.getMeta(Gt);
        if (d !== void 0) {
          f = Object.assign({}, f);
          for (const u in d)
            f[u] = d[u];
        }
        return f.addToHistory = c.getMeta("addToHistory") !== !1, f.isChangeOrigin = d !== void 0 && !!d.isChangeOrigin, f.isUndoRedoOperation = d !== void 0 && !!d.isChangeOrigin && !!d.isUndoRedoOperation, a.prosemirrorView !== null && d !== void 0 && (d.snapshot != null || d.prevSnapshot != null) && Zy(0, () => {
          a.prosemirrorView != null && (d.restore == null ? a._renderSnapshot(
            d.snapshot,
            d.prevSnapshot,
            f
          ) : (a._renderSnapshot(
            d.snapshot,
            d.snapshot,
            f
          ), delete f.restore, delete f.snapshot, delete f.prevSnapshot, a.mux(() => {
            a._prosemirrorChanged(
              a.prosemirrorView.state.doc
            );
          })));
        }), f;
      }
    },
    view: (c) => (a.initView(c), o == null && a._forceRerender(), r(), {
      update: () => {
        const f = l.getState(c.state);
        if (f.snapshot == null && f.prevSnapshot == null && // If the content doesn't change initially, we don't render anything to Yjs
        // If the content was cleared by a user action, we want to catch the change and
        // represent it in Yjs
        (s || c.state.doc.content.findDiffStart(
          c.state.doc.type.createAndFill().content
        ) !== null)) {
          if (s = !0, f.addToHistory === !1 && !f.isChangeOrigin) {
            const d = ho.getState(c.state), u = d && d.undoManager;
            u && u.stopCapturing();
          }
          a.mux(() => {
            f.doc.transact((d) => {
              d.meta.set("addToHistory", f.addToHistory), a._prosemirrorChanged(c.state.doc);
            }, Gt);
          });
        }
      },
      destroy: () => {
        a.destroy();
      }
    })
  });
  return l;
}, YF = (t, e, n) => {
  if (e !== null && e.anchor !== null && e.head !== null) {
    const i = pf(
      n.doc,
      n.type,
      e.anchor,
      n.mapping
    ), r = pf(
      n.doc,
      n.type,
      e.head,
      n.mapping
    );
    i !== null && r !== null && (t = t.setSelection(ze.create(t.doc, i, r)));
  }
}, pg = (t, e) => ({
  anchor: e1(
    e.selection.anchor,
    t.type,
    t.mapping
  ),
  head: e1(
    e.selection.head,
    t.type,
    t.mapping
  )
});
class JF {
  /**
   * @param {Y.XmlFragment} yXmlFragment The bind source
   * @param {ProsemirrorMapping} mapping
   */
  constructor(e, n = /* @__PURE__ */ new Map()) {
    this.type = e, this.prosemirrorView = null, this.mux = iE(), this.mapping = n, this._observeFunction = this._typeChanged.bind(this), this.doc = e.doc, this.beforeTransactionSelection = null, this.beforeAllTransactions = () => {
      this.beforeTransactionSelection === null && this.prosemirrorView != null && (this.beforeTransactionSelection = pg(
        this,
        this.prosemirrorView.state
      ));
    }, this.afterAllTransactions = () => {
      this.beforeTransactionSelection = null;
    }, this._domSelectionInView = null;
  }
  /**
   * Create a transaction for changing the prosemirror state.
   *
   * @returns
   */
  get _tr() {
    return this.prosemirrorView.state.tr.setMeta("addToHistory", !1);
  }
  _isLocalCursorInView() {
    return this.prosemirrorView.hasFocus() ? (Qy && this._domSelectionInView === null && (Zy(0, () => {
      this._domSelectionInView = null;
    }), this._domSelectionInView = this._isDomSelectionInView()), this._domSelectionInView) : !1;
  }
  _isDomSelectionInView() {
    const e = this.prosemirrorView._root.getSelection(), n = this.prosemirrorView._root.createRange();
    n.setStart(e.anchorNode, e.anchorOffset), n.setEnd(e.focusNode, e.focusOffset), n.getClientRects().length === 0 && n.startContainer && n.collapsed && n.selectNodeContents(n.startContainer);
    const r = n.getBoundingClientRect(), o = fP.documentElement;
    return r.bottom >= 0 && r.right >= 0 && r.left <= (window.innerWidth || o.clientWidth || 0) && r.top <= (window.innerHeight || o.clientHeight || 0);
  }
  /**
   * @param {Y.Snapshot} snapshot
   * @param {Y.Snapshot} prevSnapshot
   */
  renderSnapshot(e, n) {
    n || (n = M8(b8(), /* @__PURE__ */ new Map())), this.prosemirrorView.dispatch(
      this._tr.setMeta(Gt, { snapshot: e, prevSnapshot: n })
    );
  }
  unrenderSnapshot() {
    this.mapping.clear(), this.mux(() => {
      const e = this.type.toArray().map(
        (i) => cu(
          /** @type {Y.XmlElement} */
          i,
          this.prosemirrorView.state.schema,
          this.mapping
        )
      ).filter((i) => i !== null), n = this._tr.replace(
        0,
        this.prosemirrorView.state.doc.content.size,
        new be(ie.from(e), 0, 0)
      );
      n.setMeta(Gt, { snapshot: null, prevSnapshot: null }), this.prosemirrorView.dispatch(n);
    });
  }
  _forceRerender() {
    this.mapping.clear(), this.mux(() => {
      const e = this.beforeTransactionSelection !== null ? null : this.prosemirrorView.state.selection, n = this.type.toArray().map(
        (r) => cu(
          /** @type {Y.XmlElement} */
          r,
          this.prosemirrorView.state.schema,
          this.mapping
        )
      ).filter((r) => r !== null), i = this._tr.replace(
        0,
        this.prosemirrorView.state.doc.content.size,
        new be(ie.from(n), 0, 0)
      );
      e && i.setSelection(ze.create(i.doc, e.anchor, e.head)), this.prosemirrorView.dispatch(
        i.setMeta(Gt, { isChangeOrigin: !0, binding: this })
      );
    });
  }
  /**
   * @param {Y.Snapshot|Uint8Array} snapshot
   * @param {Y.Snapshot|Uint8Array} prevSnapshot
   * @param {Object} pluginState
   */
  _renderSnapshot(e, n, i) {
    let r = this.doc;
    e || (e = om(this.doc)), (e instanceof Uint8Array || n instanceof Uint8Array) && ((!(e instanceof Uint8Array) || !(n instanceof Uint8Array)) && yi(), r = new ba({ gc: !1 }), Vu(r, n), n = om(r), Vu(r, e), e = om(r)), this.mapping.clear(), this.mux(() => {
      r.transact((o) => {
        const s = i.permanentUserData;
        s && s.dss.forEach((f) => {
          vs(o, f, (d) => {
          });
        });
        const a = (f, d) => {
          const u = f === "added" ? s.getUserByClientId(d.client) : s.getUserByDeletedId(d);
          return {
            user: u,
            type: f,
            color: GF(
              i.colorMapping,
              i.colors,
              u
            )
          };
        }, l = $8(
          this.type,
          new ov(n.ds, e.sv)
        ).map((f) => !f._item.deleted || Qu(f._item, e) || Qu(f._item, n) ? cu(
          f,
          this.prosemirrorView.state.schema,
          /* @__PURE__ */ new Map(),
          e,
          n,
          a
        ) : null).filter((f) => f !== null), c = this._tr.replace(
          0,
          this.prosemirrorView.state.doc.content.size,
          new be(ie.from(l), 0, 0)
        );
        this.prosemirrorView.dispatch(
          c.setMeta(Gt, { isChangeOrigin: !0 })
        );
      }, Gt);
    });
  }
  /**
   * @param {Array<Y.YEvent<any>>} events
   * @param {Y.Transaction} transaction
   */
  _typeChanged(e, n) {
    if (this.prosemirrorView == null) return;
    const i = Gt.getState(this.prosemirrorView.state);
    if (e.length === 0 || i.snapshot != null || i.prevSnapshot != null) {
      this.renderSnapshot(i.snapshot, i.prevSnapshot);
      return;
    }
    this.mux(() => {
      const r = (a, l) => this.mapping.delete(l);
      vs(
        n,
        n.deleteSet,
        (a) => {
          if (a.constructor === Bt) {
            const l = (
              /** @type {Y.ContentType} */
              /** @type {Y.Item} */
              a.content.type
            );
            l && this.mapping.delete(l);
          }
        }
      ), n.changed.forEach(r), n.changedParentTypes.forEach(r);
      const o = this.type.toArray().map(
        (a) => rE(
          /** @type {Y.XmlElement | Y.XmlHook} */
          a,
          this.prosemirrorView.state.schema,
          this.mapping
        )
      ).filter((a) => a !== null);
      let s = this._tr.replace(
        0,
        this.prosemirrorView.state.doc.content.size,
        new be(ie.from(o), 0, 0)
      );
      YF(s, this.beforeTransactionSelection, this), s = s.setMeta(Gt, { isChangeOrigin: !0, isUndoRedoOperation: n.origin instanceof L8 }), this.beforeTransactionSelection !== null && this._isLocalCursorInView() && s.scrollIntoView(), this.prosemirrorView.dispatch(s);
    });
  }
  _prosemirrorChanged(e) {
    this.doc.transact(() => {
      gg(this.doc, this.type, e, this.mapping), this.beforeTransactionSelection = pg(
        this,
        this.prosemirrorView.state
      );
    }, Gt);
  }
  /**
   * View is ready to listen to changes. Register observers.
   * @param {any} prosemirrorView
   */
  initView(e) {
    this.prosemirrorView != null && this.destroy(), this.prosemirrorView = e, this.doc.on("beforeAllTransactions", this.beforeAllTransactions), this.doc.on("afterAllTransactions", this.afterAllTransactions), this.type.observeDeep(this._observeFunction);
  }
  destroy() {
    this.prosemirrorView != null && (this.prosemirrorView = null, this.type.unobserveDeep(this._observeFunction), this.doc.off("beforeAllTransactions", this.beforeAllTransactions), this.doc.off("afterAllTransactions", this.afterAllTransactions));
  }
}
const rE = (t, e, n, i, r, o) => {
  const s = (
    /** @type {PModel.Node} */
    n.get(t)
  );
  if (s === void 0) {
    if (t instanceof Wn)
      return cu(
        t,
        e,
        n,
        i,
        r,
        o
      );
    throw tr();
  }
  return s;
}, cu = (t, e, n, i, r, o) => {
  const s = [], a = (l) => {
    var c;
    if (l.constructor === Wn) {
      const f = rE(
        l,
        e,
        n,
        i,
        r,
        o
      );
      f !== null && s.push(f);
    } else {
      const f = (c = l._item.right) == null ? void 0 : c.content.type;
      f instanceof bs && !f._item.deleted && f._item.id.client === f.doc.clientID && (l.applyDelta([
        { retain: l.length },
        ...f.toDelta()
      ]), f.doc.transact((u) => {
        f._item.delete(u);
      }));
      const d = XF(
        l,
        e,
        n,
        i,
        r,
        o
      );
      d !== null && d.forEach((u) => {
        u !== null && s.push(u);
      });
    }
  };
  i === void 0 || r === void 0 ? t.toArray().forEach(a) : $8(t, new ov(r.ds, i.sv)).forEach(a);
  try {
    const l = t.getAttributes(i);
    i !== void 0 && (Qu(
      /** @type {Y.Item} */
      t._item,
      i
    ) ? Qu(
      /** @type {Y.Item} */
      t._item,
      r
    ) || (l.ychange = o ? o(
      "added",
      /** @type {Y.Item} */
      t._item.id
    ) : { type: "added" }) : l.ychange = o ? o(
      "removed",
      /** @type {Y.Item} */
      t._item.id
    ) : { type: "removed" });
    const c = e.node(t.nodeName, l, s);
    return n.set(t, c), c;
  } catch {
    return t.doc.transact((c) => {
      t._item.delete(c);
    }, Gt), n.delete(t), null;
  }
}, XF = (t, e, n, i, r, o) => {
  const s = [], a = t.toDelta(i, r, o);
  try {
    for (let l = 0; l < a.length; l++) {
      const c = a[l], f = [];
      for (const d in c.attributes)
        f.push(e.mark(d, c.attributes[d]));
      s.push(e.text(c.insert, f));
    }
  } catch {
    return t.doc.transact((c) => {
      t._item.delete(c);
    }, Gt), null;
  }
  return s;
}, QF = (t, e) => {
  const n = new ui(), i = t.map((r) => ({
    // @ts-ignore
    insert: r.text,
    attributes: sE(r.marks)
  }));
  return n.applyDelta(i), e.set(n, t), n;
}, ZF = (t, e) => {
  const n = new Wn(t.type.name);
  for (const i in t.attrs) {
    const r = t.attrs[i];
    r !== null && i !== "ychange" && n.setAttribute(i, r);
  }
  return n.insert(
    0,
    Ih(t).map(
      (i) => mg(i, e)
    )
  ), e.set(n, t), n;
}, mg = (t, e) => t instanceof Array ? QF(t, e) : ZF(t, e), pw = (t) => typeof t == "object" && t !== null, pv = (t, e) => {
  const n = Object.keys(t).filter((r) => t[r] !== null);
  let i = n.length === Object.keys(e).filter((r) => e[r] !== null).length;
  for (let r = 0; r < n.length && i; r++) {
    const o = n[r], s = t[o], a = e[o];
    i = o === "ychange" || s === a || pw(s) && pw(a) && pv(s, a);
  }
  return i;
}, Ih = (t) => {
  const e = t.content.content, n = [];
  for (let i = 0; i < e.length; i++) {
    const r = e[i];
    if (r.isText) {
      const o = [];
      for (let s = e[i]; i < e.length && s.isText; s = e[++i])
        o.push(s);
      i--, n.push(o);
    } else
      n.push(r);
  }
  return n;
}, oE = (t, e) => {
  const n = t.toDelta();
  return n.length === e.length && n.every(
    (i, r) => i.insert === /** @type {any} */
    e[r].text && Jy(i.attributes || {}).length === e[r].marks.length && e[r].marks.every(
      (o) => pv(i.attributes[o.type.name] || {}, o.attrs)
    )
  );
}, hf = (t, e) => {
  if (t instanceof Wn && !(e instanceof Array) && yg(t, e)) {
    const n = Ih(e);
    return t._length === n.length && pv(t.getAttributes(), e.attrs) && t.toArray().every(
      (i, r) => hf(i, n[r])
    );
  }
  return t instanceof ui && e instanceof Array && oE(t, e);
}, Zu = (t, e) => t === e || t instanceof Array && e instanceof Array && t.length === e.length && t.every(
  (n, i) => e[i] === n
), mw = (t, e, n) => {
  const i = t.toArray(), r = Ih(e), o = r.length, s = i.length, a = us(s, o);
  let l = 0, c = 0, f = !1;
  for (; l < a; l++) {
    const d = i[l], u = r[l];
    if (Zu(n.get(d), u))
      f = !0;
    else if (!hf(d, u))
      break;
  }
  for (; l + c < a; c++) {
    const d = i[s - c - 1], u = r[o - c - 1];
    if (Zu(n.get(d), u))
      f = !0;
    else if (!hf(d, u))
      break;
  }
  return {
    equalityFactor: l + c,
    foundMappedChild: f
  };
}, eB = (t) => {
  let e = "", n = t._start;
  const i = {};
  for (; n !== null; )
    n.deleted || (n.countable && n.content instanceof ar ? e += n.content.str : n.content instanceof un && (i[n.content.key] = null)), n = n.right;
  return {
    str: e,
    nAttrs: i
  };
}, tB = (t, e, n) => {
  n.set(t, e);
  const { nAttrs: i, str: r } = eB(t), o = e.map((c) => ({
    insert: (
      /** @type {any} */
      c.text
    ),
    attributes: Object.assign({}, i, sE(c.marks))
  })), { insert: s, remove: a, index: l } = WF(
    r,
    o.map((c) => c.insert).join("")
  );
  t.delete(l, a), t.insert(l, s), t.applyDelta(
    o.map((c) => ({ retain: c.insert.length, attributes: c.attributes }))
  );
}, sE = (t) => {
  const e = {};
  return t.forEach((n) => {
    n.type.name !== "ychange" && (e[n.type.name] = n.attrs);
  }), e;
}, gg = (t, e, n, i) => {
  if (e instanceof Wn && e.nodeName !== n.type.name)
    throw new Error("node name mismatch!");
  if (i.set(e, n), e instanceof Wn) {
    const d = e.getAttributes(), u = n.attrs;
    for (const h in u)
      u[h] !== null ? d[h] !== u[h] && h !== "ychange" && e.setAttribute(h, u[h]) : e.removeAttribute(h);
    for (const h in d)
      u[h] === void 0 && e.removeAttribute(h);
  }
  const r = Ih(n), o = r.length, s = e.toArray(), a = s.length, l = us(o, a);
  let c = 0, f = 0;
  for (; c < l; c++) {
    const d = s[c], u = r[c];
    if (!Zu(i.get(d), u))
      if (hf(d, u))
        i.set(d, u);
      else
        break;
  }
  for (; f + c + 1 < l; f++) {
    const d = s[a - f - 1], u = r[o - f - 1];
    if (!Zu(i.get(d), u))
      if (hf(d, u))
        i.set(d, u);
      else
        break;
  }
  t.transact(() => {
    for (; a - c - f > 0 && o - c - f > 0; ) {
      const u = s[c], h = r[c], p = s[a - f - 1], m = r[o - f - 1];
      if (u instanceof ui && h instanceof Array)
        oE(u, h) || tB(u, h, i), c += 1;
      else {
        let v = u instanceof Wn && yg(u, h), y = p instanceof Wn && yg(p, m);
        if (v && y) {
          const C = mw(
            /** @type {Y.XmlElement} */
            u,
            /** @type {PModel.Node} */
            h,
            i
          ), k = mw(
            /** @type {Y.XmlElement} */
            p,
            /** @type {PModel.Node} */
            m,
            i
          );
          C.foundMappedChild && !k.foundMappedChild ? y = !1 : !C.foundMappedChild && k.foundMappedChild || C.equalityFactor < k.equalityFactor ? v = !1 : y = !1;
        }
        v ? (gg(
          t,
          /** @type {Y.XmlFragment} */
          u,
          /** @type {PModel.Node} */
          h,
          i
        ), c += 1) : y ? (gg(
          t,
          /** @type {Y.XmlFragment} */
          p,
          /** @type {PModel.Node} */
          m,
          i
        ), f += 1) : (i.delete(e.get(c)), e.delete(c, 1), e.insert(c, [
          mg(h, i)
        ]), c += 1);
      }
    }
    const d = a - c - f;
    if (a === 1 && o === 0 && s[0] instanceof ui ? (i.delete(s[0]), s[0].delete(0, s[0].length)) : d > 0 && (e.slice(c, c + d).forEach((u) => i.delete(u)), e.delete(c, d)), c + f < o) {
      const u = [];
      for (let h = c; h < o - f; h++)
        u.push(mg(r[h], i));
      e.insert(c, u);
    }
  }, Gt);
}, yg = (t, e) => !(e instanceof Array) && t.nodeName === e.type.name;
let Ic = null;
const nB = () => {
  const t = (
    /** @type {Map<EditorView, Map<any, any>>} */
    Ic
  );
  Ic = null, t.forEach((e, n) => {
    const i = n.state.tr, r = Gt.getState(n.state);
    r && r.binding && !r.binding.isDestroyed && (e.forEach((o, s) => {
      i.setMeta(s, o);
    }), n.dispatch(i));
  });
}, iB = (t, e, n) => {
  Ic || (Ic = /* @__PURE__ */ new Map(), Zy(0, nB)), si(Ic, t, Gn).set(e, n);
}, e1 = (t, e, n) => {
  if (t === 0)
    return rm(e, 0, -1);
  let i = e._first === null ? null : (
    /** @type {Y.ContentType} */
    e._first.content.type
  );
  for (; i !== null && e !== i; ) {
    if (i instanceof ui) {
      if (i._length >= t)
        return rm(i, t, -1);
      if (t -= i._length, i._item !== null && i._item.next !== null)
        i = /** @type {Y.ContentType} */
        i._item.next.content.type;
      else {
        do
          i = i._item === null ? null : i._item.parent, t--;
        while (i !== e && i !== null && i._item !== null && i._item.next === null);
        i !== null && i !== e && (i = i._item === null ? null : (
          /** @type {Y.ContentType} */
          /** @type Y.Item */
          i._item.next.content.type
        ));
      }
    } else {
      const r = (
        /** @type {any} */
        (n.get(i) || { nodeSize: 0 }).nodeSize
      );
      if (i._first !== null && t < r)
        i = /** @type {Y.ContentType} */
        i._first.content.type, t--;
      else {
        if (t === 1 && i._length === 0 && r > 1)
          return new cf(i._item === null ? null : i._item.id, i._item === null ? af(i) : null, null);
        if (t -= r, i._item !== null && i._item.next !== null)
          i = /** @type {Y.ContentType} */
          i._item.next.content.type;
        else {
          if (t === 0)
            return i = i._item === null ? i : i._item.parent, new cf(i._item === null ? null : i._item.id, i._item === null ? af(i) : null, null);
          do
            i = /** @type {Y.Item} */
            i._item.parent, t--;
          while (i !== e && /** @type {Y.Item} */
          i._item.next === null);
          i !== e && (i = /** @type {Y.ContentType} */
          /** @type {Y.Item} */
          /** @type {Y.Item} */
          i._item.next.content.type);
        }
      }
    }
    if (i === null)
      throw yi();
    if (t === 0 && i.constructor !== ui && i !== e)
      return rB(i._item.parent, i._item);
  }
  return rm(e, e._length, -1);
}, rB = (t, e) => {
  let n = null, i = null;
  return t._item === null ? i = af(t) : n = Ze(t._item.id.client, t._item.id.clock), new cf(n, i, e.id);
}, pf = (t, e, n, i) => {
  const r = HP(n, t);
  if (r === null || r.type !== e && !lf(e, r.type._item))
    return null;
  let o = r.type, s = 0;
  if (o.constructor === ui)
    s = r.index;
  else if (o._item === null || !o._item.deleted) {
    let a = o._first, l = 0;
    for (; l < o._length && l < r.index && a !== null; ) {
      if (!a.deleted) {
        const c = (
          /** @type {Y.ContentType} */
          a.content.type
        );
        l++, c instanceof ui ? s += c._length : s += /** @type {any} */
        i.get(c).nodeSize;
      }
      a = /** @type {Y.Item} */
      a.right;
    }
    s += 1;
  }
  for (; o !== e && o._item !== null; ) {
    const a = o._item.parent;
    if (a._item === null || !a._item.deleted) {
      s += 1;
      let l = (
        /** @type {Y.AbstractType} */
        a._first
      );
      for (; l !== null; ) {
        const c = (
          /** @type {Y.ContentType} */
          l.content.type
        );
        if (c === o)
          break;
        l.deleted || (c instanceof ui ? s += c._length : s += /** @type {any} */
        i.get(c).nodeSize), l = l.right;
      }
    }
    o = /** @type {Y.AbstractType} */
    a;
  }
  return s - 1;
}, oB = (t, e, n) => t !== e, sB = (t) => {
  const e = document.createElement("span");
  e.classList.add("ProseMirror-yjs-cursor"), e.setAttribute("style", `border-color: ${t.color}`);
  const n = document.createElement("div");
  n.setAttribute("style", `background-color: ${t.color}`), n.insertBefore(document.createTextNode(t.name), null);
  const i = document.createTextNode("⁠"), r = document.createTextNode("⁠");
  return e.insertBefore(i, null), e.insertBefore(n, null), e.insertBefore(r, null), e;
}, aE = (t) => ({
  style: `background-color: ${t.color}70`,
  class: "ProseMirror-yjs-selection"
}), aB = /^#[0-9a-fA-F]{6}$/, gw = (t, e, n, i, r) => {
  const o = Gt.getState(t), s = o.doc, a = [];
  return o.snapshot != null || o.prevSnapshot != null || o.binding.mapping.size === 0 ? Tt.create(t.doc, []) : (e.getStates().forEach((l, c) => {
    if (n(s.clientID, c, l) && l.cursor != null) {
      const f = l.user || {};
      f.color == null ? f.color = "#ffa500" : aB.test(f.color) || console.warn("A user uses an unsupported color format", f), f.name == null && (f.name = `User: ${c}`);
      let d = pf(
        s,
        o.type,
        Rc(l.cursor.anchor),
        o.binding.mapping
      ), u = pf(
        s,
        o.type,
        Rc(l.cursor.head),
        o.binding.mapping
      );
      if (d !== null && u !== null) {
        const h = ko(t.doc.content.size - 1, 0);
        d = us(d, h), u = us(u, h), a.push(
          Qt.widget(u, () => i(f), {
            key: c + "",
            side: 10
          })
        );
        const p = us(d, u), m = ko(d, u);
        a.push(
          Qt.inline(p, m, r(f), {
            inclusiveEnd: !0,
            inclusiveStart: !1
          })
        );
      }
    }
  }), Tt.create(t.doc, a));
}, lB = (t, {
  awarenessStateFilter: e = oB,
  cursorBuilder: n = sB,
  selectionBuilder: i = aE,
  getSelection: r = (s) => s.selection
} = {}, o = "cursor") => new mt({
  key: hd,
  state: {
    init(s, a) {
      return gw(
        a,
        t,
        e,
        n,
        i
      );
    },
    apply(s, a, l, c) {
      const f = Gt.getState(c), d = s.getMeta(hd);
      return f && f.isChangeOrigin || d && d.awarenessUpdated ? gw(
        c,
        t,
        e,
        n,
        i
      ) : a.map(s.mapping, s.doc);
    }
  },
  props: {
    decorations: (s) => hd.getState(s)
  },
  view: (s) => {
    const a = () => {
      s.docView && iB(s, hd, { awarenessUpdated: !0 });
    }, l = () => {
      const c = Gt.getState(s.state), f = t.getLocalState() || {};
      if (s.hasFocus()) {
        const d = r(s.state), u = e1(
          d.anchor,
          c.type,
          c.binding.mapping
        ), h = e1(
          d.head,
          c.type,
          c.binding.mapping
        );
        (f.cursor == null || !iw(
          Rc(f.cursor.anchor),
          u
        ) || !iw(
          Rc(f.cursor.head),
          h
        )) && t.setLocalStateField(o, {
          anchor: u,
          head: h
        });
      } else f.cursor != null && pf(
        c.doc,
        c.type,
        Rc(f.cursor.anchor),
        c.binding.mapping
      ) !== null && t.setLocalStateField(o, null);
    };
    return t.on("change", a), s.dom.addEventListener("focusin", l), s.dom.addEventListener("focusout", l), {
      update: l,
      destroy: () => {
        s.dom.removeEventListener("focusin", l), s.dom.removeEventListener("focusout", l), t.off("change", a), t.setLocalStateField(o, null);
      }
    };
  }
}), cB = (t) => {
  const e = ho.getState(t).undoManager;
  if (e != null)
    return e.undo(), !0;
}, fB = (t) => {
  const e = ho.getState(t).undoManager;
  if (e != null)
    return e.redo(), !0;
}, dB = /* @__PURE__ */ new Set(["paragraph"]), uB = (t, e) => !(t instanceof Bt) || !(t.content instanceof dr) || !(t.content.type instanceof bs || t.content.type instanceof Wn && e.has(t.content.type.nodeName)) || t.content.type._length === 0, hB = ({ protectedNodes: t = dB, trackedOrigins: e = [], undoManager: n = null } = {}) => new mt({
  key: ho,
  state: {
    init: (i, r) => {
      const o = Gt.getState(r), s = n || new L8(o.type, {
        trackedOrigins: new Set([Gt].concat(e)),
        deleteFilter: (a) => uB(a, t),
        captureTransaction: (a) => a.meta.get("addToHistory") !== !1
      });
      return {
        undoManager: s,
        prevSel: null,
        hasUndoOps: s.undoStack.length > 0,
        hasRedoOps: s.redoStack.length > 0
      };
    },
    /**
     * @returns {any}
     */
    apply: (i, r, o, s) => {
      const a = Gt.getState(s).binding, l = r.undoManager, c = l.undoStack.length > 0, f = l.redoStack.length > 0;
      return a ? {
        undoManager: l,
        prevSel: pg(a, o),
        hasUndoOps: c,
        hasRedoOps: f
      } : c !== r.hasUndoOps || f !== r.hasRedoOps ? Object.assign({}, r, {
        hasUndoOps: l.undoStack.length > 0,
        hasRedoOps: l.redoStack.length > 0
      }) : r;
    }
  },
  view: (i) => {
    const r = Gt.getState(i.state), o = ho.getState(i.state).undoManager;
    return o.on("stack-item-added", ({ stackItem: s }) => {
      const a = r.binding;
      a && s.meta.set(a, ho.getState(i.state).prevSel);
    }), o.on("stack-item-popped", ({ stackItem: s }) => {
      const a = r.binding;
      a && (a.beforeTransactionSelection = s.meta.get(a) || a.beforeTransactionSelection);
    }), {
      destroy: () => {
        o.destroy();
      }
    };
  }
}), pB = At.create({
  name: "collaboration",
  priority: 1e3,
  addOptions() {
    return {
      document: null,
      field: "default",
      fragment: null
    };
  },
  onCreate() {
    this.editor.extensionManager.extensions.find((t) => t.name === "history") && console.warn('[tiptap warn]: "@tiptap/extension-collaboration" comes with its own history support and is not compatible with "@tiptap/extension-history".');
  },
  addCommands() {
    return {
      undo: () => ({ tr: t, state: e, dispatch: n }) => (t.setMeta("preventDispatch", !0), ho.getState(e).undoManager.undoStack.length === 0 ? !1 : n ? cB(e) : !0),
      redo: () => ({ tr: t, state: e, dispatch: n }) => (t.setMeta("preventDispatch", !0), ho.getState(e).undoManager.redoStack.length === 0 ? !1 : n ? fB(e) : !0)
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-z": () => this.editor.commands.undo(),
      "Mod-y": () => this.editor.commands.redo(),
      "Shift-Mod-z": () => this.editor.commands.redo()
    };
  },
  addProseMirrorPlugins() {
    const t = this.options.fragment ? this.options.fragment : this.options.document.getXmlFragment(this.options.field), e = hB(), n = e.spec.view;
    e.spec.view = (o) => {
      const { undoManager: s } = ho.getState(o.state);
      s.restore && (s.restore(), s.restore = () => {
      });
      const a = n ? n(o) : void 0;
      return {
        destroy: () => {
          const l = s.trackedOrigins.has(s), c = s._observers;
          s.restore = () => {
            l && s.trackedOrigins.add(s), s.doc.on("afterTransaction", s.afterTransactionHandler), s._observers = c;
          }, a != null && a.destroy && a.destroy();
        }
      };
    };
    const i = {
      ...this.options.ySyncOptions,
      onFirstRender: this.options.onFirstRender
    };
    return [KF(t, i), e];
  }
}), yw = (t) => Array.from(t.entries()).map(([e, n]) => ({
  clientId: e,
  ...n.user
})), vw = () => null, mB = At.create({
  name: "collaborationCursor",
  priority: 999,
  addOptions() {
    return {
      provider: null,
      user: {
        name: null,
        color: null
      },
      render: (t) => {
        const e = document.createElement("span");
        e.classList.add("collaboration-cursor__caret"), e.setAttribute("style", `border-color: ${t.color}`);
        const n = document.createElement("div");
        return n.classList.add("collaboration-cursor__label"), n.setAttribute("style", `background-color: ${t.color}`), n.insertBefore(document.createTextNode(t.name), null), e.insertBefore(n, null), e;
      },
      selectionRender: aE,
      onUpdate: vw
    };
  },
  onCreate() {
    if (this.options.onUpdate !== vw && console.warn('[tiptap warn]: DEPRECATED: The "onUpdate" option is deprecated. Please use `editor.storage.collaborationCursor.users` instead. Read more: https://tiptap.dev/api/extensions/collaboration-cursor'), !this.options.provider)
      throw new Error('The "provider" option is required for the CollaborationCursor extension');
  },
  addStorage() {
    return {
      users: []
    };
  },
  addCommands() {
    return {
      updateUser: (t) => () => (this.options.user = t, this.options.provider.awareness.setLocalStateField("user", this.options.user), !0),
      user: (t) => ({ editor: e }) => (console.warn('[tiptap warn]: DEPRECATED: The "user" command is deprecated. Please use "updateUser" instead. Read more: https://tiptap.dev/api/extensions/collaboration-cursor'), e.commands.updateUser(t))
    };
  },
  addProseMirrorPlugins() {
    return [
      lB(
        (this.options.provider.awareness.setLocalStateField("user", this.options.user), this.storage.users = yw(this.options.provider.awareness.states), this.options.provider.awareness.on("update", () => {
          this.storage.users = yw(this.options.provider.awareness.states);
        }), this.options.provider.awareness),
        // @ts-ignore
        {
          cursorBuilder: this.options.render,
          selectionBuilder: this.options.selectionRender
        }
      )
    ];
  }
});
function gB(t = {}) {
  return new mt({
    view(e) {
      return new yB(e, t);
    }
  });
}
class yB {
  constructor(e, n) {
    var i;
    this.editorView = e, this.cursorPos = null, this.element = null, this.timeout = -1, this.width = (i = n.width) !== null && i !== void 0 ? i : 1, this.color = n.color === !1 ? void 0 : n.color || "black", this.class = n.class, this.handlers = ["dragover", "dragend", "drop", "dragleave"].map((r) => {
      let o = (s) => {
        this[r](s);
      };
      return e.dom.addEventListener(r, o), { name: r, handler: o };
    });
  }
  destroy() {
    this.handlers.forEach(({ name: e, handler: n }) => this.editorView.dom.removeEventListener(e, n));
  }
  update(e, n) {
    this.cursorPos != null && n.doc != e.state.doc && (this.cursorPos > e.state.doc.content.size ? this.setCursor(null) : this.updateOverlay());
  }
  setCursor(e) {
    e != this.cursorPos && (this.cursorPos = e, e == null ? (this.element.parentNode.removeChild(this.element), this.element = null) : this.updateOverlay());
  }
  updateOverlay() {
    let e = this.editorView.state.doc.resolve(this.cursorPos), n = !e.parent.inlineContent, i;
    if (n) {
      let a = e.nodeBefore, l = e.nodeAfter;
      if (a || l) {
        let c = this.editorView.nodeDOM(this.cursorPos - (a ? a.nodeSize : 0));
        if (c) {
          let f = c.getBoundingClientRect(), d = a ? f.bottom : f.top;
          a && l && (d = (d + this.editorView.nodeDOM(this.cursorPos).getBoundingClientRect().top) / 2), i = { left: f.left, right: f.right, top: d - this.width / 2, bottom: d + this.width / 2 };
        }
      }
    }
    if (!i) {
      let a = this.editorView.coordsAtPos(this.cursorPos);
      i = { left: a.left - this.width / 2, right: a.left + this.width / 2, top: a.top, bottom: a.bottom };
    }
    let r = this.editorView.dom.offsetParent;
    this.element || (this.element = r.appendChild(document.createElement("div")), this.class && (this.element.className = this.class), this.element.style.cssText = "position: absolute; z-index: 50; pointer-events: none;", this.color && (this.element.style.backgroundColor = this.color)), this.element.classList.toggle("prosemirror-dropcursor-block", n), this.element.classList.toggle("prosemirror-dropcursor-inline", !n);
    let o, s;
    if (!r || r == document.body && getComputedStyle(r).position == "static")
      o = -pageXOffset, s = -pageYOffset;
    else {
      let a = r.getBoundingClientRect();
      o = a.left - r.scrollLeft, s = a.top - r.scrollTop;
    }
    this.element.style.left = i.left - o + "px", this.element.style.top = i.top - s + "px", this.element.style.width = i.right - i.left + "px", this.element.style.height = i.bottom - i.top + "px";
  }
  scheduleRemoval(e) {
    clearTimeout(this.timeout), this.timeout = setTimeout(() => this.setCursor(null), e);
  }
  dragover(e) {
    if (!this.editorView.editable)
      return;
    let n = this.editorView.posAtCoords({ left: e.clientX, top: e.clientY }), i = n && n.inside >= 0 && this.editorView.state.doc.nodeAt(n.inside), r = i && i.type.spec.disableDropCursor, o = typeof r == "function" ? r(this.editorView, n, e) : r;
    if (n && !o) {
      let s = n.pos;
      if (this.editorView.dragging && this.editorView.dragging.slice) {
        let a = T5(this.editorView.state.doc, s, this.editorView.dragging.slice);
        a != null && (s = a);
      }
      this.setCursor(s), this.scheduleRemoval(5e3);
    }
  }
  dragend() {
    this.scheduleRemoval(20);
  }
  drop() {
    this.scheduleRemoval(20);
  }
  dragleave(e) {
    (e.target == this.editorView.dom || !this.editorView.dom.contains(e.relatedTarget)) && this.setCursor(null);
  }
}
const vB = At.create({
  name: "dropCursor",
  addOptions() {
    return {
      color: "currentColor",
      width: 1,
      class: void 0
    };
  },
  addProseMirrorPlugins() {
    return [
      gB(this.options)
    ];
  }
});
class Xt extends $e {
  /**
  Create a gap cursor.
  */
  constructor(e) {
    super(e, e);
  }
  map(e, n) {
    let i = e.resolve(n.map(this.head));
    return Xt.valid(i) ? new Xt(i) : $e.near(i);
  }
  content() {
    return be.empty;
  }
  eq(e) {
    return e instanceof Xt && e.head == this.head;
  }
  toJSON() {
    return { type: "gapcursor", pos: this.head };
  }
  /**
  @internal
  */
  static fromJSON(e, n) {
    if (typeof n.pos != "number")
      throw new RangeError("Invalid input for GapCursor.fromJSON");
    return new Xt(e.resolve(n.pos));
  }
  /**
  @internal
  */
  getBookmark() {
    return new mv(this.anchor);
  }
  /**
  @internal
  */
  static valid(e) {
    let n = e.parent;
    if (n.isTextblock || !bB(e) || !kB(e))
      return !1;
    let i = n.type.spec.allowGapCursor;
    if (i != null)
      return i;
    let r = n.contentMatchAt(e.index()).defaultType;
    return r && r.isTextblock;
  }
  /**
  @internal
  */
  static findGapCursorFrom(e, n, i = !1) {
    e: for (; ; ) {
      if (!i && Xt.valid(e))
        return e;
      let r = e.pos, o = null;
      for (let s = e.depth; ; s--) {
        let a = e.node(s);
        if (n > 0 ? e.indexAfter(s) < a.childCount : e.index(s) > 0) {
          o = a.child(n > 0 ? e.indexAfter(s) : e.index(s) - 1);
          break;
        } else if (s == 0)
          return null;
        r += n;
        let l = e.doc.resolve(r);
        if (Xt.valid(l))
          return l;
      }
      for (; ; ) {
        let s = n > 0 ? o.firstChild : o.lastChild;
        if (!s) {
          if (o.isAtom && !o.isText && !Ie.isSelectable(o)) {
            e = e.doc.resolve(r + o.nodeSize * n), i = !1;
            continue e;
          }
          break;
        }
        o = s, r += n;
        let a = e.doc.resolve(r);
        if (Xt.valid(a))
          return a;
      }
      return null;
    }
  }
}
Xt.prototype.visible = !1;
Xt.findFrom = Xt.findGapCursorFrom;
$e.jsonID("gapcursor", Xt);
class mv {
  constructor(e) {
    this.pos = e;
  }
  map(e) {
    return new mv(e.map(this.pos));
  }
  resolve(e) {
    let n = e.resolve(this.pos);
    return Xt.valid(n) ? new Xt(n) : $e.near(n);
  }
}
function bB(t) {
  for (let e = t.depth; e >= 0; e--) {
    let n = t.index(e), i = t.node(e);
    if (n == 0) {
      if (i.type.spec.isolating)
        return !0;
      continue;
    }
    for (let r = i.child(n - 1); ; r = r.lastChild) {
      if (r.childCount == 0 && !r.inlineContent || r.isAtom || r.type.spec.isolating)
        return !0;
      if (r.inlineContent)
        return !1;
    }
  }
  return !0;
}
function kB(t) {
  for (let e = t.depth; e >= 0; e--) {
    let n = t.indexAfter(e), i = t.node(e);
    if (n == i.childCount) {
      if (i.type.spec.isolating)
        return !0;
      continue;
    }
    for (let r = i.child(n); ; r = r.firstChild) {
      if (r.childCount == 0 && !r.inlineContent || r.isAtom || r.type.spec.isolating)
        return !0;
      if (r.inlineContent)
        return !1;
    }
  }
  return !0;
}
function wB() {
  return new mt({
    props: {
      decorations: CB,
      createSelectionBetween(t, e, n) {
        return e.pos == n.pos && Xt.valid(n) ? new Xt(n) : null;
      },
      handleClick: EB,
      handleKeyDown: _B,
      handleDOMEvents: { beforeinput: TB }
    }
  });
}
const _B = Iy({
  ArrowLeft: pd("horiz", -1),
  ArrowRight: pd("horiz", 1),
  ArrowUp: pd("vert", -1),
  ArrowDown: pd("vert", 1)
});
function pd(t, e) {
  const n = t == "vert" ? e > 0 ? "down" : "up" : e > 0 ? "right" : "left";
  return function(i, r, o) {
    let s = i.selection, a = e > 0 ? s.$to : s.$from, l = s.empty;
    if (s instanceof ze) {
      if (!o.endOfTextblock(n) || a.depth == 0)
        return !1;
      l = !1, a = i.doc.resolve(e > 0 ? a.after() : a.before());
    }
    let c = Xt.findGapCursorFrom(a, e, l);
    return c ? (r && r(i.tr.setSelection(new Xt(c))), !0) : !1;
  };
}
function EB(t, e, n) {
  if (!t || !t.editable)
    return !1;
  let i = t.state.doc.resolve(e);
  if (!Xt.valid(i))
    return !1;
  let r = t.posAtCoords({ left: n.clientX, top: n.clientY });
  return r && r.inside > -1 && Ie.isSelectable(t.state.doc.nodeAt(r.inside)) ? !1 : (t.dispatch(t.state.tr.setSelection(new Xt(i))), !0);
}
function TB(t, e) {
  if (e.inputType != "insertCompositionText" || !(t.state.selection instanceof Xt))
    return !1;
  let { $from: n } = t.state.selection, i = n.parent.contentMatchAt(n.index()).findWrapping(t.state.schema.nodes.text);
  if (!i)
    return !1;
  let r = ie.empty;
  for (let s = i.length - 1; s >= 0; s--)
    r = ie.from(i[s].createAndFill(null, r));
  let o = t.state.tr.replace(n.pos, n.pos, new be(r, 0, 0));
  return o.setSelection(ze.near(o.doc.resolve(n.pos + 1))), t.dispatch(o), !1;
}
function CB(t) {
  if (!(t.selection instanceof Xt))
    return null;
  let e = document.createElement("div");
  return e.className = "ProseMirror-gapcursor", Tt.create(t.doc, [Qt.widget(t.selection.head, e, { key: "gapcursor" })]);
}
const SB = At.create({
  name: "gapCursor",
  addProseMirrorPlugins() {
    return [
      wB()
    ];
  },
  extendNodeSchema(t) {
    var e;
    const n = {
      name: t.name,
      options: t.options,
      storage: t.storage
    };
    return {
      allowGapCursor: (e = ht(Me(t, "allowGapCursor", n))) !== null && e !== void 0 ? e : null
    };
  }
}), xB = jr.create({
  name: "hardBreak",
  addOptions() {
    return {
      keepMarks: !0,
      HTMLAttributes: {}
    };
  },
  inline: !0,
  group: "inline",
  selectable: !1,
  parseHTML() {
    return [
      { tag: "br" }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    return ["br", gi(this.options.HTMLAttributes, t)];
  },
  renderText() {
    return `
`;
  },
  addCommands() {
    return {
      setHardBreak: () => ({ commands: t, chain: e, state: n, editor: i }) => t.first([
        () => t.exitCode(),
        () => t.command(() => {
          const { selection: r, storedMarks: o } = n;
          if (r.$from.parent.type.spec.isolating)
            return !1;
          const { keepMarks: s } = this.options, { splittableMarks: a } = i.extensionManager, l = o || r.$to.parentOffset && r.$from.marks();
          return e().insertContent({ type: this.name }).command(({ tr: c, dispatch: f }) => {
            if (f && l && s) {
              const d = l.filter((u) => a.includes(u.type.name));
              c.ensureMarks(d);
            }
            return !0;
          }).run();
        })
      ])
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-Enter": () => this.editor.commands.setHardBreak(),
      "Shift-Enter": () => this.editor.commands.setHardBreak()
    };
  }
});
var t1 = 200, Tn = function() {
};
Tn.prototype.append = function(e) {
  return e.length ? (e = Tn.from(e), !this.length && e || e.length < t1 && this.leafAppend(e) || this.length < t1 && e.leafPrepend(this) || this.appendInner(e)) : this;
};
Tn.prototype.prepend = function(e) {
  return e.length ? Tn.from(e).append(this) : this;
};
Tn.prototype.appendInner = function(e) {
  return new AB(this, e);
};
Tn.prototype.slice = function(e, n) {
  return e === void 0 && (e = 0), n === void 0 && (n = this.length), e >= n ? Tn.empty : this.sliceInner(Math.max(0, e), Math.min(this.length, n));
};
Tn.prototype.get = function(e) {
  if (!(e < 0 || e >= this.length))
    return this.getInner(e);
};
Tn.prototype.forEach = function(e, n, i) {
  n === void 0 && (n = 0), i === void 0 && (i = this.length), n <= i ? this.forEachInner(e, n, i, 0) : this.forEachInvertedInner(e, n, i, 0);
};
Tn.prototype.map = function(e, n, i) {
  n === void 0 && (n = 0), i === void 0 && (i = this.length);
  var r = [];
  return this.forEach(function(o, s) {
    return r.push(e(o, s));
  }, n, i), r;
};
Tn.from = function(e) {
  return e instanceof Tn ? e : e && e.length ? new lE(e) : Tn.empty;
};
var lE = /* @__PURE__ */ function(t) {
  function e(i) {
    t.call(this), this.values = i;
  }
  t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e;
  var n = { length: { configurable: !0 }, depth: { configurable: !0 } };
  return e.prototype.flatten = function() {
    return this.values;
  }, e.prototype.sliceInner = function(r, o) {
    return r == 0 && o == this.length ? this : new e(this.values.slice(r, o));
  }, e.prototype.getInner = function(r) {
    return this.values[r];
  }, e.prototype.forEachInner = function(r, o, s, a) {
    for (var l = o; l < s; l++)
      if (r(this.values[l], a + l) === !1)
        return !1;
  }, e.prototype.forEachInvertedInner = function(r, o, s, a) {
    for (var l = o - 1; l >= s; l--)
      if (r(this.values[l], a + l) === !1)
        return !1;
  }, e.prototype.leafAppend = function(r) {
    if (this.length + r.length <= t1)
      return new e(this.values.concat(r.flatten()));
  }, e.prototype.leafPrepend = function(r) {
    if (this.length + r.length <= t1)
      return new e(r.flatten().concat(this.values));
  }, n.length.get = function() {
    return this.values.length;
  }, n.depth.get = function() {
    return 0;
  }, Object.defineProperties(e.prototype, n), e;
}(Tn);
Tn.empty = new lE([]);
var AB = /* @__PURE__ */ function(t) {
  function e(n, i) {
    t.call(this), this.left = n, this.right = i, this.length = n.length + i.length, this.depth = Math.max(n.depth, i.depth) + 1;
  }
  return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.prototype.flatten = function() {
    return this.left.flatten().concat(this.right.flatten());
  }, e.prototype.getInner = function(i) {
    return i < this.left.length ? this.left.get(i) : this.right.get(i - this.left.length);
  }, e.prototype.forEachInner = function(i, r, o, s) {
    var a = this.left.length;
    if (r < a && this.left.forEachInner(i, r, Math.min(o, a), s) === !1 || o > a && this.right.forEachInner(i, Math.max(r - a, 0), Math.min(this.length, o) - a, s + a) === !1)
      return !1;
  }, e.prototype.forEachInvertedInner = function(i, r, o, s) {
    var a = this.left.length;
    if (r > a && this.right.forEachInvertedInner(i, r - a, Math.max(o, a) - a, s + a) === !1 || o < a && this.left.forEachInvertedInner(i, Math.min(r, a), o, s) === !1)
      return !1;
  }, e.prototype.sliceInner = function(i, r) {
    if (i == 0 && r == this.length)
      return this;
    var o = this.left.length;
    return r <= o ? this.left.slice(i, r) : i >= o ? this.right.slice(i - o, r - o) : this.left.slice(i, o).append(this.right.slice(0, r - o));
  }, e.prototype.leafAppend = function(i) {
    var r = this.right.leafAppend(i);
    if (r)
      return new e(this.left, r);
  }, e.prototype.leafPrepend = function(i) {
    var r = this.left.leafPrepend(i);
    if (r)
      return new e(r, this.right);
  }, e.prototype.appendInner = function(i) {
    return this.left.depth >= Math.max(this.right.depth, i.depth) + 1 ? new e(this.left, new e(this.right, i)) : new e(this, i);
  }, e;
}(Tn);
const MB = 500;
class Qi {
  constructor(e, n) {
    this.items = e, this.eventCount = n;
  }
  // Pop the latest event off the branch's history and apply it
  // to a document transform.
  popEvent(e, n) {
    if (this.eventCount == 0)
      return null;
    let i = this.items.length;
    for (; ; i--)
      if (this.items.get(i - 1).selection) {
        --i;
        break;
      }
    let r, o;
    n && (r = this.remapping(i, this.items.length), o = r.maps.length);
    let s = e.tr, a, l, c = [], f = [];
    return this.items.forEach((d, u) => {
      if (!d.step) {
        r || (r = this.remapping(i, u + 1), o = r.maps.length), o--, f.push(d);
        return;
      }
      if (r) {
        f.push(new yr(d.map));
        let h = d.step.map(r.slice(o)), p;
        h && s.maybeStep(h).doc && (p = s.mapping.maps[s.mapping.maps.length - 1], c.push(new yr(p, void 0, void 0, c.length + f.length))), o--, p && r.appendMap(p, o);
      } else
        s.maybeStep(d.step);
      if (d.selection)
        return a = r ? d.selection.map(r.slice(o)) : d.selection, l = new Qi(this.items.slice(0, i).append(f.reverse().concat(c)), this.eventCount - 1), !1;
    }, this.items.length, 0), { remaining: l, transform: s, selection: a };
  }
  // Create a new branch with the given transform added.
  addTransform(e, n, i, r) {
    let o = [], s = this.eventCount, a = this.items, l = !r && a.length ? a.get(a.length - 1) : null;
    for (let f = 0; f < e.steps.length; f++) {
      let d = e.steps[f].invert(e.docs[f]), u = new yr(e.mapping.maps[f], d, n), h;
      (h = l && l.merge(u)) && (u = h, f ? o.pop() : a = a.slice(0, a.length - 1)), o.push(u), n && (s++, n = void 0), r || (l = u);
    }
    let c = s - i.depth;
    return c > OB && (a = NB(a, c), s -= c), new Qi(a.append(o), s);
  }
  remapping(e, n) {
    let i = new Qa();
    return this.items.forEach((r, o) => {
      let s = r.mirrorOffset != null && o - r.mirrorOffset >= e ? i.maps.length - r.mirrorOffset : void 0;
      i.appendMap(r.map, s);
    }, e, n), i;
  }
  addMaps(e) {
    return this.eventCount == 0 ? this : new Qi(this.items.append(e.map((n) => new yr(n))), this.eventCount);
  }
  // When the collab module receives remote changes, the history has
  // to know about those, so that it can adjust the steps that were
  // rebased on top of the remote changes, and include the position
  // maps for the remote changes in its array of items.
  rebased(e, n) {
    if (!this.eventCount)
      return this;
    let i = [], r = Math.max(0, this.items.length - n), o = e.mapping, s = e.steps.length, a = this.eventCount;
    this.items.forEach((u) => {
      u.selection && a--;
    }, r);
    let l = n;
    this.items.forEach((u) => {
      let h = o.getMirror(--l);
      if (h == null)
        return;
      s = Math.min(s, h);
      let p = o.maps[h];
      if (u.step) {
        let m = e.steps[h].invert(e.docs[h]), v = u.selection && u.selection.map(o.slice(l + 1, h));
        v && a++, i.push(new yr(p, m, v));
      } else
        i.push(new yr(p));
    }, r);
    let c = [];
    for (let u = n; u < s; u++)
      c.push(new yr(o.maps[u]));
    let f = this.items.slice(0, r).append(c).append(i), d = new Qi(f, a);
    return d.emptyItemCount() > MB && (d = d.compress(this.items.length - i.length)), d;
  }
  emptyItemCount() {
    let e = 0;
    return this.items.forEach((n) => {
      n.step || e++;
    }), e;
  }
  // Compressing a branch means rewriting it to push the air (map-only
  // items) out. During collaboration, these naturally accumulate
  // because each remote change adds one. The `upto` argument is used
  // to ensure that only the items below a given level are compressed,
  // because `rebased` relies on a clean, untouched set of items in
  // order to associate old items with rebased steps.
  compress(e = this.items.length) {
    let n = this.remapping(0, e), i = n.maps.length, r = [], o = 0;
    return this.items.forEach((s, a) => {
      if (a >= e)
        r.push(s), s.selection && o++;
      else if (s.step) {
        let l = s.step.map(n.slice(i)), c = l && l.getMap();
        if (i--, c && n.appendMap(c, i), l) {
          let f = s.selection && s.selection.map(n.slice(i));
          f && o++;
          let d = new yr(c.invert(), l, f), u, h = r.length - 1;
          (u = r.length && r[h].merge(d)) ? r[h] = u : r.push(d);
        }
      } else s.map && i--;
    }, this.items.length, 0), new Qi(Tn.from(r.reverse()), o);
  }
}
Qi.empty = new Qi(Tn.empty, 0);
function NB(t, e) {
  let n;
  return t.forEach((i, r) => {
    if (i.selection && e-- == 0)
      return n = r, !1;
  }), t.slice(n);
}
class yr {
  constructor(e, n, i, r) {
    this.map = e, this.step = n, this.selection = i, this.mirrorOffset = r;
  }
  merge(e) {
    if (this.step && e.step && !e.selection) {
      let n = e.step.merge(this.step);
      if (n)
        return new yr(n.getMap().invert(), n, this.selection);
    }
  }
}
class Go {
  constructor(e, n, i, r, o) {
    this.done = e, this.undone = n, this.prevRanges = i, this.prevTime = r, this.prevComposition = o;
  }
}
const OB = 20;
function RB(t, e, n, i) {
  let r = n.getMeta(na), o;
  if (r)
    return r.historyState;
  n.getMeta(DB) && (t = new Go(t.done, t.undone, null, 0, -1));
  let s = n.getMeta("appendedTransaction");
  if (n.steps.length == 0)
    return t;
  if (s && s.getMeta(na))
    return s.getMeta(na).redo ? new Go(t.done.addTransform(n, void 0, i, fu(e)), t.undone, bw(n.mapping.maps), t.prevTime, t.prevComposition) : new Go(t.done, t.undone.addTransform(n, void 0, i, fu(e)), null, t.prevTime, t.prevComposition);
  if (n.getMeta("addToHistory") !== !1 && !(s && s.getMeta("addToHistory") === !1)) {
    let a = n.getMeta("composition"), l = t.prevTime == 0 || !s && t.prevComposition != a && (t.prevTime < (n.time || 0) - i.newGroupDelay || !IB(n, t.prevRanges)), c = s ? cm(t.prevRanges, n.mapping) : bw(n.mapping.maps);
    return new Go(t.done.addTransform(n, l ? e.selection.getBookmark() : void 0, i, fu(e)), Qi.empty, c, n.time, a ?? t.prevComposition);
  } else return (o = n.getMeta("rebased")) ? new Go(t.done.rebased(n, o), t.undone.rebased(n, o), cm(t.prevRanges, n.mapping), t.prevTime, t.prevComposition) : new Go(t.done.addMaps(n.mapping.maps), t.undone.addMaps(n.mapping.maps), cm(t.prevRanges, n.mapping), t.prevTime, t.prevComposition);
}
function IB(t, e) {
  if (!e)
    return !1;
  if (!t.docChanged)
    return !0;
  let n = !1;
  return t.mapping.maps[0].forEach((i, r) => {
    for (let o = 0; o < e.length; o += 2)
      i <= e[o + 1] && r >= e[o] && (n = !0);
  }), n;
}
function bw(t) {
  let e = [];
  for (let n = t.length - 1; n >= 0 && e.length == 0; n--)
    t[n].forEach((i, r, o, s) => e.push(o, s));
  return e;
}
function cm(t, e) {
  if (!t)
    return null;
  let n = [];
  for (let i = 0; i < t.length; i += 2) {
    let r = e.map(t[i], 1), o = e.map(t[i + 1], -1);
    r <= o && n.push(r, o);
  }
  return n;
}
function LB(t, e, n) {
  let i = fu(e), r = na.get(e).spec.config, o = (n ? t.undone : t.done).popEvent(e, i);
  if (!o)
    return null;
  let s = o.selection.resolve(o.transform.doc), a = (n ? t.done : t.undone).addTransform(o.transform, e.selection.getBookmark(), r, i), l = new Go(n ? a : o.remaining, n ? o.remaining : a, null, 0, -1);
  return o.transform.setSelection(s).setMeta(na, { redo: n, historyState: l });
}
let fm = !1, kw = null;
function fu(t) {
  let e = t.plugins;
  if (kw != e) {
    fm = !1, kw = e;
    for (let n = 0; n < e.length; n++)
      if (e[n].spec.historyPreserveItems) {
        fm = !0;
        break;
      }
  }
  return fm;
}
const na = new Ct("history"), DB = new Ct("closeHistory");
function PB(t = {}) {
  return t = {
    depth: t.depth || 100,
    newGroupDelay: t.newGroupDelay || 500
  }, new mt({
    key: na,
    state: {
      init() {
        return new Go(Qi.empty, Qi.empty, null, 0, -1);
      },
      apply(e, n, i) {
        return RB(n, i, e, t);
      }
    },
    config: t,
    props: {
      handleDOMEvents: {
        beforeinput(e, n) {
          let i = n.inputType, r = i == "historyUndo" ? fE : i == "historyRedo" ? dE : null;
          return r ? (n.preventDefault(), r(e.state, e.dispatch)) : !1;
        }
      }
    }
  });
}
function cE(t, e) {
  return (n, i) => {
    let r = na.getState(n);
    if (!r || (t ? r.undone : r.done).eventCount == 0)
      return !1;
    if (i) {
      let o = LB(r, n, t);
      o && i(e ? o.scrollIntoView() : o);
    }
    return !0;
  };
}
const fE = cE(!1, !0), dE = cE(!0, !0), FB = At.create({
  name: "history",
  addOptions() {
    return {
      depth: 100,
      newGroupDelay: 500
    };
  },
  addCommands() {
    return {
      undo: () => ({ state: t, dispatch: e }) => fE(t, e),
      redo: () => ({ state: t, dispatch: e }) => dE(t, e)
    };
  },
  addProseMirrorPlugins() {
    return [
      PB(this.options)
    ];
  },
  addKeyboardShortcuts() {
    return {
      "Mod-z": () => this.editor.commands.undo(),
      "Shift-Mod-z": () => this.editor.commands.redo(),
      "Mod-y": () => this.editor.commands.redo(),
      // Russian keyboard layouts
      "Mod-я": () => this.editor.commands.undo(),
      "Shift-Mod-я": () => this.editor.commands.redo()
    };
  }
}), BB = "aaa1rp3bb0ott3vie4c1le2ogado5udhabi7c0ademy5centure6ountant0s9o1tor4d0s1ult4e0g1ro2tna4f0l1rica5g0akhan5ency5i0g1rbus3force5tel5kdn3l0ibaba4pay4lfinanz6state5y2sace3tom5m0azon4ericanexpress7family11x2fam3ica3sterdam8nalytics7droid5quan4z2o0l2partments8p0le4q0uarelle8r0ab1mco4chi3my2pa2t0e3s0da2ia2sociates9t0hleta5torney7u0ction5di0ble3o3spost5thor3o0s4vianca6w0s2x0a2z0ure5ba0by2idu3namex3narepublic11d1k2r0celona5laycard4s5efoot5gains6seball5ketball8uhaus5yern5b0c1t1va3cg1n2d1e0ats2uty4er2ntley5rlin4st0buy5t2f1g1h0arti5i0ble3d1ke2ng0o3o1z2j1lack0friday9ockbuster8g1omberg7ue3m0s1w2n0pparibas9o0ats3ehringer8fa2m1nd2o0k0ing5sch2tik2on4t1utique6x2r0adesco6idgestone9oadway5ker3ther5ussels7s1t1uild0ers6siness6y1zz3v1w1y1z0h3ca0b1fe2l0l1vinklein9m0era3p2non3petown5ital0one8r0avan4ds2e0er0s4s2sa1e1h1ino4t0ering5holic7ba1n1re3c1d1enter4o1rn3f0a1d2g1h0anel2nel4rity4se2t2eap3intai5ristmas6ome4urch5i0priani6rcle4sco3tadel4i0c2y3k1l0aims4eaning6ick2nic1que6othing5ud3ub0med6m1n1o0ach3des3ffee4llege4ogne5m0cast4mbank4unity6pany2re3uter5sec4ndos3struction8ulting7tact3ractors9oking4l1p2rsica5untry4pon0s4rses6pa2r0edit0card4union9icket5own3s1uise0s6u0isinella9v1w1x1y0mru3ou3z2dabur3d1nce3ta1e1ing3sun4y2clk3ds2e0al0er2s3gree4livery5l1oitte5ta3mocrat6ntal2ist5si0gn4v2hl2iamonds6et2gital5rect0ory7scount3ver5h2y2j1k1m1np2o0cs1tor4g1mains5t1wnload7rive4tv2ubai3nlop4pont4rban5vag2r2z2earth3t2c0o2deka3u0cation8e1g1mail3erck5nergy4gineer0ing9terprises10pson4quipment8r0icsson6ni3s0q1tate5t1u0rovision8s2vents5xchange6pert3osed4ress5traspace10fage2il1rwinds6th3mily4n0s2rm0ers5shion4t3edex3edback6rrari3ero6i0delity5o2lm2nal1nce1ial7re0stone6mdale6sh0ing5t0ness6j1k1lickr3ghts4r2orist4wers5y2m1o0o0d1tball6rd1ex2sale4um3undation8x2r0ee1senius7l1ogans4ntier7tr2ujitsu5n0d2rniture7tbol5yi3ga0l0lery3o1up4me0s3p1rden4y2b0iz3d0n2e0a1nt0ing5orge5f1g0ee3h1i0ft0s3ves2ing5l0ass3e1obal2o4m0ail3bh2o1x2n1odaddy5ld0point6f2o0dyear5g0le4p1t1v2p1q1r0ainger5phics5tis4een3ipe3ocery4up4s1t1u0ardian6cci3ge2ide2tars5ru3w1y2hair2mburg5ngout5us3bo2dfc0bank7ealth0care8lp1sinki6re1mes5iphop4samitsu7tachi5v2k0t2m1n1ockey4ldings5iday5medepot5goods5s0ense7nda3rse3spital5t0ing5t0els3mail5use3w2r1sbc3t1u0ghes5yatt3undai7ibm2cbc2e1u2d1e0ee3fm2kano4l1m0amat4db2mo0bilien9n0c1dustries8finiti5o2g1k1stitute6urance4e4t0ernational10uit4vestments10o1piranga7q1r0ish4s0maili5t0anbul7t0au2v3jaguar4va3cb2e0ep2tzt3welry6io2ll2m0p2nj2o0bs1urg4t1y2p0morgan6rs3uegos4niper7kaufen5ddi3e0rryhotels6logistics9properties14fh2g1h1i0a1ds2m1ndle4tchen5wi3m1n1oeln3matsu5sher5p0mg2n2r0d1ed3uokgroup8w1y0oto4z2la0caixa5mborghini8er3ncaster6d0rover6xess5salle5t0ino3robe5w0yer5b1c1ds2ease3clerc5frak4gal2o2xus4gbt3i0dl2fe0insurance9style7ghting6ke2lly3mited4o2ncoln4k2psy3ve1ing5k1lc1p2oan0s3cker3us3l1ndon4tte1o3ve3pl0financial11r1s1t0d0a3u0ndbeck6xe1ury5v1y2ma0drid4if1son4keup4n0agement7go3p1rket0ing3s4riott5shalls7ttel5ba2c0kinsey7d1e0d0ia3et2lbourne7me1orial6n0u2rckmsd7g1h1iami3crosoft7l1ni1t2t0subishi9k1l0b1s2m0a2n1o0bi0le4da2e1i1m1nash3ey2ster5rmon3tgage6scow4to0rcycles9v0ie4p1q1r1s0d2t0n1r2u0seum3ic4v1w1x1y1z2na0b1goya4me2tura4vy3ba2c1e0c1t0bank4flix4work5ustar5w0s2xt0direct7us4f0l2g0o2hk2i0co2ke1on3nja3ssan1y5l1o0kia3rton4w0ruz3tv4p1r0a1w2tt2u1yc2z2obi1server7ffice5kinawa6layan0group9dnavy5lo3m0ega4ne1g1l0ine5oo2pen3racle3nge4g0anic5igins6saka4tsuka4t2vh3pa0ge2nasonic7ris2s1tners4s1y3y2ccw3e0t2f0izer5g1h0armacy6d1ilips5one2to0graphy6s4ysio5ics1tet2ures6d1n0g1k2oneer5zza4k1l0ace2y0station9umbing5s3m1n0c2ohl2ker3litie5rn2st3r0america6xi3ess3ime3o0d0uctions8f1gressive8mo2perties3y5tection8u0dential9s1t1ub2w0c2y2qa1pon3uebec3st5racing4dio4e0ad1lestate6tor2y4cipes5d0stone5umbrella9hab3ise0n3t2liance6n0t0als5pair3ort3ublican8st0aurant8view0s5xroth6ich0ardli6oh3l1o1p2o0cks3deo3gers4om3s0vp3u0gby3hr2n2w0e2yukyu6sa0arland6fe0ty4kura4le1on3msclub4ung5ndvik0coromant12ofi4p1rl2s1ve2xo3b0i1s2c0a1b1haeffler7midt4olarships8ol3ule3warz5ience5ot3d1e0arch3t2cure1ity6ek2lect4ner3rvices6ven3w1x0y3fr2g1h0angrila6rp2w2ell3ia1ksha5oes2p0ping5uji3w3i0lk2na1gles5te3j1k0i0n2y0pe4l0ing4m0art3ile4n0cf3o0ccer3ial4ftbank4ware6hu2lar2utions7ng1y2y2pa0ce3ort2t3r0l2s1t0ada2ples4r1tebank4farm7c0group6ockholm6rage3e3ream4udio2y3yle4u0cks3pplies3y2ort5rf1gery5zuki5v1watch4iss4x1y0dney4stems6z2tab1ipei4lk2obao4rget4tamotors6r2too4x0i3c0i2d0k2eam2ch0nology8l1masek5nnis4va3f1g1h0d1eater2re6iaa2ckets5enda4ps2res2ol4j0maxx4x2k0maxx5l1m0all4n1o0day3kyo3ols3p1ray3shiba5tal3urs3wn2yota3s3r0ade1ing4ining5vel0ers0insurance16ust3v2t1ube2i1nes3shu4v0s2w1z2ua1bank3s2g1k1nicom3versity8o2ol2ps2s1y1z2va0cations7na1guard7c1e0gas3ntures6risign5mögensberater2ung14sicherung10t2g1i0ajes4deo3g1king4llas4n1p1rgin4sa1ion4va1o3laanderen9n1odka3lvo3te1ing3o2yage5u2wales2mart4ter4ng0gou5tch0es6eather0channel12bcam3er2site5d0ding5ibo2r3f1hoswho6ien2ki2lliamhill9n0dows4e1ners6me2olterskluwer11odside6rk0s2ld3w2s1tc1f3xbox3erox4finity6ihuan4n2xx2yz3yachts4hoo3maxun5ndex5e1odobashi7ga2kohama6u0tube6t1un3za0ppos4ra3ero3ip2m1one3uerich6w2", HB = "ελ1υ2бг1ел3дети4ею2католик6ом3мкд2он1сква6онлайн5рг3рус2ф2сайт3рб3укр3қаз3հայ3ישראל5קום3ابوظبي5رامكو5لاردن4بحرين5جزائر5سعودية6عليان5مغرب5مارات5یران5بارت2زار4يتك3ھارت5تونس4سودان3رية5شبكة4عراق2ب2مان4فلسطين6قطر3كاثوليك6وم3مصر2ليسيا5وريتانيا7قع4همراه5پاکستان7ڀارت4कॉम3नेट3भारत0म्3ोत5संगठन5বাংলা5ভারত2ৰত4ਭਾਰਤ4ભારત4ଭାରତ4இந்தியா6லங்கை6சிங்கப்பூர்11భారత్5ಭಾರತ4ഭാരതം5ලංකා4คอม3ไทย3ລາວ3გე2みんな3アマゾン4クラウド4グーグル4コム2ストア3セール3ファッション6ポイント4世界2中信1国1國1文网3亚马逊3企业2佛山2信息2健康2八卦2公司1益2台湾1灣2商城1店1标2嘉里0大酒店5在线2大拿2天主教3娱乐2家電2广东2微博2慈善2我爱你3手机2招聘2政务1府2新加坡2闻2时尚2書籍2机构2淡马锡3游戏2澳門2点看2移动2组织机构4网址1店1站1络2联通2谷歌2购物2通販2集团2電訊盈科4飞利浦3食品2餐厅2香格里拉3港2닷넷1컴2삼성2한국2", El = (t, e) => {
  for (const n in e)
    t[n] = e[n];
  return t;
}, vg = "numeric", bg = "ascii", kg = "alpha", du = "asciinumeric", md = "alphanumeric", wg = "domain", uE = "emoji", $B = "scheme", jB = "slashscheme", ww = "whitespace";
function zB(t, e) {
  return t in e || (e[t] = []), e[t];
}
function Ys(t, e, n) {
  e[vg] && (e[du] = !0, e[md] = !0), e[bg] && (e[du] = !0, e[kg] = !0), e[du] && (e[md] = !0), e[kg] && (e[md] = !0), e[md] && (e[wg] = !0), e[uE] && (e[wg] = !0);
  for (const i in e) {
    const r = zB(i, n);
    r.indexOf(t) < 0 && r.push(t);
  }
}
function UB(t, e) {
  const n = {};
  for (const i in e)
    e[i].indexOf(t) >= 0 && (n[i] = !0);
  return n;
}
function ni(t) {
  t === void 0 && (t = null), this.j = {}, this.jr = [], this.jd = null, this.t = t;
}
ni.groups = {};
ni.prototype = {
  accepts() {
    return !!this.t;
  },
  /**
   * Follow an existing transition from the given input to the next state.
   * Does not mutate.
   * @param {string} input character or token type to transition on
   * @returns {?State<T>} the next state, if any
   */
  go(t) {
    const e = this, n = e.j[t];
    if (n)
      return n;
    for (let i = 0; i < e.jr.length; i++) {
      const r = e.jr[i][0], o = e.jr[i][1];
      if (o && r.test(t))
        return o;
    }
    return e.jd;
  },
  /**
   * Whether the state has a transition for the given input. Set the second
   * argument to true to only look for an exact match (and not a default or
   * regular-expression-based transition)
   * @param {string} input
   * @param {boolean} exactOnly
   */
  has(t, e) {
    return e === void 0 && (e = !1), e ? t in this.j : !!this.go(t);
  },
  /**
   * Short for "transition all"; create a transition from the array of items
   * in the given list to the same final resulting state.
   * @param {string | string[]} inputs Group of inputs to transition on
   * @param {Transition<T> | State<T>} [next] Transition options
   * @param {Flags} [flags] Collections flags to add token to
   * @param {Collections<T>} [groups] Master list of token groups
   */
  ta(t, e, n, i) {
    for (let r = 0; r < t.length; r++)
      this.tt(t[r], e, n, i);
  },
  /**
   * Short for "take regexp transition"; defines a transition for this state
   * when it encounters a token which matches the given regular expression
   * @param {RegExp} regexp Regular expression transition (populate first)
   * @param {T | State<T>} [next] Transition options
   * @param {Flags} [flags] Collections flags to add token to
   * @param {Collections<T>} [groups] Master list of token groups
   * @returns {State<T>} taken after the given input
   */
  tr(t, e, n, i) {
    i = i || ni.groups;
    let r;
    return e && e.j ? r = e : (r = new ni(e), n && i && Ys(e, n, i)), this.jr.push([t, r]), r;
  },
  /**
   * Short for "take transitions", will take as many sequential transitions as
   * the length of the given input and returns the
   * resulting final state.
   * @param {string | string[]} input
   * @param {T | State<T>} [next] Transition options
   * @param {Flags} [flags] Collections flags to add token to
   * @param {Collections<T>} [groups] Master list of token groups
   * @returns {State<T>} taken after the given input
   */
  ts(t, e, n, i) {
    let r = this;
    const o = t.length;
    if (!o)
      return r;
    for (let s = 0; s < o - 1; s++)
      r = r.tt(t[s]);
    return r.tt(t[o - 1], e, n, i);
  },
  /**
   * Short for "take transition", this is a method for building/working with
   * state machines.
   *
   * If a state already exists for the given input, returns it.
   *
   * If a token is specified, that state will emit that token when reached by
   * the linkify engine.
   *
   * If no state exists, it will be initialized with some default transitions
   * that resemble existing default transitions.
   *
   * If a state is given for the second argument, that state will be
   * transitioned to on the given input regardless of what that input
   * previously did.
   *
   * Specify a token group flags to define groups that this token belongs to.
   * The token will be added to corresponding entires in the given groups
   * object.
   *
   * @param {string} input character, token type to transition on
   * @param {T | State<T>} [next] Transition options
   * @param {Flags} [flags] Collections flags to add token to
   * @param {Collections<T>} [groups] Master list of groups
   * @returns {State<T>} taken after the given input
   */
  tt(t, e, n, i) {
    i = i || ni.groups;
    const r = this;
    if (e && e.j)
      return r.j[t] = e, e;
    const o = e;
    let s, a = r.go(t);
    if (a ? (s = new ni(), El(s.j, a.j), s.jr.push.apply(s.jr, a.jr), s.jd = a.jd, s.t = a.t) : s = new ni(), o) {
      if (i)
        if (s.t && typeof s.t == "string") {
          const l = El(UB(s.t, i), n);
          Ys(o, l, i);
        } else n && Ys(o, n, i);
      s.t = o;
    }
    return r.j[t] = s, s;
  }
};
const nt = (t, e, n, i, r) => t.ta(e, n, i, r), bi = (t, e, n, i, r) => t.tr(e, n, i, r), _w = (t, e, n, i, r) => t.ts(e, n, i, r), we = (t, e, n, i, r) => t.tt(e, n, i, r), no = "WORD", _g = "UWORD", mf = "LOCALHOST", Eg = "TLD", Tg = "UTLD", uu = "SCHEME", ja = "SLASH_SCHEME", gv = "NUM", hE = "WS", yv = "NL", Lc = "OPENBRACE", Dc = "CLOSEBRACE", n1 = "OPENBRACKET", i1 = "CLOSEBRACKET", r1 = "OPENPAREN", o1 = "CLOSEPAREN", s1 = "OPENANGLEBRACKET", a1 = "CLOSEANGLEBRACKET", l1 = "FULLWIDTHLEFTPAREN", c1 = "FULLWIDTHRIGHTPAREN", f1 = "LEFTCORNERBRACKET", d1 = "RIGHTCORNERBRACKET", u1 = "LEFTWHITECORNERBRACKET", h1 = "RIGHTWHITECORNERBRACKET", p1 = "FULLWIDTHLESSTHAN", m1 = "FULLWIDTHGREATERTHAN", g1 = "AMPERSAND", y1 = "APOSTROPHE", v1 = "ASTERISK", Ko = "AT", b1 = "BACKSLASH", k1 = "BACKTICK", w1 = "CARET", ts = "COLON", vv = "COMMA", _1 = "DOLLAR", vr = "DOT", E1 = "EQUALS", bv = "EXCLAMATION", br = "HYPHEN", T1 = "PERCENT", C1 = "PIPE", S1 = "PLUS", x1 = "POUND", A1 = "QUERY", kv = "QUOTE", wv = "SEMI", kr = "SLASH", Pc = "TILDE", M1 = "UNDERSCORE", pE = "EMOJI", N1 = "SYM";
var mE = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  WORD: no,
  UWORD: _g,
  LOCALHOST: mf,
  TLD: Eg,
  UTLD: Tg,
  SCHEME: uu,
  SLASH_SCHEME: ja,
  NUM: gv,
  WS: hE,
  NL: yv,
  OPENBRACE: Lc,
  CLOSEBRACE: Dc,
  OPENBRACKET: n1,
  CLOSEBRACKET: i1,
  OPENPAREN: r1,
  CLOSEPAREN: o1,
  OPENANGLEBRACKET: s1,
  CLOSEANGLEBRACKET: a1,
  FULLWIDTHLEFTPAREN: l1,
  FULLWIDTHRIGHTPAREN: c1,
  LEFTCORNERBRACKET: f1,
  RIGHTCORNERBRACKET: d1,
  LEFTWHITECORNERBRACKET: u1,
  RIGHTWHITECORNERBRACKET: h1,
  FULLWIDTHLESSTHAN: p1,
  FULLWIDTHGREATERTHAN: m1,
  AMPERSAND: g1,
  APOSTROPHE: y1,
  ASTERISK: v1,
  AT: Ko,
  BACKSLASH: b1,
  BACKTICK: k1,
  CARET: w1,
  COLON: ts,
  COMMA: vv,
  DOLLAR: _1,
  DOT: vr,
  EQUALS: E1,
  EXCLAMATION: bv,
  HYPHEN: br,
  PERCENT: T1,
  PIPE: C1,
  PLUS: S1,
  POUND: x1,
  QUERY: A1,
  QUOTE: kv,
  SEMI: wv,
  SLASH: kr,
  TILDE: Pc,
  UNDERSCORE: M1,
  EMOJI: pE,
  SYM: N1
});
const Na = /[a-z]/, dm = new RegExp("\\p{L}", "u"), um = new RegExp("\\p{Emoji}", "u"), hm = /\d/, Ew = /\s/, Tw = `
`, VB = "️", WB = "‍";
let gd = null, yd = null;
function qB(t) {
  t === void 0 && (t = []);
  const e = {};
  ni.groups = e;
  const n = new ni();
  gd == null && (gd = Cw(BB)), yd == null && (yd = Cw(HB)), we(n, "'", y1), we(n, "{", Lc), we(n, "}", Dc), we(n, "[", n1), we(n, "]", i1), we(n, "(", r1), we(n, ")", o1), we(n, "<", s1), we(n, ">", a1), we(n, "（", l1), we(n, "）", c1), we(n, "「", f1), we(n, "」", d1), we(n, "『", u1), we(n, "』", h1), we(n, "＜", p1), we(n, "＞", m1), we(n, "&", g1), we(n, "*", v1), we(n, "@", Ko), we(n, "`", k1), we(n, "^", w1), we(n, ":", ts), we(n, ",", vv), we(n, "$", _1), we(n, ".", vr), we(n, "=", E1), we(n, "!", bv), we(n, "-", br), we(n, "%", T1), we(n, "|", C1), we(n, "+", S1), we(n, "#", x1), we(n, "?", A1), we(n, '"', kv), we(n, "/", kr), we(n, ";", wv), we(n, "~", Pc), we(n, "_", M1), we(n, "\\", b1);
  const i = bi(n, hm, gv, {
    [vg]: !0
  });
  bi(i, hm, i);
  const r = bi(n, Na, no, {
    [bg]: !0
  });
  bi(r, Na, r);
  const o = bi(n, dm, _g, {
    [kg]: !0
  });
  bi(o, Na), bi(o, dm, o);
  const s = bi(n, Ew, hE, {
    [ww]: !0
  });
  we(n, Tw, yv, {
    [ww]: !0
  }), we(s, Tw), bi(s, Ew, s);
  const a = bi(n, um, pE, {
    [uE]: !0
  });
  bi(a, um, a), we(a, VB, a);
  const l = we(a, WB);
  bi(l, um, a);
  const c = [[Na, r]], f = [[Na, null], [dm, o]];
  for (let d = 0; d < gd.length; d++)
    Fo(n, gd[d], Eg, no, c);
  for (let d = 0; d < yd.length; d++)
    Fo(n, yd[d], Tg, _g, f);
  Ys(Eg, {
    tld: !0,
    ascii: !0
  }, e), Ys(Tg, {
    utld: !0,
    alpha: !0
  }, e), Fo(n, "file", uu, no, c), Fo(n, "mailto", uu, no, c), Fo(n, "http", ja, no, c), Fo(n, "https", ja, no, c), Fo(n, "ftp", ja, no, c), Fo(n, "ftps", ja, no, c), Ys(uu, {
    scheme: !0,
    ascii: !0
  }, e), Ys(ja, {
    slashscheme: !0,
    ascii: !0
  }, e), t = t.sort((d, u) => d[0] > u[0] ? 1 : -1);
  for (let d = 0; d < t.length; d++) {
    const u = t[d][0], p = t[d][1] ? {
      [$B]: !0
    } : {
      [jB]: !0
    };
    u.indexOf("-") >= 0 ? p[wg] = !0 : Na.test(u) ? hm.test(u) ? p[du] = !0 : p[bg] = !0 : p[vg] = !0, _w(n, u, u, p);
  }
  return _w(n, "localhost", mf, {
    ascii: !0
  }), n.jd = new ni(N1), {
    start: n,
    tokens: El({
      groups: e
    }, mE)
  };
}
function GB(t, e) {
  const n = KB(e.replace(/[A-Z]/g, (a) => a.toLowerCase())), i = n.length, r = [];
  let o = 0, s = 0;
  for (; s < i; ) {
    let a = t, l = null, c = 0, f = null, d = -1, u = -1;
    for (; s < i && (l = a.go(n[s])); )
      a = l, a.accepts() ? (d = 0, u = 0, f = a) : d >= 0 && (d += n[s].length, u++), c += n[s].length, o += n[s].length, s++;
    o -= d, s -= u, c -= d, r.push({
      t: f.t,
      // token type/name
      v: e.slice(o - c, o),
      // string value
      s: o - c,
      // start index
      e: o
      // end index (excluding)
    });
  }
  return r;
}
function KB(t) {
  const e = [], n = t.length;
  let i = 0;
  for (; i < n; ) {
    let r = t.charCodeAt(i), o, s = r < 55296 || r > 56319 || i + 1 === n || (o = t.charCodeAt(i + 1)) < 56320 || o > 57343 ? t[i] : t.slice(i, i + 2);
    e.push(s), i += s.length;
  }
  return e;
}
function Fo(t, e, n, i, r) {
  let o;
  const s = e.length;
  for (let a = 0; a < s - 1; a++) {
    const l = e[a];
    t.j[l] ? o = t.j[l] : (o = new ni(i), o.jr = r.slice(), t.j[l] = o), t = o;
  }
  return o = new ni(n), o.jr = r.slice(), t.j[e[s - 1]] = o, o;
}
function Cw(t) {
  const e = [], n = [];
  let i = 0, r = "0123456789";
  for (; i < t.length; ) {
    let o = 0;
    for (; r.indexOf(t[i + o]) >= 0; )
      o++;
    if (o > 0) {
      e.push(n.join(""));
      for (let s = parseInt(t.substring(i, i + o), 10); s > 0; s--)
        n.pop();
      i += o;
    } else
      n.push(t[i]), i++;
  }
  return e;
}
const gf = {
  defaultProtocol: "http",
  events: null,
  format: Sw,
  formatHref: Sw,
  nl2br: !1,
  tagName: "a",
  target: null,
  rel: null,
  validate: !0,
  truncate: 1 / 0,
  className: null,
  attributes: null,
  ignoreTags: [],
  render: null
};
function _v(t, e) {
  e === void 0 && (e = null);
  let n = El({}, gf);
  t && (n = El(n, t instanceof _v ? t.o : t));
  const i = n.ignoreTags, r = [];
  for (let o = 0; o < i.length; o++)
    r.push(i[o].toUpperCase());
  this.o = n, e && (this.defaultRender = e), this.ignoreTags = r;
}
_v.prototype = {
  o: gf,
  /**
   * @type string[]
   */
  ignoreTags: [],
  /**
   * @param {IntermediateRepresentation} ir
   * @returns {any}
   */
  defaultRender(t) {
    return t;
  },
  /**
   * Returns true or false based on whether a token should be displayed as a
   * link based on the user options.
   * @param {MultiToken} token
   * @returns {boolean}
   */
  check(t) {
    return this.get("validate", t.toString(), t);
  },
  // Private methods
  /**
   * Resolve an option's value based on the value of the option and the given
   * params. If operator and token are specified and the target option is
   * callable, automatically calls the function with the given argument.
   * @template {keyof Opts} K
   * @param {K} key Name of option to use
   * @param {string} [operator] will be passed to the target option if it's a
   * function. If not specified, RAW function value gets returned
   * @param {MultiToken} [token] The token from linkify.tokenize
   * @returns {Opts[K] | any}
   */
  get(t, e, n) {
    const i = e != null;
    let r = this.o[t];
    return r && (typeof r == "object" ? (r = n.t in r ? r[n.t] : gf[t], typeof r == "function" && i && (r = r(e, n))) : typeof r == "function" && i && (r = r(e, n.t, n)), r);
  },
  /**
   * @template {keyof Opts} L
   * @param {L} key Name of options object to use
   * @param {string} [operator]
   * @param {MultiToken} [token]
   * @returns {Opts[L] | any}
   */
  getObj(t, e, n) {
    let i = this.o[t];
    return typeof i == "function" && e != null && (i = i(e, n.t, n)), i;
  },
  /**
   * Convert the given token to a rendered element that may be added to the
   * calling-interface's DOM
   * @param {MultiToken} token Token to render to an HTML element
   * @returns {any} Render result; e.g., HTML string, DOM element, React
   *   Component, etc.
   */
  render(t) {
    const e = t.render(this);
    return (this.get("render", null, t) || this.defaultRender)(e, t.t, t);
  }
};
function Sw(t) {
  return t;
}
function gE(t, e) {
  this.t = "token", this.v = t, this.tk = e;
}
gE.prototype = {
  isLink: !1,
  /**
   * Return the string this token represents.
   * @return {string}
   */
  toString() {
    return this.v;
  },
  /**
   * What should the value for this token be in the `href` HTML attribute?
   * Returns the `.toString` value by default.
   * @param {string} [scheme]
   * @return {string}
  */
  toHref(t) {
    return this.toString();
  },
  /**
   * @param {Options} options Formatting options
   * @returns {string}
   */
  toFormattedString(t) {
    const e = this.toString(), n = t.get("truncate", e, this), i = t.get("format", e, this);
    return n && i.length > n ? i.substring(0, n) + "…" : i;
  },
  /**
   *
   * @param {Options} options
   * @returns {string}
   */
  toFormattedHref(t) {
    return t.get("formatHref", this.toHref(t.get("defaultProtocol")), this);
  },
  /**
   * The start index of this token in the original input string
   * @returns {number}
   */
  startIndex() {
    return this.tk[0].s;
  },
  /**
   * The end index of this token in the original input string (up to this
   * index but not including it)
   * @returns {number}
   */
  endIndex() {
    return this.tk[this.tk.length - 1].e;
  },
  /**
  	Returns an object  of relevant values for this token, which includes keys
  	* type - Kind of token ('url', 'email', etc.)
  	* value - Original text
  	* href - The value that should be added to the anchor tag's href
  		attribute
  		@method toObject
  	@param {string} [protocol] `'http'` by default
  */
  toObject(t) {
    return t === void 0 && (t = gf.defaultProtocol), {
      type: this.t,
      value: this.toString(),
      isLink: this.isLink,
      href: this.toHref(t),
      start: this.startIndex(),
      end: this.endIndex()
    };
  },
  /**
   *
   * @param {Options} options Formatting option
   */
  toFormattedObject(t) {
    return {
      type: this.t,
      value: this.toFormattedString(t),
      isLink: this.isLink,
      href: this.toFormattedHref(t),
      start: this.startIndex(),
      end: this.endIndex()
    };
  },
  /**
   * Whether this token should be rendered as a link according to the given options
   * @param {Options} options
   * @returns {boolean}
   */
  validate(t) {
    return t.get("validate", this.toString(), this);
  },
  /**
   * Return an object that represents how this link should be rendered.
   * @param {Options} options Formattinng options
   */
  render(t) {
    const e = this, n = this.toHref(t.get("defaultProtocol")), i = t.get("formatHref", n, this), r = t.get("tagName", n, e), o = this.toFormattedString(t), s = {}, a = t.get("className", n, e), l = t.get("target", n, e), c = t.get("rel", n, e), f = t.getObj("attributes", n, e), d = t.getObj("events", n, e);
    return s.href = i, a && (s.class = a), l && (s.target = l), c && (s.rel = c), f && El(s, f), {
      tagName: r,
      attributes: s,
      content: o,
      eventListeners: d
    };
  }
};
function Lh(t, e) {
  class n extends gE {
    constructor(r, o) {
      super(r, o), this.t = t;
    }
  }
  for (const i in e)
    n.prototype[i] = e[i];
  return n.t = t, n;
}
const xw = Lh("email", {
  isLink: !0,
  toHref() {
    return "mailto:" + this.toString();
  }
}), Aw = Lh("text"), YB = Lh("nl"), vd = Lh("url", {
  isLink: !0,
  /**
  	Lowercases relevant parts of the domain and adds the protocol if
  	required. Note that this will not escape unsafe HTML characters in the
  	URL.
  		@param {string} [scheme] default scheme (e.g., 'https')
  	@return {string} the full href
  */
  toHref(t) {
    return t === void 0 && (t = gf.defaultProtocol), this.hasProtocol() ? this.v : `${t}://${this.v}`;
  },
  /**
   * Check whether this URL token has a protocol
   * @return {boolean}
   */
  hasProtocol() {
    const t = this.tk;
    return t.length >= 2 && t[0].t !== mf && t[1].t === ts;
  }
}), ki = (t) => new ni(t);
function JB(t) {
  let {
    groups: e
  } = t;
  const n = e.domain.concat([g1, v1, Ko, b1, k1, w1, _1, E1, br, gv, T1, C1, S1, x1, kr, N1, Pc, M1]), i = [y1, ts, vv, vr, bv, A1, kv, wv, s1, a1, Lc, Dc, i1, n1, r1, o1, l1, c1, f1, d1, u1, h1, p1, m1], r = [g1, y1, v1, b1, k1, w1, _1, E1, br, Lc, Dc, T1, C1, S1, x1, A1, kr, N1, Pc, M1], o = ki(), s = we(o, Pc);
  nt(s, r, s), nt(s, e.domain, s);
  const a = ki(), l = ki(), c = ki();
  nt(o, e.domain, a), nt(o, e.scheme, l), nt(o, e.slashscheme, c), nt(a, r, s), nt(a, e.domain, a);
  const f = we(a, Ko);
  we(s, Ko, f), we(l, Ko, f), we(c, Ko, f);
  const d = we(s, vr);
  nt(d, r, s), nt(d, e.domain, s);
  const u = ki();
  nt(f, e.domain, u), nt(u, e.domain, u);
  const h = we(u, vr);
  nt(h, e.domain, u);
  const p = ki(xw);
  nt(h, e.tld, p), nt(h, e.utld, p), we(f, mf, p);
  const m = we(u, br);
  nt(m, e.domain, u), nt(p, e.domain, u), we(p, vr, h), we(p, br, m);
  const v = we(p, ts);
  nt(v, e.numeric, xw);
  const y = we(a, br), C = we(a, vr);
  nt(y, e.domain, a), nt(C, r, s), nt(C, e.domain, a);
  const k = ki(vd);
  nt(C, e.tld, k), nt(C, e.utld, k), nt(k, e.domain, a), nt(k, r, s), we(k, vr, C), we(k, br, y), we(k, Ko, f);
  const _ = we(k, ts), S = ki(vd);
  nt(_, e.numeric, S);
  const E = ki(vd), x = ki();
  nt(E, n, E), nt(E, i, x), nt(x, n, E), nt(x, i, x), we(k, kr, E), we(S, kr, E);
  const N = we(l, ts), R = we(c, ts), A = we(R, kr), O = we(A, kr);
  nt(l, e.domain, a), we(l, vr, C), we(l, br, y), nt(c, e.domain, a), we(c, vr, C), we(c, br, y), nt(N, e.domain, E), we(N, kr, E), nt(O, e.domain, E), nt(O, n, E), we(O, kr, E);
  const B = [
    [Lc, Dc],
    // {}
    [n1, i1],
    // []
    [r1, o1],
    // ()
    [s1, a1],
    // <>
    [l1, c1],
    // （）
    [f1, d1],
    // 「」
    [u1, h1],
    // 『』
    [p1, m1]
    // ＜＞
  ];
  for (let U = 0; U < B.length; U++) {
    const [K, G] = B[U], J = we(E, K);
    we(x, K, J), we(J, G, E);
    const te = ki(vd);
    nt(J, n, te);
    const re = ki();
    nt(J, i), nt(te, n, te), nt(te, i, re), nt(re, n, te), nt(re, i, re), we(te, G, E), we(re, G, E);
  }
  return we(o, mf, k), we(o, yv, YB), {
    start: o,
    tokens: mE
  };
}
function XB(t, e, n) {
  let i = n.length, r = 0, o = [], s = [];
  for (; r < i; ) {
    let a = t, l = null, c = null, f = 0, d = null, u = -1;
    for (; r < i && !(l = a.go(n[r].t)); )
      s.push(n[r++]);
    for (; r < i && (c = l || a.go(n[r].t)); )
      l = null, a = c, a.accepts() ? (u = 0, d = a) : u >= 0 && u++, r++, f++;
    if (u < 0)
      r -= f, r < i && (s.push(n[r]), r++);
    else {
      s.length > 0 && (o.push(pm(Aw, e, s)), s = []), r -= u, f -= u;
      const h = d.t, p = n.slice(r - f, r);
      o.push(pm(h, e, p));
    }
  }
  return s.length > 0 && o.push(pm(Aw, e, s)), o;
}
function pm(t, e, n) {
  const i = n[0].s, r = n[n.length - 1].e, o = e.slice(i, r);
  return new t(o, n);
}
const QB = typeof console < "u" && console && console.warn || (() => {
}), ZB = "until manual call of linkify.init(). Register all schemes and plugins before invoking linkify the first time.", Wt = {
  scanner: null,
  parser: null,
  tokenQueue: [],
  pluginQueue: [],
  customSchemes: [],
  initialized: !1
};
function eH() {
  ni.groups = {}, Wt.scanner = null, Wt.parser = null, Wt.tokenQueue = [], Wt.pluginQueue = [], Wt.customSchemes = [], Wt.initialized = !1;
}
function Mw(t, e) {
  if (e === void 0 && (e = !1), Wt.initialized && QB(`linkifyjs: already initialized - will not register custom scheme "${t}" ${ZB}`), !/^[0-9a-z]+(-[0-9a-z]+)*$/.test(t))
    throw new Error(`linkifyjs: incorrect scheme format.
1. Must only contain digits, lowercase ASCII letters or "-"
2. Cannot start or end with "-"
3. "-" cannot repeat`);
  Wt.customSchemes.push([t, e]);
}
function tH() {
  Wt.scanner = qB(Wt.customSchemes);
  for (let t = 0; t < Wt.tokenQueue.length; t++)
    Wt.tokenQueue[t][1]({
      scanner: Wt.scanner
    });
  Wt.parser = JB(Wt.scanner.tokens);
  for (let t = 0; t < Wt.pluginQueue.length; t++)
    Wt.pluginQueue[t][1]({
      scanner: Wt.scanner,
      parser: Wt.parser
    });
  Wt.initialized = !0;
}
function yE(t) {
  return Wt.initialized || tH(), XB(Wt.parser.start, t, GB(Wt.scanner.start, t));
}
function vE(t, e, n) {
  if (e === void 0 && (e = null), n === void 0 && (n = null), e && typeof e == "object") {
    if (n)
      throw Error(`linkifyjs: Invalid link type ${e}; must be a string`);
    n = e, e = null;
  }
  const i = new _v(n), r = yE(t), o = [];
  for (let s = 0; s < r.length; s++) {
    const a = r[s];
    a.isLink && (!e || a.t === e) && i.check(a) && o.push(a.toFormattedObject(i));
  }
  return o;
}
function nH(t) {
  return t.length === 1 ? t[0].isLink : t.length === 3 && t[1].isLink ? ["()", "[]"].includes(t[0].value + t[2].value) : !1;
}
function iH(t) {
  return new mt({
    key: new Ct("autolink"),
    appendTransaction: (e, n, i) => {
      const r = e.some((c) => c.docChanged) && !n.doc.eq(i.doc), o = e.some((c) => c.getMeta("preventAutolink"));
      if (!r || o)
        return;
      const { tr: s } = i, a = N6(n.doc, [...e]);
      if (I6(a).forEach(({ newRange: c }) => {
        const f = O6(i.doc, c, (h) => h.isTextblock);
        let d, u;
        if (f.length > 1 ? (d = f[0], u = i.doc.textBetween(d.pos, d.pos + d.node.nodeSize, void 0, " ")) : f.length && i.doc.textBetween(c.from, c.to, " ", " ").endsWith(" ") && (d = f[0], u = i.doc.textBetween(d.pos, c.to, void 0, " ")), d && u) {
          const h = u.split(" ").filter((y) => y !== "");
          if (h.length <= 0)
            return !1;
          const p = h[h.length - 1], m = d.pos + u.lastIndexOf(p);
          if (!p)
            return !1;
          const v = yE(p).map((y) => y.toObject(t.defaultProtocol));
          if (!nH(v))
            return !1;
          v.filter((y) => y.isLink).map((y) => ({
            ...y,
            from: m + y.start + 1,
            to: m + y.end + 1
          })).filter((y) => i.schema.marks.code ? !i.doc.rangeHasMark(y.from, y.to, i.schema.marks.code) : !0).filter((y) => t.validate(y.value)).forEach((y) => {
            By(y.from, y.to, i.doc).some((C) => C.mark.type === t.type) || s.addMark(y.from, y.to, t.type.create({
              href: y.href
            }));
          });
        }
      }), !!s.steps.length)
        return s;
    }
  });
}
function rH(t) {
  return new mt({
    key: new Ct("handleClickLink"),
    props: {
      handleClick: (e, n, i) => {
        var r, o;
        if (i.button !== 0 || !e.editable)
          return !1;
        let s = i.target;
        const a = [];
        for (; s.nodeName !== "DIV"; )
          a.push(s), s = s.parentNode;
        if (!a.find((u) => u.nodeName === "A"))
          return !1;
        const l = R6(e.state, t.type.name), c = i.target, f = (r = c == null ? void 0 : c.href) !== null && r !== void 0 ? r : l.href, d = (o = c == null ? void 0 : c.target) !== null && o !== void 0 ? o : l.target;
        return c && f ? (window.open(f, d), !0) : !1;
      }
    }
  });
}
function oH(t) {
  return new mt({
    key: new Ct("handlePasteLink"),
    props: {
      handlePaste: (e, n, i) => {
        const { state: r } = e, { selection: o } = r, { empty: s } = o;
        if (s)
          return !1;
        let a = "";
        i.content.forEach((c) => {
          a += c.textContent;
        });
        const l = vE(a, { defaultProtocol: t.defaultProtocol }).find((c) => c.isLink && c.value === a);
        return !a || !l ? !1 : (t.editor.commands.setMark(t.type, {
          href: l.href
        }), !0);
      }
    }
  });
}
const sH = /[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g;
function Nw(t, e) {
  const n = ["http", "https", "ftp", "ftps", "mailto", "tel", "callto", "sms", "cid", "xmpp"];
  return e && e.forEach((i) => {
    const r = typeof i == "string" ? i : i.scheme;
    r && n.push(r);
  }), !t || t.replace(sH, "").match(new RegExp(`^(?:(?:${n.join("|")}):|[^a-z]|[a-z+.-]+(?:[^a-z+.-:]|$))`, "i"));
}
const aH = Fi.create({
  name: "link",
  priority: 1e3,
  keepOnSplit: !1,
  exitable: !0,
  onCreate() {
    this.options.protocols.forEach((t) => {
      if (typeof t == "string") {
        Mw(t);
        return;
      }
      Mw(t.scheme, t.optionalSlashes);
    });
  },
  onDestroy() {
    eH();
  },
  inclusive() {
    return this.options.autolink;
  },
  addOptions() {
    return {
      openOnClick: !0,
      linkOnPaste: !0,
      autolink: !0,
      protocols: [],
      defaultProtocol: "http",
      HTMLAttributes: {
        target: "_blank",
        rel: "noopener noreferrer nofollow",
        class: null
      },
      validate: (t) => !!t
    };
  },
  addAttributes() {
    return {
      href: {
        default: null,
        parseHTML(t) {
          return t.getAttribute("href");
        }
      },
      target: {
        default: this.options.HTMLAttributes.target
      },
      rel: {
        default: this.options.HTMLAttributes.rel
      },
      class: {
        default: this.options.HTMLAttributes.class
      }
    };
  },
  parseHTML() {
    return [{
      tag: "a[href]",
      getAttrs: (t) => {
        const e = t.getAttribute("href");
        return !e || !Nw(e, this.options.protocols) ? !1 : null;
      }
    }];
  },
  renderHTML({ HTMLAttributes: t }) {
    return Nw(t.href, this.options.protocols) ? ["a", gi(this.options.HTMLAttributes, t), 0] : ["a", gi(this.options.HTMLAttributes, { ...t, href: "" }), 0];
  },
  addCommands() {
    return {
      setLink: (t) => ({ chain: e }) => e().setMark(this.name, t).setMeta("preventAutolink", !0).run(),
      toggleLink: (t) => ({ chain: e }) => e().toggleMark(this.name, t, { extendEmptyMarkRange: !0 }).setMeta("preventAutolink", !0).run(),
      unsetLink: () => ({ chain: t }) => t().unsetMark(this.name, { extendEmptyMarkRange: !0 }).setMeta("preventAutolink", !0).run()
    };
  },
  addPasteRules() {
    return [
      la({
        find: (t) => {
          const e = [];
          if (t) {
            const { validate: n } = this.options, i = vE(t).filter((r) => r.isLink && n(r.value));
            i.length && i.forEach((r) => e.push({
              text: r.value,
              data: {
                href: r.href
              },
              index: r.start
            }));
          }
          return e;
        },
        type: this.type,
        getAttributes: (t) => {
          var e;
          return {
            href: (e = t.data) === null || e === void 0 ? void 0 : e.href
          };
        }
      })
    ];
  },
  addProseMirrorPlugins() {
    const t = [];
    return this.options.autolink && t.push(iH({
      type: this.type,
      defaultProtocol: this.options.defaultProtocol,
      validate: this.options.validate
    })), this.options.openOnClick === !0 && t.push(rH({
      type: this.type
    })), this.options.linkOnPaste && t.push(oH({
      editor: this.editor,
      defaultProtocol: this.options.defaultProtocol,
      type: this.type
    })), t;
  }
}), lH = jr.create({
  name: "text",
  group: "inline"
});
var cH = Object.defineProperty, fH = (t, e, n) => e in t ? cH(t, e, { enumerable: !0, configurable: !0, writable: !0, value: n }) : t[e] = n, ne = (t, e, n) => fH(t, typeof e != "symbol" ? e + "" : e, n);
const dH = {
  slash_menu: {
    heading: {
      title: "Heading 1",
      subtext: "Top-level heading",
      aliases: ["h", "heading1", "h1"],
      group: "Headings"
    },
    heading_2: {
      title: "Heading 2",
      subtext: "Key section heading",
      aliases: ["h2", "heading2", "subheading"],
      group: "Headings"
    },
    heading_3: {
      title: "Heading 3",
      subtext: "Subsection and group heading",
      aliases: ["h3", "heading3", "subheading"],
      group: "Headings"
    },
    numbered_list: {
      title: "Numbered List",
      subtext: "List with ordered items",
      aliases: ["ol", "li", "list", "numberedlist", "numbered list"],
      group: "Basic blocks"
    },
    bullet_list: {
      title: "Bullet List",
      subtext: "List with unordered items",
      aliases: ["ul", "li", "list", "bulletlist", "bullet list"],
      group: "Basic blocks"
    },
    check_list: {
      title: "Check List",
      subtext: "List with checkboxes",
      aliases: [
        "ul",
        "li",
        "list",
        "checklist",
        "check list",
        "checked list",
        "checkbox"
      ],
      group: "Basic blocks"
    },
    paragraph: {
      title: "Paragraph",
      subtext: "The body of your document",
      aliases: ["p", "paragraph"],
      group: "Basic blocks"
    },
    table: {
      title: "Table",
      subtext: "Table with editable cells",
      aliases: ["table"],
      group: "Advanced"
    },
    image: {
      title: "Image",
      subtext: "Resizable image with caption",
      aliases: [
        "image",
        "imageUpload",
        "upload",
        "img",
        "picture",
        "media",
        "url"
      ],
      group: "Media"
    },
    video: {
      title: "Video",
      subtext: "Resizable video with caption",
      aliases: [
        "video",
        "videoUpload",
        "upload",
        "mp4",
        "film",
        "media",
        "url"
      ],
      group: "Media"
    },
    audio: {
      title: "Audio",
      subtext: "Embedded audio with caption",
      aliases: [
        "audio",
        "audioUpload",
        "upload",
        "mp3",
        "sound",
        "media",
        "url"
      ],
      group: "Media"
    },
    file: {
      title: "File",
      subtext: "Embedded file",
      aliases: ["file", "upload", "embed", "media", "url"],
      group: "Media"
    },
    emoji: {
      title: "Emoji",
      subtext: "Search for and insert an emoji",
      aliases: ["emoji", "emote", "emotion", "face"],
      group: "Others"
    }
  },
  placeholders: {
    default: "Enter text or type '/' for commands",
    heading: "Heading",
    bulletListItem: "List",
    numberedListItem: "List",
    checkListItem: "List"
  },
  file_blocks: {
    image: {
      add_button_text: "Add image"
    },
    video: {
      add_button_text: "Add video"
    },
    audio: {
      add_button_text: "Add audio"
    },
    file: {
      add_button_text: "Add file"
    }
  },
  // from react package:
  side_menu: {
    add_block_label: "Add block",
    drag_handle_label: "Open block menu"
  },
  drag_handle: {
    delete_menuitem: "Delete",
    colors_menuitem: "Colors"
  },
  table_handle: {
    delete_column_menuitem: "Delete column",
    delete_row_menuitem: "Delete row",
    add_left_menuitem: "Add column left",
    add_right_menuitem: "Add column right",
    add_above_menuitem: "Add row above",
    add_below_menuitem: "Add row below"
  },
  suggestion_menu: {
    no_items_title: "No items found",
    loading: "Loading…"
  },
  color_picker: {
    text_title: "Text",
    background_title: "Background",
    colors: {
      default: "Default",
      gray: "Gray",
      brown: "Brown",
      red: "Red",
      orange: "Orange",
      yellow: "Yellow",
      green: "Green",
      blue: "Blue",
      purple: "Purple",
      pink: "Pink"
    }
  },
  formatting_toolbar: {
    bold: {
      tooltip: "Bold",
      secondary_tooltip: "Mod+B"
    },
    italic: {
      tooltip: "Italic",
      secondary_tooltip: "Mod+I"
    },
    underline: {
      tooltip: "Underline",
      secondary_tooltip: "Mod+U"
    },
    strike: {
      tooltip: "Strike",
      secondary_tooltip: "Mod+Shift+S"
    },
    code: {
      tooltip: "Code",
      secondary_tooltip: ""
    },
    colors: {
      tooltip: "Colors"
    },
    link: {
      tooltip: "Create link",
      secondary_tooltip: "Mod+K"
    },
    file_caption: {
      tooltip: "Edit caption",
      input_placeholder: "Edit caption"
    },
    file_replace: {
      tooltip: {
        image: "Replace image",
        video: "Replace video",
        audio: "Replace audio",
        file: "Replace file"
      }
    },
    file_rename: {
      tooltip: {
        image: "Rename image",
        video: "Rename video",
        audio: "Rename audio",
        file: "Rename file"
      },
      input_placeholder: {
        image: "Rename image",
        video: "Rename video",
        audio: "Rename audio",
        file: "Rename file"
      }
    },
    file_download: {
      tooltip: {
        image: "Download image",
        video: "Download video",
        audio: "Download audio",
        file: "Download file"
      }
    },
    file_delete: {
      tooltip: {
        image: "Delete image",
        video: "Delete video",
        audio: "Delete audio",
        file: "Delete file"
      }
    },
    file_preview_toggle: {
      tooltip: "Toggle preview"
    },
    nest: {
      tooltip: "Nest block",
      secondary_tooltip: "Tab"
    },
    unnest: {
      tooltip: "Unnest block",
      secondary_tooltip: "Shift+Tab"
    },
    align_left: {
      tooltip: "Align text left"
    },
    align_center: {
      tooltip: "Align text center"
    },
    align_right: {
      tooltip: "Align text right"
    },
    align_justify: {
      tooltip: "Justify text"
    }
  },
  file_panel: {
    upload: {
      title: "Upload",
      file_placeholder: {
        image: "Upload image",
        video: "Upload video",
        audio: "Upload audio",
        file: "Upload file"
      },
      upload_error: "Error: Upload failed"
    },
    embed: {
      title: "Embed",
      embed_button: {
        image: "Embed image",
        video: "Embed video",
        audio: "Embed audio",
        file: "Embed file"
      },
      url_placeholder: "Enter URL"
    }
  },
  link_toolbar: {
    delete: {
      tooltip: "Remove link"
    },
    edit: {
      text: "Edit link",
      tooltip: "Edit"
    },
    open: {
      tooltip: "Open in new tab"
    },
    form: {
      title_placeholder: "Edit title",
      url_placeholder: "Edit URL"
    }
  },
  generic: {
    ctrl_shortcut: "Ctrl"
  }
};
class Br extends Error {
  constructor(e) {
    super(`Unreachable case: ${e}`);
  }
}
function _t(t, e = !0) {
  const { "data-test": n, ...i } = t;
  if (Object.keys(i).length > 0 && e)
    throw new Error("Object must be empty " + JSON.stringify(t));
}
function uH(t, e = JSON.stringify) {
  const n = {};
  return t.filter((i) => {
    const r = e(i);
    return Object.prototype.hasOwnProperty.call(n, r) ? !1 : n[r] = !0;
  });
}
function hH(t) {
  const e = t.filter(
    (n, i) => t.indexOf(n) !== i
  );
  return uH(e);
}
const Dh = At.create({
  name: "uniqueID",
  // we’ll set a very high priority to make sure this runs first
  // and is compatible with `appendTransaction` hooks of other extensions
  priority: 1e4,
  addOptions() {
    return {
      attributeName: "id",
      types: [],
      setIdAttribute: !1,
      generateID: () => {
        if (typeof window < "u" && window.__TEST_OPTIONS) {
          const t = window.__TEST_OPTIONS;
          return t.mockID === void 0 ? t.mockID = 0 : t.mockID++, t.mockID.toString();
        }
        return tL();
      },
      filterTransaction: null
    };
  },
  addGlobalAttributes() {
    return [
      {
        types: this.options.types,
        attributes: {
          [this.options.attributeName]: {
            default: null,
            parseHTML: (t) => t.getAttribute(`data-${this.options.attributeName}`),
            renderHTML: (t) => {
              const e = {
                [`data-${this.options.attributeName}`]: t[this.options.attributeName]
              };
              return this.options.setIdAttribute ? {
                ...e,
                id: t[this.options.attributeName]
              } : e;
            }
          }
        }
      }
    ];
  },
  // check initial content for missing ids
  // onCreate() {
  //   // Don’t do this when the collaboration extension is active
  //   // because this may update the content, so Y.js tries to merge these changes.
  //   // This leads to empty block nodes.
  //   // See: https://github.com/ueberdosis/tiptap/issues/2400
  //   if (
  //     this.editor.extensionManager.extensions.find(
  //       (extension) => extension.name === "collaboration"
  //     )
  //   ) {
  //     return;
  //   }
  //   const { view, state } = this.editor;
  //   const { tr, doc } = state;
  //   const { types, attributeName, generateID } = this.options;
  //   const nodesWithoutId = findChildren(doc, (node) => {
  //     return (
  //       types.includes(node.type.name) && node.attrs[attributeName] === null
  //     );
  //   });
  //   nodesWithoutId.forEach(({ node, pos }) => {
  //     tr.setNodeMarkup(pos, undefined, {
  //       ...node.attrs,
  //       [attributeName]: generateID(),
  //     });
  //   });
  //   tr.setMeta("addToHistory", false);
  //   view.dispatch(tr);
  // },
  addProseMirrorPlugins() {
    let t = null, e = !1;
    return [
      new mt({
        key: new Ct("uniqueID"),
        appendTransaction: (n, i, r) => {
          const o = n.some((h) => h.docChanged) && !i.doc.eq(r.doc), s = this.options.filterTransaction && n.some((h) => {
            let p, m;
            return !(!((m = (p = this.options).filterTransaction) === null || m === void 0) && m.call(p, h));
          });
          if (!o || s)
            return;
          const { tr: a } = r, { types: l, attributeName: c, generateID: f } = this.options, d = N6(
            i.doc,
            n
          ), { mapping: u } = d;
          if (I6(d).forEach(({ newRange: h }) => {
            const p = O6(
              r.doc,
              h,
              (y) => l.includes(y.type.name)
            ), m = p.map(({ node: y }) => y.attrs[c]).filter((y) => y !== null), v = hH(m);
            p.forEach(({ node: y, pos: C }) => {
              let k;
              const _ = (k = a.doc.nodeAt(C)) === null || k === void 0 ? void 0 : k.attrs[c];
              if (_ === null) {
                const E = i.doc.type.createAndFill().content;
                if (i.doc.content.findDiffStart(E) === null) {
                  const x = JSON.parse(
                    JSON.stringify(r.doc.toJSON())
                  );
                  if (x.content[0].content[0].attrs.id = "initialBlockId", JSON.stringify(x.content) === JSON.stringify(E.toJSON())) {
                    a.setNodeMarkup(C, void 0, {
                      ...y.attrs,
                      [c]: "initialBlockId"
                    });
                    return;
                  }
                }
                a.setNodeMarkup(C, void 0, {
                  ...y.attrs,
                  [c]: f()
                });
                return;
              }
              const { deleted: S } = u.invert().mapResult(C);
              S && v.includes(_) && a.setNodeMarkup(C, void 0, {
                ...y.attrs,
                [c]: f()
              });
            });
          }), !!a.steps.length)
            return a;
        },
        // we register a global drag handler to track the current drag source element
        view(n) {
          const i = (r) => {
            let o;
            t = !((o = n.dom.parentElement) === null || o === void 0) && o.contains(r.target) ? n.dom.parentElement : null;
          };
          return window.addEventListener("dragstart", i), {
            destroy() {
              window.removeEventListener("dragstart", i);
            }
          };
        },
        props: {
          // `handleDOMEvents` is called before `transformPasted`
          // so we can do some checks before
          handleDOMEvents: {
            // only create new ids for dropped content while holding `alt`
            // or content is dragged from another editor
            drop: (n, i) => {
              let r;
              return (t !== n.dom.parentElement || ((r = i.dataTransfer) === null || r === void 0 ? void 0 : r.effectAllowed) === "copy") && (t = null, e = !0), !1;
            },
            // always create new ids on pasted content
            paste: () => (e = !0, !1)
          },
          // we’ll remove ids for every pasted node
          // so we can create a new one within `appendTransaction`
          transformPasted: (n) => {
            if (!e)
              return n;
            const { types: i, attributeName: r } = this.options, o = (s) => {
              const a = [];
              return s.forEach((l) => {
                if (l.isText) {
                  a.push(l);
                  return;
                }
                if (!i.includes(l.type.name)) {
                  a.push(l.copy(o(l.content)));
                  return;
                }
                const c = l.type.create(
                  {
                    ...l.attrs,
                    [r]: null
                  },
                  o(l.content),
                  l.marks
                );
                a.push(c);
              }), ie.from(a);
            };
            return e = !1, new be(
              o(n.content),
              n.openStart,
              n.openEnd
            );
          }
        }
      })
    ];
  }
});
function Ow(t) {
  return t.type === "link";
}
function pH(t) {
  return typeof t != "string" && t.type === "link";
}
function O1(t) {
  return typeof t != "string" && t.type === "text";
}
function Rw(t, e, n) {
  const i = [];
  for (const [r, o] of Object.entries(t.styles)) {
    const s = n[r];
    if (!s)
      throw new Error(`style ${r} not found in styleSchema`);
    if (s.propSchema === "boolean")
      i.push(e.mark(r));
    else if (s.propSchema === "string")
      i.push(e.mark(r, { stringValue: o }));
    else
      throw new Br(s.propSchema);
  }
  return t.text.split(/(\n)/g).filter((r) => r.length > 0).map((r) => r === `
` ? e.nodes.hardBreak.create() : e.text(r, i));
}
function mH(t, e, n) {
  const i = e.marks.link.create({
    href: t.href
  });
  return Cg(t.content, e, n).map(
    (r) => {
      if (r.type.name === "text")
        return r.mark([...r.marks, i]);
      if (r.type.name === "hardBreak")
        return r;
      throw new Error("unexpected node type");
    }
  );
}
function Cg(t, e, n) {
  const i = [];
  if (typeof t == "string")
    return i.push(
      ...Rw(
        { type: "text", text: t, styles: {} },
        e,
        n
      )
    ), i;
  for (const r of t)
    i.push(...Rw(r, e, n));
  return i;
}
function Hr(t, e, n) {
  const i = [];
  for (const r of t)
    typeof r == "string" ? i.push(...Cg(r, e, n)) : pH(r) ? i.push(...mH(r, e, n)) : O1(r) ? i.push(...Cg([r], e, n)) : i.push(
      bE(r, e, n)
    );
  return i;
}
function Ph(t, e, n) {
  const i = [];
  for (const r of t.rows) {
    const o = [];
    for (const a of r.cells) {
      let l;
      if (!a)
        l = e.nodes.tableParagraph.create({});
      else if (typeof a == "string")
        l = e.nodes.tableParagraph.create({}, e.text(a));
      else {
        const f = Hr(a, e, n);
        l = e.nodes.tableParagraph.create({}, f);
      }
      const c = e.nodes.tableCell.create({}, l);
      o.push(c);
    }
    const s = e.nodes.tableRow.create({}, o);
    i.push(s);
  }
  return i;
}
function bE(t, e, n) {
  let i, r = t.type;
  if (r === void 0 && (r = "paragraph"), !e.nodes[r])
    throw new Error(`node type ${r} not found in schema`);
  if (!t.content)
    i = e.nodes[r].create(t.props);
  else if (typeof t.content == "string") {
    const o = Hr([t.content], e, n);
    i = e.nodes[r].create(t.props, o);
  } else if (Array.isArray(t.content)) {
    const o = Hr(t.content, e, n);
    i = e.nodes[r].create(t.props, o);
  } else if (t.content.type === "tableContent") {
    const o = Ph(t.content, e, n);
    i = e.nodes[r].create(t.props, o);
  } else
    throw new Br(t.content.type);
  return i;
}
function Dl(t, e, n) {
  let i = t.id;
  i === void 0 && (i = Dh.options.generateID());
  const r = bE(
    t,
    e,
    n
  ), o = [];
  if (t.children)
    for (const a of t.children)
      o.push(Dl(a, e, n));
  const s = e.nodes.blockGroup.create({}, o);
  return e.nodes.blockContainer.create(
    {
      id: i,
      ...t.props
    },
    o.length > 0 ? [r, s] : r
  );
}
function kE(t) {
  const e = [...t.classList].filter(
    (n) => !n.startsWith("bn-")
  ) || [];
  e.length > 0 ? t.className = e.join(" ") : t.removeAttribute("class");
}
function wE(t, e, n, i) {
  let r;
  if (e)
    if (typeof e == "string")
      r = Hr(
        [e],
        t.pmSchema,
        t.schema.styleSchema
      );
    else if (Array.isArray(e))
      r = Hr(
        e,
        t.pmSchema,
        t.schema.styleSchema
      );
    else if (e.type === "tableContent")
      r = Ph(
        e,
        t.pmSchema,
        t.schema.styleSchema
      );
    else
      throw new Br(e.type);
  else throw new Error("blockContent is required");
  const o = n.serializeFragment(ie.from(r), i);
  return o.nodeType === 1 && kE(o), o;
}
function gH(t, e, n, i, r, o, s) {
  var a, l, c, f, d, u, h;
  const p = (s == null ? void 0 : s.document) ?? document, m = e.pmSchema.nodes.blockContainer;
  let v = n.props;
  if (!n.props) {
    v = {};
    for (const [S, E] of Object.entries(
      e.schema.blockSchema[n.type].propSchema
    ))
      v[S] = E.default;
  }
  const y = [...((l = (a = m.spec) == null ? void 0 : a.toDOM) == null ? void 0 : l.call(
    a,
    m.create({
      id: n.id,
      ...v
    })
  )).dom.attributes], C = e.blockImplementations[n.type].implementation.toExternalHTML({ ...n, props: v }, e), k = p.createDocumentFragment();
  if (C.dom.classList.contains("bn-block-content")) {
    const S = [...y, ...C.dom.attributes].filter(
      (E) => E.name.startsWith("data") && E.name !== "data-content-type" && E.name !== "data-file-block" && E.name !== "data-node-view-wrapper" && E.name !== "data-node-type" && E.name !== "data-id" && E.name !== "data-index" && E.name !== "data-editable"
    );
    for (const E of S)
      C.dom.firstChild.setAttribute(E.name, E.value);
    kE(C.dom.firstChild), k.append(...C.dom.childNodes);
  } else
    k.append(C.dom);
  if (C.contentDOM && n.content) {
    const S = wE(
      e,
      n.content,
      // TODO
      i,
      s
    );
    C.contentDOM.appendChild(S);
  }
  let _;
  if (r.has(n.type) ? _ = "OL" : o.has(n.type) && (_ = "UL"), _) {
    if (((c = t.lastChild) == null ? void 0 : c.nodeName) !== _) {
      const E = p.createElement(_);
      t.append(E);
    }
    const S = p.createElement("li");
    S.append(k), t.lastChild.appendChild(S);
  } else
    t.append(k);
  if (n.children && n.children.length > 0) {
    const S = p.createDocumentFragment();
    if (_E(
      S,
      e,
      n.children,
      i,
      r,
      o,
      s
    ), ((f = t.lastChild) == null ? void 0 : f.nodeName) === "UL" || ((d = t.lastChild) == null ? void 0 : d.nodeName) === "OL")
      for (; ((u = S.firstChild) == null ? void 0 : u.nodeName) === "UL" || ((h = S.firstChild) == null ? void 0 : h.nodeName) === "OL"; )
        t.lastChild.lastChild.appendChild(S.firstChild);
    t.append(S);
  }
}
const _E = (t, e, n, i, r, o, s) => {
  for (const a of n)
    gH(
      t,
      e,
      a,
      i,
      r,
      o,
      s
    );
}, yH = (t, e, n, i, r, o) => {
  const s = ((o == null ? void 0 : o.document) ?? document).createDocumentFragment();
  return _E(
    s,
    t,
    e,
    n,
    i,
    r,
    o
  ), s;
}, Fh = (t, e) => {
  const n = Eo.fromSchema(t);
  return {
    exportBlocks: (i, r) => {
      const o = yH(
        e,
        i,
        n,
        /* @__PURE__ */ new Set(["numberedListItem"]),
        /* @__PURE__ */ new Set(["bulletListItem", "checkListItem"]),
        r
      ), s = document.createElement("div");
      return s.append(o), s.innerHTML;
    },
    exportInlineContent: (i, r) => {
      const o = wE(
        e,
        i,
        n,
        r
      ), s = document.createElement("div");
      return s.append(o.cloneNode(!0)), s.innerHTML;
    }
  };
};
function vH(t, e, n, i, r) {
  let o;
  if (e)
    if (typeof e == "string")
      o = Hr(
        [e],
        t.pmSchema,
        t.schema.styleSchema
      );
    else if (Array.isArray(e))
      o = Hr(
        e,
        t.pmSchema,
        t.schema.styleSchema
      );
    else if (e.type === "tableContent")
      o = Ph(
        e,
        t.pmSchema,
        t.schema.styleSchema
      );
    else
      throw new Br(e.type);
  else throw new Error("blockContent is required");
  return n.serializeFragment(ie.from(o), r);
}
function bH(t, e, n, i, r) {
  var o, s, a, l;
  const c = t.pmSchema.nodes.blockContainer;
  let f = e.props;
  if (!e.props) {
    f = {};
    for (const [h, p] of Object.entries(
      t.schema.blockSchema[e.type].propSchema
    ))
      f[h] = p.default;
  }
  const d = (s = (o = c.spec) == null ? void 0 : o.toDOM) == null ? void 0 : s.call(
    o,
    c.create({
      id: e.id,
      ...f
    })
  ), u = t.blockImplementations[e.type].implementation.toInternalHTML({ ...e, props: f }, t);
  if (u.contentDOM && e.content) {
    const h = vH(
      t,
      e.content,
      // TODO
      n,
      i,
      r
    );
    u.contentDOM.appendChild(h);
  }
  return (a = d.contentDOM) == null || a.appendChild(u.dom), e.children && e.children.length > 0 && ((l = d.contentDOM) == null || l.appendChild(
    EE(
      t,
      e.children,
      n,
      i,
      r
    )
  )), d.dom;
}
const EE = (t, e, n, i, r) => {
  const o = t.pmSchema.nodes.blockGroup, s = o.spec.toDOM(o.create({}));
  for (const a of e) {
    const l = bH(
      t,
      a,
      n,
      i,
      r
    );
    s.contentDOM.appendChild(l);
  }
  return s.dom;
}, kH = (t, e) => {
  const n = Eo.fromSchema(t);
  return {
    serializeBlocks: (i, r) => EE(
      e,
      i,
      n,
      !1,
      r
    ).outerHTML
  };
};
function Bh(t, e) {
  const n = t.resolve(e);
  if (n.nodeAfter && n.nodeAfter.type.name === "blockContainer")
    return {
      posBeforeNode: n.pos,
      node: n.nodeAfter
    };
  let i = n.depth, r = n.node(i);
  for (; i > 0; ) {
    if (r.type.name === "blockContainer")
      return {
        posBeforeNode: n.before(i),
        node: r
      };
    i--, r = n.node(i);
  }
  const o = [];
  t.descendants((a, l) => {
    a.type.name === "blockContainer" && o.push(l);
  }), console.warn(`Position ${e} is not within a blockContainer node.`);
  const s = t.resolve(
    o.find((a) => a >= e) || o[o.length - 1]
  );
  return {
    posBeforeNode: s.pos,
    node: s.nodeAfter
  };
}
function Ev(t, e) {
  const n = t, i = e, r = i + n.nodeSize, o = {
    node: n,
    beforePos: i,
    afterPos: r
  };
  let s, a;
  if (n.forEach((l, c) => {
    if (l.type.spec.group === "blockContent") {
      const f = l, d = i + c + 1, u = d + l.nodeSize;
      s = {
        node: f,
        beforePos: d,
        afterPos: u
      };
    } else if (l.type.name === "blockGroup") {
      const f = l, d = i + c + 1, u = d + l.nodeSize;
      a = {
        node: f,
        beforePos: d,
        afterPos: u
      };
    }
  }), !s)
    throw new Error(
      `blockContainer node does not contain a blockContent node in its children: ${n}`
    );
  return {
    blockContainer: o,
    blockContent: s,
    blockGroup: a
  };
}
function Tl(t) {
  return Ev(t.node, t.posBeforeNode);
}
function ks(t) {
  if (!t.nodeAfter)
    throw new Error(
      `Attempted to get blockContainer node at position ${t.pos} but a node at this position does not exist`
    );
  if (t.nodeAfter.type.name !== "blockContainer")
    throw new Error(
      `Attempted to get blockContainer node at position ${t.pos} but found node of different type ${t.nodeAfter}`
    );
  return Ev(t.nodeAfter, t.pos);
}
function jt(t) {
  const e = Bh(
    t.doc,
    t.selection.anchor
  );
  return Tl(e);
}
const wH = () => typeof navigator < "u" && (/Mac/.test(navigator.platform) || /AppleWebKit/.test(navigator.userAgent) && /Mobile\/\w+/.test(navigator.userAgent));
function Ji(t, e = "Ctrl") {
  return wH() ? t.replace("Mod", "⌘") : t.replace("Mod", e);
}
function lr(...t) {
  return t.filter((e) => e).join(" ");
}
const Sg = () => /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
function pa(t, e, n, i) {
  const r = document.createElement("div");
  r.className = lr(
    "bn-block-content",
    n.class
  ), r.setAttribute("data-content-type", t);
  for (const [s, a] of Object.entries(n))
    s !== "class" && r.setAttribute(s, a);
  const o = document.createElement(e);
  o.className = lr(
    "bn-inline-content",
    i.class
  );
  for (const [s, a] of Object.entries(
    i
  ))
    s !== "class" && o.setAttribute(s, a);
  return r.appendChild(o), {
    dom: r,
    contentDOM: o
  };
}
const Iw = (t, e) => {
  const n = Dl(t, e.pmSchema, e.schema.styleSchema).firstChild, i = e.pmSchema.nodes[n.type.name].spec.toDOM;
  if (i === void 0)
    throw new Error(
      "This block has no default HTML serialization as its corresponding TipTap node doesn't implement `renderHTML`."
    );
  const r = i(n);
  if (typeof r != "object" || !("dom" in r))
    throw new Error(
      "Cannot use this block's default HTML serialization as its corresponding TipTap node's `renderHTML` function does not return an object with the `dom` property."
    );
  return r;
}, mn = {
  backgroundColor: {
    default: "default"
  },
  textColor: {
    default: "default"
  },
  textAlignment: {
    default: "left",
    values: ["left", "center", "right", "justify"]
  }
}, Tv = ["backgroundColor", "textColor"];
function R1(t) {
  return "data-" + t.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
}
function Lw(t) {
  const e = t.split("/");
  return !e.length || // invalid?
  e[e.length - 1] === "" ? t : e[e.length - 1];
}
function TE(t) {
  const e = {};
  return Object.entries(t).filter(([n, i]) => !Tv.includes(n)).forEach(([n, i]) => {
    e[n] = {
      default: i.default,
      keepOnSplit: !0,
      // Props are displayed in kebab-case as HTML attributes. If a prop's
      // value is the same as its default, we don't display an HTML
      // attribute for it.
      parseHTML: (r) => {
        const o = r.getAttribute(R1(n));
        if (o === null)
          return null;
        if (typeof i.default == "boolean")
          return o === "true" ? !0 : o === "false" ? !1 : null;
        if (typeof i.default == "number") {
          const s = parseFloat(o);
          return !Number.isNaN(s) && Number.isFinite(s) ? s : null;
        }
        return o;
      },
      renderHTML: (r) => r[n] !== i.default ? {
        [R1(n)]: r[n]
      } : {}
    };
  }), e;
}
function CE(t, e, n, i) {
  if (typeof t == "boolean")
    throw new Error(
      "Cannot find node position as getPos is a boolean, not a function."
    );
  const r = t(), o = n.state.doc.resolve(r).node().attrs.id;
  if (!o)
    throw new Error("Block doesn't have id");
  const s = e.getBlock(o);
  if (s.type !== i)
    throw new Error("Block type does not match");
  return s;
}
function Ec(t, e, n, i, r = !1, o) {
  const s = document.createElement("div");
  if (o !== void 0)
    for (const [a, l] of Object.entries(o))
      a !== "class" && s.setAttribute(a, l);
  s.className = lr(
    "bn-block-content",
    (o == null ? void 0 : o.class) || ""
  ), s.setAttribute("data-content-type", e);
  for (const [a, l] of Object.entries(n))
    !Tv.includes(a) && l !== i[a].default && s.setAttribute(R1(a), l);
  return r && s.setAttribute("data-file-block", ""), s.appendChild(t.dom), t.contentDOM !== void 0 && (t.contentDOM.className = lr(
    "bn-inline-content",
    t.contentDOM.className
  ), t.contentDOM.setAttribute("data-editable", "")), {
    ...t,
    dom: s
  };
}
function Cs(t) {
  return jr.create(t);
}
function Cv(t, e) {
  return {
    config: t,
    implementation: e
  };
}
function Pl(t, e, n) {
  return Cv(
    {
      type: t.name,
      content: t.config.content === "inline*" ? "inline" : t.config.content === "tableRow+" ? "table" : "none",
      propSchema: e
    },
    {
      node: t,
      requiredExtensions: n,
      toInternalHTML: Iw,
      toExternalHTML: Iw
      // parse: () => undefined, // parse rules are in node already
    }
  );
}
function SE(t) {
  return Object.fromEntries(
    Object.entries(t).map(([e, n]) => [e, n.config])
  );
}
function xE(t, e) {
  t.stopEvent = (n) => (n.type === "mousedown" && setTimeout(() => {
    e.view.dom.blur();
  }, 10), !0);
}
function AE(t, e) {
  const n = [
    {
      tag: "[data-content-type=" + t.type + "]",
      contentElement: "[data-editable]"
    }
  ];
  return e && n.push({
    tag: "*",
    getAttrs(i) {
      if (typeof i == "string")
        return !1;
      const r = e == null ? void 0 : e(i);
      return r === void 0 ? !1 : r;
    }
  }), n;
}
function Hh(t, e) {
  const n = Cs({
    name: t.type,
    content: t.content === "inline" ? "inline*" : "",
    group: "blockContent",
    selectable: t.isSelectable ?? !0,
    addAttributes() {
      return TE(t.propSchema);
    },
    parseHTML() {
      return AE(t, e.parse);
    },
    renderHTML({ HTMLAttributes: i }) {
      const r = document.createElement("div");
      return Ec(
        {
          dom: r,
          contentDOM: t.content === "inline" ? r : void 0
        },
        t.type,
        {},
        t.propSchema,
        t.isFileBlock,
        i
      );
    },
    addNodeView() {
      return ({ getPos: i }) => {
        var r;
        const o = this.options.editor, s = CE(
          i,
          o,
          this.editor,
          t.type
        ), a = ((r = this.options.domAttributes) == null ? void 0 : r.blockContent) || {}, l = e.render(s, o), c = Ec(
          l,
          s.type,
          s.props,
          t.propSchema,
          a
        );
        return t.isSelectable === !1 && xE(c, this.editor), c;
      };
    }
  });
  if (n.name !== t.type)
    throw new Error(
      "Node name does not match block type. This is a bug in BlockNote."
    );
  return Cv(t, {
    node: n,
    toInternalHTML: (i, r) => {
      var o;
      const s = ((o = n.options.domAttributes) == null ? void 0 : o.blockContent) || {}, a = e.render(i, r);
      return Ec(
        a,
        i.type,
        i.props,
        t.propSchema,
        t.isFileBlock,
        s
      );
    },
    // TODO: this should not have wrapInBlockStructure and generally be a lot simpler
    // post-processing in externalHTMLExporter should not be necessary
    toExternalHTML: (i, r) => {
      var o, s;
      const a = ((o = n.options.domAttributes) == null ? void 0 : o.blockContent) || {};
      let l = (s = e.toExternalHTML) == null ? void 0 : s.call(
        e,
        i,
        r
      );
      return l === void 0 && (l = e.render(i, r)), Ec(
        l,
        i.type,
        i.props,
        t.propSchema,
        a
      );
    }
  });
}
function ME(t, e, n) {
  const i = {
    type: "tableContent",
    rows: []
  };
  return t.content.forEach((r) => {
    const o = {
      cells: []
    };
    r.content.forEach((s) => {
      o.cells.push(
        $h(
          s.firstChild,
          e,
          n
        )
      );
    }), i.rows.push(o);
  }), i;
}
function $h(t, e, n) {
  const i = [];
  let r;
  return t.content.forEach((o) => {
    if (o.type.name === "hardBreak") {
      if (r)
        if (O1(r))
          r.text += `
`;
        else if (Ow(r))
          r.content[r.content.length - 1].text += `
`;
        else
          throw new Error("unexpected");
      else
        r = {
          type: "text",
          text: `
`,
          styles: {}
        };
      return;
    }
    if (o.type.name !== "link" && o.type.name !== "text" && e[o.type.name]) {
      r && (i.push(r), r = void 0), i.push(
        _H(o, e, n)
      );
      return;
    }
    const s = {};
    let a;
    for (const l of o.marks)
      if (l.type.name === "link")
        a = l;
      else {
        const c = n[l.type.name];
        if (!c)
          throw new Error(`style ${l.type.name} not found in styleSchema`);
        if (c.propSchema === "boolean")
          s[c.type] = !0;
        else if (c.propSchema === "string")
          s[c.type] = l.attrs.stringValue;
        else
          throw new Br(c.propSchema);
      }
    r ? O1(r) ? a ? (i.push(r), r = {
      type: "link",
      href: a.attrs.href,
      content: [
        {
          type: "text",
          text: o.textContent,
          styles: s
        }
      ]
    }) : JSON.stringify(r.styles) === JSON.stringify(s) ? r.text += o.textContent : (i.push(r), r = {
      type: "text",
      text: o.textContent,
      styles: s
    }) : Ow(r) && (a ? r.href === a.attrs.href ? JSON.stringify(
      r.content[r.content.length - 1].styles
    ) === JSON.stringify(s) ? r.content[r.content.length - 1].text += o.textContent : r.content.push({
      type: "text",
      text: o.textContent,
      styles: s
    }) : (i.push(r), r = {
      type: "link",
      href: a.attrs.href,
      content: [
        {
          type: "text",
          text: o.textContent,
          styles: s
        }
      ]
    }) : (i.push(r), r = {
      type: "text",
      text: o.textContent,
      styles: s
    })) : a ? r = {
      type: "link",
      href: a.attrs.href,
      content: [
        {
          type: "text",
          text: o.textContent,
          styles: s
        }
      ]
    } : r = {
      type: "text",
      text: o.textContent,
      styles: s
    };
  }), r && i.push(r), i;
}
function _H(t, e, n) {
  if (t.type.name === "text" || t.type.name === "link")
    throw new Error("unexpected");
  const i = {}, r = e[t.type.name];
  for (const [s, a] of Object.entries(t.attrs)) {
    if (!r)
      throw Error("ic node is of an unrecognized type: " + t.type.name);
    const l = r.propSchema;
    s in l && (i[s] = a);
  }
  let o;
  return r.content === "styled" ? o = $h(
    t,
    e,
    n
  ) : o = void 0, {
    type: t.type.name,
    props: i,
    content: o
  };
}
function qn(t, e, n, i, r) {
  if (t.type.name !== "blockContainer")
    throw Error(
      "Node must be of type blockContainer, but is of type" + t.type.name + "."
    );
  const o = r == null ? void 0 : r.get(t);
  if (o)
    return o;
  const { blockContainer: s, blockContent: a, blockGroup: l } = Ev(t, 0);
  let c = s.node.attrs.id;
  c === null && (c = Dh.options.generateID());
  const f = {};
  for (const [m, v] of Object.entries({
    ...t.attrs,
    ...a.node.attrs
  })) {
    const y = e[a.node.type.name];
    if (!y)
      throw Error(
        "Block is of an unrecognized type: " + a.node.type.name
      );
    const C = y.propSchema;
    m in C && (f[m] = v);
  }
  const d = e[a.node.type.name], u = [];
  l == null || l.node.forEach((m) => {
    u.push(
      qn(
        m,
        e,
        n,
        i,
        r
      )
    );
  });
  let h;
  if (d.content === "inline")
    h = $h(
      a.node,
      n,
      i
    );
  else if (d.content === "table")
    h = ME(
      a.node,
      n,
      i
    );
  else if (d.content === "none")
    h = void 0;
  else
    throw new Br(d.content);
  const p = {
    id: c,
    type: d.type,
    props: f,
    content: h,
    children: u
  };
  return r == null || r.set(t, p), p;
}
function NE(t) {
  return Object.fromEntries(
    Object.entries(t).map(([e, n]) => [e, n.config])
  );
}
function EH(t, e) {
  return {
    config: t,
    implementation: e
  };
}
function zs(t, e) {
  return EH(
    {
      type: t.name,
      propSchema: e
    },
    {
      mark: t
    }
  );
}
function OE(t) {
  return Object.fromEntries(
    Object.entries(t).map(([e, n]) => [e, n.config])
  );
}
const jh = (t, e, n, i, r) => {
  const o = document.createElement("div");
  if (o.className = "bn-file-block-content-wrapper", t.props.url === "") {
    const s = TH(
      t,
      e,
      i,
      r
    );
    o.appendChild(s.dom);
    const a = document.createElement("div");
    a.className = "bn-file-loading-preview", a.textContent = "Loading...";
    const l = e.onUploadStart((f) => {
      f === t.id && (o.removeChild(s.dom), o.appendChild(a));
    }), c = e.onUploadEnd((f) => {
      f === t.id && (o.removeChild(a), o.appendChild(s.dom));
    });
    return {
      dom: o,
      destroy: () => {
        var f;
        (f = s.destroy) == null || f.call(s), l(), c();
      }
    };
  } else if (t.props.showPreview === !1) {
    const s = RE(t).dom;
    return {
      dom: Rf(t, s).dom
    };
  } else
    return o.appendChild(n.dom), {
      dom: o,
      destroy: n.destroy
    };
}, RE = (t) => {
  const e = document.createElement("div");
  e.className = "bn-file-default-preview";
  const n = document.createElement("div");
  n.className = "bn-file-default-preview-icon", n.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"><path d="M3 8L9.00319 2H19.9978C20.5513 2 21 2.45531 21 2.9918V21.0082C21 21.556 20.5551 22 20.0066 22H3.9934C3.44476 22 3 21.5501 3 20.9932V8ZM10 4V9H5V20H19V4H10Z"></path></svg>';
  const i = document.createElement("p");
  return i.className = "bn-file-default-preview-name", i.textContent = t.props.name || "", e.appendChild(n), e.appendChild(i), {
    dom: e
  };
}, Rf = (t, e) => {
  const n = document.createElement("div");
  n.className = "bn-file-and-caption-wrapper";
  const i = document.createElement("p");
  return i.className = "bn-file-caption", i.textContent = t.props.caption, n.appendChild(e), n.appendChild(i), {
    dom: n
  };
}, TH = (t, e, n, i) => {
  const r = document.createElement("div");
  r.className = "bn-add-file-button";
  const o = document.createElement("div");
  o.className = "bn-add-file-button-icon", i ? o.appendChild(i) : o.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"><path d="M3 8L9.00319 2H19.9978C20.5513 2 21 2.45531 21 2.9918V21.0082C21 21.556 20.5551 22 20.0066 22H3.9934C3.44476 22 3 21.5501 3 20.9932V8ZM10 4V9H5V20H19V4H10Z"></path></svg>';
  const s = document.createElement("p");
  s.className = "bn-add-file-button-text", s.innerHTML = n || e.dictionary.file_blocks.file.add_button_text;
  const a = (c) => {
    c.preventDefault();
  }, l = () => {
    e.dispatch(
      e._tiptapEditor.state.tr.setMeta(e.filePanel.plugin, {
        block: t
      })
    );
  };
  return r.appendChild(o), r.appendChild(s), r.addEventListener(
    "mousedown",
    a,
    !0
  ), r.addEventListener("click", l, !0), {
    dom: r,
    destroy: () => {
      r.removeEventListener(
        "mousedown",
        a,
        !0
      ), r.removeEventListener(
        "click",
        l,
        !0
      );
    }
  };
}, Dw = (t) => ({ url: t.src || void 0 }), zh = (t, e) => {
  const n = t.querySelector(
    e
  );
  if (!n)
    return;
  const i = t.querySelector("figcaption"), r = (i == null ? void 0 : i.textContent) ?? void 0;
  return { targetElement: n, caption: r };
}, Uh = (t, e) => {
  const n = document.createElement("div"), i = document.createElement("p");
  return i.textContent = e, n.appendChild(t), n.appendChild(i), {
    dom: n
  };
}, Sv = (t, e) => {
  const n = document.createElement("figure"), i = document.createElement("figcaption");
  return i.textContent = e, n.appendChild(t), n.appendChild(i), { dom: n };
}, IE = (t, e, n, i, r) => {
  if (!t.props.previewWidth)
    throw new Error("Block must have a `previewWidth` prop.");
  const o = document.createElement("div");
  o.className = "bn-visual-media-wrapper";
  const s = document.createElement("div");
  s.className = "bn-visual-media-resize-handle", s.style.left = "4px";
  const a = document.createElement("div");
  a.className = "bn-visual-media-resize-handle", a.style.right = "4px";
  let l;
  const c = (m) => {
    if (!l) {
      !e.isEditable && o.contains(s) && o.contains(a) && (o.removeChild(s), o.removeChild(a));
      return;
    }
    let v;
    t.props.textAlignment === "center" ? l.handleUsed === "left" ? v = l.initialWidth + (l.initialClientX - m.clientX) * 2 : v = l.initialWidth + (m.clientX - l.initialClientX) * 2 : l.handleUsed === "left" ? v = l.initialWidth + l.initialClientX - m.clientX : v = l.initialWidth + m.clientX - l.initialClientX;
    const y = 64;
    v < y ? r(y) : v > e.domElement.firstElementChild.clientWidth ? r(e.domElement.firstElementChild.clientWidth) : r(v);
  }, f = (m) => {
    (!m.target || !o.contains(m.target) || !e.isEditable) && o.contains(s) && o.contains(a) && (o.removeChild(s), o.removeChild(a)), l && (l = void 0, e.updateBlock(t, {
      props: {
        previewWidth: i()
      }
    }));
  }, d = () => {
    e.isEditable && (o.appendChild(s), o.appendChild(a));
  }, u = (m) => {
    m.relatedTarget === s || m.relatedTarget === a || l || e.isEditable && o.contains(s) && o.contains(a) && (o.removeChild(s), o.removeChild(a));
  }, h = (m) => {
    m.preventDefault(), o.appendChild(s), o.appendChild(a), l = {
      handleUsed: "left",
      initialWidth: t.props.previewWidth,
      initialClientX: m.clientX
    };
  }, p = (m) => {
    m.preventDefault(), o.appendChild(s), o.appendChild(a), l = {
      handleUsed: "right",
      initialWidth: t.props.previewWidth,
      initialClientX: m.clientX
    };
  };
  return o.appendChild(n), window.addEventListener("mousemove", c), window.addEventListener("mouseup", f), n.addEventListener("mouseenter", d), n.addEventListener("mouseleave", u), s.addEventListener(
    "mousedown",
    h
  ), a.addEventListener(
    "mousedown",
    p
  ), {
    dom: o,
    destroy: () => {
      window.removeEventListener("mousemove", c), window.removeEventListener("mouseup", f), n.removeEventListener("mouseenter", d), n.removeEventListener("mouseleave", u), s.removeEventListener(
        "mousedown",
        h
      ), a.removeEventListener(
        "mousedown",
        p
      );
    }
  };
}, Pw = (t) => ({ url: t.src || void 0 }), CH = {
  backgroundColor: mn.backgroundColor,
  // File name.
  name: {
    default: ""
  },
  // File url.
  url: {
    default: ""
  },
  // File caption.
  caption: {
    default: ""
  },
  showPreview: {
    default: !0
  }
}, LE = {
  type: "audio",
  propSchema: CH,
  content: "none",
  isFileBlock: !0,
  fileBlockAccept: ["audio/*"]
}, SH = (t, e) => {
  const n = document.createElement("div");
  n.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"><path d="M2 16.0001H5.88889L11.1834 20.3319C11.2727 20.405 11.3846 20.4449 11.5 20.4449C11.7761 20.4449 12 20.2211 12 19.9449V4.05519C12 3.93977 11.9601 3.8279 11.887 3.73857C11.7121 3.52485 11.3971 3.49335 11.1834 3.66821L5.88889 8.00007H2C1.44772 8.00007 1 8.44778 1 9.00007V15.0001C1 15.5524 1.44772 16.0001 2 16.0001ZM23 12C23 15.292 21.5539 18.2463 19.2622 20.2622L17.8445 18.8444C19.7758 17.1937 21 14.7398 21 12C21 9.26016 19.7758 6.80629 17.8445 5.15557L19.2622 3.73779C21.5539 5.75368 23 8.70795 23 12ZM18 12C18 10.0883 17.106 8.38548 15.7133 7.28673L14.2842 8.71584C15.3213 9.43855 16 10.64 16 12C16 13.36 15.3213 14.5614 14.2842 15.2841L15.7133 16.7132C17.106 15.6145 18 13.9116 18 12Z"></path></svg>';
  const i = document.createElement("audio");
  i.className = "bn-audio", e.resolveFileUrl(t.props.url).then((o) => {
    i.src = o;
  }), i.controls = !0, i.contentEditable = "false", i.draggable = !1;
  const r = Rf(t, i);
  return jh(
    t,
    e,
    r,
    e.dictionary.file_blocks.audio.add_button_text,
    n.firstElementChild
  );
}, DE = (t) => {
  if (t.tagName === "AUDIO")
    return Pw(t);
  if (t.tagName === "FIGURE") {
    const e = zh(t, "audio");
    if (!e)
      return;
    const { targetElement: n, caption: i } = e;
    return {
      ...Pw(n),
      caption: i
    };
  }
}, xH = (t) => {
  if (!t.props.url) {
    const n = document.createElement("p");
    return n.textContent = "Add audio", {
      dom: n
    };
  }
  let e;
  return t.props.showPreview ? (e = document.createElement("audio"), e.src = t.props.url) : (e = document.createElement("a"), e.href = t.props.url, e.textContent = t.props.name || t.props.url), t.props.caption ? t.props.showPreview ? Sv(e, t.props.caption) : Uh(e, t.props.caption) : {
    dom: e
  };
}, AH = Hh(LE, {
  render: SH,
  parse: DE,
  toExternalHTML: xH
}), MH = {
  backgroundColor: mn.backgroundColor,
  // File name.
  name: {
    default: ""
  },
  // File url.
  url: {
    default: ""
  },
  // File caption.
  caption: {
    default: ""
  }
}, PE = {
  type: "file",
  propSchema: MH,
  content: "none",
  isFileBlock: !0
}, NH = (t, e) => {
  const n = RE(t).dom, i = Rf(t, n);
  return jh(t, e, i);
}, FE = (t) => {
  if (t.tagName === "EMBED")
    return Dw(t);
  if (t.tagName === "FIGURE") {
    const e = zh(t, "embed");
    if (!e)
      return;
    const { targetElement: n, caption: i } = e;
    return {
      ...Dw(n),
      caption: i
    };
  }
}, OH = (t) => {
  if (!t.props.url) {
    const n = document.createElement("p");
    return n.textContent = "Add file", {
      dom: n
    };
  }
  const e = document.createElement("a");
  return e.href = t.props.url, e.textContent = t.props.name || t.props.url, t.props.caption ? Uh(e, t.props.caption) : {
    dom: e
  };
}, RH = Hh(PE, {
  render: NH,
  parse: FE,
  toExternalHTML: OH
}), Fw = (t) => {
  const e = t.src || void 0, n = t.width || void 0;
  return { url: e, previewWidth: n };
}, IH = {
  textAlignment: mn.textAlignment,
  backgroundColor: mn.backgroundColor,
  // File name.
  name: {
    default: ""
  },
  // File url.
  url: {
    default: ""
  },
  // File caption.
  caption: {
    default: ""
  },
  showPreview: {
    default: !0
  },
  // File preview width in px.
  previewWidth: {
    default: 512
  }
}, BE = {
  type: "image",
  propSchema: IH,
  content: "none",
  isFileBlock: !0,
  fileBlockAccept: ["image/*"]
}, LH = (t, e) => {
  const n = document.createElement("div");
  n.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"><path d="M5 11.1005L7 9.1005L12.5 14.6005L16 11.1005L19 14.1005V5H5V11.1005ZM4 3H20C20.5523 3 21 3.44772 21 4V20C21 20.5523 20.5523 21 20 21H4C3.44772 21 3 20.5523 3 20V4C3 3.44772 3.44772 3 4 3ZM15.5 10C14.6716 10 14 9.32843 14 8.5C14 7.67157 14.6716 7 15.5 7C16.3284 7 17 7.67157 17 8.5C17 9.32843 16.3284 10 15.5 10Z"></path></svg>';
  const i = document.createElement("img");
  i.className = "bn-visual-media", e.resolveFileUrl(t.props.url).then((s) => {
    i.src = s;
  }), i.alt = t.props.name || t.props.caption || "BlockNote image", i.contentEditable = "false", i.draggable = !1, i.width = Math.min(
    t.props.previewWidth,
    e.domElement.firstElementChild.clientWidth
  );
  const r = IE(
    t,
    e,
    i,
    () => i.width,
    (s) => i.width = s
  ), o = Rf(t, r.dom);
  return jh(
    t,
    e,
    o,
    e.dictionary.file_blocks.image.add_button_text,
    n.firstElementChild
  );
}, HE = (t) => {
  if (t.tagName === "IMG")
    return Fw(t);
  if (t.tagName === "FIGURE") {
    const e = zh(t, "img");
    if (!e)
      return;
    const { targetElement: n, caption: i } = e;
    return {
      ...Fw(n),
      caption: i
    };
  }
}, DH = (t) => {
  if (!t.props.url) {
    const n = document.createElement("p");
    return n.textContent = "Add image", {
      dom: n
    };
  }
  let e;
  return t.props.showPreview ? (e = document.createElement("img"), e.src = t.props.url, e.alt = t.props.name || t.props.caption || "BlockNote image", e.width = t.props.previewWidth) : (e = document.createElement("a"), e.href = t.props.url, e.textContent = t.props.name || t.props.url), t.props.caption ? t.props.showPreview ? Sv(e, t.props.caption) : Uh(e, t.props.caption) : {
    dom: e
  };
}, PH = Hh(BE, {
  render: LH,
  parse: HE,
  toExternalHTML: DH
}), Bw = (t) => {
  const e = t.src || void 0, n = t.width || void 0;
  return { url: e, previewWidth: n };
}, FH = {
  textAlignment: mn.textAlignment,
  backgroundColor: mn.backgroundColor,
  // File name.
  name: {
    default: ""
  },
  // File url.
  url: {
    default: ""
  },
  // File caption.
  caption: {
    default: ""
  },
  showPreview: {
    default: !0
  },
  // File preview width in px.
  previewWidth: {
    default: 512
  }
}, $E = {
  type: "video",
  propSchema: FH,
  content: "none",
  isFileBlock: !0,
  fileBlockAccept: ["video/*"]
}, BH = (t, e) => {
  const n = document.createElement("div");
  n.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"><path d="M2 3.9934C2 3.44476 2.45531 3 2.9918 3H21.0082C21.556 3 22 3.44495 22 3.9934V20.0066C22 20.5552 21.5447 21 21.0082 21H2.9918C2.44405 21 2 20.5551 2 20.0066V3.9934ZM8 5V19H16V5H8ZM4 5V7H6V5H4ZM18 5V7H20V5H18ZM4 9V11H6V9H4ZM18 9V11H20V9H18ZM4 13V15H6V13H4ZM18 13V15H20V13H18ZM4 17V19H6V17H4ZM18 17V19H20V17H18Z"></path></svg>';
  const i = document.createElement("video");
  i.className = "bn-visual-media", i.src = t.props.url, i.controls = !0, i.contentEditable = "false", i.draggable = !1, i.width = Math.min(
    t.props.previewWidth,
    e.domElement.firstElementChild.clientWidth
  );
  const r = IE(
    t,
    e,
    i,
    () => i.width,
    (s) => i.width = s
  ), o = Rf(t, r.dom);
  return jh(
    t,
    e,
    o,
    e.dictionary.file_blocks.video.add_button_text,
    n.firstElementChild
  );
}, jE = (t) => {
  if (t.tagName === "VIDEO")
    return Bw(t);
  if (t.tagName === "FIGURE") {
    const e = zh(t, "video");
    if (!e)
      return;
    const { targetElement: n, caption: i } = e;
    return {
      ...Bw(n),
      caption: i
    };
  }
}, HH = (t) => {
  if (!t.props.url) {
    const n = document.createElement("p");
    return n.textContent = "Add video", {
      dom: n
    };
  }
  let e;
  return t.props.showPreview ? (e = document.createElement("video"), e.src = t.props.url, e.width = t.props.previewWidth) : (e = document.createElement("a"), e.href = t.props.url, e.textContent = t.props.name || t.props.url), t.props.caption ? t.props.showPreview ? Sv(e, t.props.caption) : Uh(e, t.props.caption) : {
    dom: e
  };
}, $H = Hh($E, {
  render: BH,
  parse: jE,
  toExternalHTML: HH
}), jH = Fi.create({
  name: "backgroundColor",
  addAttributes() {
    return {
      stringValue: {
        default: void 0,
        parseHTML: (t) => t.getAttribute("data-background-color"),
        renderHTML: (t) => ({
          "data-background-color": t.stringValue
        })
      }
    };
  },
  parseHTML() {
    return [
      {
        tag: "span",
        getAttrs: (t) => typeof t == "string" ? !1 : t.hasAttribute("data-background-color") ? {
          stringValue: t.getAttribute("data-background-color")
        } : !1
      }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    return ["span", t, 0];
  }
}), zH = zs(
  jH,
  "string"
), UH = Fi.create({
  name: "textColor",
  addAttributes() {
    return {
      stringValue: {
        default: void 0,
        parseHTML: (t) => t.getAttribute("data-text-color"),
        renderHTML: (t) => ({
          "data-text-color": t.stringValue
        })
      }
    };
  },
  parseHTML() {
    return [
      {
        tag: "span",
        getAttrs: (t) => typeof t == "string" ? !1 : t.hasAttribute("data-text-color") ? { stringValue: t.getAttribute("data-text-color") } : !1
      }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    return ["span", t, 0];
  }
}), VH = zs(UH, "string");
function Vh(t, e) {
  let n, i;
  if (e.firstChild.descendants((r, o) => n ? !1 : r.type.name !== "blockContainer" || r.attrs.id !== t ? !0 : (n = r, i = o + 1, !1)), n === void 0 || i === void 0)
    throw Error("Could not find block in the editor with matching ID.");
  return {
    node: n,
    posBeforeNode: i
  };
}
const $n = (t, e, n) => ({
  state: i,
  dispatch: r
}) => {
  const { blockContainer: o, blockContent: s, blockGroup: a } = ks(i.doc.resolve(e));
  if (r) {
    if (n.children !== void 0) {
      const d = [];
      for (const u of n.children)
        d.push(
          Dl(u, i.schema, t.schema.styleSchema)
        );
      a ? i.tr.replace(
        a.beforePos + 1,
        a.afterPos - 1,
        new be(ie.from(d), 0, 0)
      ) : i.tr.insert(
        s.afterPos,
        i.schema.nodes.blockGroup.create({}, d)
      );
    }
    const l = s.node.type.name, c = n.type || l;
    let f = "keep";
    if (n.content)
      if (typeof n.content == "string")
        f = Hr(
          [n.content],
          i.schema,
          t.schema.styleSchema
        );
      else if (Array.isArray(n.content))
        f = Hr(
          n.content,
          i.schema,
          t.schema.styleSchema
        );
      else if (n.content.type === "tableContent")
        f = Ph(
          n.content,
          i.schema,
          t.schema.styleSchema
        );
      else
        throw new Br(n.content.type);
    else {
      const d = i.schema.nodes[l].spec.content, u = i.schema.nodes[c].spec.content;
      d === "" || u !== d && (f = []);
    }
    f === "keep" ? i.tr.setNodeMarkup(
      s.beforePos,
      n.type === void 0 ? void 0 : i.schema.nodes[n.type],
      {
        ...s.node.attrs,
        ...n.props
      }
    ) : i.tr.replaceWith(
      s.beforePos,
      s.afterPos,
      i.schema.nodes[c].create(
        {
          ...s.node.attrs,
          ...n.props
        },
        f
      )
    ), i.tr.setNodeMarkup(o.beforePos, void 0, {
      ...o.node.attrs,
      ...n.props
    });
  }
  return !0;
};
function WH(t, e, n) {
  const i = t._tiptapEditor, r = typeof e == "string" ? e : e.id, { posBeforeNode: o } = Vh(r, i.state.doc);
  i.commands.command(({ state: a, dispatch: l }) => ($n(t, o, n)({ state: a, dispatch: l }), !0));
  const s = i.state.doc.resolve(o + 1).node();
  return qn(
    s,
    t.schema.blockSchema,
    t.schema.inlineContentSchema,
    t.schema.styleSchema,
    t.blockCache
  );
}
const qH = {
  ...mn,
  level: { default: 1, values: [1, 2, 3] }
}, GH = Cs({
  name: "heading",
  content: "inline*",
  group: "blockContent",
  addAttributes() {
    return {
      level: {
        default: 1,
        // instead of "level" attributes, use "data-level"
        parseHTML: (t) => {
          const e = t.getAttribute("data-level"), n = parseInt(e);
          if (isFinite(n))
            return n;
        },
        renderHTML: (t) => ({
          "data-level": t.level.toString()
        })
      }
    };
  },
  addInputRules() {
    return [
      ...[1, 2, 3].map((t) => new ml({
        find: new RegExp(`^(#{${t}})\\s$`),
        handler: ({ state: e, chain: n, range: i }) => {
          const r = jt(e);
          r.blockContent.node.type.spec.content === "inline*" && n().command(
            $n(
              this.options.editor,
              r.blockContainer.beforePos,
              {
                type: "heading",
                props: {
                  level: t
                }
              }
            )
          ).deleteRange({ from: i.from, to: i.to }).run();
        }
      }))
    ];
  },
  addKeyboardShortcuts() {
    return {
      "Mod-Alt-1": () => {
        const t = jt(this.editor.state);
        return t.blockContent.node.type.spec.content !== "inline*" ? !0 : this.editor.commands.command(
          $n(
            this.options.editor,
            t.blockContainer.beforePos,
            {
              type: "heading",
              props: {
                level: 1
              }
            }
          )
        );
      },
      "Mod-Alt-2": () => {
        const t = jt(this.editor.state);
        return t.blockContent.node.type.spec.content !== "inline*" ? !0 : this.editor.commands.command(
          $n(
            this.options.editor,
            t.blockContainer.beforePos,
            {
              type: "heading",
              props: {
                level: 2
              }
            }
          )
        );
      },
      "Mod-Alt-3": () => {
        const t = jt(this.editor.state);
        return t.blockContent.node.type.spec.content !== "inline*" ? !0 : this.editor.commands.command(
          $n(
            this.options.editor,
            t.blockContainer.beforePos,
            {
              type: "heading",
              props: {
                level: 3
              }
            }
          )
        );
      }
    };
  },
  parseHTML() {
    return [
      {
        tag: "div[data-content-type=" + this.name + "]",
        getAttrs: (t) => typeof t == "string" ? !1 : {
          level: t.getAttribute("data-level")
        }
      },
      {
        tag: "h1",
        attrs: { level: 1 },
        node: "heading"
      },
      {
        tag: "h2",
        attrs: { level: 2 },
        node: "heading"
      },
      {
        tag: "h3",
        attrs: { level: 3 },
        node: "heading"
      }
    ];
  },
  renderHTML({ node: t, HTMLAttributes: e }) {
    var n, i;
    return pa(
      this.name,
      `h${t.attrs.level}`,
      {
        ...((n = this.options.domAttributes) == null ? void 0 : n.blockContent) || {},
        ...e
      },
      ((i = this.options.domAttributes) == null ? void 0 : i.inlineContent) || {}
    );
  }
}), KH = Pl(
  GH,
  qH
), zE = (t, e, n) => ({
  state: i,
  dispatch: r
}) => {
  const o = Bh(
    i.doc,
    t
  ), { blockContainer: s, blockContent: a } = Tl(
    o
  ), l = [
    {
      type: s.node.type,
      // always keep blockcontainer type
      attrs: n ? { ...s.node.attrs, id: void 0 } : {}
    },
    {
      type: e ? a.node.type : i.schema.nodes.paragraph,
      attrs: n ? { ...a.node.attrs } : {}
    }
  ];
  return r && i.tr.split(t, 2, l), !0;
}, xv = (t) => {
  const e = t._tiptapEditor, { blockContent: n, blockContainer: i } = jt(
    e.state
  ), r = e.state.selection.anchor === e.state.selection.head;
  return !(n.node.type.name === "bulletListItem" || n.node.type.name === "numberedListItem" || n.node.type.name === "checkListItem") || !r ? !1 : e.commands.first(({ state: o, chain: s, commands: a }) => [
    () => (
      // Changes list item block to a paragraph block if the content is empty.
      a.command(() => n.node.childCount === 0 ? a.command(
        $n(t, i.beforePos, {
          type: "paragraph",
          props: {}
        })
      ) : !1)
    ),
    () => (
      // Splits the current block, moving content inside that's after the cursor
      // to a new block of the same type below.
      a.command(() => n.node.childCount > 0 ? (s().deleteSelection().command(zE(o.selection.from, !0)).run(), !0) : !1)
    )
  ]);
}, YH = {
  ...mn
}, JH = Cs({
  name: "bulletListItem",
  content: "inline*",
  group: "blockContent",
  // This is to make sure that check list parse rules run before, since they
  // both parse `li` elements but check lists are more specific.
  priority: 90,
  addInputRules() {
    return [
      // Creates an unordered list when starting with "-", "+", or "*".
      new ml({
        find: new RegExp("^[-+*]\\s$"),
        handler: ({ state: t, chain: e, range: n }) => {
          const i = jt(t);
          i.blockContent.node.type.spec.content === "inline*" && e().command(
            $n(
              this.options.editor,
              i.blockContainer.beforePos,
              {
                type: "bulletListItem",
                props: {}
              }
            )
          ).deleteRange({ from: n.from, to: n.to });
        }
      })
    ];
  },
  addKeyboardShortcuts() {
    return {
      Enter: () => xv(this.options.editor),
      "Mod-Shift-8": () => {
        const t = jt(this.editor.state);
        return t.blockContent.node.type.spec.content !== "inline*" ? !0 : this.options.editor.commands.command(
          $n(
            this.options.editor,
            t.blockContainer.beforePos,
            {
              type: "bulletListItem",
              props: {}
            }
          )
        );
      }
    };
  },
  parseHTML() {
    return [
      // Case for regular HTML list structure.
      {
        tag: "div[data-content-type=" + this.name + "]"
        // TODO: remove if we can't come up with test case that needs this
      },
      {
        tag: "li",
        getAttrs: (t) => {
          if (typeof t == "string")
            return !1;
          const e = t.parentElement;
          return e === null ? !1 : e.tagName === "UL" || e.tagName === "DIV" && e.parentElement.tagName === "UL" ? {} : !1;
        },
        node: "bulletListItem"
      },
      // Case for BlockNote list structure.
      {
        tag: "p",
        getAttrs: (t) => {
          if (typeof t == "string")
            return !1;
          const e = t.parentElement;
          return e === null ? !1 : e.getAttribute("data-content-type") === "bulletListItem" ? {} : !1;
        },
        priority: 300,
        node: "bulletListItem"
      }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    var e, n;
    return pa(
      this.name,
      // We use a <p> tag, because for <li> tags we'd need a <ul> element to put
      // them in to be semantically correct, which we can't have due to the
      // schema.
      "p",
      {
        ...((e = this.options.domAttributes) == null ? void 0 : e.blockContent) || {},
        ...t
      },
      ((n = this.options.domAttributes) == null ? void 0 : n.inlineContent) || {}
    );
  }
}), XH = Pl(
  JH,
  YH
), QH = {
  ...mn,
  checked: {
    default: !1
  }
}, ZH = Cs({
  name: "checkListItem",
  content: "inline*",
  group: "blockContent",
  addAttributes() {
    return {
      checked: {
        default: !1,
        // instead of "checked" attributes, use "data-checked"
        parseHTML: (t) => t.getAttribute("data-checked") === "true" || void 0,
        renderHTML: (t) => t.checked ? {
          "data-checked": t.checked.toString()
        } : {}
      }
    };
  },
  addInputRules() {
    return [
      // Creates a checklist when starting with "[]" or "[X]".
      new ml({
        find: new RegExp("\\[\\s*\\]\\s$"),
        handler: ({ state: t, chain: e, range: n }) => {
          const i = jt(t);
          i.blockContent.node.type.spec.content === "inline*" && e().command(
            $n(
              this.options.editor,
              i.blockContainer.beforePos,
              {
                type: "checkListItem",
                props: {
                  checked: !1
                }
              }
            )
          ).deleteRange({ from: n.from, to: n.to });
        }
      }),
      new ml({
        find: new RegExp("\\[[Xx]\\]\\s$"),
        handler: ({ state: t, chain: e, range: n }) => {
          const i = jt(t);
          i.blockContent.node.type.spec.content === "inline*" && e().command(
            $n(
              this.options.editor,
              i.blockContainer.beforePos,
              {
                type: "checkListItem",
                props: {
                  checked: !0
                }
              }
            )
          ).deleteRange({ from: n.from, to: n.to });
        }
      })
    ];
  },
  addKeyboardShortcuts() {
    return {
      Enter: () => xv(this.options.editor),
      "Mod-Shift-9": () => {
        const t = jt(this.options.editor.state);
        return t.blockContent.node.type.spec.content !== "inline*" ? !0 : this.editor.commands.command(
          $n(
            this.options.editor,
            t.blockContainer.beforePos,
            {
              type: "checkListItem",
              props: {}
            }
          )
        );
      }
    };
  },
  parseHTML() {
    return [
      {
        tag: "div[data-content-type=" + this.name + "]"
        // TODO: remove if we can't come up with test case that needs this
      },
      // Checkbox only.
      {
        tag: "input",
        getAttrs: (t) => typeof t == "string" ? !1 : t.type === "checkbox" ? { checked: t.checked } : !1,
        node: "checkListItem"
      },
      // Container element for checkbox + label.
      {
        tag: "li",
        getAttrs: (t) => {
          if (typeof t == "string")
            return !1;
          const e = t.parentElement;
          if (e === null)
            return !1;
          if (e.tagName === "UL" || e.tagName === "DIV" && e.parentElement.tagName === "UL") {
            const n = t.querySelector(
              "input[type=checkbox]"
            ) || null;
            return n === null ? !1 : { checked: n.checked };
          }
          return !1;
        },
        node: "checkListItem"
      }
    ];
  },
  // Since there is no HTML checklist element, there isn't really any
  // standardization for what checklists should look like in the DOM. GDocs'
  // and Notion's aren't cross compatible, for example. This implementation
  // has a semantically correct DOM structure (though missing a label for the
  // checkbox) which is also converted correctly to Markdown by remark.
  renderHTML({ node: t, HTMLAttributes: e }) {
    var n, i;
    const r = document.createElement("input");
    r.type = "checkbox", r.checked = t.attrs.checked, t.attrs.checked && r.setAttribute("checked", "");
    const { dom: o, contentDOM: s } = pa(
      this.name,
      "p",
      {
        ...((n = this.options.domAttributes) == null ? void 0 : n.blockContent) || {},
        ...e
      },
      ((i = this.options.domAttributes) == null ? void 0 : i.inlineContent) || {}
    );
    return o.insertBefore(r, s), { dom: o, contentDOM: s };
  },
  // Need to render node view since the checkbox needs to be able to update the
  // node. This is only possible with a node view as it exposes `getPos`.
  addNodeView() {
    return ({ node: t, getPos: e, editor: n, HTMLAttributes: i }) => {
      var r, o;
      const s = document.createElement("div"), a = document.createElement("div");
      a.contentEditable = "false";
      const l = document.createElement("input");
      l.type = "checkbox", l.checked = t.attrs.checked, t.attrs.checked && l.setAttribute("checked", "");
      const c = () => {
        if (!n.isEditable) {
          l.checked = !l.checked;
          return;
        }
        if (typeof e != "boolean") {
          const u = Bh(
            n.state.doc,
            e()
          );
          this.editor.commands.command(
            $n(
              this.options.editor,
              u.posBeforeNode,
              {
                type: "checkListItem",
                props: {
                  checked: l.checked
                }
              }
            )
          );
        }
      };
      l.addEventListener("change", c);
      const { dom: f, contentDOM: d } = pa(
        this.name,
        "p",
        {
          ...((r = this.options.domAttributes) == null ? void 0 : r.blockContent) || {},
          ...i
        },
        ((o = this.options.domAttributes) == null ? void 0 : o.inlineContent) || {}
      );
      if (typeof e != "boolean") {
        const u = "label-" + this.editor.state.doc.resolve(e()).node().attrs.id;
        l.setAttribute("aria-labelledby", u), d.id = u;
      }
      return f.removeChild(d), f.appendChild(s), s.appendChild(a), s.appendChild(d), a.appendChild(l), {
        dom: f,
        contentDOM: d,
        destroy: () => {
          l.removeEventListener("change", c);
        }
      };
    };
  }
}), e$ = Pl(
  ZH,
  QH
), t$ = new Ct("numbered-list-indexing"), n$ = () => new mt({
  key: t$,
  appendTransaction: (t, e, n) => {
    const i = n.tr;
    i.setMeta("numberedListIndexing", !0);
    let r = !1;
    return n.doc.descendants((o, s) => {
      if (o.type.name === "blockContainer" && o.firstChild.type.name === "numberedListItem") {
        let a = "1";
        const l = Tl({
          posBeforeNode: s,
          node: o
        }), c = i.doc.resolve(
          l.blockContainer.beforePos
        ).nodeBefore;
        if (c) {
          const f = Tl({
            posBeforeNode: l.blockContainer.beforePos - c.nodeSize,
            node: c
          });
          if (f.blockContent.node.type.name === "numberedListItem") {
            const d = f.blockContent.node.attrs.index;
            a = (parseInt(d) + 1).toString();
          }
        }
        l.blockContent.node.attrs.index !== a && (r = !0, i.setNodeMarkup(l.blockContent.beforePos, void 0, {
          index: a
        }));
      }
    }), r ? i : null;
  }
}), i$ = {
  ...mn
}, r$ = Cs({
  name: "numberedListItem",
  content: "inline*",
  group: "blockContent",
  priority: 90,
  addAttributes() {
    return {
      index: {
        default: null,
        parseHTML: (t) => t.getAttribute("data-index"),
        renderHTML: (t) => ({
          "data-index": t.index
        })
      }
    };
  },
  addInputRules() {
    return [
      // Creates an ordered list when starting with "1.".
      new ml({
        find: new RegExp("^1\\.\\s$"),
        handler: ({ state: t, chain: e, range: n }) => {
          const i = jt(t);
          i.blockContent.node.type.spec.content === "inline*" && e().command(
            $n(
              this.options.editor,
              i.blockContainer.beforePos,
              {
                type: "numberedListItem",
                props: {}
              }
            )
          ).deleteRange({ from: n.from, to: n.to });
        }
      })
    ];
  },
  addKeyboardShortcuts() {
    return {
      Enter: () => xv(this.options.editor),
      "Mod-Shift-7": () => {
        const t = jt(this.editor.state);
        return t.blockContent.node.type.spec.content !== "inline*" ? !0 : this.editor.commands.command(
          $n(
            this.options.editor,
            t.blockContainer.beforePos,
            {
              type: "numberedListItem",
              props: {}
            }
          )
        );
      }
    };
  },
  addProseMirrorPlugins() {
    return [n$()];
  },
  parseHTML() {
    return [
      {
        tag: "div[data-content-type=" + this.name + "]"
        // TODO: remove if we can't come up with test case that needs this
      },
      // Case for regular HTML list structure.
      // (e.g.: when pasting from other apps)
      {
        tag: "li",
        getAttrs: (t) => {
          if (typeof t == "string")
            return !1;
          const e = t.parentElement;
          return e === null ? !1 : e.tagName === "OL" || e.tagName === "DIV" && e.parentElement.tagName === "OL" ? {} : !1;
        },
        node: "numberedListItem"
      },
      // Case for BlockNote list structure.
      // (e.g.: when pasting from blocknote)
      {
        tag: "p",
        getAttrs: (t) => {
          if (typeof t == "string")
            return !1;
          const e = t.parentElement;
          return e === null ? !1 : e.getAttribute("data-content-type") === "numberedListItem" ? {} : !1;
        },
        priority: 300,
        node: "numberedListItem"
      }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    var e, n;
    return pa(
      this.name,
      // We use a <p> tag, because for <li> tags we'd need an <ol> element to
      // put them in to be semantically correct, which we can't have due to the
      // schema.
      "p",
      {
        ...((e = this.options.domAttributes) == null ? void 0 : e.blockContent) || {},
        ...t
      },
      ((n = this.options.domAttributes) == null ? void 0 : n.inlineContent) || {}
    );
  }
}), o$ = Pl(
  r$,
  i$
), s$ = {
  ...mn
}, a$ = Cs({
  name: "paragraph",
  content: "inline*",
  group: "blockContent",
  addKeyboardShortcuts() {
    return {
      "Mod-Alt-0": () => {
        const t = jt(this.editor.state);
        return t.blockContent.node.type.spec.content !== "inline*" ? !0 : this.editor.commands.command(
          $n(
            this.options.editor,
            t.blockContainer.beforePos,
            {
              type: "paragraph",
              props: {}
            }
          )
        );
      }
    };
  },
  parseHTML() {
    return [
      { tag: "div[data-content-type=" + this.name + "]" },
      {
        tag: "p",
        priority: 200,
        getAttrs: (t) => {
          var e;
          return typeof t == "string" || !((e = t.textContent) != null && e.trim()) ? !1 : {};
        },
        node: "paragraph"
      }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    var e, n;
    return pa(
      this.name,
      "p",
      {
        ...((e = this.options.domAttributes) == null ? void 0 : e.blockContent) || {},
        ...t
      },
      ((n = this.options.domAttributes) == null ? void 0 : n.inlineContent) || {}
    );
  }
}), l$ = Pl(
  a$,
  s$
), c$ = At.create({
  name: "BlockNoteTableExtension",
  addProseMirrorPlugins: () => [
    WL({
      cellMinWidth: 100
    }),
    nD()
  ],
  addKeyboardShortcuts() {
    return {
      // Makes enter create a new line within the cell.
      Enter: () => this.editor.state.selection.empty && this.editor.state.selection.$head.parent.type.name === "tableParagraph" ? (this.editor.commands.setHardBreak(), !0) : !1,
      // Ensures that backspace won't delete the table if the text cursor is at
      // the start of a cell and the selection is empty.
      Backspace: () => {
        const t = this.editor.state.selection, e = t.empty, n = t.$head.parentOffset === 0, i = t.$head.node().type.name === "tableParagraph";
        return e && n && i;
      }
    };
  },
  extendNodeSchema(t) {
    const e = {
      name: t.name,
      options: t.options,
      storage: t.storage
    };
    return {
      tableRole: ht(
        Me(t, "tableRole", e)
      )
    };
  }
}), f$ = {
  ...mn
}, d$ = Cs({
  name: "table",
  content: "tableRow+",
  group: "blockContent",
  tableRole: "table",
  isolating: !0,
  parseHTML() {
    return [{ tag: "table" }];
  },
  renderHTML({ HTMLAttributes: t }) {
    var e, n;
    return pa(
      this.name,
      "table",
      {
        ...((e = this.options.domAttributes) == null ? void 0 : e.blockContent) || {},
        ...t
      },
      ((n = this.options.domAttributes) == null ? void 0 : n.inlineContent) || {}
    );
  }
}), u$ = jr.create({
  name: "tableParagraph",
  group: "tableContent",
  content: "inline*",
  parseHTML() {
    return [
      {
        tag: "p",
        getAttrs: (t) => {
          if (typeof t == "string" || !t.textContent)
            return !1;
          const e = t.parentElement;
          return e === null ? !1 : e.tagName === "TD" ? {} : !1;
        }
      }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    return [
      "p",
      gi(this.options.HTMLAttributes, t),
      0
    ];
  }
}), h$ = Pl(
  d$,
  f$,
  [
    c$,
    u$,
    kL.extend({
      content: "tableContent"
    }),
    bL.extend({
      content: "tableContent"
    }),
    wL
  ]
), UE = {
  paragraph: l$,
  heading: KH,
  bulletListItem: XH,
  numberedListItem: o$,
  checkListItem: e$,
  table: h$,
  file: RH,
  image: PH,
  video: $H,
  audio: AH
}, p$ = SE(UE), VE = {
  bold: zs(sL, "boolean"),
  italic: zs(pL, "boolean"),
  underline: zs(vL, "boolean"),
  strike: zs(yL, "boolean"),
  code: zs(cL, "boolean"),
  textColor: VH,
  backgroundColor: zH
};
OE(VE);
const WE = {
  text: { config: "text", implementation: {} },
  link: { config: "link", implementation: {} }
}, m$ = NE(
  WE
);
function Ei(t, e) {
  return t in e.schema.blockSchema && e.schema.blockSchema[t] === p$[t];
}
function g$(t, e) {
  return t in e.schema.inlineContentSchema && e.schema.inlineContentSchema[t] === m$[t];
}
function y$(t, e, n) {
  return e.type === t && e.type in n.schema.blockSchema && Ei(e.type, n);
}
function If(t, e) {
  return t.type in e.schema.blockSchema && e.schema.blockSchema[t.type].isFileBlock || !1;
}
function v$(t, e) {
  return t.type in e.schema.blockSchema && e.schema.blockSchema[t.type].isFileBlock && "showPreview" in e.schema.blockSchema[t.type].propSchema || !1;
}
function Lf(t, e) {
  return e.schema.blockSchema[t.type].isFileBlock && !t.props.url;
}
function Ga(t, e, n) {
  return e in n.schema.blockSchema && t in n.schema.blockSchema[e].propSchema && n.schema.blockSchema[e].propSchema[t] === mn[t];
}
function xg(t, e, n) {
  return Ga(t, e.type, n);
}
function b$(t, e, n, i = "before") {
  const r = typeof n == "string" ? n : n.id, o = [];
  for (const c of e)
    o.push(
      Dl(c, t.pmSchema, t.schema.styleSchema)
    );
  const { node: s, posBeforeNode: a } = Vh(
    r,
    t._tiptapEditor.state.doc
  );
  i === "before" && t.dispatch(
    t._tiptapEditor.state.tr.insert(a, o)
  ), i === "after" && t.dispatch(
    t._tiptapEditor.state.tr.insert(
      a + s.nodeSize,
      o
    )
  );
  const l = [];
  for (const c of o)
    l.push(
      qn(
        c,
        t.schema.blockSchema,
        t.schema.inlineContentSchema,
        t.schema.styleSchema,
        t.blockCache
      )
    );
  return l;
}
function k$(t) {
  const { blockContainer: e } = jt(
    t._tiptapEditor.state
  ), n = {
    blockId: e.node.attrs.id,
    blockPos: e.beforePos
  };
  return t._tiptapEditor.state.selection instanceof on ? {
    ...n,
    type: "cell",
    anchorCell: t._tiptapEditor.state.selection.$anchorCell.pos,
    headCell: t._tiptapEditor.state.selection.$headCell.pos
  } : t._tiptapEditor.state.selection instanceof Ie ? {
    ...n,
    type: "node",
    from: t._tiptapEditor.state.selection.from
  } : {
    ...n,
    type: "text",
    anchor: t._tiptapEditor.state.selection.anchor,
    head: t._tiptapEditor.state.selection.head
  };
}
function w$(t, e) {
  const n = Vh(
    e.blockId,
    t._tiptapEditor.state.doc
  ).posBeforeNode;
  let i;
  e.type === "cell" ? i = on.create(
    t._tiptapEditor.state.doc,
    e.anchorCell + (n - e.blockPos),
    e.headCell + (n - e.blockPos)
  ) : e.type === "node" ? i = Ie.create(
    t._tiptapEditor.state.doc,
    e.from + (n - e.blockPos)
  ) : i = ze.create(
    t._tiptapEditor.state.doc,
    e.anchor + (n - e.blockPos),
    e.head + (n - e.blockPos)
  ), t._tiptapEditor.view.dispatch(
    t._tiptapEditor.state.tr.setSelection(i)
  );
}
function qE(t, e, n) {
  const { block: i } = t.getTextCursorPosition(), r = k$(t);
  t.removeBlocks([i]), t.insertBlocks([i], e, n), w$(t, r);
}
function _$(t) {
  const e = t.getSelection();
  if (e && e.blocks.length > 1)
    return;
  const { prevBlock: n, parentBlock: i } = t.getTextCursorPosition();
  let r, o;
  n ? n.children.length > 0 ? (r = n.children[n.children.length - 1].id, o = "after") : (r = n.id, o = "before") : i && (r = i.id, o = "before"), !(!r || !o) && qE(t, r, o);
}
function E$(t) {
  const e = t.getSelection();
  if (e && e.blocks.length > 1)
    return;
  const { nextBlock: n, parentBlock: i } = t.getTextCursorPosition();
  let r, o;
  n ? n.children.length > 0 ? (r = n.children[0].id, o = "before") : (r = n.id, o = "after") : i && (r = i.id, o = "after"), !(!r || !o) && qE(t, r, o);
}
function GE(t, e, n) {
  const i = t._tiptapEditor, r = i.state.tr, o = new Set(
    e.map(
      (l) => typeof l == "string" ? l : l.id
    )
  ), s = [];
  let a = 0;
  if (i.state.doc.descendants((l, c) => {
    if (o.size === 0)
      return !1;
    if (l.type.name !== "blockContainer" || !o.has(l.attrs.id))
      return !0;
    s.push(
      qn(
        l,
        t.schema.blockSchema,
        t.schema.inlineContentSchema,
        t.schema.styleSchema,
        t.blockCache
      )
    ), o.delete(l.attrs.id), a = (n == null ? void 0 : n(l, c, r, a)) || a;
    const f = r.doc.nodeSize;
    r.delete(c - a - 1, c - a + l.nodeSize + 1);
    const d = r.doc.nodeSize;
    return a += f - d, !1;
  }), o.size > 0) {
    const l = [...o].join(`
`);
    throw Error(
      "Blocks with the following IDs could not be found in the editor: " + l
    );
  }
  return t.dispatch(r), s;
}
function T$(t, e) {
  return GE(t, e);
}
function C$(t, e, n) {
  const i = [];
  for (const a of n)
    i.push(
      Dl(a, t.pmSchema, t.schema.styleSchema)
    );
  const r = typeof e[0] == "string" ? e[0] : e[0].id, o = GE(
    t,
    e,
    (a, l, c, f) => {
      if (a.attrs.id === r) {
        const d = c.doc.nodeSize;
        c.insert(l, i);
        const u = c.doc.nodeSize;
        return f + d - u;
      }
      return f;
    }
  ), s = [];
  for (const a of i)
    s.push(
      qn(
        a,
        t.schema.blockSchema,
        t.schema.inlineContentSchema,
        t.schema.styleSchema,
        t.blockCache
      )
    );
  return { insertedBlocks: s, removedBlocks: o };
}
function S$(t, e, n, i = { updateSelection: !0 }) {
  const r = n._tiptapEditor.state.tr;
  let { from: o, to: s } = typeof t == "number" ? { from: t, to: t } : { from: t.from, to: t.to }, a = !0, l = !0, c = "";
  if (e.forEach((f) => {
    f.check(), a && f.isText && f.marks.length === 0 ? c += f.text : a = !1, l = l ? f.isBlock : !1;
  }), o === s && l) {
    const { parent: f } = r.doc.resolve(o);
    f.isTextblock && !f.type.spec.code && !f.childCount && (o -= 1, s += 1);
  }
  return a ? r.insertText(c, o, s) : r.replaceWith(o, s, e), i.updateSelection && x6(r, r.steps.length - 1, -1), n.dispatch(r), !0;
}
function x$(t) {
  const { blockContainer: e } = jt(
    t._tiptapEditor.state
  ), n = t._tiptapEditor.state.doc.resolve(
    e.beforePos
  ), i = n.nodeBefore, r = t._tiptapEditor.state.doc.resolve(
    e.afterPos
  ).nodeAfter;
  let o;
  return n.depth > 1 && (o = n.node(n.depth - 1)), {
    block: qn(
      e.node,
      t.schema.blockSchema,
      t.schema.inlineContentSchema,
      t.schema.styleSchema,
      t.blockCache
    ),
    prevBlock: i === null ? void 0 : qn(
      i,
      t.schema.blockSchema,
      t.schema.inlineContentSchema,
      t.schema.styleSchema,
      t.blockCache
    ),
    nextBlock: r === null ? void 0 : qn(
      r,
      t.schema.blockSchema,
      t.schema.inlineContentSchema,
      t.schema.styleSchema,
      t.blockCache
    ),
    parentBlock: o === void 0 ? void 0 : qn(
      o,
      t.schema.blockSchema,
      t.schema.inlineContentSchema,
      t.schema.styleSchema,
      t.blockCache
    )
  };
}
function A$(t, e, n = "start") {
  const i = typeof e == "string" ? e : e.id, r = Vh(i, t._tiptapEditor.state.doc), { blockContent: o } = Tl(r), s = t.schema.blockSchema[o.node.type.name].content;
  if (s === "none") {
    t._tiptapEditor.commands.setNodeSelection(o.beforePos);
    return;
  }
  if (s === "inline")
    n === "start" ? t._tiptapEditor.commands.setTextSelection(
      o.beforePos + 1
    ) : t._tiptapEditor.commands.setTextSelection(o.afterPos - 1);
  else if (s === "table")
    n === "start" ? t._tiptapEditor.commands.setTextSelection(
      o.beforePos + 4
    ) : t._tiptapEditor.commands.setTextSelection(o.afterPos - 4);
  else
    throw new Br(s);
}
let Ka;
async function Av() {
  if (Ka)
    return Ka;
  const t = await Promise.all([
    Promise.resolve().then(() => cQ),
    Promise.resolve().then(() => aZ),
    Promise.resolve().then(() => AZ),
    Promise.resolve().then(() => DZ),
    Promise.resolve().then(() => hte),
    Promise.resolve().then(() => wre),
    Promise.resolve().then(() => ooe),
    Promise.resolve().then(() => Foe),
    Promise.resolve().then(() => wse),
    Promise.resolve().then(() => yae)
  ]);
  return Ka = {
    rehypeParse: t[0],
    rehypeStringify: t[1],
    unified: t[2],
    hastUtilFromDom: t[3],
    rehypeRemark: t[4],
    remarkGfm: t[5],
    remarkStringify: t[6],
    remarkParse: t[7],
    remarkRehype: t[8],
    rehypeFormat: t[9]
  }, Ka;
}
function M$() {
  const t = (e) => {
    let n = e.children.length;
    for (let i = 0; i < n; i++) {
      const r = e.children[i];
      if (r.type === "element" && (t(r), r.tagName === "u"))
        if (r.children.length > 0) {
          e.children.splice(i, 1, ...r.children);
          const o = r.children.length - 1;
          n += o, i += o;
        } else
          e.children.splice(i, 1), n--, i--;
    }
  };
  return t;
}
function N$() {
  const t = Ka;
  if (!t)
    throw new Error(
      "addSpacesToCheckboxes requires ESM dependencies to be initialized"
    );
  const e = (n) => {
    var i;
    if (n.children && "length" in n.children && n.children.length)
      for (let r = n.children.length - 1; r >= 0; r--) {
        const o = n.children[r], s = r + 1 < n.children.length ? n.children[r + 1] : void 0;
        o.type === "element" && o.tagName === "input" && ((i = o.properties) == null ? void 0 : i.type) === "checkbox" && (s == null ? void 0 : s.type) === "element" && s.tagName === "p" ? (s.tagName = "span", s.children.splice(
          0,
          0,
          t.hastUtilFromDom.fromDom(
            document.createTextNode(" ")
          )
        )) : e(o);
      }
  };
  return e;
}
function Mv(t) {
  const e = Ka;
  if (!e)
    throw new Error(
      "cleanHTMLToMarkdown requires ESM dependencies to be initialized"
    );
  return e.unified.unified().use(e.rehypeParse.default, { fragment: !0 }).use(M$).use(N$).use(e.rehypeRemark.default).use(e.remarkGfm.default).use(e.remarkStringify.default, {
    handlers: { text: (n) => n.value }
  }).processSync(t).value;
}
async function O$(t, e, n, i) {
  await Av();
  const r = Fh(e, n).exportBlocks(t, i);
  return Mv(r);
}
function R$(t) {
  return Array.prototype.indexOf.call(t.parentElement.childNodes, t);
}
function I$(t) {
  return t.nodeType === 3 && !/\S/.test(t.nodeValue || "");
}
function L$(t) {
  t.querySelectorAll("li > ul, li > ol").forEach((e) => {
    const n = R$(e), i = e.parentElement, r = Array.from(i.childNodes).slice(
      n + 1
    );
    e.remove(), r.forEach((o) => {
      o.remove();
    }), i.insertAdjacentElement("afterend", e), r.reverse().forEach((o) => {
      if (I$(o))
        return;
      const s = document.createElement("li");
      s.append(o), e.insertAdjacentElement("afterend", s);
    }), i.childNodes.length === 0 && i.remove();
  });
}
function D$(t) {
  t.querySelectorAll("li + ul, li + ol").forEach((e) => {
    var n, i;
    const r = e.previousElementSibling, o = document.createElement("div");
    r.insertAdjacentElement("afterend", o), o.append(r);
    const s = document.createElement("div");
    for (s.setAttribute("data-node-type", "blockGroup"), o.append(s); ((n = o.nextElementSibling) == null ? void 0 : n.nodeName) === "UL" || ((i = o.nextElementSibling) == null ? void 0 : i.nodeName) === "OL"; )
      s.append(o.nextElementSibling);
  });
}
let Hw = null;
function P$() {
  return Hw || (Hw = document.implementation.createHTMLDocument("title"));
}
function KE(t) {
  if (typeof t == "string") {
    const e = P$().createElement("div");
    e.innerHTML = t, t = e;
  }
  return L$(t), D$(t), t;
}
async function YE(t, e, n, i, r) {
  const o = KE(t), s = Xa.fromSchema(r).parse(o, {
    topNode: r.nodes.blockGroup.create()
  }), a = [];
  for (let l = 0; l < s.childCount; l++)
    a.push(
      qn(s.child(l), e, n, i)
    );
  return a;
}
function F$(t, e) {
  const n = e.value ? e.value + `
` : "", i = {};
  e.lang && (i["data-language"] = e.lang);
  let r = {
    type: "element",
    tagName: "code",
    properties: i,
    children: [{ type: "text", value: n }]
  };
  return e.meta && (r.data = { meta: e.meta }), t.patch(e, r), r = t.applyData(e, r), r = {
    type: "element",
    tagName: "pre",
    properties: {},
    children: [r]
  }, t.patch(e, r), r;
}
async function B$(t, e, n, i, r) {
  const o = await Av(), s = o.unified.unified().use(o.remarkParse.default).use(o.remarkGfm.default).use(o.remarkRehype.default, {
    handlers: {
      ...o.remarkRehype.defaultHandlers,
      code: F$
    }
  }).use(o.rehypeStringify.default).processSync(t);
  return YE(
    s.value,
    e,
    n,
    i,
    r
  );
}
let Fl = class {
  constructor() {
    ne(this, "callbacks", {});
  }
  on(e, n) {
    return this.callbacks[e] || (this.callbacks[e] = []), this.callbacks[e].push(n), () => this.off(e, n);
  }
  emit(e, ...n) {
    const i = this.callbacks[e];
    i && i.forEach((r) => r.apply(this, n));
  }
  off(e, n) {
    const i = this.callbacks[e];
    i && (n ? this.callbacks[e] = i.filter((r) => r !== n) : delete this.callbacks[e]);
  }
  removeAllListeners() {
    this.callbacks = {};
  }
};
class H$ {
  constructor(e, n, i, r) {
    ne(this, "state"), ne(this, "emitUpdate"), ne(this, "mouseDownHandler", () => {
      var o;
      (o = this.state) != null && o.show && (this.state.show = !1, this.emitUpdate());
    }), ne(this, "dragstartHandler", () => {
      var o;
      (o = this.state) != null && o.show && (this.state.show = !1, this.emitUpdate());
    }), ne(this, "scrollHandler", () => {
      var o;
      if ((o = this.state) != null && o.show) {
        const s = this.pmView.root.querySelector(
          `[data-node-type="blockContainer"][data-id="${this.state.block.id}"]`
        );
        if (!s)
          return;
        this.state.referencePos = s.getBoundingClientRect(), this.emitUpdate();
      }
    }), ne(this, "closeMenu", () => {
      var o;
      (o = this.state) != null && o.show && (this.state.show = !1, this.emitUpdate());
    }), this.editor = e, this.pluginKey = n, this.pmView = i, this.emitUpdate = () => {
      if (!this.state)
        throw new Error("Attempting to update uninitialized file panel");
      r(this.state);
    }, i.dom.addEventListener("mousedown", this.mouseDownHandler), i.dom.addEventListener("dragstart", this.dragstartHandler), i.root.addEventListener("scroll", this.scrollHandler, !0);
  }
  update(e, n) {
    var i, r;
    const o = this.pluginKey.getState(e.state);
    if (!((i = this.state) != null && i.show) && o.block && this.editor.isEditable) {
      const s = this.pmView.root.querySelector(
        `[data-node-type="blockContainer"][data-id="${o.block.id}"]`
      );
      if (!s)
        return;
      this.state = {
        show: !0,
        referencePos: s.getBoundingClientRect(),
        block: o.block
      }, this.emitUpdate();
      return;
    }
    (!e.state.selection.eq(n.selection) || !e.state.doc.eq(n.doc) || !this.editor.isEditable) && (r = this.state) != null && r.show && (this.state.show = !1, this.emitUpdate());
  }
  destroy() {
    this.pmView.dom.removeEventListener("mousedown", this.mouseDownHandler), this.pmView.dom.removeEventListener("dragstart", this.dragstartHandler), this.pmView.root.removeEventListener("scroll", this.scrollHandler, !0);
  }
}
const mm = new Ct("FilePanelPlugin");
class $$ extends Fl {
  constructor(e) {
    super(), ne(this, "view"), ne(this, "plugin"), ne(this, "closeMenu", () => {
      var n;
      return (n = this.view) == null ? void 0 : n.closeMenu();
    }), this.plugin = new mt({
      key: mm,
      view: (n) => (this.view = new H$(
        e,
        mm,
        n,
        (i) => {
          this.emit("update", i);
        }
      ), this.view),
      props: {
        handleKeyDown: (n, i) => {
          var r;
          return i.key === "Escape" && this.shown ? ((r = this.view) == null || r.closeMenu(), !0) : !1;
        }
      },
      state: {
        init: () => ({
          block: void 0
        }),
        apply: (n) => {
          var i;
          return {
            block: (i = n.getMeta(mm)) == null ? void 0 : i.block
          };
        }
      }
    });
  }
  get shown() {
    var e, n;
    return ((n = (e = this.view) == null ? void 0 : e.state) == null ? void 0 : n.show) || !1;
  }
  onUpdate(e) {
    return this.on("update", e);
  }
}
class j$ {
  constructor(e, n, i) {
    ne(this, "state"), ne(this, "emitUpdate"), ne(this, "preventHide", !1), ne(this, "preventShow", !1), ne(this, "shouldShow", ({ state: r, from: o, to: s, view: a }) => {
      const { doc: l, selection: c } = r, { empty: f } = c, d = !l.textBetween(o, s).length && Fy(r.selection);
      return !(!a.hasFocus() || f || d);
    }), ne(this, "blurHandler", (r) => {
      var o;
      if (this.preventHide) {
        this.preventHide = !1;
        return;
      }
      const s = this.pmView.dom.parentElement;
      r && r.relatedTarget && // Element is inside the editor.
      (s === r.relatedTarget || s.contains(r.relatedTarget) || r.relatedTarget.matches(
        ".bn-ui-container, .bn-ui-container *"
      )) || (o = this.state) != null && o.show && (this.state.show = !1, this.emitUpdate());
    }), ne(this, "viewMousedownHandler", () => {
      this.preventShow = !0;
    }), ne(this, "viewMouseupHandler", () => {
      this.preventShow = !1, setTimeout(() => this.update(this.pmView));
    }), ne(this, "dragHandler", () => {
      var r;
      (r = this.state) != null && r.show && (this.state.show = !1, this.emitUpdate());
    }), ne(this, "scrollHandler", () => {
      var r;
      (r = this.state) != null && r.show && (this.state.referencePos = this.getSelectionBoundingBox(), this.emitUpdate());
    }), ne(this, "closeMenu", () => {
      var r;
      (r = this.state) != null && r.show && (this.state.show = !1, this.emitUpdate());
    }), this.editor = e, this.pmView = n, this.emitUpdate = () => {
      if (!this.state)
        throw new Error(
          "Attempting to update uninitialized formatting toolbar"
        );
      i(this.state);
    }, n.dom.addEventListener("mousedown", this.viewMousedownHandler), n.dom.addEventListener("mouseup", this.viewMouseupHandler), n.dom.addEventListener("dragstart", this.dragHandler), n.dom.addEventListener("dragover", this.dragHandler), n.dom.addEventListener("blur", this.blurHandler), n.root.addEventListener("scroll", this.scrollHandler, !0);
  }
  update(e, n) {
    var i, r;
    const { state: o, composing: s } = e, { doc: a, selection: l } = o, c = n && n.doc.eq(a) && n.selection.eq(l);
    if (s || c)
      return;
    const { ranges: f } = l, d = Math.min(...f.map((p) => p.$from.pos)), u = Math.max(...f.map((p) => p.$to.pos)), h = (i = this.shouldShow) == null ? void 0 : i.call(this, {
      view: e,
      state: o,
      from: d,
      to: u
    });
    if (!this.preventShow && (h || this.preventHide)) {
      this.state = {
        show: !0,
        referencePos: this.getSelectionBoundingBox()
      }, this.emitUpdate();
      return;
    }
    if ((r = this.state) != null && r.show && !this.preventHide && (!h || this.preventShow || !this.editor.isEditable)) {
      this.state.show = !1, this.emitUpdate();
      return;
    }
  }
  destroy() {
    this.pmView.dom.removeEventListener("mousedown", this.viewMousedownHandler), this.pmView.dom.removeEventListener("mouseup", this.viewMouseupHandler), this.pmView.dom.removeEventListener("dragstart", this.dragHandler), this.pmView.dom.removeEventListener("dragover", this.dragHandler), this.pmView.dom.removeEventListener("blur", this.blurHandler), this.pmView.root.removeEventListener("scroll", this.scrollHandler, !0);
  }
  getSelectionBoundingBox() {
    const { state: e } = this.pmView, { selection: n } = e, { ranges: i } = n, r = Math.min(...i.map((s) => s.$from.pos)), o = Math.max(...i.map((s) => s.$to.pos));
    if (TI(n)) {
      const s = this.pmView.nodeDOM(r);
      if (s)
        return s.getBoundingClientRect();
    }
    return K0(this.pmView, r, o);
  }
}
const z$ = new Ct(
  "FormattingToolbarPlugin"
);
class U$ extends Fl {
  constructor(e) {
    super(), ne(this, "view"), ne(this, "plugin"), ne(this, "closeMenu", () => this.view.closeMenu()), this.plugin = new mt({
      key: z$,
      view: (n) => (this.view = new j$(e, n, (i) => {
        this.emit("update", i);
      }), this.view),
      props: {
        handleKeyDown: (n, i) => i.key === "Escape" && this.shown ? (this.view.closeMenu(), !0) : !1
      }
    });
  }
  get shown() {
    var e, n;
    return ((n = (e = this.view) == null ? void 0 : e.state) == null ? void 0 : n.show) || !1;
  }
  onUpdate(e) {
    return this.on("update", e);
  }
}
class V$ {
  constructor(e, n, i) {
    ne(this, "state"), ne(this, "emitUpdate"), ne(this, "menuUpdateTimer"), ne(this, "startMenuUpdateTimer"), ne(this, "stopMenuUpdateTimer"), ne(this, "mouseHoveredLinkMark"), ne(this, "mouseHoveredLinkMarkRange"), ne(this, "keyboardHoveredLinkMark"), ne(this, "keyboardHoveredLinkMarkRange"), ne(this, "linkMark"), ne(this, "linkMarkRange"), ne(this, "mouseOverHandler", (r) => {
      if (this.mouseHoveredLinkMark = void 0, this.mouseHoveredLinkMarkRange = void 0, this.stopMenuUpdateTimer(), r.target instanceof HTMLAnchorElement && r.target.nodeName === "A") {
        const o = r.target, s = this.pmView.posAtDOM(o, 0) + 1, a = this.pmView.state.doc.resolve(s), l = a.marks();
        for (const c of l)
          if (c.type.name === this.pmView.state.schema.mark("link").type.name) {
            this.mouseHoveredLinkMark = c, this.mouseHoveredLinkMarkRange = Zc(a, c.type, c.attrs) || void 0;
            break;
          }
      }
      return this.startMenuUpdateTimer(), !1;
    }), ne(this, "clickHandler", (r) => {
      var o;
      const s = this.pmView.dom.parentElement;
      this.linkMark && // An element is clicked.
      r && r.target && // The clicked element is not the editor.
      !(s === r.target || s.contains(r.target)) && (o = this.state) != null && o.show && (this.state.show = !1, this.emitUpdate());
    }), ne(this, "scrollHandler", () => {
      var r;
      this.linkMark !== void 0 && (r = this.state) != null && r.show && (this.state.referencePos = K0(
        this.pmView,
        this.linkMarkRange.from,
        this.linkMarkRange.to
      ), this.emitUpdate());
    }), ne(this, "closeMenu", () => {
      var r;
      (r = this.state) != null && r.show && (this.state.show = !1, this.emitUpdate());
    }), this.editor = e, this.pmView = n, this.emitUpdate = () => {
      if (!this.state)
        throw new Error("Attempting to update uninitialized link toolbar");
      i(this.state);
    }, this.startMenuUpdateTimer = () => {
      this.menuUpdateTimer = setTimeout(() => {
        this.update();
      }, 250);
    }, this.stopMenuUpdateTimer = () => (this.menuUpdateTimer && (clearTimeout(this.menuUpdateTimer), this.menuUpdateTimer = void 0), !1), this.pmView.dom.addEventListener("mouseover", this.mouseOverHandler), this.pmView.root.addEventListener(
      "click",
      this.clickHandler,
      !0
    ), this.pmView.root.addEventListener("scroll", this.scrollHandler, !0);
  }
  editLink(e, n) {
    var i;
    const r = this.pmView.state.tr.insertText(
      n,
      this.linkMarkRange.from,
      this.linkMarkRange.to
    );
    r.addMark(
      this.linkMarkRange.from,
      this.linkMarkRange.from + n.length,
      this.pmView.state.schema.mark("link", { href: e })
    ), this.editor.dispatch(r), this.pmView.focus(), (i = this.state) != null && i.show && (this.state.show = !1, this.emitUpdate());
  }
  deleteLink() {
    var e;
    this.editor.dispatch(
      this.pmView.state.tr.removeMark(
        this.linkMarkRange.from,
        this.linkMarkRange.to,
        this.linkMark.type
      ).setMeta("preventAutolink", !0)
    ), this.pmView.focus(), (e = this.state) != null && e.show && (this.state.show = !1, this.emitUpdate());
  }
  update() {
    var e;
    if (!this.pmView.hasFocus())
      return;
    const n = this.linkMark;
    if (this.linkMark = void 0, this.linkMarkRange = void 0, this.keyboardHoveredLinkMark = void 0, this.keyboardHoveredLinkMarkRange = void 0, this.pmView.state.selection.empty) {
      const i = this.pmView.state.selection.$from.marks();
      for (const r of i)
        if (r.type.name === this.pmView.state.schema.mark("link").type.name) {
          this.keyboardHoveredLinkMark = r, this.keyboardHoveredLinkMarkRange = Zc(
            this.pmView.state.selection.$from,
            r.type,
            r.attrs
          ) || void 0;
          break;
        }
    }
    if (this.mouseHoveredLinkMark && (this.linkMark = this.mouseHoveredLinkMark, this.linkMarkRange = this.mouseHoveredLinkMarkRange), this.keyboardHoveredLinkMark && (this.linkMark = this.keyboardHoveredLinkMark, this.linkMarkRange = this.keyboardHoveredLinkMarkRange), this.linkMark && this.editor.isEditable) {
      this.state = {
        show: !0,
        referencePos: K0(
          this.pmView,
          this.linkMarkRange.from,
          this.linkMarkRange.to
        ),
        url: this.linkMark.attrs.href,
        text: this.pmView.state.doc.textBetween(
          this.linkMarkRange.from,
          this.linkMarkRange.to
        )
      }, this.emitUpdate();
      return;
    }
    if ((e = this.state) != null && e.show && n && (!this.linkMark || !this.editor.isEditable)) {
      this.state.show = !1, this.emitUpdate();
      return;
    }
  }
  destroy() {
    this.pmView.dom.removeEventListener("mouseover", this.mouseOverHandler), this.pmView.root.removeEventListener("scroll", this.scrollHandler, !0), this.pmView.root.removeEventListener(
      "click",
      this.clickHandler,
      !0
    );
  }
}
const W$ = new Ct("LinkToolbarPlugin");
class q$ extends Fl {
  constructor(e) {
    super(), ne(this, "view"), ne(this, "plugin"), ne(this, "editLink", (n, i) => {
      this.view.editLink(n, i);
    }), ne(this, "deleteLink", () => {
      this.view.deleteLink();
    }), ne(this, "startHideTimer", () => {
      this.view.startMenuUpdateTimer();
    }), ne(this, "stopHideTimer", () => {
      this.view.stopMenuUpdateTimer();
    }), ne(this, "closeMenu", () => this.view.closeMenu()), this.plugin = new mt({
      key: W$,
      view: (n) => (this.view = new V$(e, n, (i) => {
        this.emit("update", i);
      }), this.view),
      props: {
        handleKeyDown: (n, i) => i.key === "Escape" && this.shown ? (this.view.closeMenu(), !0) : !1
      }
    });
  }
  onUpdate(e) {
    return this.on("update", e);
  }
  get shown() {
    var e, n;
    return ((n = (e = this.view) == null ? void 0 : e.state) == null ? void 0 : n.show) || !1;
  }
}
function JE(t, e) {
  const n = [];
  return t.descendants((i) => {
    var r;
    return i.type.name === "blockContainer" ? ((r = i.firstChild) == null ? void 0 : r.type.name) === "blockGroup" ? !0 : (n.push(
      qn(
        i,
        e.blockSchema,
        e.inlineContentSchema,
        e.styleSchema
      )
    ), !1) : !0;
  }), n;
}
class ol extends $e {
  constructor(e, n) {
    super(e, n), ne(this, "nodes");
    const i = e.node();
    this.nodes = [], e.doc.nodesBetween(e.pos, n.pos, (r, o, s) => {
      if (s !== null && s.eq(i))
        return this.nodes.push(r), !1;
    });
  }
  static create(e, n, i = n) {
    return new ol(e.resolve(n), e.resolve(i));
  }
  content() {
    return new be(ie.from(this.nodes), 0, 0);
  }
  eq(e) {
    if (!(e instanceof ol) || this.nodes.length !== e.nodes.length || this.from !== e.from || this.to !== e.to)
      return !1;
    for (let n = 0; n < this.nodes.length; n++)
      if (!this.nodes[n].eq(e.nodes[n]))
        return !1;
    return !0;
  }
  map(e, n) {
    const i = n.mapResult(this.from), r = n.mapResult(this.to);
    return r.deleted ? $e.near(e.resolve(i.pos)) : i.deleted ? $e.near(e.resolve(r.pos)) : new ol(
      e.resolve(i.pos),
      e.resolve(r.pos)
    );
  }
  toJSON() {
    return { type: "node", anchor: this.anchor, head: this.head };
  }
}
let Er;
function Wh(t, e) {
  for (var n, i; t && t.parentElement && t.parentElement !== e.dom && ((n = t.getAttribute) == null ? void 0 : n.call(t, "data-node-type")) !== "blockContainer"; )
    t = t.parentElement;
  if (((i = t.getAttribute) == null ? void 0 : i.call(t, "data-node-type")) === "blockContainer")
    return { node: t, id: t.getAttribute("data-id") };
}
function G$(t, e) {
  const n = Wh(t, e);
  if (n && n.node.nodeType === 1) {
    const i = e.docView, r = i.nearestDesc(n.node, !0);
    return !r || r === i ? null : r.posBefore;
  }
  return null;
}
function K$(t, e) {
  let n, i;
  const r = e.resolve(t.from).node().type.spec.group === "blockContent", o = e.resolve(t.to).node().type.spec.group === "blockContent", s = Math.min(t.$anchor.depth, t.$head.depth);
  if (r && o) {
    const a = t.$from.start(s - 1), l = t.$to.end(s - 1);
    n = e.resolve(a - 1).pos, i = e.resolve(l + 1).pos;
  } else
    n = t.from, i = t.to;
  return { from: n, to: i };
}
function $w(t, e, n = e) {
  e === n && (n += t.state.doc.resolve(e + 1).node().nodeSize);
  const i = t.domAtPos(e).node.cloneNode(!0), r = t.domAtPos(e).node, o = (c, f) => Array.prototype.indexOf.call(c.children, f), s = o(
    r,
    // Expects from position to be just before the first selected block.
    t.domAtPos(e + 1).node.parentElement
  ), a = o(
    r,
    // Expects to position to be just after the last selected block.
    t.domAtPos(n - 1).node.parentElement
  );
  for (let c = r.childElementCount - 1; c >= 0; c--)
    (c > a || c < s) && i.removeChild(i.children[c]);
  XE(t.root), Er = i;
  const l = t.dom.className.split(" ").filter(
    (c) => c !== "ProseMirror" && c !== "bn-root" && c !== "bn-editor"
  ).join(" ");
  Er.className = Er.className + " bn-drag-preview " + l, t.root instanceof ShadowRoot ? t.root.appendChild(Er) : t.root.body.appendChild(Er);
}
function XE(t) {
  Er !== void 0 && (t instanceof ShadowRoot ? t.removeChild(Er) : t.body.removeChild(Er), Er = void 0);
}
function Y$(t, e) {
  if (!t.dataTransfer)
    return;
  const n = e.prosemirrorView, i = n.dom.getBoundingClientRect(), r = {
    left: i.left + i.width / 2,
    // take middle of editor
    top: t.clientY
  }, o = n.root.elementsFromPoint(r.left, r.top);
  let s;
  for (const l of o)
    if (n.dom.contains(l)) {
      s = Wh(l, n);
      break;
    }
  if (!s)
    return;
  const a = G$(s.node, n);
  if (a != null) {
    const l = n.state.selection, c = n.state.doc, { from: f, to: d } = K$(l, c), u = f <= a && a < d, h = l.$anchor.node() !== l.$head.node() || l instanceof ol;
    u && h ? (n.dispatch(
      n.state.tr.setSelection(ol.create(c, f, d))
    ), $w(n, f, d)) : (n.dispatch(
      n.state.tr.setSelection(Ie.create(n.state.doc, a))
    ), $w(n, a));
    const p = n.state.selection.content(), m = e.pmSchema, v = d6(
      n,
      p
    ).dom.innerHTML, y = Fh(m, e), C = JE(p.content, e.schema), k = y.exportBlocks(C, {}), _ = Mv(k);
    t.dataTransfer.clearData(), t.dataTransfer.setData("blocknote/html", v), t.dataTransfer.setData("text/html", k), t.dataTransfer.setData("text/plain", _), t.dataTransfer.effectAllowed = "move", t.dataTransfer.setDragImage(Er, 0, 0), n.dragging = { slice: p, move: !0 };
  }
}
const J$ = (t, e) => {
  if (!e.dom.firstChild)
    return;
  const n = e.dom.firstChild.getBoundingClientRect(), i = {
    left: n.left + n.width / 2,
    // take middle of editor
    top: t.y
  }, r = e.root.elementsFromPoint(i.left, i.top);
  let o;
  for (const s of r)
    if (e.dom.contains(s)) {
      o = Wh(s, e);
      break;
    }
  return o;
};
class X$ {
  constructor(e, n, i) {
    ne(this, "state"), ne(this, "emitUpdate"), ne(this, "mousePos"), ne(this, "hoveredBlock"), ne(this, "menuFrozen", !1), ne(this, "updateState", (r) => {
      this.state = r, this.emitUpdate(this.state);
    }), ne(this, "updateStateFromMousePos", () => {
      var r, o, s, a;
      if (this.menuFrozen || !this.mousePos)
        return;
      const l = J$(this.mousePos, this.pmView);
      if (!l || !this.editor.isEditable) {
        (r = this.state) != null && r.show && (this.state.show = !1, this.updateState(this.state));
        return;
      }
      if ((o = this.state) != null && o.show && (s = this.hoveredBlock) != null && s.hasAttribute("data-id") && ((a = this.hoveredBlock) == null ? void 0 : a.getAttribute("data-id")) === l.id)
        return;
      this.hoveredBlock = l.node;
      const c = l.node.firstChild;
      if (c && this.editor.isEditable) {
        const f = this.pmView.dom.firstChild.getBoundingClientRect(), d = c.getBoundingClientRect();
        this.updateState({
          show: !0,
          referencePos: new DOMRect(
            f.x,
            d.y,
            d.width,
            d.height
          ),
          block: this.editor.getBlock(
            this.hoveredBlock.getAttribute("data-id")
          )
        });
      }
    }), ne(this, "onDrop", (r) => {
      var o;
      if (this.editor._tiptapEditor.commands.blur(), r.synthetic || !((o = r.dataTransfer) != null && o.types.includes("blocknote/html")))
        return;
      const s = this.pmView.posAtCoords({
        left: r.clientX,
        top: r.clientY
      });
      if (!s || s.inside === -1) {
        const a = new Event("drop", r), l = this.pmView.dom.firstChild.getBoundingClientRect();
        a.clientX = r.clientX < l.left || r.clientX > l.left + l.width ? l.left + l.width / 2 : r.clientX, a.clientY = Math.min(
          Math.max(r.clientY, l.top),
          l.top + l.height
        ), a.dataTransfer = r.dataTransfer, a.preventDefault = () => r.preventDefault(), a.synthetic = !0, this.pmView.dom.dispatchEvent(a);
      }
    }), ne(this, "onDragOver", (r) => {
      var o;
      if (r.synthetic || !((o = r.dataTransfer) != null && o.types.includes("blocknote/html")))
        return;
      const s = this.pmView.posAtCoords({
        left: r.clientX,
        top: r.clientY
      });
      if (!s || s.inside === -1 && this.pmView.dom.firstChild) {
        const a = new Event("dragover", r), l = this.pmView.dom.firstChild.getBoundingClientRect();
        a.clientX = l.left + l.width / 2, a.clientY = r.clientY, a.dataTransfer = r.dataTransfer, a.preventDefault = () => r.preventDefault(), a.synthetic = !0, this.pmView.dom.dispatchEvent(a);
      }
    }), ne(this, "onKeyDown", (r) => {
      var o;
      (o = this.state) != null && o.show && this.editor.isFocused() && (this.state.show = !1, this.emitUpdate(this.state));
    }), ne(this, "onMouseMove", (r) => {
      var o;
      if (this.menuFrozen)
        return;
      this.mousePos = { x: r.clientX, y: r.clientY };
      const s = this.pmView.dom.getBoundingClientRect(), a = this.mousePos.x > s.left && this.mousePos.x < s.right && this.mousePos.y > s.top && this.mousePos.y < s.bottom, l = this.pmView.dom.parentElement;
      if (
        // Cursor is within the editor area
        a && // An element is hovered
        r && r.target && // Element is outside the editor
        !(l === r.target || l.contains(r.target))
      ) {
        (o = this.state) != null && o.show && (this.state.show = !1, this.emitUpdate(this.state));
        return;
      }
      this.updateStateFromMousePos();
    }), this.editor = e, this.pmView = n, this.emitUpdate = () => {
      if (!this.state)
        throw new Error("Attempting to update uninitialized side menu");
      i(this.state);
    }, this.pmView.root.addEventListener(
      "drop",
      this.onDrop,
      !0
    ), this.pmView.root.addEventListener(
      "dragover",
      this.onDragOver
    ), Av(), this.pmView.root.addEventListener(
      "mousemove",
      this.onMouseMove,
      !0
    ), this.pmView.root.addEventListener(
      "keydown",
      this.onKeyDown,
      !0
    );
  }
  // Needed in cases where the editor state updates without the mouse cursor
  // moving, as some state updates can require a side menu update. For example,
  // adding a button to the side menu which removes the block can cause the
  // block below to jump up into the place of the removed block when clicked,
  // allowing the user to click the button again without moving the cursor. This
  // would otherwise not update the side menu, and so clicking the button again
  // would attempt to remove the same block again, causing an error.
  update(e, n) {
    var i;
    !n.doc.eq(this.pmView.state.doc) && (i = this.state) != null && i.show && this.updateStateFromMousePos();
  }
  destroy() {
    var e;
    (e = this.state) != null && e.show && (this.state.show = !1, this.emitUpdate(this.state)), this.pmView.root.removeEventListener(
      "mousemove",
      this.onMouseMove,
      !0
    ), this.pmView.root.removeEventListener(
      "dragover",
      this.onDragOver
    ), this.pmView.root.removeEventListener(
      "drop",
      this.onDrop,
      !0
    ), this.pmView.root.removeEventListener(
      "keydown",
      this.onKeyDown,
      !0
    );
  }
}
const Q$ = new Ct("SideMenuPlugin");
class Z$ extends Fl {
  constructor(e) {
    super(), ne(this, "view"), ne(this, "plugin"), ne(this, "blockDragStart", (n) => {
      Y$(n, this.editor);
    }), ne(this, "blockDragEnd", () => XE(this.editor.prosemirrorView.root)), ne(this, "freezeMenu", () => this.view.menuFrozen = !0), ne(this, "unfreezeMenu", () => {
      this.view.menuFrozen = !1, this.view.state.show = !1, this.view.emitUpdate(this.view.state);
    }), this.editor = e, this.plugin = new mt({
      key: Q$,
      view: (n) => (this.view = new X$(e, n, (i) => {
        this.emit("update", i);
      }), this.view)
    });
  }
  onUpdate(e) {
    return this.on("update", e);
  }
}
const ej = Th((t) => t.type.name === "blockContainer");
class tj {
  constructor(e, n) {
    ne(this, "state"), ne(this, "emitUpdate"), ne(this, "rootEl"), ne(this, "pluginState"), ne(this, "handleScroll", () => {
      var i, r;
      if ((i = this.state) != null && i.show) {
        const o = (r = this.rootEl) == null ? void 0 : r.querySelector(
          `[data-decoration-id="${this.pluginState.decorationId}"]`
        );
        if (!o)
          return;
        this.state.referencePos = o.getBoundingClientRect(), this.emitUpdate(this.pluginState.triggerCharacter);
      }
    }), ne(this, "closeMenu", () => {
      this.editor.dispatch(
        this.editor._tiptapEditor.view.state.tr.setMeta(
          sl,
          null
        )
      );
    }), ne(this, "clearQuery", () => {
      this.pluginState !== void 0 && this.editor._tiptapEditor.chain().focus().deleteRange({
        from: this.pluginState.queryStartPos - (this.pluginState.deleteTriggerCharacter ? this.pluginState.triggerCharacter.length : 0),
        to: this.editor._tiptapEditor.state.selection.from
      }).run();
    }), this.editor = e, this.pluginState = void 0, this.emitUpdate = (i) => {
      var r;
      if (!this.state)
        throw new Error("Attempting to update uninitialized suggestions menu");
      n(i, {
        ...this.state,
        ignoreQueryLength: (r = this.pluginState) == null ? void 0 : r.ignoreQueryLength
      });
    }, this.rootEl = this.editor._tiptapEditor.view.root, this.rootEl.addEventListener("scroll", this.handleScroll, !0);
  }
  update(e, n) {
    var i;
    const r = sl.getState(n), o = sl.getState(
      e.state
    ), s = r === void 0 && o !== void 0, a = r !== void 0 && o === void 0;
    if (!s && !(r !== void 0 && o !== void 0) && !a)
      return;
    if (this.pluginState = a ? r : o, a || !this.editor.isEditable) {
      this.state.show = !1, this.emitUpdate(this.pluginState.triggerCharacter);
      return;
    }
    const l = (i = this.rootEl) == null ? void 0 : i.querySelector(
      `[data-decoration-id="${this.pluginState.decorationId}"]`
    );
    this.editor.isEditable && l && (this.state = {
      show: !0,
      referencePos: l.getBoundingClientRect(),
      query: this.pluginState.query
    }, this.emitUpdate(this.pluginState.triggerCharacter));
  }
  destroy() {
    var e;
    (e = this.rootEl) == null || e.removeEventListener("scroll", this.handleScroll, !0);
  }
}
const sl = new Ct("SuggestionMenuPlugin");
class nj extends Fl {
  constructor(e) {
    super(), ne(this, "view"), ne(this, "plugin"), ne(this, "triggerCharacters", []), ne(this, "addTriggerCharacter", (i) => {
      this.triggerCharacters.push(i);
    }), ne(this, "removeTriggerCharacter", (i) => {
      this.triggerCharacters = this.triggerCharacters.filter(
        (r) => r !== i
      );
    }), ne(this, "closeMenu", () => this.view.closeMenu()), ne(this, "clearQuery", () => this.view.clearQuery());
    const n = this.triggerCharacters;
    this.plugin = new mt({
      key: sl,
      view: () => (this.view = new tj(
        e,
        (i, r) => {
          this.emit(`update ${i}`, r);
        }
      ), this.view),
      state: {
        // Initialize the plugin's internal state.
        init() {
        },
        // Apply changes to the plugin state from an editor transaction.
        apply(i, r, o, s) {
          if (i.getMeta("orderedListIndexing") !== void 0)
            return r;
          const a = i.getMeta(sl);
          if (typeof a == "object" && a !== null && r === void 0)
            return {
              triggerCharacter: a.triggerCharacter,
              deleteTriggerCharacter: a.deleteTriggerCharacter !== !1,
              queryStartPos: s.selection.from,
              query: "",
              decorationId: `id_${Math.floor(Math.random() * 4294967295)}`,
              ignoreQueryLength: a == null ? void 0 : a.ignoreQueryLength
            };
          if (r === void 0)
            return r;
          if (
            // Highlighting text should hide the menu.
            s.selection.from !== s.selection.to || // Transactions with plugin metadata should hide the menu.
            a === null || // Certain mouse events should hide the menu.
            // TODO: Change to global mousedown listener.
            i.getMeta("focus") || i.getMeta("blur") || i.getMeta("pointer") || // Moving the caret before the character which triggered the menu should hide it.
            r.triggerCharacter !== void 0 && s.selection.from < r.queryStartPos
          )
            return;
          const l = { ...r };
          return l.query = s.doc.textBetween(
            r.queryStartPos,
            s.selection.from
          ), l;
        }
      },
      props: {
        handleTextInput(i, r, o, s) {
          const a = this.getState(i.state);
          return n.includes(s) && a === void 0 ? (i.dispatch(
            i.state.tr.insertText(s).scrollIntoView().setMeta(sl, {
              triggerCharacter: s
            })
          ), !0) : !1;
        },
        // Setup decorator on the currently active suggestion.
        decorations(i) {
          const r = this.getState(i);
          if (r === void 0)
            return null;
          if (!r.deleteTriggerCharacter) {
            const o = ej(i.selection);
            if (o)
              return Tt.create(i.doc, [
                Qt.node(
                  o.pos,
                  o.pos + o.node.nodeSize,
                  {
                    nodeName: "span",
                    class: "bn-suggestion-decorator",
                    "data-decoration-id": r.decorationId
                  }
                )
              ]);
          }
          return Tt.create(i.doc, [
            Qt.inline(
              r.queryStartPos - r.triggerCharacter.length,
              r.queryStartPos,
              {
                nodeName: "span",
                class: "bn-suggestion-decorator",
                "data-decoration-id": r.decorationId
              }
            )
          ]);
        }
      }
    });
  }
  onUpdate(e, n) {
    return this.triggerCharacters.includes(e) || this.addTriggerCharacter(e), this.on(`update ${e}`, n);
  }
  get shown() {
    var e, n;
    return ((n = (e = this.view) == null ? void 0 : e.state) == null ? void 0 : n.show) || !1;
  }
}
let ti;
function jw(t) {
  ti || (ti = document.createElement("div"), ti.innerHTML = "_", ti.style.opacity = "0", ti.style.height = "1px", ti.style.width = "1px", t instanceof Document ? t.body.appendChild(ti) : t.appendChild(ti));
}
function ij(t) {
  ti && (t instanceof Document ? t.body.removeChild(ti) : t.removeChild(ti), ti = void 0);
}
function bd(t) {
  return Array.prototype.indexOf.call(t.parentElement.childNodes, t);
}
function rj(t) {
  for (; t && t.nodeName !== "TD" && t.nodeName !== "TH"; )
    t = t.classList && t.classList.contains("ProseMirror") ? null : t.parentNode;
  return t;
}
function oj(t, e) {
  t.forEach((n) => {
    const i = e.querySelectorAll(n);
    for (let r = 0; r < i.length; r++)
      i[r].style.visibility = "hidden";
  });
}
class sj {
  constructor(e, n, i) {
    ne(this, "state"), ne(this, "emitUpdate"), ne(this, "tableId"), ne(this, "tablePos"), ne(this, "menuFrozen", !1), ne(this, "mouseState", "up"), ne(this, "prevWasEditable", null), ne(this, "viewMousedownHandler", () => {
      this.mouseState = "down";
    }), ne(this, "viewMouseupHandler", (r) => {
      this.mouseState = "up", this.mouseMoveHandler(r);
    }), ne(this, "mouseMoveHandler", (r) => {
      var o, s, a, l;
      if (this.menuFrozen || (this.mouseState === "down" && (this.mouseState = "selecting", (o = this.state) != null && o.show && (this.state.show = !1, this.emitUpdate())), this.mouseState === "selecting"))
        return;
      const c = rj(r.target);
      if (!c || !this.editor.isEditable) {
        (s = this.state) != null && s.show && (this.state.show = !1, this.emitUpdate());
        return;
      }
      const f = bd(c), d = bd(c.parentElement), u = c.getBoundingClientRect(), h = (l = (a = c.parentElement) == null ? void 0 : a.parentElement) == null ? void 0 : l.getBoundingClientRect();
      if (!h)
        return;
      const p = Wh(c, this.pmView);
      if (!p)
        return;
      let m;
      if (this.editor._tiptapEditor.state.doc.descendants((v, y) => {
        if (typeof m < "u")
          return !1;
        if (v.type.name !== "blockContainer" || v.attrs.id !== p.id)
          return !0;
        const C = qn(
          v,
          this.editor.schema.blockSchema,
          this.editor.schema.inlineContentSchema,
          this.editor.schema.styleSchema,
          this.editor.blockCache
        );
        return y$("table", C, this.editor) && (this.tablePos = y + 1, m = C), !1;
      }), !!m && (this.tableId = p.id, !(this.state !== void 0 && this.state.show && this.tableId === p.id && this.state.rowIndex === d && this.state.colIndex === f)))
        return this.state = {
          show: !0,
          referencePosCell: u,
          referencePosTable: h,
          block: m,
          colIndex: f,
          rowIndex: d,
          draggingState: void 0
        }, this.emitUpdate(), !1;
    }), ne(this, "dragOverHandler", (r) => {
      var o;
      if (((o = this.state) == null ? void 0 : o.draggingState) === void 0)
        return;
      r.preventDefault(), r.dataTransfer.dropEffect = "move", oj(
        [
          "column-resize-handle",
          "prosemirror-dropcursor-block",
          "prosemirror-dropcursor-inline"
        ],
        this.pmView.root
      );
      const s = {
        left: Math.min(
          Math.max(r.clientX, this.state.referencePosTable.left + 1),
          this.state.referencePosTable.right - 1
        ),
        top: Math.min(
          Math.max(r.clientY, this.state.referencePosTable.top + 1),
          this.state.referencePosTable.bottom - 1
        )
      }, a = this.pmView.root.elementsFromPoint(s.left, s.top).filter(
        (m) => m.tagName === "TD" || m.tagName === "TH"
      );
      if (a.length === 0)
        throw new Error(
          "Could not find table cell element that the mouse cursor is hovering over."
        );
      const l = a[0];
      let c = !1;
      const f = bd(l.parentElement), d = bd(l), u = this.state.draggingState.draggedCellOrientation === "row" ? this.state.rowIndex : this.state.colIndex, h = (this.state.draggingState.draggedCellOrientation === "row" ? f : d) !== u;
      (this.state.rowIndex !== f || this.state.colIndex !== d) && (this.state.rowIndex = f, this.state.colIndex = d, this.state.referencePosCell = l.getBoundingClientRect(), c = !0);
      const p = this.state.draggingState.draggedCellOrientation === "row" ? s.top : s.left;
      this.state.draggingState.mousePos !== p && (this.state.draggingState.mousePos = p, c = !0), c && this.emitUpdate(), h && this.editor.dispatch(
        this.pmView.state.tr.setMeta(Tc, !0)
      );
    }), ne(this, "dropHandler", (r) => {
      if (this.state === void 0 || this.state.draggingState === void 0)
        return;
      r.preventDefault();
      const o = this.state.block.content.rows;
      if (this.state.draggingState.draggedCellOrientation === "row") {
        const s = o[this.state.draggingState.originalIndex];
        o.splice(this.state.draggingState.originalIndex, 1), o.splice(this.state.rowIndex, 0, s);
      } else {
        const s = o.map(
          (a) => a.cells[this.state.draggingState.originalIndex]
        );
        o.forEach((a, l) => {
          a.cells.splice(this.state.draggingState.originalIndex, 1), a.cells.splice(this.state.colIndex, 0, s[l]);
        });
      }
      this.editor.updateBlock(this.state.block, {
        type: "table",
        content: {
          type: "tableContent",
          rows: o
        }
      }), this.editor.setTextCursorPosition(this.state.block.id);
    }), ne(this, "scrollHandler", () => {
      var r;
      if ((r = this.state) != null && r.show) {
        const o = this.pmView.root.querySelector(
          `[data-node-type="blockContainer"][data-id="${this.tableId}"] table`
        ), s = o.querySelector(
          `tr:nth-child(${this.state.rowIndex + 1}) > td:nth-child(${this.state.colIndex + 1})`
        );
        this.state.referencePosTable = o.getBoundingClientRect(), this.state.referencePosCell = s.getBoundingClientRect(), this.emitUpdate();
      }
    }), this.editor = e, this.pmView = n, this.emitUpdate = () => {
      if (!this.state)
        throw new Error("Attempting to update uninitialized image toolbar");
      i(this.state);
    }, n.dom.addEventListener("mousemove", this.mouseMoveHandler), n.dom.addEventListener("mousedown", this.viewMousedownHandler), n.dom.addEventListener("mouseup", this.viewMouseupHandler), n.root.addEventListener(
      "dragover",
      this.dragOverHandler
    ), n.root.addEventListener("drop", this.dropHandler), n.root.addEventListener("scroll", this.scrollHandler, !0);
  }
  destroy() {
    this.pmView.dom.removeEventListener("mousemove", this.mouseMoveHandler), this.pmView.root.removeEventListener(
      "dragover",
      this.dragOverHandler
    ), this.pmView.root.removeEventListener(
      "drop",
      this.dropHandler
    ), this.pmView.root.removeEventListener("scroll", this.scrollHandler, !0);
  }
}
const Tc = new Ct("TableHandlesPlugin");
class aj extends Fl {
  constructor(e) {
    super(), ne(this, "view"), ne(this, "plugin"), ne(this, "colDragStart", (n) => {
      if (this.view.state === void 0)
        throw new Error(
          "Attempted to drag table column, but no table block was hovered prior."
        );
      this.view.state.draggingState = {
        draggedCellOrientation: "col",
        originalIndex: this.view.state.colIndex,
        mousePos: n.clientX
      }, this.view.emitUpdate(), this.editor.dispatch(
        this.editor._tiptapEditor.state.tr.setMeta(Tc, {
          draggedCellOrientation: this.view.state.draggingState.draggedCellOrientation,
          originalIndex: this.view.state.colIndex,
          newIndex: this.view.state.colIndex,
          tablePos: this.view.tablePos
        })
      ), jw(this.editor._tiptapEditor.view.root), n.dataTransfer.setDragImage(ti, 0, 0), n.dataTransfer.effectAllowed = "move";
    }), ne(this, "rowDragStart", (n) => {
      if (this.view.state === void 0)
        throw new Error(
          "Attempted to drag table row, but no table block was hovered prior."
        );
      this.view.state.draggingState = {
        draggedCellOrientation: "row",
        originalIndex: this.view.state.rowIndex,
        mousePos: n.clientY
      }, this.view.emitUpdate(), this.editor.dispatch(
        this.editor._tiptapEditor.state.tr.setMeta(Tc, {
          draggedCellOrientation: this.view.state.draggingState.draggedCellOrientation,
          originalIndex: this.view.state.rowIndex,
          newIndex: this.view.state.rowIndex,
          tablePos: this.view.tablePos
        })
      ), jw(this.editor._tiptapEditor.view.root), n.dataTransfer.setDragImage(ti, 0, 0), n.dataTransfer.effectAllowed = "copyMove";
    }), ne(this, "dragEnd", () => {
      if (this.view.state === void 0)
        throw new Error(
          "Attempted to drag table row, but no table block was hovered prior."
        );
      this.view.state.draggingState = void 0, this.view.emitUpdate(), this.editor.dispatch(
        this.editor._tiptapEditor.state.tr.setMeta(Tc, null)
      ), ij(this.editor._tiptapEditor.view.root);
    }), ne(this, "freezeHandles", () => {
      this.view.menuFrozen = !0;
    }), ne(this, "unfreezeHandles", () => {
      this.view.menuFrozen = !1;
    }), this.editor = e, this.plugin = new mt({
      key: Tc,
      view: (n) => (this.view = new sj(e, n, (i) => {
        this.emit("update", i);
      }), this.view),
      // We use decorations to render the drop cursor when dragging a table row
      // or column. The decorations are updated in the `dragOverHandler` method.
      props: {
        decorations: (n) => {
          if (this.view === void 0 || this.view.state === void 0 || this.view.state.draggingState === void 0 || this.view.tablePos === void 0)
            return;
          const i = this.view.state.draggingState.draggedCellOrientation === "row" ? this.view.state.rowIndex : this.view.state.colIndex, r = [];
          if (i === this.view.state.draggingState.originalIndex)
            return Tt.create(n.doc, r);
          const o = n.doc.resolve(this.view.tablePos + 1), s = o.node();
          if (this.view.state.draggingState.draggedCellOrientation === "row") {
            const a = n.doc.resolve(
              o.posAtIndex(i) + 1
            ), l = a.node();
            for (let c = 0; c < l.childCount; c++) {
              const f = n.doc.resolve(
                a.posAtIndex(c) + 1
              ), d = f.node(), u = f.pos + (i > this.view.state.draggingState.originalIndex ? d.nodeSize - 2 : 0);
              r.push(
                // The widget is a small bar which spans the width of the cell.
                Qt.widget(u, () => {
                  const h = document.createElement("div");
                  return h.className = "bn-table-drop-cursor", h.style.left = "0", h.style.right = "0", i > this.view.state.draggingState.originalIndex ? h.style.bottom = "-2px" : h.style.top = "-3px", h.style.height = "4px", h;
                })
              );
            }
          } else
            for (let a = 0; a < s.childCount; a++) {
              const l = n.doc.resolve(
                o.posAtIndex(a) + 1
              ), c = n.doc.resolve(
                l.posAtIndex(i) + 1
              ), f = c.node(), d = c.pos + (i > this.view.state.draggingState.originalIndex ? f.nodeSize - 2 : 0);
              r.push(
                // The widget is a small bar which spans the height of the cell.
                Qt.widget(d, () => {
                  const u = document.createElement("div");
                  return u.className = "bn-table-drop-cursor", u.style.top = "0", u.style.bottom = "0", i > this.view.state.draggingState.originalIndex ? u.style.right = "-2px" : u.style.left = "-3px", u.style.width = "4px", u;
                })
              );
            }
          return Tt.create(n.doc, r);
        }
      }
    });
  }
  onUpdate(e) {
    return this.on("update", e);
  }
}
const Nv = [
  "blocknote/html",
  "Files",
  "text/html",
  "text/plain"
];
function lj(t, e) {
  if (!t.startsWith(".") || !e.startsWith("."))
    throw new Error("The strings provided are not valid file extensions.");
  return t === e;
}
function cj(t, e) {
  const n = t.split("/"), i = e.split("/");
  if (n.length !== 2)
    throw new Error(`The string ${t} is not a valid MIME type.`);
  if (i.length !== 2)
    throw new Error(`The string ${e} is not a valid MIME type.`);
  return n[1] === "*" || i[1] === "*" ? n[0] === i[0] : (n[0] === "*" || i[0] === "*" || n[0] === i[0]) && n[1] === i[1];
}
async function QE(t, e) {
  if (!e.uploadFile)
    return;
  const n = "dataTransfer" in t ? t.dataTransfer : t.clipboardData;
  if (n === null)
    return;
  let i = null;
  for (const s of Nv)
    if (n.types.includes(s)) {
      i = s;
      break;
    }
  if (i !== "Files")
    return;
  const r = n.items;
  if (!r)
    return;
  t.preventDefault();
  const o = Object.values(e.schema.blockSchema).filter(
    (s) => s.isFileBlock
  );
  for (let s = 0; s < r.length; s++) {
    let a = "file";
    for (const c of o)
      for (const f of c.fileBlockAccept || []) {
        const d = f.startsWith("."), u = r[s].getAsFile();
        if (u && (!d && u.type && cj(r[s].type, f) || d && lj(
          "." + u.name.split(".").pop(),
          f
        ))) {
          a = c.type;
          break;
        }
      }
    const l = r[s].getAsFile();
    if (l) {
      const c = {
        type: a,
        props: {
          name: l.name
        }
      };
      let f;
      if (t.type === "paste")
        f = e.insertBlocks(
          [c],
          e.getTextCursorPosition().block,
          "after"
        )[0].id;
      else if (t.type === "drop") {
        const h = {
          left: t.clientX,
          top: t.clientY
        }, p = e._tiptapEditor.view.posAtCoords(h);
        if (!p)
          return;
        const m = Bh(
          e._tiptapEditor.state.doc,
          p.pos
        ), v = Tl(m);
        f = e.insertBlocks(
          [c],
          v.blockContainer.node.attrs.id,
          "after"
        )[0].id;
      } else
        return;
      const d = await e.uploadFile(l, f), u = typeof d == "string" ? {
        props: {
          url: d
        }
      } : { ...d };
      e.updateBlock(f, u);
    }
  }
}
const fj = (t) => At.create({
  name: "dropFile",
  addProseMirrorPlugins() {
    return [
      new mt({
        props: {
          handleDOMEvents: {
            drop(e, n) {
              if (!t.isEditable)
                return;
              let i = null;
              for (const r of Nv)
                if (n.dataTransfer.types.includes(r)) {
                  i = r;
                  break;
                }
              return i === null ? !0 : i === "Files" ? (QE(n, t), !0) : !1;
            }
          }
        }
      })
    ];
  }
}), dj = (t) => At.create({
  name: "pasteFromClipboard",
  addProseMirrorPlugins() {
    return [
      new mt({
        props: {
          handleDOMEvents: {
            paste(e, n) {
              if (n.preventDefault(), !t.isEditable)
                return;
              let i;
              for (const o of Nv)
                if (n.clipboardData.types.includes(o)) {
                  i = o;
                  break;
                }
              if (!i)
                return !0;
              if (i === "Files")
                return QE(n, t), !0;
              let r = n.clipboardData.getData(i);
              return i === "blocknote/html" ? (t._tiptapEditor.view.pasteHTML(r), !0) : i === "text/html" ? (r = KE(r.trim()).innerHTML, t._tiptapEditor.view.pasteHTML(r), !0) : (t._tiptapEditor.view.pasteText(r), !0);
            }
          }
        }
      })
    ];
  }
});
function uj(t, e, n) {
  var i;
  let r = !1;
  const o = t.state.selection instanceof on;
  if (!o) {
    const l = t.state.doc.slice(
      t.state.selection.from,
      t.state.selection.to,
      !1
    ).content, c = [];
    for (let f = 0; f < l.childCount; f++)
      c.push(l.child(f));
    r = c.find(
      (f) => f.type.name === "blockContainer" || f.type.name === "blockGroup" || f.type.spec.group === "blockContent"
    ) === void 0, r && (e = l);
  }
  let s;
  const a = Fh(
    t.state.schema,
    n
  );
  if (o) {
    ((i = e.firstChild) == null ? void 0 : i.type.name) === "table" && (e = e.firstChild.content);
    const l = ME(
      e,
      n.schema.inlineContentSchema,
      n.schema.styleSchema
    );
    s = a.exportInlineContent(l, {});
  } else if (r) {
    const l = $h(
      e,
      n.schema.inlineContentSchema,
      n.schema.styleSchema
    );
    s = a.exportInlineContent(l, {});
  } else {
    const l = JE(e, n.schema);
    s = a.exportBlocks(l, {});
  }
  return s;
}
function ZE(t, e) {
  "node" in t.state.selection && t.state.selection.node.type.spec.group === "blockContent" && e.dispatch(
    e._tiptapEditor.state.tr.setSelection(
      new Ie(t.state.doc.resolve(t.state.selection.from - 1))
    )
  );
  const n = d6(
    t,
    t.state.selection.content()
  ).dom.innerHTML, i = t.state.selection.content().content, r = uj(
    t,
    i,
    e
  ), o = Mv(r);
  return { clipboardHTML: n, externalHTML: r, markdown: o };
}
const zw = (t, e, n) => {
  n.preventDefault(), n.clipboardData.clearData();
  const { clipboardHTML: i, externalHTML: r, markdown: o } = ZE(
    e,
    t
  );
  n.clipboardData.setData("blocknote/html", i), n.clipboardData.setData("text/html", r), n.clipboardData.setData("text/plain", o);
}, hj = (t) => At.create({
  name: "copyToClipboard",
  addProseMirrorPlugins() {
    return [
      new mt({
        props: {
          handleDOMEvents: {
            copy(e, n) {
              return zw(t, e, n), !0;
            },
            cut(e, n) {
              return zw(t, e, n), e.dispatch(e.state.tr.deleteSelection()), !0;
            },
            // This is for the use-case in which only a block without content
            // is selected, e.g. an image block, and dragged (not using the
            // drag handle).
            dragstart(e, n) {
              if (!("node" in e.state.selection) || e.state.selection.node.type.spec.group !== "blockContent")
                return;
              t.dispatch(
                t._tiptapEditor.state.tr.setSelection(
                  new Ie(
                    e.state.doc.resolve(e.state.selection.from - 1)
                  )
                )
              ), n.preventDefault(), n.dataTransfer.clearData();
              const { clipboardHTML: i, externalHTML: r, markdown: o } = ZE(e, t);
              return n.dataTransfer.setData("blocknote/html", i), n.dataTransfer.setData("text/html", r), n.dataTransfer.setData("text/plain", o), !0;
            }
          }
        }
      })
    ];
  }
}), pj = At.create({
  name: "blockBackgroundColor",
  addGlobalAttributes() {
    return [
      {
        types: ["blockContainer"],
        attributes: {
          backgroundColor: {
            default: mn.backgroundColor.default,
            parseHTML: (t) => t.hasAttribute("data-background-color") ? t.getAttribute("data-background-color") : mn.backgroundColor.default,
            renderHTML: (t) => t.backgroundColor === mn.backgroundColor.default ? {} : {
              "data-background-color": t.backgroundColor
            }
          }
        }
      }
    ];
  }
}), eT = (t, e) => {
  if (!e.nodeBefore)
    throw new Error(
      `Attempted to get previous blockContainer node for merge at position ${e.pos} but a previous node does not exist`
    );
  let n = e.posAtIndex(e.index() - 1), i = ks(
    t.resolve(n)
  );
  for (; i.blockGroup; ) {
    const r = i.blockGroup.node;
    n = t.resolve(i.blockGroup.beforePos + 1).posAtIndex(r.childCount - 1), i = ks(
      t.resolve(n)
    );
  }
  return t.resolve(n);
}, mj = (t, e) => {
  const n = ks(t), i = ks(e);
  return n.blockContent.node.type.spec.content === "inline*" && i.blockContent.node.type.spec.content === "inline*" && n.blockContent.node.childCount > 0;
}, gj = (t, e, n, i) => {
  const r = ks(i);
  if (r.blockGroup) {
    const o = t.doc.resolve(
      r.blockGroup.beforePos + 1
    ), s = t.doc.resolve(
      r.blockGroup.afterPos - 1
    ), a = o.blockRange(s);
    e && t.tr.lift(a, i.depth);
  }
  if (e) {
    const o = ks(n);
    e(
      t.tr.delete(
        o.blockContent.afterPos - 1,
        r.blockContent.beforePos + 1
      )
    );
  }
  return !0;
}, Uw = (t) => ({
  state: e,
  dispatch: n
}) => {
  const i = e.doc.resolve(t), r = eT(e.doc, i);
  return mj(r, i) ? gj(e, n, r, i) : !1;
}, yj = At.create({
  priority: 50,
  // TODO: The shortcuts need a refactor. Do we want to use a command priority
  //  design as there is now, or clump the logic into a single function?
  addKeyboardShortcuts() {
    return {
      Backspace: () => this.editor.commands.first(({ chain: t, commands: e }) => [
        // Deletes the selection if it's not empty.
        () => e.deleteSelection(),
        // Undoes an input rule if one was triggered in the last editor state change.
        () => e.undoInputRule(),
        // Reverts block content type to a paragraph if the selection is at the start of the block.
        () => e.command(({ state: n }) => {
          const i = jt(n), r = n.selection.from === i.blockContent.beforePos + 1, o = i.blockContent.node.type.name === "paragraph";
          return r && !o ? e.command(
            $n(
              this.options.editor,
              i.blockContainer.beforePos,
              {
                type: "paragraph",
                props: {}
              }
            )
          ) : !1;
        }),
        // Removes a level of nesting if the block is indented if the selection is at the start of the block.
        () => e.command(({ state: n }) => {
          const { blockContent: i } = jt(n);
          return n.selection.from === i.beforePos + 1 ? e.liftListItem("blockContainer") : !1;
        }),
        // Merges block with the previous one if it isn't indented, isn't the
        // first block in the doc, and the selection is at the start of the
        // block. The target block for merging must contain inline content.
        () => e.command(({ state: n }) => {
          const { blockContainer: i, blockContent: r } = jt(n), { depth: o } = n.doc.resolve(i.beforePos), s = n.selection.from === r.beforePos + 1, a = n.selection.empty, l = i.beforePos === 1, c = i.beforePos;
          return !l && s && a && o === 1 ? t().command(Uw(c)).scrollIntoView().run() : !1;
        }),
        // Deletes previous block if it contains no content and isn't a table,
        // when the selection is empty and at the start of the block. Moves the
        // current block into the deleted block's place.
        () => e.command(({ state: n }) => {
          const i = jt(n), { depth: r } = n.doc.resolve(
            i.blockContainer.beforePos
          ), o = n.selection.from === i.blockContent.beforePos + 1, s = n.selection.empty;
          if (i.blockContainer.beforePos !== 1 && o && s && r === 1) {
            const a = eT(
              n.doc,
              n.doc.resolve(i.blockContainer.beforePos)
            ), l = ks(
              n.doc.resolve(a.pos)
            );
            if (l.blockContent.node.type.spec.content === "" || l.blockContent.node.type.spec.content === "inline*" && l.blockContent.node.childCount === 0)
              return t().cut(
                {
                  from: i.blockContainer.beforePos,
                  to: i.blockContainer.afterPos
                },
                l.blockContainer.afterPos
              ).deleteRange({
                from: l.blockContainer.beforePos,
                to: l.blockContainer.afterPos
              }).run();
          }
          return !1;
        })
      ]),
      Delete: () => this.editor.commands.first(({ commands: t }) => [
        // Deletes the selection if it's not empty.
        () => t.deleteSelection(),
        // Merges block with the next one (at the same nesting level or lower),
        // if one exists, the block has no children, and the selection is at the
        // end of the block.
        () => t.command(({ state: e }) => {
          const { blockContainer: n, blockContent: i, blockGroup: r } = jt(e), { depth: o } = e.doc.resolve(n.beforePos), s = n.afterPos === e.doc.nodeSize - 3, a = e.selection.from === i.afterPos - 1, l = e.selection.empty;
          if (!s && a && l && r === void 0) {
            let c = o, f = n.afterPos + 1, d = e.doc.resolve(f).depth;
            for (; d < c; )
              c = d, f += 2, d = e.doc.resolve(f).depth;
            return t.command(Uw(f - 1));
          }
          return !1;
        })
      ]),
      Enter: () => this.editor.commands.first(({ commands: t }) => [
        // Removes a level of nesting if the block is empty & indented, while the selection is also empty & at the start
        // of the block.
        () => t.command(({ state: e }) => {
          const { blockContent: n, blockContainer: i } = jt(e), { depth: r } = e.doc.resolve(i.beforePos), o = e.selection.$anchor.parentOffset === 0, s = e.selection.anchor === e.selection.head, a = n.node.childCount === 0, l = r > 1;
          return o && s && a && l ? t.liftListItem("blockContainer") : !1;
        }),
        // Creates a new block and moves the selection to it if the current one is empty, while the selection is also
        // empty & at the start of the block.
        () => t.command(({ state: e, dispatch: n }) => {
          const { blockContainer: i, blockContent: r } = jt(e), o = e.selection.$anchor.parentOffset === 0, s = e.selection.anchor === e.selection.head, a = r.node.childCount === 0;
          if (o && s && a) {
            const l = i.afterPos, c = l + 2;
            if (n) {
              const f = e.schema.nodes.blockContainer.createAndFill();
              e.tr.insert(l, f).scrollIntoView(), e.tr.setSelection(
                new ze(e.doc.resolve(c))
              );
            }
            return !0;
          }
          return !1;
        }),
        // Splits the current block, moving content inside that's after the cursor to a new text block below. Also
        // deletes the selection beforehand, if it's not empty.
        () => t.command(({ state: e, chain: n }) => {
          const { blockContent: i } = jt(e), r = e.selection.$anchor.parentOffset === 0;
          return i.node.childCount === 0 ? !1 : (n().deleteSelection().command(
            zE(
              e.selection.from,
              r,
              r
            )
          ).run(), !0);
        })
      ]),
      // Always returning true for tab key presses ensures they're not captured by the browser. Otherwise, they blur the
      // editor since the browser will try to use tab for keyboard navigation.
      Tab: () => {
        var t, e, n;
        return (t = this.options.editor.formattingToolbar) != null && t.shown || (e = this.options.editor.linkToolbar) != null && e.shown || (n = this.options.editor.filePanel) != null && n.shown ? !1 : (this.editor.commands.sinkListItem("blockContainer"), !0);
      },
      "Shift-Tab": () => {
        var t, e, n;
        return (t = this.options.editor.formattingToolbar) != null && t.shown || (e = this.options.editor.linkToolbar) != null && e.shown || (n = this.options.editor.filePanel) != null && n.shown ? !1 : (this.editor.commands.liftListItem("blockContainer"), !0);
      },
      "Shift-Mod-ArrowUp": () => (this.options.editor.moveBlockUp(), !0),
      "Shift-Mod-ArrowDown": () => (this.options.editor.moveBlockDown(), !0)
    };
  }
}), vj = At.create({
  name: "textAlignment",
  addGlobalAttributes() {
    return [
      {
        // Attribute is applied to block content instead of container so that child blocks don't inherit the text
        // alignment styling.
        types: [
          "paragraph",
          "heading",
          "bulletListItem",
          "numberedListItem",
          "checkListItem"
        ],
        attributes: {
          textAlignment: {
            default: "left",
            parseHTML: (t) => t.getAttribute("data-text-alignment"),
            renderHTML: (t) => t.textAlignment === "left" ? {} : {
              "data-text-alignment": t.textAlignment
            }
          }
        }
      }
    ];
  }
}), bj = At.create({
  name: "blockTextColor",
  addGlobalAttributes() {
    return [
      {
        types: ["blockContainer"],
        attributes: {
          textColor: {
            default: mn.textColor.default,
            parseHTML: (t) => t.hasAttribute("data-text-color") ? t.getAttribute("data-text-color") : mn.textColor.default,
            renderHTML: (t) => t.textColor === mn.textColor.default ? {} : {
              "data-text-color": t.textColor
            }
          }
        }
      }
    ];
  }
}), kj = At.create({
  name: "trailingNode",
  addProseMirrorPlugins() {
    const t = new Ct(this.name);
    return [
      new mt({
        key: t,
        appendTransaction: (e, n, i) => {
          const { doc: r, tr: o, schema: s } = i, a = t.getState(i), l = r.content.size - 2, c = s.nodes.blockContainer, f = s.nodes.paragraph;
          if (a)
            return o.insert(
              l,
              c.create(void 0, f.create())
            );
        },
        state: {
          init: (e, n) => {
          },
          apply: (e, n) => {
            if (!e.docChanged)
              return n;
            let i = e.doc.lastChild;
            if (!i || i.type.name !== "blockGroup")
              throw new Error("Expected blockGroup");
            if (i = i.lastChild, !i || i.type.name !== "blockContainer")
              throw new Error("Expected blockContainer");
            const r = i.firstChild;
            if (!r)
              throw new Error("Expected blockContent");
            return i.nodeSize > 4 || r.type.spec.content !== "inline*";
          }
        }
      })
    ];
  }
}), wj = {
  blockColor: "data-block-color",
  blockStyle: "data-block-style",
  id: "data-id",
  depth: "data-depth",
  depthChange: "data-depth-change"
}, _j = jr.create({
  name: "blockContainer",
  group: "blockContainer",
  // A block always contains content, and optionally a blockGroup which contains nested blocks
  content: "blockContent blockGroup?",
  // Ensures content-specific keyboard handlers trigger first.
  priority: 50,
  defining: !0,
  parseHTML() {
    return [
      {
        tag: "div",
        getAttrs: (t) => {
          if (typeof t == "string")
            return !1;
          const e = {};
          for (const [n, i] of Object.entries(wj))
            t.getAttribute(i) && (e[n] = t.getAttribute(i));
          return t.getAttribute("data-node-type") === "blockContainer" ? e : !1;
        }
      }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    var e;
    const n = document.createElement("div");
    n.className = "bn-block-outer", n.setAttribute("data-node-type", "blockOuter");
    for (const [o, s] of Object.entries(t))
      o !== "class" && n.setAttribute(o, s);
    const i = {
      ...((e = this.options.domAttributes) == null ? void 0 : e.block) || {},
      ...t
    }, r = document.createElement("div");
    r.className = lr("bn-block", i.class), r.setAttribute("data-node-type", this.name);
    for (const [o, s] of Object.entries(i))
      o !== "class" && r.setAttribute(o, s);
    return n.appendChild(r), {
      dom: n,
      contentDOM: r
    };
  }
}), Ej = jr.create({
  name: "blockGroup",
  group: "blockGroup",
  content: "blockContainer+",
  parseHTML() {
    return [
      {
        tag: "div",
        getAttrs: (t) => typeof t == "string" ? !1 : t.getAttribute("data-node-type") === "blockGroup" ? null : !1
      }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    var e;
    const n = {
      ...((e = this.options.domAttributes) == null ? void 0 : e.blockGroup) || {},
      ...t
    }, i = document.createElement("div");
    i.className = lr(
      "bn-block-group",
      n.class
    ), i.setAttribute("data-node-type", "blockGroup");
    for (const [r, o] of Object.entries(n))
      r !== "class" && i.setAttribute(r, o);
    return {
      dom: i,
      contentDOM: i
    };
  }
}), Tj = jr.create({
  name: "doc",
  topNode: !0,
  content: "blockGroup"
}), Cj = (t) => {
  var e;
  const n = [
    oc.ClipboardTextSerializer,
    oc.Commands,
    oc.Editable,
    oc.FocusEvents,
    oc.Tabindex,
    // DevTools,
    SB,
    // DropCursor,
    Dh.configure({
      types: ["blockContainer"],
      setIdAttribute: t.setIdAttribute
    }),
    xB.extend({ priority: 10 }),
    // Comments,
    // basics:
    lH,
    // marks:
    aH.extend({
      addKeyboardShortcuts() {
        return {
          "Mod-k": () => (this.editor.commands.toggleLink({ href: "" }), !0)
        };
      }
    }),
    ...Object.values(t.styleSpecs).map((r) => r.implementation.mark),
    bj,
    pj,
    vj,
    // make sure escape blurs editor, so that we can tab to other elements in the host page (accessibility)
    At.create({
      name: "OverrideEscape",
      addKeyboardShortcuts() {
        return {
          Escape: () => t.editor.suggestionMenus.shown ? !1 : this.editor.commands.blur()
        };
      }
    }),
    // nodes
    Tj,
    _j.configure({
      editor: t.editor,
      domAttributes: t.domAttributes
    }),
    yj.configure({
      editor: t.editor
    }),
    Ej.configure({
      domAttributes: t.domAttributes
    }),
    ...Object.values(t.inlineContentSpecs).filter((r) => r.config !== "link" && r.config !== "text").map((r) => r.implementation.node.configure({
      editor: t.editor
    })),
    ...Object.values(t.blockSpecs).flatMap((r) => [
      // dependent nodes (e.g.: tablecell / row)
      ...(r.implementation.requiredExtensions || []).map(
        (o) => o.configure({
          editor: t.editor,
          domAttributes: t.domAttributes
        })
      ),
      // the actual node itself
      r.implementation.node.configure({
        editor: t.editor,
        domAttributes: t.domAttributes
      })
    ]),
    hj(t.editor),
    dj(t.editor),
    fj(t.editor),
    vB.configure({ width: 5, color: "#ddeeff" }),
    // This needs to be at the bottom of this list, because Key events (such as enter, when selecting a /command),
    // should be handled before Enter handlers in other components like splitListItem
    ...t.trailingBlock === void 0 || t.trailingBlock ? [kj] : []
  ];
  if (t.collaboration) {
    if (n.push(
      pB.configure({
        fragment: t.collaboration.fragment
      })
    ), (e = t.collaboration.provider) != null && e.awareness) {
      const r = (o) => {
        const s = document.createElement("span");
        s.classList.add("collaboration-cursor__caret"), s.setAttribute("style", `border-color: ${o.color}`);
        const a = document.createElement("span");
        a.classList.add("collaboration-cursor__label"), a.setAttribute("style", `background-color: ${o.color}`), a.insertBefore(document.createTextNode(o.name), null);
        const l = document.createTextNode("⁠"), c = document.createTextNode("⁠");
        return s.insertBefore(l, null), s.insertBefore(a, null), s.insertBefore(c, null), s;
      };
      n.push(
        mB.configure({
          user: t.collaboration.user,
          render: t.collaboration.renderCursor || r,
          provider: t.collaboration.provider
        })
      );
    }
  } else
    n.push(FB);
  const i = t.disableExtensions || [];
  return n.filter((r) => !i.includes(r.name));
};
function Sj(t, e) {
  const n = [];
  return t.forEach((i, r, o) => {
    o !== e && n.push(i);
  }), ie.from(n);
}
function xj(t, e) {
  const n = [];
  for (let i = 0; i < t.childCount; i++)
    if (t.child(i).type.name === "tableRow")
      if (n.length > 0 && n[n.length - 1].type.name === "table") {
        const r = n[n.length - 1], o = r.copy(r.content.addToEnd(t.child(i)));
        n[n.length - 1] = o;
      } else {
        const r = e.nodes.table.create(void 0, t.child(i));
        n.push(r);
      }
    else
      n.push(t.child(i));
  return t = ie.from(n), t;
}
function Aj(t, e) {
  let n = ie.from(t.content);
  n = xj(n, e.state.schema);
  for (let i = 0; i < n.childCount; i++)
    if (n.child(i).type.spec.group === "blockContent") {
      const r = [n.child(i)];
      if (i + 1 < n.childCount && n.child(i + 1).type.spec.group === "blockGroup") {
        const s = n.child(i + 1).child(0).child(0);
        (s.type.name === "bulletListItem" || s.type.name === "numberedListItem" || s.type.name === "checkListItem") && (r.push(n.child(i + 1)), n = Sj(n, i + 1));
      }
      const o = e.state.schema.nodes.blockContainer.create(
        void 0,
        r
      );
      n = n.replaceChild(i, o);
    }
  return new be(n, t.openStart, t.openEnd);
}
function gm(t) {
  return t && Object.fromEntries(
    Object.entries(t).filter(([, e]) => e !== void 0)
  );
}
let Mj = class tT {
  constructor(e) {
    ne(this, "blockSpecs"), ne(this, "inlineContentSpecs"), ne(this, "styleSpecs"), ne(this, "blockSchema"), ne(this, "inlineContentSchema"), ne(this, "styleSchema"), ne(this, "BlockNoteEditor", "only for types"), ne(this, "Block", "only for types"), ne(this, "PartialBlock", "only for types"), this.blockSpecs = gm(e == null ? void 0 : e.blockSpecs) || UE, this.inlineContentSpecs = gm(e == null ? void 0 : e.inlineContentSpecs) || WE, this.styleSpecs = gm(e == null ? void 0 : e.styleSpecs) || VE, this.blockSchema = SE(this.blockSpecs), this.inlineContentSchema = NE(
      this.inlineContentSpecs
    ), this.styleSchema = OE(this.styleSpecs);
  }
  static create(e) {
    return new tT(e);
  }
};
const Ag = class extends GI {
  constructor(e, n) {
    super({ ...e, content: void 0 }), ne(this, "_state"), ne(this, "mount", (a) => {
      a ? (this.options.element = a, this.createViewAlternative()) : this.destroy();
    });
    const i = this.schema;
    let r;
    const o = i.nodes.doc.createAndFill;
    i.nodes.doc.createAndFill = (...a) => {
      if (r)
        return r;
      const l = o.apply(i.nodes.doc, a), c = JSON.parse(JSON.stringify(l.toJSON()));
      return c.content[0].content[0].attrs.id = "initialBlockId", r = ls.fromJSON(i, c), r;
    };
    let s;
    try {
      const a = e == null ? void 0 : e.content.map(
        (l) => Dl(l, this.schema, n).toJSON()
      );
      s = Uu(
        {
          type: "doc",
          content: [
            {
              type: "blockGroup",
              content: a
            }
          ]
        },
        this.schema,
        this.options.parseOptions
      );
    } catch (a) {
      throw console.error(
        "Error creating document from blocks passed as `initialContent`. Caused by exception: ",
        a
      ), new Error(
        "Error creating document from blocks passed as `initialContent`:\n" + +JSON.stringify(e.content)
      );
    }
    this._state = Ws.create({
      doc: s,
      schema: this.schema
      // selection: selection || undefined,
    });
  }
  get state() {
    return this.view && (this._state = this.view.state), this._state;
  }
  dispatch(e) {
    this.view ? this.view.dispatch(e) : this._state = this.state.apply(e);
  }
  /**
   * Replace the default `createView` method with a custom one - which we call on mount
   */
  createViewAlternative() {
    queueMicrotask(() => {
      this.view = new u6(
        { mount: this.options.element },
        // use mount option so that we reuse the existing element instead of creating a new one
        {
          ...this.options.editorProps,
          // @ts-ignore
          dispatchTransaction: this.dispatchTransaction.bind(this),
          state: this.state
        }
      );
      const e = this.state.reconfigure({
        plugins: this.extensionManager.plugins
      });
      this.view.updateState(e), this.createNodeViews(), this.commands.focus(this.options.autofocus), this.emit("create", { editor: this }), this.isInitialized = !0;
    });
  }
};
ne(Ag, "create", (t, e) => {
  var n, i;
  const r = (n = globalThis == null ? void 0 : globalThis.window) == null ? void 0 : n.setTimeout;
  typeof ((i = globalThis == null ? void 0 : globalThis.window) == null ? void 0 : i.setTimeout) < "u" && (globalThis.window.setTimeout = () => 0);
  try {
    return new Ag(t, e);
  } finally {
    r && (globalThis.window.setTimeout = r);
  }
});
let nT = Ag;
nT.prototype.createView = function() {
  this.options.onPaste = this.options.onDrop = void 0;
};
const Nj = new Ct("blocknote-placeholder"), Oj = (t, e) => new mt({
  key: Nj,
  view: () => {
    const n = document.createElement("style"), i = t._tiptapEditor.options.injectNonce;
    i && n.setAttribute("nonce", i), t._tiptapEditor.view.root instanceof ShadowRoot ? t._tiptapEditor.view.root.append(n) : t._tiptapEditor.view.root.head.appendChild(n);
    const r = n.sheet, o = (a = "") => `.bn-block-content${a} .bn-inline-content:has(> .ProseMirror-trailingBreak:only-child):before`, s = (a, l = !0) => {
      const c = l ? "[data-is-empty-and-focused]" : "";
      if (a === "default")
        return o(c);
      const f = `[data-content-type="${a}"]`;
      return o(c + f);
    };
    for (const [a, l] of Object.entries(e)) {
      const c = a === "default";
      r.insertRule(
        `${s(a, c)}{ content: ${JSON.stringify(
          l
        )}; }`
      ), c || r.insertRule(
        `${s(a, !0)}{ content: ${JSON.stringify(
          l
        )}; }`
      );
    }
    return {
      destroy: () => {
        t._tiptapEditor.view.root instanceof ShadowRoot ? t._tiptapEditor.view.root.removeChild(n) : t._tiptapEditor.view.root.head.removeChild(n);
      }
    };
  },
  props: {
    // TODO: maybe also add placeholder for empty document ("e.g.: start writing..")
    decorations: (n) => {
      const { doc: i, selection: r } = n;
      if (!t.isEditable || !r.empty)
        return;
      const o = r.$anchor, s = o.parent;
      if (s.content.size > 0)
        return null;
      const a = o.before(), l = Qt.node(a, a + s.nodeSize, {
        "data-is-empty-and-focused": "true"
      });
      return Tt.create(i, [l]);
    }
  }
}), Rj = new Ct("node-selection-keyboard"), Ij = () => new mt({
  key: Rj,
  props: {
    handleKeyDown: (t, e) => {
      if ("node" in t.state.selection) {
        if (e.ctrlKey || e.metaKey)
          return !1;
        if (e.key.length === 1)
          return e.preventDefault(), !0;
        if (e.key === "Enter" && !e.shiftKey && !e.altKey && !e.ctrlKey && !e.metaKey) {
          const n = t.state.tr;
          return t.dispatch(
            n.insert(
              t.state.tr.selection.$to.after(),
              t.state.schema.nodes.paragraph.create()
            ).setSelection(
              new ze(
                n.doc.resolve(t.state.tr.selection.$to.after() + 1)
              )
            )
          ), !0;
        }
      }
      return !1;
    }
  }
}), Vw = new Ct("previous-blocks"), Lj = {
  // Numbered List Items
  index: "index",
  // Headings
  level: "level",
  // All Blocks
  type: "type",
  depth: "depth",
  "depth-change": "depth-change"
}, Dj = () => {
  let t;
  return new mt({
    key: Vw,
    view(e) {
      return {
        update: async (n, i) => {
          var r;
          ((r = this.key) == null ? void 0 : r.getState(n.state).updatedBlocks.size) > 0 && (t = setTimeout(() => {
            n.dispatch(
              n.state.tr.setMeta(Vw, { clearUpdate: !0 })
            );
          }, 0));
        },
        destroy: () => {
          t && clearTimeout(t);
        }
      };
    },
    state: {
      init() {
        return {
          // Block attributes, by block ID, from just before the previous transaction.
          prevTransactionOldBlockAttrs: {},
          // Block attributes, by block ID, from just before the current transaction.
          currentTransactionOldBlockAttrs: {},
          // Set of IDs of blocks whose attributes changed from the current transaction.
          updatedBlocks: /* @__PURE__ */ new Set()
        };
      },
      apply(e, n, i, r) {
        if (n.currentTransactionOldBlockAttrs = {}, n.updatedBlocks.clear(), !e.docChanged || i.doc.eq(r.doc))
          return n;
        const o = {}, s = M2(i.doc, (c) => c.attrs.id), a = new Map(
          s.map((c) => [c.node.attrs.id, c])
        ), l = M2(r.doc, (c) => c.attrs.id);
        for (const c of l) {
          const f = a.get(c.node.attrs.id), d = f == null ? void 0 : f.node.firstChild, u = c.node.firstChild;
          if (f && d && u) {
            const h = {
              index: u.attrs.index,
              level: u.attrs.level,
              type: u.type.name,
              depth: r.doc.resolve(c.pos).depth
            };
            let p = {
              index: d.attrs.index,
              level: d.attrs.level,
              type: d.type.name,
              depth: i.doc.resolve(f.pos).depth
            };
            o[c.node.attrs.id] = p, e.getMeta("numberedListIndexing") && (c.node.attrs.id in n.prevTransactionOldBlockAttrs && (p = n.prevTransactionOldBlockAttrs[c.node.attrs.id]), h.type === "numberedListItem" && (p.index = h.index)), n.currentTransactionOldBlockAttrs[c.node.attrs.id] = p, JSON.stringify(p) !== JSON.stringify(h) && (p["depth-change"] = p.depth - h.depth, n.updatedBlocks.add(c.node.attrs.id));
          }
        }
        return n.prevTransactionOldBlockAttrs = o, n;
      }
    },
    props: {
      decorations(e) {
        const n = this.getState(e);
        if (n.updatedBlocks.size === 0)
          return;
        const i = [];
        return e.doc.descendants((r, o) => {
          if (!r.attrs.id || !n.updatedBlocks.has(r.attrs.id))
            return;
          const s = n.currentTransactionOldBlockAttrs[r.attrs.id], a = {};
          for (const [c, f] of Object.entries(s))
            a["data-prev-" + Lj[c]] = f || "none";
          const l = Qt.node(o, o + r.nodeSize, {
            ...a
          });
          i.push(l);
        }), Tt.create(e.doc, i);
      }
    }
  });
}, Pj = {
  enableInputRules: !0,
  enablePasteRules: !0,
  enableCoreExtensions: !1
};
let Fj = class iT {
  constructor(e) {
    ne(this, "_pmSchema"), ne(this, "headless", !1), ne(this, "_tiptapEditor"), ne(this, "elementRenderer", null), ne(this, "blockCache", /* @__PURE__ */ new WeakMap()), ne(this, "dictionary"), ne(this, "schema"), ne(this, "blockImplementations"), ne(this, "inlineContentImplementations"), ne(this, "styleImplementations"), ne(this, "formattingToolbar"), ne(this, "linkToolbar"), ne(this, "sideMenu"), ne(this, "suggestionMenus"), ne(this, "filePanel"), ne(this, "tableHandles"), ne(this, "uploadFile"), ne(this, "onUploadStartCallbacks", []), ne(this, "onUploadEndCallbacks", []), ne(this, "resolveFileUrl"), ne(this, "mount", (m) => {
      this._tiptapEditor.mount(m);
    });
    var n, i, r, o, s, a, l;
    this.options = e;
    const c = e;
    if (c.onEditorContentChange)
      throw new Error(
        "onEditorContentChange initialization option is deprecated, use <BlockNoteView onChange={...} />, the useEditorChange(...) hook, or editor.onChange(...)"
      );
    if (c.onTextCursorPositionChange)
      throw new Error(
        "onTextCursorPositionChange initialization option is deprecated, use <BlockNoteView onSelectionChange={...} />, the useEditorSelectionChange(...) hook, or editor.onSelectionChange(...)"
      );
    if (c.onEditorReady)
      throw new Error(
        "onEditorReady is deprecated. Editor is immediately ready for use after creation."
      );
    if (c.editable)
      throw new Error(
        "editable initialization option is deprecated, use <BlockNoteView editable={true/false} />, or alternatively editor.isEditable = true/false"
      );
    this.dictionary = e.dictionary || dH;
    const f = {
      defaultStyles: !0,
      schema: e.schema || Mj.create(),
      _headless: !1,
      ...e,
      placeholders: {
        ...this.dictionary.placeholders,
        ...e.placeholders
      }
    };
    this.schema = f.schema, this.blockImplementations = f.schema.blockSpecs, this.inlineContentImplementations = f.schema.inlineContentSpecs, this.styleImplementations = f.schema.styleSpecs, this.formattingToolbar = new U$(this), this.linkToolbar = new q$(this), this.sideMenu = new Z$(this), this.suggestionMenus = new nj(this), this.filePanel = new $$(this), Ei("table", this) && (this.tableHandles = new aj(this));
    const d = Cj({
      editor: this,
      domAttributes: f.domAttributes || {},
      blockSpecs: this.schema.blockSpecs,
      styleSpecs: this.schema.styleSpecs,
      inlineContentSpecs: this.schema.inlineContentSpecs,
      collaboration: f.collaboration,
      trailingBlock: f.trailingBlock,
      disableExtensions: f.disableExtensions,
      setIdAttribute: f.setIdAttribute
    }), u = At.create({
      name: "BlockNoteUIExtension",
      addProseMirrorPlugins: () => [
        this.formattingToolbar.plugin,
        this.linkToolbar.plugin,
        this.sideMenu.plugin,
        this.suggestionMenus.plugin,
        ...this.filePanel ? [this.filePanel.plugin] : [],
        ...this.tableHandles ? [this.tableHandles.plugin] : [],
        Oj(this, f.placeholders),
        Ij(),
        ...this.options.animations ?? !0 ? [Dj()] : []
      ]
    });
    if (d.push(u), f.uploadFile) {
      const m = f.uploadFile;
      this.uploadFile = async (v, y) => {
        this.onUploadStartCallbacks.forEach(
          (C) => C.apply(this, [y])
        );
        try {
          return await m(v, y);
        } finally {
          this.onUploadEndCallbacks.forEach(
            (C) => C.apply(this, [y])
          );
        }
      };
    }
    this.resolveFileUrl = f.resolveFileUrl || (async (m) => m), this.headless = f._headless, f.collaboration && f.initialContent && console.warn(
      "When using Collaboration, initialContent might cause conflicts, because changes should come from the collaboration provider"
    );
    const h = f.initialContent || (e.collaboration ? [
      {
        type: "paragraph",
        id: "initialBlockId"
      }
    ] : [
      {
        type: "paragraph",
        id: Dh.options.generateID()
      }
    ]);
    if (!Array.isArray(h) || h.length === 0)
      throw new Error(
        "initialContent must be a non-empty array of blocks, received: " + h
      );
    const p = {
      ...Pj,
      ...f._tiptapOptions,
      content: h,
      extensions: [
        ...((n = f._tiptapOptions) == null ? void 0 : n.extensions) || [],
        ...d
      ],
      editorProps: {
        ...(i = f._tiptapOptions) == null ? void 0 : i.editorProps,
        attributes: {
          // As of TipTap v2.5.0 the tabIndex is removed when the editor is not
          // editable, so you can't focus it. We want to revert this as we have
          // UI behaviour that relies on it.
          tabIndex: "0",
          ...(o = (r = f._tiptapOptions) == null ? void 0 : r.editorProps) == null ? void 0 : o.attributes,
          ...(s = f.domAttributes) == null ? void 0 : s.editor,
          class: lr(
            "bn-editor",
            f.defaultStyles ? "bn-default-styles" : "",
            ((l = (a = f.domAttributes) == null ? void 0 : a.editor) == null ? void 0 : l.class) || ""
          )
        },
        transformPasted: Aj
      }
    };
    this.headless ? this._pmSchema = vI(p.extensions) : (this._tiptapEditor = nT.create(
      p,
      this.schema.styleSchema
    ), this._pmSchema = this._tiptapEditor.schema);
  }
  get pmSchema() {
    return this._pmSchema;
  }
  static create(e = {}) {
    return new iT(e);
  }
  dispatch(e) {
    this._tiptapEditor.dispatch(e);
  }
  get prosemirrorView() {
    return this._tiptapEditor.view;
  }
  get domElement() {
    return this._tiptapEditor.view.dom;
  }
  isFocused() {
    return this._tiptapEditor.view.hasFocus();
  }
  focus() {
    this._tiptapEditor.view.focus();
  }
  onUploadStart(e) {
    return this.onUploadStartCallbacks.push(e), () => {
      const n = this.onUploadStartCallbacks.indexOf(e);
      n > -1 && this.onUploadStartCallbacks.splice(n, 1);
    };
  }
  onUploadEnd(e) {
    return this.onUploadEndCallbacks.push(e), () => {
      const n = this.onUploadEndCallbacks.indexOf(e);
      n > -1 && this.onUploadEndCallbacks.splice(n, 1);
    };
  }
  /**
   * @deprecated, use `editor.document` instead
   */
  get topLevelBlocks() {
    return this.document;
  }
  /**
   * Gets a snapshot of all top-level (non-nested) blocks in the editor.
   * @returns A snapshot of all top-level (non-nested) blocks in the editor.
   */
  get document() {
    const e = [];
    return this._tiptapEditor.state.doc.firstChild.descendants((n) => (e.push(
      qn(
        n,
        this.schema.blockSchema,
        this.schema.inlineContentSchema,
        this.schema.styleSchema,
        this.blockCache
      )
    ), !1)), e;
  }
  /**
   * Gets a snapshot of an existing block from the editor.
   * @param blockIdentifier The identifier of an existing block that should be retrieved.
   * @returns The block that matches the identifier, or `undefined` if no matching block was found.
   */
  getBlock(e) {
    const n = typeof e == "string" ? e : e.id;
    let i;
    return this._tiptapEditor.state.doc.firstChild.descendants((r) => typeof i < "u" ? !1 : r.type.name !== "blockContainer" || r.attrs.id !== n ? !0 : (i = qn(
      r,
      this.schema.blockSchema,
      this.schema.inlineContentSchema,
      this.schema.styleSchema,
      this.blockCache
    ), !1)), i;
  }
  /**
   * Traverses all blocks in the editor depth-first, and executes a callback for each.
   * @param callback The callback to execute for each block. Returning `false` stops the traversal.
   * @param reverse Whether the blocks should be traversed in reverse order.
   */
  forEachBlock(e, n = !1) {
    const i = this.document.slice();
    n && i.reverse();
    function r(o) {
      for (const s of o) {
        if (e(s) === !1)
          return !1;
        const a = n ? s.children.slice().reverse() : s.children;
        if (!r(a))
          return !1;
      }
      return !0;
    }
    r(i);
  }
  /**
   * Executes a callback whenever the editor's contents change.
   * @param callback The callback to execute.
   */
  onEditorContentChange(e) {
    this._tiptapEditor.on("update", e);
  }
  /**
   * Executes a callback whenever the editor's selection changes.
   * @param callback The callback to execute.
   */
  onEditorSelectionChange(e) {
    this._tiptapEditor.on("selectionUpdate", e);
  }
  /**
   * Gets a snapshot of the current text cursor position.
   * @returns A snapshot of the current text cursor position.
   */
  getTextCursorPosition() {
    return x$(this);
  }
  /**
   * Sets the text cursor position to the start or end of an existing block. Throws an error if the target block could
   * not be found.
   * @param targetBlock The identifier of an existing block that the text cursor should be moved to.
   * @param placement Whether the text cursor should be placed at the start or end of the block.
   */
  setTextCursorPosition(e, n = "start") {
    A$(this, e, n);
  }
  /**
   * Gets a snapshot of the current selection.
   */
  getSelection() {
    if (this._tiptapEditor.state.selection.from === this._tiptapEditor.state.selection.to || "node" in this._tiptapEditor.state.selection)
      return;
    const e = [];
    return this._tiptapEditor.state.doc.descendants((n, i) => {
      if (n.type.spec.group !== "blockContent")
        return !0;
      const r = i + n.nodeSize - 1, o = i + 1;
      return r <= this._tiptapEditor.state.selection.from || o >= this._tiptapEditor.state.selection.to ? !0 : (e.push(
        qn(
          this._tiptapEditor.state.doc.resolve(i).node(),
          this.schema.blockSchema,
          this.schema.inlineContentSchema,
          this.schema.styleSchema,
          this.blockCache
        )
      ), !1);
    }), { blocks: e };
  }
  /**
   * Checks if the editor is currently editable, or if it's locked.
   * @returns True if the editor is editable, false otherwise.
   */
  get isEditable() {
    if (!this._tiptapEditor) {
      if (!this.headless)
        throw new Error("no editor, but also not headless?");
      return !1;
    }
    return this._tiptapEditor.isEditable === void 0 ? !0 : this._tiptapEditor.isEditable;
  }
  /**
   * Makes the editor editable or locks it, depending on the argument passed.
   * @param editable True to make the editor editable, or false to lock it.
   */
  set isEditable(e) {
    if (!this._tiptapEditor) {
      if (!this.headless)
        throw new Error("no editor, but also not headless?");
      return;
    }
    this._tiptapEditor.options.editable !== e && this._tiptapEditor.setEditable(e);
  }
  /**
   * Inserts new blocks into the editor. If a block's `id` is undefined, BlockNote generates one automatically. Throws an
   * error if the reference block could not be found.
   * @param blocksToInsert An array of partial blocks that should be inserted.
   * @param referenceBlock An identifier for an existing block, at which the new blocks should be inserted.
   * @param placement Whether the blocks should be inserted just before, just after, or nested inside the
   * `referenceBlock`.
   */
  insertBlocks(e, n, i = "before") {
    return b$(this, e, n, i);
  }
  /**
   * Updates an existing block in the editor. Since updatedBlock is a PartialBlock object, some fields might not be
   * defined. These undefined fields are kept as-is from the existing block. Throws an error if the block to update could
   * not be found.
   * @param blockToUpdate The block that should be updated.
   * @param update A partial block which defines how the existing block should be changed.
   */
  updateBlock(e, n) {
    return WH(this, e, n);
  }
  /**
   * Removes existing blocks from the editor. Throws an error if any of the blocks could not be found.
   * @param blocksToRemove An array of identifiers for existing blocks that should be removed.
   */
  removeBlocks(e) {
    return T$(this, e);
  }
  /**
   * Replaces existing blocks in the editor with new blocks. If the blocks that should be removed are not adjacent or
   * are at different nesting levels, `blocksToInsert` will be inserted at the position of the first block in
   * `blocksToRemove`. Throws an error if any of the blocks to remove could not be found.
   * @param blocksToRemove An array of blocks that should be replaced.
   * @param blocksToInsert An array of partial blocks to replace the old ones with.
   */
  replaceBlocks(e, n) {
    return C$(this, e, n);
  }
  /**
   * Insert a piece of content at the current cursor position.
   *
   * @param content can be a string, or array of partial inline content elements
   */
  insertInlineContent(e) {
    const n = Hr(
      e,
      this.pmSchema,
      this.schema.styleSchema
    );
    S$(
      {
        from: this._tiptapEditor.state.selection.from,
        to: this._tiptapEditor.state.selection.to
      },
      n,
      this
    );
  }
  /**
   * Gets the active text styles at the text cursor position or at the end of the current selection if it's active.
   */
  getActiveStyles() {
    const e = {}, n = this._tiptapEditor.state.selection.$to.marks();
    for (const i of n) {
      const r = this.schema.styleSchema[i.type.name];
      if (!r) {
        i.type.name !== "link" && console.warn("mark not found in styleschema", i.type.name);
        continue;
      }
      r.propSchema === "boolean" ? e[r.type] = !0 : e[r.type] = i.attrs.stringValue;
    }
    return e;
  }
  /**
   * Adds styles to the currently selected content.
   * @param styles The styles to add.
   */
  addStyles(e) {
    for (const [n, i] of Object.entries(e)) {
      const r = this.schema.styleSchema[n];
      if (!r)
        throw new Error(`style ${n} not found in styleSchema`);
      if (r.propSchema === "boolean")
        this._tiptapEditor.commands.setMark(n);
      else if (r.propSchema === "string")
        this._tiptapEditor.commands.setMark(n, { stringValue: i });
      else
        throw new Br(r.propSchema);
    }
  }
  /**
   * Removes styles from the currently selected content.
   * @param styles The styles to remove.
   */
  removeStyles(e) {
    for (const n of Object.keys(e))
      this._tiptapEditor.commands.unsetMark(n);
  }
  /**
   * Toggles styles on the currently selected content.
   * @param styles The styles to toggle.
   */
  toggleStyles(e) {
    for (const [n, i] of Object.entries(e)) {
      const r = this.schema.styleSchema[n];
      if (!r)
        throw new Error(`style ${n} not found in styleSchema`);
      if (r.propSchema === "boolean")
        this._tiptapEditor.commands.toggleMark(n);
      else if (r.propSchema === "string")
        this._tiptapEditor.commands.toggleMark(n, { stringValue: i });
      else
        throw new Br(r.propSchema);
    }
  }
  /**
   * Gets the currently selected text.
   */
  getSelectedText() {
    return this._tiptapEditor.state.doc.textBetween(
      this._tiptapEditor.state.selection.from,
      this._tiptapEditor.state.selection.to
    );
  }
  /**
   * Gets the URL of the last link in the current selection, or `undefined` if there are no links in the selection.
   */
  getSelectedLinkUrl() {
    return this._tiptapEditor.getAttributes("link").href;
  }
  /**
   * Creates a new link to replace the selected content.
   * @param url The link URL.
   * @param text The text to display the link with.
   */
  createLink(e, n) {
    if (e === "")
      return;
    const { from: i, to: r } = this._tiptapEditor.state.selection;
    n || (n = this._tiptapEditor.state.doc.textBetween(i, r));
    const o = this.pmSchema.mark("link", { href: e });
    this.dispatch(
      this._tiptapEditor.state.tr.insertText(n, i, r).addMark(i, i + n.length, o)
    );
  }
  /**
   * Checks if the block containing the text cursor can be nested.
   */
  canNestBlock() {
    const { blockContainer: e } = jt(
      this._tiptapEditor.state
    );
    return this._tiptapEditor.state.doc.resolve(e.beforePos).nodeBefore !== null;
  }
  /**
   * Nests the block containing the text cursor into the block above it.
   */
  nestBlock() {
    this._tiptapEditor.commands.sinkListItem("blockContainer");
  }
  /**
   * Checks if the block containing the text cursor is nested.
   */
  canUnnestBlock() {
    const { blockContainer: e } = jt(
      this._tiptapEditor.state
    );
    return this._tiptapEditor.state.doc.resolve(e.beforePos).depth > 1;
  }
  /**
   * Lifts the block containing the text cursor out of its parent.
   */
  unnestBlock() {
    this._tiptapEditor.commands.liftListItem("blockContainer");
  }
  /**
   * Moves the block containing the text cursor up. If the previous block has
   * children, moves it to the end of its children. If there is no previous
   * block, but the current block is nested, moves it out of & before its parent.
   */
  moveBlockUp() {
    _$(this);
  }
  /**
   * Moves the block containing the text cursor down. If the next block has
   * children, moves it to the start of its children. If there is no next block,
   * but the current block is nested, moves it out of & after its parent.
   */
  moveBlockDown() {
    E$(this);
  }
  /**
   * Exports blocks into a simplified HTML string. To better conform to HTML standards, children of blocks which aren't list
   * items are un-nested in the output HTML.
   *
   * @param blocks An array of blocks that should be serialized into HTML.
   * @returns The blocks, serialized as an HTML string.
   */
  async blocksToHTMLLossy(e = this.document) {
    return Fh(this.pmSchema, this).exportBlocks(e, {});
  }
  /**
   * Serializes blocks into an HTML string in the format that would normally be rendered by the editor.
   *
   * Use this method if you want to server-side render HTML (for example, a blog post that has been edited in BlockNote)
   * and serve it to users without loading the editor on the client (i.e.: displaying the blog post)
   *
   * @param blocks An array of blocks that should be serialized into HTML.
   * @returns The blocks, serialized as an HTML string.
   */
  async blocksToFullHTML(e) {
    return kH(this.pmSchema, this).serializeBlocks(e, {});
  }
  /**
   * Parses blocks from an HTML string. Tries to create `Block` objects out of any HTML block-level elements, and
   * `InlineNode` objects from any HTML inline elements, though not all element types are recognized. If BlockNote
   * doesn't recognize an HTML element's tag, it will parse it as a paragraph or plain text.
   * @param html The HTML string to parse blocks from.
   * @returns The blocks parsed from the HTML string.
   */
  async tryParseHTMLToBlocks(e) {
    return YE(
      e,
      this.schema.blockSchema,
      this.schema.inlineContentSchema,
      this.schema.styleSchema,
      this.pmSchema
    );
  }
  /**
   * Serializes blocks into a Markdown string. The output is simplified as Markdown does not support all features of
   * BlockNote - children of blocks which aren't list items are un-nested and certain styles are removed.
   * @param blocks An array of blocks that should be serialized into Markdown.
   * @returns The blocks, serialized as a Markdown string.
   */
  async blocksToMarkdownLossy(e = this.document) {
    return O$(e, this.pmSchema, this, {});
  }
  /**
   * Creates a list of blocks from a Markdown string. Tries to create `Block` and `InlineNode` objects based on
   * Markdown syntax, though not all symbols are recognized. If BlockNote doesn't recognize a symbol, it will parse it
   * as text.
   * @param markdown The Markdown string to parse blocks from.
   * @returns The blocks parsed from the Markdown string.
   */
  async tryParseMarkdownToBlocks(e) {
    return B$(
      e,
      this.schema.blockSchema,
      this.schema.inlineContentSchema,
      this.schema.styleSchema,
      this.pmSchema
    );
  }
  /**
   * Updates the user info for the current user that's shown to other collaborators.
   */
  updateCollaborationUserInfo(e) {
    if (!this.options.collaboration)
      throw new Error(
        "Cannot update collaboration user info when collaboration is disabled."
      );
    this._tiptapEditor.commands.updateUser(e);
  }
  /**
   * A callback function that runs whenever the editor's contents change.
   *
   * @param callback The callback to execute.
   * @returns A function to remove the callback.
   */
  onChange(e) {
    if (this.headless)
      return;
    const n = () => {
      e(this);
    };
    return this._tiptapEditor.on("update", n), () => {
      this._tiptapEditor.off("update", n);
    };
  }
  /**
   * A callback function that runs whenever the text cursor position or selection changes.
   *
   * @param callback The callback to execute.
   * @returns A function to remove the callback.
   */
  onSelectionChange(e) {
    if (this.headless)
      return;
    const n = () => {
      e(this);
    };
    return this._tiptapEditor.on("selectionUpdate", n), () => {
      this._tiptapEditor.off("selectionUpdate", n);
    };
  }
  openSuggestionMenu(e, n) {
    const i = this.prosemirrorView.state.tr, r = n && n.deleteTriggerCharacter ? i.insertText(e) : i;
    this.prosemirrorView.focus(), this.prosemirrorView.dispatch(
      r.scrollIntoView().setMeta(this.suggestionMenus.plugin, {
        triggerCharacter: e,
        deleteTriggerCharacter: (n == null ? void 0 : n.deleteTriggerCharacter) || !1,
        ignoreQueryLength: (n == null ? void 0 : n.ignoreQueryLength) || !1
      })
    );
  }
}, kd, ym;
async function Bj(t, e) {
  if (!g$("text", t))
    return [];
  if (!kd) {
    kd = Promise.resolve().then(() => bae), ym = await Promise.resolve().then(() => ole);
    const i = (await kd).default;
    await ym.init({ data: i });
  }
  const n = (await kd).default;
  return (e.trim() === "" ? Object.values(n.emojis) : await ym.SearchIndex.search(e)).map((i) => ({
    id: i.skins[0].native,
    onItemClick: () => t.insertInlineContent(i.skins[0].native + " ")
  }));
}
function Hj(t) {
  let e = t.getTextCursorPosition().block, n = t.schema.blockSchema[e.type].content;
  for (; n === "none"; )
    e = t.getTextCursorPosition().nextBlock, n = t.schema.blockSchema[e.type].content, t.setTextCursorPosition(e, "end");
}
function wi(t, e) {
  const n = t.getTextCursorPosition().block;
  if (n.content === void 0)
    throw new Error("Slash Menu open in a block that doesn't contain content.");
  let i;
  return Array.isArray(n.content) && (n.content.length === 1 && O1(n.content[0]) && n.content[0].type === "text" && n.content[0].text === "/" || n.content.length === 0) ? (i = t.updateBlock(n, e), e.content && t.setTextCursorPosition(i)) : (i = t.insertBlocks([e], n, "after")[0], t.setTextCursorPosition(t.getTextCursorPosition().nextBlock)), Hj(t), i;
}
function $j(t) {
  const e = [];
  return Ei("heading", t) && e.push(
    {
      onItemClick: () => {
        wi(t, {
          type: "heading",
          props: { level: 1 }
        });
      },
      badge: Ji("Mod-Alt-1"),
      key: "heading",
      ...t.dictionary.slash_menu.heading
    },
    {
      onItemClick: () => {
        wi(t, {
          type: "heading",
          props: { level: 2 }
        });
      },
      badge: Ji("Mod-Alt-2"),
      key: "heading_2",
      ...t.dictionary.slash_menu.heading_2
    },
    {
      onItemClick: () => {
        wi(t, {
          type: "heading",
          props: { level: 3 }
        });
      },
      badge: Ji("Mod-Alt-3"),
      key: "heading_3",
      ...t.dictionary.slash_menu.heading_3
    }
  ), Ei("numberedListItem", t) && e.push({
    onItemClick: () => {
      wi(t, {
        type: "numberedListItem"
      });
    },
    badge: Ji("Mod-Shift-7"),
    key: "numbered_list",
    ...t.dictionary.slash_menu.numbered_list
  }), Ei("bulletListItem", t) && e.push({
    onItemClick: () => {
      wi(t, {
        type: "bulletListItem"
      });
    },
    badge: Ji("Mod-Shift-8"),
    key: "bullet_list",
    ...t.dictionary.slash_menu.bullet_list
  }), Ei("checkListItem", t) && e.push({
    onItemClick: () => {
      wi(t, {
        type: "checkListItem"
      });
    },
    badge: Ji("Mod-Shift-9"),
    key: "check_list",
    ...t.dictionary.slash_menu.check_list
  }), Ei("paragraph", t) && e.push({
    onItemClick: () => {
      wi(t, {
        type: "paragraph"
      });
    },
    badge: Ji("Mod-Alt-0"),
    key: "paragraph",
    ...t.dictionary.slash_menu.paragraph
  }), Ei("table", t) && e.push({
    onItemClick: () => {
      wi(t, {
        type: "table",
        content: {
          type: "tableContent",
          rows: [
            {
              cells: ["", "", ""]
            },
            {
              cells: ["", "", ""]
            }
          ]
        }
      });
    },
    badge: void 0,
    key: "table",
    ...t.dictionary.slash_menu.table
  }), Ei("image", t) && e.push({
    onItemClick: () => {
      const n = wi(t, {
        type: "image"
      });
      t.dispatch(
        t._tiptapEditor.state.tr.setMeta(t.filePanel.plugin, {
          block: n
        })
      );
    },
    key: "image",
    ...t.dictionary.slash_menu.image
  }), Ei("video", t) && e.push({
    onItemClick: () => {
      const n = wi(t, {
        type: "video"
      });
      t.dispatch(
        t._tiptapEditor.state.tr.setMeta(t.filePanel.plugin, {
          block: n
        })
      );
    },
    key: "video",
    ...t.dictionary.slash_menu.video
  }), Ei("audio", t) && e.push({
    onItemClick: () => {
      const n = wi(t, {
        type: "audio"
      });
      t.dispatch(
        t._tiptapEditor.state.tr.setMeta(t.filePanel.plugin, {
          block: n
        })
      );
    },
    key: "audio",
    ...t.dictionary.slash_menu.audio
  }), Ei("file", t) && e.push({
    onItemClick: () => {
      const n = wi(t, {
        type: "file"
      });
      t.dispatch(
        t._tiptapEditor.state.tr.setMeta(t.filePanel.plugin, {
          block: n
        })
      );
    },
    key: "file",
    ...t.dictionary.slash_menu.file
  }), e.push({
    onItemClick: () => {
      t.openSuggestionMenu(":", {
        deleteTriggerCharacter: !0,
        ignoreQueryLength: !0
      });
    },
    key: "emoji",
    ...t.dictionary.slash_menu.emoji
  }), e;
}
function jj(t, e) {
  return t.filter(
    ({ title: n, aliases: i }) => n.toLowerCase().includes(e.toLowerCase()) || i && i.filter(
      (r) => r.toLowerCase().includes(e.toLowerCase())
    ).length !== 0
  );
}
var Mg = { exports: {} }, vm = {};
/**
 * @license React
 * use-sync-external-store-shim.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Ww;
function zj() {
  if (Ww) return vm;
  Ww = 1;
  var t = Ke;
  function e(d, u) {
    return d === u && (d !== 0 || 1 / d === 1 / u) || d !== d && u !== u;
  }
  var n = typeof Object.is == "function" ? Object.is : e, i = t.useState, r = t.useEffect, o = t.useLayoutEffect, s = t.useDebugValue;
  function a(d, u) {
    var h = u(), p = i({ inst: { value: h, getSnapshot: u } }), m = p[0].inst, v = p[1];
    return o(function() {
      m.value = h, m.getSnapshot = u, l(m) && v({ inst: m });
    }, [d, h, u]), r(function() {
      return l(m) && v({ inst: m }), d(function() {
        l(m) && v({ inst: m });
      });
    }, [d]), s(h), h;
  }
  function l(d) {
    var u = d.getSnapshot;
    d = d.value;
    try {
      var h = u();
      return !n(d, h);
    } catch {
      return !0;
    }
  }
  function c(d, u) {
    return u();
  }
  var f = typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u" ? c : a;
  return vm.useSyncExternalStore = t.useSyncExternalStore !== void 0 ? t.useSyncExternalStore : f, vm;
}
var bm = {};
/**
 * @license React
 * use-sync-external-store-shim.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var qw;
function Uj() {
  return qw || (qw = 1, process.env.NODE_ENV !== "production" && function() {
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var t = Ke, e = t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function n(k) {
      {
        for (var _ = arguments.length, S = new Array(_ > 1 ? _ - 1 : 0), E = 1; E < _; E++)
          S[E - 1] = arguments[E];
        i("error", k, S);
      }
    }
    function i(k, _, S) {
      {
        var E = e.ReactDebugCurrentFrame, x = E.getStackAddendum();
        x !== "" && (_ += "%s", S = S.concat([x]));
        var N = S.map(function(R) {
          return String(R);
        });
        N.unshift("Warning: " + _), Function.prototype.apply.call(console[k], console, N);
      }
    }
    function r(k, _) {
      return k === _ && (k !== 0 || 1 / k === 1 / _) || k !== k && _ !== _;
    }
    var o = typeof Object.is == "function" ? Object.is : r, s = t.useState, a = t.useEffect, l = t.useLayoutEffect, c = t.useDebugValue, f = !1, d = !1;
    function u(k, _, S) {
      f || t.startTransition !== void 0 && (f = !0, n("You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release."));
      var E = _();
      if (!d) {
        var x = _();
        o(E, x) || (n("The result of getSnapshot should be cached to avoid an infinite loop"), d = !0);
      }
      var N = s({
        inst: {
          value: E,
          getSnapshot: _
        }
      }), R = N[0].inst, A = N[1];
      return l(function() {
        R.value = E, R.getSnapshot = _, h(R) && A({
          inst: R
        });
      }, [k, E, _]), a(function() {
        h(R) && A({
          inst: R
        });
        var O = function() {
          h(R) && A({
            inst: R
          });
        };
        return k(O);
      }, [k]), c(E), E;
    }
    function h(k) {
      var _ = k.getSnapshot, S = k.value;
      try {
        var E = _();
        return !o(S, E);
      } catch {
        return !0;
      }
    }
    function p(k, _, S) {
      return _();
    }
    var m = typeof window < "u" && typeof window.document < "u" && typeof window.document.createElement < "u", v = !m, y = v ? p : u, C = t.useSyncExternalStore !== void 0 ? t.useSyncExternalStore : y;
    bm.useSyncExternalStore = C, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
  }()), bm;
}
process.env.NODE_ENV === "production" ? Mg.exports = zj() : Mg.exports = Uj();
var Ov = Mg.exports;
const Vj = (...t) => (e) => {
  t.forEach((n) => {
    typeof n == "function" ? n(e) : n && (n.current = e);
  });
}, Wj = ({ contentComponent: t }) => {
  const e = Ov.useSyncExternalStore(t.subscribe, t.getSnapshot, t.getServerSnapshot);
  return Ke.createElement(Ke.Fragment, null, Object.values(e));
};
function qj() {
  const t = /* @__PURE__ */ new Set();
  let e = {};
  return {
    /**
     * Subscribe to the editor instance's changes.
     */
    subscribe(n) {
      return t.add(n), () => {
        t.delete(n);
      };
    },
    getSnapshot() {
      return e;
    },
    getServerSnapshot() {
      return e;
    },
    /**
     * Adds a new NodeView Renderer to the editor.
     */
    setRenderer(n, i) {
      e = {
        ...e,
        [n]: sy.createPortal(i.reactElement, i.element, n)
      }, t.forEach((r) => r());
    },
    /**
     * Removes a NodeView Renderer from the editor.
     */
    removeRenderer(n) {
      const i = { ...e };
      delete i[n], e = i, t.forEach((r) => r());
    }
  };
}
class Gj extends Ke.Component {
  constructor(e) {
    var n;
    super(e), this.editorContentRef = Ke.createRef(), this.initialized = !1, this.state = {
      hasContentComponentInitialized: !!(!((n = e.editor) === null || n === void 0) && n.contentComponent)
    };
  }
  componentDidMount() {
    this.init();
  }
  componentDidUpdate() {
    this.init();
  }
  init() {
    const e = this.props.editor;
    if (e && !e.isDestroyed && e.options.element) {
      if (e.contentComponent)
        return;
      const n = this.editorContentRef.current;
      n.append(...e.options.element.childNodes), e.setOptions({
        element: n
      }), e.contentComponent = qj(), this.state.hasContentComponentInitialized || (this.unsubscribeToContentComponent = e.contentComponent.subscribe(() => {
        this.setState((i) => i.hasContentComponentInitialized ? i : {
          hasContentComponentInitialized: !0
        }), this.unsubscribeToContentComponent && this.unsubscribeToContentComponent();
      })), e.createNodeViews(), this.initialized = !0;
    }
  }
  componentWillUnmount() {
    const e = this.props.editor;
    if (!e || (this.initialized = !1, e.isDestroyed || e.view.setProps({
      nodeViews: {}
    }), this.unsubscribeToContentComponent && this.unsubscribeToContentComponent(), e.contentComponent = null, !e.options.element.firstChild))
      return;
    const n = document.createElement("div");
    n.append(...e.options.element.childNodes), e.setOptions({
      element: n
    });
  }
  render() {
    const { editor: e, innerRef: n, ...i } = this.props;
    return Ke.createElement(
      Ke.Fragment,
      null,
      Ke.createElement("div", { ref: Vj(n, this.editorContentRef), ...i }),
      (e == null ? void 0 : e.contentComponent) && Ke.createElement(Wj, { contentComponent: e.contentComponent })
    );
  }
}
const Kj = tt((t, e) => {
  const n = Ke.useMemo(() => Math.floor(Math.random() * 4294967295).toString(), [t.editor]);
  return Ke.createElement(Gj, {
    key: n,
    innerRef: e,
    ...t
  });
});
Ke.memo(Kj);
var km = {};
/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Gw;
function Yj() {
  if (Gw) return km;
  Gw = 1;
  var t = Ke, e = Ov;
  function n(c, f) {
    return c === f && (c !== 0 || 1 / c === 1 / f) || c !== c && f !== f;
  }
  var i = typeof Object.is == "function" ? Object.is : n, r = e.useSyncExternalStore, o = t.useRef, s = t.useEffect, a = t.useMemo, l = t.useDebugValue;
  return km.useSyncExternalStoreWithSelector = function(c, f, d, u, h) {
    var p = o(null);
    if (p.current === null) {
      var m = { hasValue: !1, value: null };
      p.current = m;
    } else m = p.current;
    p = a(function() {
      function y(E) {
        if (!C) {
          if (C = !0, k = E, E = u(E), h !== void 0 && m.hasValue) {
            var x = m.value;
            if (h(x, E)) return _ = x;
          }
          return _ = E;
        }
        if (x = _, i(k, E)) return x;
        var N = u(E);
        return h !== void 0 && h(x, N) ? x : (k = E, _ = N);
      }
      var C = !1, k, _, S = d === void 0 ? null : d;
      return [function() {
        return y(f());
      }, S === null ? void 0 : function() {
        return y(S());
      }];
    }, [f, d, u, h]);
    var v = r(c, p[0], p[1]);
    return s(function() {
      m.hasValue = !0, m.value = v;
    }, [v]), l(v), v;
  }, km;
}
var wm = {};
/**
 * @license React
 * use-sync-external-store-shim/with-selector.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Kw;
function Jj() {
  return Kw || (Kw = 1, process.env.NODE_ENV !== "production" && function() {
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var t = Ke, e = Ov;
    function n(f, d) {
      return f === d && (f !== 0 || 1 / f === 1 / d) || f !== f && d !== d;
    }
    var i = typeof Object.is == "function" ? Object.is : n, r = e.useSyncExternalStore, o = t.useRef, s = t.useEffect, a = t.useMemo, l = t.useDebugValue;
    function c(f, d, u, h, p) {
      var m = o(null), v;
      m.current === null ? (v = {
        hasValue: !1,
        value: null
      }, m.current = v) : v = m.current;
      var y = a(function() {
        var S = !1, E, x, N = function(B) {
          if (!S) {
            S = !0, E = B;
            var U = h(B);
            if (p !== void 0 && v.hasValue) {
              var K = v.value;
              if (p(K, U))
                return x = K, K;
            }
            return x = U, U;
          }
          var G = E, J = x;
          if (i(G, B))
            return J;
          var te = h(B);
          return p !== void 0 && p(J, te) ? J : (E = B, x = te, te);
        }, R = u === void 0 ? null : u, A = function() {
          return N(d());
        }, O = R === null ? void 0 : function() {
          return N(R());
        };
        return [A, O];
      }, [d, u, h, p]), C = y[0], k = y[1], _ = r(f, C, k);
      return s(function() {
        v.hasValue = !0, v.value = _;
      }, [_]), l(_), _;
    }
    wm.useSyncExternalStoreWithSelector = c, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
  }()), wm;
}
process.env.NODE_ENV === "production" ? Yj() : Jj();
process.env.NODE_ENV;
const Xj = cr({
  editor: null
});
Xj.Consumer;
const rT = cr({
  onDragStart: void 0
}), oT = () => fr(rT), Qj = (t) => {
  const e = t.as || "div", { nodeViewContentRef: n } = oT();
  return (
    // @ts-ignore
    Ke.createElement(e, { ...t, ref: n, "data-node-view-content": "", style: {
      whiteSpace: "pre-wrap",
      ...t.style
    } })
  );
}, Zj = Ke.forwardRef((t, e) => {
  const { onDragStart: n } = oT(), i = t.as || "div";
  return (
    // @ts-ignore
    Ke.createElement(i, { ...t, ref: e, "data-node-view-wrapper": "", onDragStart: n, style: {
      whiteSpace: "normal",
      ...t.style
    } })
  );
});
function ez(t) {
  return !!(typeof t == "function" && t.prototype && t.prototype.isReactComponent);
}
function tz(t) {
  var e;
  return typeof t == "object" && ((e = t.$$typeof) === null || e === void 0 ? void 0 : e.toString()) === "Symbol(react.forward_ref)";
}
class nz {
  /**
   * Immediately creates element and renders the provided React component.
   */
  constructor(e, { editor: n, props: i = {}, as: r = "div", className: o = "" }) {
    this.ref = null, this.id = Math.floor(Math.random() * 4294967295).toString(), this.component = e, this.editor = n, this.props = i, this.element = document.createElement(r), this.element.classList.add("react-renderer"), o && this.element.classList.add(...o.split(" ")), this.editor.isInitialized ? ay(() => {
      this.render();
    }) : this.render();
  }
  /**
   * Render the React component.
   */
  render() {
    var e;
    const n = this.component, i = this.props, r = this.editor;
    (ez(n) || tz(n)) && (i.ref = (o) => {
      this.ref = o;
    }), this.reactElement = Ke.createElement(n, i), (e = r == null ? void 0 : r.contentComponent) === null || e === void 0 || e.setRenderer(this.id, this);
  }
  /**
   * Re-renders the React component with new props.
   */
  updateProps(e = {}) {
    this.props = {
      ...this.props,
      ...e
    }, this.render();
  }
  /**
   * Destroy the React component.
   */
  destroy() {
    var e;
    const n = this.editor;
    (e = n == null ? void 0 : n.contentComponent) === null || e === void 0 || e.removeRenderer(this.id);
  }
  /**
   * Update the attributes of the element that holds the React component.
   */
  updateAttributes(e) {
    Object.keys(e).forEach((n) => {
      this.element.setAttribute(n, e[n]);
    });
  }
}
class iz extends YI {
  /**
   * Setup the React component.
   * Called on initialization.
   */
  mount() {
    const e = {
      editor: this.editor,
      node: this.node,
      decorations: this.decorations,
      innerDecorations: this.innerDecorations,
      view: this.view,
      selected: !1,
      extension: this.extension,
      HTMLAttributes: this.HTMLAttributes,
      getPos: () => this.getPos(),
      updateAttributes: (c = {}) => this.updateAttributes(c),
      deleteNode: () => this.deleteNode()
    };
    if (!this.component.displayName) {
      const c = (f) => f.charAt(0).toUpperCase() + f.substring(1);
      this.component.displayName = c(this.extension.name);
    }
    const r = { onDragStart: this.onDragStart.bind(this), nodeViewContentRef: (c) => {
      c && this.contentDOMElement && c.firstChild !== this.contentDOMElement && c.appendChild(this.contentDOMElement);
    } }, o = this.component, s = Ke.memo((c) => Ke.createElement(rT.Provider, { value: r }, Ke.createElement(o, c)));
    s.displayName = "ReactNodeView", this.node.isLeaf ? this.contentDOMElement = null : this.options.contentDOMElementTag ? this.contentDOMElement = document.createElement(this.options.contentDOMElementTag) : this.contentDOMElement = document.createElement(this.node.isInline ? "span" : "div"), this.contentDOMElement && (this.contentDOMElement.dataset.nodeViewContentReact = "", this.contentDOMElement.style.whiteSpace = "inherit");
    let a = this.node.isInline ? "span" : "div";
    this.options.as && (a = this.options.as);
    const { className: l = "" } = this.options;
    this.handleSelectionUpdate = this.handleSelectionUpdate.bind(this), this.editor.on("selectionUpdate", this.handleSelectionUpdate), this.renderer = new nz(s, {
      editor: this.editor,
      props: e,
      as: a,
      className: `node-${this.node.type.name} ${l}`.trim()
    }), this.updateElementAttributes();
  }
  /**
   * Return the DOM element.
   * This is the element that will be used to display the node view.
   */
  get dom() {
    var e;
    if (this.renderer.element.firstElementChild && !(!((e = this.renderer.element.firstElementChild) === null || e === void 0) && e.hasAttribute("data-node-view-wrapper")))
      throw Error("Please use the NodeViewWrapper component for your node view.");
    return this.renderer.element;
  }
  /**
   * Return the content DOM element.
   * This is the element that will be used to display the rich-text content of the node.
   */
  get contentDOM() {
    return this.node.isLeaf ? null : this.contentDOMElement;
  }
  /**
   * On editor selection update, check if the node is selected.
   * If it is, call `selectNode`, otherwise call `deselectNode`.
   */
  handleSelectionUpdate() {
    const { from: e, to: n } = this.editor.state.selection, i = this.getPos();
    if (typeof i == "number")
      if (e <= i && n >= i + this.node.nodeSize) {
        if (this.renderer.props.selected)
          return;
        this.selectNode();
      } else {
        if (!this.renderer.props.selected)
          return;
        this.deselectNode();
      }
  }
  /**
   * On update, update the React component.
   * To prevent unnecessary updates, the `update` option can be used.
   */
  update(e, n, i) {
    const r = (o) => {
      this.renderer.updateProps(o), typeof this.options.attrs == "function" && this.updateElementAttributes();
    };
    if (e.type !== this.node.type)
      return !1;
    if (typeof this.options.update == "function") {
      const o = this.node, s = this.decorations, a = this.innerDecorations;
      return this.node = e, this.decorations = n, this.innerDecorations = i, this.options.update({
        oldNode: o,
        oldDecorations: s,
        newNode: e,
        newDecorations: n,
        oldInnerDecorations: a,
        innerDecorations: i,
        updateProps: () => r({ node: e, decorations: n, innerDecorations: i })
      });
    }
    return e === this.node && this.decorations === n && this.innerDecorations === i || (this.node = e, this.decorations = n, this.innerDecorations = i, r({ node: e, decorations: n, innerDecorations: i })), !0;
  }
  /**
   * Select the node.
   * Add the `selected` prop and the `ProseMirror-selectednode` class.
   */
  selectNode() {
    this.renderer.updateProps({
      selected: !0
    }), this.renderer.element.classList.add("ProseMirror-selectednode");
  }
  /**
   * Deselect the node.
   * Remove the `selected` prop and the `ProseMirror-selectednode` class.
   */
  deselectNode() {
    this.renderer.updateProps({
      selected: !1
    }), this.renderer.element.classList.remove("ProseMirror-selectednode");
  }
  /**
   * Destroy the React component instance.
   */
  destroy() {
    this.renderer.destroy(), this.editor.off("selectionUpdate", this.handleSelectionUpdate), this.contentDOMElement = null;
  }
  /**
   * Update the attributes of the top-level element that holds the React component.
   * Applying the attributes defined in the `attrs` option.
   */
  updateElementAttributes() {
    if (this.options.attrs) {
      let e = {};
      if (typeof this.options.attrs == "function") {
        const n = this.editor.extensionManager.attributes, i = $u(this.node, n);
        e = this.options.attrs({ node: this.node, HTMLAttributes: i });
      } else
        e = this.options.attrs;
      this.renderer.updateAttributes(e);
    }
  }
}
function rz(t, e) {
  return (n) => n.editor.contentComponent ? new iz(t, n, e) : {};
}
const sT = cr(void 0);
function Co(t) {
  return fr(sT);
}
var Ng = { exports: {} }, sc = {};
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Yw;
function oz() {
  if (Yw) return sc;
  Yw = 1;
  var t = Ke, e = Symbol.for("react.element"), n = Symbol.for("react.fragment"), i = Object.prototype.hasOwnProperty, r = t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, o = { key: !0, ref: !0, __self: !0, __source: !0 };
  function s(a, l, c) {
    var f, d = {}, u = null, h = null;
    c !== void 0 && (u = "" + c), l.key !== void 0 && (u = "" + l.key), l.ref !== void 0 && (h = l.ref);
    for (f in l) i.call(l, f) && !o.hasOwnProperty(f) && (d[f] = l[f]);
    if (a && a.defaultProps) for (f in l = a.defaultProps, l) d[f] === void 0 && (d[f] = l[f]);
    return { $$typeof: e, type: a, key: u, ref: h, props: d, _owner: r.current };
  }
  return sc.Fragment = n, sc.jsx = s, sc.jsxs = s, sc;
}
var wd = {};
/**
 * @license React
 * react-jsx-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Jw;
function sz() {
  return Jw || (Jw = 1, process.env.NODE_ENV !== "production" && function() {
    var t = Ke, e = Symbol.for("react.element"), n = Symbol.for("react.portal"), i = Symbol.for("react.fragment"), r = Symbol.for("react.strict_mode"), o = Symbol.for("react.profiler"), s = Symbol.for("react.provider"), a = Symbol.for("react.context"), l = Symbol.for("react.forward_ref"), c = Symbol.for("react.suspense"), f = Symbol.for("react.suspense_list"), d = Symbol.for("react.memo"), u = Symbol.for("react.lazy"), h = Symbol.for("react.offscreen"), p = Symbol.iterator, m = "@@iterator";
    function v(b) {
      if (b === null || typeof b != "object")
        return null;
      var L = p && b[p] || b[m];
      return typeof L == "function" ? L : null;
    }
    var y = t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function C(b) {
      {
        for (var L = arguments.length, z = new Array(L > 1 ? L - 1 : 0), ee = 1; ee < L; ee++)
          z[ee - 1] = arguments[ee];
        k("error", b, z);
      }
    }
    function k(b, L, z) {
      {
        var ee = y.ReactDebugCurrentFrame, pe = ee.getStackAddendum();
        pe !== "" && (L += "%s", z = z.concat([pe]));
        var ke = z.map(function(de) {
          return String(de);
        });
        ke.unshift("Warning: " + L), Function.prototype.apply.call(console[b], console, ke);
      }
    }
    var _ = !1, S = !1, E = !1, x = !1, N = !1, R;
    R = Symbol.for("react.module.reference");
    function A(b) {
      return !!(typeof b == "string" || typeof b == "function" || b === i || b === o || N || b === r || b === c || b === f || x || b === h || _ || S || E || typeof b == "object" && b !== null && (b.$$typeof === u || b.$$typeof === d || b.$$typeof === s || b.$$typeof === a || b.$$typeof === l || // This needs to include all possible module reference object
      // types supported by any Flight configuration anywhere since
      // we don't know which Flight build this will end up being used
      // with.
      b.$$typeof === R || b.getModuleId !== void 0));
    }
    function O(b, L, z) {
      var ee = b.displayName;
      if (ee)
        return ee;
      var pe = L.displayName || L.name || "";
      return pe !== "" ? z + "(" + pe + ")" : z;
    }
    function B(b) {
      return b.displayName || "Context";
    }
    function U(b) {
      if (b == null)
        return null;
      if (typeof b.tag == "number" && C("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof b == "function")
        return b.displayName || b.name || null;
      if (typeof b == "string")
        return b;
      switch (b) {
        case i:
          return "Fragment";
        case n:
          return "Portal";
        case o:
          return "Profiler";
        case r:
          return "StrictMode";
        case c:
          return "Suspense";
        case f:
          return "SuspenseList";
      }
      if (typeof b == "object")
        switch (b.$$typeof) {
          case a:
            var L = b;
            return B(L) + ".Consumer";
          case s:
            var z = b;
            return B(z._context) + ".Provider";
          case l:
            return O(b, b.render, "ForwardRef");
          case d:
            var ee = b.displayName || null;
            return ee !== null ? ee : U(b.type) || "Memo";
          case u: {
            var pe = b, ke = pe._payload, de = pe._init;
            try {
              return U(de(ke));
            } catch {
              return null;
            }
          }
        }
      return null;
    }
    var K = Object.assign, G = 0, J, te, re, X, D, me, Se;
    function F() {
    }
    F.__reactDisabledLog = !0;
    function Oe() {
      {
        if (G === 0) {
          J = console.log, te = console.info, re = console.warn, X = console.error, D = console.group, me = console.groupCollapsed, Se = console.groupEnd;
          var b = {
            configurable: !0,
            enumerable: !0,
            value: F,
            writable: !0
          };
          Object.defineProperties(console, {
            info: b,
            log: b,
            warn: b,
            error: b,
            group: b,
            groupCollapsed: b,
            groupEnd: b
          });
        }
        G++;
      }
    }
    function ft() {
      {
        if (G--, G === 0) {
          var b = {
            configurable: !0,
            enumerable: !0,
            writable: !0
          };
          Object.defineProperties(console, {
            log: K({}, b, {
              value: J
            }),
            info: K({}, b, {
              value: te
            }),
            warn: K({}, b, {
              value: re
            }),
            error: K({}, b, {
              value: X
            }),
            group: K({}, b, {
              value: D
            }),
            groupCollapsed: K({}, b, {
              value: me
            }),
            groupEnd: K({}, b, {
              value: Se
            })
          });
        }
        G < 0 && C("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
      }
    }
    var Re = y.ReactCurrentDispatcher, qe;
    function Ye(b, L, z) {
      {
        if (qe === void 0)
          try {
            throw Error();
          } catch (pe) {
            var ee = pe.stack.trim().match(/\n( *(at )?)/);
            qe = ee && ee[1] || "";
          }
        return `
` + qe + b;
      }
    }
    var Ge = !1, st;
    {
      var Zt = typeof WeakMap == "function" ? WeakMap : Map;
      st = new Zt();
    }
    function Mt(b, L) {
      if (!b || Ge)
        return "";
      {
        var z = st.get(b);
        if (z !== void 0)
          return z;
      }
      var ee;
      Ge = !0;
      var pe = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0;
      var ke;
      ke = Re.current, Re.current = null, Oe();
      try {
        if (L) {
          var de = function() {
            throw Error();
          };
          if (Object.defineProperty(de.prototype, "props", {
            set: function() {
              throw Error();
            }
          }), typeof Reflect == "object" && Reflect.construct) {
            try {
              Reflect.construct(de, []);
            } catch (Je) {
              ee = Je;
            }
            Reflect.construct(b, [], de);
          } else {
            try {
              de.call();
            } catch (Je) {
              ee = Je;
            }
            b.call(de.prototype);
          }
        } else {
          try {
            throw Error();
          } catch (Je) {
            ee = Je;
          }
          b();
        }
      } catch (Je) {
        if (Je && ee && typeof Je.stack == "string") {
          for (var ae = Je.stack.split(`
`), Ue = ee.stack.split(`
`), xe = ae.length - 1, Ne = Ue.length - 1; xe >= 1 && Ne >= 0 && ae[xe] !== Ue[Ne]; )
            Ne--;
          for (; xe >= 1 && Ne >= 0; xe--, Ne--)
            if (ae[xe] !== Ue[Ne]) {
              if (xe !== 1 || Ne !== 1)
                do
                  if (xe--, Ne--, Ne < 0 || ae[xe] !== Ue[Ne]) {
                    var it = `
` + ae[xe].replace(" at new ", " at ");
                    return b.displayName && it.includes("<anonymous>") && (it = it.replace("<anonymous>", b.displayName)), typeof b == "function" && st.set(b, it), it;
                  }
                while (xe >= 1 && Ne >= 0);
              break;
            }
        }
      } finally {
        Ge = !1, Re.current = ke, ft(), Error.prepareStackTrace = pe;
      }
      var an = b ? b.displayName || b.name : "", Vt = an ? Ye(an) : "";
      return typeof b == "function" && st.set(b, Vt), Vt;
    }
    function Dt(b, L, z) {
      return Mt(b, !1);
    }
    function dt(b) {
      var L = b.prototype;
      return !!(L && L.isReactComponent);
    }
    function W(b, L, z) {
      if (b == null)
        return "";
      if (typeof b == "function")
        return Mt(b, dt(b));
      if (typeof b == "string")
        return Ye(b);
      switch (b) {
        case c:
          return Ye("Suspense");
        case f:
          return Ye("SuspenseList");
      }
      if (typeof b == "object")
        switch (b.$$typeof) {
          case l:
            return Dt(b.render);
          case d:
            return W(b.type, L, z);
          case u: {
            var ee = b, pe = ee._payload, ke = ee._init;
            try {
              return W(ke(pe), L, z);
            } catch {
            }
          }
        }
      return "";
    }
    var Y = Object.prototype.hasOwnProperty, fe = {}, Ee = y.ReactDebugCurrentFrame;
    function I(b) {
      if (b) {
        var L = b._owner, z = W(b.type, b._source, L ? L.type : null);
        Ee.setExtraStackFrame(z);
      } else
        Ee.setExtraStackFrame(null);
    }
    function g(b, L, z, ee, pe) {
      {
        var ke = Function.call.bind(Y);
        for (var de in b)
          if (ke(b, de)) {
            var ae = void 0;
            try {
              if (typeof b[de] != "function") {
                var Ue = Error((ee || "React class") + ": " + z + " type `" + de + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof b[de] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                throw Ue.name = "Invariant Violation", Ue;
              }
              ae = b[de](L, de, ee, z, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
            } catch (xe) {
              ae = xe;
            }
            ae && !(ae instanceof Error) && (I(pe), C("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", ee || "React class", z, de, typeof ae), I(null)), ae instanceof Error && !(ae.message in fe) && (fe[ae.message] = !0, I(pe), C("Failed %s type: %s", z, ae.message), I(null));
          }
      }
    }
    var T = Array.isArray;
    function M(b) {
      return T(b);
    }
    function j(b) {
      {
        var L = typeof Symbol == "function" && Symbol.toStringTag, z = L && b[Symbol.toStringTag] || b.constructor.name || "Object";
        return z;
      }
    }
    function q(b) {
      try {
        return Z(b), !1;
      } catch {
        return !0;
      }
    }
    function Z(b) {
      return "" + b;
    }
    function Te(b) {
      if (q(b))
        return C("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", j(b)), Z(b);
    }
    var V = y.ReactCurrentOwner, se = {
      key: !0,
      ref: !0,
      __self: !0,
      __source: !0
    }, ue, _e, Le;
    Le = {};
    function Ht(b) {
      if (Y.call(b, "ref")) {
        var L = Object.getOwnPropertyDescriptor(b, "ref").get;
        if (L && L.isReactWarning)
          return !1;
      }
      return b.ref !== void 0;
    }
    function en(b) {
      if (Y.call(b, "key")) {
        var L = Object.getOwnPropertyDescriptor(b, "key").get;
        if (L && L.isReactWarning)
          return !1;
      }
      return b.key !== void 0;
    }
    function tn(b, L) {
      if (typeof b.ref == "string" && V.current && L && V.current.stateNode !== L) {
        var z = U(V.current.type);
        Le[z] || (C('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', U(V.current.type), b.ref), Le[z] = !0);
      }
    }
    function gn(b, L) {
      {
        var z = function() {
          ue || (ue = !0, C("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", L));
        };
        z.isReactWarning = !0, Object.defineProperty(b, "key", {
          get: z,
          configurable: !0
        });
      }
    }
    function yn(b, L) {
      {
        var z = function() {
          _e || (_e = !0, C("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", L));
        };
        z.isReactWarning = !0, Object.defineProperty(b, "ref", {
          get: z,
          configurable: !0
        });
      }
    }
    var Nt = function(b, L, z, ee, pe, ke, de) {
      var ae = {
        // This tag allows us to uniquely identify this as a React Element
        $$typeof: e,
        // Built-in properties that belong on the element
        type: b,
        key: L,
        ref: z,
        props: de,
        // Record the component responsible for creating this element.
        _owner: ke
      };
      return ae._store = {}, Object.defineProperty(ae._store, "validated", {
        configurable: !1,
        enumerable: !1,
        writable: !0,
        value: !1
      }), Object.defineProperty(ae, "_self", {
        configurable: !1,
        enumerable: !1,
        writable: !1,
        value: ee
      }), Object.defineProperty(ae, "_source", {
        configurable: !1,
        enumerable: !1,
        writable: !1,
        value: pe
      }), Object.freeze && (Object.freeze(ae.props), Object.freeze(ae)), ae;
    };
    function qr(b, L, z, ee, pe) {
      {
        var ke, de = {}, ae = null, Ue = null;
        z !== void 0 && (Te(z), ae = "" + z), en(L) && (Te(L.key), ae = "" + L.key), Ht(L) && (Ue = L.ref, tn(L, pe));
        for (ke in L)
          Y.call(L, ke) && !se.hasOwnProperty(ke) && (de[ke] = L[ke]);
        if (b && b.defaultProps) {
          var xe = b.defaultProps;
          for (ke in xe)
            de[ke] === void 0 && (de[ke] = xe[ke]);
        }
        if (ae || Ue) {
          var Ne = typeof b == "function" ? b.displayName || b.name || "Unknown" : b;
          ae && gn(de, Ne), Ue && yn(de, Ne);
        }
        return Nt(b, ae, Ue, pe, ee, V.current, de);
      }
    }
    var nn = y.ReactCurrentOwner, No = y.ReactDebugCurrentFrame;
    function sn(b) {
      if (b) {
        var L = b._owner, z = W(b.type, b._source, L ? L.type : null);
        No.setExtraStackFrame(z);
      } else
        No.setExtraStackFrame(null);
    }
    var Vi;
    Vi = !1;
    function Wi(b) {
      return typeof b == "object" && b !== null && b.$$typeof === e;
    }
    function Oo() {
      {
        if (nn.current) {
          var b = U(nn.current.type);
          if (b)
            return `

Check the render method of \`` + b + "`.";
        }
        return "";
      }
    }
    function ql(b) {
      return "";
    }
    var Ro = {};
    function Gl(b) {
      {
        var L = Oo();
        if (!L) {
          var z = typeof b == "string" ? b : b.displayName || b.name;
          z && (L = `

Check the top-level render call using <` + z + ">.");
        }
        return L;
      }
    }
    function Io(b, L) {
      {
        if (!b._store || b._store.validated || b.key != null)
          return;
        b._store.validated = !0;
        var z = Gl(L);
        if (Ro[z])
          return;
        Ro[z] = !0;
        var ee = "";
        b && b._owner && b._owner !== nn.current && (ee = " It was passed a child from " + U(b._owner.type) + "."), sn(b), C('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', z, ee), sn(null);
      }
    }
    function Lo(b, L) {
      {
        if (typeof b != "object")
          return;
        if (M(b))
          for (var z = 0; z < b.length; z++) {
            var ee = b[z];
            Wi(ee) && Io(ee, L);
          }
        else if (Wi(b))
          b._store && (b._store.validated = !0);
        else if (b) {
          var pe = v(b);
          if (typeof pe == "function" && pe !== b.entries)
            for (var ke = pe.call(b), de; !(de = ke.next()).done; )
              Wi(de.value) && Io(de.value, L);
        }
      }
    }
    function Kl(b) {
      {
        var L = b.type;
        if (L == null || typeof L == "string")
          return;
        var z;
        if (typeof L == "function")
          z = L.propTypes;
        else if (typeof L == "object" && (L.$$typeof === l || // Note: Memo only checks outer props here.
        // Inner props are checked in the reconciler.
        L.$$typeof === d))
          z = L.propTypes;
        else
          return;
        if (z) {
          var ee = U(L);
          g(z, b.props, "prop", ee, b);
        } else if (L.PropTypes !== void 0 && !Vi) {
          Vi = !0;
          var pe = U(L);
          C("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", pe || "Unknown");
        }
        typeof L.getDefaultProps == "function" && !L.getDefaultProps.isReactClassApproved && C("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
      }
    }
    function Yl(b) {
      {
        for (var L = Object.keys(b.props), z = 0; z < L.length; z++) {
          var ee = L[z];
          if (ee !== "children" && ee !== "key") {
            sn(b), C("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", ee), sn(null);
            break;
          }
        }
        b.ref !== null && (sn(b), C("Invalid attribute `ref` supplied to `React.Fragment`."), sn(null));
      }
    }
    var Do = {};
    function Po(b, L, z, ee, pe, ke) {
      {
        var de = A(b);
        if (!de) {
          var ae = "";
          (b === void 0 || typeof b == "object" && b !== null && Object.keys(b).length === 0) && (ae += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
          var Ue = ql();
          Ue ? ae += Ue : ae += Oo();
          var xe;
          b === null ? xe = "null" : M(b) ? xe = "array" : b !== void 0 && b.$$typeof === e ? (xe = "<" + (U(b.type) || "Unknown") + " />", ae = " Did you accidentally export a JSX literal instead of a component?") : xe = typeof b, C("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", xe, ae);
        }
        var Ne = qr(b, L, z, pe, ke);
        if (Ne == null)
          return Ne;
        if (de) {
          var it = L.children;
          if (it !== void 0)
            if (ee)
              if (M(it)) {
                for (var an = 0; an < it.length; an++)
                  Lo(it[an], b);
                Object.freeze && Object.freeze(it);
              } else
                C("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
            else
              Lo(it, b);
        }
        if (Y.call(L, "key")) {
          var Vt = U(b), Je = Object.keys(L).filter(function(tc) {
            return tc !== "key";
          }), qi = Je.length > 0 ? "{key: someKey, " + Je.join(": ..., ") + ": ...}" : "{key: someKey}";
          if (!Do[Vt + qi]) {
            var ec = Je.length > 0 ? "{" + Je.join(": ..., ") + ": ...}" : "{}";
            C(`A props object containing a "key" prop is being spread into JSX:
  let props = %s;
  <%s {...props} />
React keys must be passed directly to JSX without using spread:
  let props = %s;
  <%s key={someKey} {...props} />`, qi, Vt, ec, Vt), Do[Vt + qi] = !0;
          }
        }
        return b === i ? Yl(Ne) : Kl(Ne), Ne;
      }
    }
    function Jl(b, L, z) {
      return Po(b, L, z, !0);
    }
    function Xl(b, L, z) {
      return Po(b, L, z, !1);
    }
    var Ql = Xl, Zl = Jl;
    wd.Fragment = i, wd.jsx = Ql, wd.jsxs = Zl;
  }()), wd;
}
process.env.NODE_ENV === "production" ? Ng.exports = oz() : Ng.exports = sz();
var P = Ng.exports;
function gt(t) {
  const e = Co();
  if (!(e != null && e.editor))
    throw new Error(
      "useBlockNoteEditor was called outside of a BlockNoteContext provider or BlockNoteView component"
    );
  return e.editor;
}
function Bl(t, e, n, i) {
  const { refs: r, update: o, context: s, floatingStyles: a } = _f({
    open: t,
    ...i
  }), { isMounted: l, styles: c } = J3(s), f = K3(s), { getReferenceProps: d, getFloatingProps: u } = Y3([f]);
  return We(() => {
    o();
  }, [e, o]), We(() => {
    e !== null && r.setReference({
      getBoundingClientRect: () => e
    });
  }, [e, r]), bt(
    () => ({
      isMounted: l,
      ref: r.setFloating,
      style: {
        display: "flex",
        ...c,
        ...a,
        zIndex: n
      },
      getFloatingProps: u,
      getReferenceProps: d
    }),
    [
      a,
      l,
      r.setFloating,
      c,
      n,
      u,
      d
    ]
  );
}
function wa(t) {
  const [e, n] = Be();
  return We(() => t((i) => {
    n({ ...i });
  }), [t]), e;
}
const aT = cr(
  void 0
);
function ct() {
  return fr(aT);
}
function Et() {
  return Co().editor.dictionary;
}
const az = (t) => {
  const e = ct(), n = Et(), { block: i } = t, r = gt(), [o, s] = Be(""), a = Xe(
    (f) => {
      s(f.currentTarget.value);
    },
    []
  ), l = Xe(
    (f) => {
      f.key === "Enter" && (f.preventDefault(), r.updateBlock(i, {
        props: {
          name: Lw(o),
          url: o
        }
      }));
    },
    [r, i, o]
  ), c = Xe(() => {
    r.updateBlock(i, {
      props: {
        name: Lw(o),
        url: o
      }
    });
  }, [r, i, o]);
  return /* @__PURE__ */ P.jsxs(e.FilePanel.TabPanel, { className: "bn-tab-panel", children: [
    /* @__PURE__ */ P.jsx(
      e.FilePanel.TextInput,
      {
        className: "bn-text-input",
        placeholder: n.file_panel.embed.url_placeholder,
        value: o,
        onChange: a,
        onKeyDown: l,
        "data-test": "embed-input"
      }
    ),
    /* @__PURE__ */ P.jsx(
      e.FilePanel.Button,
      {
        className: "bn-button",
        onClick: c,
        "data-test": "embed-input-button",
        children: n.file_panel.embed.embed_button[i.type] || n.file_panel.embed.embed_button.file
      }
    )
  ] });
}, lz = (t) => {
  var e;
  const n = ct(), i = Et(), { block: r, setLoading: o } = t, s = gt(), [a, l] = Be(!1);
  We(() => {
    a && setTimeout(() => {
      l(!1);
    }, 3e3);
  }, [a]);
  const c = Xe(
    (u) => {
      if (u === null)
        return;
      async function h(p) {
        if (o(!0), s.uploadFile !== void 0)
          try {
            let m = await s.uploadFile(p);
            typeof m == "string" && (m = {
              props: {
                name: p.name,
                url: m
              }
            }), s.updateBlock(r, m);
          } catch {
            l(!0);
          } finally {
            o(!1);
          }
      }
      h(u);
    },
    [r, s, o]
  ), f = s.schema.blockSchema[r.type], d = f.isFileBlock && (e = f.fileBlockAccept) != null && e.length ? f.fileBlockAccept.join(",") : "*/*";
  return /* @__PURE__ */ P.jsxs(n.FilePanel.TabPanel, { className: "bn-tab-panel", children: [
    /* @__PURE__ */ P.jsx(
      n.FilePanel.FileInput,
      {
        className: "bn-file-input",
        "data-test": "upload-input",
        accept: d,
        placeholder: i.file_panel.upload.file_placeholder[r.type] || i.file_panel.upload.file_placeholder.file,
        value: null,
        onChange: c
      }
    ),
    a && /* @__PURE__ */ P.jsx("div", { className: "bn-error-text", children: i.file_panel.upload.upload_error })
  ] });
}, lT = (t) => {
  const e = ct(), n = Et(), i = gt(), [r, o] = Be(!1), s = t.tabs ?? [
    ...i.uploadFile !== void 0 ? [
      {
        name: n.file_panel.upload.title,
        tabPanel: /* @__PURE__ */ P.jsx(lz, { block: t.block, setLoading: o })
      }
    ] : [],
    {
      name: n.file_panel.embed.title,
      tabPanel: /* @__PURE__ */ P.jsx(az, { block: t.block })
    }
  ], [a, l] = Be(
    t.defaultOpenTab || s[0].name
  );
  return /* @__PURE__ */ P.jsx(
    e.FilePanel.Root,
    {
      className: "bn-panel",
      defaultOpenTab: a,
      openTab: a,
      setOpenTab: l,
      tabs: s,
      loading: r
    }
  );
}, cz = (t) => {
  const e = gt();
  if (!e.filePanel)
    throw new Error(
      "FileToolbarController can only be used when BlockNote editor schema contains file block"
    );
  const n = wa(
    e.filePanel.onUpdate.bind(e.filePanel)
  ), { isMounted: i, ref: r, style: o, getFloatingProps: s } = Bl(
    (n == null ? void 0 : n.show) || !1,
    (n == null ? void 0 : n.referencePos) || null,
    5e3,
    {
      placement: "bottom",
      middleware: [_s(10), gs()],
      onOpenChange: (d) => {
        d || (e.filePanel.closeMenu(), e.focus());
      }
    }
  );
  if (!i || !n)
    return null;
  const { show: a, referencePos: l, ...c } = n, f = t.filePanel || lT;
  return /* @__PURE__ */ P.jsx("div", { ref: r, style: o, ...s(), children: /* @__PURE__ */ P.jsx(f, { ...c }) });
};
function cT(t, e) {
  const n = Co();
  e || (e = n == null ? void 0 : n.editor), We(() => {
    if (!e)
      throw new Error(
        "'editor' is required, either from BlockNoteContext or as a function argument"
      );
    return e.onChange(t);
  }, [t, e]);
}
function fT(t, e) {
  const n = Co();
  e || (e = n == null ? void 0 : n.editor), We(() => {
    if (!e)
      throw new Error(
        "'editor' is required, either from BlockNoteContext or as a function argument"
      );
    return e.onSelectionChange(t);
  }, [t, e]);
}
function Ss(t, e) {
  cT(t, e), fT(t, e);
}
function fz(t) {
  return (e) => {
    t.forEach((n) => {
      typeof n == "function" ? n(e) : n != null && (n.current = e);
    });
  };
}
var dT = {
  color: void 0,
  size: void 0,
  className: void 0,
  style: void 0,
  attr: void 0
}, Xw = Ke.createContext && /* @__PURE__ */ Ke.createContext(dT), dz = ["attr", "size", "title"];
function uz(t, e) {
  if (t == null) return {};
  var n = hz(t, e), i, r;
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    for (r = 0; r < o.length; r++)
      i = o[r], !(e.indexOf(i) >= 0) && Object.prototype.propertyIsEnumerable.call(t, i) && (n[i] = t[i]);
  }
  return n;
}
function hz(t, e) {
  if (t == null) return {};
  var n = {};
  for (var i in t)
    if (Object.prototype.hasOwnProperty.call(t, i)) {
      if (e.indexOf(i) >= 0) continue;
      n[i] = t[i];
    }
  return n;
}
function I1() {
  return I1 = Object.assign ? Object.assign.bind() : function(t) {
    for (var e = 1; e < arguments.length; e++) {
      var n = arguments[e];
      for (var i in n)
        Object.prototype.hasOwnProperty.call(n, i) && (t[i] = n[i]);
    }
    return t;
  }, I1.apply(this, arguments);
}
function Qw(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var i = Object.getOwnPropertySymbols(t);
    e && (i = i.filter(function(r) {
      return Object.getOwnPropertyDescriptor(t, r).enumerable;
    })), n.push.apply(n, i);
  }
  return n;
}
function L1(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2 ? Qw(Object(n), !0).forEach(function(i) {
      pz(t, i, n[i]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : Qw(Object(n)).forEach(function(i) {
      Object.defineProperty(t, i, Object.getOwnPropertyDescriptor(n, i));
    });
  }
  return t;
}
function pz(t, e, n) {
  return e = mz(e), e in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function mz(t) {
  var e = gz(t, "string");
  return typeof e == "symbol" ? e : e + "";
}
function gz(t, e) {
  if (typeof t != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var i = n.call(t, e || "default");
    if (typeof i != "object") return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
function uT(t) {
  return t && t.map((e, n) => /* @__PURE__ */ Ke.createElement(e.tag, L1({
    key: n
  }, e.attr), uT(e.child)));
}
function yt(t) {
  return (e) => /* @__PURE__ */ Ke.createElement(yz, I1({
    attr: L1({}, t.attr)
  }, e), uT(t.child));
}
function yz(t) {
  var e = (n) => {
    var {
      attr: i,
      size: r,
      title: o
    } = t, s = uz(t, dz), a = r || n.size || "1em", l;
    return n.className && (l = n.className), t.className && (l = (l ? l + " " : "") + t.className), /* @__PURE__ */ Ke.createElement("svg", I1({
      stroke: "currentColor",
      fill: "currentColor",
      strokeWidth: "0"
    }, n.attr, i, s, {
      className: l,
      style: L1(L1({
        color: t.color || n.color
      }, n.style), t.style),
      height: a,
      width: a,
      xmlns: "http://www.w3.org/2000/svg"
    }), o && /* @__PURE__ */ Ke.createElement("title", null, o), t.children);
  };
  return Xw !== void 0 ? /* @__PURE__ */ Ke.createElement(Xw.Consumer, null, (n) => e(n)) : e(dT);
}
function vz(t) {
  return yt({ tag: "svg", attr: { viewBox: "0 0 24 24", fill: "currentColor" }, child: [{ tag: "path", attr: { d: "M23 12L15.9289 19.0711L14.5147 17.6569L20.1716 12L14.5147 6.34317L15.9289 4.92896L23 12ZM3.82843 12L9.48528 17.6569L8.07107 19.0711L1 12L8.07107 4.92896L9.48528 6.34317L3.82843 12Z" }, child: [] }] })(t);
}
function Rv(t) {
  return yt({ tag: "svg", attr: { viewBox: "0 0 24 24", fill: "currentColor" }, child: [{ tag: "path", attr: { d: "M3 8L9.00319 2H19.9978C20.5513 2 21 2.45531 21 2.9918V21.0082C21 21.556 20.5551 22 20.0066 22H3.9934C3.44476 22 3 21.5501 3 20.9932V8ZM10 4V9H5V20H19V4H10Z" }, child: [] }] })(t);
}
function bz(t) {
  return yt({ tag: "svg", attr: { viewBox: "0 0 24 24", fill: "currentColor" }, child: [{ tag: "path", attr: { d: "M3 4H21V6H3V4ZM5 19H19V21H5V19ZM3 14H21V16H3V14ZM5 9H19V11H5V9Z" }, child: [] }] })(t);
}
function kz(t) {
  return yt({ tag: "svg", attr: { viewBox: "0 0 24 24", fill: "currentColor" }, child: [{ tag: "path", attr: { d: "M3 4H21V6H3V4ZM3 19H21V21H3V19ZM3 14H21V16H3V14ZM3 9H21V11H3V9Z" }, child: [] }] })(t);
}
function wz(t) {
  return yt({ tag: "svg", attr: { viewBox: "0 0 24 24", fill: "currentColor" }, child: [{ tag: "path", attr: { d: "M3 4H21V6H3V4ZM3 19H17V21H3V19ZM3 14H21V16H3V14ZM3 9H17V11H3V9Z" }, child: [] }] })(t);
}
function _z(t) {
  return yt({ tag: "svg", attr: { viewBox: "0 0 24 24", fill: "currentColor" }, child: [{ tag: "path", attr: { d: "M3 4H21V6H3V4ZM7 19H21V21H7V19ZM3 14H21V16H3V14ZM7 9H21V11H7V9Z" }, child: [] }] })(t);
}
function Ez(t) {
  return yt({ tag: "svg", attr: { viewBox: "0 0 24 24", fill: "currentColor" }, child: [{ tag: "path", attr: { d: "M8 11H12.5C13.8807 11 15 9.88071 15 8.5C15 7.11929 13.8807 6 12.5 6H8V11ZM18 15.5C18 17.9853 15.9853 20 13.5 20H6V4H12.5C14.9853 4 17 6.01472 17 8.5C17 9.70431 16.5269 10.7981 15.7564 11.6058C17.0979 12.3847 18 13.837 18 15.5ZM8 13V18H13.5C14.8807 18 16 16.8807 16 15.5C16 14.1193 14.8807 13 13.5 13H8Z" }, child: [] }] })(t);
}
function Zw(t) {
  return yt({ tag: "svg", attr: { viewBox: "0 0 24 24", fill: "currentColor" }, child: [{ tag: "path", attr: { d: "M5.55397 22H3.3999L10.9999 3H12.9999L20.5999 22H18.4458L16.0458 16H7.95397L5.55397 22ZM8.75397 14H15.2458L11.9999 5.88517L8.75397 14Z" }, child: [] }] })(t);
}
function hT(t) {
  return yt({ tag: "svg", attr: { viewBox: "0 0 24 24", fill: "currentColor" }, child: [{ tag: "path", attr: { d: "M13 20H11V13H4V20H2V4H4V11H11V4H13V20ZM21.0005 8V20H19.0005L19 10.204L17 10.74V8.67L19.5005 8H21.0005Z" }, child: [] }] })(t);
}
function pT(t) {
  return yt({ tag: "svg", attr: { viewBox: "0 0 24 24", fill: "currentColor" }, child: [{ tag: "path", attr: { d: "M4 4V11H11V4H13V20H11V13H4V20H2V4H4ZM18.5 8C20.5711 8 22.25 9.67893 22.25 11.75C22.25 12.6074 21.9623 13.3976 21.4781 14.0292L21.3302 14.2102L18.0343 18H22V20H15L14.9993 18.444L19.8207 12.8981C20.0881 12.5908 20.25 12.1893 20.25 11.75C20.25 10.7835 19.4665 10 18.5 10C17.5818 10 16.8288 10.7071 16.7558 11.6065L16.75 11.75H14.75C14.75 9.67893 16.4289 8 18.5 8Z" }, child: [] }] })(t);
}
function mT(t) {
  return yt({ tag: "svg", attr: { viewBox: "0 0 24 24", fill: "currentColor" }, child: [{ tag: "path", attr: { d: "M22 8L21.9984 10L19.4934 12.883C21.0823 13.3184 22.25 14.7728 22.25 16.5C22.25 18.5711 20.5711 20.25 18.5 20.25C16.674 20.25 15.1528 18.9449 14.8184 17.2166L16.7821 16.8352C16.9384 17.6413 17.6481 18.25 18.5 18.25C19.4665 18.25 20.25 17.4665 20.25 16.5C20.25 15.5335 19.4665 14.75 18.5 14.75C18.214 14.75 17.944 14.8186 17.7056 14.9403L16.3992 13.3932L19.3484 10H15V8H22ZM4 4V11H11V4H13V20H11V13H4V20H2V4H4Z" }, child: [] }] })(t);
}
function Tz(t) {
  return yt({ tag: "svg", attr: { viewBox: "0 0 24 24", fill: "currentColor" }, child: [{ tag: "path", attr: { d: "M3 4H21V6H3V4ZM3 19H21V21H3V19ZM11 14H21V16H11V14ZM11 9H21V11H11V9ZM3 12.5L7 9V16L3 12.5Z" }, child: [] }] })(t);
}
function Cz(t) {
  return yt({ tag: "svg", attr: { viewBox: "0 0 24 24", fill: "currentColor" }, child: [{ tag: "path", attr: { d: "M3 4H21V6H3V4ZM3 19H21V21H3V19ZM11 14H21V16H11V14ZM11 9H21V11H11V9ZM7 12.5L3 16V9L7 12.5Z" }, child: [] }] })(t);
}
function e9(t) {
  return yt({ tag: "svg", attr: { viewBox: "0 0 24 24", fill: "currentColor" }, child: [{ tag: "path", attr: { d: "M8 5H11V19H8V21H16V19H13V5H16V3H8V5ZM2 7C1.44772 7 1 7.44772 1 8V16C1 16.5523 1.44772 17 2 17H8V15H3V9H8V7H2ZM16 9H21V15H16V17H22C22.5523 17 23 16.5523 23 16V8C23 7.44772 22.5523 7 22 7H16V9Z" }, child: [] }] })(t);
}
function Sz(t) {
  return yt({ tag: "svg", attr: { viewBox: "0 0 24 24", fill: "currentColor" }, child: [{ tag: "path", attr: { d: "M15 20H7V18H9.92661L12.0425 6H9V4H17V6H14.0734L11.9575 18H15V20Z" }, child: [] }] })(t);
}
function xz(t) {
  return yt({ tag: "svg", attr: { viewBox: "0 0 24 24", fill: "currentColor" }, child: [{ tag: "path", attr: { d: "M17 17H22V19H19V22H17V17ZM7 7H2V5H5V2H7V7ZM18.364 15.5355L16.9497 14.1213L18.364 12.7071C20.3166 10.7545 20.3166 7.58866 18.364 5.63604C16.4113 3.68342 13.2455 3.68342 11.2929 5.63604L9.87868 7.05025L8.46447 5.63604L9.87868 4.22183C12.6123 1.48816 17.0445 1.48816 19.7782 4.22183C22.5118 6.9555 22.5118 11.3877 19.7782 14.1213L18.364 15.5355ZM15.5355 18.364L14.1213 19.7782C11.3877 22.5118 6.9555 22.5118 4.22183 19.7782C1.48816 17.0445 1.48816 12.6123 4.22183 9.87868L5.63604 8.46447L7.05025 9.87868L5.63604 11.2929C3.68342 13.2455 3.68342 16.4113 5.63604 18.364C7.58866 20.3166 10.7545 20.3166 12.7071 18.364L14.1213 16.9497L15.5355 18.364ZM14.8284 7.75736L16.2426 9.17157L9.17157 16.2426L7.75736 14.8284L14.8284 7.75736Z" }, child: [] }] })(t);
}
function gT(t) {
  return yt({ tag: "svg", attr: { viewBox: "0 0 24 24", fill: "currentColor" }, child: [{ tag: "path", attr: { d: "M18.3638 15.5355L16.9496 14.1213L18.3638 12.7071C20.3164 10.7545 20.3164 7.58866 18.3638 5.63604C16.4112 3.68341 13.2453 3.68341 11.2927 5.63604L9.87849 7.05025L8.46428 5.63604L9.87849 4.22182C12.6122 1.48815 17.0443 1.48815 19.778 4.22182C22.5117 6.95549 22.5117 11.3876 19.778 14.1213L18.3638 15.5355ZM15.5353 18.364L14.1211 19.7782C11.3875 22.5118 6.95531 22.5118 4.22164 19.7782C1.48797 17.0445 1.48797 12.6123 4.22164 9.87868L5.63585 8.46446L7.05007 9.87868L5.63585 11.2929C3.68323 13.2455 3.68323 16.4113 5.63585 18.364C7.58847 20.3166 10.7543 20.3166 12.7069 18.364L14.1211 16.9497L15.5353 18.364ZM14.8282 7.75736L16.2425 9.17157L9.17139 16.2426L7.75717 14.8284L14.8282 7.75736Z" }, child: [] }] })(t);
}
function yT(t) {
  return yt({ tag: "svg", attr: { viewBox: "0 0 24 24", fill: "currentColor" }, child: [{ tag: "path", attr: { d: "M8.00008 6V9H5.00008V6H8.00008ZM3.00008 4V11H10.0001V4H3.00008ZM13.0001 4H21.0001V6H13.0001V4ZM13.0001 11H21.0001V13H13.0001V11ZM13.0001 18H21.0001V20H13.0001V18ZM10.7072 16.2071L9.29297 14.7929L6.00008 18.0858L4.20718 16.2929L2.79297 17.7071L6.00008 20.9142L10.7072 16.2071Z" }, child: [] }] })(t);
}
function vT(t) {
  return yt({ tag: "svg", attr: { viewBox: "0 0 24 24", fill: "currentColor" }, child: [{ tag: "path", attr: { d: "M8 4H21V6H8V4ZM5 3V6H6V7H3V6H4V4H3V3H5ZM3 14V11.5H5V11H3V10H6V12.5H4V13H6V14H3ZM5 19.5H3V18.5H5V18H3V17H6V21H3V20H5V19.5ZM8 11H21V13H8V11ZM8 18H21V20H8V18Z" }, child: [] }] })(t);
}
function bT(t) {
  return yt({ tag: "svg", attr: { viewBox: "0 0 24 24", fill: "currentColor" }, child: [{ tag: "path", attr: { d: "M8 4H21V6H8V4ZM4.5 6.5C3.67157 6.5 3 5.82843 3 5C3 4.17157 3.67157 3.5 4.5 3.5C5.32843 3.5 6 4.17157 6 5C6 5.82843 5.32843 6.5 4.5 6.5ZM4.5 13.5C3.67157 13.5 3 12.8284 3 12C3 11.1716 3.67157 10.5 4.5 10.5C5.32843 10.5 6 11.1716 6 12C6 12.8284 5.32843 13.5 4.5 13.5ZM4.5 20.4C3.67157 20.4 3 19.7284 3 18.9C3 18.0716 3.67157 17.4 4.5 17.4C5.32843 17.4 6 18.0716 6 18.9C6 19.7284 5.32843 20.4 4.5 20.4ZM8 11H21V13H8V11ZM8 18H21V20H8V18Z" }, child: [] }] })(t);
}
function Az(t) {
  return yt({ tag: "svg", attr: { viewBox: "0 0 24 24", fill: "currentColor" }, child: [{ tag: "path", attr: { d: "M17.1538 14C17.3846 14.5161 17.5 15.0893 17.5 15.7196C17.5 17.0625 16.9762 18.1116 15.9286 18.867C14.8809 19.6223 13.4335 20 11.5862 20C9.94674 20 8.32335 19.6185 6.71592 18.8555V16.6009C8.23538 17.4783 9.7908 17.917 11.3822 17.917C13.9333 17.917 15.2128 17.1846 15.2208 15.7196C15.2208 15.0939 15.0049 14.5598 14.5731 14.1173C14.5339 14.0772 14.4939 14.0381 14.4531 14H3V12H21V14H17.1538ZM13.076 11H7.62908C7.4566 10.8433 7.29616 10.6692 7.14776 10.4778C6.71592 9.92084 6.5 9.24559 6.5 8.45207C6.5 7.21602 6.96583 6.165 7.89749 5.299C8.82916 4.43299 10.2706 4 12.2219 4C13.6934 4 15.1009 4.32808 16.4444 4.98426V7.13591C15.2448 6.44921 13.9293 6.10587 12.4978 6.10587C10.0187 6.10587 8.77917 6.88793 8.77917 8.45207C8.77917 8.87172 8.99709 9.23796 9.43293 9.55079C9.86878 9.86362 10.4066 10.1135 11.0463 10.3004C11.6665 10.4816 12.3431 10.7148 13.076 11H13.076Z" }, child: [] }] })(t);
}
function Mz(t) {
  return yt({ tag: "svg", attr: { viewBox: "0 0 24 24", fill: "currentColor" }, child: [{ tag: "path", attr: { d: "M13 10V14H19V10H13ZM11 10H5V14H11V10ZM13 19H19V16H13V19ZM11 19V16H5V19H11ZM13 5V8H19V5H13ZM11 5H5V8H11V5ZM4 3H20C20.5523 3 21 3.44772 21 4V20C21 20.5523 20.5523 21 20 21H4C3.44772 21 3 20.5523 3 20V4C3 3.44772 3.44772 3 4 3Z" }, child: [] }] })(t);
}
function Iv(t) {
  return yt({ tag: "svg", attr: { viewBox: "0 0 24 24", fill: "currentColor" }, child: [{ tag: "path", attr: { d: "M13 6V21H11V6H5V4H19V6H13Z" }, child: [] }] })(t);
}
function Nz(t) {
  return yt({ tag: "svg", attr: { viewBox: "0 0 24 24", fill: "currentColor" }, child: [{ tag: "path", attr: { d: "M8 3V12C8 14.2091 9.79086 16 12 16C14.2091 16 16 14.2091 16 12V3H18V12C18 15.3137 15.3137 18 12 18C8.68629 18 6 15.3137 6 12V3H8ZM4 20H20V22H4V20Z" }, child: [] }] })(t);
}
function Oz(t) {
  return yt({ tag: "svg", attr: { viewBox: "0 0 24 24", fill: "currentColor" }, child: [{ tag: "path", attr: { d: "M2 3.9934C2 3.44476 2.45531 3 2.9918 3H21.0082C21.556 3 22 3.44495 22 3.9934V20.0066C22 20.5552 21.5447 21 21.0082 21H2.9918C2.44405 21 2 20.5551 2 20.0066V3.9934ZM8 5V19H16V5H8ZM4 5V7H6V5H4ZM18 5V7H20V5H18ZM4 9V11H6V9H4ZM18 9V11H20V9H18ZM4 13V15H6V13H4ZM18 13V15H20V13H18ZM4 17V19H6V17H4ZM18 17V19H20V17H18Z" }, child: [] }] })(t);
}
function kT(t) {
  return yt({ tag: "svg", attr: { viewBox: "0 0 24 24", fill: "currentColor" }, child: [{ tag: "path", attr: { d: "M5 11.1005L7 9.1005L12.5 14.6005L16 11.1005L19 14.1005V5H5V11.1005ZM4 3H20C20.5523 3 21 3.44772 21 4V20C21 20.5523 20.5523 21 20 21H4C3.44772 21 3 20.5523 3 20V4C3 3.44772 3.44772 3 4 3ZM15.5 10C14.6716 10 14 9.32843 14 8.5C14 7.67157 14.6716 7 15.5 7C16.3284 7 17 7.67157 17 8.5C17 9.32843 16.3284 10 15.5 10Z" }, child: [] }] })(t);
}
function Rz(t) {
  return yt({ tag: "svg", attr: { viewBox: "0 0 24 24", fill: "currentColor" }, child: [{ tag: "path", attr: { d: "M21 15V18H24V20H21V23H19V20H16V18H19V15H21ZM21.0082 3C21.556 3 22 3.44495 22 3.9934L22.0007 13.3417C21.3749 13.1204 20.7015 13 20 13V5H4L4.001 19L13.2929 9.70715C13.6528 9.34604 14.22 9.31823 14.6123 9.62322L14.7065 9.70772L18.2521 13.2586C15.791 14.0069 14 16.2943 14 19C14 19.7015 14.1204 20.3749 14.3417 21.0007L2.9918 21C2.44405 21 2 20.5551 2 20.0066V3.9934C2 3.44476 2.45531 3 2.9918 3H21.0082ZM8 7C9.10457 7 10 7.89543 10 9C10 10.1046 9.10457 11 8 11C6.89543 11 6 10.1046 6 9C6 7.89543 6.89543 7 8 7Z" }, child: [] }] })(t);
}
function Iz(t) {
  return yt({ tag: "svg", attr: { viewBox: "0 0 24 24", fill: "currentColor" }, child: [{ tag: "path", attr: { d: "M20 3C20.5523 3 21 3.44772 21 4V5.757L19 7.757V5H5V13.1L9 9.1005L13.328 13.429L12.0012 14.7562L11.995 18.995L16.2414 19.0012L17.571 17.671L18.8995 19H19V16.242L21 14.242V20C21 20.5523 20.5523 21 20 21H4C3.44772 21 3 20.5523 3 20V4C3 3.44772 3.44772 3 4 3H20ZM21.7782 7.80761L23.1924 9.22183L15.4142 17L13.9979 16.9979L14 15.5858L21.7782 7.80761ZM15.5 7C16.3284 7 17 7.67157 17 8.5C17 9.32843 16.3284 10 15.5 10C14.6716 10 14 9.32843 14 8.5C14 7.67157 14.6716 7 15.5 7Z" }, child: [] }] })(t);
}
function Lz(t) {
  return yt({ tag: "svg", attr: { viewBox: "0 0 24 24", fill: "currentColor" }, child: [{ tag: "path", attr: { d: "M3 3.9934C3 3.44476 3.44495 3 3.9934 3H20.0066C20.5552 3 21 3.44495 21 3.9934V20.0066C21 20.5552 20.5551 21 20.0066 21H3.9934C3.44476 21 3 20.5551 3 20.0066V3.9934ZM10.6219 8.41459C10.5562 8.37078 10.479 8.34741 10.4 8.34741C10.1791 8.34741 10 8.52649 10 8.74741V15.2526C10 15.3316 10.0234 15.4088 10.0672 15.4745C10.1897 15.6583 10.4381 15.708 10.6219 15.5854L15.5008 12.3328C15.5447 12.3035 15.5824 12.2658 15.6117 12.2219C15.7343 12.0381 15.6846 11.7897 15.5008 11.6672L10.6219 8.41459Z" }, child: [] }] })(t);
}
function wT(t) {
  return yt({ tag: "svg", attr: { viewBox: "0 0 24 24", fill: "currentColor" }, child: [{ tag: "path", attr: { d: "M2 16.0001H5.88889L11.1834 20.3319C11.2727 20.405 11.3846 20.4449 11.5 20.4449C11.7761 20.4449 12 20.2211 12 19.9449V4.05519C12 3.93977 11.9601 3.8279 11.887 3.73857C11.7121 3.52485 11.3971 3.49335 11.1834 3.66821L5.88889 8.00007H2C1.44772 8.00007 1 8.44778 1 9.00007V15.0001C1 15.5524 1.44772 16.0001 2 16.0001ZM23 12C23 15.292 21.5539 18.2463 19.2622 20.2622L17.8445 18.8444C19.7758 17.1937 21 14.7398 21 12C21 9.26016 19.7758 6.80629 17.8445 5.15557L19.2622 3.73779C21.5539 5.75368 23 8.70795 23 12ZM18 12C18 10.0883 17.106 8.38548 15.7133 7.28673L14.2842 8.71584C15.3213 9.43855 16 10.64 16 12C16 13.36 15.3213 14.5614 14.2842 15.2841L15.7133 16.7132C17.106 15.6145 18 13.9116 18 12Z" }, child: [] }] })(t);
}
function Dz(t) {
  return yt({ tag: "svg", attr: { viewBox: "0 0 24 24", fill: "currentColor" }, child: [{ tag: "path", attr: { d: "M17 6H22V8H20V21C20 21.5523 19.5523 22 19 22H5C4.44772 22 4 21.5523 4 21V8H2V6H7V3C7 2.44772 7.44772 2 8 2H16C16.5523 2 17 2.44772 17 3V6ZM18 8H6V20H18V8ZM9 4V6H15V4H9Z" }, child: [] }] })(t);
}
function Pz(t) {
  return yt({ tag: "svg", attr: { viewBox: "0 0 24 24", fill: "currentColor" }, child: [{ tag: "path", attr: { d: "M4 19H20V12H22V20C22 20.5523 21.5523 21 21 21H3C2.44772 21 2 20.5523 2 20V12H4V19ZM14 9H19L12 16L5 9H10V3H14V9Z" }, child: [] }] })(t);
}
function Fz(t) {
  return yt({ tag: "svg", attr: { viewBox: "0 0 24 24", fill: "currentColor" }, child: [{ tag: "path", attr: { d: "M10 6V8H5V19H16V14H18V20C18 20.5523 17.5523 21 17 21H4C3.44772 21 3 20.5523 3 20V7C3 6.44772 3.44772 6 4 6H10ZM21 3V12L17.206 8.207L11.2071 14.2071L9.79289 12.7929L15.792 6.793L12 3H21Z" }, child: [] }] })(t);
}
function Bz(t) {
  return yt({ tag: "svg", attr: { viewBox: "0 0 24 24", fill: "currentColor" }, child: [{ tag: "path", attr: { d: "M12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22ZM8 13C8 15.2091 9.79086 17 12 17C14.2091 17 16 15.2091 16 13H8ZM8 11C8.82843 11 9.5 10.3284 9.5 9.5C9.5 8.67157 8.82843 8 8 8C7.17157 8 6.5 8.67157 6.5 9.5C6.5 10.3284 7.17157 11 8 11ZM16 11C16.8284 11 17.5 10.3284 17.5 9.5C17.5 8.67157 16.8284 8 16 8C15.1716 8 14.5 8.67157 14.5 9.5C14.5 10.3284 15.1716 11 16 11Z" }, child: [] }] })(t);
}
function vi(t) {
  const e = Co();
  if (t || (t = e == null ? void 0 : e.editor), !t)
    throw new Error(
      "'editor' is required, either from BlockNoteContext or as a function argument"
    );
  const n = t, [i, r] = Be(() => {
    var o;
    return ((o = n.getSelection()) == null ? void 0 : o.blocks) || [n.getTextCursorPosition().block];
  });
  return Ss(
    () => {
      var o;
      return r(
        ((o = n.getSelection()) == null ? void 0 : o.blocks) || [n.getTextCursorPosition().block]
      );
    },
    n
  ), i;
}
const Hz = {
  bold: Ez,
  italic: Sz,
  underline: Nz,
  strike: Az,
  code: vz
};
function $z(t, e) {
  return t in e.schema.styleSchema && e.schema.styleSchema[t].type === t && e.schema.styleSchema[t].propSchema === "boolean";
}
const _d = (t) => {
  const e = Et(), n = ct(), i = gt(), r = $z(
    t.basicTextStyle,
    i
  ), o = vi(i), [s, a] = Be(
    t.basicTextStyle in i.getActiveStyles()
  );
  Ss(() => {
    r && a(t.basicTextStyle in i.getActiveStyles());
  }, i);
  const l = (f) => {
    if (i.focus(), !!r) {
      if (i.schema.styleSchema[f].propSchema !== "boolean")
        throw new Error("can only toggle boolean styles");
      i.toggleStyles({ [f]: !0 });
    }
  };
  if (!bt(() => r ? !!o.find((f) => f.content !== void 0) : !1, [r, o]) || !i.isEditable)
    return null;
  const c = Hz[t.basicTextStyle];
  return /* @__PURE__ */ P.jsx(
    n.FormattingToolbar.Button,
    {
      className: "bn-button",
      "data-test": t.basicTextStyle,
      onClick: () => l(t.basicTextStyle),
      isSelected: s,
      label: e.formatting_toolbar[t.basicTextStyle].tooltip,
      mainTooltip: e.formatting_toolbar[t.basicTextStyle].tooltip,
      secondaryTooltip: Ji(
        e.formatting_toolbar[t.basicTextStyle].secondary_tooltip,
        e.generic.ctrl_shortcut
      ),
      icon: /* @__PURE__ */ P.jsx(c, {})
    }
  );
}, Og = (t) => {
  const e = t.textColor || "default", n = t.backgroundColor || "default", i = t.size || 16, r = bt(
    () => ({
      pointerEvents: "none",
      fontSize: (i * 0.75).toString() + "px",
      height: i.toString() + "px",
      lineHeight: i.toString() + "px",
      textAlign: "center",
      width: i.toString() + "px"
    }),
    [i]
  );
  return /* @__PURE__ */ P.jsx(
    "div",
    {
      className: "bn-color-icon",
      "data-background-color": n,
      "data-text-color": e,
      style: r,
      children: "A"
    }
  );
}, t9 = [
  "default",
  "gray",
  "brown",
  "red",
  "orange",
  "yellow",
  "green",
  "blue",
  "purple",
  "pink"
], _T = (t) => {
  const e = ct(), n = Et(), i = () => t.text ? /* @__PURE__ */ P.jsxs(P.Fragment, { children: [
    /* @__PURE__ */ P.jsx(e.Generic.Menu.Label, { children: n.color_picker.text_title }),
    t9.map((o) => /* @__PURE__ */ P.jsx(
      e.Generic.Menu.Item,
      {
        onClick: () => {
          t.onClick && t.onClick(), t.text.setColor(o);
        },
        "data-test": "text-color-" + o,
        icon: /* @__PURE__ */ P.jsx(Og, { textColor: o, size: t.iconSize }),
        checked: t.text.color === o,
        children: n.color_picker.colors[o]
      },
      "text-color-" + o
    ))
  ] }) : null, r = () => t.background ? /* @__PURE__ */ P.jsxs(P.Fragment, { children: [
    /* @__PURE__ */ P.jsx(e.Generic.Menu.Label, { children: n.color_picker.background_title }),
    t9.map((o) => /* @__PURE__ */ P.jsx(
      e.Generic.Menu.Item,
      {
        onClick: () => {
          t.onClick && t.onClick(), t.background.setColor(o);
        },
        "data-test": "background-color-" + o,
        icon: /* @__PURE__ */ P.jsx(Og, { backgroundColor: o, size: t.iconSize }),
        checked: t.background.color === o,
        children: n.color_picker.colors[o]
      },
      "background-color-" + o
    ))
  ] }) : null;
  return /* @__PURE__ */ P.jsxs(P.Fragment, { children: [
    /* @__PURE__ */ P.jsx(i, {}),
    /* @__PURE__ */ P.jsx(r, {})
  ] });
};
function n9(t, e) {
  return `${t}Color` in e.schema.styleSchema && e.schema.styleSchema[`${t}Color`].type === `${t}Color` && e.schema.styleSchema[`${t}Color`].propSchema === "string";
}
const jz = () => {
  const t = ct(), e = Et(), n = gt(), i = n9("text", n), r = n9("background", n), o = vi(n), [s, a] = Be(
    i && n.getActiveStyles().textColor || "default"
  ), [l, c] = Be(
    r && n.getActiveStyles().backgroundColor || "default"
  );
  Ss(() => {
    i && a(n.getActiveStyles().textColor || "default"), r && c(
      n.getActiveStyles().backgroundColor || "default"
    );
  }, n);
  const f = Xe(
    (u) => {
      if (!i)
        throw Error(
          "Tried to set text color, but style does not exist in editor schema."
        );
      u === "default" ? n.removeStyles({ textColor: u }) : n.addStyles({ textColor: u }), setTimeout(() => {
        n.focus();
      });
    },
    [n, i]
  ), d = Xe(
    (u) => {
      if (!r)
        throw Error(
          "Tried to set background color, but style does not exist in editor schema."
        );
      u === "default" ? n.removeStyles({ backgroundColor: u }) : n.addStyles({ backgroundColor: u }), setTimeout(() => {
        n.focus();
      });
    },
    [r, n]
  );
  return !bt(() => {
    if (!i && !r)
      return !1;
    for (const u of o)
      if (u.content !== void 0)
        return !0;
    return !1;
  }, [r, o, i]) || !n.isEditable ? null : /* @__PURE__ */ P.jsxs(t.Generic.Menu.Root, { children: [
    /* @__PURE__ */ P.jsx(t.Generic.Menu.Trigger, { children: /* @__PURE__ */ P.jsx(
      t.FormattingToolbar.Button,
      {
        className: "bn-button",
        "data-test": "colors",
        label: e.formatting_toolbar.colors.tooltip,
        mainTooltip: e.formatting_toolbar.colors.tooltip,
        icon: /* @__PURE__ */ P.jsx(
          Og,
          {
            textColor: s,
            backgroundColor: l,
            size: 20
          }
        )
      }
    ) }),
    /* @__PURE__ */ P.jsx(
      t.Generic.Menu.Dropdown,
      {
        className: "bn-menu-dropdown bn-color-picker-dropdown",
        children: /* @__PURE__ */ P.jsx(
          _T,
          {
            text: i ? {
              color: s,
              setColor: f
            } : void 0,
            background: r ? {
              color: l,
              setColor: d
            } : void 0
          }
        )
      }
    )
  ] });
}, ET = (t) => {
  const e = ct(), n = Et(), { url: i, text: r, editLink: o } = t, [s, a] = Be(i), [l, c] = Be(r);
  We(() => {
    a(i), c(r);
  }, [r, i]);
  const f = Xe(
    (p) => {
      p.key === "Enter" && (p.preventDefault(), o(s, l));
    },
    [o, s, l]
  ), d = Xe(
    (p) => a(p.currentTarget.value),
    []
  ), u = Xe(
    (p) => c(p.currentTarget.value),
    []
  ), h = Xe(
    () => o(s, l),
    [o, s, l]
  );
  return /* @__PURE__ */ P.jsxs(e.Generic.Form.Root, { children: [
    /* @__PURE__ */ P.jsx(
      e.Generic.Form.TextInput,
      {
        className: "bn-text-input",
        name: "url",
        icon: /* @__PURE__ */ P.jsx(gT, {}),
        autoFocus: !0,
        placeholder: n.link_toolbar.form.url_placeholder,
        value: s,
        onKeyDown: f,
        onChange: d,
        onSubmit: h
      }
    ),
    /* @__PURE__ */ P.jsx(
      e.Generic.Form.TextInput,
      {
        className: "bn-text-input",
        name: "title",
        icon: /* @__PURE__ */ P.jsx(Iv, {}),
        placeholder: n.link_toolbar.form.title_placeholder,
        value: l,
        onKeyDown: f,
        onChange: u,
        onSubmit: h
      }
    )
  ] });
};
function zz(t) {
  return "link" in t.schema.inlineContentSchema && t.schema.inlineContentSchema.link === "link";
}
const Uz = () => {
  const t = gt(), e = ct(), n = Et(), i = zz(t), r = vi(t), [o, s] = Be(t.getSelectedLinkUrl() || ""), [a, l] = Be(t.getSelectedText());
  Ss(() => {
    l(t.getSelectedText() || ""), s(t.getSelectedLinkUrl() || "");
  }, t);
  const c = Xe(
    (f, d) => {
      t.createLink(f, d), t.focus();
    },
    [t]
  );
  return !bt(() => {
    if (!i)
      return !1;
    for (const f of r)
      if (f.content === void 0)
        return !1;
    return !0;
  }, [i, r]) || !("link" in t.schema.inlineContentSchema) || !t.isEditable ? null : /* @__PURE__ */ P.jsxs(e.Generic.Popover.Root, { children: [
    /* @__PURE__ */ P.jsx(e.Generic.Popover.Trigger, { children: /* @__PURE__ */ P.jsx(
      e.FormattingToolbar.Button,
      {
        className: "bn-button",
        "data-test": "createLink",
        label: n.formatting_toolbar.link.tooltip,
        mainTooltip: n.formatting_toolbar.link.tooltip,
        secondaryTooltip: Ji(
          n.formatting_toolbar.link.secondary_tooltip,
          n.generic.ctrl_shortcut
        ),
        icon: /* @__PURE__ */ P.jsx(gT, {})
      }
    ) }),
    /* @__PURE__ */ P.jsx(
      e.Generic.Popover.Content,
      {
        className: "bn-popover-content bn-form-popover",
        variant: "form-popover",
        children: /* @__PURE__ */ P.jsx(ET, { url: o, text: a, editLink: c })
      }
    )
  ] });
}, Vz = () => {
  const t = Et(), e = ct(), n = gt(), [i, r] = Be(), o = vi(n), s = bt(() => {
    if (o.length !== 1)
      return;
    const c = o[0];
    if (If(c, n))
      return r(c.props.caption), c;
  }, [n, o]), a = Xe(
    (c) => {
      s && c.key === "Enter" && (c.preventDefault(), n.updateBlock(s, {
        props: {
          caption: i
          // TODO
        }
      }));
    },
    [i, n, s]
  ), l = Xe(
    (c) => r(c.currentTarget.value),
    []
  );
  return !s || Lf(s, n) || !n.isEditable ? null : /* @__PURE__ */ P.jsxs(e.Generic.Popover.Root, { children: [
    /* @__PURE__ */ P.jsx(e.Generic.Popover.Trigger, { children: /* @__PURE__ */ P.jsx(
      e.FormattingToolbar.Button,
      {
        className: "bn-button",
        label: t.formatting_toolbar.file_caption.tooltip,
        mainTooltip: t.formatting_toolbar.file_caption.tooltip,
        icon: /* @__PURE__ */ P.jsx(e9, {}),
        isSelected: s.props.caption !== ""
      }
    ) }),
    /* @__PURE__ */ P.jsx(
      e.Generic.Popover.Content,
      {
        className: "bn-popover-content bn-form-popover",
        variant: "form-popover",
        children: /* @__PURE__ */ P.jsx(e.Generic.Form.Root, { children: /* @__PURE__ */ P.jsx(
          e.Generic.Form.TextInput,
          {
            name: "file-caption",
            icon: /* @__PURE__ */ P.jsx(e9, {}),
            value: i || "",
            autoFocus: !0,
            placeholder: t.formatting_toolbar.file_caption.input_placeholder,
            onKeyDown: a,
            onChange: l
          }
        ) })
      }
    )
  ] });
}, Wz = () => {
  const t = Et(), e = ct(), n = gt(), i = vi(n), r = bt(() => {
    if (i.length !== 1)
      return;
    const s = i[0];
    if (If(s, n))
      return s;
  }, [n, i]), o = Xe(() => {
    n.focus(), n.removeBlocks([r]);
  }, [n, r]);
  return !r || Lf(r, n) || !n.isEditable ? null : /* @__PURE__ */ P.jsx(
    e.FormattingToolbar.Button,
    {
      className: "bn-button",
      label: t.formatting_toolbar.file_delete.tooltip[r.type] || t.formatting_toolbar.file_delete.tooltip.file,
      mainTooltip: t.formatting_toolbar.file_delete.tooltip[r.type] || t.formatting_toolbar.file_delete.tooltip.file,
      icon: /* @__PURE__ */ P.jsx(Dz, {}),
      onClick: o
    }
  );
}, qz = () => {
  const t = Et(), e = ct(), n = gt(), [i, r] = Be(), o = vi(n), s = bt(() => {
    if (o.length !== 1)
      return;
    const c = o[0];
    if (If(c, n))
      return r(c.props.name), c;
  }, [n, o]), a = Xe(
    (c) => {
      s && c.key === "Enter" && (c.preventDefault(), n.updateBlock(s, {
        props: {
          name: i
          // TODO
        }
      }));
    },
    [i, n, s]
  ), l = Xe(
    (c) => r(c.currentTarget.value),
    []
  );
  return !s || Lf(s, n) || !n.isEditable ? null : /* @__PURE__ */ P.jsxs(e.Generic.Popover.Root, { children: [
    /* @__PURE__ */ P.jsx(e.Generic.Popover.Trigger, { children: /* @__PURE__ */ P.jsx(
      e.FormattingToolbar.Button,
      {
        className: "bn-button",
        label: t.formatting_toolbar.file_rename.tooltip[s.type] || t.formatting_toolbar.file_rename.tooltip.file,
        mainTooltip: t.formatting_toolbar.file_rename.tooltip[s.type] || t.formatting_toolbar.file_rename.tooltip.file,
        icon: /* @__PURE__ */ P.jsx(Zw, {})
      }
    ) }),
    /* @__PURE__ */ P.jsx(
      e.Generic.Popover.Content,
      {
        className: "bn-popover-content bn-form-popover",
        variant: "form-popover",
        children: /* @__PURE__ */ P.jsx(e.Generic.Form.Root, { children: /* @__PURE__ */ P.jsx(
          e.Generic.Form.TextInput,
          {
            name: "file-name",
            icon: /* @__PURE__ */ P.jsx(Zw, {}),
            value: i || "",
            autoFocus: !0,
            placeholder: t.formatting_toolbar.file_rename.input_placeholder[s.type] || t.formatting_toolbar.file_rename.input_placeholder.file,
            onKeyDown: a,
            onChange: l
          }
        ) })
      }
    )
  ] });
}, Gz = () => {
  const t = Et(), e = ct(), n = gt(), i = vi(n), [r, o] = Be(!1);
  We(() => {
    o(!1);
  }, [i]);
  const s = i.length === 1 ? i[0] : void 0;
  return s === void 0 || !If(s, n) || !n.isEditable ? null : /* @__PURE__ */ P.jsxs(e.Generic.Popover.Root, { opened: r, position: "bottom", children: [
    /* @__PURE__ */ P.jsx(e.Generic.Popover.Trigger, { children: /* @__PURE__ */ P.jsx(
      e.FormattingToolbar.Button,
      {
        className: "bn-button",
        onClick: () => o(!r),
        isSelected: r,
        mainTooltip: t.formatting_toolbar.file_replace.tooltip[s.type] || t.formatting_toolbar.file_replace.tooltip.file,
        label: t.formatting_toolbar.file_replace.tooltip[s.type] || t.formatting_toolbar.file_replace.tooltip.file,
        icon: /* @__PURE__ */ P.jsx(Iz, {})
      }
    ) }),
    /* @__PURE__ */ P.jsx(
      e.Generic.Popover.Content,
      {
        className: "bn-popover-content bn-panel-popover",
        variant: "panel-popover",
        children: /* @__PURE__ */ P.jsx(lT, { block: s })
      }
    )
  ] });
}, Kz = () => {
  const t = Et(), e = ct(), n = gt(), i = vi(n), [r, o] = Be(
    () => n.canNestBlock()
  );
  Ss(() => {
    o(n.canNestBlock());
  }, n);
  const s = Xe(() => {
    n.focus(), n.nestBlock();
  }, [n]);
  return !bt(() => !i.find(
    (a) => n.schema.blockSchema[a.type].content !== "inline"
  ), [n.schema.blockSchema, i]) || !n.isEditable ? null : /* @__PURE__ */ P.jsx(
    e.FormattingToolbar.Button,
    {
      className: "bn-button",
      "data-test": "nestBlock",
      onClick: s,
      isDisabled: !r,
      label: t.formatting_toolbar.nest.tooltip,
      mainTooltip: t.formatting_toolbar.nest.tooltip,
      secondaryTooltip: Ji(
        t.formatting_toolbar.nest.secondary_tooltip,
        t.generic.ctrl_shortcut
      ),
      icon: /* @__PURE__ */ P.jsx(Cz, {})
    }
  );
}, Yz = () => {
  const t = Et(), e = ct(), n = gt(), i = vi(n), [r, o] = Be(
    () => n.canUnnestBlock()
  );
  Ss(() => {
    o(n.canUnnestBlock());
  }, n);
  const s = Xe(() => {
    n.focus(), n.unnestBlock();
  }, [n]);
  return !bt(() => !i.find(
    (a) => n.schema.blockSchema[a.type].content !== "inline"
  ), [n.schema.blockSchema, i]) || !n.isEditable ? null : /* @__PURE__ */ P.jsx(
    e.FormattingToolbar.Button,
    {
      className: "bn-button",
      "data-test": "unnestBlock",
      onClick: s,
      isDisabled: !r,
      label: t.formatting_toolbar.unnest.tooltip,
      mainTooltip: t.formatting_toolbar.unnest.tooltip,
      secondaryTooltip: Ji(
        t.formatting_toolbar.unnest.secondary_tooltip,
        t.generic.ctrl_shortcut
      ),
      icon: /* @__PURE__ */ P.jsx(Tz, {})
    }
  );
}, Jz = (t) => [
  {
    name: t.slash_menu.paragraph.title,
    type: "paragraph",
    icon: Iv,
    isSelected: (e) => e.type === "paragraph"
  },
  {
    name: t.slash_menu.heading.title,
    type: "heading",
    props: { level: 1 },
    icon: hT,
    isSelected: (e) => e.type === "heading" && "level" in e.props && e.props.level === 1
  },
  {
    name: t.slash_menu.heading_2.title,
    type: "heading",
    props: { level: 2 },
    icon: pT,
    isSelected: (e) => e.type === "heading" && "level" in e.props && e.props.level === 2
  },
  {
    name: t.slash_menu.heading_3.title,
    type: "heading",
    props: { level: 3 },
    icon: mT,
    isSelected: (e) => e.type === "heading" && "level" in e.props && e.props.level === 3
  },
  {
    name: t.slash_menu.bullet_list.title,
    type: "bulletListItem",
    icon: bT,
    isSelected: (e) => e.type === "bulletListItem"
  },
  {
    name: t.slash_menu.numbered_list.title,
    type: "numberedListItem",
    icon: vT,
    isSelected: (e) => e.type === "numberedListItem"
  },
  {
    name: t.slash_menu.check_list.title,
    type: "checkListItem",
    icon: yT,
    isSelected: (e) => e.type === "checkListItem"
  }
], Xz = (t) => {
  const e = ct(), n = Et(), i = gt(), r = vi(i), [o, s] = Be(i.getTextCursorPosition().block), a = bt(() => (t.items || Jz(n)).filter(
    (f) => f.type in i.schema.blockSchema
  ), [i, n, t.items]), l = bt(
    () => a.find((f) => f.type === o.type) !== void 0,
    [o.type, a]
  ), c = bt(() => {
    const f = (d) => {
      i.focus();
      for (const u of r)
        i.updateBlock(u, {
          type: d.type,
          props: d.props
        });
    };
    return a.map((d) => {
      const u = d.icon;
      return {
        text: d.name,
        icon: /* @__PURE__ */ P.jsx(u, { size: 16 }),
        onClick: () => f(d),
        isSelected: d.isSelected(o)
      };
    });
  }, [o, a, i, r]);
  return Ss(() => {
    s(i.getTextCursorPosition().block);
  }, i), !l || !i.isEditable ? null : /* @__PURE__ */ P.jsx(
    e.FormattingToolbar.Select,
    {
      className: "bn-select",
      items: c
    }
  );
};
function TT(t, e) {
  try {
    const n = new URL(t, e);
    if (n.protocol !== "javascript:")
      return n.href;
  } catch {
  }
  return "#";
}
const Qz = () => {
  const t = Et(), e = ct(), n = gt(), i = vi(n), r = bt(() => {
    if (i.length !== 1)
      return;
    const s = i[0];
    if (If(s, n))
      return s;
  }, [n, i]), o = Xe(() => {
    r && r.props.url && (n.focus(), n.resolveFileUrl(r.props.url).then(
      (s) => window.open(TT(s, window.location.href))
    ));
  }, [n, r]);
  return !r || Lf(r, n) ? null : /* @__PURE__ */ P.jsx(
    e.FormattingToolbar.Button,
    {
      className: "bn-button",
      label: t.formatting_toolbar.file_download.tooltip[r.type] || t.formatting_toolbar.file_download.tooltip.file,
      mainTooltip: t.formatting_toolbar.file_download.tooltip[r.type] || t.formatting_toolbar.file_download.tooltip.file,
      icon: /* @__PURE__ */ P.jsx(Pz, {}),
      onClick: o
    }
  );
}, Zz = () => {
  const t = Et(), e = ct(), n = gt(), i = vi(n), r = bt(() => {
    if (i.length !== 1)
      return;
    const s = i[0];
    if (v$(s, n))
      return s;
  }, [n, i]), o = Xe(() => {
    r && n.updateBlock(r, {
      props: {
        showPreview: !r.props.showPreview
        // TODO
      }
    });
  }, [n, r]);
  return !r || Lf(r, n) || !n.isEditable ? null : /* @__PURE__ */ P.jsx(
    e.FormattingToolbar.Button,
    {
      className: "bn-button",
      label: "Toggle preview",
      mainTooltip: t.formatting_toolbar.file_preview_toggle.tooltip,
      icon: /* @__PURE__ */ P.jsx(Rz, {}),
      isSelected: r.props.showPreview,
      onClick: o
    }
  );
}, eU = {
  left: wz,
  center: bz,
  right: _z,
  justify: kz
}, _m = (t) => {
  const e = ct(), n = Et(), i = gt(), r = vi(i), o = bt(() => {
    const l = r[0];
    if (xg("textAlignment", l, i))
      return l.props.textAlignment;
  }, [i, r]), s = Xe(
    (l) => {
      i.focus();
      for (const c of r)
        Ga("textAlignment", c.type, i) && i.updateBlock(c, {
          props: { textAlignment: l }
        });
    },
    [i, r]
  );
  if (!bt(() => !!r.find((l) => "textAlignment" in l.props), [r]) || !i.isEditable)
    return null;
  const a = eU[t.textAlignment];
  return /* @__PURE__ */ P.jsx(
    e.FormattingToolbar.Button,
    {
      className: "bn-button",
      "data-test": `alignText${t.textAlignment.slice(0, 1).toUpperCase() + t.textAlignment.slice(1)}`,
      onClick: () => s(t.textAlignment),
      isSelected: o === t.textAlignment,
      label: n.formatting_toolbar[`align_${t.textAlignment}`].tooltip,
      mainTooltip: n.formatting_toolbar[`align_${t.textAlignment}`].tooltip,
      icon: /* @__PURE__ */ P.jsx(a, {})
    }
  );
}, tU = (t) => [
  /* @__PURE__ */ P.jsx(Xz, { items: t }, "blockTypeSelect"),
  /* @__PURE__ */ P.jsx(Vz, {}, "fileCaptionButton"),
  /* @__PURE__ */ P.jsx(Gz, {}, "replaceFileButton"),
  /* @__PURE__ */ P.jsx(qz, {}, "fileRenameButton"),
  /* @__PURE__ */ P.jsx(Wz, {}, "fileDeleteButton"),
  /* @__PURE__ */ P.jsx(Qz, {}, "fileDownloadButton"),
  /* @__PURE__ */ P.jsx(Zz, {}, "filePreviewButton"),
  /* @__PURE__ */ P.jsx(_d, { basicTextStyle: "bold" }, "boldStyleButton"),
  /* @__PURE__ */ P.jsx(_d, { basicTextStyle: "italic" }, "italicStyleButton"),
  /* @__PURE__ */ P.jsx(
    _d,
    {
      basicTextStyle: "underline"
    },
    "underlineStyleButton"
  ),
  /* @__PURE__ */ P.jsx(_d, { basicTextStyle: "strike" }, "strikeStyleButton"),
  /* @__PURE__ */ P.jsx(_m, { textAlignment: "left" }, "textAlignLeftButton"),
  /* @__PURE__ */ P.jsx(_m, { textAlignment: "center" }, "textAlignCenterButton"),
  /* @__PURE__ */ P.jsx(_m, { textAlignment: "right" }, "textAlignRightButton"),
  /* @__PURE__ */ P.jsx(jz, {}, "colorStyleButton"),
  /* @__PURE__ */ P.jsx(Kz, {}, "nestBlockButton"),
  /* @__PURE__ */ P.jsx(Yz, {}, "unnestBlockButton"),
  /* @__PURE__ */ P.jsx(Uz, {}, "createLinkButton")
], nU = (t) => {
  const e = ct();
  return /* @__PURE__ */ P.jsx(
    e.FormattingToolbar.Root,
    {
      className: "bn-toolbar bn-formatting-toolbar",
      children: t.children || tU(t.blockTypeSelectItems)
    }
  );
}, i9 = (t) => {
  switch (t) {
    case "left":
      return "top-start";
    case "center":
      return "top";
    case "right":
      return "top-end";
    default:
      return "top-start";
  }
}, iU = (t) => {
  const e = wt(null), n = gt(), [i, r] = Be(
    () => {
      const u = n.getTextCursorPosition().block;
      return "textAlignment" in u.props ? i9(
        u.props.textAlignment
      ) : "top-start";
    }
  );
  Ss(() => {
    const u = n.getTextCursorPosition().block;
    "textAlignment" in u.props ? r(
      i9(
        u.props.textAlignment
      )
    ) : r("top-start");
  }, n);
  const o = wa(
    n.formattingToolbar.onUpdate.bind(n.formattingToolbar)
  ), { isMounted: s, ref: a, style: l, getFloatingProps: c } = Bl(
    (o == null ? void 0 : o.show) || !1,
    (o == null ? void 0 : o.referencePos) || null,
    3e3,
    {
      placement: i,
      middleware: [_s(10), gs()],
      onOpenChange: (u, h) => {
        u || (n.formattingToolbar.closeMenu(), n.focus());
      }
    }
  ), f = bt(() => fz([e, a]), [e, a]);
  if (!s || !o)
    return null;
  if (!o.show && e.current)
    return /* @__PURE__ */ P.jsx(
      "div",
      {
        ref: f,
        style: l,
        dangerouslySetInnerHTML: { __html: e.current.innerHTML }
      }
    );
  const d = t.formattingToolbar || nU;
  return /* @__PURE__ */ P.jsx("div", { ref: f, style: l, ...c(), children: /* @__PURE__ */ P.jsx(d, {}) });
}, rU = (t) => {
  const e = ct(), n = Et();
  return /* @__PURE__ */ P.jsx(
    e.LinkToolbar.Button,
    {
      className: "bn-button",
      label: n.link_toolbar.delete.tooltip,
      mainTooltip: n.link_toolbar.delete.tooltip,
      isSelected: !1,
      onClick: t.deleteLink,
      icon: /* @__PURE__ */ P.jsx(xz, {})
    }
  );
}, oU = (t) => {
  const e = ct(), n = Et();
  return /* @__PURE__ */ P.jsxs(e.Generic.Popover.Root, { children: [
    /* @__PURE__ */ P.jsx(e.Generic.Popover.Trigger, { children: /* @__PURE__ */ P.jsx(
      e.LinkToolbar.Button,
      {
        className: "bn-button",
        mainTooltip: n.link_toolbar.edit.tooltip,
        isSelected: !1,
        children: n.link_toolbar.edit.text
      }
    ) }),
    /* @__PURE__ */ P.jsx(
      e.Generic.Popover.Content,
      {
        className: "bn-popover-content bn-form-popover",
        variant: "form-popover",
        children: /* @__PURE__ */ P.jsx(ET, { ...t })
      }
    )
  ] });
}, sU = (t) => {
  const e = ct(), n = Et();
  return /* @__PURE__ */ P.jsx(
    e.LinkToolbar.Button,
    {
      className: "bn-button",
      mainTooltip: n.link_toolbar.open.tooltip,
      label: n.link_toolbar.open.tooltip,
      isSelected: !1,
      onClick: () => {
        window.open(TT(t.url, window.location.href), "_blank");
      },
      icon: /* @__PURE__ */ P.jsx(Fz, {})
    }
  );
}, aU = (t) => {
  const e = ct();
  return t.children ? /* @__PURE__ */ P.jsx(e.LinkToolbar.Root, { className: "bn-toolbar bn-link-toolbar", children: t.children }) : /* @__PURE__ */ P.jsxs(
    e.LinkToolbar.Root,
    {
      className: "bn-toolbar bn-link-toolbar",
      onMouseEnter: t.stopHideTimer,
      onMouseLeave: t.startHideTimer,
      children: [
        /* @__PURE__ */ P.jsx(
          oU,
          {
            url: t.url,
            text: t.text,
            editLink: t.editLink
          }
        ),
        /* @__PURE__ */ P.jsx(sU, { url: t.url }),
        /* @__PURE__ */ P.jsx(rU, { deleteLink: t.deleteLink })
      ]
    }
  );
}, lU = (t) => {
  const e = gt(), n = {
    deleteLink: e.linkToolbar.deleteLink,
    editLink: e.linkToolbar.editLink,
    startHideTimer: e.linkToolbar.startHideTimer,
    stopHideTimer: e.linkToolbar.stopHideTimer
  }, i = wa(
    e.linkToolbar.onUpdate.bind(e.linkToolbar)
  ), { isMounted: r, ref: o, style: s, getFloatingProps: a } = Bl(
    (i == null ? void 0 : i.show) || !1,
    (i == null ? void 0 : i.referencePos) || null,
    4e3,
    {
      placement: "top-start",
      middleware: [_s(10), gs()],
      onOpenChange: (u) => {
        u || (e.linkToolbar.closeMenu(), e.focus());
      }
    }
  );
  if (!r || !i)
    return null;
  const { show: l, referencePos: c, ...f } = i, d = t.linkToolbar || aU;
  return /* @__PURE__ */ P.jsx("div", { ref: o, style: s, ...a(), children: /* @__PURE__ */ P.jsx(d, { ...f, ...n }) });
};
function cU(t) {
  return yt({ tag: "svg", attr: { viewBox: "0 0 1024 1024" }, child: [{ tag: "path", attr: { d: "M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8Z" }, child: [] }, { tag: "path", attr: { d: "M192 474h672q8 0 8 8v60q0 8-8 8H160q-8 0-8-8v-60q0-8 8-8Z" }, child: [] }] })(t);
}
const fU = (t) => {
  const e = ct(), n = Et(), i = gt(), r = Xe(() => {
    const o = t.block.content;
    if (o !== void 0 && Array.isArray(o) && o.length === 0)
      i.setTextCursorPosition(t.block), i.openSuggestionMenu("/");
    else {
      const s = i.insertBlocks(
        [{ type: "paragraph" }],
        t.block,
        "after"
      )[0];
      i.setTextCursorPosition(s), i.openSuggestionMenu("/");
    }
  }, [i, t.block]);
  return /* @__PURE__ */ P.jsx(
    e.SideMenu.Button,
    {
      className: "bn-button",
      label: n.side_menu.add_block_label,
      icon: /* @__PURE__ */ P.jsx(cU, { size: 24, onClick: r, "data-test": "dragHandleAdd" })
    }
  );
};
function CT(t) {
  return yt({ tag: "svg", attr: { viewBox: "0 0 24 24" }, child: [{ tag: "path", attr: { fill: "none", d: "M0 0h24v24H0V0z" }, child: [] }, { tag: "path", attr: { d: "M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z" }, child: [] }] })(t);
}
const dU = (t) => {
  const e = ct(), n = gt();
  return !Ga("textColor", t.block.type, n) && !Ga("backgroundColor", t.block.type, n) ? null : /* @__PURE__ */ P.jsxs(e.Generic.Menu.Root, { position: "right", sub: !0, children: [
    /* @__PURE__ */ P.jsx(e.Generic.Menu.Trigger, { sub: !0, children: /* @__PURE__ */ P.jsx(
      e.Generic.Menu.Item,
      {
        className: "bn-menu-item",
        subTrigger: !0,
        children: t.children
      }
    ) }),
    /* @__PURE__ */ P.jsx(
      e.Generic.Menu.Dropdown,
      {
        sub: !0,
        className: "bn-menu-dropdown bn-color-picker-dropdown",
        children: /* @__PURE__ */ P.jsx(
          _T,
          {
            iconSize: 18,
            text: Ga(
              "textColor",
              t.block.type,
              n
            ) && xg("textColor", t.block, n) ? {
              color: t.block.props.textColor,
              setColor: (i) => n.updateBlock(t.block, {
                type: t.block.type,
                props: { textColor: i }
              })
            } : void 0,
            background: Ga(
              "backgroundColor",
              t.block.type,
              n
            ) && xg("backgroundColor", t.block, n) ? {
              color: t.block.props.backgroundColor,
              setColor: (i) => n.updateBlock(t.block, {
                props: { backgroundColor: i }
              })
            } : void 0
          }
        )
      }
    )
  ] });
}, uU = (t) => {
  const e = ct(), n = gt();
  return /* @__PURE__ */ P.jsx(
    e.Generic.Menu.Item,
    {
      className: "bn-menu-item",
      onClick: () => n.removeBlocks([t.block]),
      children: t.children
    }
  );
}, hU = (t) => {
  const e = ct(), n = Et();
  return /* @__PURE__ */ P.jsx(
    e.Generic.Menu.Dropdown,
    {
      className: "bn-menu-dropdown bn-drag-handle-menu",
      children: t.children || /* @__PURE__ */ P.jsxs(P.Fragment, { children: [
        /* @__PURE__ */ P.jsx(uU, { ...t, children: n.drag_handle.delete_menuitem }),
        /* @__PURE__ */ P.jsx(dU, { ...t, children: n.drag_handle.colors_menuitem })
      ] })
    }
  );
}, pU = (t) => {
  const e = ct(), n = Et(), i = t.dragHandleMenu || hU;
  return /* @__PURE__ */ P.jsxs(
    e.Generic.Menu.Root,
    {
      onOpenChange: (r) => {
        r ? t.freezeMenu() : t.unfreezeMenu();
      },
      position: "left",
      children: [
        /* @__PURE__ */ P.jsx(e.Generic.Menu.Trigger, { children: /* @__PURE__ */ P.jsx(
          e.SideMenu.Button,
          {
            label: n.side_menu.drag_handle_label,
            draggable: !0,
            onDragStart: t.blockDragStart,
            onDragEnd: t.blockDragEnd,
            className: "bn-button",
            icon: /* @__PURE__ */ P.jsx(CT, { size: 24, "data-test": "dragHandle" })
          }
        ) }),
        /* @__PURE__ */ P.jsx(i, { block: t.block })
      ]
    }
  );
}, mU = (t) => {
  const e = ct(), n = bt(() => {
    const i = {
      "data-block-type": t.block.type
    };
    return t.block.type === "heading" && (i["data-level"] = t.block.props.level.toString()), t.editor.schema.blockSchema[t.block.type].isFileBlock && (t.block.props.url ? i["data-url"] = "true" : i["data-url"] = "false"), i;
  }, [t.block, t.editor.schema.blockSchema]);
  return /* @__PURE__ */ P.jsx(e.SideMenu.Root, { className: "bn-side-menu", ...n, children: t.children || /* @__PURE__ */ P.jsxs(P.Fragment, { children: [
    /* @__PURE__ */ P.jsx(fU, { ...t }),
    /* @__PURE__ */ P.jsx(pU, { ...t })
  ] }) });
}, gU = (t) => {
  const e = gt(), n = {
    blockDragStart: e.sideMenu.blockDragStart,
    blockDragEnd: e.sideMenu.blockDragEnd,
    freezeMenu: e.sideMenu.freezeMenu,
    unfreezeMenu: e.sideMenu.unfreezeMenu
  }, i = wa(
    e.sideMenu.onUpdate.bind(e.sideMenu)
  ), { isMounted: r, ref: o, style: s, getFloatingProps: a } = Bl(
    (i == null ? void 0 : i.show) || !1,
    (i == null ? void 0 : i.referencePos) || null,
    1e3,
    {
      placement: "left-start"
    }
  );
  if (!r || !i)
    return null;
  const { show: l, referencePos: c, ...f } = i, d = t.sideMenu || mU;
  return /* @__PURE__ */ P.jsx("div", { ref: o, style: s, ...a(), children: /* @__PURE__ */ P.jsx(d, { ...f, ...n, editor: e }) });
};
async function yU(t, e) {
  return (await Bj(t, e)).map(
    ({ id: n, onItemClick: i }) => ({
      id: n,
      onItemClick: i,
      icon: n
    })
  );
}
function vU(t) {
  const e = ct(), n = Et(), { items: i, loadingState: r, selectedIndex: o, onItemClick: s, columns: a } = t, l = r === "loading-initial" || r === "loading" ? /* @__PURE__ */ P.jsx(
    e.GridSuggestionMenu.Loader,
    {
      className: "bn-grid-suggestion-menu-loader",
      columns: a,
      children: n.suggestion_menu.loading
    }
  ) : null, c = bt(() => {
    const f = [];
    for (let d = 0; d < i.length; d++) {
      const u = i[d];
      f.push(
        /* @__PURE__ */ P.jsx(
          e.GridSuggestionMenu.Item,
          {
            className: "bn-grid-suggestion-menu-item",
            item: u,
            id: `bn-grid-suggestion-menu-item-${d}`,
            isSelected: d === o,
            onClick: () => s == null ? void 0 : s(u)
          },
          u.id
        )
      );
    }
    return f;
  }, [e, i, s, o]);
  return /* @__PURE__ */ P.jsxs(
    e.GridSuggestionMenu.Root,
    {
      id: "bn-grid-suggestion-menu",
      columns: a,
      className: "bn-grid-suggestion-menu",
      children: [
        l,
        c,
        c.length === 0 && t.loadingState === "loaded" && /* @__PURE__ */ P.jsx(
          e.GridSuggestionMenu.EmptyItem,
          {
            className: "bn-grid-suggestion-menu-empty-item",
            columns: a,
            children: n.suggestion_menu.no_items_title
          }
        )
      ]
    }
  );
}
function ST(t, e, n, i = 3) {
  const r = wt(0);
  We(() => {
    e !== void 0 && (t.length > 0 ? r.current = e.length : e.length - r.current > i && n());
  }, [n, i, t.length, e]);
}
function xT(t, e) {
  const [n, i] = Be([]), [r, o] = Be(!1), s = wt(), a = wt();
  return We(() => {
    const l = t;
    s.current = t, o(!0), e(t).then((c) => {
      s.current === l && (i(c), o(!1), a.current = l);
    });
  }, [t, e]), {
    items: n || [],
    // The query that was used to retrieve the last set of items may not be the
    // same as the current query as the items from the current query may not
    // have been retrieved yet. This is useful when using the returns of this
    // hook in other hooks.
    usedQuery: a.current,
    loadingState: a.current === void 0 ? "loading-initial" : r ? "loading" : "loaded"
  };
}
function bU(t, e, n, i, r) {
  const [o, s] = Be(0), a = i !== void 0 && i > 1;
  return We(() => {
    const l = (c) => (c.key === "ArrowLeft" && (c.preventDefault(), n.length && s((o - 1 + n.length) % n.length)), c.key === "ArrowRight" && (c.preventDefault(), n.length && s((o + 1 + n.length) % n.length)), c.key === "ArrowUp" ? (c.preventDefault(), n.length && s(
      (o - i + n.length) % n.length
    ), !0) : c.key === "ArrowDown" ? (c.preventDefault(), n.length && s((o + i) % n.length), !0) : c.key === "Enter" && !c.isComposing ? (c.preventDefault(), n.length && (r == null || r(n[o])), !0) : !1);
    return t.domElement.addEventListener(
      "keydown",
      l,
      !0
    ), () => {
      t.domElement.removeEventListener(
        "keydown",
        l,
        !0
      );
    };
  }, [t.domElement, n, o, r, i, a]), We(() => {
    s(0);
  }, [e]), {
    selectedIndex: n.length === 0 ? void 0 : o
  };
}
function kU(t) {
  const e = Co().setContentEditableProps, n = gt(), {
    getItems: i,
    gridSuggestionMenuComponent: r,
    query: o,
    clearQuery: s,
    closeMenu: a,
    onItemClick: l,
    columns: c
  } = t, f = Xe(
    (v) => {
      a(), s(), l == null || l(v);
    },
    [l, a, s]
  ), { items: d, usedQuery: u, loadingState: h } = xT(
    o,
    i
  );
  ST(d, u, a);
  const { selectedIndex: p } = bU(
    n,
    o,
    d,
    c,
    f
  );
  We(() => (e((v) => ({
    ...v,
    "aria-expanded": !0,
    "aria-controls": "bn-suggestion-menu"
  })), () => {
    e((v) => ({
      ...v,
      "aria-expanded": !1,
      "aria-controls": void 0
    }));
  }), [e]), We(() => (e((v) => ({
    ...v,
    "aria-activedescendant": p ? "bn-suggestion-menu-item-" + p : void 0
  })), () => {
    e((v) => ({
      ...v,
      "aria-activedescendant": void 0
    }));
  }), [e, p]);
  const m = r;
  return /* @__PURE__ */ P.jsx(
    m,
    {
      items: d,
      onItemClick: f,
      loadingState: h,
      selectedIndex: p,
      columns: c
    }
  );
}
function wU(t) {
  const e = gt(), {
    triggerCharacter: n,
    gridSuggestionMenuComponent: i,
    columns: r,
    minQueryLength: o,
    onItemClick: s,
    getItems: a
  } = t, l = bt(() => s || ((y) => {
    y.onItemClick(e);
  }), [e, s]), c = bt(() => a || (async (y) => await yU(
    e,
    y
  )), [e, a]), f = {
    closeMenu: e.suggestionMenus.closeMenu,
    clearQuery: e.suggestionMenus.clearQuery
  }, d = Xe(
    (y) => e.suggestionMenus.onUpdate(n, y),
    [e.suggestionMenus, n]
  ), u = wa(d), { isMounted: h, ref: p, style: m, getFloatingProps: v } = Bl(
    (u == null ? void 0 : u.show) || !1,
    (u == null ? void 0 : u.referencePos) || null,
    2e3,
    {
      placement: "bottom-start",
      middleware: [
        _s(10),
        // Flips the menu placement to maximize the space available, and prevents
        // the menu from being cut off by the confines of the screen.
        gs(),
        gy({
          apply({ availableHeight: y, elements: C }) {
            Object.assign(C.floating.style, {
              maxHeight: `${y - 10}px`
            });
          }
        })
      ],
      onOpenChange(y) {
        y || e.suggestionMenus.closeMenu();
      }
    }
  );
  return !h || !u || !(u != null && u.ignoreQueryLength) && o && (u.query.startsWith(" ") || u.query.length < o) ? null : /* @__PURE__ */ P.jsx("div", { ref: p, style: m, ...v(), children: /* @__PURE__ */ P.jsx(
    kU,
    {
      query: u.query,
      closeMenu: f.closeMenu,
      clearQuery: f.clearQuery,
      getItems: c,
      columns: r,
      gridSuggestionMenuComponent: i || vU,
      onItemClick: l
    }
  ) });
}
function _U(t) {
  const e = ct(), n = Et(), { items: i, loadingState: r, selectedIndex: o, onItemClick: s } = t, a = r === "loading-initial" || r === "loading" ? /* @__PURE__ */ P.jsx(e.SuggestionMenu.Loader, { className: "bn-suggestion-menu-loader", children: n.suggestion_menu.loading }) : null, l = bt(() => {
    let c;
    const f = [];
    for (let d = 0; d < i.length; d++) {
      const u = i[d];
      u.group !== c && (c = u.group, f.push(
        /* @__PURE__ */ P.jsx(
          e.SuggestionMenu.Label,
          {
            className: "bn-suggestion-menu-label",
            children: c
          },
          c
        )
      )), f.push(
        /* @__PURE__ */ P.jsx(
          e.SuggestionMenu.Item,
          {
            className: "bn-suggestion-menu-item",
            item: u,
            id: `bn-suggestion-menu-item-${d}`,
            isSelected: d === o,
            onClick: () => s == null ? void 0 : s(u)
          },
          u.title
        )
      );
    }
    return f;
  }, [e, i, s, o]);
  return /* @__PURE__ */ P.jsxs(
    e.SuggestionMenu.Root,
    {
      id: "bn-suggestion-menu",
      className: "bn-suggestion-menu",
      children: [
        l,
        l.length === 0 && (t.loadingState === "loading" || t.loadingState === "loaded") && /* @__PURE__ */ P.jsx(
          e.SuggestionMenu.EmptyItem,
          {
            className: "bn-suggestion-menu-item",
            children: n.suggestion_menu.no_items_title
          }
        ),
        a
      ]
    }
  );
}
function EU(t, e, n, i) {
  const [r, o] = Be(0);
  return We(() => {
    const s = (a) => a.key === "ArrowUp" ? (a.preventDefault(), n.length && o((r - 1 + n.length) % n.length), !0) : a.key === "ArrowDown" ? (a.preventDefault(), n.length && o((r + 1) % n.length), !0) : a.key === "Enter" && !a.isComposing ? (a.preventDefault(), n.length && (i == null || i(n[r])), !0) : !1;
    return t.domElement.addEventListener(
      "keydown",
      s,
      !0
    ), () => {
      t.domElement.removeEventListener(
        "keydown",
        s,
        !0
      );
    };
  }, [t.domElement, n, r, i]), We(() => {
    o(0);
  }, [e]), {
    selectedIndex: n.length === 0 ? void 0 : r
  };
}
function TU(t) {
  const e = Co().setContentEditableProps, n = gt(), {
    getItems: i,
    suggestionMenuComponent: r,
    query: o,
    clearQuery: s,
    closeMenu: a,
    onItemClick: l
  } = t, c = Xe(
    (m) => {
      a(), s(), l == null || l(m);
    },
    [l, a, s]
  ), { items: f, usedQuery: d, loadingState: u } = xT(
    o,
    i
  );
  ST(f, d, a);
  const { selectedIndex: h } = EU(
    n,
    o,
    f,
    c
  );
  We(() => (e((m) => ({
    ...m,
    "aria-expanded": !0,
    "aria-controls": "bn-suggestion-menu"
  })), () => {
    e((m) => ({
      ...m,
      "aria-expanded": !1,
      "aria-controls": void 0
    }));
  }), [e]), We(() => (e((m) => ({
    ...m,
    "aria-activedescendant": h ? "bn-suggestion-menu-item-" + h : void 0
  })), () => {
    e((m) => ({
      ...m,
      "aria-activedescendant": void 0
    }));
  }), [e, h]);
  const p = r;
  return /* @__PURE__ */ P.jsx(
    p,
    {
      items: f,
      onItemClick: c,
      loadingState: u,
      selectedIndex: h
    }
  );
}
const CU = {
  heading: hT,
  heading_2: pT,
  heading_3: mT,
  numbered_list: vT,
  bullet_list: bT,
  check_list: yT,
  paragraph: Iv,
  table: Mz,
  image: kT,
  video: Oz,
  audio: wT,
  file: Rv,
  emoji: Bz
};
function SU(t) {
  return $j(t).map((e) => {
    const n = CU[e.key];
    return {
      ...e,
      icon: /* @__PURE__ */ P.jsx(n, { size: 18 })
    };
  });
}
function xU(t) {
  const e = gt(), {
    triggerCharacter: n,
    suggestionMenuComponent: i,
    minQueryLength: r,
    onItemClick: o,
    getItems: s
  } = t, a = bt(() => o || ((v) => {
    v.onItemClick(e);
  }), [e, o]), l = bt(() => s || (async (v) => jj(
    SU(e),
    v
  )), [e, s]), c = {
    closeMenu: e.suggestionMenus.closeMenu,
    clearQuery: e.suggestionMenus.clearQuery
  }, f = Xe(
    (v) => e.suggestionMenus.onUpdate(n, v),
    [e.suggestionMenus, n]
  ), d = wa(f), { isMounted: u, ref: h, style: p, getFloatingProps: m } = Bl(
    (d == null ? void 0 : d.show) || !1,
    (d == null ? void 0 : d.referencePos) || null,
    2e3,
    {
      placement: "bottom-start",
      middleware: [
        _s(10),
        // Flips the menu placement to maximize the space available, and prevents
        // the menu from being cut off by the confines of the screen.
        gs({
          mainAxis: !0,
          crossAxis: !1
        }),
        fh(),
        gy({
          apply({ availableHeight: v, elements: y }) {
            Object.assign(y.floating.style, {
              maxHeight: `${v - 10}px`
            });
          }
        })
      ],
      onOpenChange(v) {
        v || e.suggestionMenus.closeMenu();
      }
    }
  );
  return !u || !d || !(d != null && d.ignoreQueryLength) && r && (d.query.startsWith(" ") || d.query.length < r) ? null : /* @__PURE__ */ P.jsx("div", { ref: h, style: p, ...m(), children: /* @__PURE__ */ P.jsx(
    TU,
    {
      query: d.query,
      closeMenu: c.closeMenu,
      clearQuery: c.clearQuery,
      getItems: l,
      suggestionMenuComponent: i || _U,
      onItemClick: a
    }
  ) });
}
const AU = (t) => {
  const e = ct(), n = Et(), i = gt();
  return /* @__PURE__ */ P.jsx(
    e.Generic.Menu.Item,
    {
      onClick: () => {
        const r = t.block.content.rows[t.index].cells.map(
          () => []
        ), o = [...t.block.content.rows];
        o.splice(t.index + (t.side === "below" ? 1 : 0), 0, {
          cells: r
        }), i.updateBlock(t.block, {
          type: "table",
          content: {
            type: "tableContent",
            rows: o
          }
        }), i.setTextCursorPosition(t.block);
      },
      children: n.table_handle[`add_${t.side}_menuitem`]
    }
  );
}, MU = (t) => {
  const e = ct(), n = Et(), i = gt();
  return /* @__PURE__ */ P.jsx(
    e.Generic.Menu.Item,
    {
      onClick: () => {
        const r = {
          type: "tableContent",
          rows: t.block.content.rows.map((o) => {
            const s = [...o.cells];
            return s.splice(t.index + (t.side === "right" ? 1 : 0), 0, []), { cells: s };
          })
        };
        i.updateBlock(t.block, {
          type: "table",
          content: r
        }), i.setTextCursorPosition(t.block);
      },
      children: n.table_handle[`add_${t.side}_menuitem`]
    }
  );
}, r9 = (t) => t.orientation === "row" ? /* @__PURE__ */ P.jsx(AU, { ...t, side: t.side }) : /* @__PURE__ */ P.jsx(MU, { ...t, side: t.side }), NU = (t) => {
  const e = ct(), n = Et(), i = gt();
  return /* @__PURE__ */ P.jsx(
    e.Generic.Menu.Item,
    {
      onClick: () => {
        const r = {
          type: "tableContent",
          rows: t.block.content.rows.filter(
            (o, s) => s !== t.index
          )
        };
        i.updateBlock(t.block, {
          type: "table",
          content: r
        }), i.setTextCursorPosition(t.block);
      },
      children: n.table_handle.delete_row_menuitem
    }
  );
}, OU = (t) => {
  const e = ct(), n = Et(), i = gt();
  return /* @__PURE__ */ P.jsx(
    e.Generic.Menu.Item,
    {
      onClick: () => {
        const r = {
          type: "tableContent",
          rows: t.block.content.rows.map((o) => ({
            cells: o.cells.filter((s, a) => a !== t.index)
          }))
        };
        i.updateBlock(t.block, {
          type: "table",
          content: r
        }), i.setTextCursorPosition(t.block);
      },
      children: n.table_handle.delete_column_menuitem
    }
  );
}, RU = (t) => t.orientation === "row" ? /* @__PURE__ */ P.jsx(NU, { ...t }) : /* @__PURE__ */ P.jsx(OU, { ...t }), IU = (t) => {
  const e = ct();
  return /* @__PURE__ */ P.jsx(e.Generic.Menu.Dropdown, { className: "bn-table-handle-menu", children: t.children || /* @__PURE__ */ P.jsxs(P.Fragment, { children: [
    /* @__PURE__ */ P.jsx(
      RU,
      {
        orientation: t.orientation,
        block: t.block,
        index: t.index
      }
    ),
    /* @__PURE__ */ P.jsx(
      r9,
      {
        orientation: t.orientation,
        block: t.block,
        index: t.index,
        side: t.orientation === "row" ? "above" : "left"
      }
    ),
    /* @__PURE__ */ P.jsx(
      r9,
      {
        orientation: t.orientation,
        block: t.block,
        index: t.index,
        side: t.orientation === "row" ? "below" : "right"
      }
    )
  ] }) });
}, LU = (t) => {
  const e = ct(), [n, i] = Be(!1), r = t.tableHandleMenu || IU;
  return /* @__PURE__ */ P.jsxs(
    e.Generic.Menu.Root,
    {
      onOpenChange: (o) => {
        o ? (t.freezeHandles(), t.hideOtherSide()) : (t.unfreezeHandles(), t.showOtherSide(), t.editor.focus());
      },
      position: "right",
      children: [
        /* @__PURE__ */ P.jsx(e.Generic.Menu.Trigger, { children: /* @__PURE__ */ P.jsx(
          e.TableHandle.Root,
          {
            className: lr(
              "bn-table-handle",
              n ? "bn-table-handle-dragging" : ""
            ),
            draggable: !0,
            onDragStart: (o) => {
              i(!0), t.dragStart(o);
            },
            onDragEnd: () => {
              t.dragEnd(), i(!1);
            },
            style: t.orientation === "column" ? { transform: "rotate(0.25turn)" } : void 0,
            children: t.children || /* @__PURE__ */ P.jsx(CT, { size: 24, "data-test": "tableHandle" })
          }
        ) }),
        /* @__PURE__ */ P.jsx(
          r,
          {
            orientation: t.orientation,
            block: t.block,
            index: t.index
          }
        )
      ]
    }
  );
};
function DU(t, e, n) {
  return n && n.draggedCellOrientation === "row" ? new DOMRect(
    e.x,
    n.mousePos,
    e.width,
    0
  ) : new DOMRect(
    e.x,
    t.y,
    e.width,
    t.height
  );
}
function PU(t, e, n) {
  return n && n.draggedCellOrientation === "col" ? new DOMRect(
    n.mousePos,
    e.y,
    0,
    e.height
  ) : new DOMRect(
    t.x,
    e.y,
    t.width,
    e.height
  );
}
function o9(t, e, n, i, r) {
  const { refs: o, update: s, context: a, floatingStyles: l } = _f({
    open: e,
    placement: t === "row" ? "left" : "top",
    middleware: [_s(t === "row" ? -10 : -12)]
  }), { isMounted: c, styles: f } = J3(a);
  return We(() => {
    s();
  }, [n, i, s]), We(() => {
    n === null || i === null || o.setReference({
      getBoundingClientRect: () => (t === "row" ? DU : PU)(n, i, r)
    });
  }, [r, t, n, i, o]), bt(
    () => ({
      isMounted: c,
      ref: o.setFloating,
      style: {
        display: "flex",
        ...f,
        ...l,
        zIndex: 1e4
      }
    }),
    [l, c, o.setFloating, f]
  );
}
function FU(t, e, n, i) {
  const r = o9(
    "row",
    t,
    e,
    n,
    i
  ), o = o9(
    "col",
    t,
    e,
    n,
    i
  );
  return bt(
    () => ({
      rowHandle: r,
      colHandle: o
    }),
    [o, r]
  );
}
const BU = (t) => {
  var e, n;
  const i = gt();
  if (!i.tableHandles)
    throw new Error(
      "TableHandlesController can only be used when BlockNote editor schema contains table block"
    );
  const r = {
    rowDragStart: i.tableHandles.rowDragStart,
    colDragStart: i.tableHandles.colDragStart,
    dragEnd: i.tableHandles.dragEnd,
    freezeHandles: i.tableHandles.freezeHandles,
    unfreezeHandles: i.tableHandles.unfreezeHandles
  }, o = wa(
    i.tableHandles.onUpdate.bind(i.tableHandles)
  ), s = bt(() => {
    var p, m;
    return o != null && o.draggingState ? {
      draggedCellOrientation: (p = o == null ? void 0 : o.draggingState) == null ? void 0 : p.draggedCellOrientation,
      mousePos: (m = o == null ? void 0 : o.draggingState) == null ? void 0 : m.mousePos
    } : void 0;
  }, [
    o == null ? void 0 : o.draggingState,
    (e = o == null ? void 0 : o.draggingState) == null ? void 0 : e.draggedCellOrientation,
    (n = o == null ? void 0 : o.draggingState) == null ? void 0 : n.mousePos
  ]), { rowHandle: a, colHandle: l } = FU(
    (o == null ? void 0 : o.show) || !1,
    (o == null ? void 0 : o.referencePosCell) || null,
    (o == null ? void 0 : o.referencePosTable) || null,
    s
  ), [c, f] = Be(!1), [d, u] = Be(!1);
  if (!a.isMounted || !l.isMounted || !o)
    return null;
  const h = t.tableHandle || LU;
  return /* @__PURE__ */ P.jsxs(P.Fragment, { children: [
    !c && /* @__PURE__ */ P.jsx("div", { ref: a.ref, style: a.style, children: /* @__PURE__ */ P.jsx(
      h,
      {
        editor: i,
        orientation: "row",
        showOtherSide: () => u(!1),
        hideOtherSide: () => u(!0),
        index: o.rowIndex,
        block: o.block,
        dragStart: r.rowDragStart,
        dragEnd: r.dragEnd,
        freezeHandles: r.freezeHandles,
        unfreezeHandles: r.unfreezeHandles
      }
    ) }),
    !d && /* @__PURE__ */ P.jsx("div", { ref: l.ref, style: l.style, children: /* @__PURE__ */ P.jsx(
      h,
      {
        editor: i,
        orientation: "column",
        showOtherSide: () => f(!1),
        hideOtherSide: () => f(!0),
        index: o.colIndex,
        block: o.block,
        dragStart: r.colDragStart,
        dragEnd: r.dragEnd,
        freezeHandles: r.freezeHandles,
        unfreezeHandles: r.unfreezeHandles
      }
    ) })
  ] });
};
function HU(t) {
  const e = gt();
  if (!e)
    throw new Error(
      "BlockNoteDefaultUI must be used within a BlockNoteContext.Provider"
    );
  return /* @__PURE__ */ P.jsxs(P.Fragment, { children: [
    t.formattingToolbar !== !1 && /* @__PURE__ */ P.jsx(iU, {}),
    t.linkToolbar !== !1 && /* @__PURE__ */ P.jsx(lU, {}),
    t.slashMenu !== !1 && /* @__PURE__ */ P.jsx(xU, { triggerCharacter: "/" }),
    t.emojiPicker !== !1 && /* @__PURE__ */ P.jsx(
      wU,
      {
        triggerCharacter: ":",
        columns: 10,
        minQueryLength: 2
      }
    ),
    t.sideMenu !== !1 && /* @__PURE__ */ P.jsx(gU, {}),
    e.filePanel && t.filePanel !== !1 && /* @__PURE__ */ P.jsx(cz, {}),
    e.tableHandles && t.tableHandles !== !1 && /* @__PURE__ */ P.jsx(BU, {})
  ] });
}
const AT = () => {
  const t = bt(
    () => {
      var s;
      return (s = window.matchMedia) == null ? void 0 : s.call(window, "(prefers-color-scheme: dark)");
    },
    []
  ), e = bt(
    () => {
      var s;
      return (s = window.matchMedia) == null ? void 0 : s.call(window, "(prefers-color-scheme: light)");
    },
    []
  ), n = t == null ? void 0 : t.matches, i = e == null ? void 0 : e.matches, [r, o] = Be(n ? "dark" : i ? "light" : "no-preference");
  return We(() => {
    o(n ? "dark" : i ? "light" : "no-preference");
  }, [n, i]), We(() => {
    if (typeof (t == null ? void 0 : t.addEventListener) == "function") {
      const s = ({ matches: l }) => l && o("dark"), a = ({ matches: l }) => l && o("light");
      return t == null || t.addEventListener("change", s), e == null || e.addEventListener("change", a), () => {
        t == null || t.removeEventListener("change", s), e == null || e.removeEventListener("change", a);
      };
    } else {
      const s = () => o(
        t.matches ? "dark" : e.matches ? "light" : "no-preference"
      );
      return t == null || t.addEventListener("change", s), e == null || e.addEventListener("change", s), () => {
        t == null || t.removeEventListener("change", s), e == null || e.removeEventListener("change", s);
      };
    }
  }, [t, e]), r;
}, $U = ({
  renderers: t
}) => /* @__PURE__ */ P.jsx(P.Fragment, { children: Object.entries(t).map(([e, n]) => ly(n.reactElement, n.element, e)) });
function jU(t) {
  const [e, n] = Be({});
  return We(() => (t.editor._tiptapEditor.contentComponent = {
    /**
     * Used by TipTap
     */
    setRenderer(i, r) {
      n((o) => ({ ...o, [i]: r }));
    },
    /**
     * Used by TipTap
     */
    removeRenderer(i) {
      n((r) => {
        const o = { ...r };
        return delete o[i], o;
      });
    }
  }, queueMicrotask(() => {
    t.editor._tiptapEditor.createNodeViews();
  }), () => {
    t.editor._tiptapEditor.contentComponent = null;
  }), [t.editor._tiptapEditor]), /* @__PURE__ */ P.jsxs(P.Fragment, { children: [
    /* @__PURE__ */ P.jsx($U, { renderers: e }),
    t.children
  ] });
}
const zU = tt((t, e) => {
  const [n, i] = Be();
  return Dx(
    e,
    () => (r, o) => {
      ay(() => {
        i({ node: r, container: o });
      }), i(void 0);
    },
    []
  ), /* @__PURE__ */ P.jsx(P.Fragment, { children: n && ly(n.node, n.container) });
}), s9 = () => {
};
function UU(t, e) {
  const {
    editor: n,
    className: i,
    theme: r,
    children: o,
    editable: s,
    onSelectionChange: a,
    onChange: l,
    formattingToolbar: c,
    linkToolbar: f,
    slashMenu: d,
    emojiPicker: u,
    sideMenu: h,
    filePanel: p,
    tableHandles: m,
    ...v
  } = t, [y, C] = Be(), k = Co(), _ = AT(), S = (k == null ? void 0 : k.colorSchemePreference) || _, E = r || (S === "dark" ? "dark" : "light");
  cT(l || s9, n), fT(a || s9, n), We(() => {
    n.isEditable = s !== !1;
  }, [s, n]);
  const x = bt(() => /* @__PURE__ */ P.jsxs(P.Fragment, { children: [
    o,
    /* @__PURE__ */ P.jsx(
      HU,
      {
        formattingToolbar: c,
        linkToolbar: f,
        slashMenu: d,
        emojiPicker: u,
        sideMenu: h,
        filePanel: p,
        tableHandles: m
      }
    )
  ] }), [
    o,
    c,
    f,
    d,
    u,
    h,
    p,
    m
  ]), N = bt(() => ({
    ...k,
    editor: n,
    setContentEditableProps: C
  }), [k, n]), R = Xe(
    (A) => {
      n.elementRenderer = A;
    },
    [n]
  );
  return /* @__PURE__ */ P.jsxs(sT.Provider, { value: N, children: [
    /* @__PURE__ */ P.jsx(zU, { ref: R }),
    !n.headless && /* @__PURE__ */ P.jsx(jU, { editor: n, children: /* @__PURE__ */ P.jsxs(
      "div",
      {
        className: lr(
          "bn-container",
          E || "",
          i || ""
        ),
        "data-color-scheme": E,
        ...v,
        ref: e,
        children: [
          /* @__PURE__ */ P.jsx(
            "div",
            {
              "aria-autocomplete": "list",
              "aria-haspopup": "listbox",
              ref: n.mount,
              ...y
            }
          ),
          x
        ]
      }
    ) })
  ] });
}
const VU = Ke.forwardRef(UU);
var Rg, Ed = sy;
if (process.env.NODE_ENV === "production")
  Rg = Ed.createRoot, Ed.hydrateRoot;
else {
  var a9 = Ed.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
  Rg = function(t, e) {
    a9.usingClientEntryPoint = !0;
    try {
      return Ed.createRoot(t, e);
    } finally {
      a9.usingClientEntryPoint = !1;
    }
  };
}
function l9(t, e) {
  let n;
  const i = document.createElement("div");
  let r;
  if (e != null && e.elementRenderer ? e.elementRenderer(
    t((l) => n = l || void 0),
    i
  ) : (r = Rg(i), ay(() => {
    r.render(t((l) => n = l || void 0));
  })), !i.childElementCount)
    return console.warn("ReactInlineContentSpec: renderHTML() failed"), {
      dom: document.createElement("span")
    };
  n == null || n.setAttribute("data-tmp-find", "true");
  const o = i.cloneNode(!0), s = o.firstElementChild, a = o.querySelector(
    "[data-tmp-find]"
  );
  return a == null || a.removeAttribute("data-tmp-find"), r == null || r.unmount(), {
    dom: s,
    contentDOM: a || void 0
  };
}
function Em(t) {
  var e;
  return (
    // Creates `blockContent` element
    /* @__PURE__ */ P.jsx(
      Zj,
      {
        ...Object.fromEntries(
          Object.entries(t.domAttributes || {}).filter(
            ([n]) => n !== "class"
          )
        ),
        className: lr(
          "bn-block-content",
          ((e = t.domAttributes) == null ? void 0 : e.class) || ""
        ),
        "data-content-type": t.blockType,
        ...Object.fromEntries(
          Object.entries(t.blockProps).filter(
            ([n, i]) => !Tv.includes(n) && i !== t.propSchema[n].default
          ).map(([n, i]) => [R1(n), i])
        ),
        "data-file-block": t.isFileBlock === !0 || void 0,
        children: t.children
      }
    )
  );
}
function qh(t, e) {
  const n = Cs({
    name: t.type,
    content: t.content === "inline" ? "inline*" : "",
    group: "blockContent",
    selectable: t.isSelectable ?? !0,
    addAttributes() {
      return TE(t.propSchema);
    },
    parseHTML() {
      return AE(t, e.parse);
    },
    renderHTML({ HTMLAttributes: i }) {
      const r = document.createElement("div");
      return Ec(
        {
          dom: r,
          contentDOM: t.content === "inline" ? r : void 0
        },
        t.type,
        {},
        t.propSchema,
        t.isFileBlock,
        i
      );
    },
    addNodeView() {
      return (i) => {
        const r = rz(
          (o) => {
            var s;
            const a = this.options.editor, l = CE(
              o.getPos,
              a,
              this.editor,
              t.type
            ), c = ((s = this.options.domAttributes) == null ? void 0 : s.blockContent) || {}, f = Qj({}).ref, d = e.render;
            return /* @__PURE__ */ P.jsx(
              Em,
              {
                blockType: l.type,
                blockProps: l.props,
                propSchema: t.propSchema,
                isFileBlock: t.isFileBlock,
                domAttributes: c,
                children: /* @__PURE__ */ P.jsx(
                  d,
                  {
                    block: l,
                    editor: a,
                    contentRef: f
                  }
                )
              }
            );
          },
          {
            className: "bn-react-node-view-renderer"
          }
        )(i);
        return t.isSelectable === !1 && xE(r, this.editor), r;
      };
    }
  });
  return Cv(t, {
    node: n,
    toInternalHTML: (i, r) => {
      var o, s;
      const a = ((o = n.options.domAttributes) == null ? void 0 : o.blockContent) || {}, l = e.render, c = l9(
        (f) => /* @__PURE__ */ P.jsx(
          Em,
          {
            blockType: i.type,
            blockProps: i.props,
            propSchema: t.propSchema,
            domAttributes: a,
            children: /* @__PURE__ */ P.jsx(
              l,
              {
                block: i,
                editor: r,
                contentRef: f
              }
            )
          }
        ),
        r
      );
      return (s = c.contentDOM) == null || s.setAttribute("data-editable", ""), c;
    },
    toExternalHTML: (i, r) => {
      var o, s;
      const a = ((o = n.options.domAttributes) == null ? void 0 : o.blockContent) || {}, l = e.toExternalHTML || e.render, c = l9((f) => /* @__PURE__ */ P.jsx(
        Em,
        {
          blockType: i.type,
          blockProps: i.props,
          propSchema: t.propSchema,
          domAttributes: a,
          children: /* @__PURE__ */ P.jsx(
            l,
            {
              block: i,
              editor: r,
              contentRef: f
            }
          )
        }
      ), r);
      return (s = c.contentDOM) == null || s.setAttribute("data-editable", ""), c;
    }
  });
}
function WU(t) {
  const e = gt();
  We(() => e.onUploadEnd(t), [t, e]);
}
function qU(t) {
  const e = gt();
  We(() => e.onUploadStart(t), [t, e]);
}
function GU(t) {
  const [e, n] = Be(!1);
  return qU((i) => {
    i === t && n(!0);
  }), WU((i) => {
    i === t && n(!1);
  }), e;
}
const Gh = (t) => GU(t.block.id) ? /* @__PURE__ */ P.jsx("div", { className: "bn-file-loading-preview", children: "Loading..." }) : /* @__PURE__ */ P.jsx("div", { className: "bn-file-block-content-wrapper", children: t.block.props.url === "" ? /* @__PURE__ */ P.jsx(KU, { ...t }) : t.block.props.showPreview === !1 ? /* @__PURE__ */ P.jsx(c9, { block: t.block, editor: t.editor, children: /* @__PURE__ */ P.jsx(
  MT,
  {
    block: t.block,
    editor: t.editor
  }
) }) : /* @__PURE__ */ P.jsx(c9, { block: t.block, editor: t.editor, children: t.children }) }), MT = (t) => /* @__PURE__ */ P.jsxs(
  "div",
  {
    className: "bn-file-default-preview",
    contentEditable: !1,
    draggable: !1,
    children: [
      /* @__PURE__ */ P.jsx("div", { className: "bn-file-default-preview-icon", children: /* @__PURE__ */ P.jsx(Rv, { size: 24 }) }),
      /* @__PURE__ */ P.jsx("p", { className: "bn-file-default-preview-name", children: t.block.props.name })
    ]
  }
), c9 = (t) => /* @__PURE__ */ P.jsxs("div", { className: "bn-file-and-caption-wrapper", children: [
  t.children,
  t.block.props.caption && /* @__PURE__ */ P.jsx("p", { className: "bn-file-caption", children: t.block.props.caption })
] }), KU = (t) => {
  const e = Et(), n = Xe(
    (r) => {
      r.preventDefault();
    },
    []
  ), i = Xe(() => {
    t.editor.dispatch(
      t.editor._tiptapEditor.state.tr.setMeta(
        t.editor.filePanel.plugin,
        {
          block: t.block
        }
      )
    );
  }, [t.block, t.editor]);
  return /* @__PURE__ */ P.jsxs(
    "div",
    {
      className: "bn-add-file-button",
      onMouseDown: n,
      onClick: i,
      children: [
        /* @__PURE__ */ P.jsx("div", { className: "bn-add-file-button-icon", children: t.buttonIcon || /* @__PURE__ */ P.jsx(Rv, { size: 24 }) }),
        /* @__PURE__ */ P.jsx("div", { className: "bn-add-file-button-text", children: t.buttonText || e.file_blocks.file.add_button_text })
      ]
    }
  );
}, Kh = (t) => /* @__PURE__ */ P.jsxs("div", { children: [
  t.children,
  /* @__PURE__ */ P.jsx("p", { children: t.caption })
] }), Lv = (t) => /* @__PURE__ */ P.jsxs("figure", { children: [
  t.children,
  /* @__PURE__ */ P.jsx("figcaption", { children: t.caption })
] }), NT = (t) => {
  const [e, n] = Be(!1), [i, r] = Be(void 0);
  We(() => {
    const c = (d) => {
      let u;
      t.block.props.textAlignment === "center" ? i.handleUsed === "left" ? u = i.initialWidth + (i.initialClientX - d.clientX) * 2 : u = i.initialWidth + (d.clientX - i.initialClientX) * 2 : i.handleUsed === "left" ? u = i.initialWidth + i.initialClientX - d.clientX : u = i.initialWidth + d.clientX - i.initialClientX;
      const h = 64;
      u < h ? t.setWidth(h) : u > t.editor.domElement.firstElementChild.clientWidth ? t.setWidth(t.editor.domElement.firstElementChild.clientWidth) : t.setWidth(u);
    }, f = () => {
      r(void 0), t.editor.updateBlock(t.block, {
        props: {
          previewWidth: t.width
        }
      });
    };
    return i && (window.addEventListener("mousemove", c), window.addEventListener("mouseup", f)), () => {
      window.removeEventListener("mousemove", c), window.removeEventListener("mouseup", f);
    };
  }, [t, i]);
  const o = Xe(() => {
    t.editor.isEditable && n(!0);
  }, [t.editor.isEditable]), s = Xe(() => {
    n(!1);
  }, []), a = Xe(
    (c) => {
      c.preventDefault(), r({
        handleUsed: "left",
        initialWidth: t.width,
        initialClientX: c.clientX
      });
    },
    [t.width]
  ), l = Xe(
    (c) => {
      c.preventDefault(), r({
        handleUsed: "right",
        initialWidth: t.width,
        initialClientX: c.clientX
      });
    },
    [t.width]
  );
  return /* @__PURE__ */ P.jsxs(
    "div",
    {
      className: "bn-visual-media-wrapper",
      onMouseEnter: o,
      onMouseLeave: s,
      children: [
        t.children,
        (e || i) && /* @__PURE__ */ P.jsxs(P.Fragment, { children: [
          /* @__PURE__ */ P.jsx(
            "div",
            {
              className: "bn-visual-media-resize-handle",
              style: { left: "4px" },
              onMouseDown: a
            }
          ),
          /* @__PURE__ */ P.jsx(
            "div",
            {
              className: "bn-visual-media-resize-handle",
              style: { right: "4px" },
              onMouseDown: l
            }
          )
        ] })
      ]
    }
  );
};
function Dv(t) {
  const e = gt(), [n, i] = Be("loading"), [r, o] = Be();
  if (We(() => {
    let s = !0;
    return (async () => {
      let a = "";
      i("loading");
      try {
        a = await e.resolveFileUrl(t);
      } catch {
        i("error");
        return;
      }
      s && (i("loaded"), o(a));
    })(), () => {
      s = !1;
    };
  }, [e, t]), n !== "loaded")
    return {
      loadingState: n
    };
  if (!r)
    throw new Error("Finished fetching file but did not get download URL.");
  return {
    loadingState: n,
    downloadUrl: r
  };
}
const YU = (t) => {
  const e = Dv(t.block.props.url);
  return e.loadingState === "loading" ? null : /* @__PURE__ */ P.jsx(
    "audio",
    {
      className: "bn-audio",
      src: e.downloadUrl,
      controls: !0,
      contentEditable: !1,
      draggable: !1
    }
  );
}, JU = (t) => {
  if (!t.block.props.url)
    return /* @__PURE__ */ P.jsx("p", { children: "Add audio" });
  const e = t.block.props.showPreview ? /* @__PURE__ */ P.jsx("audio", { src: t.block.props.url }) : /* @__PURE__ */ P.jsx("a", { href: t.block.props.url, children: t.block.props.name || t.block.props.url });
  return t.block.props.caption ? t.block.props.showPreview ? /* @__PURE__ */ P.jsx(Lv, { caption: t.block.props.caption, children: e }) : /* @__PURE__ */ P.jsx(Kh, { caption: t.block.props.caption, children: e }) : e;
}, XU = (t) => /* @__PURE__ */ P.jsx(
  Gh,
  {
    ...t,
    buttonText: t.editor.dictionary.file_blocks.audio.add_button_text,
    buttonIcon: /* @__PURE__ */ P.jsx(wT, { size: 24 }),
    children: /* @__PURE__ */ P.jsx(YU, { block: t.block, editor: t.editor })
  }
);
qh(LE, {
  render: XU,
  parse: DE,
  toExternalHTML: JU
});
const QU = (t) => {
  if (!t.block.props.url)
    return /* @__PURE__ */ P.jsx("p", { children: "Add file" });
  const e = /* @__PURE__ */ P.jsx("a", { href: t.block.props.url, children: t.block.props.name || t.block.props.url });
  return t.block.props.caption ? /* @__PURE__ */ P.jsx(Kh, { caption: t.block.props.caption, children: e }) : e;
}, ZU = (t) => /* @__PURE__ */ P.jsx(Gh, { ...t, children: /* @__PURE__ */ P.jsx(MT, { block: t.block, editor: t.editor }) });
qh(PE, {
  render: ZU,
  parse: FE,
  toExternalHTML: QU
});
const eV = (t) => {
  const [e, n] = Be(
    Math.min(
      t.block.props.previewWidth,
      t.editor.domElement.firstElementChild.clientWidth
    )
  ), i = Dv(t.block.props.url);
  return i.loadingState === "loading" ? null : /* @__PURE__ */ P.jsx(NT, { ...t, width: e, setWidth: n, children: /* @__PURE__ */ P.jsx(
    "img",
    {
      className: "bn-visual-media",
      src: i.downloadUrl,
      alt: t.block.props.caption || "BlockNote image",
      contentEditable: !1,
      draggable: !1,
      width: e
    }
  ) });
}, tV = (t) => {
  if (!t.block.props.url)
    return /* @__PURE__ */ P.jsx("p", { children: "Add image" });
  const e = t.block.props.showPreview ? /* @__PURE__ */ P.jsx(
    "img",
    {
      src: t.block.props.url,
      alt: t.block.props.name || t.block.props.caption || "BlockNote image",
      width: t.block.props.previewWidth
    }
  ) : /* @__PURE__ */ P.jsx("a", { href: t.block.props.url, children: t.block.props.name || t.block.props.url });
  return t.block.props.caption ? t.block.props.showPreview ? /* @__PURE__ */ P.jsx(Lv, { caption: t.block.props.caption, children: e }) : /* @__PURE__ */ P.jsx(Kh, { caption: t.block.props.caption, children: e }) : e;
}, nV = (t) => /* @__PURE__ */ P.jsx(
  Gh,
  {
    ...t,
    buttonText: t.editor.dictionary.file_blocks.image.add_button_text,
    buttonIcon: /* @__PURE__ */ P.jsx(kT, { size: 24 }),
    children: /* @__PURE__ */ P.jsx(eV, { block: t.block, editor: t.editor })
  }
);
qh(BE, {
  render: nV,
  parse: HE,
  toExternalHTML: tV
});
const iV = (t) => {
  const [e, n] = Be(
    Math.min(
      t.block.props.previewWidth,
      t.editor.domElement.firstElementChild.clientWidth
    )
  ), i = Dv(t.block.props.url);
  return i.loadingState === "loading" ? null : /* @__PURE__ */ P.jsx(NT, { ...t, width: e, setWidth: n, children: /* @__PURE__ */ P.jsx(
    "video",
    {
      className: "bn-visual-media",
      src: i.downloadUrl,
      controls: !0,
      contentEditable: !1,
      draggable: !1,
      width: e
    }
  ) });
}, rV = (t) => {
  if (!t.block.props.url)
    return /* @__PURE__ */ P.jsx("p", { children: "Add video" });
  const e = t.block.props.showPreview ? /* @__PURE__ */ P.jsx("video", { src: t.block.props.url }) : /* @__PURE__ */ P.jsx("a", { href: t.block.props.url, children: t.block.props.name || t.block.props.url });
  return t.block.props.caption ? t.block.props.showPreview ? /* @__PURE__ */ P.jsx(Lv, { caption: t.block.props.caption, children: e }) : /* @__PURE__ */ P.jsx(Kh, { caption: t.block.props.caption, children: e }) : e;
}, oV = (t) => /* @__PURE__ */ P.jsx(
  Gh,
  {
    ...t,
    buttonText: t.editor.dictionary.file_blocks.video.add_button_text,
    buttonIcon: /* @__PURE__ */ P.jsx(Lz, { size: 24 }),
    children: /* @__PURE__ */ P.jsx(iV, { block: t.block, editor: t.editor })
  }
);
qh($E, {
  render: oV,
  parse: jE,
  toExternalHTML: rV
});
const sV = (t = {}, e = []) => bt(() => {
  const n = Fj.create(t);
  return window && (window.ProseMirror = n._tiptapEditor), n;
}, e);
function OT(t, e) {
  const n = t.getBoundingClientRect(), i = e.getBoundingClientRect(), r = n.top < i.top, o = n.bottom > i.bottom;
  return r && o ? "both" : r ? "top" : o ? "bottom" : "none";
}
function Ar(t) {
  return Object.keys(t);
}
function Tm(t) {
  return t && typeof t == "object" && !Array.isArray(t);
}
function Pv(t, e) {
  const n = { ...t }, i = e;
  return Tm(t) && Tm(e) && Object.keys(e).forEach((r) => {
    Tm(i[r]) && r in t ? n[r] = Pv(n[r], i[r]) : n[r] = i[r];
  }), n;
}
function aV(t) {
  return t.replace(/[A-Z]/g, (e) => `-${e.toLowerCase()}`);
}
function lV(t) {
  var e;
  return typeof t != "string" || !t.includes("var(--mantine-scale)") ? t : (e = t.match(/^calc\((.*?)\)$/)) == null ? void 0 : e[1].split("*")[0].trim();
}
function cV(t) {
  const e = lV(t);
  return typeof e == "number" ? e : typeof e == "string" ? e.includes("calc") || e.includes("var") ? e : e.includes("px") ? Number(e.replace("px", "")) : e.includes("rem") ? Number(e.replace("rem", "")) * 16 : e.includes("em") ? Number(e.replace("em", "")) * 16 : Number(e) : NaN;
}
function Cm(t) {
  return t === "0rem" ? "0rem" : `calc(${t} * var(--mantine-scale))`;
}
function RT(t, { shouldScale: e = !1 } = {}) {
  function n(i) {
    if (i === 0 || i === "0")
      return `0${t}`;
    if (typeof i == "number") {
      const r = `${i / 16}${t}`;
      return e ? Cm(r) : r;
    }
    if (typeof i == "string") {
      if (i === "" || i.startsWith("calc(") || i.startsWith("clamp(") || i.includes("rgba("))
        return i;
      if (i.includes(","))
        return i.split(",").map((o) => n(o)).join(",");
      if (i.includes(" "))
        return i.split(" ").map((o) => n(o)).join(" ");
      if (i.includes(t))
        return e ? Cm(i) : i;
      const r = i.replace("px", "");
      if (!Number.isNaN(Number(r))) {
        const o = `${Number(r) / 16}${t}`;
        return e ? Cm(o) : o;
      }
    }
    return i;
  }
  return n;
}
const le = RT("rem", { shouldScale: !0 }), f9 = RT("em");
function Fv(t) {
  return Object.keys(t).reduce((e, n) => (t[n] !== void 0 && (e[n] = t[n]), e), {});
}
function IT(t) {
  if (typeof t == "number")
    return !0;
  if (typeof t == "string") {
    if (t.startsWith("calc(") || t.startsWith("var(") || t.includes(" ") && t.trim() !== "")
      return !0;
    const e = /^[+-]?[0-9]+(\.[0-9]+)?(px|em|rem|ex|ch|lh|rlh|vw|vh|vmin|vmax|vb|vi|svw|svh|lvw|lvh|dvw|dvh|cm|mm|in|pt|pc|q|cqw|cqh|cqi|cqb|cqmin|cqmax|%)?$/;
    return t.trim().split(/\s+/).every((i) => e.test(i));
  }
  return !1;
}
function Df(t) {
  return Array.isArray(t) || t === null ? !1 : typeof t == "object" ? t.type !== R3 : !1;
}
function Bv(t) {
  const e = cr(null);
  return [({ children: r, value: o }) => /* @__PURE__ */ Q.jsx(e.Provider, { value: o, children: r }), () => {
    const r = fr(e);
    if (r === null)
      throw new Error(t);
    return r;
  }];
}
function fV(t = null) {
  const e = cr(t);
  return [({ children: r, value: o }) => /* @__PURE__ */ Q.jsx(e.Provider, { value: o, children: r }), () => fr(e)];
}
function d9(t, e) {
  return (n) => {
    if (typeof n != "string" || n.trim().length === 0)
      throw new Error(e);
    return `${t}-${n}`;
  };
}
function D1(t, e) {
  let n = t;
  for (; (n = n.parentElement) && !n.matches(e); )
    ;
  return n;
}
function dV(t, e, n) {
  for (let i = t - 1; i >= 0; i -= 1)
    if (!e[i].disabled)
      return i;
  if (n) {
    for (let i = e.length - 1; i > -1; i -= 1)
      if (!e[i].disabled)
        return i;
  }
  return t;
}
function uV(t, e, n) {
  for (let i = t + 1; i < e.length; i += 1)
    if (!e[i].disabled)
      return i;
  if (n) {
    for (let i = 0; i < e.length; i += 1)
      if (!e[i].disabled)
        return i;
  }
  return t;
}
function hV(t, e, n) {
  return D1(t, n) === D1(e, n);
}
function LT({
  parentSelector: t,
  siblingSelector: e,
  onKeyDown: n,
  loop: i = !0,
  activateOnFocus: r = !1,
  dir: o = "rtl",
  orientation: s
}) {
  return (a) => {
    var p;
    n == null || n(a);
    const l = Array.from(
      ((p = D1(a.currentTarget, t)) == null ? void 0 : p.querySelectorAll(
        e
      )) || []
    ).filter((m) => hV(a.currentTarget, m, t)), c = l.findIndex((m) => a.currentTarget === m), f = uV(c, l, i), d = dV(c, l, i), u = o === "rtl" ? d : f, h = o === "rtl" ? f : d;
    switch (a.key) {
      case "ArrowRight": {
        s === "horizontal" && (a.stopPropagation(), a.preventDefault(), l[u].focus(), r && l[u].click());
        break;
      }
      case "ArrowLeft": {
        s === "horizontal" && (a.stopPropagation(), a.preventDefault(), l[h].focus(), r && l[h].click());
        break;
      }
      case "ArrowUp": {
        s === "vertical" && (a.stopPropagation(), a.preventDefault(), l[d].focus(), r && l[d].click());
        break;
      }
      case "ArrowDown": {
        s === "vertical" && (a.stopPropagation(), a.preventDefault(), l[f].focus(), r && l[f].click());
        break;
      }
      case "Home": {
        a.stopPropagation(), a.preventDefault(), !l[0].disabled && l[0].focus();
        break;
      }
      case "End": {
        a.stopPropagation(), a.preventDefault();
        const m = l.length - 1;
        !l[m].disabled && l[m].focus();
        break;
      }
    }
  };
}
const pV = {
  app: 100,
  modal: 200,
  popover: 300,
  overlay: 400,
  max: 9999
};
function Pf(t) {
  return pV[t];
}
const mV = () => {
};
function gV(t, e = { active: !0 }) {
  return typeof t != "function" || !e.active ? e.onKeyDown || mV : (n) => {
    var i;
    n.key === "Escape" && (t(n), (i = e.onTrigger) == null || i.call(e));
  };
}
function Kn(t, e = "size", n = !0) {
  if (t !== void 0)
    return IT(t) ? n ? le(t) : t : `var(--${e}-${t})`;
}
function Hv(t) {
  return Kn(t, "mantine-spacing");
}
function Ur(t) {
  return t === void 0 ? "var(--mantine-radius-default)" : Kn(t, "mantine-radius");
}
function Mr(t) {
  return Kn(t, "mantine-font-size");
}
function yV(t) {
  return Kn(t, "mantine-line-height", !1);
}
function vV(t) {
  if (t)
    return Kn(t, "mantine-shadow", !1);
}
function Sr(t, e) {
  return (n) => {
    t == null || t(n), e == null || e(n);
  };
}
function bV(t, e, n) {
  var i;
  return n ? Array.from(
    ((i = D1(n, e)) == null ? void 0 : i.querySelectorAll(t)) || []
  ).findIndex((r) => r === n) : null;
}
function kV() {
  const [t, e] = Be(-1);
  return [t, { setHovered: e, resetHovered: () => e(-1) }];
}
function DT() {
  return `mantine-${Math.random().toString(36).slice(2, 11)}`;
}
const u9 = ["mousedown", "touchstart"];
function wV(t, e, n) {
  const i = wt();
  return We(() => {
    const r = (o) => {
      const { target: s } = o ?? {};
      if (Array.isArray(n)) {
        const a = (s == null ? void 0 : s.hasAttribute("data-ignore-outside-clicks")) || !document.body.contains(s) && s.tagName !== "HTML";
        n.every((c) => !!c && !o.composedPath().includes(c)) && !a && t();
      } else i.current && !i.current.contains(s) && t();
    };
    return (e || u9).forEach((o) => document.addEventListener(o, r)), () => {
      (e || u9).forEach((o) => document.removeEventListener(o, r));
    };
  }, [i, t, n]), i;
}
function _V(t, e) {
  try {
    return t.addEventListener("change", e), () => t.removeEventListener("change", e);
  } catch {
    return t.addListener(e), () => t.removeListener(e);
  }
}
function EV(t, e) {
  return typeof window < "u" && "matchMedia" in window ? window.matchMedia(t).matches : !1;
}
function TV(t, e, { getInitialValueInEffect: n } = {
  getInitialValueInEffect: !0
}) {
  const [i, r] = Be(
    n ? e : EV(t)
  ), o = wt();
  return We(() => {
    if ("matchMedia" in window)
      return o.current = window.matchMedia(t), r(o.current.matches), _V(o.current, (s) => r(s.matches));
  }, [t]), i;
}
const Yh = typeof document < "u" ? oy : We;
function ws(t, e) {
  const n = wt(!1);
  We(
    () => () => {
      n.current = !1;
    },
    []
  ), We(() => {
    if (n.current)
      return t();
    n.current = !0;
  }, e);
}
function CV({ opened: t, shouldReturnFocus: e = !0 }) {
  const n = wt(), i = () => {
    var r;
    n.current && "focus" in n.current && typeof n.current.focus == "function" && ((r = n.current) == null || r.focus({ preventScroll: !0 }));
  };
  return ws(() => {
    let r = -1;
    const o = (s) => {
      s.key === "Tab" && window.clearTimeout(r);
    };
    return document.addEventListener("keydown", o), t ? n.current = document.activeElement : e && (r = window.setTimeout(i, 10)), () => {
      window.clearTimeout(r), document.removeEventListener("keydown", o);
    };
  }, [t, e]), i;
}
function SV(t, e = "body > :not(script)") {
  const n = DT(), i = Array.from(
    document.querySelectorAll(e)
  ).map((r) => {
    var l;
    if ((l = r == null ? void 0 : r.shadowRoot) != null && l.contains(t) || r.contains(t))
      return;
    const o = r.getAttribute("aria-hidden"), s = r.getAttribute("data-hidden"), a = r.getAttribute("data-focus-id");
    return r.setAttribute("data-focus-id", n), o === null || o === "false" ? r.setAttribute("aria-hidden", "true") : !s && !a && r.setAttribute("data-hidden", o), {
      node: r,
      ariaHidden: s || null
    };
  });
  return () => {
    i.forEach((r) => {
      !r || n !== r.node.getAttribute("data-focus-id") || (r.ariaHidden === null ? r.node.removeAttribute("aria-hidden") : r.node.setAttribute("aria-hidden", r.ariaHidden), r.node.removeAttribute("data-focus-id"), r.node.removeAttribute("data-hidden"));
    });
  };
}
const xV = /input|select|textarea|button|object/, PT = "a, input, select, textarea, button, object, [tabindex]";
function AV(t) {
  return process.env.NODE_ENV === "test" ? !1 : t.style.display === "none";
}
function MV(t) {
  if (t.getAttribute("aria-hidden") || t.getAttribute("hidden") || t.getAttribute("type") === "hidden")
    return !1;
  let n = t;
  for (; n && !(n === document.body || n.nodeType === 11); ) {
    if (AV(n))
      return !1;
    n = n.parentNode;
  }
  return !0;
}
function FT(t) {
  let e = t.getAttribute("tabindex");
  return e === null && (e = void 0), parseInt(e, 10);
}
function Ig(t) {
  const e = t.nodeName.toLowerCase(), n = !Number.isNaN(FT(t));
  return /* @ts-expect-error function accepts any html element but if it is a button, it should not be disabled to trigger the condition */ (xV.test(e) && !t.disabled || t instanceof HTMLAnchorElement && t.href || n) && MV(t);
}
function BT(t) {
  const e = FT(t);
  return (Number.isNaN(e) || e >= 0) && Ig(t);
}
function NV(t) {
  return Array.from(t.querySelectorAll(PT)).filter(BT);
}
function OV(t, e) {
  const n = NV(t);
  if (!n.length) {
    e.preventDefault();
    return;
  }
  const i = n[e.shiftKey ? 0 : n.length - 1], r = t.getRootNode();
  let o = i === r.activeElement || t === r.activeElement;
  const s = r.activeElement;
  if (s.tagName === "INPUT" && s.getAttribute("type") === "radio" && (o = n.filter(
    (f) => f.getAttribute("type") === "radio" && f.getAttribute("name") === s.getAttribute("name")
  ).includes(i)), !o)
    return;
  e.preventDefault();
  const l = n[e.shiftKey ? n.length - 1 : 0];
  l && l.focus();
}
function HT(t = !0) {
  const e = wt(), n = wt(null), i = (o) => {
    let s = o.querySelector("[data-autofocus]");
    if (!s) {
      const a = Array.from(o.querySelectorAll(PT));
      s = a.find(BT) || a.find(Ig) || null, !s && Ig(o) && (s = o);
    }
    s ? s.focus({ preventScroll: !0 }) : process.env.NODE_ENV === "development" && console.warn(
      "[@mantine/hooks/use-focus-trap] Failed to find focusable element within provided node",
      o
    );
  }, r = Xe(
    (o) => {
      if (t) {
        if (o === null) {
          n.current && (n.current(), n.current = null);
          return;
        }
        n.current = SV(o), e.current !== o && (o ? (setTimeout(() => {
          o.getRootNode() ? i(o) : process.env.NODE_ENV === "development" && console.warn("[@mantine/hooks/use-focus-trap] Ref node is not part of the dom", o);
        }), e.current = o) : e.current = null);
      }
    },
    [t]
  );
  return We(() => {
    if (!t)
      return;
    e.current && setTimeout(() => i(e.current));
    const o = (s) => {
      s.key === "Tab" && e.current && OV(e.current, s);
    };
    return document.addEventListener("keydown", o), () => {
      document.removeEventListener("keydown", o), n.current && n.current();
    };
  }, [t]), r;
}
const RV = Ke.useId || (() => {
});
function IV() {
  const t = RV();
  return t ? `mantine-${t.replace(/:/g, "")}` : "";
}
function Jh(t) {
  const e = IV(), [n, i] = Be(e);
  return Yh(() => {
    i(DT());
  }, []), typeof t == "string" ? t : typeof window > "u" ? e : n;
}
function $v(t, e) {
  typeof t == "function" ? t(e) : typeof t == "object" && t !== null && "current" in t && (t.current = e);
}
function Ff(...t) {
  return (e) => {
    t.forEach((n) => $v(n, e));
  };
}
function So(...t) {
  return Xe(Ff(...t), t);
}
function Xh({
  value: t,
  defaultValue: e,
  finalValue: n,
  onChange: i = () => {
  }
}) {
  const [r, o] = Be(
    e !== void 0 ? e : n
  ), s = (a, ...l) => {
    o(a), i == null || i(a, ...l);
  };
  return t !== void 0 ? [t, i, !0] : [r, s, !1];
}
function LV(t, e) {
  return TV("(prefers-reduced-motion: reduce)", t, e);
}
function DV(t) {
  return t.currentTarget instanceof HTMLElement && t.relatedTarget instanceof HTMLElement ? t.currentTarget.contains(t.relatedTarget) : !1;
}
function PV({
  onBlur: t,
  onFocus: e
} = {}) {
  const n = wt(), [i, r] = Be(!1), o = wt(!1), s = (c) => {
    r(c), o.current = c;
  }, a = (c) => {
    o.current || (s(!0), e == null || e(c));
  }, l = (c) => {
    o.current && !DV(c) && (s(!1), t == null || t(c));
  };
  return We(() => {
    if (n.current)
      return n.current.addEventListener("focusin", a), n.current.addEventListener("focusout", l), () => {
        var c, f;
        (c = n.current) == null || c.removeEventListener("focusin", a), (f = n.current) == null || f.removeEventListener("focusout", l);
      };
  }, [a, l]), { ref: n, focused: i };
}
function $T(t) {
  var e, n, i = "";
  if (typeof t == "string" || typeof t == "number") i += t;
  else if (typeof t == "object") if (Array.isArray(t)) {
    var r = t.length;
    for (e = 0; e < r; e++) t[e] && (n = $T(t[e])) && (i && (i += " "), i += n);
  } else for (n in t) t[n] && (i && (i += " "), i += n);
  return i;
}
function xo() {
  for (var t, e, n = 0, i = "", r = arguments.length; n < r; n++) (t = arguments[n]) && (e = $T(t)) && (i && (i += " "), i += e);
  return i;
}
const FV = {};
function BV(t) {
  const e = {};
  return t.forEach((n) => {
    Object.entries(n).forEach(([i, r]) => {
      e[i] ? e[i] = xo(e[i], r) : e[i] = r;
    });
  }), e;
}
function Qh({ theme: t, classNames: e, props: n, stylesCtx: i }) {
  const o = (Array.isArray(e) ? e : [e]).map(
    (s) => typeof s == "function" ? s(t, n, i) : s || FV
  );
  return BV(o);
}
function P1({ theme: t, styles: e, props: n, stylesCtx: i }) {
  return (Array.isArray(e) ? e : [e]).reduce((o, s) => typeof s == "function" ? { ...o, ...s(t, n, i) } : { ...o, ...s }, {});
}
const jT = cr(null);
function _a() {
  const t = fr(jT);
  if (!t)
    throw new Error("[@mantine/core] MantineProvider was not found in tree");
  return t;
}
function HV() {
  return _a().cssVariablesResolver;
}
function $V() {
  return _a().classNamesPrefix;
}
function jv() {
  return _a().getStyleNonce;
}
function jV() {
  return _a().withStaticClasses;
}
function zV() {
  return _a().headless;
}
function UV() {
  var t;
  return (t = _a().stylesTransform) == null ? void 0 : t.sx;
}
function VV() {
  var t;
  return (t = _a().stylesTransform) == null ? void 0 : t.styles;
}
function WV(t) {
  return /^#?([0-9A-F]{3}){1,2}([0-9A-F]{2})?$/i.test(t);
}
function qV(t) {
  let e = t.replace("#", "");
  if (e.length === 3) {
    const s = e.split("");
    e = [
      s[0],
      s[0],
      s[1],
      s[1],
      s[2],
      s[2]
    ].join("");
  }
  if (e.length === 8) {
    const s = parseInt(e.slice(6, 8), 16) / 255;
    return {
      r: parseInt(e.slice(0, 2), 16),
      g: parseInt(e.slice(2, 4), 16),
      b: parseInt(e.slice(4, 6), 16),
      a: s
    };
  }
  const n = parseInt(e, 16), i = n >> 16 & 255, r = n >> 8 & 255, o = n & 255;
  return {
    r: i,
    g: r,
    b: o,
    a: 1
  };
}
function GV(t) {
  const [e, n, i, r] = t.replace(/[^0-9,./]/g, "").split(/[/,]/).map(Number);
  return { r: e, g: n, b: i, a: r || 1 };
}
function KV(t) {
  const e = /^hsla?\(\s*(\d+)\s*,\s*(\d+%)\s*,\s*(\d+%)\s*(,\s*(0?\.\d+|\d+(\.\d+)?))?\s*\)$/i, n = t.match(e);
  if (!n)
    return {
      r: 0,
      g: 0,
      b: 0,
      a: 1
    };
  const i = parseInt(n[1], 10), r = parseInt(n[2], 10) / 100, o = parseInt(n[3], 10) / 100, s = n[5] ? parseFloat(n[5]) : void 0, a = (1 - Math.abs(2 * o - 1)) * r, l = i / 60, c = a * (1 - Math.abs(l % 2 - 1)), f = o - a / 2;
  let d, u, h;
  return l >= 0 && l < 1 ? (d = a, u = c, h = 0) : l >= 1 && l < 2 ? (d = c, u = a, h = 0) : l >= 2 && l < 3 ? (d = 0, u = a, h = c) : l >= 3 && l < 4 ? (d = 0, u = c, h = a) : l >= 4 && l < 5 ? (d = c, u = 0, h = a) : (d = a, u = 0, h = c), {
    r: Math.round((d + f) * 255),
    g: Math.round((u + f) * 255),
    b: Math.round((h + f) * 255),
    a: s || 1
  };
}
function zv(t) {
  return WV(t) ? qV(t) : t.startsWith("rgb") ? GV(t) : t.startsWith("hsl") ? KV(t) : {
    r: 0,
    g: 0,
    b: 0,
    a: 1
  };
}
function Td(t, e) {
  if (t.startsWith("var("))
    return `color-mix(in srgb, ${t}, black ${e * 100}%)`;
  const { r: n, g: i, b: r, a: o } = zv(t), s = 1 - e, a = (l) => Math.round(l * s);
  return `rgba(${a(n)}, ${a(i)}, ${a(r)}, ${o})`;
}
function yf(t, e) {
  return typeof t.primaryShade == "number" ? t.primaryShade : e === "dark" ? t.primaryShade.dark : t.primaryShade.light;
}
function Sm(t) {
  return t <= 0.03928 ? t / 12.92 : ((t + 0.055) / 1.055) ** 2.4;
}
function YV(t) {
  const e = t.match(/oklch\((.*?)%\s/);
  return e ? parseFloat(e[1]) : null;
}
function JV(t) {
  if (t.startsWith("oklch("))
    return (YV(t) || 0) / 100;
  const { r: e, g: n, b: i } = zv(t), r = e / 255, o = n / 255, s = i / 255, a = Sm(r), l = Sm(o), c = Sm(s);
  return 0.2126 * a + 0.7152 * l + 0.0722 * c;
}
function ac(t, e = 0.179) {
  return t.startsWith("var(") ? !1 : JV(t) > e;
}
function Hl({
  color: t,
  theme: e,
  colorScheme: n
}) {
  if (typeof t != "string")
    throw new Error(
      `[@mantine/core] Failed to parse color. Expected color to be a string, instead got ${typeof t}`
    );
  if (t === "bright")
    return {
      color: t,
      value: n === "dark" ? e.white : e.black,
      shade: void 0,
      isThemeColor: !1,
      isLight: ac(
        n === "dark" ? e.white : e.black,
        e.luminanceThreshold
      ),
      variable: "--mantine-color-bright"
    };
  if (t === "dimmed")
    return {
      color: t,
      value: n === "dark" ? e.colors.dark[2] : e.colors.gray[7],
      shade: void 0,
      isThemeColor: !1,
      isLight: ac(
        n === "dark" ? e.colors.dark[2] : e.colors.gray[6],
        e.luminanceThreshold
      ),
      variable: "--mantine-color-dimmed"
    };
  if (t === "white" || t === "black")
    return {
      color: t,
      value: t === "white" ? e.white : e.black,
      shade: void 0,
      isThemeColor: !1,
      isLight: ac(
        t === "white" ? e.white : e.black,
        e.luminanceThreshold
      ),
      variable: `--mantine-color-${t}`
    };
  const [i, r] = t.split("."), o = r ? Number(r) : void 0, s = i in e.colors;
  if (s) {
    const a = o !== void 0 ? e.colors[i][o] : e.colors[i][yf(e, n || "light")];
    return {
      color: i,
      value: a,
      shade: o,
      isThemeColor: s,
      isLight: ac(a, e.luminanceThreshold),
      variable: r ? `--mantine-color-${i}-${o}` : `--mantine-color-${i}-filled`
    };
  }
  return {
    color: t,
    value: t,
    isThemeColor: s,
    isLight: ac(t, e.luminanceThreshold),
    shade: o,
    variable: void 0
  };
}
function wo(t, e) {
  const n = Hl({ color: t || e.primaryColor, theme: e });
  return n.variable ? `var(${n.variable})` : t;
}
function Lg(t, e) {
  const n = {
    from: (t == null ? void 0 : t.from) || e.defaultGradient.from,
    to: (t == null ? void 0 : t.to) || e.defaultGradient.to,
    deg: (t == null ? void 0 : t.deg) || e.defaultGradient.deg || 0
  }, i = wo(n.from, e), r = wo(n.to, e);
  return `linear-gradient(${n.deg}deg, ${i} 0%, ${r} 100%)`;
}
function wr(t, e) {
  if (typeof t != "string" || e > 1 || e < 0)
    return "rgba(0, 0, 0, 1)";
  if (t.startsWith("var(")) {
    const o = (1 - e) * 100;
    return `color-mix(in srgb, ${t}, transparent ${o}%)`;
  }
  if (t.startsWith("oklch"))
    return t.includes("/") ? t.replace(/\/\s*[\d.]+\s*\)/, `/ ${e})`) : t.replace(")", ` / ${e})`);
  const { r: n, g: i, b: r } = zv(t);
  return `rgba(${n}, ${i}, ${r}, ${e})`;
}
const Oa = wr, XV = ({
  color: t,
  theme: e,
  variant: n,
  gradient: i,
  autoContrast: r
}) => {
  const o = Hl({ color: t, theme: e }), s = typeof r == "boolean" ? r : e.autoContrast;
  if (n === "filled") {
    const a = s && o.isLight ? "var(--mantine-color-black)" : "var(--mantine-color-white)";
    return o.isThemeColor ? o.shade === void 0 ? {
      background: `var(--mantine-color-${t}-filled)`,
      hover: `var(--mantine-color-${t}-filled-hover)`,
      color: a,
      border: `${le(1)} solid transparent`
    } : {
      background: `var(--mantine-color-${o.color}-${o.shade})`,
      hover: `var(--mantine-color-${o.color}-${o.shade === 9 ? 8 : o.shade + 1})`,
      color: a,
      border: `${le(1)} solid transparent`
    } : {
      background: t,
      hover: Td(t, 0.1),
      color: a,
      border: `${le(1)} solid transparent`
    };
  }
  if (n === "light") {
    if (o.isThemeColor) {
      if (o.shade === void 0)
        return {
          background: `var(--mantine-color-${t}-light)`,
          hover: `var(--mantine-color-${t}-light-hover)`,
          color: `var(--mantine-color-${t}-light-color)`,
          border: `${le(1)} solid transparent`
        };
      const a = e.colors[o.color][o.shade];
      return {
        background: wr(a, 0.1),
        hover: wr(a, 0.12),
        color: `var(--mantine-color-${o.color}-${Math.min(o.shade, 6)})`,
        border: `${le(1)} solid transparent`
      };
    }
    return {
      background: wr(t, 0.1),
      hover: wr(t, 0.12),
      color: t,
      border: `${le(1)} solid transparent`
    };
  }
  if (n === "outline")
    return o.isThemeColor ? o.shade === void 0 ? {
      background: "transparent",
      hover: `var(--mantine-color-${t}-outline-hover)`,
      color: `var(--mantine-color-${t}-outline)`,
      border: `${le(1)} solid var(--mantine-color-${t}-outline)`
    } : {
      background: "transparent",
      hover: wr(e.colors[o.color][o.shade], 0.05),
      color: `var(--mantine-color-${o.color}-${o.shade})`,
      border: `${le(1)} solid var(--mantine-color-${o.color}-${o.shade})`
    } : {
      background: "transparent",
      hover: wr(t, 0.05),
      color: t,
      border: `${le(1)} solid ${t}`
    };
  if (n === "subtle") {
    if (o.isThemeColor) {
      if (o.shade === void 0)
        return {
          background: "transparent",
          hover: `var(--mantine-color-${t}-light-hover)`,
          color: `var(--mantine-color-${t}-light-color)`,
          border: `${le(1)} solid transparent`
        };
      const a = e.colors[o.color][o.shade];
      return {
        background: "transparent",
        hover: wr(a, 0.12),
        color: `var(--mantine-color-${o.color}-${Math.min(o.shade, 6)})`,
        border: `${le(1)} solid transparent`
      };
    }
    return {
      background: "transparent",
      hover: wr(t, 0.12),
      color: t,
      border: `${le(1)} solid transparent`
    };
  }
  return n === "transparent" ? o.isThemeColor ? o.shade === void 0 ? {
    background: "transparent",
    hover: "transparent",
    color: `var(--mantine-color-${t}-light-color)`,
    border: `${le(1)} solid transparent`
  } : {
    background: "transparent",
    hover: "transparent",
    color: `var(--mantine-color-${o.color}-${Math.min(o.shade, 6)})`,
    border: `${le(1)} solid transparent`
  } : {
    background: "transparent",
    hover: "transparent",
    color: t,
    border: `${le(1)} solid transparent`
  } : n === "white" ? o.isThemeColor ? o.shade === void 0 ? {
    background: "var(--mantine-color-white)",
    hover: Td(e.white, 0.01),
    color: `var(--mantine-color-${t}-filled)`,
    border: `${le(1)} solid transparent`
  } : {
    background: "var(--mantine-color-white)",
    hover: Td(e.white, 0.01),
    color: `var(--mantine-color-${o.color}-${o.shade})`,
    border: `${le(1)} solid transparent`
  } : {
    background: "var(--mantine-color-white)",
    hover: Td(e.white, 0.01),
    color: t,
    border: `${le(1)} solid transparent`
  } : n === "gradient" ? {
    background: Lg(i, e),
    hover: Lg(i, e),
    color: "var(--mantine-color-white)",
    border: "none"
  } : n === "default" ? {
    background: "var(--mantine-color-default)",
    hover: "var(--mantine-color-default-hover)",
    color: "var(--mantine-color-default-color)",
    border: `${le(1)} solid var(--mantine-color-default-border)`
  } : {};
}, QV = {
  dark: [
    "#C9C9C9",
    "#b8b8b8",
    "#828282",
    "#696969",
    "#424242",
    "#3b3b3b",
    "#2e2e2e",
    "#242424",
    "#1f1f1f",
    "#141414"
  ],
  gray: [
    "#f8f9fa",
    "#f1f3f5",
    "#e9ecef",
    "#dee2e6",
    "#ced4da",
    "#adb5bd",
    "#868e96",
    "#495057",
    "#343a40",
    "#212529"
  ],
  red: [
    "#fff5f5",
    "#ffe3e3",
    "#ffc9c9",
    "#ffa8a8",
    "#ff8787",
    "#ff6b6b",
    "#fa5252",
    "#f03e3e",
    "#e03131",
    "#c92a2a"
  ],
  pink: [
    "#fff0f6",
    "#ffdeeb",
    "#fcc2d7",
    "#faa2c1",
    "#f783ac",
    "#f06595",
    "#e64980",
    "#d6336c",
    "#c2255c",
    "#a61e4d"
  ],
  grape: [
    "#f8f0fc",
    "#f3d9fa",
    "#eebefa",
    "#e599f7",
    "#da77f2",
    "#cc5de8",
    "#be4bdb",
    "#ae3ec9",
    "#9c36b5",
    "#862e9c"
  ],
  violet: [
    "#f3f0ff",
    "#e5dbff",
    "#d0bfff",
    "#b197fc",
    "#9775fa",
    "#845ef7",
    "#7950f2",
    "#7048e8",
    "#6741d9",
    "#5f3dc4"
  ],
  indigo: [
    "#edf2ff",
    "#dbe4ff",
    "#bac8ff",
    "#91a7ff",
    "#748ffc",
    "#5c7cfa",
    "#4c6ef5",
    "#4263eb",
    "#3b5bdb",
    "#364fc7"
  ],
  blue: [
    "#e7f5ff",
    "#d0ebff",
    "#a5d8ff",
    "#74c0fc",
    "#4dabf7",
    "#339af0",
    "#228be6",
    "#1c7ed6",
    "#1971c2",
    "#1864ab"
  ],
  cyan: [
    "#e3fafc",
    "#c5f6fa",
    "#99e9f2",
    "#66d9e8",
    "#3bc9db",
    "#22b8cf",
    "#15aabf",
    "#1098ad",
    "#0c8599",
    "#0b7285"
  ],
  teal: [
    "#e6fcf5",
    "#c3fae8",
    "#96f2d7",
    "#63e6be",
    "#38d9a9",
    "#20c997",
    "#12b886",
    "#0ca678",
    "#099268",
    "#087f5b"
  ],
  green: [
    "#ebfbee",
    "#d3f9d8",
    "#b2f2bb",
    "#8ce99a",
    "#69db7c",
    "#51cf66",
    "#40c057",
    "#37b24d",
    "#2f9e44",
    "#2b8a3e"
  ],
  lime: [
    "#f4fce3",
    "#e9fac8",
    "#d8f5a2",
    "#c0eb75",
    "#a9e34b",
    "#94d82d",
    "#82c91e",
    "#74b816",
    "#66a80f",
    "#5c940d"
  ],
  yellow: [
    "#fff9db",
    "#fff3bf",
    "#ffec99",
    "#ffe066",
    "#ffd43b",
    "#fcc419",
    "#fab005",
    "#f59f00",
    "#f08c00",
    "#e67700"
  ],
  orange: [
    "#fff4e6",
    "#ffe8cc",
    "#ffd8a8",
    "#ffc078",
    "#ffa94d",
    "#ff922b",
    "#fd7e14",
    "#f76707",
    "#e8590c",
    "#d9480f"
  ]
}, h9 = "-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji", Uv = {
  scale: 1,
  fontSmoothing: !0,
  focusRing: "auto",
  white: "#fff",
  black: "#000",
  colors: QV,
  primaryShade: { light: 6, dark: 8 },
  primaryColor: "blue",
  variantColorResolver: XV,
  autoContrast: !1,
  luminanceThreshold: 0.3,
  fontFamily: h9,
  fontFamilyMonospace: "ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace",
  respectReducedMotion: !1,
  cursorType: "default",
  defaultGradient: { from: "blue", to: "cyan", deg: 45 },
  defaultRadius: "sm",
  activeClassName: "mantine-active",
  focusClassName: "",
  headings: {
    fontFamily: h9,
    fontWeight: "700",
    textWrap: "wrap",
    sizes: {
      h1: { fontSize: le(34), lineHeight: "1.3" },
      h2: { fontSize: le(26), lineHeight: "1.35" },
      h3: { fontSize: le(22), lineHeight: "1.4" },
      h4: { fontSize: le(18), lineHeight: "1.45" },
      h5: { fontSize: le(16), lineHeight: "1.5" },
      h6: { fontSize: le(14), lineHeight: "1.5" }
    }
  },
  fontSizes: {
    xs: le(12),
    sm: le(14),
    md: le(16),
    lg: le(18),
    xl: le(20)
  },
  lineHeights: {
    xs: "1.4",
    sm: "1.45",
    md: "1.55",
    lg: "1.6",
    xl: "1.65"
  },
  radius: {
    xs: le(2),
    sm: le(4),
    md: le(8),
    lg: le(16),
    xl: le(32)
  },
  spacing: {
    xs: le(10),
    sm: le(12),
    md: le(16),
    lg: le(20),
    xl: le(32)
  },
  breakpoints: {
    xs: "36em",
    sm: "48em",
    md: "62em",
    lg: "75em",
    xl: "88em"
  },
  shadows: {
    xs: `0 ${le(1)} ${le(3)} rgba(0, 0, 0, 0.05), 0 ${le(1)} ${le(2)} rgba(0, 0, 0, 0.1)`,
    sm: `0 ${le(1)} ${le(3)} rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05) 0 ${le(10)} ${le(
      15
    )} ${le(-5)}, rgba(0, 0, 0, 0.04) 0 ${le(7)} ${le(7)} ${le(-5)}`,
    md: `0 ${le(1)} ${le(3)} rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05) 0 ${le(20)} ${le(
      25
    )} ${le(-5)}, rgba(0, 0, 0, 0.04) 0 ${le(10)} ${le(10)} ${le(-5)}`,
    lg: `0 ${le(1)} ${le(3)} rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05) 0 ${le(28)} ${le(
      23
    )} ${le(-7)}, rgba(0, 0, 0, 0.04) 0 ${le(12)} ${le(12)} ${le(-7)}`,
    xl: `0 ${le(1)} ${le(3)} rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05) 0 ${le(36)} ${le(
      28
    )} ${le(-7)}, rgba(0, 0, 0, 0.04) 0 ${le(17)} ${le(17)} ${le(-7)}`
  },
  other: {},
  components: {}
};
function p9(t) {
  return t === "auto" || t === "dark" || t === "light";
}
function ZV({
  key: t = "mantine-color-scheme-value"
} = {}) {
  let e;
  return {
    get: (n) => {
      if (typeof window > "u")
        return n;
      try {
        const i = window.localStorage.getItem(t);
        return p9(i) ? i : n;
      } catch {
        return n;
      }
    },
    set: (n) => {
      try {
        window.localStorage.setItem(t, n);
      } catch (i) {
        console.warn(
          "[@mantine/core] Local storage color scheme manager was unable to save color scheme.",
          i
        );
      }
    },
    subscribe: (n) => {
      e = (i) => {
        i.storageArea === window.localStorage && i.key === t && p9(i.newValue) && n(i.newValue);
      }, window.addEventListener("storage", e);
    },
    unsubscribe: () => {
      window.removeEventListener("storage", e);
    },
    clear: () => {
      window.localStorage.removeItem(t);
    }
  };
}
const eW = "[@mantine/core] MantineProvider: Invalid theme.primaryColor, it accepts only key of theme.colors, learn more – https://mantine.dev/theming/colors/#primary-color", m9 = "[@mantine/core] MantineProvider: Invalid theme.primaryShade, it accepts only 0-9 integers or an object { light: 0-9, dark: 0-9 }";
function xm(t) {
  return t < 0 || t > 9 ? !1 : parseInt(t.toString(), 10) === t;
}
function g9(t) {
  if (!(t.primaryColor in t.colors))
    throw new Error(eW);
  if (typeof t.primaryShade == "object" && (!xm(t.primaryShade.dark) || !xm(t.primaryShade.light)))
    throw new Error(m9);
  if (typeof t.primaryShade == "number" && !xm(t.primaryShade))
    throw new Error(m9);
}
function tW(t, e) {
  var i;
  if (!e)
    return g9(t), t;
  const n = Pv(t, e);
  return e.fontFamily && !((i = e.headings) != null && i.fontFamily) && (n.headings.fontFamily = e.fontFamily), g9(n), n;
}
const Vv = cr(null), nW = () => fr(Vv) || Uv;
function Hi() {
  const t = fr(Vv);
  if (!t)
    throw new Error(
      "@mantine/core: MantineProvider was not found in component tree, make sure you have it in your app"
    );
  return t;
}
function zT({
  theme: t,
  children: e,
  inherit: n = !0
}) {
  const i = nW(), r = bt(
    () => tW(n ? i : Uv, t),
    [t, i, n]
  );
  return /* @__PURE__ */ Q.jsx(Vv.Provider, { value: r, children: e });
}
zT.displayName = "@mantine/core/MantineThemeProvider";
function iW() {
  const t = Hi(), e = jv(), n = Ar(t.breakpoints).reduce((i, r) => {
    const o = t.breakpoints[r].includes("px"), s = cV(t.breakpoints[r]), a = o ? `${s - 0.1}px` : f9(s - 0.1), l = o ? `${s}px` : f9(s);
    return `${i}@media (max-width: ${a}) {.mantine-visible-from-${r} {display: none !important;}}@media (min-width: ${l}) {.mantine-hidden-from-${r} {display: none !important;}}`;
  }, "");
  return /* @__PURE__ */ Q.jsx(
    "style",
    {
      "data-mantine-styles": "classes",
      nonce: e == null ? void 0 : e(),
      dangerouslySetInnerHTML: { __html: n }
    }
  );
}
function Am(t) {
  return Object.entries(t).map(([e, n]) => `${e}: ${n};`).join("");
}
function lc(t, e) {
  return (Array.isArray(t) ? t : [t]).reduce((i, r) => `${r}{${i}}`, e);
}
function rW(t, e) {
  const n = Am(t.variables), i = n ? lc(e, n) : "", r = Am(t.dark), o = Am(t.light), s = r ? lc(e === ":host" ? `${e}([data-mantine-color-scheme="dark"])` : `${e}[data-mantine-color-scheme="dark"]`, r) : "", a = o ? lc(e === ":host" ? `${e}([data-mantine-color-scheme="light"])` : `${e}[data-mantine-color-scheme="light"]`, o) : "";
  return `${i}${s}${a}`;
}
function UT({ color: t, theme: e, autoContrast: n }) {
  return (typeof n == "boolean" ? n : e.autoContrast) && Hl({ color: t || e.primaryColor, theme: e }).isLight ? "var(--mantine-color-black)" : "var(--mantine-color-white)";
}
function y9(t, e) {
  return UT({
    color: t.colors[t.primaryColor][yf(t, e)],
    theme: t,
    autoContrast: null
  });
}
function Cd({
  theme: t,
  color: e,
  colorScheme: n,
  name: i = e,
  withColorValues: r = !0
}) {
  if (!t.colors[e])
    return {};
  if (n === "light") {
    const a = yf(t, "light"), l = {
      [`--mantine-color-${i}-text`]: `var(--mantine-color-${i}-filled)`,
      [`--mantine-color-${i}-filled`]: `var(--mantine-color-${i}-${a})`,
      [`--mantine-color-${i}-filled-hover`]: `var(--mantine-color-${i}-${a === 9 ? 8 : a + 1})`,
      [`--mantine-color-${i}-light`]: Oa(t.colors[e][a], 0.1),
      [`--mantine-color-${i}-light-hover`]: Oa(t.colors[e][a], 0.12),
      [`--mantine-color-${i}-light-color`]: `var(--mantine-color-${i}-${a})`,
      [`--mantine-color-${i}-outline`]: `var(--mantine-color-${i}-${a})`,
      [`--mantine-color-${i}-outline-hover`]: Oa(t.colors[e][a], 0.05)
    };
    return r ? {
      [`--mantine-color-${i}-0`]: t.colors[e][0],
      [`--mantine-color-${i}-1`]: t.colors[e][1],
      [`--mantine-color-${i}-2`]: t.colors[e][2],
      [`--mantine-color-${i}-3`]: t.colors[e][3],
      [`--mantine-color-${i}-4`]: t.colors[e][4],
      [`--mantine-color-${i}-5`]: t.colors[e][5],
      [`--mantine-color-${i}-6`]: t.colors[e][6],
      [`--mantine-color-${i}-7`]: t.colors[e][7],
      [`--mantine-color-${i}-8`]: t.colors[e][8],
      [`--mantine-color-${i}-9`]: t.colors[e][9],
      ...l
    } : l;
  }
  const o = yf(t, "dark"), s = {
    [`--mantine-color-${i}-text`]: `var(--mantine-color-${i}-4)`,
    [`--mantine-color-${i}-filled`]: `var(--mantine-color-${i}-${o})`,
    [`--mantine-color-${i}-filled-hover`]: `var(--mantine-color-${i}-${o === 9 ? 8 : o + 1})`,
    [`--mantine-color-${i}-light`]: Oa(
      t.colors[e][Math.max(0, o - 2)],
      0.15
    ),
    [`--mantine-color-${i}-light-hover`]: Oa(
      t.colors[e][Math.max(0, o - 2)],
      0.2
    ),
    [`--mantine-color-${i}-light-color`]: `var(--mantine-color-${i}-${Math.max(o - 5, 0)})`,
    [`--mantine-color-${i}-outline`]: `var(--mantine-color-${i}-${Math.max(o - 4, 0)})`,
    [`--mantine-color-${i}-outline-hover`]: Oa(
      t.colors[e][Math.max(o - 4, 0)],
      0.05
    )
  };
  return r ? {
    [`--mantine-color-${i}-0`]: t.colors[e][0],
    [`--mantine-color-${i}-1`]: t.colors[e][1],
    [`--mantine-color-${i}-2`]: t.colors[e][2],
    [`--mantine-color-${i}-3`]: t.colors[e][3],
    [`--mantine-color-${i}-4`]: t.colors[e][4],
    [`--mantine-color-${i}-5`]: t.colors[e][5],
    [`--mantine-color-${i}-6`]: t.colors[e][6],
    [`--mantine-color-${i}-7`]: t.colors[e][7],
    [`--mantine-color-${i}-8`]: t.colors[e][8],
    [`--mantine-color-${i}-9`]: t.colors[e][9],
    ...s
  } : s;
}
function oW(t) {
  return !!t && typeof t == "object" && "mantine-virtual-color" in t;
}
function Ra(t, e, n) {
  Ar(e).forEach(
    (i) => Object.assign(t, { [`--mantine-${n}-${i}`]: e[i] })
  );
}
const VT = (t) => {
  const e = yf(t, "light"), n = t.defaultRadius in t.radius ? t.radius[t.defaultRadius] : le(t.defaultRadius), i = {
    variables: {
      "--mantine-scale": t.scale.toString(),
      "--mantine-cursor-type": t.cursorType,
      "--mantine-color-scheme": "light dark",
      "--mantine-webkit-font-smoothing": t.fontSmoothing ? "antialiased" : "unset",
      "--mantine-moz-font-smoothing": t.fontSmoothing ? "grayscale" : "unset",
      "--mantine-color-white": t.white,
      "--mantine-color-black": t.black,
      "--mantine-line-height": t.lineHeights.md,
      "--mantine-font-family": t.fontFamily,
      "--mantine-font-family-monospace": t.fontFamilyMonospace,
      "--mantine-font-family-headings": t.headings.fontFamily,
      "--mantine-heading-font-weight": t.headings.fontWeight,
      "--mantine-heading-text-wrap": t.headings.textWrap,
      "--mantine-radius-default": n,
      // Primary colors
      "--mantine-primary-color-filled": `var(--mantine-color-${t.primaryColor}-filled)`,
      "--mantine-primary-color-filled-hover": `var(--mantine-color-${t.primaryColor}-filled-hover)`,
      "--mantine-primary-color-light": `var(--mantine-color-${t.primaryColor}-light)`,
      "--mantine-primary-color-light-hover": `var(--mantine-color-${t.primaryColor}-light-hover)`,
      "--mantine-primary-color-light-color": `var(--mantine-color-${t.primaryColor}-light-color)`
    },
    light: {
      "--mantine-primary-color-contrast": y9(t, "light"),
      "--mantine-color-bright": "var(--mantine-color-black)",
      "--mantine-color-text": t.black,
      "--mantine-color-body": t.white,
      "--mantine-color-error": "var(--mantine-color-red-6)",
      "--mantine-color-placeholder": "var(--mantine-color-gray-5)",
      "--mantine-color-anchor": `var(--mantine-color-${t.primaryColor}-${e})`,
      "--mantine-color-default": "var(--mantine-color-white)",
      "--mantine-color-default-hover": "var(--mantine-color-gray-0)",
      "--mantine-color-default-color": "var(--mantine-color-black)",
      "--mantine-color-default-border": "var(--mantine-color-gray-4)",
      "--mantine-color-dimmed": "var(--mantine-color-gray-6)"
    },
    dark: {
      "--mantine-primary-color-contrast": y9(t, "dark"),
      "--mantine-color-bright": "var(--mantine-color-white)",
      "--mantine-color-text": "var(--mantine-color-dark-0)",
      "--mantine-color-body": "var(--mantine-color-dark-7)",
      "--mantine-color-error": "var(--mantine-color-red-8)",
      "--mantine-color-placeholder": "var(--mantine-color-dark-3)",
      "--mantine-color-anchor": `var(--mantine-color-${t.primaryColor}-4)`,
      "--mantine-color-default": "var(--mantine-color-dark-6)",
      "--mantine-color-default-hover": "var(--mantine-color-dark-5)",
      "--mantine-color-default-color": "var(--mantine-color-white)",
      "--mantine-color-default-border": "var(--mantine-color-dark-4)",
      "--mantine-color-dimmed": "var(--mantine-color-dark-2)"
    }
  };
  Ra(i.variables, t.breakpoints, "breakpoint"), Ra(i.variables, t.spacing, "spacing"), Ra(i.variables, t.fontSizes, "font-size"), Ra(i.variables, t.lineHeights, "line-height"), Ra(i.variables, t.shadows, "shadow"), Ra(i.variables, t.radius, "radius"), t.colors[t.primaryColor].forEach((o, s) => {
    i.variables[`--mantine-primary-color-${s}`] = `var(--mantine-color-${t.primaryColor}-${s})`;
  }), Ar(t.colors).forEach((o) => {
    const s = t.colors[o];
    if (oW(s)) {
      Object.assign(
        i.light,
        Cd({
          theme: t,
          name: s.name,
          color: s.light,
          colorScheme: "light",
          withColorValues: !0
        })
      ), Object.assign(
        i.dark,
        Cd({
          theme: t,
          name: s.name,
          color: s.dark,
          colorScheme: "dark",
          withColorValues: !0
        })
      );
      return;
    }
    s.forEach((a, l) => {
      i.variables[`--mantine-color-${o}-${l}`] = a;
    }), Object.assign(
      i.light,
      Cd({
        theme: t,
        color: o,
        colorScheme: "light",
        withColorValues: !1
      })
    ), Object.assign(
      i.dark,
      Cd({
        theme: t,
        color: o,
        colorScheme: "dark",
        withColorValues: !1
      })
    );
  });
  const r = t.headings.sizes;
  return Ar(r).forEach((o) => {
    i.variables[`--mantine-${o}-font-size`] = r[o].fontSize, i.variables[`--mantine-${o}-line-height`] = r[o].lineHeight, i.variables[`--mantine-${o}-font-weight`] = r[o].fontWeight || t.headings.fontWeight;
  }), i;
};
function sW({ theme: t, generator: e }) {
  const n = VT(t), i = e == null ? void 0 : e(t);
  return i ? Pv(n, i) : n;
}
const Mm = VT(Uv);
function aW(t) {
  const e = {
    variables: {},
    light: {},
    dark: {}
  };
  return Ar(t.variables).forEach((n) => {
    Mm.variables[n] !== t.variables[n] && (e.variables[n] = t.variables[n]);
  }), Ar(t.light).forEach((n) => {
    Mm.light[n] !== t.light[n] && (e.light[n] = t.light[n]);
  }), Ar(t.dark).forEach((n) => {
    Mm.dark[n] !== t.dark[n] && (e.dark[n] = t.dark[n]);
  }), e;
}
function lW(t) {
  return `
  ${t}[data-mantine-color-scheme="dark"] { --mantine-color-scheme: dark; }
  ${t}[data-mantine-color-scheme="light"] { --mantine-color-scheme: light; }
`;
}
function WT({
  cssVariablesSelector: t,
  deduplicateCssVariables: e
}) {
  const n = Hi(), i = jv(), r = HV(), o = sW({ theme: n, generator: r }), s = t === ":root" && e, a = s ? aW(o) : o, l = rW(a, t);
  return l ? /* @__PURE__ */ Q.jsx(
    "style",
    {
      "data-mantine-styles": !0,
      nonce: i == null ? void 0 : i(),
      dangerouslySetInnerHTML: {
        __html: `${l}${s ? "" : lW(t)}`
      }
    }
  ) : null;
}
WT.displayName = "@mantine/CssVariables";
function cW() {
  const t = console.error;
  console.error = (...e) => {
    e.length > 1 && typeof e[0] == "string" && e[0].toLowerCase().includes("extra attributes from the server") && typeof e[1] == "string" && e[1].toLowerCase().includes("data-mantine-color-scheme") || t(...e);
  };
}
function Ia(t, e) {
  var i;
  const n = t !== "auto" ? t : window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
  (i = e()) == null || i.setAttribute("data-mantine-color-scheme", n);
}
function fW({
  manager: t,
  defaultColorScheme: e,
  getRootElement: n,
  forceColorScheme: i
}) {
  const r = wt(), [o, s] = Be(() => t.get(e)), a = i || o, l = Xe(
    (f) => {
      i || (Ia(f, n), s(f), t.set(f));
    },
    [t.set, a, i]
  ), c = Xe(() => {
    s(e), Ia(e, n), t.clear();
  }, [t.clear, e]);
  return We(() => (t.subscribe(l), t.unsubscribe), [t.subscribe, t.unsubscribe]), Yh(() => {
    Ia(t.get(e), n);
  }, []), We(() => {
    var d;
    if (i)
      return Ia(i, n), () => {
      };
    i === void 0 && Ia(o, n), r.current = window.matchMedia("(prefers-color-scheme: dark)");
    const f = (u) => {
      o === "auto" && Ia(u.matches ? "dark" : "light", n);
    };
    return (d = r.current) == null || d.addEventListener("change", f), () => {
      var u;
      return (u = r.current) == null ? void 0 : u.removeEventListener("change", f);
    };
  }, [o, i]), { colorScheme: a, setColorScheme: l, clearColorScheme: c };
}
function dW({
  respectReducedMotion: t,
  getRootElement: e
}) {
  Yh(() => {
    var n;
    t && ((n = e()) == null || n.setAttribute("data-respect-reduced-motion", "true"));
  }, [t]);
}
cW();
function qT({
  theme: t,
  children: e,
  getStyleNonce: n,
  withStaticClasses: i = !0,
  withGlobalClasses: r = !0,
  deduplicateCssVariables: o = !0,
  withCssVariables: s = !0,
  cssVariablesSelector: a = ":root",
  classNamesPrefix: l = "mantine",
  colorSchemeManager: c = ZV(),
  defaultColorScheme: f = "light",
  getRootElement: d = () => document.documentElement,
  cssVariablesResolver: u,
  forceColorScheme: h,
  stylesTransform: p
}) {
  const { colorScheme: m, setColorScheme: v, clearColorScheme: y } = fW({
    defaultColorScheme: f,
    forceColorScheme: h,
    manager: c,
    getRootElement: d
  });
  return dW({
    respectReducedMotion: (t == null ? void 0 : t.respectReducedMotion) || !1,
    getRootElement: d
  }), /* @__PURE__ */ Q.jsx(
    jT.Provider,
    {
      value: {
        colorScheme: m,
        setColorScheme: v,
        clearColorScheme: y,
        getRootElement: d,
        classNamesPrefix: l,
        getStyleNonce: n,
        cssVariablesResolver: u,
        cssVariablesSelector: a,
        withStaticClasses: i,
        stylesTransform: p
      },
      children: /* @__PURE__ */ Q.jsxs(zT, { theme: t, children: [
        s && /* @__PURE__ */ Q.jsx(
          WT,
          {
            cssVariablesSelector: a,
            deduplicateCssVariables: o
          }
        ),
        r && /* @__PURE__ */ Q.jsx(iW, {}),
        e
      ] })
    }
  );
}
qT.displayName = "@mantine/core/MantineProvider";
function uW({
  classNames: t,
  styles: e,
  props: n,
  stylesCtx: i
}) {
  const r = Hi();
  return {
    resolvedClassNames: Qh({
      theme: r,
      classNames: t,
      props: n,
      stylesCtx: i || void 0
    }),
    resolvedStyles: P1({
      theme: r,
      styles: e,
      props: n,
      stylesCtx: i || void 0
    })
  };
}
const hW = {
  always: "mantine-focus-always",
  auto: "mantine-focus-auto",
  never: "mantine-focus-never"
};
function pW({ theme: t, options: e, unstyled: n }) {
  return xo(
    (e == null ? void 0 : e.focusable) && !n && (t.focusClassName || hW[t.focusRing]),
    (e == null ? void 0 : e.active) && !n && t.activeClassName
  );
}
function mW({
  selector: t,
  stylesCtx: e,
  options: n,
  props: i,
  theme: r
}) {
  return Qh({
    theme: r,
    classNames: n == null ? void 0 : n.classNames,
    props: (n == null ? void 0 : n.props) || i,
    stylesCtx: e
  })[t];
}
function v9({
  selector: t,
  stylesCtx: e,
  theme: n,
  classNames: i,
  props: r
}) {
  return Qh({ theme: n, classNames: i, props: r, stylesCtx: e })[t];
}
function gW({ rootSelector: t, selector: e, className: n }) {
  return t === e ? n : void 0;
}
function yW({ selector: t, classes: e, unstyled: n }) {
  return n ? void 0 : e[t];
}
function vW({
  themeName: t,
  classNamesPrefix: e,
  selector: n,
  withStaticClass: i
}) {
  return i === !1 ? [] : t.map((r) => `${e}-${r}-${n}`);
}
function bW({
  themeName: t,
  theme: e,
  selector: n,
  props: i,
  stylesCtx: r
}) {
  return t.map(
    (o) => {
      var s, a;
      return (a = Qh({
        theme: e,
        classNames: (s = e.components[o]) == null ? void 0 : s.classNames,
        props: i,
        stylesCtx: r
      })) == null ? void 0 : a[n];
    }
  );
}
function kW({
  options: t,
  classes: e,
  selector: n,
  unstyled: i
}) {
  return t != null && t.variant && !i ? e[`${n}--${t.variant}`] : void 0;
}
function wW({
  theme: t,
  options: e,
  themeName: n,
  selector: i,
  classNamesPrefix: r,
  classNames: o,
  classes: s,
  unstyled: a,
  className: l,
  rootSelector: c,
  props: f,
  stylesCtx: d,
  withStaticClasses: u,
  headless: h,
  transformedStyles: p
}) {
  return xo(
    pW({ theme: t, options: e, unstyled: a || h }),
    bW({ theme: t, themeName: n, selector: i, props: f, stylesCtx: d }),
    kW({ options: e, classes: s, selector: i, unstyled: a }),
    v9({ selector: i, stylesCtx: d, theme: t, classNames: o, props: f }),
    v9({ selector: i, stylesCtx: d, theme: t, classNames: p, props: f }),
    mW({ selector: i, stylesCtx: d, options: e, props: f, theme: t }),
    gW({ rootSelector: c, selector: i, className: l }),
    yW({ selector: i, classes: s, unstyled: a || h }),
    u && !h && vW({
      themeName: n,
      classNamesPrefix: r,
      selector: i,
      withStaticClass: e == null ? void 0 : e.withStaticClass
    }),
    e == null ? void 0 : e.className
  );
}
function _W({
  theme: t,
  themeName: e,
  props: n,
  stylesCtx: i,
  selector: r
}) {
  return e.map(
    (o) => {
      var s;
      return P1({
        theme: t,
        styles: (s = t.components[o]) == null ? void 0 : s.styles,
        props: n,
        stylesCtx: i
      })[r];
    }
  ).reduce((o, s) => ({ ...o, ...s }), {});
}
function Dg({ style: t, theme: e }) {
  return Array.isArray(t) ? [...t].reduce(
    (n, i) => ({ ...n, ...Dg({ style: i, theme: e }) }),
    {}
  ) : typeof t == "function" ? t(e) : t ?? {};
}
function EW(t) {
  return t.reduce((e, n) => (n && Object.keys(n).forEach((i) => {
    e[i] = { ...e[i], ...Fv(n[i]) };
  }), e), {});
}
function TW({
  vars: t,
  varsResolver: e,
  theme: n,
  props: i,
  stylesCtx: r,
  selector: o,
  themeName: s,
  headless: a
}) {
  var l;
  return (l = EW([
    a ? {} : e == null ? void 0 : e(n, i, r),
    ...s.map((c) => {
      var f, d, u;
      return (u = (d = (f = n.components) == null ? void 0 : f[c]) == null ? void 0 : d.vars) == null ? void 0 : u.call(d, n, i, r);
    }),
    t == null ? void 0 : t(n, i, r)
  ])) == null ? void 0 : l[o];
}
function CW({
  theme: t,
  themeName: e,
  selector: n,
  options: i,
  props: r,
  stylesCtx: o,
  rootSelector: s,
  styles: a,
  style: l,
  vars: c,
  varsResolver: f,
  headless: d,
  withStylesTransform: u
}) {
  return {
    ...!u && _W({ theme: t, themeName: e, props: r, stylesCtx: o, selector: n }),
    ...!u && P1({ theme: t, styles: a, props: r, stylesCtx: o })[n],
    ...!u && P1({ theme: t, styles: i == null ? void 0 : i.styles, props: (i == null ? void 0 : i.props) || r, stylesCtx: o })[n],
    ...TW({ theme: t, props: r, stylesCtx: o, vars: c, varsResolver: f, selector: n, themeName: e, headless: d }),
    ...s === n ? Dg({ style: l, theme: t }) : null,
    ...Dg({ style: i == null ? void 0 : i.style, theme: t })
  };
}
function SW({ props: t, stylesCtx: e, themeName: n }) {
  var s;
  const i = Hi(), r = (s = VV()) == null ? void 0 : s();
  return {
    getTransformedStyles: (a) => r ? [
      ...a.map(
        (c) => r(c, { props: t, theme: i, ctx: e })
      ),
      ...n.map(
        (c) => {
          var f;
          return r((f = i.components[c]) == null ? void 0 : f.styles, { props: t, theme: i, ctx: e });
        }
      )
    ].filter(Boolean) : [],
    withStylesTransform: !!r
  };
}
function zt({
  name: t,
  classes: e,
  props: n,
  stylesCtx: i,
  className: r,
  style: o,
  rootSelector: s = "root",
  unstyled: a,
  classNames: l,
  styles: c,
  vars: f,
  varsResolver: d
}) {
  const u = Hi(), h = $V(), p = jV(), m = zV(), v = (Array.isArray(t) ? t : [t]).filter((k) => k), { withStylesTransform: y, getTransformedStyles: C } = SW({
    props: n,
    stylesCtx: i,
    themeName: v
  });
  return (k, _) => ({
    className: wW({
      theme: u,
      options: _,
      themeName: v,
      selector: k,
      classNamesPrefix: h,
      classNames: l,
      classes: e,
      unstyled: a,
      className: r,
      rootSelector: s,
      props: n,
      stylesCtx: i,
      withStaticClasses: p,
      headless: m,
      transformedStyles: C([_ == null ? void 0 : _.styles, c])
    }),
    style: CW({
      theme: u,
      themeName: v,
      selector: k,
      options: _,
      props: n,
      stylesCtx: i,
      rootSelector: s,
      styles: c,
      style: o,
      vars: f,
      varsResolver: d,
      headless: m,
      withStylesTransform: y
    })
  });
}
function xW(t, e) {
  return typeof t == "boolean" ? t : e.autoContrast;
}
function Ve(t, e, n) {
  var s;
  const i = Hi(), r = (s = i.components[t]) == null ? void 0 : s.defaultProps, o = typeof r == "function" ? r(i) : r;
  return { ...e, ...o, ...Fv(n) };
}
function Nm(t) {
  return Ar(t).reduce(
    (e, n) => t[n] !== void 0 ? `${e}${aV(n)}:${t[n]};` : e,
    ""
  ).trim();
}
function AW({ selector: t, styles: e, media: n, container: i }) {
  const r = e ? Nm(e) : "", o = Array.isArray(n) ? n.map((a) => `@media${a.query}{${t}{${Nm(a.styles)}}}`) : [], s = Array.isArray(i) ? i.map(
    (a) => `@container ${a.query}{${t}{${Nm(a.styles)}}}`
  ) : [];
  return `${r ? `${t}{${r}}` : ""}${o.join("")}${s.join("")}`.trim();
}
function MW(t) {
  const e = jv();
  return /* @__PURE__ */ Q.jsx(
    "style",
    {
      "data-mantine-styles": "inline",
      nonce: e == null ? void 0 : e(),
      dangerouslySetInnerHTML: { __html: AW(t) }
    }
  );
}
function Wv(t) {
  const {
    m: e,
    mx: n,
    my: i,
    mt: r,
    mb: o,
    ml: s,
    mr: a,
    me: l,
    ms: c,
    p: f,
    px: d,
    py: u,
    pt: h,
    pb: p,
    pl: m,
    pr: v,
    pe: y,
    ps: C,
    bd: k,
    bg: _,
    c: S,
    opacity: E,
    ff: x,
    fz: N,
    fw: R,
    lts: A,
    ta: O,
    lh: B,
    fs: U,
    tt: K,
    td: G,
    w: J,
    miw: te,
    maw: re,
    h: X,
    mih: D,
    mah: me,
    bgsz: Se,
    bgp: F,
    bgr: Oe,
    bga: ft,
    pos: Re,
    top: qe,
    left: Ye,
    bottom: Ge,
    right: st,
    inset: Zt,
    display: Mt,
    flex: Dt,
    hiddenFrom: dt,
    visibleFrom: W,
    lightHidden: Y,
    darkHidden: fe,
    sx: Ee,
    ...I
  } = t;
  return { styleProps: Fv({
    m: e,
    mx: n,
    my: i,
    mt: r,
    mb: o,
    ml: s,
    mr: a,
    me: l,
    ms: c,
    p: f,
    px: d,
    py: u,
    pt: h,
    pb: p,
    pl: m,
    pr: v,
    pe: y,
    ps: C,
    bd: k,
    bg: _,
    c: S,
    opacity: E,
    ff: x,
    fz: N,
    fw: R,
    lts: A,
    ta: O,
    lh: B,
    fs: U,
    tt: K,
    td: G,
    w: J,
    miw: te,
    maw: re,
    h: X,
    mih: D,
    mah: me,
    bgsz: Se,
    bgp: F,
    bgr: Oe,
    bga: ft,
    pos: Re,
    top: qe,
    left: Ye,
    bottom: Ge,
    right: st,
    inset: Zt,
    display: Mt,
    flex: Dt,
    hiddenFrom: dt,
    visibleFrom: W,
    lightHidden: Y,
    darkHidden: fe,
    sx: Ee
  }), rest: I };
}
const NW = {
  m: { type: "spacing", property: "margin" },
  mt: { type: "spacing", property: "marginTop" },
  mb: { type: "spacing", property: "marginBottom" },
  ml: { type: "spacing", property: "marginLeft" },
  mr: { type: "spacing", property: "marginRight" },
  ms: { type: "spacing", property: "marginInlineStart" },
  me: { type: "spacing", property: "marginInlineEnd" },
  mx: { type: "spacing", property: "marginInline" },
  my: { type: "spacing", property: "marginBlock" },
  p: { type: "spacing", property: "padding" },
  pt: { type: "spacing", property: "paddingTop" },
  pb: { type: "spacing", property: "paddingBottom" },
  pl: { type: "spacing", property: "paddingLeft" },
  pr: { type: "spacing", property: "paddingRight" },
  ps: { type: "spacing", property: "paddingInlineStart" },
  pe: { type: "spacing", property: "paddingInlineEnd" },
  px: { type: "spacing", property: "paddingInline" },
  py: { type: "spacing", property: "paddingBlock" },
  bd: { type: "border", property: "border" },
  bg: { type: "color", property: "background" },
  c: { type: "textColor", property: "color" },
  opacity: { type: "identity", property: "opacity" },
  ff: { type: "fontFamily", property: "fontFamily" },
  fz: { type: "fontSize", property: "fontSize" },
  fw: { type: "identity", property: "fontWeight" },
  lts: { type: "size", property: "letterSpacing" },
  ta: { type: "identity", property: "textAlign" },
  lh: { type: "lineHeight", property: "lineHeight" },
  fs: { type: "identity", property: "fontStyle" },
  tt: { type: "identity", property: "textTransform" },
  td: { type: "identity", property: "textDecoration" },
  w: { type: "spacing", property: "width" },
  miw: { type: "spacing", property: "minWidth" },
  maw: { type: "spacing", property: "maxWidth" },
  h: { type: "spacing", property: "height" },
  mih: { type: "spacing", property: "minHeight" },
  mah: { type: "spacing", property: "maxHeight" },
  bgsz: { type: "size", property: "backgroundSize" },
  bgp: { type: "identity", property: "backgroundPosition" },
  bgr: { type: "identity", property: "backgroundRepeat" },
  bga: { type: "identity", property: "backgroundAttachment" },
  pos: { type: "identity", property: "position" },
  top: { type: "identity", property: "top" },
  left: { type: "size", property: "left" },
  bottom: { type: "size", property: "bottom" },
  right: { type: "size", property: "right" },
  inset: { type: "size", property: "inset" },
  display: { type: "identity", property: "display" },
  flex: { type: "identity", property: "flex" }
};
function qv(t, e) {
  const n = Hl({ color: t, theme: e });
  return n.color === "dimmed" ? "var(--mantine-color-dimmed)" : n.color === "bright" ? "var(--mantine-color-bright)" : n.variable ? `var(${n.variable})` : n.color;
}
function OW(t, e) {
  const n = Hl({ color: t, theme: e });
  return n.isThemeColor && n.shade === void 0 ? `var(--mantine-color-${n.color}-text)` : qv(t, e);
}
function RW(t, e) {
  if (typeof t == "number")
    return le(t);
  if (typeof t == "string") {
    const [n, i, ...r] = t.split(" ").filter((s) => s.trim() !== "");
    let o = `${le(n)}`;
    return i && (o += ` ${i}`), r.length > 0 && (o += ` ${qv(r.join(" "), e)}`), o.trim();
  }
  return t;
}
const b9 = {
  text: "var(--mantine-font-family)",
  mono: "var(--mantine-font-family-monospace)",
  monospace: "var(--mantine-font-family-monospace)",
  heading: "var(--mantine-font-family-headings)",
  headings: "var(--mantine-font-family-headings)"
};
function IW(t) {
  return typeof t == "string" && t in b9 ? b9[t] : t;
}
const LW = ["h1", "h2", "h3", "h4", "h5", "h6"];
function DW(t, e) {
  return typeof t == "string" && t in e.fontSizes ? `var(--mantine-font-size-${t})` : typeof t == "string" && LW.includes(t) ? `var(--mantine-${t}-font-size)` : typeof t == "number" || typeof t == "string" ? le(t) : t;
}
function PW(t) {
  return t;
}
const FW = ["h1", "h2", "h3", "h4", "h5", "h6"];
function BW(t, e) {
  return typeof t == "string" && t in e.lineHeights ? `var(--mantine-line-height-${t})` : typeof t == "string" && FW.includes(t) ? `var(--mantine-${t}-line-height)` : t;
}
function HW(t) {
  return typeof t == "number" ? le(t) : t;
}
function $W(t, e) {
  if (typeof t == "number")
    return le(t);
  if (typeof t == "string") {
    const n = t.replace("-", "");
    if (!(n in e.spacing))
      return le(t);
    const i = `--mantine-spacing-${n}`;
    return t.startsWith("-") ? `calc(var(${i}) * -1)` : `var(${i})`;
  }
  return t;
}
const Om = {
  color: qv,
  textColor: OW,
  fontSize: DW,
  spacing: $W,
  identity: PW,
  size: HW,
  lineHeight: BW,
  fontFamily: IW,
  border: RW
};
function k9(t) {
  return t.replace("(min-width: ", "").replace("em)", "");
}
function jW({
  media: t,
  ...e
}) {
  const i = Object.keys(t).sort((r, o) => Number(k9(r)) - Number(k9(o))).map((r) => ({ query: r, styles: t[r] }));
  return { ...e, media: i };
}
function zW(t) {
  if (typeof t != "object" || t === null)
    return !1;
  const e = Object.keys(t);
  return !(e.length === 1 && e[0] === "base");
}
function UW(t) {
  return typeof t == "object" && t !== null ? "base" in t ? t.base : void 0 : t;
}
function VW(t) {
  return typeof t == "object" && t !== null ? Ar(t).filter((e) => e !== "base") : [];
}
function WW(t, e) {
  return typeof t == "object" && t !== null && e in t ? t[e] : t;
}
function qW({
  styleProps: t,
  data: e,
  theme: n
}) {
  return jW(
    Ar(t).reduce(
      (i, r) => {
        if (r === "hiddenFrom" || r === "visibleFrom" || r === "sx")
          return i;
        const o = e[r], s = Array.isArray(o.property) ? o.property : [o.property], a = UW(t[r]);
        if (!zW(t[r]))
          return s.forEach((c) => {
            i.inlineStyles[c] = Om[o.type](a, n);
          }), i;
        i.hasResponsiveStyles = !0;
        const l = VW(t[r]);
        return s.forEach((c) => {
          a && (i.styles[c] = Om[o.type](a, n)), l.forEach((f) => {
            const d = `(min-width: ${n.breakpoints[f]})`;
            i.media[d] = {
              ...i.media[d],
              [c]: Om[o.type](
                WW(t[r], f),
                n
              )
            };
          });
        }), i;
      },
      {
        hasResponsiveStyles: !1,
        styles: {},
        inlineStyles: {},
        media: {}
      }
    )
  );
}
function GW() {
  return `__m__-${Px().replace(/:/g, "")}`;
}
function GT(t, e) {
  return Array.isArray(t) ? [...t].reduce(
    (n, i) => ({ ...n, ...GT(i, e) }),
    {}
  ) : typeof t == "function" ? t(e) : t ?? {};
}
function KT(t) {
  return t.startsWith("data-") ? t : `data-${t}`;
}
function KW(t) {
  return Object.keys(t).reduce((e, n) => {
    const i = t[n];
    return i === void 0 || i === "" || i === !1 || i === null || (e[KT(n)] = t[n]), e;
  }, {});
}
function YT(t) {
  return t ? typeof t == "string" ? { [KT(t)]: !0 } : Array.isArray(t) ? [...t].reduce(
    (e, n) => ({ ...e, ...YT(n) }),
    {}
  ) : KW(t) : null;
}
function Pg(t, e) {
  return Array.isArray(t) ? [...t].reduce(
    (n, i) => ({ ...n, ...Pg(i, e) }),
    {}
  ) : typeof t == "function" ? t(e) : t ?? {};
}
function YW({
  theme: t,
  style: e,
  vars: n,
  styleProps: i
}) {
  const r = Pg(e, t), o = Pg(n, t);
  return { ...r, ...o, ...i };
}
const JT = tt(
  ({
    component: t,
    style: e,
    __vars: n,
    className: i,
    variant: r,
    mod: o,
    size: s,
    hiddenFrom: a,
    visibleFrom: l,
    lightHidden: c,
    darkHidden: f,
    renderRoot: d,
    __size: u,
    ...h
  }, p) => {
    var N;
    const m = Hi(), v = t || "div", { styleProps: y, rest: C } = Wv(h), k = UV(), _ = (N = k == null ? void 0 : k()) == null ? void 0 : N(y.sx), S = GW(), E = qW({
      styleProps: y,
      theme: m,
      data: NW
    }), x = {
      ref: p,
      style: YW({
        theme: m,
        style: e,
        vars: n,
        styleProps: E.inlineStyles
      }),
      className: xo(i, _, {
        [S]: E.hasResponsiveStyles,
        "mantine-light-hidden": c,
        "mantine-dark-hidden": f,
        [`mantine-hidden-from-${a}`]: a,
        [`mantine-visible-from-${l}`]: l
      }),
      "data-variant": r,
      "data-size": IT(s) ? void 0 : s || void 0,
      size: u,
      ...YT(o),
      ...C
    };
    return /* @__PURE__ */ Q.jsxs(Q.Fragment, { children: [
      E.hasResponsiveStyles && /* @__PURE__ */ Q.jsx(
        MW,
        {
          selector: `.${S}`,
          styles: E.styles,
          media: E.media
        }
      ),
      typeof d == "function" ? d(x) : /* @__PURE__ */ Q.jsx(v, { ...x })
    ] });
  }
);
JT.displayName = "@mantine/core/Box";
const pt = JT;
function XT(t) {
  return t;
}
function Ut(t) {
  const e = tt(t);
  return e.extend = XT, e.withProps = (n) => {
    const i = tt((r, o) => /* @__PURE__ */ Q.jsx(e, { ...n, ...r, ref: o }));
    return i.extend = e.extend, i.displayName = `WithProps(${e.displayName})`, i;
  }, e;
}
function Vr(t) {
  const e = tt(t);
  return e.withProps = (n) => {
    const i = tt((r, o) => /* @__PURE__ */ Q.jsx(e, { ...n, ...r, ref: o }));
    return i.extend = e.extend, i.displayName = `WithProps(${e.displayName})`, i;
  }, e.extend = XT, e;
}
const JW = cr({
  dir: "ltr",
  toggleDirection: () => {
  },
  setDirection: () => {
  }
});
function Bf() {
  return fr(JW);
}
var QT = { root: "m_87cf2631" };
const XW = {
  __staticSelector: "UnstyledButton"
}, Ea = Vr(
  (t, e) => {
    const n = Ve("UnstyledButton", XW, t), {
      className: i,
      component: r = "button",
      __staticSelector: o,
      unstyled: s,
      classNames: a,
      styles: l,
      style: c,
      ...f
    } = n, d = zt({
      name: o,
      props: n,
      classes: QT,
      className: i,
      style: c,
      classNames: a,
      styles: l,
      unstyled: s
    });
    return /* @__PURE__ */ Q.jsx(
      pt,
      {
        ...d("root", { focusable: !0 }),
        component: r,
        ref: e,
        type: r === "button" ? "button" : void 0,
        ...f
      }
    );
  }
);
Ea.classes = QT;
Ea.displayName = "@mantine/core/UnstyledButton";
var ZT = { root: "m_515a97f8" };
const QW = {}, Gv = Ut((t, e) => {
  const n = Ve("VisuallyHidden", QW, t), { classNames: i, className: r, style: o, styles: s, unstyled: a, vars: l, ...c } = n, f = zt({
    name: "VisuallyHidden",
    classes: ZT,
    props: n,
    className: r,
    style: o,
    classNames: i,
    styles: s,
    unstyled: a
  });
  return /* @__PURE__ */ Q.jsx(pt, { component: "span", ref: e, ...f("root"), ...c });
});
Gv.classes = ZT;
Gv.displayName = "@mantine/core/VisuallyHidden";
function eC(t, e) {
  if (t === "rtl" && (e.includes("right") || e.includes("left"))) {
    const [n, i] = e.split("-"), r = n === "right" ? "left" : "right";
    return i === void 0 ? r : `${r}-${i}`;
  }
  return e;
}
function w9(t, e, n, i) {
  return t === "center" || i === "center" ? { top: e } : t === "end" ? { bottom: n } : t === "start" ? { top: n } : {};
}
function _9(t, e, n, i, r) {
  return t === "center" || i === "center" ? { left: e } : t === "end" ? { [r === "ltr" ? "right" : "left"]: n } : t === "start" ? { [r === "ltr" ? "left" : "right"]: n } : {};
}
const ZW = {
  bottom: "borderTopLeftRadius",
  left: "borderTopRightRadius",
  right: "borderBottomLeftRadius",
  top: "borderBottomRightRadius"
};
function eq({
  position: t,
  arrowSize: e,
  arrowOffset: n,
  arrowRadius: i,
  arrowPosition: r,
  arrowX: o,
  arrowY: s,
  dir: a
}) {
  const [l, c = "center"] = t.split("-"), f = {
    width: e,
    height: e,
    transform: "rotate(45deg)",
    position: "absolute",
    [ZW[l]]: i
  }, d = -e / 2;
  return l === "left" ? {
    ...f,
    ...w9(c, s, n, r),
    right: d,
    borderLeftColor: "transparent",
    borderBottomColor: "transparent"
  } : l === "right" ? {
    ...f,
    ...w9(c, s, n, r),
    left: d,
    borderRightColor: "transparent",
    borderTopColor: "transparent"
  } : l === "top" ? {
    ...f,
    ..._9(c, o, n, r, a),
    bottom: d,
    borderTopColor: "transparent",
    borderLeftColor: "transparent"
  } : l === "bottom" ? {
    ...f,
    ..._9(c, o, n, r, a),
    top: d,
    borderBottomColor: "transparent",
    borderRightColor: "transparent"
  } : {};
}
const Kv = tt(
  ({
    position: t,
    arrowSize: e,
    arrowOffset: n,
    arrowRadius: i,
    arrowPosition: r,
    visible: o,
    arrowX: s,
    arrowY: a,
    style: l,
    ...c
  }, f) => {
    const { dir: d } = Bf();
    return o ? /* @__PURE__ */ Q.jsx(
      "div",
      {
        ...c,
        ref: f,
        style: {
          ...l,
          ...eq({
            position: t,
            arrowSize: e,
            arrowOffset: n,
            arrowRadius: i,
            arrowPosition: r,
            dir: d,
            arrowX: s,
            arrowY: a
          })
        }
      }
    ) : null;
  }
);
Kv.displayName = "@mantine/core/FloatingArrow";
const [tq, tC] = Bv(
  "Popover component was not found in the tree"
);
function Yv({
  children: t,
  active: e = !0,
  refProp: n = "ref",
  innerRef: i
}) {
  const r = HT(e), o = So(r, i);
  return Df(t) ? kf(t, { [n]: o }) : t;
}
function nC(t) {
  return /* @__PURE__ */ Q.jsx(Gv, { tabIndex: -1, "data-autofocus": !0, ...t });
}
Yv.displayName = "@mantine/core/FocusTrap";
nC.displayName = "@mantine/core/FocusTrapInitialFocus";
Yv.InitialFocus = nC;
function nq(t) {
  const e = document.createElement("div");
  return e.setAttribute("data-portal", "true"), typeof t.className == "string" && e.classList.add(...t.className.split(" ").filter(Boolean)), typeof t.style == "object" && Object.assign(e.style, t.style), typeof t.id == "string" && e.setAttribute("id", t.id), e;
}
const iq = {}, iC = tt((t, e) => {
  const { children: n, target: i, ...r } = Ve("Portal", iq, t), [o, s] = Be(!1), a = wt(null);
  return Yh(() => (s(!0), a.current = i ? typeof i == "string" ? document.querySelector(i) : i : nq(r), $v(e, a.current), !i && a.current && document.body.appendChild(a.current), () => {
    !i && a.current && document.body.removeChild(a.current);
  }), [i]), !o || !a.current ? null : ly(/* @__PURE__ */ Q.jsx(Q.Fragment, { children: n }), a.current);
});
iC.displayName = "@mantine/core/Portal";
function Zh({ withinPortal: t = !0, children: e, ...n }) {
  return t ? /* @__PURE__ */ Q.jsx(iC, { ...n, children: e }) : /* @__PURE__ */ Q.jsx(Q.Fragment, { children: e });
}
Zh.displayName = "@mantine/core/OptionalPortal";
const cc = (t) => ({
  in: { opacity: 1, transform: "scale(1)" },
  out: { opacity: 0, transform: `scale(.9) translateY(${le(t === "bottom" ? 10 : -10)})` },
  transitionProperty: "transform, opacity"
}), Sd = {
  fade: {
    in: { opacity: 1 },
    out: { opacity: 0 },
    transitionProperty: "opacity"
  },
  "fade-up": {
    in: { opacity: 1, transform: "translateY(0)" },
    out: { opacity: 0, transform: `translateY(${le(30)}` },
    transitionProperty: "opacity, transform"
  },
  "fade-down": {
    in: { opacity: 1, transform: "translateY(0)" },
    out: { opacity: 0, transform: `translateY(${le(-30)}` },
    transitionProperty: "opacity, transform"
  },
  "fade-left": {
    in: { opacity: 1, transform: "translateX(0)" },
    out: { opacity: 0, transform: `translateX(${le(30)}` },
    transitionProperty: "opacity, transform"
  },
  "fade-right": {
    in: { opacity: 1, transform: "translateX(0)" },
    out: { opacity: 0, transform: `translateX(${le(-30)}` },
    transitionProperty: "opacity, transform"
  },
  scale: {
    in: { opacity: 1, transform: "scale(1)" },
    out: { opacity: 0, transform: "scale(0)" },
    common: { transformOrigin: "top" },
    transitionProperty: "transform, opacity"
  },
  "scale-y": {
    in: { opacity: 1, transform: "scaleY(1)" },
    out: { opacity: 0, transform: "scaleY(0)" },
    common: { transformOrigin: "top" },
    transitionProperty: "transform, opacity"
  },
  "scale-x": {
    in: { opacity: 1, transform: "scaleX(1)" },
    out: { opacity: 0, transform: "scaleX(0)" },
    common: { transformOrigin: "left" },
    transitionProperty: "transform, opacity"
  },
  "skew-up": {
    in: { opacity: 1, transform: "translateY(0) skew(0deg, 0deg)" },
    out: { opacity: 0, transform: `translateY(${le(-20)}) skew(-10deg, -5deg)` },
    common: { transformOrigin: "top" },
    transitionProperty: "transform, opacity"
  },
  "skew-down": {
    in: { opacity: 1, transform: "translateY(0) skew(0deg, 0deg)" },
    out: { opacity: 0, transform: `translateY(${le(20)}) skew(-10deg, -5deg)` },
    common: { transformOrigin: "bottom" },
    transitionProperty: "transform, opacity"
  },
  "rotate-left": {
    in: { opacity: 1, transform: "translateY(0) rotate(0deg)" },
    out: { opacity: 0, transform: `translateY(${le(20)}) rotate(-5deg)` },
    common: { transformOrigin: "bottom" },
    transitionProperty: "transform, opacity"
  },
  "rotate-right": {
    in: { opacity: 1, transform: "translateY(0) rotate(0deg)" },
    out: { opacity: 0, transform: `translateY(${le(20)}) rotate(5deg)` },
    common: { transformOrigin: "top" },
    transitionProperty: "transform, opacity"
  },
  "slide-down": {
    in: { opacity: 1, transform: "translateY(0)" },
    out: { opacity: 0, transform: "translateY(-100%)" },
    common: { transformOrigin: "top" },
    transitionProperty: "transform, opacity"
  },
  "slide-up": {
    in: { opacity: 1, transform: "translateY(0)" },
    out: { opacity: 0, transform: "translateY(100%)" },
    common: { transformOrigin: "bottom" },
    transitionProperty: "transform, opacity"
  },
  "slide-left": {
    in: { opacity: 1, transform: "translateX(0)" },
    out: { opacity: 0, transform: "translateX(100%)" },
    common: { transformOrigin: "left" },
    transitionProperty: "transform, opacity"
  },
  "slide-right": {
    in: { opacity: 1, transform: "translateX(0)" },
    out: { opacity: 0, transform: "translateX(-100%)" },
    common: { transformOrigin: "right" },
    transitionProperty: "transform, opacity"
  },
  pop: {
    ...cc("bottom"),
    common: { transformOrigin: "center center" }
  },
  "pop-bottom-left": {
    ...cc("bottom"),
    common: { transformOrigin: "bottom left" }
  },
  "pop-bottom-right": {
    ...cc("bottom"),
    common: { transformOrigin: "bottom right" }
  },
  "pop-top-left": {
    ...cc("top"),
    common: { transformOrigin: "top left" }
  },
  "pop-top-right": {
    ...cc("top"),
    common: { transformOrigin: "top right" }
  }
}, E9 = {
  entering: "in",
  entered: "in",
  exiting: "out",
  exited: "out",
  "pre-exiting": "out",
  "pre-entering": "out"
};
function rq({
  transition: t,
  state: e,
  duration: n,
  timingFunction: i
}) {
  const r = {
    transitionDuration: `${n}ms`,
    transitionTimingFunction: i
  };
  return typeof t == "string" ? t in Sd ? {
    transitionProperty: Sd[t].transitionProperty,
    ...r,
    ...Sd[t].common,
    ...Sd[t][E9[e]]
  } : {} : {
    transitionProperty: t.transitionProperty,
    ...r,
    ...t.common,
    ...t[E9[e]]
  };
}
function oq({
  duration: t,
  exitDuration: e,
  timingFunction: n,
  mounted: i,
  onEnter: r,
  onExit: o,
  onEntered: s,
  onExited: a,
  enterDelay: l,
  exitDelay: c
}) {
  const f = Hi(), d = LV(), u = f.respectReducedMotion ? d : !1, [h, p] = Be(u ? 0 : t), [m, v] = Be(i ? "entered" : "exited"), y = wt(-1), C = wt(-1), k = wt(-1), _ = (E) => {
    const x = E ? r : o, N = E ? s : a;
    window.clearTimeout(y.current);
    const R = u ? 0 : E ? t : e;
    p(R), R === 0 ? (typeof x == "function" && x(), typeof N == "function" && N(), v(E ? "entered" : "exited")) : k.current = requestAnimationFrame(() => {
      sy.flushSync(() => {
        v(E ? "pre-entering" : "pre-exiting");
      }), k.current = requestAnimationFrame(() => {
        typeof x == "function" && x(), v(E ? "entering" : "exiting"), y.current = window.setTimeout(() => {
          typeof N == "function" && N(), v(E ? "entered" : "exited");
        }, R);
      });
    });
  }, S = (E) => {
    if (window.clearTimeout(C.current), typeof (E ? l : c) != "number") {
      _(E);
      return;
    }
    C.current = window.setTimeout(
      () => {
        _(E);
      },
      E ? l : c
    );
  };
  return ws(() => {
    S(i);
  }, [i]), We(
    () => () => {
      window.clearTimeout(y.current), cancelAnimationFrame(k.current);
    },
    []
  ), {
    transitionDuration: h,
    transitionStatus: m,
    transitionTimingFunction: n || "ease"
  };
}
function $l({
  keepMounted: t,
  transition: e = "fade",
  duration: n = 250,
  exitDuration: i = n,
  mounted: r,
  children: o,
  timingFunction: s = "ease",
  onExit: a,
  onEntered: l,
  onEnter: c,
  onExited: f,
  enterDelay: d,
  exitDelay: u
}) {
  const { transitionDuration: h, transitionStatus: p, transitionTimingFunction: m } = oq({
    mounted: r,
    exitDuration: i,
    duration: n,
    timingFunction: s,
    onExit: a,
    onEntered: l,
    onEnter: c,
    onExited: f,
    enterDelay: d,
    exitDelay: u
  });
  return h === 0 ? r ? /* @__PURE__ */ Q.jsx(Q.Fragment, { children: o({}) }) : t ? o({ display: "none" }) : null : p === "exited" ? t ? o({ display: "none" }) : null : /* @__PURE__ */ Q.jsx(Q.Fragment, { children: o(
    rq({
      transition: e,
      duration: h,
      state: p,
      timingFunction: m
    })
  ) });
}
$l.displayName = "@mantine/core/Transition";
var rC = { dropdown: "m_38a85659", arrow: "m_a31dc6c1" };
const sq = {}, ep = Ut((t, e) => {
  var v, y, C, k;
  const n = Ve("PopoverDropdown", sq, t), {
    className: i,
    style: r,
    vars: o,
    children: s,
    onKeyDownCapture: a,
    variant: l,
    classNames: c,
    styles: f,
    ...d
  } = n, u = tC(), h = CV({
    opened: u.opened,
    shouldReturnFocus: u.returnFocus
  }), p = u.withRoles ? {
    "aria-labelledby": u.getTargetId(),
    id: u.getDropdownId(),
    role: "dialog",
    tabIndex: -1
  } : {}, m = So(e, u.floating);
  return u.disabled ? null : /* @__PURE__ */ Q.jsx(Zh, { ...u.portalProps, withinPortal: u.withinPortal, children: /* @__PURE__ */ Q.jsx(
    $l,
    {
      mounted: u.opened,
      ...u.transitionProps,
      transition: ((v = u.transitionProps) == null ? void 0 : v.transition) || "fade",
      duration: ((y = u.transitionProps) == null ? void 0 : y.duration) ?? 150,
      keepMounted: u.keepMounted,
      exitDuration: typeof ((C = u.transitionProps) == null ? void 0 : C.exitDuration) == "number" ? u.transitionProps.exitDuration : (k = u.transitionProps) == null ? void 0 : k.duration,
      children: (_) => /* @__PURE__ */ Q.jsx(Yv, { active: u.trapFocus && u.opened, innerRef: m, children: /* @__PURE__ */ Q.jsxs(
        pt,
        {
          ...p,
          ...d,
          variant: l,
          onKeyDownCapture: gV(u.onClose, {
            active: u.closeOnEscape,
            onTrigger: h,
            onKeyDown: a
          }),
          "data-position": u.placement,
          "data-fixed": u.floatingStrategy === "fixed" || void 0,
          ...u.getStyles("dropdown", {
            className: i,
            props: n,
            classNames: c,
            styles: f,
            style: [
              {
                ..._,
                zIndex: u.zIndex,
                top: u.y ?? 0,
                left: u.x ?? 0,
                width: u.width === "target" ? void 0 : le(u.width)
              },
              r
            ]
          }),
          children: [
            s,
            /* @__PURE__ */ Q.jsx(
              Kv,
              {
                ref: u.arrowRef,
                arrowX: u.arrowX,
                arrowY: u.arrowY,
                visible: u.withArrow,
                position: u.placement,
                arrowSize: u.arrowSize,
                arrowRadius: u.arrowRadius,
                arrowOffset: u.arrowOffset,
                arrowPosition: u.arrowPosition,
                ...u.getStyles("arrow", {
                  props: n,
                  classNames: c,
                  styles: f
                })
              }
            )
          ]
        }
      ) })
    }
  ) });
});
ep.classes = rC;
ep.displayName = "@mantine/core/PopoverDropdown";
const aq = {
  refProp: "ref",
  popupType: "dialog"
}, Jv = Ut((t, e) => {
  const { children: n, refProp: i, popupType: r, ...o } = Ve(
    "PopoverTarget",
    aq,
    t
  );
  if (!Df(n))
    throw new Error(
      "Popover.Target component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported"
    );
  const s = o, a = tC(), l = So(a.reference, n.ref, e), c = a.withRoles ? {
    "aria-haspopup": r,
    "aria-expanded": a.opened,
    "aria-controls": a.getDropdownId(),
    id: a.getTargetId()
  } : {};
  return kf(n, {
    ...s,
    ...c,
    ...a.targetProps,
    className: xo(a.targetProps.className, s.className, n.props.className),
    [i]: l,
    ...a.controlled ? null : { onClick: a.onToggle }
  });
});
Jv.displayName = "@mantine/core/PopoverTarget";
function oC({
  opened: t,
  floating: e,
  position: n,
  positionDependencies: i
}) {
  const [r, o] = Be(0);
  We(() => {
    if (e.refs.reference.current && e.refs.floating.current && t)
      return NA(
        e.refs.reference.current,
        e.refs.floating.current,
        e.update
      );
  }, [
    e.refs.reference.current,
    e.refs.floating.current,
    t,
    r,
    n
  ]), ws(() => {
    e.update();
  }, i), ws(() => {
    o((s) => s + 1);
  }, [t]);
}
function lq(t) {
  if (t === void 0)
    return { shift: !0, flip: !0 };
  const e = { ...t };
  return t.shift === void 0 && (e.shift = !0), t.flip === void 0 && (e.flip = !0), e;
}
function cq(t, e) {
  const n = lq(t.middlewares), i = [_s(t.offset)];
  return n.shift && i.push(
    fh(
      typeof n.shift == "boolean" ? { limiter: vk(), padding: 5 } : { limiter: vk(), padding: 5, ...n.shift }
    )
  ), n.flip && i.push(
    typeof n.flip == "boolean" ? gs() : gs(n.flip)
  ), n.inline && i.push(
    typeof n.inline == "boolean" ? x0() : x0(n.inline)
  ), i.push(U3({ element: t.arrowRef, padding: t.arrowOffset })), (n.size || t.width === "target") && i.push(
    gy({
      ...typeof n.size == "boolean" ? {} : n.size,
      apply({ rects: r, availableWidth: o, availableHeight: s, ...a }) {
        var f;
        const c = ((f = e().refs.floating.current) == null ? void 0 : f.style) ?? {};
        n.size && (typeof n.size == "object" && n.size.apply ? n.size.apply({ rects: r, availableWidth: o, availableHeight: s, ...a }) : Object.assign(c, {
          maxWidth: `${o}px`,
          maxHeight: `${s}px`
        })), t.width === "target" && Object.assign(c, {
          width: `${r.reference.width}px`
        });
      }
    })
  ), i;
}
function fq(t) {
  const [e, n, i] = Xh({
    value: t.opened,
    defaultValue: t.defaultOpened,
    finalValue: !1,
    onChange: t.onChange
  }), r = () => {
    var a;
    e && (!i && ((a = t.onClose) == null || a.call(t)), n(!1));
  }, o = () => {
    var a, l;
    e ? ((a = t.onClose) == null || a.call(t), n(!1)) : ((l = t.onOpen) == null || l.call(t), n(!0));
  }, s = _f({
    strategy: t.strategy,
    placement: t.position,
    middleware: cq(t, () => s)
  });
  return oC({
    opened: e,
    position: t.position,
    positionDependencies: t.positionDependencies || [],
    floating: s
  }), ws(() => {
    var a;
    (a = t.onPositionChange) == null || a.call(t, s.placement);
  }, [s.placement]), ws(() => {
    var a, l;
    t.opened ? (l = t.onOpen) == null || l.call(t) : (a = t.onClose) == null || a.call(t);
  }, [t.opened, i]), {
    floating: s,
    controlled: typeof t.opened == "boolean",
    opened: e,
    onClose: r,
    onToggle: o
  };
}
const dq = {
  position: "bottom",
  offset: 8,
  positionDependencies: [],
  transitionProps: { transition: "fade", duration: 150 },
  middlewares: { flip: !0, shift: !0, inline: !1 },
  arrowSize: 7,
  arrowOffset: 5,
  arrowRadius: 0,
  arrowPosition: "side",
  closeOnClickOutside: !0,
  withinPortal: !0,
  closeOnEscape: !0,
  trapFocus: !1,
  withRoles: !0,
  returnFocus: !1,
  clickOutsideEvents: ["mousedown", "touchstart"],
  zIndex: Pf("popover"),
  __staticSelector: "Popover",
  width: "max-content"
}, uq = (t, { radius: e, shadow: n }) => ({
  dropdown: {
    "--popover-radius": e === void 0 ? void 0 : Ur(e),
    "--popover-shadow": vV(n)
  }
});
function xs(t) {
  var fe, Ee, I, g, T, M;
  const e = Ve("Popover", dq, t), {
    children: n,
    position: i,
    offset: r,
    onPositionChange: o,
    positionDependencies: s,
    opened: a,
    transitionProps: l,
    width: c,
    middlewares: f,
    withArrow: d,
    arrowSize: u,
    arrowOffset: h,
    arrowRadius: p,
    arrowPosition: m,
    unstyled: v,
    classNames: y,
    styles: C,
    closeOnClickOutside: k,
    withinPortal: _,
    portalProps: S,
    closeOnEscape: E,
    clickOutsideEvents: x,
    trapFocus: N,
    onClose: R,
    onOpen: A,
    onChange: O,
    zIndex: B,
    radius: U,
    shadow: K,
    id: G,
    defaultOpened: J,
    __staticSelector: te,
    withRoles: re,
    disabled: X,
    returnFocus: D,
    variant: me,
    keepMounted: Se,
    vars: F,
    floatingStrategy: Oe,
    ...ft
  } = e, Re = zt({
    name: te,
    props: e,
    classes: rC,
    classNames: y,
    styles: C,
    unstyled: v,
    rootSelector: "dropdown",
    vars: F,
    varsResolver: uq
  }), qe = wt(null), [Ye, Ge] = Be(null), [st, Zt] = Be(null), { dir: Mt } = Bf(), Dt = Jh(G), dt = fq({
    middlewares: f,
    width: c,
    position: eC(Mt, i),
    offset: typeof r == "number" ? r + (d ? u / 2 : 0) : r,
    arrowRef: qe,
    arrowOffset: h,
    onPositionChange: o,
    positionDependencies: s,
    opened: a,
    defaultOpened: J,
    onChange: O,
    onOpen: A,
    onClose: R,
    strategy: Oe
  });
  wV(() => k && dt.onClose(), x, [
    Ye,
    st
  ]);
  const W = Xe(
    (j) => {
      Ge(j), dt.floating.refs.setReference(j);
    },
    [dt.floating.refs.setReference]
  ), Y = Xe(
    (j) => {
      Zt(j), dt.floating.refs.setFloating(j);
    },
    [dt.floating.refs.setFloating]
  );
  return /* @__PURE__ */ Q.jsx(
    tq,
    {
      value: {
        returnFocus: D,
        disabled: X,
        controlled: dt.controlled,
        reference: W,
        floating: Y,
        x: dt.floating.x,
        y: dt.floating.y,
        arrowX: (I = (Ee = (fe = dt.floating) == null ? void 0 : fe.middlewareData) == null ? void 0 : Ee.arrow) == null ? void 0 : I.x,
        arrowY: (M = (T = (g = dt.floating) == null ? void 0 : g.middlewareData) == null ? void 0 : T.arrow) == null ? void 0 : M.y,
        opened: dt.opened,
        arrowRef: qe,
        transitionProps: l,
        width: c,
        withArrow: d,
        arrowSize: u,
        arrowOffset: h,
        arrowRadius: p,
        arrowPosition: m,
        placement: dt.floating.placement,
        trapFocus: N,
        withinPortal: _,
        portalProps: S,
        zIndex: B,
        radius: U,
        shadow: K,
        closeOnEscape: E,
        onClose: dt.onClose,
        onToggle: dt.onToggle,
        getTargetId: () => `${Dt}-target`,
        getDropdownId: () => `${Dt}-dropdown`,
        withRoles: re,
        targetProps: ft,
        __staticSelector: te,
        classNames: y,
        styles: C,
        unstyled: v,
        variant: me,
        keepMounted: Se,
        getStyles: Re,
        floatingStrategy: Oe
      },
      children: n
    }
  );
}
xs.Target = Jv;
xs.Dropdown = ep;
xs.displayName = "@mantine/core/Popover";
xs.extend = (t) => t;
var Zi = { root: "m_5ae2e3c", barsLoader: "m_7a2bd4cd", bar: "m_870bb79", "bars-loader-animation": "m_5d2b3b9d", dotsLoader: "m_4e3f22d7", dot: "m_870c4af", "loader-dots-animation": "m_aac34a1", ovalLoader: "m_b34414df", "oval-loader-animation": "m_f8e89c4b" };
const sC = tt(({ className: t, ...e }, n) => /* @__PURE__ */ Q.jsxs(pt, { component: "span", className: xo(Zi.barsLoader, t), ...e, ref: n, children: [
  /* @__PURE__ */ Q.jsx("span", { className: Zi.bar }),
  /* @__PURE__ */ Q.jsx("span", { className: Zi.bar }),
  /* @__PURE__ */ Q.jsx("span", { className: Zi.bar })
] }));
sC.displayName = "@mantine/core/Bars";
const aC = tt(({ className: t, ...e }, n) => /* @__PURE__ */ Q.jsxs(pt, { component: "span", className: xo(Zi.dotsLoader, t), ...e, ref: n, children: [
  /* @__PURE__ */ Q.jsx("span", { className: Zi.dot }),
  /* @__PURE__ */ Q.jsx("span", { className: Zi.dot }),
  /* @__PURE__ */ Q.jsx("span", { className: Zi.dot })
] }));
aC.displayName = "@mantine/core/Dots";
const lC = tt(({ className: t, ...e }, n) => /* @__PURE__ */ Q.jsx(pt, { component: "span", className: xo(Zi.ovalLoader, t), ...e, ref: n }));
lC.displayName = "@mantine/core/Oval";
const cC = {
  bars: sC,
  oval: lC,
  dots: aC
}, hq = {
  loaders: cC,
  type: "oval"
}, pq = (t, { size: e, color: n }) => ({
  root: {
    "--loader-size": Kn(e, "loader-size"),
    "--loader-color": n ? wo(n, t) : void 0
  }
}), As = Ut((t, e) => {
  const n = Ve("Loader", hq, t), {
    size: i,
    color: r,
    type: o,
    vars: s,
    className: a,
    style: l,
    classNames: c,
    styles: f,
    unstyled: d,
    loaders: u,
    variant: h,
    children: p,
    ...m
  } = n, v = zt({
    name: "Loader",
    props: n,
    classes: Zi,
    className: a,
    style: l,
    classNames: c,
    styles: f,
    unstyled: d,
    vars: s,
    varsResolver: pq
  });
  return p ? /* @__PURE__ */ Q.jsx(pt, { ...v("root"), ref: e, ...m, children: p }) : /* @__PURE__ */ Q.jsx(
    pt,
    {
      ...v("root"),
      ref: e,
      component: u[o],
      variant: h,
      size: i,
      ...m
    }
  );
});
As.defaultLoaders = cC;
As.classes = Zi;
As.displayName = "@mantine/core/Loader";
var tp = { root: "m_8d3f4000", icon: "m_8d3afb97", loader: "m_302b9fb1", group: "m_1a0f1b21" };
const T9 = {
  orientation: "horizontal"
}, mq = (t, { borderWidth: e }) => ({
  group: { "--ai-border-width": le(e) }
}), Xv = Ut((t, e) => {
  const n = Ve("ActionIconGroup", T9, t), {
    className: i,
    style: r,
    classNames: o,
    styles: s,
    unstyled: a,
    orientation: l,
    vars: c,
    borderWidth: f,
    variant: d,
    mod: u,
    ...h
  } = Ve("ActionIconGroup", T9, t), p = zt({
    name: "ActionIconGroup",
    props: n,
    classes: tp,
    className: i,
    style: r,
    classNames: o,
    styles: s,
    unstyled: a,
    vars: c,
    varsResolver: mq,
    rootSelector: "group"
  });
  return /* @__PURE__ */ Q.jsx(
    pt,
    {
      ...p("group"),
      ref: e,
      variant: d,
      mod: [{ "data-orientation": l }, u],
      role: "group",
      ...h
    }
  );
});
Xv.classes = tp;
Xv.displayName = "@mantine/core/ActionIconGroup";
const gq = {}, yq = (t, { size: e, radius: n, variant: i, gradient: r, color: o, autoContrast: s }) => {
  const a = t.variantColorResolver({
    color: o || t.primaryColor,
    theme: t,
    gradient: r,
    variant: i || "filled",
    autoContrast: s
  });
  return {
    root: {
      "--ai-size": Kn(e, "ai-size"),
      "--ai-radius": n === void 0 ? void 0 : Ur(n),
      "--ai-bg": o || i ? a.background : void 0,
      "--ai-hover": o || i ? a.hover : void 0,
      "--ai-hover-color": o || i ? a.hoverColor : void 0,
      "--ai-color": a.color,
      "--ai-bd": o || i ? a.border : void 0
    }
  };
}, Hf = Vr((t, e) => {
  const n = Ve("ActionIcon", gq, t), {
    className: i,
    unstyled: r,
    variant: o,
    classNames: s,
    styles: a,
    style: l,
    loading: c,
    loaderProps: f,
    size: d,
    color: u,
    radius: h,
    __staticSelector: p,
    gradient: m,
    vars: v,
    children: y,
    disabled: C,
    "data-disabled": k,
    autoContrast: _,
    mod: S,
    ...E
  } = n, x = zt({
    name: ["ActionIcon", p],
    props: n,
    className: i,
    style: l,
    classes: tp,
    classNames: s,
    styles: a,
    unstyled: r,
    vars: v,
    varsResolver: yq
  });
  return /* @__PURE__ */ Q.jsxs(
    Ea,
    {
      ...x("root", { active: !C && !c && !k }),
      ...E,
      unstyled: r,
      variant: o,
      size: d,
      disabled: C || c,
      ref: e,
      mod: [{ loading: c, disabled: C || k }, S],
      children: [
        /* @__PURE__ */ Q.jsx($l, { mounted: !!c, transition: "slide-down", duration: 150, children: (N) => /* @__PURE__ */ Q.jsx(pt, { component: "span", ...x("loader", { style: N }), "aria-hidden": !0, children: /* @__PURE__ */ Q.jsx(As, { color: "var(--ai-color)", size: "calc(var(--ai-size) * 0.55)", ...f }) }) }),
        /* @__PURE__ */ Q.jsx(pt, { component: "span", mod: { loading: c }, ...x("icon"), children: y })
      ]
    }
  );
});
Hf.classes = tp;
Hf.displayName = "@mantine/core/ActionIcon";
Hf.Group = Xv;
const fC = tt(
  ({ size: t = "var(--cb-icon-size, 70%)", style: e, ...n }, i) => /* @__PURE__ */ Q.jsx(
    "svg",
    {
      viewBox: "0 0 15 15",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      style: { ...e, width: t, height: t },
      ref: i,
      ...n,
      children: /* @__PURE__ */ Q.jsx(
        "path",
        {
          d: "M11.7816 4.03157C12.0062 3.80702 12.0062 3.44295 11.7816 3.2184C11.5571 2.99385 11.193 2.99385 10.9685 3.2184L7.50005 6.68682L4.03164 3.2184C3.80708 2.99385 3.44301 2.99385 3.21846 3.2184C2.99391 3.44295 2.99391 3.80702 3.21846 4.03157L6.68688 7.49999L3.21846 10.9684C2.99391 11.193 2.99391 11.557 3.21846 11.7816C3.44301 12.0061 3.80708 12.0061 4.03164 11.7816L7.50005 8.31316L10.9685 11.7816C11.193 12.0061 11.5571 12.0061 11.7816 11.7816C12.0062 11.557 12.0062 11.193 11.7816 10.9684L8.31322 7.49999L11.7816 4.03157Z",
          fill: "currentColor",
          fillRule: "evenodd",
          clipRule: "evenodd"
        }
      )
    }
  )
);
fC.displayName = "@mantine/core/CloseIcon";
var dC = { root: "m_86a44da5", "root--subtle": "m_220c80f2" };
const vq = {
  variant: "subtle"
}, bq = (t, { size: e, radius: n, iconSize: i }) => ({
  root: {
    "--cb-size": Kn(e, "cb-size"),
    "--cb-radius": n === void 0 ? void 0 : Ur(n),
    "--cb-icon-size": le(i)
  }
}), Qv = Vr((t, e) => {
  const n = Ve("CloseButton", vq, t), {
    iconSize: i,
    children: r,
    vars: o,
    radius: s,
    className: a,
    classNames: l,
    style: c,
    styles: f,
    unstyled: d,
    "data-disabled": u,
    disabled: h,
    variant: p,
    icon: m,
    mod: v,
    ...y
  } = n, C = zt({
    name: "CloseButton",
    props: n,
    className: a,
    style: c,
    classes: dC,
    classNames: l,
    styles: f,
    unstyled: d,
    vars: o,
    varsResolver: bq
  });
  return /* @__PURE__ */ Q.jsxs(
    Ea,
    {
      ref: e,
      ...y,
      unstyled: d,
      variant: p,
      disabled: h,
      mod: [{ disabled: h || u }, v],
      ...C("root", { variant: p, active: !h && !u }),
      children: [
        m || /* @__PURE__ */ Q.jsx(fC, {}),
        r
      ]
    }
  );
});
Qv.classes = dC;
Qv.displayName = "@mantine/core/CloseButton";
function kq(t) {
  return Fx.toArray(t).filter(Boolean);
}
var uC = { root: "m_4081bf90" };
const wq = {
  preventGrowOverflow: !0,
  gap: "md",
  align: "center",
  justify: "flex-start",
  wrap: "wrap"
}, _q = (t, { grow: e, preventGrowOverflow: n, gap: i, align: r, justify: o, wrap: s }, { childWidth: a }) => ({
  root: {
    "--group-child-width": e && n ? a : void 0,
    "--group-gap": Hv(i),
    "--group-align": r,
    "--group-justify": o,
    "--group-wrap": s
  }
}), hi = Ut((t, e) => {
  const n = Ve("Group", wq, t), {
    classNames: i,
    className: r,
    style: o,
    styles: s,
    unstyled: a,
    children: l,
    gap: c,
    align: f,
    justify: d,
    wrap: u,
    grow: h,
    preventGrowOverflow: p,
    vars: m,
    variant: v,
    __size: y,
    mod: C,
    ...k
  } = n, _ = kq(l), S = _.length, E = Hv(c ?? "md"), N = { childWidth: `calc(${100 / S}% - (${E} - ${E} / ${S}))` }, R = zt({
    name: "Group",
    props: n,
    stylesCtx: N,
    className: r,
    style: o,
    classes: uC,
    classNames: i,
    styles: s,
    unstyled: a,
    vars: m,
    varsResolver: _q
  });
  return /* @__PURE__ */ Q.jsx(
    pt,
    {
      ...R("root"),
      ref: e,
      variant: v,
      mod: [{ grow: h }, C],
      size: y,
      ...k,
      children: _
    }
  );
});
hi.classes = uC;
hi.displayName = "@mantine/core/Group";
var hC = { root: "m_9814e45f" };
const Eq = {
  zIndex: Pf("modal")
}, Tq = (t, { gradient: e, color: n, backgroundOpacity: i, blur: r, radius: o, zIndex: s }) => ({
  root: {
    "--overlay-bg": e || (n !== void 0 || i !== void 0) && wr(n || "#000", i ?? 0.6) || void 0,
    "--overlay-filter": r ? `blur(${le(r)})` : void 0,
    "--overlay-radius": o === void 0 ? void 0 : Ur(o),
    "--overlay-z-index": s == null ? void 0 : s.toString()
  }
}), F1 = Vr((t, e) => {
  const n = Ve("Overlay", Eq, t), {
    classNames: i,
    className: r,
    style: o,
    styles: s,
    unstyled: a,
    vars: l,
    fixed: c,
    center: f,
    children: d,
    radius: u,
    zIndex: h,
    gradient: p,
    blur: m,
    color: v,
    backgroundOpacity: y,
    mod: C,
    ...k
  } = n, _ = zt({
    name: "Overlay",
    props: n,
    classes: hC,
    className: r,
    style: o,
    classNames: i,
    styles: s,
    unstyled: a,
    vars: l,
    varsResolver: Tq
  });
  return /* @__PURE__ */ Q.jsx(pt, { ref: e, ..._("root"), mod: [{ center: f, fixed: c }, C], ...k, children: d });
});
F1.classes = hC;
F1.displayName = "@mantine/core/Overlay";
const [Cq, np] = fV({
  offsetBottom: !1,
  offsetTop: !1,
  describedBy: void 0,
  getStyles: null,
  inputId: void 0,
  labelId: void 0
});
var $i = { wrapper: "m_6c018570", input: "m_8fb7ebe7", section: "m_82577fc2", placeholder: "m_88bacfd0", root: "m_46b77525", label: "m_8fdc1311", required: "m_78a94662", error: "m_8f816625", description: "m_fe47ce59" };
const C9 = {}, Sq = (t, { size: e }) => ({
  description: {
    "--input-description-size": e === void 0 ? void 0 : `calc(${Mr(e)} - ${le(2)})`
  }
}), ip = Ut((t, e) => {
  const n = Ve("InputDescription", C9, t), {
    classNames: i,
    className: r,
    style: o,
    styles: s,
    unstyled: a,
    vars: l,
    size: c,
    __staticSelector: f,
    __inheritStyles: d = !0,
    variant: u,
    ...h
  } = Ve("InputDescription", C9, n), p = np(), m = zt({
    name: ["InputWrapper", f],
    props: n,
    classes: $i,
    className: r,
    style: o,
    classNames: i,
    styles: s,
    unstyled: a,
    rootSelector: "description",
    vars: l,
    varsResolver: Sq
  }), v = d && (p == null ? void 0 : p.getStyles) || m;
  return /* @__PURE__ */ Q.jsx(
    pt,
    {
      component: "p",
      ref: e,
      variant: u,
      size: c,
      ...v("description", p != null && p.getStyles ? { className: r, style: o } : void 0),
      ...h
    }
  );
});
ip.classes = $i;
ip.displayName = "@mantine/core/InputDescription";
const xq = {}, Aq = (t, { size: e }) => ({
  error: {
    "--input-error-size": e === void 0 ? void 0 : `calc(${Mr(e)} - ${le(2)})`
  }
}), rp = Ut((t, e) => {
  const n = Ve("InputError", xq, t), {
    classNames: i,
    className: r,
    style: o,
    styles: s,
    unstyled: a,
    vars: l,
    size: c,
    __staticSelector: f,
    __inheritStyles: d = !0,
    variant: u,
    ...h
  } = n, p = zt({
    name: ["InputWrapper", f],
    props: n,
    classes: $i,
    className: r,
    style: o,
    classNames: i,
    styles: s,
    unstyled: a,
    rootSelector: "error",
    vars: l,
    varsResolver: Aq
  }), m = np(), v = d && (m == null ? void 0 : m.getStyles) || p;
  return /* @__PURE__ */ Q.jsx(
    pt,
    {
      component: "p",
      ref: e,
      variant: u,
      size: c,
      ...v("error", m != null && m.getStyles ? { className: r, style: o } : void 0),
      ...h
    }
  );
});
rp.classes = $i;
rp.displayName = "@mantine/core/InputError";
const S9 = {
  labelElement: "label"
}, Mq = (t, { size: e }) => ({
  label: {
    "--input-label-size": Mr(e),
    "--input-asterisk-color": void 0
  }
}), op = Ut((t, e) => {
  const n = Ve("InputLabel", S9, t), {
    classNames: i,
    className: r,
    style: o,
    styles: s,
    unstyled: a,
    vars: l,
    labelElement: c,
    size: f,
    required: d,
    htmlFor: u,
    onMouseDown: h,
    children: p,
    __staticSelector: m,
    variant: v,
    mod: y,
    ...C
  } = Ve("InputLabel", S9, n), k = zt({
    name: ["InputWrapper", m],
    props: n,
    classes: $i,
    className: r,
    style: o,
    classNames: i,
    styles: s,
    unstyled: a,
    rootSelector: "label",
    vars: l,
    varsResolver: Mq
  }), _ = np(), S = (_ == null ? void 0 : _.getStyles) || k;
  return /* @__PURE__ */ Q.jsxs(
    pt,
    {
      ...S("label", _ != null && _.getStyles ? { className: r, style: o } : void 0),
      component: c,
      variant: v,
      size: f,
      ref: e,
      htmlFor: c === "label" ? u : void 0,
      mod: [{ required: d }, y],
      onMouseDown: (E) => {
        h == null || h(E), !E.defaultPrevented && E.detail > 1 && E.preventDefault();
      },
      ...C,
      children: [
        p,
        d && /* @__PURE__ */ Q.jsx("span", { ...S("required"), "aria-hidden": !0, children: " *" })
      ]
    }
  );
});
op.classes = $i;
op.displayName = "@mantine/core/InputLabel";
const x9 = {}, Zv = Ut((t, e) => {
  const n = Ve("InputPlaceholder", x9, t), {
    classNames: i,
    className: r,
    style: o,
    styles: s,
    unstyled: a,
    vars: l,
    __staticSelector: c,
    variant: f,
    error: d,
    mod: u,
    ...h
  } = Ve("InputPlaceholder", x9, n), p = zt({
    name: ["InputPlaceholder", c],
    props: n,
    classes: $i,
    className: r,
    style: o,
    classNames: i,
    styles: s,
    unstyled: a,
    rootSelector: "placeholder"
  });
  return /* @__PURE__ */ Q.jsx(
    pt,
    {
      ...p("placeholder"),
      mod: [{ error: !!d }, u],
      component: "span",
      variant: f,
      ref: e,
      ...h
    }
  );
});
Zv.classes = $i;
Zv.displayName = "@mantine/core/InputPlaceholder";
function Nq(t, { hasDescription: e, hasError: n }) {
  const i = t.findIndex((l) => l === "input"), r = t.slice(0, i), o = t.slice(i + 1), s = e && r.includes("description") || n && r.includes("error");
  return { offsetBottom: e && o.includes("description") || n && o.includes("error"), offsetTop: s };
}
const Oq = {
  labelElement: "label",
  inputContainer: (t) => t,
  inputWrapperOrder: ["label", "description", "input", "error"]
}, Rq = (t, { size: e }) => ({
  label: {
    "--input-label-size": Mr(e),
    "--input-asterisk-color": void 0
  },
  error: {
    "--input-error-size": e === void 0 ? void 0 : `calc(${Mr(e)} - ${le(2)})`
  },
  description: {
    "--input-description-size": e === void 0 ? void 0 : `calc(${Mr(e)} - ${le(2)})`
  }
}), eb = Ut((t, e) => {
  const n = Ve("InputWrapper", Oq, t), {
    classNames: i,
    className: r,
    style: o,
    styles: s,
    unstyled: a,
    vars: l,
    size: c,
    variant: f,
    __staticSelector: d,
    inputContainer: u,
    inputWrapperOrder: h,
    label: p,
    error: m,
    description: v,
    labelProps: y,
    descriptionProps: C,
    errorProps: k,
    labelElement: _,
    children: S,
    withAsterisk: E,
    id: x,
    required: N,
    __stylesApiProps: R,
    mod: A,
    ...O
  } = n, B = zt({
    name: ["InputWrapper", d],
    props: R || n,
    classes: $i,
    className: r,
    style: o,
    classNames: i,
    styles: s,
    unstyled: a,
    vars: l,
    varsResolver: Rq
  }), U = {
    size: c,
    variant: f,
    __staticSelector: d
  }, K = Jh(x), G = typeof E == "boolean" ? E : N, J = (k == null ? void 0 : k.id) || `${K}-error`, te = (C == null ? void 0 : C.id) || `${K}-description`, re = K, X = !!m && typeof m != "boolean", D = !!v, me = `${X ? J : ""} ${D ? te : ""}`, Se = me.trim().length > 0 ? me.trim() : void 0, F = (y == null ? void 0 : y.id) || `${K}-label`, Oe = p && /* @__PURE__ */ Q.jsx(
    op,
    {
      labelElement: _,
      id: F,
      htmlFor: re,
      required: G,
      ...U,
      ...y,
      children: p
    },
    "label"
  ), ft = D && /* @__PURE__ */ Q.jsx(
    ip,
    {
      ...C,
      ...U,
      size: (C == null ? void 0 : C.size) || U.size,
      id: (C == null ? void 0 : C.id) || te,
      children: v
    },
    "description"
  ), Re = /* @__PURE__ */ Q.jsx(R3, { children: u(S) }, "input"), qe = X && /* @__PURE__ */ Bx(
    rp,
    {
      ...k,
      ...U,
      size: (k == null ? void 0 : k.size) || U.size,
      key: "error",
      id: (k == null ? void 0 : k.id) || J
    },
    m
  ), Ye = h.map((Ge) => {
    switch (Ge) {
      case "label":
        return Oe;
      case "input":
        return Re;
      case "description":
        return ft;
      case "error":
        return qe;
      default:
        return null;
    }
  });
  return /* @__PURE__ */ Q.jsx(
    Cq,
    {
      value: {
        getStyles: B,
        describedBy: Se,
        inputId: re,
        labelId: F,
        ...Nq(h, { hasDescription: D, hasError: X })
      },
      children: /* @__PURE__ */ Q.jsx(
        pt,
        {
          ref: e,
          variant: f,
          size: c,
          mod: [{ error: !!m }, A],
          ...B("root"),
          ...O,
          children: Ye
        }
      )
    }
  );
});
eb.classes = $i;
eb.displayName = "@mantine/core/InputWrapper";
const Iq = {
  variant: "default",
  leftSectionPointerEvents: "none",
  rightSectionPointerEvents: "none",
  withAria: !0,
  withErrorStyles: !0
}, Lq = (t, e, n) => ({
  wrapper: {
    "--input-margin-top": n.offsetTop ? "calc(var(--mantine-spacing-xs) / 2)" : void 0,
    "--input-margin-bottom": n.offsetBottom ? "calc(var(--mantine-spacing-xs) / 2)" : void 0,
    "--input-height": Kn(e.size, "input-height"),
    "--input-fz": Mr(e.size),
    "--input-radius": e.radius === void 0 ? void 0 : Ur(e.radius),
    "--input-left-section-width": e.leftSectionWidth !== void 0 ? le(e.leftSectionWidth) : void 0,
    "--input-right-section-width": e.rightSectionWidth !== void 0 ? le(e.rightSectionWidth) : void 0,
    "--input-padding-y": e.multiline ? Kn(e.size, "input-padding-y") : void 0,
    "--input-left-section-pointer-events": e.leftSectionPointerEvents,
    "--input-right-section-pointer-events": e.rightSectionPointerEvents
  }
}), Bi = Vr((t, e) => {
  const n = Ve("Input", Iq, t), {
    classNames: i,
    className: r,
    style: o,
    styles: s,
    unstyled: a,
    required: l,
    __staticSelector: c,
    __stylesApiProps: f,
    size: d,
    wrapperProps: u,
    error: h,
    disabled: p,
    leftSection: m,
    leftSectionProps: v,
    leftSectionWidth: y,
    rightSection: C,
    rightSectionProps: k,
    rightSectionWidth: _,
    rightSectionPointerEvents: S,
    leftSectionPointerEvents: E,
    variant: x,
    vars: N,
    pointer: R,
    multiline: A,
    radius: O,
    id: B,
    withAria: U,
    withErrorStyles: K,
    mod: G,
    inputSize: J,
    ...te
  } = n, { styleProps: re, rest: X } = Wv(te), D = np(), me = { offsetBottom: D == null ? void 0 : D.offsetBottom, offsetTop: D == null ? void 0 : D.offsetTop }, Se = zt({
    name: ["Input", c],
    props: f || n,
    classes: $i,
    className: r,
    style: o,
    classNames: i,
    styles: s,
    unstyled: a,
    stylesCtx: me,
    rootSelector: "wrapper",
    vars: N,
    varsResolver: Lq
  }), F = U ? {
    required: l,
    disabled: p,
    "aria-invalid": !!h,
    "aria-describedby": D == null ? void 0 : D.describedBy,
    id: (D == null ? void 0 : D.inputId) || B
  } : {};
  return /* @__PURE__ */ Q.jsxs(
    pt,
    {
      ...Se("wrapper"),
      ...re,
      ...u,
      mod: [
        {
          error: !!h && K,
          pointer: R,
          disabled: p,
          multiline: A,
          "data-with-right-section": !!C,
          "data-with-left-section": !!m
        },
        G
      ],
      variant: x,
      size: d,
      children: [
        m && /* @__PURE__ */ Q.jsx(
          "div",
          {
            ...v,
            "data-position": "left",
            ...Se("section", {
              className: v == null ? void 0 : v.className,
              style: v == null ? void 0 : v.style
            }),
            children: m
          }
        ),
        /* @__PURE__ */ Q.jsx(
          pt,
          {
            component: "input",
            ...X,
            ...F,
            ref: e,
            required: l,
            mod: { disabled: p, error: !!h && K },
            variant: x,
            __size: J,
            ...Se("input")
          }
        ),
        C && /* @__PURE__ */ Q.jsx(
          "div",
          {
            ...k,
            "data-position": "right",
            ...Se("section", {
              className: k == null ? void 0 : k.className,
              style: k == null ? void 0 : k.style
            }),
            children: C
          }
        )
      ]
    }
  );
});
Bi.classes = $i;
Bi.Wrapper = eb;
Bi.Label = op;
Bi.Error = rp;
Bi.Description = ip;
Bi.Placeholder = Zv;
Bi.displayName = "@mantine/core/Input";
function Dq(t, e, n) {
  const i = Ve(t, e, n), {
    label: r,
    description: o,
    error: s,
    required: a,
    classNames: l,
    styles: c,
    className: f,
    unstyled: d,
    __staticSelector: u,
    __stylesApiProps: h,
    errorProps: p,
    labelProps: m,
    descriptionProps: v,
    wrapperProps: y,
    id: C,
    size: k,
    style: _,
    inputContainer: S,
    inputWrapperOrder: E,
    withAsterisk: x,
    variant: N,
    vars: R,
    mod: A,
    ...O
  } = i, { styleProps: B, rest: U } = Wv(O), K = {
    label: r,
    description: o,
    error: s,
    required: a,
    classNames: l,
    className: f,
    __staticSelector: u,
    __stylesApiProps: h || i,
    errorProps: p,
    labelProps: m,
    descriptionProps: v,
    unstyled: d,
    styles: c,
    size: k,
    style: _,
    inputContainer: S,
    inputWrapperOrder: E,
    withAsterisk: x,
    variant: N,
    id: C,
    mod: A,
    ...y
  };
  return {
    ...U,
    classNames: l,
    styles: c,
    unstyled: d,
    wrapperProps: { ...K, ...B },
    inputProps: {
      required: a,
      classNames: l,
      styles: c,
      unstyled: d,
      size: k,
      __staticSelector: u,
      __stylesApiProps: h || i,
      error: s,
      variant: N,
      id: C
    }
  };
}
const Pq = {
  __staticSelector: "InputBase",
  withAria: !0
}, jl = Vr((t, e) => {
  const { inputProps: n, wrapperProps: i, ...r } = Dq("InputBase", Pq, t);
  return /* @__PURE__ */ Q.jsx(Bi.Wrapper, { ...i, children: /* @__PURE__ */ Q.jsx(Bi, { ...n, ...r, ref: e }) });
});
jl.classes = { ...Bi.classes, ...Bi.Wrapper.classes };
jl.displayName = "@mantine/core/InputBase";
var pC = { root: "m_b6d8b162" };
function Fq(t) {
  if (t === "start")
    return "start";
  if (t === "end" || t)
    return "end";
}
const Bq = {
  inherit: !1
}, Hq = (t, { variant: e, lineClamp: n, gradient: i, size: r, color: o }) => ({
  root: {
    "--text-fz": Mr(r),
    "--text-lh": yV(r),
    "--text-gradient": e === "gradient" ? Lg(i, t) : void 0,
    "--text-line-clamp": typeof n == "number" ? n.toString() : void 0,
    "--text-color": o ? wo(o, t) : void 0
  }
}), Cl = Vr((t, e) => {
  const n = Ve("Text", Bq, t), {
    lineClamp: i,
    truncate: r,
    inline: o,
    inherit: s,
    gradient: a,
    span: l,
    __staticSelector: c,
    vars: f,
    className: d,
    style: u,
    classNames: h,
    styles: p,
    unstyled: m,
    variant: v,
    mod: y,
    size: C,
    ...k
  } = n, _ = zt({
    name: ["Text", c],
    props: n,
    classes: pC,
    className: d,
    style: u,
    classNames: h,
    styles: p,
    unstyled: m,
    vars: f,
    varsResolver: Hq
  });
  return /* @__PURE__ */ Q.jsx(
    pt,
    {
      ..._("root", { focusable: !0 }),
      ref: e,
      component: l ? "span" : "p",
      variant: v,
      mod: [
        {
          "data-truncate": Fq(r),
          "data-line-clamp": typeof i == "number",
          "data-inline": o,
          "data-inherit": s
        },
        y
      ],
      size: C,
      ...k
    }
  );
});
Cl.classes = pC;
Cl.displayName = "@mantine/core/Text";
function mC({ size: t, style: e, ...n }) {
  const i = t !== void 0 ? { width: le(t), height: le(t), ...e } : e;
  return /* @__PURE__ */ Q.jsx(
    "svg",
    {
      viewBox: "0 0 10 7",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      style: i,
      "aria-hidden": !0,
      ...n,
      children: /* @__PURE__ */ Q.jsx(
        "path",
        {
          d: "M4 4.586L1.707 2.293A1 1 0 1 0 .293 3.707l3 3a.997.997 0 0 0 1.414 0l5-5A1 1 0 1 0 8.293.293L4 4.586z",
          fill: "currentColor",
          fillRule: "evenodd",
          clipRule: "evenodd"
        }
      )
    }
  );
}
var gC = { root: "m_347db0ec", "root--dot": "m_fbd81e3d", label: "m_5add502a", section: "m_91fdda9b" };
const $q = {}, jq = (t, { radius: e, color: n, gradient: i, variant: r, size: o, autoContrast: s }) => {
  const a = t.variantColorResolver({
    color: n || t.primaryColor,
    theme: t,
    gradient: i,
    variant: r || "filled",
    autoContrast: s
  });
  return {
    root: {
      "--badge-height": Kn(o, "badge-height"),
      "--badge-padding-x": Kn(o, "badge-padding-x"),
      "--badge-fz": Kn(o, "badge-fz"),
      "--badge-radius": e === void 0 ? void 0 : Ur(e),
      "--badge-bg": n || r ? a.background : void 0,
      "--badge-color": n || r ? a.color : void 0,
      "--badge-bd": n || r ? a.border : void 0,
      "--badge-dot-color": r === "dot" ? wo(n, t) : void 0
    }
  };
}, tb = Vr((t, e) => {
  const n = Ve("Badge", $q, t), {
    classNames: i,
    className: r,
    style: o,
    styles: s,
    unstyled: a,
    vars: l,
    radius: c,
    color: f,
    gradient: d,
    leftSection: u,
    rightSection: h,
    children: p,
    variant: m,
    fullWidth: v,
    autoContrast: y,
    circle: C,
    mod: k,
    ..._
  } = n, S = zt({
    name: "Badge",
    props: n,
    classes: gC,
    className: r,
    style: o,
    classNames: i,
    styles: s,
    unstyled: a,
    vars: l,
    varsResolver: jq
  });
  return /* @__PURE__ */ Q.jsxs(
    pt,
    {
      variant: m,
      mod: [
        {
          block: v,
          circle: C,
          "with-right-section": !!h,
          "with-left-section": !!u
        },
        k
      ],
      ...S("root", { variant: m }),
      ref: e,
      ..._,
      children: [
        u && /* @__PURE__ */ Q.jsx("span", { ...S("section"), "data-position": "left", children: u }),
        /* @__PURE__ */ Q.jsx("span", { ...S("label"), children: p }),
        h && /* @__PURE__ */ Q.jsx("span", { ...S("section"), "data-position": "right", children: h })
      ]
    }
  );
});
tb.classes = gC;
tb.displayName = "@mantine/core/Badge";
var sp = { root: "m_77c9d27d", inner: "m_80f1301b", label: "m_811560b9", section: "m_a74036a", loader: "m_a25b86ee", group: "m_80d6d844" };
const A9 = {
  orientation: "horizontal"
}, zq = (t, { borderWidth: e }) => ({
  group: { "--button-border-width": le(e) }
}), nb = Ut((t, e) => {
  const n = Ve("ButtonGroup", A9, t), {
    className: i,
    style: r,
    classNames: o,
    styles: s,
    unstyled: a,
    orientation: l,
    vars: c,
    borderWidth: f,
    variant: d,
    mod: u,
    ...h
  } = Ve("ButtonGroup", A9, t), p = zt({
    name: "ButtonGroup",
    props: n,
    classes: sp,
    className: i,
    style: r,
    classNames: o,
    styles: s,
    unstyled: a,
    vars: c,
    varsResolver: zq,
    rootSelector: "group"
  });
  return /* @__PURE__ */ Q.jsx(
    pt,
    {
      ...p("group"),
      ref: e,
      variant: d,
      mod: [{ "data-orientation": l }, u],
      role: "group",
      ...h
    }
  );
});
nb.classes = sp;
nb.displayName = "@mantine/core/ButtonGroup";
const Uq = {
  in: { opacity: 1, transform: `translate(-50%, calc(-50% + ${le(1)}))` },
  out: { opacity: 0, transform: "translate(-50%, -200%)" },
  common: { transformOrigin: "center" },
  transitionProperty: "transform, opacity"
}, Vq = {}, Wq = (t, { radius: e, color: n, gradient: i, variant: r, size: o, justify: s, autoContrast: a }) => {
  const l = t.variantColorResolver({
    color: n || t.primaryColor,
    theme: t,
    gradient: i,
    variant: r || "filled",
    autoContrast: a
  });
  return {
    root: {
      "--button-justify": s,
      "--button-height": Kn(o, "button-height"),
      "--button-padding-x": Kn(o, "button-padding-x"),
      "--button-fz": o != null && o.includes("compact") ? Mr(o.replace("compact-", "")) : Mr(o),
      "--button-radius": e === void 0 ? void 0 : Ur(e),
      "--button-bg": n || r ? l.background : void 0,
      "--button-hover": n || r ? l.hover : void 0,
      "--button-color": l.color,
      "--button-bd": n || r ? l.border : void 0,
      "--button-hover-color": n || r ? l.hoverColor : void 0
    }
  };
}, Ms = Vr((t, e) => {
  const n = Ve("Button", Vq, t), {
    style: i,
    vars: r,
    className: o,
    color: s,
    disabled: a,
    children: l,
    leftSection: c,
    rightSection: f,
    fullWidth: d,
    variant: u,
    radius: h,
    loading: p,
    loaderProps: m,
    gradient: v,
    classNames: y,
    styles: C,
    unstyled: k,
    "data-disabled": _,
    autoContrast: S,
    mod: E,
    ...x
  } = n, N = zt({
    name: "Button",
    props: n,
    classes: sp,
    className: o,
    style: i,
    classNames: y,
    styles: C,
    unstyled: k,
    vars: r,
    varsResolver: Wq
  }), R = !!c, A = !!f;
  return /* @__PURE__ */ Q.jsxs(
    Ea,
    {
      ref: e,
      ...N("root", { active: !a && !p && !_ }),
      unstyled: k,
      variant: u,
      disabled: a || p,
      mod: [
        {
          disabled: a || _,
          loading: p,
          block: d,
          "with-left-section": R,
          "with-right-section": A
        },
        E
      ],
      ...x,
      children: [
        /* @__PURE__ */ Q.jsx($l, { mounted: !!p, transition: Uq, duration: 150, children: (O) => /* @__PURE__ */ Q.jsx(pt, { component: "span", ...N("loader", { style: O }), "aria-hidden": !0, children: /* @__PURE__ */ Q.jsx(
          As,
          {
            color: "var(--button-color)",
            size: "calc(var(--button-height) / 1.8)",
            ...m
          }
        ) }) }),
        /* @__PURE__ */ Q.jsxs("span", { ...N("inner"), children: [
          c && /* @__PURE__ */ Q.jsx(pt, { component: "span", ...N("section"), mod: { position: "left" }, children: c }),
          /* @__PURE__ */ Q.jsx(pt, { component: "span", mod: { loading: p }, ...N("label"), children: l }),
          f && /* @__PURE__ */ Q.jsx(pt, { component: "span", ...N("section"), mod: { position: "right" }, children: f })
        ] })
      ]
    }
  );
});
Ms.classes = sp;
Ms.displayName = "@mantine/core/Button";
Ms.Group = nb;
const qq = {
  multiple: !1
}, yC = tt(
  (t, e) => {
    const {
      onChange: n,
      children: i,
      multiple: r,
      accept: o,
      name: s,
      form: a,
      resetRef: l,
      disabled: c,
      capture: f,
      inputProps: d,
      ...u
    } = Ve("FileButton", qq, t), h = wt(), p = () => {
      var y;
      !c && ((y = h.current) == null || y.click());
    }, m = (y) => {
      n(r ? Array.from(y.currentTarget.files) : y.currentTarget.files[0] || null);
    };
    return $v(l, () => {
      h.current.value = "";
    }), /* @__PURE__ */ Q.jsxs(Q.Fragment, { children: [
      i({ onClick: p, ...u }),
      /* @__PURE__ */ Q.jsx(
        "input",
        {
          style: { display: "none" },
          type: "file",
          accept: o,
          multiple: r,
          onChange: m,
          ref: So(e, h),
          name: s,
          form: a,
          capture: f,
          ...d
        }
      )
    ] });
  }
);
yC.displayName = "@mantine/core/FileButton";
const Gq = ({ value: t }) => /* @__PURE__ */ Q.jsx("div", { style: { overflow: "hidden", textOverflow: "ellipsis", whiteSpace: "nowrap" }, children: Array.isArray(t) ? t.map((e) => e.name).join(", ") : t == null ? void 0 : t.name }), Kq = {
  valueComponent: Gq
}, ib = Ut((t, e) => {
  const n = Ve("FileInput", Kq, t), {
    unstyled: i,
    vars: r,
    onChange: o,
    value: s,
    defaultValue: a,
    multiple: l,
    accept: c,
    name: f,
    form: d,
    valueComponent: u,
    clearable: h,
    clearButtonProps: p,
    readOnly: m,
    capture: v,
    fileInputProps: y,
    rightSection: C,
    size: k,
    placeholder: _,
    resetRef: S,
    ...E
  } = n, x = wt(null), [N, R] = Xh({
    value: s,
    defaultValue: a,
    onChange: o,
    finalValue: l ? [] : null
  }), A = Array.isArray(N) ? N.length !== 0 : N !== null, O = C || (h && A && !m ? /* @__PURE__ */ Q.jsx(
    Qv,
    {
      ...p,
      variant: "subtle",
      onClick: () => R(l ? [] : null),
      size: k,
      unstyled: i
    }
  ) : null);
  We(() => {
    var U;
    (Array.isArray(N) && N.length === 0 || N === null) && ((U = x.current) == null || U.call(x));
  }, [N]);
  const B = u;
  return /* @__PURE__ */ Q.jsx(
    yC,
    {
      onChange: R,
      multiple: l,
      accept: c,
      name: f,
      form: d,
      resetRef: So(x, S),
      disabled: m,
      capture: v,
      inputProps: y,
      children: (U) => /* @__PURE__ */ Q.jsx(
        jl,
        {
          component: "button",
          ref: e,
          rightSection: O,
          ...U,
          ...E,
          __staticSelector: "FileInput",
          multiline: !0,
          type: "button",
          pointer: !0,
          __stylesApiProps: n,
          unstyled: i,
          size: k,
          children: A ? /* @__PURE__ */ Q.jsx(B, { value: N }) : /* @__PURE__ */ Q.jsx(Bi.Placeholder, { children: _ })
        }
      )
    }
  );
});
ib.classes = jl.classes;
ib.displayName = "@mantine/core/FileInput";
const Yq = ib;
function Jq({ open: t, close: e, openDelay: n, closeDelay: i }) {
  const r = wt(-1), o = wt(-1), s = () => {
    window.clearTimeout(r.current), window.clearTimeout(o.current);
  }, a = () => {
    s(), n === 0 || n === void 0 ? t() : r.current = window.setTimeout(t, n);
  }, l = () => {
    s(), i === 0 || i === void 0 ? e() : o.current = window.setTimeout(e, i);
  };
  return We(() => s, []), { openDropdown: a, closeDropdown: l };
}
var vC = { root: "m_6e45937b", loader: "m_e8eb006c", overlay: "m_df587f17" };
const M9 = {
  transitionProps: { transition: "fade", duration: 0 },
  overlayProps: { backgroundOpacity: 0.75 },
  zIndex: Pf("overlay")
}, Xq = (t, { zIndex: e }) => ({
  root: {
    "--lo-z-index": e == null ? void 0 : e.toString()
  }
}), rb = Ut((t, e) => {
  const n = Ve("LoadingOverlay", M9, t), {
    classNames: i,
    className: r,
    style: o,
    styles: s,
    unstyled: a,
    vars: l,
    transitionProps: c,
    loaderProps: f,
    overlayProps: d,
    visible: u,
    zIndex: h,
    ...p
  } = n, m = Hi(), v = zt({
    name: "LoadingOverlay",
    classes: vC,
    props: n,
    className: r,
    style: o,
    classNames: i,
    styles: s,
    unstyled: a,
    vars: l,
    varsResolver: Xq
  }), y = { ...M9.overlayProps, ...d };
  return /* @__PURE__ */ Q.jsx($l, { transition: "fade", ...c, mounted: !!u, children: (C) => /* @__PURE__ */ Q.jsxs(pt, { ...v("root", { style: C }), ref: e, ...p, children: [
    /* @__PURE__ */ Q.jsx(As, { ...v("loader"), unstyled: a, ...f }),
    /* @__PURE__ */ Q.jsx(
      F1,
      {
        ...y,
        ...v("overlay"),
        darkHidden: !0,
        unstyled: a,
        color: (d == null ? void 0 : d.color) || m.white
      }
    ),
    /* @__PURE__ */ Q.jsx(
      F1,
      {
        ...y,
        ...v("overlay"),
        lightHidden: !0,
        unstyled: a,
        color: (d == null ? void 0 : d.color) || m.colors.dark[5]
      }
    )
  ] }) });
});
rb.classes = vC;
rb.displayName = "@mantine/core/LoadingOverlay";
const [Qq, $f] = Bv(
  "Menu component was not found in the tree"
);
var zl = { dropdown: "m_dc9b7c9f", label: "m_9bfac126", divider: "m_efdf90cb", item: "m_99ac2aa1", itemLabel: "m_5476e0d3", itemSection: "m_8b75e504" };
const Zq = {}, ob = Ut((t, e) => {
  const { classNames: n, className: i, style: r, styles: o, vars: s, ...a } = Ve(
    "MenuDivider",
    Zq,
    t
  ), l = $f();
  return /* @__PURE__ */ Q.jsx(
    pt,
    {
      ref: e,
      ...l.getStyles("divider", { className: i, style: r, styles: o, classNames: n }),
      ...a
    }
  );
});
ob.classes = zl;
ob.displayName = "@mantine/core/MenuDivider";
const eG = {}, sb = Ut((t, e) => {
  const {
    classNames: n,
    className: i,
    style: r,
    styles: o,
    vars: s,
    onMouseEnter: a,
    onMouseLeave: l,
    onKeyDown: c,
    children: f,
    ...d
  } = Ve("MenuDropdown", eG, t), u = wt(null), h = $f(), p = Sr(c, (y) => {
    var C, k;
    (y.key === "ArrowUp" || y.key === "ArrowDown") && (y.preventDefault(), (k = (C = u.current) == null ? void 0 : C.querySelectorAll("[data-menu-item]:not(:disabled)")[0]) == null || k.focus());
  }), m = Sr(
    a,
    () => (h.trigger === "hover" || h.trigger === "click-hover") && h.openDropdown()
  ), v = Sr(
    l,
    () => (h.trigger === "hover" || h.trigger === "click-hover") && h.closeDropdown()
  );
  return /* @__PURE__ */ Q.jsxs(
    xs.Dropdown,
    {
      ...d,
      onMouseEnter: m,
      onMouseLeave: v,
      role: "menu",
      "aria-orientation": "vertical",
      ref: So(e, u),
      ...h.getStyles("dropdown", {
        className: i,
        style: r,
        styles: o,
        classNames: n,
        withStaticClass: !1
      }),
      tabIndex: -1,
      "data-menu-dropdown": !0,
      onKeyDown: p,
      children: [
        /* @__PURE__ */ Q.jsx("div", { tabIndex: -1, "data-autofocus": !0, "data-mantine-stop-propagation": !0, style: { outline: 0 } }),
        f
      ]
    }
  );
});
sb.classes = zl;
sb.displayName = "@mantine/core/MenuDropdown";
const tG = {}, ab = Vr((t, e) => {
  const {
    classNames: n,
    className: i,
    style: r,
    styles: o,
    vars: s,
    color: a,
    closeMenuOnClick: l,
    leftSection: c,
    rightSection: f,
    children: d,
    disabled: u,
    ...h
  } = Ve("MenuItem", tG, t), p = $f(), m = Hi(), { dir: v } = Bf(), y = wt(), C = p.getItemIndex(y.current), k = h, _ = Sr(k.onMouseLeave, () => p.setHovered(-1)), S = Sr(
    k.onMouseEnter,
    () => p.setHovered(p.getItemIndex(y.current))
  ), E = Sr(k.onClick, () => {
    typeof l == "boolean" ? l && p.closeDropdownImmediately() : p.closeOnItemClick && p.closeDropdownImmediately();
  }), x = Sr(
    k.onFocus,
    () => p.setHovered(p.getItemIndex(y.current))
  ), N = a ? m.variantColorResolver({ color: a, theme: m, variant: "light" }) : void 0, R = a ? Hl({ color: a, theme: m }) : null;
  return /* @__PURE__ */ Q.jsxs(
    Ea,
    {
      ...h,
      unstyled: p.unstyled,
      tabIndex: p.menuItemTabIndex,
      onFocus: x,
      ...p.getStyles("item", { className: i, style: r, styles: o, classNames: n }),
      ref: So(y, e),
      role: "menuitem",
      disabled: u,
      "data-menu-item": !0,
      "data-disabled": u || void 0,
      "data-hovered": p.hovered === C ? !0 : void 0,
      "data-mantine-stop-propagation": !0,
      onMouseEnter: S,
      onMouseLeave: _,
      onClick: E,
      onKeyDown: LT({
        siblingSelector: "[data-menu-item]",
        parentSelector: "[data-menu-dropdown]",
        activateOnFocus: !1,
        loop: p.loop,
        dir: v,
        orientation: "vertical",
        onKeyDown: k.onKeyDown
      }),
      __vars: {
        "--menu-item-color": R != null && R.isThemeColor && (R == null ? void 0 : R.shade) === void 0 ? `var(--mantine-color-${R.color}-6)` : N == null ? void 0 : N.color,
        "--menu-item-hover": N == null ? void 0 : N.hover
      },
      children: [
        c && /* @__PURE__ */ Q.jsx("div", { ...p.getStyles("itemSection", { styles: o, classNames: n }), "data-position": "left", children: c }),
        d && /* @__PURE__ */ Q.jsx("div", { ...p.getStyles("itemLabel", { styles: o, classNames: n }), children: d }),
        f && /* @__PURE__ */ Q.jsx("div", { ...p.getStyles("itemSection", { styles: o, classNames: n }), "data-position": "right", children: f })
      ]
    }
  );
});
ab.classes = zl;
ab.displayName = "@mantine/core/MenuItem";
const nG = {}, lb = Ut((t, e) => {
  const { classNames: n, className: i, style: r, styles: o, vars: s, ...a } = Ve(
    "MenuLabel",
    nG,
    t
  ), l = $f();
  return /* @__PURE__ */ Q.jsx(
    pt,
    {
      ref: e,
      ...l.getStyles("label", { className: i, style: r, styles: o, classNames: n }),
      ...a
    }
  );
});
lb.classes = zl;
lb.displayName = "@mantine/core/MenuLabel";
const iG = {
  refProp: "ref"
}, bC = tt((t, e) => {
  const { children: n, refProp: i, ...r } = Ve("MenuTarget", iG, t);
  if (!Df(n))
    throw new Error(
      "Menu.Target component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported"
    );
  const o = $f(), s = Sr(n.props.onClick, () => {
    o.trigger === "click" ? o.toggleDropdown() : o.trigger === "click-hover" && (o.setOpenedViaClick(!0), o.opened || o.openDropdown());
  }), a = Sr(
    n.props.onMouseEnter,
    () => (o.trigger === "hover" || o.trigger === "click-hover") && o.openDropdown()
  ), l = Sr(n.props.onMouseLeave, () => {
    (o.trigger === "hover" || o.trigger === "click-hover" && !o.openedViaClick) && o.closeDropdown();
  });
  return /* @__PURE__ */ Q.jsx(xs.Target, { refProp: i, popupType: "menu", ref: e, ...r, children: kf(n, {
    onClick: s,
    onMouseEnter: a,
    onMouseLeave: l,
    "data-expanded": o.opened ? !0 : void 0
  }) });
});
bC.displayName = "@mantine/core/MenuTarget";
const rG = {
  trapFocus: !0,
  closeOnItemClick: !0,
  clickOutsideEvents: ["mousedown", "touchstart", "keydown"],
  loop: !0,
  trigger: "click",
  openDelay: 0,
  closeDelay: 100,
  menuItemTabIndex: -1
};
function dn(t) {
  const e = Ve("Menu", rG, t), {
    children: n,
    onOpen: i,
    onClose: r,
    opened: o,
    defaultOpened: s,
    trapFocus: a,
    onChange: l,
    closeOnItemClick: c,
    loop: f,
    closeOnEscape: d,
    trigger: u,
    openDelay: h,
    closeDelay: p,
    classNames: m,
    styles: v,
    unstyled: y,
    variant: C,
    vars: k,
    menuItemTabIndex: _,
    keepMounted: S,
    ...E
  } = e, x = zt({
    name: "Menu",
    classes: zl,
    props: e,
    classNames: m,
    styles: v,
    unstyled: y
  }), [N, { setHovered: R, resetHovered: A }] = kV(), [O, B] = Xh({
    value: o,
    defaultValue: s,
    finalValue: !1,
    onChange: l
  }), [U, K] = Be(!1), G = () => {
    B(!1), K(!1), O && (r == null || r());
  }, J = () => {
    B(!0), !O && (i == null || i());
  }, te = () => {
    O ? G() : J();
  }, { openDropdown: re, closeDropdown: X } = Jq({ open: J, close: G, closeDelay: p, openDelay: h }), D = (F) => bV("[data-menu-item]", "[data-menu-dropdown]", F), { resolvedClassNames: me, resolvedStyles: Se } = uW({
    classNames: m,
    styles: v,
    props: e
  });
  return ws(() => {
    A();
  }, [O]), /* @__PURE__ */ Q.jsx(
    Qq,
    {
      value: {
        getStyles: x,
        opened: O,
        toggleDropdown: te,
        getItemIndex: D,
        hovered: N,
        setHovered: R,
        openedViaClick: U,
        setOpenedViaClick: K,
        closeOnItemClick: c,
        closeDropdown: u === "click" ? G : X,
        openDropdown: u === "click" ? J : re,
        closeDropdownImmediately: G,
        loop: f,
        trigger: u,
        unstyled: y,
        menuItemTabIndex: _
      },
      children: /* @__PURE__ */ Q.jsx(
        xs,
        {
          ...E,
          opened: O,
          onChange: te,
          defaultOpened: s,
          trapFocus: S ? !1 : a,
          closeOnEscape: d,
          __staticSelector: "Menu",
          classNames: me,
          styles: Se,
          unstyled: y,
          variant: C,
          keepMounted: S,
          children: n
        }
      )
    }
  );
}
dn.extend = (t) => t;
dn.classes = zl;
dn.displayName = "@mantine/core/Menu";
dn.Item = ab;
dn.Label = lb;
dn.Dropdown = sb;
dn.Target = bC;
dn.Divider = ob;
const oG = {
  duration: 100,
  transition: "fade"
};
function sG(t, e) {
  return { ...oG, ...e, ...t };
}
function aG({
  offset: t,
  position: e,
  defaultOpened: n
}) {
  const [i, r] = Be(n), o = wt(), { x: s, y: a, elements: l, refs: c, update: f, placement: d } = _f({
    placement: e,
    middleware: [
      fh({
        crossAxis: !0,
        padding: 5,
        rootBoundary: "document"
      })
    ]
  }), u = d.includes("right") ? t : e.includes("left") ? t * -1 : 0, h = d.includes("bottom") ? t : e.includes("top") ? t * -1 : 0, p = Xe(
    ({ clientX: m, clientY: v }) => {
      c.setPositionReference({
        getBoundingClientRect() {
          return {
            width: 0,
            height: 0,
            x: m,
            y: v,
            left: m + u,
            top: v + h,
            right: m,
            bottom: v
          };
        }
      });
    },
    [l.reference]
  );
  return We(() => {
    if (c.floating.current) {
      const m = o.current;
      m.addEventListener("mousemove", p);
      const v = lo(c.floating.current);
      return v.forEach((y) => {
        y.addEventListener("scroll", f);
      }), () => {
        m.removeEventListener("mousemove", p), v.forEach((y) => {
          y.removeEventListener("scroll", f);
        });
      };
    }
  }, [l.reference, c.floating.current, f, p, i]), { handleMouseMove: p, x: s, y: a, opened: i, setOpened: r, boundaryRef: o, floating: c.setFloating };
}
var ap = { tooltip: "m_1b3c8819", arrow: "m_f898399f" };
const lG = {
  refProp: "ref",
  withinPortal: !0,
  offset: 10,
  defaultOpened: !1,
  position: "right",
  zIndex: Pf("popover")
}, cG = (t, { radius: e, color: n }) => ({
  tooltip: {
    "--tooltip-radius": e === void 0 ? void 0 : Ur(e),
    "--tooltip-bg": n ? wo(n, t) : void 0,
    "--tooltip-color": n ? "var(--mantine-color-white)" : void 0
  }
}), cb = Ut((t, e) => {
  const n = Ve("TooltipFloating", lG, t), {
    children: i,
    refProp: r,
    withinPortal: o,
    style: s,
    className: a,
    classNames: l,
    styles: c,
    unstyled: f,
    radius: d,
    color: u,
    label: h,
    offset: p,
    position: m,
    multiline: v,
    zIndex: y,
    disabled: C,
    defaultOpened: k,
    variant: _,
    vars: S,
    portalProps: E,
    ...x
  } = n, N = Hi(), R = zt({
    name: "TooltipFloating",
    props: n,
    classes: ap,
    className: a,
    style: s,
    classNames: l,
    styles: c,
    unstyled: f,
    rootSelector: "tooltip",
    vars: S,
    varsResolver: cG
  }), { handleMouseMove: A, x: O, y: B, opened: U, boundaryRef: K, floating: G, setOpened: J } = aG({
    offset: p,
    position: m,
    defaultOpened: k
  });
  if (!Df(i))
    throw new Error(
      "[@mantine/core] Tooltip.Floating component children should be an element or a component that accepts ref, fragments, strings, numbers and other primitive values are not supported"
    );
  const te = So(K, i.ref, e), re = (D) => {
    var me, Se;
    (Se = (me = i.props).onMouseEnter) == null || Se.call(me, D), A(D), J(!0);
  }, X = (D) => {
    var me, Se;
    (Se = (me = i.props).onMouseLeave) == null || Se.call(me, D), J(!1);
  };
  return /* @__PURE__ */ Q.jsxs(Q.Fragment, { children: [
    /* @__PURE__ */ Q.jsx(Zh, { ...E, withinPortal: o, children: /* @__PURE__ */ Q.jsx(
      pt,
      {
        ...x,
        ...R("tooltip", {
          style: {
            ...GT(s, N),
            zIndex: y,
            display: !C && U ? "block" : "none",
            top: (B && Math.round(B)) ?? "",
            left: (O && Math.round(O)) ?? ""
          }
        }),
        variant: _,
        ref: G,
        mod: { multiline: v },
        children: h
      }
    ) }),
    kf(i, {
      ...i.props,
      [r]: te,
      onMouseEnter: re,
      onMouseLeave: X
    })
  ] });
});
cb.classes = ap;
cb.displayName = "@mantine/core/TooltipFloating";
const kC = cr(!1), fG = kC.Provider, dG = () => fr(kC), uG = {
  openDelay: 0,
  closeDelay: 0
};
function fb(t) {
  const { openDelay: e, closeDelay: n, children: i } = Ve("TooltipGroup", uG, t);
  return /* @__PURE__ */ Q.jsx(fG, { value: !0, children: /* @__PURE__ */ Q.jsx(JA, { delay: { open: e, close: n }, children: i }) });
}
fb.displayName = "@mantine/core/TooltipGroup";
fb.extend = (t) => t;
function hG(t) {
  var E, x, N;
  const [e, n] = Be(t.defaultOpened), r = typeof t.opened == "boolean" ? t.opened : e, o = dG(), s = Jh(), { delay: a, currentId: l, setCurrentId: c } = G3(), f = Xe(
    (R) => {
      n(R), R && c(s);
    },
    [c, s]
  ), {
    x: d,
    y: u,
    context: h,
    refs: p,
    update: m,
    placement: v,
    middlewareData: { arrow: { x: y, y: C } = {} }
  } = _f({
    strategy: t.strategy,
    placement: t.position,
    open: r,
    onOpenChange: f,
    middleware: [
      _s(t.offset),
      fh({ padding: 8 }),
      gs(),
      U3({ element: t.arrowRef, padding: t.arrowOffset }),
      ...t.inline ? [x0()] : []
    ]
  }), { getReferenceProps: k, getFloatingProps: _ } = Y3([
    YA(h, {
      enabled: (E = t.events) == null ? void 0 : E.hover,
      delay: o ? a : { open: t.openDelay, close: t.closeDelay },
      mouseOnly: !((x = t.events) != null && x.touch)
    }),
    nM(h, { enabled: (N = t.events) == null ? void 0 : N.focus, visibleOnly: !0 }),
    rM(h, { role: "tooltip" }),
    // Cannot be used with controlled tooltip, page jumps
    K3(h, { enabled: typeof t.opened > "u" }),
    XA(h, { id: s })
  ]);
  oC({
    opened: r,
    position: t.position,
    positionDependencies: t.positionDependencies,
    floating: { refs: p, update: m }
  }), ws(() => {
    var R;
    (R = t.onPositionChange) == null || R.call(t, v);
  }, [v]);
  const S = r && l && l !== s;
  return {
    x: d,
    y: u,
    arrowX: y,
    arrowY: C,
    reference: p.setReference,
    floating: p.setFloating,
    getFloatingProps: _,
    getReferenceProps: k,
    isGroupPhase: S,
    opened: r,
    placement: v
  };
}
const N9 = {
  position: "top",
  refProp: "ref",
  withinPortal: !0,
  inline: !1,
  defaultOpened: !1,
  arrowSize: 4,
  arrowOffset: 5,
  arrowRadius: 0,
  arrowPosition: "side",
  offset: 5,
  transitionProps: { duration: 100, transition: "fade" },
  events: { hover: !0, focus: !1, touch: !1 },
  zIndex: Pf("popover"),
  positionDependencies: []
}, pG = (t, { radius: e, color: n }) => ({
  tooltip: {
    "--tooltip-radius": e === void 0 ? void 0 : Ur(e),
    "--tooltip-bg": n ? wo(n, t) : void 0,
    "--tooltip-color": n ? "var(--mantine-color-white)" : void 0
  }
}), jf = Ut((t, e) => {
  const n = Ve("Tooltip", N9, t), {
    children: i,
    position: r,
    refProp: o,
    label: s,
    openDelay: a,
    closeDelay: l,
    onPositionChange: c,
    opened: f,
    defaultOpened: d,
    withinPortal: u,
    radius: h,
    color: p,
    classNames: m,
    styles: v,
    unstyled: y,
    style: C,
    className: k,
    withArrow: _,
    arrowSize: S,
    arrowOffset: E,
    arrowRadius: x,
    arrowPosition: N,
    offset: R,
    transitionProps: A,
    multiline: O,
    events: B,
    zIndex: U,
    disabled: K,
    positionDependencies: G,
    onClick: J,
    onMouseEnter: te,
    onMouseLeave: re,
    inline: X,
    variant: D,
    keepMounted: me,
    vars: Se,
    portalProps: F,
    mod: Oe,
    floatingStrategy: ft,
    ...Re
  } = Ve("Tooltip", N9, n), { dir: qe } = Bf(), Ye = wt(null), Ge = hG({
    position: eC(qe, r),
    closeDelay: l,
    openDelay: a,
    onPositionChange: c,
    opened: f,
    defaultOpened: d,
    events: B,
    arrowRef: Ye,
    arrowOffset: E,
    offset: typeof R == "number" ? R + (_ ? S / 2 : 0) : R,
    positionDependencies: [...G, i],
    inline: X,
    strategy: ft
  }), st = zt({
    name: "Tooltip",
    props: n,
    classes: ap,
    className: k,
    style: C,
    classNames: m,
    styles: v,
    unstyled: y,
    rootSelector: "tooltip",
    vars: Se,
    varsResolver: pG
  });
  if (!Df(i))
    throw new Error(
      "[@mantine/core] Tooltip component children should be an element or a component that accepts ref, fragments, strings, numbers and other primitive values are not supported"
    );
  const Zt = So(Ge.reference, i.ref, e), Mt = sG(A, { duration: 100, transition: "fade" });
  return /* @__PURE__ */ Q.jsxs(Q.Fragment, { children: [
    /* @__PURE__ */ Q.jsx(Zh, { ...F, withinPortal: u, children: /* @__PURE__ */ Q.jsx(
      $l,
      {
        ...Mt,
        keepMounted: me,
        mounted: !K && !!Ge.opened,
        duration: Ge.isGroupPhase ? 10 : Mt.duration,
        children: (Dt) => /* @__PURE__ */ Q.jsxs(
          pt,
          {
            ...Re,
            "data-fixed": ft === "fixed" || void 0,
            variant: D,
            mod: [{ multiline: O }, Oe],
            ...Ge.getFloatingProps({
              ref: Ge.floating,
              className: st("tooltip").className,
              style: {
                ...st("tooltip").style,
                ...Dt,
                zIndex: U,
                top: Ge.y ?? 0,
                left: Ge.x ?? 0
              }
            }),
            children: [
              s,
              /* @__PURE__ */ Q.jsx(
                Kv,
                {
                  ref: Ye,
                  arrowX: Ge.arrowX,
                  arrowY: Ge.arrowY,
                  visible: _,
                  position: Ge.placement,
                  arrowSize: S,
                  arrowOffset: E,
                  arrowRadius: x,
                  arrowPosition: N,
                  ...st("arrow")
                }
              )
            ]
          }
        )
      }
    ) }),
    kf(
      i,
      Ge.getReferenceProps({
        onClick: J,
        onMouseEnter: te,
        onMouseLeave: re,
        onMouseMove: n.onMouseMove,
        onPointerDown: n.onPointerDown,
        onPointerEnter: n.onPointerEnter,
        [o]: Zt,
        className: xo(k, i.props.className),
        ...i.props
      })
    )
  ] });
});
jf.classes = ap;
jf.displayName = "@mantine/core/Tooltip";
jf.Floating = cb;
jf.Group = fb;
var wC = { root: "m_6d731127" };
const mG = {
  gap: "md",
  align: "stretch",
  justify: "flex-start"
}, gG = (t, { gap: e, align: n, justify: i }) => ({
  root: {
    "--stack-gap": Hv(e),
    "--stack-align": n,
    "--stack-justify": i
  }
}), zf = Ut((t, e) => {
  const n = Ve("Stack", mG, t), {
    classNames: i,
    className: r,
    style: o,
    styles: s,
    unstyled: a,
    vars: l,
    align: c,
    justify: f,
    gap: d,
    variant: u,
    ...h
  } = n, p = zt({
    name: "Stack",
    props: n,
    classes: wC,
    className: r,
    style: o,
    classNames: i,
    styles: s,
    unstyled: a,
    vars: l,
    varsResolver: gG
  });
  return /* @__PURE__ */ Q.jsx(pt, { ref: e, ...p("root"), variant: u, ...h });
});
zf.classes = wC;
zf.displayName = "@mantine/core/Stack";
const [yG, db] = Bv(
  "Tabs component was not found in the tree"
);
var Uf = { root: "m_89d60db1", "list--default": "m_576c9d4", list: "m_89d33d6d", panel: "m_b0c91715", tab: "m_4ec4dce6", tabSection: "m_fc420b1f", "tab--default": "m_539e827b", "list--outline": "m_6772fbd5", "tab--outline": "m_b59ab47c", "tab--pills": "m_c3381914" };
const vG = {}, ub = Ut((t, e) => {
  const n = Ve("TabsList", vG, t), { children: i, className: r, grow: o, justify: s, classNames: a, styles: l, style: c, mod: f, ...d } = n, u = db();
  return /* @__PURE__ */ Q.jsx(
    pt,
    {
      ...d,
      ...u.getStyles("list", {
        className: r,
        style: c,
        classNames: a,
        styles: l,
        props: n,
        variant: u.variant
      }),
      ref: e,
      role: "tablist",
      variant: u.variant,
      mod: [
        {
          grow: o,
          orientation: u.orientation,
          placement: u.orientation === "vertical" && u.placement,
          inverted: u.inverted
        },
        f
      ],
      "aria-orientation": u.orientation,
      __vars: { "--tabs-justify": s },
      children: i
    }
  );
});
ub.classes = Uf;
ub.displayName = "@mantine/core/TabsList";
const bG = {}, hb = Ut((t, e) => {
  const n = Ve("TabsPanel", bG, t), { children: i, className: r, value: o, classNames: s, styles: a, style: l, mod: c, keepMounted: f, ...d } = n, u = db(), h = u.value === o, p = u.keepMounted || f || h ? i : null;
  return /* @__PURE__ */ Q.jsx(
    pt,
    {
      ...d,
      ...u.getStyles("panel", {
        className: r,
        classNames: s,
        styles: a,
        style: [l, h ? void 0 : { display: "none" }],
        props: n
      }),
      ref: e,
      mod: [{ orientation: u.orientation }, c],
      role: "tabpanel",
      id: u.getPanelId(o),
      "aria-labelledby": u.getTabId(o),
      children: p
    }
  );
});
hb.classes = Uf;
hb.displayName = "@mantine/core/TabsPanel";
const kG = {}, pb = Ut((t, e) => {
  const n = Ve("TabsTab", kG, t), {
    className: i,
    children: r,
    rightSection: o,
    leftSection: s,
    value: a,
    onClick: l,
    onKeyDown: c,
    disabled: f,
    color: d,
    style: u,
    classNames: h,
    styles: p,
    vars: m,
    mod: v,
    ...y
  } = n, C = Hi(), { dir: k } = Bf(), _ = db(), S = a === _.value, E = (N) => {
    _.onChange(_.allowTabDeactivation && a === _.value ? null : a), l == null || l(N);
  }, x = { classNames: h, styles: p, props: n };
  return /* @__PURE__ */ Q.jsxs(
    Ea,
    {
      ...y,
      ..._.getStyles("tab", { className: i, style: u, variant: _.variant, ...x }),
      disabled: f,
      unstyled: _.unstyled,
      variant: _.variant,
      mod: [
        {
          active: S,
          disabled: f,
          orientation: _.orientation,
          inverted: _.inverted,
          placement: _.orientation === "vertical" && _.placement
        },
        v
      ],
      ref: e,
      role: "tab",
      id: _.getTabId(a),
      "aria-selected": S,
      tabIndex: S || _.value === null ? 0 : -1,
      "aria-controls": _.getPanelId(a),
      onClick: E,
      __vars: { "--tabs-color": d ? wo(d, C) : void 0 },
      onKeyDown: LT({
        siblingSelector: '[role="tab"]',
        parentSelector: '[role="tablist"]',
        activateOnFocus: _.activateTabWithKeyboard,
        loop: _.loop,
        orientation: _.orientation || "horizontal",
        dir: k,
        onKeyDown: c
      }),
      children: [
        s && /* @__PURE__ */ Q.jsx("span", { ..._.getStyles("tabSection", x), "data-position": "left", children: s }),
        r && /* @__PURE__ */ Q.jsx("span", { ..._.getStyles("tabLabel", x), children: r }),
        o && /* @__PURE__ */ Q.jsx("span", { ..._.getStyles("tabSection", x), "data-position": "right", children: o })
      ]
    }
  );
});
pb.classes = Uf;
pb.displayName = "@mantine/core/TabsTab";
const O9 = "Tabs.Tab or Tabs.Panel component was rendered with invalid value or without value", wG = {
  keepMounted: !0,
  orientation: "horizontal",
  loop: !0,
  activateTabWithKeyboard: !0,
  allowTabDeactivation: !1,
  unstyled: !1,
  inverted: !1,
  variant: "default",
  placement: "left"
}, _G = (t, { radius: e, color: n, autoContrast: i }) => ({
  root: {
    "--tabs-radius": Ur(e),
    "--tabs-color": wo(n, t),
    "--tabs-text-color": xW(i, t) ? UT({ color: n, theme: t, autoContrast: i }) : void 0
  }
}), ao = Ut((t, e) => {
  const n = Ve("Tabs", wG, t), {
    defaultValue: i,
    value: r,
    onChange: o,
    orientation: s,
    children: a,
    loop: l,
    id: c,
    activateTabWithKeyboard: f,
    allowTabDeactivation: d,
    variant: u,
    color: h,
    radius: p,
    inverted: m,
    placement: v,
    keepMounted: y,
    classNames: C,
    styles: k,
    unstyled: _,
    className: S,
    style: E,
    vars: x,
    autoContrast: N,
    mod: R,
    ...A
  } = n, O = Jh(c), [B, U] = Xh({
    value: r,
    defaultValue: i,
    finalValue: null,
    onChange: o
  }), K = zt({
    name: "Tabs",
    props: n,
    classes: Uf,
    className: S,
    style: E,
    classNames: C,
    styles: k,
    unstyled: _,
    vars: x,
    varsResolver: _G
  });
  return /* @__PURE__ */ Q.jsx(
    yG,
    {
      value: {
        placement: v,
        value: B,
        orientation: s,
        id: O,
        loop: l,
        activateTabWithKeyboard: f,
        getTabId: d9(`${O}-tab`, O9),
        getPanelId: d9(`${O}-panel`, O9),
        onChange: U,
        allowTabDeactivation: d,
        variant: u,
        color: h,
        radius: p,
        inverted: m,
        keepMounted: y,
        unstyled: _,
        getStyles: K
      },
      children: /* @__PURE__ */ Q.jsx(
        pt,
        {
          ref: e,
          id: O,
          variant: u,
          mod: [
            {
              orientation: s,
              inverted: s === "horizontal" && m,
              placement: s === "vertical" && v
            },
            R
          ],
          ...K("root"),
          ...A,
          children: a
        }
      )
    }
  );
});
ao.classes = Uf;
ao.displayName = "@mantine/core/Tabs";
ao.Tab = pb;
ao.Panel = hb;
ao.List = ub;
const EG = {}, lp = Ut((t, e) => {
  const n = Ve("TextInput", EG, t);
  return /* @__PURE__ */ Q.jsx(jl, { component: "input", ref: e, ...n, __staticSelector: "TextInput" });
});
lp.classes = jl.classes;
lp.displayName = "@mantine/core/TextInput";
var Fg = { exports: {} }, fc = {};
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var R9;
function TG() {
  if (R9) return fc;
  R9 = 1;
  var t = Ke, e = Symbol.for("react.element"), n = Symbol.for("react.fragment"), i = Object.prototype.hasOwnProperty, r = t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, o = { key: !0, ref: !0, __self: !0, __source: !0 };
  function s(a, l, c) {
    var f, d = {}, u = null, h = null;
    c !== void 0 && (u = "" + c), l.key !== void 0 && (u = "" + l.key), l.ref !== void 0 && (h = l.ref);
    for (f in l) i.call(l, f) && !o.hasOwnProperty(f) && (d[f] = l[f]);
    if (a && a.defaultProps) for (f in l = a.defaultProps, l) d[f] === void 0 && (d[f] = l[f]);
    return { $$typeof: e, type: a, key: u, ref: h, props: d, _owner: r.current };
  }
  return fc.Fragment = n, fc.jsx = s, fc.jsxs = s, fc;
}
var xd = {};
/**
 * @license React
 * react-jsx-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var I9;
function CG() {
  return I9 || (I9 = 1, process.env.NODE_ENV !== "production" && function() {
    var t = Ke, e = Symbol.for("react.element"), n = Symbol.for("react.portal"), i = Symbol.for("react.fragment"), r = Symbol.for("react.strict_mode"), o = Symbol.for("react.profiler"), s = Symbol.for("react.provider"), a = Symbol.for("react.context"), l = Symbol.for("react.forward_ref"), c = Symbol.for("react.suspense"), f = Symbol.for("react.suspense_list"), d = Symbol.for("react.memo"), u = Symbol.for("react.lazy"), h = Symbol.for("react.offscreen"), p = Symbol.iterator, m = "@@iterator";
    function v(b) {
      if (b === null || typeof b != "object")
        return null;
      var L = p && b[p] || b[m];
      return typeof L == "function" ? L : null;
    }
    var y = t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function C(b) {
      {
        for (var L = arguments.length, z = new Array(L > 1 ? L - 1 : 0), ee = 1; ee < L; ee++)
          z[ee - 1] = arguments[ee];
        k("error", b, z);
      }
    }
    function k(b, L, z) {
      {
        var ee = y.ReactDebugCurrentFrame, pe = ee.getStackAddendum();
        pe !== "" && (L += "%s", z = z.concat([pe]));
        var ke = z.map(function(de) {
          return String(de);
        });
        ke.unshift("Warning: " + L), Function.prototype.apply.call(console[b], console, ke);
      }
    }
    var _ = !1, S = !1, E = !1, x = !1, N = !1, R;
    R = Symbol.for("react.module.reference");
    function A(b) {
      return !!(typeof b == "string" || typeof b == "function" || b === i || b === o || N || b === r || b === c || b === f || x || b === h || _ || S || E || typeof b == "object" && b !== null && (b.$$typeof === u || b.$$typeof === d || b.$$typeof === s || b.$$typeof === a || b.$$typeof === l || // This needs to include all possible module reference object
      // types supported by any Flight configuration anywhere since
      // we don't know which Flight build this will end up being used
      // with.
      b.$$typeof === R || b.getModuleId !== void 0));
    }
    function O(b, L, z) {
      var ee = b.displayName;
      if (ee)
        return ee;
      var pe = L.displayName || L.name || "";
      return pe !== "" ? z + "(" + pe + ")" : z;
    }
    function B(b) {
      return b.displayName || "Context";
    }
    function U(b) {
      if (b == null)
        return null;
      if (typeof b.tag == "number" && C("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof b == "function")
        return b.displayName || b.name || null;
      if (typeof b == "string")
        return b;
      switch (b) {
        case i:
          return "Fragment";
        case n:
          return "Portal";
        case o:
          return "Profiler";
        case r:
          return "StrictMode";
        case c:
          return "Suspense";
        case f:
          return "SuspenseList";
      }
      if (typeof b == "object")
        switch (b.$$typeof) {
          case a:
            var L = b;
            return B(L) + ".Consumer";
          case s:
            var z = b;
            return B(z._context) + ".Provider";
          case l:
            return O(b, b.render, "ForwardRef");
          case d:
            var ee = b.displayName || null;
            return ee !== null ? ee : U(b.type) || "Memo";
          case u: {
            var pe = b, ke = pe._payload, de = pe._init;
            try {
              return U(de(ke));
            } catch {
              return null;
            }
          }
        }
      return null;
    }
    var K = Object.assign, G = 0, J, te, re, X, D, me, Se;
    function F() {
    }
    F.__reactDisabledLog = !0;
    function Oe() {
      {
        if (G === 0) {
          J = console.log, te = console.info, re = console.warn, X = console.error, D = console.group, me = console.groupCollapsed, Se = console.groupEnd;
          var b = {
            configurable: !0,
            enumerable: !0,
            value: F,
            writable: !0
          };
          Object.defineProperties(console, {
            info: b,
            log: b,
            warn: b,
            error: b,
            group: b,
            groupCollapsed: b,
            groupEnd: b
          });
        }
        G++;
      }
    }
    function ft() {
      {
        if (G--, G === 0) {
          var b = {
            configurable: !0,
            enumerable: !0,
            writable: !0
          };
          Object.defineProperties(console, {
            log: K({}, b, {
              value: J
            }),
            info: K({}, b, {
              value: te
            }),
            warn: K({}, b, {
              value: re
            }),
            error: K({}, b, {
              value: X
            }),
            group: K({}, b, {
              value: D
            }),
            groupCollapsed: K({}, b, {
              value: me
            }),
            groupEnd: K({}, b, {
              value: Se
            })
          });
        }
        G < 0 && C("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
      }
    }
    var Re = y.ReactCurrentDispatcher, qe;
    function Ye(b, L, z) {
      {
        if (qe === void 0)
          try {
            throw Error();
          } catch (pe) {
            var ee = pe.stack.trim().match(/\n( *(at )?)/);
            qe = ee && ee[1] || "";
          }
        return `
` + qe + b;
      }
    }
    var Ge = !1, st;
    {
      var Zt = typeof WeakMap == "function" ? WeakMap : Map;
      st = new Zt();
    }
    function Mt(b, L) {
      if (!b || Ge)
        return "";
      {
        var z = st.get(b);
        if (z !== void 0)
          return z;
      }
      var ee;
      Ge = !0;
      var pe = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0;
      var ke;
      ke = Re.current, Re.current = null, Oe();
      try {
        if (L) {
          var de = function() {
            throw Error();
          };
          if (Object.defineProperty(de.prototype, "props", {
            set: function() {
              throw Error();
            }
          }), typeof Reflect == "object" && Reflect.construct) {
            try {
              Reflect.construct(de, []);
            } catch (Je) {
              ee = Je;
            }
            Reflect.construct(b, [], de);
          } else {
            try {
              de.call();
            } catch (Je) {
              ee = Je;
            }
            b.call(de.prototype);
          }
        } else {
          try {
            throw Error();
          } catch (Je) {
            ee = Je;
          }
          b();
        }
      } catch (Je) {
        if (Je && ee && typeof Je.stack == "string") {
          for (var ae = Je.stack.split(`
`), Ue = ee.stack.split(`
`), xe = ae.length - 1, Ne = Ue.length - 1; xe >= 1 && Ne >= 0 && ae[xe] !== Ue[Ne]; )
            Ne--;
          for (; xe >= 1 && Ne >= 0; xe--, Ne--)
            if (ae[xe] !== Ue[Ne]) {
              if (xe !== 1 || Ne !== 1)
                do
                  if (xe--, Ne--, Ne < 0 || ae[xe] !== Ue[Ne]) {
                    var it = `
` + ae[xe].replace(" at new ", " at ");
                    return b.displayName && it.includes("<anonymous>") && (it = it.replace("<anonymous>", b.displayName)), typeof b == "function" && st.set(b, it), it;
                  }
                while (xe >= 1 && Ne >= 0);
              break;
            }
        }
      } finally {
        Ge = !1, Re.current = ke, ft(), Error.prepareStackTrace = pe;
      }
      var an = b ? b.displayName || b.name : "", Vt = an ? Ye(an) : "";
      return typeof b == "function" && st.set(b, Vt), Vt;
    }
    function Dt(b, L, z) {
      return Mt(b, !1);
    }
    function dt(b) {
      var L = b.prototype;
      return !!(L && L.isReactComponent);
    }
    function W(b, L, z) {
      if (b == null)
        return "";
      if (typeof b == "function")
        return Mt(b, dt(b));
      if (typeof b == "string")
        return Ye(b);
      switch (b) {
        case c:
          return Ye("Suspense");
        case f:
          return Ye("SuspenseList");
      }
      if (typeof b == "object")
        switch (b.$$typeof) {
          case l:
            return Dt(b.render);
          case d:
            return W(b.type, L, z);
          case u: {
            var ee = b, pe = ee._payload, ke = ee._init;
            try {
              return W(ke(pe), L, z);
            } catch {
            }
          }
        }
      return "";
    }
    var Y = Object.prototype.hasOwnProperty, fe = {}, Ee = y.ReactDebugCurrentFrame;
    function I(b) {
      if (b) {
        var L = b._owner, z = W(b.type, b._source, L ? L.type : null);
        Ee.setExtraStackFrame(z);
      } else
        Ee.setExtraStackFrame(null);
    }
    function g(b, L, z, ee, pe) {
      {
        var ke = Function.call.bind(Y);
        for (var de in b)
          if (ke(b, de)) {
            var ae = void 0;
            try {
              if (typeof b[de] != "function") {
                var Ue = Error((ee || "React class") + ": " + z + " type `" + de + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof b[de] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                throw Ue.name = "Invariant Violation", Ue;
              }
              ae = b[de](L, de, ee, z, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
            } catch (xe) {
              ae = xe;
            }
            ae && !(ae instanceof Error) && (I(pe), C("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", ee || "React class", z, de, typeof ae), I(null)), ae instanceof Error && !(ae.message in fe) && (fe[ae.message] = !0, I(pe), C("Failed %s type: %s", z, ae.message), I(null));
          }
      }
    }
    var T = Array.isArray;
    function M(b) {
      return T(b);
    }
    function j(b) {
      {
        var L = typeof Symbol == "function" && Symbol.toStringTag, z = L && b[Symbol.toStringTag] || b.constructor.name || "Object";
        return z;
      }
    }
    function q(b) {
      try {
        return Z(b), !1;
      } catch {
        return !0;
      }
    }
    function Z(b) {
      return "" + b;
    }
    function Te(b) {
      if (q(b))
        return C("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", j(b)), Z(b);
    }
    var V = y.ReactCurrentOwner, se = {
      key: !0,
      ref: !0,
      __self: !0,
      __source: !0
    }, ue, _e, Le;
    Le = {};
    function Ht(b) {
      if (Y.call(b, "ref")) {
        var L = Object.getOwnPropertyDescriptor(b, "ref").get;
        if (L && L.isReactWarning)
          return !1;
      }
      return b.ref !== void 0;
    }
    function en(b) {
      if (Y.call(b, "key")) {
        var L = Object.getOwnPropertyDescriptor(b, "key").get;
        if (L && L.isReactWarning)
          return !1;
      }
      return b.key !== void 0;
    }
    function tn(b, L) {
      if (typeof b.ref == "string" && V.current && L && V.current.stateNode !== L) {
        var z = U(V.current.type);
        Le[z] || (C('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', U(V.current.type), b.ref), Le[z] = !0);
      }
    }
    function gn(b, L) {
      {
        var z = function() {
          ue || (ue = !0, C("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", L));
        };
        z.isReactWarning = !0, Object.defineProperty(b, "key", {
          get: z,
          configurable: !0
        });
      }
    }
    function yn(b, L) {
      {
        var z = function() {
          _e || (_e = !0, C("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", L));
        };
        z.isReactWarning = !0, Object.defineProperty(b, "ref", {
          get: z,
          configurable: !0
        });
      }
    }
    var Nt = function(b, L, z, ee, pe, ke, de) {
      var ae = {
        // This tag allows us to uniquely identify this as a React Element
        $$typeof: e,
        // Built-in properties that belong on the element
        type: b,
        key: L,
        ref: z,
        props: de,
        // Record the component responsible for creating this element.
        _owner: ke
      };
      return ae._store = {}, Object.defineProperty(ae._store, "validated", {
        configurable: !1,
        enumerable: !1,
        writable: !0,
        value: !1
      }), Object.defineProperty(ae, "_self", {
        configurable: !1,
        enumerable: !1,
        writable: !1,
        value: ee
      }), Object.defineProperty(ae, "_source", {
        configurable: !1,
        enumerable: !1,
        writable: !1,
        value: pe
      }), Object.freeze && (Object.freeze(ae.props), Object.freeze(ae)), ae;
    };
    function qr(b, L, z, ee, pe) {
      {
        var ke, de = {}, ae = null, Ue = null;
        z !== void 0 && (Te(z), ae = "" + z), en(L) && (Te(L.key), ae = "" + L.key), Ht(L) && (Ue = L.ref, tn(L, pe));
        for (ke in L)
          Y.call(L, ke) && !se.hasOwnProperty(ke) && (de[ke] = L[ke]);
        if (b && b.defaultProps) {
          var xe = b.defaultProps;
          for (ke in xe)
            de[ke] === void 0 && (de[ke] = xe[ke]);
        }
        if (ae || Ue) {
          var Ne = typeof b == "function" ? b.displayName || b.name || "Unknown" : b;
          ae && gn(de, Ne), Ue && yn(de, Ne);
        }
        return Nt(b, ae, Ue, pe, ee, V.current, de);
      }
    }
    var nn = y.ReactCurrentOwner, No = y.ReactDebugCurrentFrame;
    function sn(b) {
      if (b) {
        var L = b._owner, z = W(b.type, b._source, L ? L.type : null);
        No.setExtraStackFrame(z);
      } else
        No.setExtraStackFrame(null);
    }
    var Vi;
    Vi = !1;
    function Wi(b) {
      return typeof b == "object" && b !== null && b.$$typeof === e;
    }
    function Oo() {
      {
        if (nn.current) {
          var b = U(nn.current.type);
          if (b)
            return `

Check the render method of \`` + b + "`.";
        }
        return "";
      }
    }
    function ql(b) {
      return "";
    }
    var Ro = {};
    function Gl(b) {
      {
        var L = Oo();
        if (!L) {
          var z = typeof b == "string" ? b : b.displayName || b.name;
          z && (L = `

Check the top-level render call using <` + z + ">.");
        }
        return L;
      }
    }
    function Io(b, L) {
      {
        if (!b._store || b._store.validated || b.key != null)
          return;
        b._store.validated = !0;
        var z = Gl(L);
        if (Ro[z])
          return;
        Ro[z] = !0;
        var ee = "";
        b && b._owner && b._owner !== nn.current && (ee = " It was passed a child from " + U(b._owner.type) + "."), sn(b), C('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', z, ee), sn(null);
      }
    }
    function Lo(b, L) {
      {
        if (typeof b != "object")
          return;
        if (M(b))
          for (var z = 0; z < b.length; z++) {
            var ee = b[z];
            Wi(ee) && Io(ee, L);
          }
        else if (Wi(b))
          b._store && (b._store.validated = !0);
        else if (b) {
          var pe = v(b);
          if (typeof pe == "function" && pe !== b.entries)
            for (var ke = pe.call(b), de; !(de = ke.next()).done; )
              Wi(de.value) && Io(de.value, L);
        }
      }
    }
    function Kl(b) {
      {
        var L = b.type;
        if (L == null || typeof L == "string")
          return;
        var z;
        if (typeof L == "function")
          z = L.propTypes;
        else if (typeof L == "object" && (L.$$typeof === l || // Note: Memo only checks outer props here.
        // Inner props are checked in the reconciler.
        L.$$typeof === d))
          z = L.propTypes;
        else
          return;
        if (z) {
          var ee = U(L);
          g(z, b.props, "prop", ee, b);
        } else if (L.PropTypes !== void 0 && !Vi) {
          Vi = !0;
          var pe = U(L);
          C("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", pe || "Unknown");
        }
        typeof L.getDefaultProps == "function" && !L.getDefaultProps.isReactClassApproved && C("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
      }
    }
    function Yl(b) {
      {
        for (var L = Object.keys(b.props), z = 0; z < L.length; z++) {
          var ee = L[z];
          if (ee !== "children" && ee !== "key") {
            sn(b), C("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", ee), sn(null);
            break;
          }
        }
        b.ref !== null && (sn(b), C("Invalid attribute `ref` supplied to `React.Fragment`."), sn(null));
      }
    }
    var Do = {};
    function Po(b, L, z, ee, pe, ke) {
      {
        var de = A(b);
        if (!de) {
          var ae = "";
          (b === void 0 || typeof b == "object" && b !== null && Object.keys(b).length === 0) && (ae += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
          var Ue = ql();
          Ue ? ae += Ue : ae += Oo();
          var xe;
          b === null ? xe = "null" : M(b) ? xe = "array" : b !== void 0 && b.$$typeof === e ? (xe = "<" + (U(b.type) || "Unknown") + " />", ae = " Did you accidentally export a JSX literal instead of a component?") : xe = typeof b, C("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", xe, ae);
        }
        var Ne = qr(b, L, z, pe, ke);
        if (Ne == null)
          return Ne;
        if (de) {
          var it = L.children;
          if (it !== void 0)
            if (ee)
              if (M(it)) {
                for (var an = 0; an < it.length; an++)
                  Lo(it[an], b);
                Object.freeze && Object.freeze(it);
              } else
                C("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
            else
              Lo(it, b);
        }
        if (Y.call(L, "key")) {
          var Vt = U(b), Je = Object.keys(L).filter(function(tc) {
            return tc !== "key";
          }), qi = Je.length > 0 ? "{key: someKey, " + Je.join(": ..., ") + ": ...}" : "{key: someKey}";
          if (!Do[Vt + qi]) {
            var ec = Je.length > 0 ? "{" + Je.join(": ..., ") + ": ...}" : "{}";
            C(`A props object containing a "key" prop is being spread into JSX:
  let props = %s;
  <%s {...props} />
React keys must be passed directly to JSX without using spread:
  let props = %s;
  <%s key={someKey} {...props} />`, qi, Vt, ec, Vt), Do[Vt + qi] = !0;
          }
        }
        return b === i ? Yl(Ne) : Kl(Ne), Ne;
      }
    }
    function Jl(b, L, z) {
      return Po(b, L, z, !0);
    }
    function Xl(b, L, z) {
      return Po(b, L, z, !1);
    }
    var Ql = Xl, Zl = Jl;
    xd.Fragment = i, xd.jsx = Ql, xd.jsxs = Zl;
  }()), xd;
}
process.env.NODE_ENV === "production" ? Fg.exports = TG() : Fg.exports = CG();
var Ce = Fg.exports;
const _C = (t, e, n = !1) => {
  const i = [];
  function r(o, s = "--bn") {
    for (const a in o) {
      const l = a.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase(), c = `${s}-${l}`;
      typeof o[a] != "object" ? (typeof o[a] == "number" && (o[a] = `${o[a]}px`), n ? e.style.removeProperty(c) : e.style.setProperty(c, o[a].toString())) : r(o[a], c);
    }
  }
  return r(t), i;
}, L9 = (t, e) => _C(t, e), SG = {
  colors: {
    editor: {
      text: void 0,
      background: void 0
    },
    menu: {
      text: void 0,
      background: void 0
    },
    tooltip: {
      text: void 0,
      background: void 0
    },
    hovered: {
      text: void 0,
      background: void 0
    },
    selected: {
      text: void 0,
      background: void 0
    },
    disabled: {
      text: void 0,
      background: void 0
    },
    shadow: void 0,
    border: void 0,
    sideMenu: void 0,
    highlights: {
      gray: {
        text: void 0,
        background: void 0
      },
      brown: {
        text: void 0,
        background: void 0
      },
      red: {
        text: void 0,
        background: void 0
      },
      orange: {
        text: void 0,
        background: void 0
      },
      yellow: {
        text: void 0,
        background: void 0
      },
      green: {
        text: void 0,
        background: void 0
      },
      blue: {
        text: void 0,
        background: void 0
      },
      purple: {
        text: void 0,
        background: void 0
      },
      pink: {
        text: void 0,
        background: void 0
      }
    }
  },
  borderRadius: void 0,
  fontFamily: void 0
}, xG = (t) => _C(SG, t, !0), AG = tt((t, e) => {
  const {
    className: n,
    name: i,
    label: r,
    icon: o,
    value: s,
    autoFocus: a,
    placeholder: l,
    onKeyDown: c,
    onChange: f,
    onSubmit: d,
    ...u
  } = t;
  return _t(u), /* @__PURE__ */ Ce.jsx(
    lp,
    {
      size: "xs",
      className: n,
      ref: e,
      name: i,
      label: r,
      leftSection: o,
      value: s,
      autoFocus: a,
      "data-autofocus": a ? "true" : void 0,
      placeholder: l,
      onKeyDown: c,
      onChange: f,
      onSubmit: d
    }
  );
});
var EC = {
  color: void 0,
  size: void 0,
  className: void 0,
  style: void 0,
  attr: void 0
}, D9 = Ke.createContext && /* @__PURE__ */ Ke.createContext(EC), MG = ["attr", "size", "title"];
function NG(t, e) {
  if (t == null) return {};
  var n = OG(t, e), i, r;
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    for (r = 0; r < o.length; r++)
      i = o[r], !(e.indexOf(i) >= 0) && Object.prototype.propertyIsEnumerable.call(t, i) && (n[i] = t[i]);
  }
  return n;
}
function OG(t, e) {
  if (t == null) return {};
  var n = {};
  for (var i in t)
    if (Object.prototype.hasOwnProperty.call(t, i)) {
      if (e.indexOf(i) >= 0) continue;
      n[i] = t[i];
    }
  return n;
}
function B1() {
  return B1 = Object.assign ? Object.assign.bind() : function(t) {
    for (var e = 1; e < arguments.length; e++) {
      var n = arguments[e];
      for (var i in n)
        Object.prototype.hasOwnProperty.call(n, i) && (t[i] = n[i]);
    }
    return t;
  }, B1.apply(this, arguments);
}
function P9(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var i = Object.getOwnPropertySymbols(t);
    e && (i = i.filter(function(r) {
      return Object.getOwnPropertyDescriptor(t, r).enumerable;
    })), n.push.apply(n, i);
  }
  return n;
}
function H1(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2 ? P9(Object(n), !0).forEach(function(i) {
      RG(t, i, n[i]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : P9(Object(n)).forEach(function(i) {
      Object.defineProperty(t, i, Object.getOwnPropertyDescriptor(n, i));
    });
  }
  return t;
}
function RG(t, e, n) {
  return e = IG(e), e in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function IG(t) {
  var e = LG(t, "string");
  return typeof e == "symbol" ? e : e + "";
}
function LG(t, e) {
  if (typeof t != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var i = n.call(t, e || "default");
    if (typeof i != "object") return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
function TC(t) {
  return t && t.map((e, n) => /* @__PURE__ */ Ke.createElement(e.tag, H1({
    key: n
  }, e.attr), TC(e.child)));
}
function CC(t) {
  return (e) => /* @__PURE__ */ Ke.createElement(DG, B1({
    attr: H1({}, t.attr)
  }, e), TC(t.child));
}
function DG(t) {
  var e = (n) => {
    var {
      attr: i,
      size: r,
      title: o
    } = t, s = NG(t, MG), a = r || n.size || "1em", l;
    return n.className && (l = n.className), t.className && (l = (l ? l + " " : "") + t.className), /* @__PURE__ */ Ke.createElement("svg", B1({
      stroke: "currentColor",
      fill: "currentColor",
      strokeWidth: "0"
    }, n.attr, i, s, {
      className: l,
      style: H1(H1({
        color: t.color || n.color
      }, n.style), t.style),
      height: a,
      width: a,
      xmlns: "http://www.w3.org/2000/svg"
    }), o && /* @__PURE__ */ Ke.createElement("title", null, o), t.children);
  };
  return D9 !== void 0 ? /* @__PURE__ */ Ke.createElement(D9.Consumer, null, (n) => e(n)) : e(EC);
}
function PG(t) {
  return CC({ tag: "svg", attr: { viewBox: "0 0 20 20", fill: "currentColor", "aria-hidden": "true" }, child: [{ tag: "path", attr: { fillRule: "evenodd", d: "M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z", clipRule: "evenodd" }, child: [] }] })(t);
}
function FG(t) {
  return CC({ tag: "svg", attr: { viewBox: "0 0 20 20", fill: "currentColor", "aria-hidden": "true" }, child: [{ tag: "path", attr: { fillRule: "evenodd", d: "M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z", clipRule: "evenodd" }, child: [] }] })(t);
}
const SC = cr(void 0), BG = tt((t, e) => {
  const {
    children: n,
    onOpenChange: i,
    position: r,
    sub: o,
    // not used
    ...s
  } = t;
  _t(s);
  const [a, l] = Be(!1), c = wt(null), f = wt(), d = Xe(() => {
    f.current && clearTimeout(f.current), f.current = setTimeout(() => {
      l(!1);
    }, 250);
  }, []), u = Xe(() => {
    f.current && clearTimeout(f.current), l(!0);
  }, []);
  return /* @__PURE__ */ Ce.jsx(
    SC.Provider,
    {
      value: {
        onMenuMouseOver: u,
        onMenuMouseLeave: d
      },
      children: /* @__PURE__ */ Ce.jsx(
        dn.Item,
        {
          className: "bn-menu-item bn-mt-sub-menu-item",
          ref: Ff(e, c),
          onMouseOver: u,
          onMouseLeave: d,
          children: /* @__PURE__ */ Ce.jsx(
            dn,
            {
              portalProps: {
                target: c.current ? c.current.parentElement : void 0
              },
              middlewares: { flip: !0, shift: !0, inline: !1, size: !0 },
              trigger: "hover",
              opened: a,
              onClose: () => i == null ? void 0 : i(!1),
              onOpen: () => i == null ? void 0 : i(!0),
              position: r,
              children: n
            }
          )
        }
      )
    }
  );
}), HG = (t) => {
  const { children: e, onOpenChange: n, position: i, sub: r, ...o } = t;
  return _t(o), r ? /* @__PURE__ */ Ce.jsx(BG, { ...t }) : /* @__PURE__ */ Ce.jsx(
    dn,
    {
      withinPortal: !1,
      middlewares: { flip: !0, shift: !0, inline: !1, size: !0 },
      onClose: () => n == null ? void 0 : n(!1),
      onOpen: () => n == null ? void 0 : n(!0),
      position: i,
      children: e
    }
  );
}, $G = tt((t, e) => {
  const { className: n, children: i, icon: r, checked: o, subTrigger: s, onClick: a, ...l } = t;
  return _t(l, !1), s ? /* @__PURE__ */ Ce.jsxs("div", { ref: e, ...l, children: [
    i,
    /* @__PURE__ */ Ce.jsx(FG, { size: 15 })
  ] }) : /* @__PURE__ */ Ce.jsx(
    dn.Item,
    {
      className: n,
      ref: e,
      leftSection: r,
      rightSection: o ? /* @__PURE__ */ Ce.jsx(mC, { size: 10 }) : o === !1 ? /* @__PURE__ */ Ce.jsx("div", { className: "bn-tick-space" }) : null,
      onClick: a,
      ...l,
      children: i
    }
  );
}), jG = (t) => {
  const {
    children: e,
    sub: n,
    // unused
    ...i
  } = t;
  return _t(i), /* @__PURE__ */ Ce.jsx(dn.Target, { children: e });
}, zG = tt((t, e) => {
  const {
    className: n,
    children: i,
    sub: r,
    //unused
    ...o
  } = t;
  _t(o);
  const s = fr(SC);
  return /* @__PURE__ */ Ce.jsx(
    dn.Dropdown,
    {
      className: n,
      ref: e,
      onMouseOver: s == null ? void 0 : s.onMenuMouseOver,
      onMouseLeave: s == null ? void 0 : s.onMenuMouseLeave,
      children: i
    }
  );
}), UG = tt((t, e) => {
  const { className: n, ...i } = t;
  return _t(i), /* @__PURE__ */ Ce.jsx(dn.Divider, { className: n, ref: e });
}), VG = tt((t, e) => {
  const { className: n, children: i, ...r } = t;
  return _t(r), /* @__PURE__ */ Ce.jsx(dn.Label, { className: n, ref: e, children: i });
}), WG = tt((t, e) => {
  const {
    className: n,
    tabs: i,
    defaultOpenTab: r,
    openTab: o,
    setOpenTab: s,
    loading: a,
    ...l
  } = t;
  return _t(l), /* @__PURE__ */ Ce.jsx(hi, { className: n, ref: e, children: /* @__PURE__ */ Ce.jsxs(
    ao,
    {
      value: o,
      defaultValue: r,
      onChange: s,
      children: [
        a && /* @__PURE__ */ Ce.jsx(rb, { visible: a }),
        /* @__PURE__ */ Ce.jsx(ao.List, { children: i.map((c) => /* @__PURE__ */ Ce.jsx(
          ao.Tab,
          {
            "data-test": `${c.name.toLowerCase()}-tab`,
            value: c.name,
            children: c.name
          },
          c.name
        )) }),
        i.map((c) => /* @__PURE__ */ Ce.jsx(ao.Panel, { value: c.name, children: c.tabPanel }, c.name))
      ]
    }
  ) });
}), qG = tt((t, e) => {
  const { className: n, children: i, onClick: r, label: o, ...s } = t;
  return _t(s), /* @__PURE__ */ Ce.jsx(
    Ms,
    {
      size: "xs",
      "aria-label": o,
      className: n,
      ref: e,
      onClick: r,
      ...s,
      children: i
    }
  );
}), GG = tt((t, e) => {
  const { className: n, accept: i, value: r, placeholder: o, onChange: s, ...a } = t;
  return _t(a), /* @__PURE__ */ Ce.jsx(
    Yq,
    {
      size: "xs",
      className: n,
      ref: e,
      accept: i,
      value: r,
      placeholder: o,
      onChange: s,
      ...a
    }
  );
}), KG = tt((t, e) => {
  const { className: n, children: i, ...r } = t;
  return _t(r), /* @__PURE__ */ Ce.jsx("div", { className: n, ref: e, children: i });
}), YG = tt((t, e) => {
  const { className: n, value: i, placeholder: r, onKeyDown: o, onChange: s, ...a } = t;
  return _t(a), /* @__PURE__ */ Ce.jsx(
    lp,
    {
      size: "xs",
      "data-test": "embed-input",
      className: n,
      ref: e,
      value: i,
      placeholder: r,
      onKeyDown: o,
      onChange: s
    }
  );
}), JG = (t) => {
  const { children: e, opened: n, position: i, ...r } = t;
  return _t(r), /* @__PURE__ */ Ce.jsx(
    xs,
    {
      withinPortal: !1,
      zIndex: 1e4,
      opened: n,
      position: i,
      children: e
    }
  );
}, XG = (t) => {
  const { children: e, ...n } = t;
  return _t(n), /* @__PURE__ */ Ce.jsx(Jv, { children: e });
}, QG = tt((t, e) => {
  const {
    className: n,
    children: i,
    variant: r,
    // unused
    ...o
  } = t;
  return _t(o), /* @__PURE__ */ Ce.jsx(ep, { className: n, ref: e, children: i });
}), ZG = tt((t, e) => {
  const { className: n, children: i, ...r } = t;
  return _t(r, !1), /* @__PURE__ */ Ce.jsx(
    hi,
    {
      align: "center",
      gap: 0,
      className: n,
      ref: e,
      ...r,
      children: i
    }
  );
}), eK = tt((t, e) => {
  const {
    className: n,
    children: i,
    icon: r,
    onClick: o,
    onDragEnd: s,
    onDragStart: a,
    draggable: l,
    label: c,
    ...f
  } = t;
  return _t(f, !1), r ? /* @__PURE__ */ Ce.jsx(
    Hf,
    {
      size: 24,
      className: n,
      ref: e,
      onClick: o,
      onDragEnd: s,
      onDragStart: a,
      draggable: l,
      "aria-label": c,
      ...f,
      children: r
    }
  ) : /* @__PURE__ */ Ce.jsx(
    Ms,
    {
      className: n,
      ref: e,
      onClick: o,
      onDragEnd: s,
      onDragStart: a,
      draggable: l,
      "aria-label": c,
      ...f,
      children: i
    }
  );
}), tK = tt((t, e) => {
  const { className: n, children: i, id: r, columns: o, ...s } = t;
  return _t(s), /* @__PURE__ */ Ce.jsx(
    "div",
    {
      className: n,
      style: { gridTemplateColumns: `repeat(${o}, 1fr)` },
      ref: e,
      id: r,
      role: "grid",
      children: i
    }
  );
}), nK = tt((t, e) => {
  const { className: n, children: i, columns: r, ...o } = t;
  return _t(o), /* @__PURE__ */ Ce.jsx(
    hi,
    {
      className: n,
      style: { gridColumn: `1 / ${r + 1}` },
      ref: e,
      children: /* @__PURE__ */ Ce.jsx(hi, { className: "bn-mt-suggestion-menu-item-title", children: i })
    }
  );
}), iK = tt((t, e) => {
  const { className: n, isSelected: i, onClick: r, item: o, id: s, ...a } = t;
  _t(a);
  const l = wt(null);
  return We(() => {
    if (!l.current || !i)
      return;
    const c = OT(
      l.current,
      document.querySelector(".bn-grid-suggestion-menu")
    );
    c === "top" ? l.current.scrollIntoView(!0) : c === "bottom" && l.current.scrollIntoView(!1);
  }, [i]), /* @__PURE__ */ Ce.jsx(
    "div",
    {
      className: n,
      ref: Ff(e, l),
      id: s,
      role: "option",
      onClick: r,
      "aria-selected": i || void 0,
      children: o.icon
    }
  );
}), rK = tt((t, e) => {
  const {
    className: n,
    children: i,
    // unused, using "dots" instead
    columns: r,
    ...o
  } = t;
  return _t(o), /* @__PURE__ */ Ce.jsx(
    As,
    {
      className: n,
      style: { gridColumn: `1 / ${r + 1}` },
      type: "dots",
      ref: e
    }
  );
}), oK = tt((t, e) => {
  const { className: n, children: i, id: r, ...o } = t;
  return _t(o), /* @__PURE__ */ Ce.jsx(
    zf,
    {
      gap: 0,
      className: n,
      ref: e,
      id: r,
      role: "listbox",
      children: i
    }
  );
}), sK = tt((t, e) => {
  const { className: n, children: i, ...r } = t;
  return _t(r), /* @__PURE__ */ Ce.jsx(hi, { className: n, ref: e, children: /* @__PURE__ */ Ce.jsx(hi, { className: "bn-mt-suggestion-menu-item-title", children: i }) });
}), aK = tt((t, e) => {
  const { className: n, isSelected: i, onClick: r, item: o, id: s, ...a } = t;
  _t(a);
  const l = wt(null);
  return We(() => {
    if (!l.current || !i)
      return;
    const c = OT(
      l.current,
      document.querySelector(".bn-suggestion-menu")
    );
    c === "top" ? l.current.scrollIntoView(!0) : c === "bottom" && l.current.scrollIntoView(!1);
  }, [i]), /* @__PURE__ */ Ce.jsxs(
    hi,
    {
      gap: 0,
      className: n,
      ref: Ff(e, l),
      id: s,
      role: "option",
      onClick: r,
      "aria-selected": i || void 0,
      children: [
        o.icon && /* @__PURE__ */ Ce.jsx(
          hi,
          {
            className: "bn-mt-suggestion-menu-item-section",
            "data-position": "left",
            children: o.icon
          }
        ),
        /* @__PURE__ */ Ce.jsxs(zf, { gap: 0, className: "bn-mt-suggestion-menu-item-body", children: [
          /* @__PURE__ */ Ce.jsx(Cl, { className: "bn-mt-suggestion-menu-item-title", children: o.title }),
          /* @__PURE__ */ Ce.jsx(Cl, { className: "bn-mt-suggestion-menu-item-subtitle", children: o.subtext })
        ] }),
        o.badge && /* @__PURE__ */ Ce.jsx(
          hi,
          {
            "data-position": "right",
            className: "bn-mt-suggestion-menu-item-section",
            children: /* @__PURE__ */ Ce.jsx(tb, { size: "xs", children: o.badge })
          }
        )
      ]
    }
  );
}), lK = tt((t, e) => {
  const { className: n, children: i, ...r } = t;
  return _t(r), /* @__PURE__ */ Ce.jsx(hi, { className: n, ref: e, children: i });
}), cK = tt((t, e) => {
  const {
    className: n,
    children: i,
    // unused, using "dots" instead
    ...r
  } = t;
  return _t(r), /* @__PURE__ */ Ce.jsx(As, { className: n, type: "dots", ref: e });
}), fK = tt((t, e) => {
  const {
    className: n,
    children: i,
    draggable: r,
    onDragStart: o,
    onDragEnd: s,
    style: a,
    label: l,
    ...c
  } = t;
  return _t(c, !1), /* @__PURE__ */ Ce.jsx(
    Ms,
    {
      className: n,
      ref: e,
      "aria-label": l,
      draggable: r,
      onDragStart: o,
      onDragEnd: s,
      style: a,
      ...c,
      children: i
    }
  );
}), F9 = tt(
  (t, e) => {
    const { className: n, children: i, onMouseEnter: r, onMouseLeave: o, ...s } = t;
    _t(s);
    const { ref: a, focused: l } = PV(), c = HT(l), f = Ff(e, a, c);
    return /* @__PURE__ */ Ce.jsx(
      hi,
      {
        className: n,
        ref: f,
        role: "toolbar",
        onMouseEnter: r,
        onMouseLeave: o,
        children: i
      }
    );
  }
), dK = (t) => /* @__PURE__ */ Ce.jsxs(zf, { gap: 0, className: "bn-tooltip", children: [
  /* @__PURE__ */ Ce.jsx(Cl, { size: "sm", children: t.mainTooltip }),
  t.secondaryTooltip && /* @__PURE__ */ Ce.jsx(Cl, { size: "xs", children: t.secondaryTooltip })
] }), B9 = tt(
  (t, e) => {
    const {
      className: n,
      children: i,
      mainTooltip: r,
      secondaryTooltip: o,
      icon: s,
      isSelected: a,
      isDisabled: l,
      onClick: c,
      label: f,
      ...d
    } = t;
    return _t(d, !1), /* @__PURE__ */ Ce.jsx(
      jf,
      {
        withinPortal: !1,
        label: /* @__PURE__ */ Ce.jsx(
          dK,
          {
            mainTooltip: r,
            secondaryTooltip: o
          }
        ),
        children: i ? /* @__PURE__ */ Ce.jsx(
          Ms,
          {
            "aria-label": f,
            className: n,
            onMouseDown: (u) => {
              Sg() && u.currentTarget.focus();
            },
            onClick: c,
            "aria-pressed": a,
            "data-selected": a || void 0,
            "data-test": r.slice(0, 1).toLowerCase() + r.replace(/\s+/g, "").slice(1),
            size: "xs",
            disabled: l || !1,
            ref: e,
            ...d,
            children: i
          }
        ) : /* @__PURE__ */ Ce.jsx(
          Hf,
          {
            className: n,
            "aria-label": f,
            onMouseDown: (u) => {
              Sg() && u.currentTarget.focus();
            },
            onClick: c,
            "aria-pressed": a,
            "data-selected": a || void 0,
            "data-test": r.slice(0, 1).toLowerCase() + r.replace(/\s+/g, "").slice(1),
            size: 30,
            disabled: l || !1,
            ref: e,
            ...d,
            children: s
          }
        )
      }
    );
  }
), uK = tt((t, e) => {
  const { className: n, items: i, isDisabled: r, ...o } = t;
  _t(o);
  const s = i.filter((a) => a.isSelected)[0];
  return s ? /* @__PURE__ */ Ce.jsxs(
    dn,
    {
      withinPortal: !1,
      transitionProps: {
        exitDuration: 0
      },
      disabled: r,
      middlewares: { flip: !0, shift: !0, inline: !1, size: !0 },
      children: [
        /* @__PURE__ */ Ce.jsx(dn.Target, { children: /* @__PURE__ */ Ce.jsx(
          Ms,
          {
            onMouseDown: (a) => {
              Sg() && a.currentTarget.focus();
            },
            leftSection: s.icon,
            rightSection: /* @__PURE__ */ Ce.jsx(PG, {}),
            size: "xs",
            variant: "subtle",
            disabled: r,
            children: s.text
          }
        ) }),
        /* @__PURE__ */ Ce.jsx(dn.Dropdown, { className: n, ref: e, children: i.map((a) => /* @__PURE__ */ Ce.jsx(
          dn.Item,
          {
            onClick: a.onClick,
            leftSection: a.icon,
            rightSection: a.isSelected ? /* @__PURE__ */ Ce.jsx(mC, { size: 10, className: "bn-tick-icon" }) : (
              // Ensures space for tick even if item isn't currently selected.
              /* @__PURE__ */ Ce.jsx("div", { className: "bn-tick-space" })
            ),
            disabled: a.isDisabled,
            children: a.text
          },
          a.text
        )) })
      ]
    }
  ) : null;
}), hK = {
  FormattingToolbar: {
    Root: F9,
    Button: B9,
    Select: uK
  },
  FilePanel: {
    Root: WG,
    Button: qG,
    FileInput: GG,
    TabPanel: KG,
    TextInput: YG
  },
  GridSuggestionMenu: {
    Root: tK,
    Item: iK,
    EmptyItem: nK,
    Loader: rK
  },
  LinkToolbar: {
    Root: F9,
    Button: B9
  },
  SideMenu: {
    Root: ZG,
    Button: eK
  },
  SuggestionMenu: {
    Root: oK,
    Item: aK,
    EmptyItem: sK,
    Label: lK,
    Loader: cK
  },
  TableHandle: {
    Root: fK
  },
  Generic: {
    Form: {
      Root: (t) => /* @__PURE__ */ Ce.jsx("div", { children: t.children }),
      TextInput: AG
    },
    Menu: {
      Root: HG,
      Trigger: jG,
      Dropdown: zG,
      Divider: UG,
      Label: VG,
      Item: $G
    },
    Popover: {
      Root: JG,
      Trigger: XG,
      Content: QG
    }
  }
}, pK = {
  // Removes button press effect
  activeClassName: ""
}, mK = (t) => {
  const { className: e, theme: n, ...i } = t, r = Co(), o = AT(), s = (r == null ? void 0 : r.colorSchemePreference) || o, a = Xe(
    (l) => {
      if (l && (xG(l), typeof n == "object")) {
        if ("light" in n && "dark" in n) {
          L9(
            n[s === "dark" ? "dark" : "light"],
            l
          );
          return;
        }
        L9(n, l);
        return;
      }
    },
    [s, n]
  );
  return /* @__PURE__ */ Ce.jsx(aT.Provider, { value: hK, children: /* @__PURE__ */ Ce.jsx(
    qT,
    {
      theme: pK,
      cssVariablesSelector: ".bn-mantine",
      getRootElement: () => {
      },
      children: /* @__PURE__ */ Ce.jsx(
        VU,
        {
          className: lr("bn-mantine", e || ""),
          theme: typeof n == "object" ? void 0 : n,
          ...i,
          ref: a
        }
      )
    }
  ) });
}, gK = 1200, yK = 2500, $1 = 3e4, Bg = (t) => {
  if (t.shouldConnect && t.ws === null) {
    const e = new WebSocket(t.url), n = t.binaryType;
    let i = null;
    n && (e.binaryType = n), t.ws = e, t.connecting = !0, t.connected = !1, e.onmessage = (s) => {
      t.lastMessageReceived = Pr();
      const a = s.data, l = typeof a == "string" ? JSON.parse(a) : a;
      l && l.type === "pong" && (clearTimeout(i), i = setTimeout(o, $1 / 2)), t.emit("message", [l, t]);
    };
    const r = (s) => {
      t.ws !== null && (t.ws = null, t.connecting = !1, t.connected ? (t.connected = !1, t.emit("disconnect", [{ type: "disconnect", error: s }, t])) : t.unsuccessfulReconnects++, setTimeout(Bg, us(aD(t.unsuccessfulReconnects + 1) * gK, yK), t)), clearTimeout(i);
    }, o = () => {
      t.ws === e && t.send({
        type: "ping"
      });
    };
    e.onclose = () => r(null), e.onerror = (s) => r(s), e.onopen = () => {
      t.lastMessageReceived = Pr(), t.connecting = !1, t.connected = !0, t.unsuccessfulReconnects = 0, t.emit("connect", [{ type: "connect" }, t]), i = setTimeout(o, $1 / 2);
    };
  }
};
class vK extends K6 {
  /**
   * @param {string} url
   * @param {object} opts
   * @param {'arraybuffer' | 'blob' | null} [opts.binaryType] Set `ws.binaryType`
   */
  constructor(e, { binaryType: n } = {}) {
    super(), this.url = e, this.ws = null, this.binaryType = n || null, this.connected = !1, this.connecting = !1, this.unsuccessfulReconnects = 0, this.lastMessageReceived = 0, this.shouldConnect = !0, this._checkInterval = setInterval(() => {
      this.connected && $1 < Pr() - this.lastMessageReceived && this.ws.close();
    }, $1 / 2), Bg(this);
  }
  /**
   * @param {any} message
   */
  send(e) {
    this.ws && this.ws.send(JSON.stringify(e));
  }
  destroy() {
    clearInterval(this._checkInterval), this.disconnect(), super.destroy();
  }
  disconnect() {
    this.shouldConnect = !1, this.ws !== null && this.ws.close();
  }
  connect() {
    this.shouldConnect = !0, !this.connected && this.ws === null && Bg(this);
  }
}
const xC = /* @__PURE__ */ new Map();
class bK {
  /**
   * @param {string} room
   */
  constructor(e) {
    this.room = e, this.onmessage = null, this._onChange = (n) => n.key === e && this.onmessage !== null && this.onmessage({ data: c8(n.newValue || "") }), jD(this._onChange);
  }
  /**
   * @param {ArrayBuffer} buf
   */
  postMessage(e) {
    i8.setItem(this.room, l8(iP(e)));
  }
  close() {
    zD(this._onChange);
  }
}
const kK = typeof BroadcastChannel > "u" ? bK : BroadcastChannel, mb = (t) => si(xC, t, () => {
  const e = vo(), n = new kK(t);
  return n.onmessage = (i) => e.forEach((r) => r(i.data, "broadcastchannel")), {
    bc: n,
    subs: e
  };
}), wK = (t, e) => (mb(t).subs.add(e), e), _K = (t, e) => {
  const n = mb(t), i = n.subs.delete(e);
  return i && n.subs.size === 0 && (n.bc.close(), xC.delete(t)), i;
}, EK = (t, e, n = null) => {
  const i = mb(t);
  i.bc.postMessage(e), i.subs.forEach((r) => r(e, n));
};
function Ad(t) {
  throw new Error('Could not dynamically require "' + t + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');
}
var AC = { exports: {} };
(function(t, e) {
  (function(n) {
    t.exports = n();
  })(function() {
    var n = Math.floor, i = Math.abs, r = Math.pow;
    return (/* @__PURE__ */ function() {
      function o(s, a, l) {
        function c(u, h) {
          if (!a[u]) {
            if (!s[u]) {
              var p = typeof Ad == "function" && Ad;
              if (!h && p) return p(u, !0);
              if (f) return f(u, !0);
              var m = new Error("Cannot find module '" + u + "'");
              throw m.code = "MODULE_NOT_FOUND", m;
            }
            var v = a[u] = { exports: {} };
            s[u][0].call(v.exports, function(y) {
              var C = s[u][1][y];
              return c(C || y);
            }, v, v.exports, o, s, a, l);
          }
          return a[u].exports;
        }
        for (var f = typeof Ad == "function" && Ad, d = 0; d < l.length; d++) c(l[d]);
        return c;
      }
      return o;
    }())({ 1: [function(o, s, a) {
      function l(_) {
        var S = _.length;
        if (0 < S % 4) throw new Error("Invalid string. Length must be a multiple of 4");
        var E = _.indexOf("=");
        E === -1 && (E = S);
        var x = E === S ? 0 : 4 - E % 4;
        return [E, x];
      }
      function c(_, S, E) {
        return 3 * (S + E) / 4 - E;
      }
      function f(_) {
        var S, E, x = l(_), N = x[0], R = x[1], A = new v(c(_, N, R)), O = 0, B = 0 < R ? N - 4 : N;
        for (E = 0; E < B; E += 4) S = m[_.charCodeAt(E)] << 18 | m[_.charCodeAt(E + 1)] << 12 | m[_.charCodeAt(E + 2)] << 6 | m[_.charCodeAt(E + 3)], A[O++] = 255 & S >> 16, A[O++] = 255 & S >> 8, A[O++] = 255 & S;
        return R === 2 && (S = m[_.charCodeAt(E)] << 2 | m[_.charCodeAt(E + 1)] >> 4, A[O++] = 255 & S), R === 1 && (S = m[_.charCodeAt(E)] << 10 | m[_.charCodeAt(E + 1)] << 4 | m[_.charCodeAt(E + 2)] >> 2, A[O++] = 255 & S >> 8, A[O++] = 255 & S), A;
      }
      function d(_) {
        return p[63 & _ >> 18] + p[63 & _ >> 12] + p[63 & _ >> 6] + p[63 & _];
      }
      function u(_, S, E) {
        for (var x, N = [], R = S; R < E; R += 3) x = (16711680 & _[R] << 16) + (65280 & _[R + 1] << 8) + (255 & _[R + 2]), N.push(d(x));
        return N.join("");
      }
      function h(_) {
        for (var S, E = _.length, x = E % 3, N = [], R = 16383, A = 0, O = E - x; A < O; A += R) N.push(u(_, A, A + R > O ? O : A + R));
        return x === 1 ? (S = _[E - 1], N.push(p[S >> 2] + p[63 & S << 4] + "==")) : x === 2 && (S = (_[E - 2] << 8) + _[E - 1], N.push(p[S >> 10] + p[63 & S >> 4] + p[63 & S << 2] + "=")), N.join("");
      }
      a.byteLength = function(_) {
        var S = l(_), E = S[0], x = S[1];
        return 3 * (E + x) / 4 - x;
      }, a.toByteArray = f, a.fromByteArray = h;
      for (var p = [], m = [], v = typeof Uint8Array > "u" ? Array : Uint8Array, y = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", C = 0, k = y.length; C < k; ++C) p[C] = y[C], m[y.charCodeAt(C)] = C;
      m[45] = 62, m[95] = 63;
    }, {}], 2: [function() {
    }, {}], 3: [function(o, s, a) {
      (function() {
        (function() {
          var l = String.fromCharCode, c = Math.min;
          function f(g) {
            if (2147483647 < g) throw new RangeError('The value "' + g + '" is invalid for option "size"');
            var T = new Uint8Array(g);
            return T.__proto__ = d.prototype, T;
          }
          function d(g, T, M) {
            if (typeof g == "number") {
              if (typeof T == "string") throw new TypeError('The "string" argument must be of type string. Received type number');
              return m(g);
            }
            return u(g, T, M);
          }
          function u(g, T, M) {
            if (typeof g == "string") return v(g, T);
            if (ArrayBuffer.isView(g)) return y(g);
            if (g == null) throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof g);
            if (W(g, ArrayBuffer) || g && W(g.buffer, ArrayBuffer)) return C(g, T, M);
            if (typeof g == "number") throw new TypeError('The "value" argument must not be of type number. Received type number');
            var j = g.valueOf && g.valueOf();
            if (j != null && j !== g) return d.from(j, T, M);
            var q = k(g);
            if (q) return q;
            if (typeof Symbol < "u" && Symbol.toPrimitive != null && typeof g[Symbol.toPrimitive] == "function") return d.from(g[Symbol.toPrimitive]("string"), T, M);
            throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof g);
          }
          function h(g) {
            if (typeof g != "number") throw new TypeError('"size" argument must be of type number');
            if (0 > g) throw new RangeError('The value "' + g + '" is invalid for option "size"');
          }
          function p(g, T, M) {
            return h(g), 0 >= g || T === void 0 ? f(g) : typeof M == "string" ? f(g).fill(T, M) : f(g).fill(T);
          }
          function m(g) {
            return h(g), f(0 > g ? 0 : 0 | _(g));
          }
          function v(g, T) {
            if ((typeof T != "string" || T === "") && (T = "utf8"), !d.isEncoding(T)) throw new TypeError("Unknown encoding: " + T);
            var M = 0 | S(g, T), j = f(M), q = j.write(g, T);
            return q !== M && (j = j.slice(0, q)), j;
          }
          function y(g) {
            for (var T = 0 > g.length ? 0 : 0 | _(g.length), M = f(T), j = 0; j < T; j += 1) M[j] = 255 & g[j];
            return M;
          }
          function C(g, T, M) {
            if (0 > T || g.byteLength < T) throw new RangeError('"offset" is outside of buffer bounds');
            if (g.byteLength < T + (M || 0)) throw new RangeError('"length" is outside of buffer bounds');
            var j;
            return j = T === void 0 && M === void 0 ? new Uint8Array(g) : M === void 0 ? new Uint8Array(g, T) : new Uint8Array(g, T, M), j.__proto__ = d.prototype, j;
          }
          function k(g) {
            if (d.isBuffer(g)) {
              var T = 0 | _(g.length), M = f(T);
              return M.length === 0 || g.copy(M, 0, 0, T), M;
            }
            return g.length === void 0 ? g.type === "Buffer" && Array.isArray(g.data) ? y(g.data) : void 0 : typeof g.length != "number" || Y(g.length) ? f(0) : y(g);
          }
          function _(g) {
            if (g >= 2147483647) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x7fffffff bytes");
            return 0 | g;
          }
          function S(g, T) {
            if (d.isBuffer(g)) return g.length;
            if (ArrayBuffer.isView(g) || W(g, ArrayBuffer)) return g.byteLength;
            if (typeof g != "string") throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof g);
            var M = g.length, j = 2 < arguments.length && arguments[2] === !0;
            if (!j && M === 0) return 0;
            for (var q = !1; ; ) switch (T) {
              case "ascii":
              case "latin1":
              case "binary":
                return M;
              case "utf8":
              case "utf-8":
                return st(g).length;
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return 2 * M;
              case "hex":
                return M >>> 1;
              case "base64":
                return Dt(g).length;
              default:
                if (q) return j ? -1 : st(g).length;
                T = ("" + T).toLowerCase(), q = !0;
            }
          }
          function E(g, T, M) {
            var j = !1;
            if ((T === void 0 || 0 > T) && (T = 0), T > this.length || ((M === void 0 || M > this.length) && (M = this.length), 0 >= M) || (M >>>= 0, T >>>= 0, M <= T)) return "";
            for (g || (g = "utf8"); ; ) switch (g) {
              case "hex":
                return me(this, T, M);
              case "utf8":
              case "utf-8":
                return te(this, T, M);
              case "ascii":
                return X(this, T, M);
              case "latin1":
              case "binary":
                return D(this, T, M);
              case "base64":
                return J(this, T, M);
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return Se(this, T, M);
              default:
                if (j) throw new TypeError("Unknown encoding: " + g);
                g = (g + "").toLowerCase(), j = !0;
            }
          }
          function x(g, T, M) {
            var j = g[T];
            g[T] = g[M], g[M] = j;
          }
          function N(g, T, M, j, q) {
            if (g.length === 0) return -1;
            if (typeof M == "string" ? (j = M, M = 0) : 2147483647 < M ? M = 2147483647 : -2147483648 > M && (M = -2147483648), M = +M, Y(M) && (M = q ? 0 : g.length - 1), 0 > M && (M = g.length + M), M >= g.length) {
              if (q) return -1;
              M = g.length - 1;
            } else if (0 > M) if (q) M = 0;
            else return -1;
            if (typeof T == "string" && (T = d.from(T, j)), d.isBuffer(T)) return T.length === 0 ? -1 : R(g, T, M, j, q);
            if (typeof T == "number") return T &= 255, typeof Uint8Array.prototype.indexOf == "function" ? q ? Uint8Array.prototype.indexOf.call(g, T, M) : Uint8Array.prototype.lastIndexOf.call(g, T, M) : R(g, [T], M, j, q);
            throw new TypeError("val must be string, number or Buffer");
          }
          function R(g, T, M, j, q) {
            function Z(en, tn) {
              return Te === 1 ? en[tn] : en.readUInt16BE(tn * Te);
            }
            var Te = 1, V = g.length, se = T.length;
            if (j !== void 0 && (j = (j + "").toLowerCase(), j === "ucs2" || j === "ucs-2" || j === "utf16le" || j === "utf-16le")) {
              if (2 > g.length || 2 > T.length) return -1;
              Te = 2, V /= 2, se /= 2, M /= 2;
            }
            var ue;
            if (q) {
              var _e = -1;
              for (ue = M; ue < V; ue++) if (Z(g, ue) !== Z(T, _e === -1 ? 0 : ue - _e)) _e !== -1 && (ue -= ue - _e), _e = -1;
              else if (_e === -1 && (_e = ue), ue - _e + 1 === se) return _e * Te;
            } else for (M + se > V && (M = V - se), ue = M; 0 <= ue; ue--) {
              for (var Le = !0, Ht = 0; Ht < se; Ht++) if (Z(g, ue + Ht) !== Z(T, Ht)) {
                Le = !1;
                break;
              }
              if (Le) return ue;
            }
            return -1;
          }
          function A(g, T, M, j) {
            M = +M || 0;
            var q = g.length - M;
            j ? (j = +j, j > q && (j = q)) : j = q;
            var Z = T.length;
            j > Z / 2 && (j = Z / 2);
            for (var Te, V = 0; V < j; ++V) {
              if (Te = parseInt(T.substr(2 * V, 2), 16), Y(Te)) return V;
              g[M + V] = Te;
            }
            return V;
          }
          function O(g, T, M, j) {
            return dt(st(T, g.length - M), g, M, j);
          }
          function B(g, T, M, j) {
            return dt(Zt(T), g, M, j);
          }
          function U(g, T, M, j) {
            return B(g, T, M, j);
          }
          function K(g, T, M, j) {
            return dt(Dt(T), g, M, j);
          }
          function G(g, T, M, j) {
            return dt(Mt(T, g.length - M), g, M, j);
          }
          function J(g, T, M) {
            return T === 0 && M === g.length ? fe.fromByteArray(g) : fe.fromByteArray(g.slice(T, M));
          }
          function te(g, T, M) {
            M = c(g.length, M);
            for (var j = [], q = T; q < M; ) {
              var Z = g[q], Te = null, V = 239 < Z ? 4 : 223 < Z ? 3 : 191 < Z ? 2 : 1;
              if (q + V <= M) {
                var se, ue, _e, Le;
                V === 1 ? 128 > Z && (Te = Z) : V === 2 ? (se = g[q + 1], (192 & se) == 128 && (Le = (31 & Z) << 6 | 63 & se, 127 < Le && (Te = Le))) : V === 3 ? (se = g[q + 1], ue = g[q + 2], (192 & se) == 128 && (192 & ue) == 128 && (Le = (15 & Z) << 12 | (63 & se) << 6 | 63 & ue, 2047 < Le && (55296 > Le || 57343 < Le) && (Te = Le))) : V === 4 && (se = g[q + 1], ue = g[q + 2], _e = g[q + 3], (192 & se) == 128 && (192 & ue) == 128 && (192 & _e) == 128 && (Le = (15 & Z) << 18 | (63 & se) << 12 | (63 & ue) << 6 | 63 & _e, 65535 < Le && 1114112 > Le && (Te = Le)));
              }
              Te === null ? (Te = 65533, V = 1) : 65535 < Te && (Te -= 65536, j.push(55296 | 1023 & Te >>> 10), Te = 56320 | 1023 & Te), j.push(Te), q += V;
            }
            return re(j);
          }
          function re(g) {
            var T = g.length;
            if (T <= 4096) return l.apply(String, g);
            for (var M = "", j = 0; j < T; ) M += l.apply(String, g.slice(j, j += 4096));
            return M;
          }
          function X(g, T, M) {
            var j = "";
            M = c(g.length, M);
            for (var q = T; q < M; ++q) j += l(127 & g[q]);
            return j;
          }
          function D(g, T, M) {
            var j = "";
            M = c(g.length, M);
            for (var q = T; q < M; ++q) j += l(g[q]);
            return j;
          }
          function me(g, T, M) {
            var j = g.length;
            (!T || 0 > T) && (T = 0), (!M || 0 > M || M > j) && (M = j);
            for (var q = "", Z = T; Z < M; ++Z) q += Ge(g[Z]);
            return q;
          }
          function Se(g, T, M) {
            for (var j = g.slice(T, M), q = "", Z = 0; Z < j.length; Z += 2) q += l(j[Z] + 256 * j[Z + 1]);
            return q;
          }
          function F(g, T, M) {
            if (g % 1 != 0 || 0 > g) throw new RangeError("offset is not uint");
            if (g + T > M) throw new RangeError("Trying to access beyond buffer length");
          }
          function Oe(g, T, M, j, q, Z) {
            if (!d.isBuffer(g)) throw new TypeError('"buffer" argument must be a Buffer instance');
            if (T > q || T < Z) throw new RangeError('"value" argument is out of bounds');
            if (M + j > g.length) throw new RangeError("Index out of range");
          }
          function ft(g, T, M, j) {
            if (M + j > g.length) throw new RangeError("Index out of range");
            if (0 > M) throw new RangeError("Index out of range");
          }
          function Re(g, T, M, j, q) {
            return T = +T, M >>>= 0, q || ft(g, T, M, 4), Ee.write(g, T, M, j, 23, 4), M + 4;
          }
          function qe(g, T, M, j, q) {
            return T = +T, M >>>= 0, q || ft(g, T, M, 8), Ee.write(g, T, M, j, 52, 8), M + 8;
          }
          function Ye(g) {
            if (g = g.split("=")[0], g = g.trim().replace(I, ""), 2 > g.length) return "";
            for (; g.length % 4 != 0; ) g += "=";
            return g;
          }
          function Ge(g) {
            return 16 > g ? "0" + g.toString(16) : g.toString(16);
          }
          function st(g, T) {
            T = T || 1 / 0;
            for (var M, j = g.length, q = null, Z = [], Te = 0; Te < j; ++Te) {
              if (M = g.charCodeAt(Te), 55295 < M && 57344 > M) {
                if (!q) {
                  if (56319 < M) {
                    -1 < (T -= 3) && Z.push(239, 191, 189);
                    continue;
                  } else if (Te + 1 === j) {
                    -1 < (T -= 3) && Z.push(239, 191, 189);
                    continue;
                  }
                  q = M;
                  continue;
                }
                if (56320 > M) {
                  -1 < (T -= 3) && Z.push(239, 191, 189), q = M;
                  continue;
                }
                M = (q - 55296 << 10 | M - 56320) + 65536;
              } else q && -1 < (T -= 3) && Z.push(239, 191, 189);
              if (q = null, 128 > M) {
                if (0 > (T -= 1)) break;
                Z.push(M);
              } else if (2048 > M) {
                if (0 > (T -= 2)) break;
                Z.push(192 | M >> 6, 128 | 63 & M);
              } else if (65536 > M) {
                if (0 > (T -= 3)) break;
                Z.push(224 | M >> 12, 128 | 63 & M >> 6, 128 | 63 & M);
              } else if (1114112 > M) {
                if (0 > (T -= 4)) break;
                Z.push(240 | M >> 18, 128 | 63 & M >> 12, 128 | 63 & M >> 6, 128 | 63 & M);
              } else throw new Error("Invalid code point");
            }
            return Z;
          }
          function Zt(g) {
            for (var T = [], M = 0; M < g.length; ++M) T.push(255 & g.charCodeAt(M));
            return T;
          }
          function Mt(g, T) {
            for (var M, j, q, Z = [], Te = 0; Te < g.length && !(0 > (T -= 2)); ++Te) M = g.charCodeAt(Te), j = M >> 8, q = M % 256, Z.push(q), Z.push(j);
            return Z;
          }
          function Dt(g) {
            return fe.toByteArray(Ye(g));
          }
          function dt(g, T, M, j) {
            for (var q = 0; q < j && !(q + M >= T.length || q >= g.length); ++q) T[q + M] = g[q];
            return q;
          }
          function W(g, T) {
            return g instanceof T || g != null && g.constructor != null && g.constructor.name != null && g.constructor.name === T.name;
          }
          function Y(g) {
            return g !== g;
          }
          var fe = o("base64-js"), Ee = o("ieee754");
          a.Buffer = d, a.SlowBuffer = function(g) {
            return +g != g && (g = 0), d.alloc(+g);
          }, a.INSPECT_MAX_BYTES = 50, a.kMaxLength = 2147483647, d.TYPED_ARRAY_SUPPORT = function() {
            try {
              var g = new Uint8Array(1);
              return g.__proto__ = { __proto__: Uint8Array.prototype, foo: function() {
                return 42;
              } }, g.foo() === 42;
            } catch {
              return !1;
            }
          }(), d.TYPED_ARRAY_SUPPORT || typeof console > "u" || typeof console.error != "function" || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(d.prototype, "parent", { enumerable: !0, get: function() {
            return d.isBuffer(this) ? this.buffer : void 0;
          } }), Object.defineProperty(d.prototype, "offset", { enumerable: !0, get: function() {
            return d.isBuffer(this) ? this.byteOffset : void 0;
          } }), typeof Symbol < "u" && Symbol.species != null && d[Symbol.species] === d && Object.defineProperty(d, Symbol.species, { value: null, configurable: !0, enumerable: !1, writable: !1 }), d.poolSize = 8192, d.from = function(g, T, M) {
            return u(g, T, M);
          }, d.prototype.__proto__ = Uint8Array.prototype, d.__proto__ = Uint8Array, d.alloc = function(g, T, M) {
            return p(g, T, M);
          }, d.allocUnsafe = function(g) {
            return m(g);
          }, d.allocUnsafeSlow = function(g) {
            return m(g);
          }, d.isBuffer = function(g) {
            return g != null && g._isBuffer === !0 && g !== d.prototype;
          }, d.compare = function(g, T) {
            if (W(g, Uint8Array) && (g = d.from(g, g.offset, g.byteLength)), W(T, Uint8Array) && (T = d.from(T, T.offset, T.byteLength)), !d.isBuffer(g) || !d.isBuffer(T)) throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
            if (g === T) return 0;
            for (var M = g.length, j = T.length, q = 0, Z = c(M, j); q < Z; ++q) if (g[q] !== T[q]) {
              M = g[q], j = T[q];
              break;
            }
            return M < j ? -1 : j < M ? 1 : 0;
          }, d.isEncoding = function(g) {
            switch ((g + "").toLowerCase()) {
              case "hex":
              case "utf8":
              case "utf-8":
              case "ascii":
              case "latin1":
              case "binary":
              case "base64":
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return !0;
              default:
                return !1;
            }
          }, d.concat = function(g, T) {
            if (!Array.isArray(g)) throw new TypeError('"list" argument must be an Array of Buffers');
            if (g.length === 0) return d.alloc(0);
            var M;
            if (T === void 0) for (T = 0, M = 0; M < g.length; ++M) T += g[M].length;
            var j = d.allocUnsafe(T), q = 0;
            for (M = 0; M < g.length; ++M) {
              var Z = g[M];
              if (W(Z, Uint8Array) && (Z = d.from(Z)), !d.isBuffer(Z)) throw new TypeError('"list" argument must be an Array of Buffers');
              Z.copy(j, q), q += Z.length;
            }
            return j;
          }, d.byteLength = S, d.prototype._isBuffer = !0, d.prototype.swap16 = function() {
            var g = this.length;
            if (g % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
            for (var T = 0; T < g; T += 2) x(this, T, T + 1);
            return this;
          }, d.prototype.swap32 = function() {
            var g = this.length;
            if (g % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
            for (var T = 0; T < g; T += 4) x(this, T, T + 3), x(this, T + 1, T + 2);
            return this;
          }, d.prototype.swap64 = function() {
            var g = this.length;
            if (g % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
            for (var T = 0; T < g; T += 8) x(this, T, T + 7), x(this, T + 1, T + 6), x(this, T + 2, T + 5), x(this, T + 3, T + 4);
            return this;
          }, d.prototype.toString = function() {
            var g = this.length;
            return g === 0 ? "" : arguments.length === 0 ? te(this, 0, g) : E.apply(this, arguments);
          }, d.prototype.toLocaleString = d.prototype.toString, d.prototype.equals = function(g) {
            if (!d.isBuffer(g)) throw new TypeError("Argument must be a Buffer");
            return this === g || d.compare(this, g) === 0;
          }, d.prototype.inspect = function() {
            var g = "", T = a.INSPECT_MAX_BYTES;
            return g = this.toString("hex", 0, T).replace(/(.{2})/g, "$1 ").trim(), this.length > T && (g += " ... "), "<Buffer " + g + ">";
          }, d.prototype.compare = function(g, T, M, j, q) {
            if (W(g, Uint8Array) && (g = d.from(g, g.offset, g.byteLength)), !d.isBuffer(g)) throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof g);
            if (T === void 0 && (T = 0), M === void 0 && (M = g ? g.length : 0), j === void 0 && (j = 0), q === void 0 && (q = this.length), 0 > T || M > g.length || 0 > j || q > this.length) throw new RangeError("out of range index");
            if (j >= q && T >= M) return 0;
            if (j >= q) return -1;
            if (T >= M) return 1;
            if (T >>>= 0, M >>>= 0, j >>>= 0, q >>>= 0, this === g) return 0;
            for (var Z = q - j, Te = M - T, V = c(Z, Te), se = this.slice(j, q), ue = g.slice(T, M), _e = 0; _e < V; ++_e) if (se[_e] !== ue[_e]) {
              Z = se[_e], Te = ue[_e];
              break;
            }
            return Z < Te ? -1 : Te < Z ? 1 : 0;
          }, d.prototype.includes = function(g, T, M) {
            return this.indexOf(g, T, M) !== -1;
          }, d.prototype.indexOf = function(g, T, M) {
            return N(this, g, T, M, !0);
          }, d.prototype.lastIndexOf = function(g, T, M) {
            return N(this, g, T, M, !1);
          }, d.prototype.write = function(g, T, M, j) {
            if (T === void 0) j = "utf8", M = this.length, T = 0;
            else if (M === void 0 && typeof T == "string") j = T, M = this.length, T = 0;
            else if (isFinite(T)) T >>>= 0, isFinite(M) ? (M >>>= 0, j === void 0 && (j = "utf8")) : (j = M, M = void 0);
            else throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
            var q = this.length - T;
            if ((M === void 0 || M > q) && (M = q), 0 < g.length && (0 > M || 0 > T) || T > this.length) throw new RangeError("Attempt to write outside buffer bounds");
            j || (j = "utf8");
            for (var Z = !1; ; ) switch (j) {
              case "hex":
                return A(this, g, T, M);
              case "utf8":
              case "utf-8":
                return O(this, g, T, M);
              case "ascii":
                return B(this, g, T, M);
              case "latin1":
              case "binary":
                return U(this, g, T, M);
              case "base64":
                return K(this, g, T, M);
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return G(this, g, T, M);
              default:
                if (Z) throw new TypeError("Unknown encoding: " + j);
                j = ("" + j).toLowerCase(), Z = !0;
            }
          }, d.prototype.toJSON = function() {
            return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
          }, d.prototype.slice = function(g, T) {
            var M = this.length;
            g = ~~g, T = T === void 0 ? M : ~~T, 0 > g ? (g += M, 0 > g && (g = 0)) : g > M && (g = M), 0 > T ? (T += M, 0 > T && (T = 0)) : T > M && (T = M), T < g && (T = g);
            var j = this.subarray(g, T);
            return j.__proto__ = d.prototype, j;
          }, d.prototype.readUIntLE = function(g, T, M) {
            g >>>= 0, T >>>= 0, M || F(g, T, this.length);
            for (var j = this[g], q = 1, Z = 0; ++Z < T && (q *= 256); ) j += this[g + Z] * q;
            return j;
          }, d.prototype.readUIntBE = function(g, T, M) {
            g >>>= 0, T >>>= 0, M || F(g, T, this.length);
            for (var j = this[g + --T], q = 1; 0 < T && (q *= 256); ) j += this[g + --T] * q;
            return j;
          }, d.prototype.readUInt8 = function(g, T) {
            return g >>>= 0, T || F(g, 1, this.length), this[g];
          }, d.prototype.readUInt16LE = function(g, T) {
            return g >>>= 0, T || F(g, 2, this.length), this[g] | this[g + 1] << 8;
          }, d.prototype.readUInt16BE = function(g, T) {
            return g >>>= 0, T || F(g, 2, this.length), this[g] << 8 | this[g + 1];
          }, d.prototype.readUInt32LE = function(g, T) {
            return g >>>= 0, T || F(g, 4, this.length), (this[g] | this[g + 1] << 8 | this[g + 2] << 16) + 16777216 * this[g + 3];
          }, d.prototype.readUInt32BE = function(g, T) {
            return g >>>= 0, T || F(g, 4, this.length), 16777216 * this[g] + (this[g + 1] << 16 | this[g + 2] << 8 | this[g + 3]);
          }, d.prototype.readIntLE = function(g, T, M) {
            g >>>= 0, T >>>= 0, M || F(g, T, this.length);
            for (var j = this[g], q = 1, Z = 0; ++Z < T && (q *= 256); ) j += this[g + Z] * q;
            return q *= 128, j >= q && (j -= r(2, 8 * T)), j;
          }, d.prototype.readIntBE = function(g, T, M) {
            g >>>= 0, T >>>= 0, M || F(g, T, this.length);
            for (var j = T, q = 1, Z = this[g + --j]; 0 < j && (q *= 256); ) Z += this[g + --j] * q;
            return q *= 128, Z >= q && (Z -= r(2, 8 * T)), Z;
          }, d.prototype.readInt8 = function(g, T) {
            return g >>>= 0, T || F(g, 1, this.length), 128 & this[g] ? -1 * (255 - this[g] + 1) : this[g];
          }, d.prototype.readInt16LE = function(g, T) {
            g >>>= 0, T || F(g, 2, this.length);
            var M = this[g] | this[g + 1] << 8;
            return 32768 & M ? 4294901760 | M : M;
          }, d.prototype.readInt16BE = function(g, T) {
            g >>>= 0, T || F(g, 2, this.length);
            var M = this[g + 1] | this[g] << 8;
            return 32768 & M ? 4294901760 | M : M;
          }, d.prototype.readInt32LE = function(g, T) {
            return g >>>= 0, T || F(g, 4, this.length), this[g] | this[g + 1] << 8 | this[g + 2] << 16 | this[g + 3] << 24;
          }, d.prototype.readInt32BE = function(g, T) {
            return g >>>= 0, T || F(g, 4, this.length), this[g] << 24 | this[g + 1] << 16 | this[g + 2] << 8 | this[g + 3];
          }, d.prototype.readFloatLE = function(g, T) {
            return g >>>= 0, T || F(g, 4, this.length), Ee.read(this, g, !0, 23, 4);
          }, d.prototype.readFloatBE = function(g, T) {
            return g >>>= 0, T || F(g, 4, this.length), Ee.read(this, g, !1, 23, 4);
          }, d.prototype.readDoubleLE = function(g, T) {
            return g >>>= 0, T || F(g, 8, this.length), Ee.read(this, g, !0, 52, 8);
          }, d.prototype.readDoubleBE = function(g, T) {
            return g >>>= 0, T || F(g, 8, this.length), Ee.read(this, g, !1, 52, 8);
          }, d.prototype.writeUIntLE = function(g, T, M, j) {
            if (g = +g, T >>>= 0, M >>>= 0, !j) {
              var q = r(2, 8 * M) - 1;
              Oe(this, g, T, M, q, 0);
            }
            var Z = 1, Te = 0;
            for (this[T] = 255 & g; ++Te < M && (Z *= 256); ) this[T + Te] = 255 & g / Z;
            return T + M;
          }, d.prototype.writeUIntBE = function(g, T, M, j) {
            if (g = +g, T >>>= 0, M >>>= 0, !j) {
              var q = r(2, 8 * M) - 1;
              Oe(this, g, T, M, q, 0);
            }
            var Z = M - 1, Te = 1;
            for (this[T + Z] = 255 & g; 0 <= --Z && (Te *= 256); ) this[T + Z] = 255 & g / Te;
            return T + M;
          }, d.prototype.writeUInt8 = function(g, T, M) {
            return g = +g, T >>>= 0, M || Oe(this, g, T, 1, 255, 0), this[T] = 255 & g, T + 1;
          }, d.prototype.writeUInt16LE = function(g, T, M) {
            return g = +g, T >>>= 0, M || Oe(this, g, T, 2, 65535, 0), this[T] = 255 & g, this[T + 1] = g >>> 8, T + 2;
          }, d.prototype.writeUInt16BE = function(g, T, M) {
            return g = +g, T >>>= 0, M || Oe(this, g, T, 2, 65535, 0), this[T] = g >>> 8, this[T + 1] = 255 & g, T + 2;
          }, d.prototype.writeUInt32LE = function(g, T, M) {
            return g = +g, T >>>= 0, M || Oe(this, g, T, 4, 4294967295, 0), this[T + 3] = g >>> 24, this[T + 2] = g >>> 16, this[T + 1] = g >>> 8, this[T] = 255 & g, T + 4;
          }, d.prototype.writeUInt32BE = function(g, T, M) {
            return g = +g, T >>>= 0, M || Oe(this, g, T, 4, 4294967295, 0), this[T] = g >>> 24, this[T + 1] = g >>> 16, this[T + 2] = g >>> 8, this[T + 3] = 255 & g, T + 4;
          }, d.prototype.writeIntLE = function(g, T, M, j) {
            if (g = +g, T >>>= 0, !j) {
              var q = r(2, 8 * M - 1);
              Oe(this, g, T, M, q - 1, -q);
            }
            var Z = 0, Te = 1, V = 0;
            for (this[T] = 255 & g; ++Z < M && (Te *= 256); ) 0 > g && V === 0 && this[T + Z - 1] !== 0 && (V = 1), this[T + Z] = 255 & (g / Te >> 0) - V;
            return T + M;
          }, d.prototype.writeIntBE = function(g, T, M, j) {
            if (g = +g, T >>>= 0, !j) {
              var q = r(2, 8 * M - 1);
              Oe(this, g, T, M, q - 1, -q);
            }
            var Z = M - 1, Te = 1, V = 0;
            for (this[T + Z] = 255 & g; 0 <= --Z && (Te *= 256); ) 0 > g && V === 0 && this[T + Z + 1] !== 0 && (V = 1), this[T + Z] = 255 & (g / Te >> 0) - V;
            return T + M;
          }, d.prototype.writeInt8 = function(g, T, M) {
            return g = +g, T >>>= 0, M || Oe(this, g, T, 1, 127, -128), 0 > g && (g = 255 + g + 1), this[T] = 255 & g, T + 1;
          }, d.prototype.writeInt16LE = function(g, T, M) {
            return g = +g, T >>>= 0, M || Oe(this, g, T, 2, 32767, -32768), this[T] = 255 & g, this[T + 1] = g >>> 8, T + 2;
          }, d.prototype.writeInt16BE = function(g, T, M) {
            return g = +g, T >>>= 0, M || Oe(this, g, T, 2, 32767, -32768), this[T] = g >>> 8, this[T + 1] = 255 & g, T + 2;
          }, d.prototype.writeInt32LE = function(g, T, M) {
            return g = +g, T >>>= 0, M || Oe(this, g, T, 4, 2147483647, -2147483648), this[T] = 255 & g, this[T + 1] = g >>> 8, this[T + 2] = g >>> 16, this[T + 3] = g >>> 24, T + 4;
          }, d.prototype.writeInt32BE = function(g, T, M) {
            return g = +g, T >>>= 0, M || Oe(this, g, T, 4, 2147483647, -2147483648), 0 > g && (g = 4294967295 + g + 1), this[T] = g >>> 24, this[T + 1] = g >>> 16, this[T + 2] = g >>> 8, this[T + 3] = 255 & g, T + 4;
          }, d.prototype.writeFloatLE = function(g, T, M) {
            return Re(this, g, T, !0, M);
          }, d.prototype.writeFloatBE = function(g, T, M) {
            return Re(this, g, T, !1, M);
          }, d.prototype.writeDoubleLE = function(g, T, M) {
            return qe(this, g, T, !0, M);
          }, d.prototype.writeDoubleBE = function(g, T, M) {
            return qe(this, g, T, !1, M);
          }, d.prototype.copy = function(g, T, M, j) {
            if (!d.isBuffer(g)) throw new TypeError("argument should be a Buffer");
            if (M || (M = 0), j || j === 0 || (j = this.length), T >= g.length && (T = g.length), T || (T = 0), 0 < j && j < M && (j = M), j === M || g.length === 0 || this.length === 0) return 0;
            if (0 > T) throw new RangeError("targetStart out of bounds");
            if (0 > M || M >= this.length) throw new RangeError("Index out of range");
            if (0 > j) throw new RangeError("sourceEnd out of bounds");
            j > this.length && (j = this.length), g.length - T < j - M && (j = g.length - T + M);
            var q = j - M;
            if (this === g && typeof Uint8Array.prototype.copyWithin == "function") this.copyWithin(T, M, j);
            else if (this === g && M < T && T < j) for (var Z = q - 1; 0 <= Z; --Z) g[Z + T] = this[Z + M];
            else Uint8Array.prototype.set.call(g, this.subarray(M, j), T);
            return q;
          }, d.prototype.fill = function(g, T, M, j) {
            if (typeof g == "string") {
              if (typeof T == "string" ? (j = T, T = 0, M = this.length) : typeof M == "string" && (j = M, M = this.length), j !== void 0 && typeof j != "string") throw new TypeError("encoding must be a string");
              if (typeof j == "string" && !d.isEncoding(j)) throw new TypeError("Unknown encoding: " + j);
              if (g.length === 1) {
                var q = g.charCodeAt(0);
                (j === "utf8" && 128 > q || j === "latin1") && (g = q);
              }
            } else typeof g == "number" && (g &= 255);
            if (0 > T || this.length < T || this.length < M) throw new RangeError("Out of range index");
            if (M <= T) return this;
            T >>>= 0, M = M === void 0 ? this.length : M >>> 0, g || (g = 0);
            var Z;
            if (typeof g == "number") for (Z = T; Z < M; ++Z) this[Z] = g;
            else {
              var Te = d.isBuffer(g) ? g : d.from(g, j), V = Te.length;
              if (V === 0) throw new TypeError('The value "' + g + '" is invalid for argument "value"');
              for (Z = 0; Z < M - T; ++Z) this[Z + T] = Te[Z % V];
            }
            return this;
          };
          var I = /[^+/0-9A-Za-z-_]/g;
        }).call(this);
      }).call(this, o("buffer").Buffer);
    }, { "base64-js": 1, buffer: 3, ieee754: 9 }], 4: [function(o, s, a) {
      (function(l) {
        (function() {
          function c() {
            let d;
            try {
              d = a.storage.getItem("debug");
            } catch {
            }
            return !d && typeof l < "u" && "env" in l && (d = l.env.DEBUG), d;
          }
          a.formatArgs = function(d) {
            if (d[0] = (this.useColors ? "%c" : "") + this.namespace + (this.useColors ? " %c" : " ") + d[0] + (this.useColors ? "%c " : " ") + "+" + s.exports.humanize(this.diff), !this.useColors) return;
            const u = "color: " + this.color;
            d.splice(1, 0, u, "color: inherit");
            let h = 0, p = 0;
            d[0].replace(/%[a-zA-Z%]/g, (m) => {
              m === "%%" || (h++, m === "%c" && (p = h));
            }), d.splice(p, 0, u);
          }, a.save = function(d) {
            try {
              d ? a.storage.setItem("debug", d) : a.storage.removeItem("debug");
            } catch {
            }
          }, a.load = c, a.useColors = function() {
            return !!(typeof window < "u" && window.process && (window.process.type === "renderer" || window.process.__nwjs)) || !(typeof navigator < "u" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) && (typeof document < "u" && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || typeof window < "u" && window.console && (window.console.firebug || window.console.exception && window.console.table) || typeof navigator < "u" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && 31 <= parseInt(RegExp.$1, 10) || typeof navigator < "u" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
          }, a.storage = function() {
            try {
              return localStorage;
            } catch {
            }
          }(), a.destroy = /* @__PURE__ */ (() => {
            let d = !1;
            return () => {
              d || (d = !0, console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."));
            };
          })(), a.colors = ["#0000CC", "#0000FF", "#0033CC", "#0033FF", "#0066CC", "#0066FF", "#0099CC", "#0099FF", "#00CC00", "#00CC33", "#00CC66", "#00CC99", "#00CCCC", "#00CCFF", "#3300CC", "#3300FF", "#3333CC", "#3333FF", "#3366CC", "#3366FF", "#3399CC", "#3399FF", "#33CC00", "#33CC33", "#33CC66", "#33CC99", "#33CCCC", "#33CCFF", "#6600CC", "#6600FF", "#6633CC", "#6633FF", "#66CC00", "#66CC33", "#9900CC", "#9900FF", "#9933CC", "#9933FF", "#99CC00", "#99CC33", "#CC0000", "#CC0033", "#CC0066", "#CC0099", "#CC00CC", "#CC00FF", "#CC3300", "#CC3333", "#CC3366", "#CC3399", "#CC33CC", "#CC33FF", "#CC6600", "#CC6633", "#CC9900", "#CC9933", "#CCCC00", "#CCCC33", "#FF0000", "#FF0033", "#FF0066", "#FF0099", "#FF00CC", "#FF00FF", "#FF3300", "#FF3333", "#FF3366", "#FF3399", "#FF33CC", "#FF33FF", "#FF6600", "#FF6633", "#FF9900", "#FF9933", "#FFCC00", "#FFCC33"], a.log = console.debug || console.log || (() => {
          }), s.exports = o("./common")(a);
          const { formatters: f } = s.exports;
          f.j = function(d) {
            try {
              return JSON.stringify(d);
            } catch (u) {
              return "[UnexpectedJSONParseError]: " + u.message;
            }
          };
        }).call(this);
      }).call(this, o("_process"));
    }, { "./common": 5, _process: 12 }], 5: [function(o, s) {
      s.exports = function(a) {
        function l(d) {
          function u(...m) {
            if (!u.enabled) return;
            const v = u, y = +/* @__PURE__ */ new Date(), C = y - (h || y);
            v.diff = C, v.prev = h, v.curr = y, h = y, m[0] = l.coerce(m[0]), typeof m[0] != "string" && m.unshift("%O");
            let k = 0;
            m[0] = m[0].replace(/%([a-zA-Z%])/g, (S, E) => {
              if (S === "%%") return "%";
              k++;
              const x = l.formatters[E];
              if (typeof x == "function") {
                const N = m[k];
                S = x.call(v, N), m.splice(k, 1), k--;
              }
              return S;
            }), l.formatArgs.call(v, m), (v.log || l.log).apply(v, m);
          }
          let h, p = null;
          return u.namespace = d, u.useColors = l.useColors(), u.color = l.selectColor(d), u.extend = c, u.destroy = l.destroy, Object.defineProperty(u, "enabled", { enumerable: !0, configurable: !1, get: () => p === null ? l.enabled(d) : p, set: (m) => {
            p = m;
          } }), typeof l.init == "function" && l.init(u), u;
        }
        function c(d, u) {
          const h = l(this.namespace + (typeof u > "u" ? ":" : u) + d);
          return h.log = this.log, h;
        }
        function f(d) {
          return d.toString().substring(2, d.toString().length - 2).replace(/\.\*\?$/, "*");
        }
        return l.debug = l, l.default = l, l.coerce = function(d) {
          return d instanceof Error ? d.stack || d.message : d;
        }, l.disable = function() {
          const d = [...l.names.map(f), ...l.skips.map(f).map((u) => "-" + u)].join(",");
          return l.enable(""), d;
        }, l.enable = function(d) {
          l.save(d), l.names = [], l.skips = [];
          let u;
          const h = (typeof d == "string" ? d : "").split(/[\s,]+/), p = h.length;
          for (u = 0; u < p; u++) h[u] && (d = h[u].replace(/\*/g, ".*?"), d[0] === "-" ? l.skips.push(new RegExp("^" + d.substr(1) + "$")) : l.names.push(new RegExp("^" + d + "$")));
        }, l.enabled = function(d) {
          if (d[d.length - 1] === "*") return !0;
          let u, h;
          for (u = 0, h = l.skips.length; u < h; u++) if (l.skips[u].test(d)) return !1;
          for (u = 0, h = l.names.length; u < h; u++) if (l.names[u].test(d)) return !0;
          return !1;
        }, l.humanize = o("ms"), l.destroy = function() {
          console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");
        }, Object.keys(a).forEach((d) => {
          l[d] = a[d];
        }), l.names = [], l.skips = [], l.formatters = {}, l.selectColor = function(d) {
          let u = 0;
          for (let h = 0; h < d.length; h++) u = (u << 5) - u + d.charCodeAt(h), u |= 0;
          return l.colors[i(u) % l.colors.length];
        }, l.enable(l.load()), l;
      };
    }, { ms: 11 }], 6: [function(o, s) {
      function a(l, c) {
        for (const f in c) Object.defineProperty(l, f, { value: c[f], enumerable: !0, configurable: !0 });
        return l;
      }
      s.exports = function(l, c, f) {
        if (!l || typeof l == "string") throw new TypeError("Please pass an Error to err-code");
        f || (f = {}), typeof c == "object" && (f = c, c = ""), c && (f.code = c);
        try {
          return a(l, f);
        } catch {
          f.message = l.message, f.stack = l.stack;
          const u = function() {
          };
          return u.prototype = Object.create(Object.getPrototypeOf(l)), a(new u(), f);
        }
      };
    }, {}], 7: [function(o, s) {
      function a(A) {
        console && console.warn && console.warn(A);
      }
      function l() {
        l.init.call(this);
      }
      function c(A) {
        if (typeof A != "function") throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof A);
      }
      function f(A) {
        return A._maxListeners === void 0 ? l.defaultMaxListeners : A._maxListeners;
      }
      function d(A, O, B, U) {
        var K, G, J;
        if (c(B), G = A._events, G === void 0 ? (G = A._events = /* @__PURE__ */ Object.create(null), A._eventsCount = 0) : (G.newListener !== void 0 && (A.emit("newListener", O, B.listener ? B.listener : B), G = A._events), J = G[O]), J === void 0) J = G[O] = B, ++A._eventsCount;
        else if (typeof J == "function" ? J = G[O] = U ? [B, J] : [J, B] : U ? J.unshift(B) : J.push(B), K = f(A), 0 < K && J.length > K && !J.warned) {
          J.warned = !0;
          var te = new Error("Possible EventEmitter memory leak detected. " + J.length + " " + (O + " listeners added. Use emitter.setMaxListeners() to increase limit"));
          te.name = "MaxListenersExceededWarning", te.emitter = A, te.type = O, te.count = J.length, a(te);
        }
        return A;
      }
      function u() {
        if (!this.fired) return this.target.removeListener(this.type, this.wrapFn), this.fired = !0, arguments.length === 0 ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
      }
      function h(A, O, B) {
        var U = { fired: !1, wrapFn: void 0, target: A, type: O, listener: B }, K = u.bind(U);
        return K.listener = B, U.wrapFn = K, K;
      }
      function p(A, O, B) {
        var U = A._events;
        if (U === void 0) return [];
        var K = U[O];
        return K === void 0 ? [] : typeof K == "function" ? B ? [K.listener || K] : [K] : B ? C(K) : v(K, K.length);
      }
      function m(A) {
        var O = this._events;
        if (O !== void 0) {
          var B = O[A];
          if (typeof B == "function") return 1;
          if (B !== void 0) return B.length;
        }
        return 0;
      }
      function v(A, O) {
        for (var B = Array(O), U = 0; U < O; ++U) B[U] = A[U];
        return B;
      }
      function y(A, O) {
        for (; O + 1 < A.length; O++) A[O] = A[O + 1];
        A.pop();
      }
      function C(A) {
        for (var O = Array(A.length), B = 0; B < O.length; ++B) O[B] = A[B].listener || A[B];
        return O;
      }
      function k(A, O, B) {
        typeof A.on == "function" && _(A, "error", O, B);
      }
      function _(A, O, B, U) {
        if (typeof A.on == "function") U.once ? A.once(O, B) : A.on(O, B);
        else if (typeof A.addEventListener == "function") A.addEventListener(O, function K(G) {
          U.once && A.removeEventListener(O, K), B(G);
        });
        else throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof A);
      }
      var S, E = typeof Reflect == "object" ? Reflect : null, x = E && typeof E.apply == "function" ? E.apply : function(A, O, B) {
        return Function.prototype.apply.call(A, O, B);
      };
      S = E && typeof E.ownKeys == "function" ? E.ownKeys : Object.getOwnPropertySymbols ? function(A) {
        return Object.getOwnPropertyNames(A).concat(Object.getOwnPropertySymbols(A));
      } : function(A) {
        return Object.getOwnPropertyNames(A);
      };
      var N = Number.isNaN || function(A) {
        return A !== A;
      };
      s.exports = l, s.exports.once = function(A, O) {
        return new Promise(function(B, U) {
          function K(J) {
            A.removeListener(O, G), U(J);
          }
          function G() {
            typeof A.removeListener == "function" && A.removeListener("error", K), B([].slice.call(arguments));
          }
          _(A, O, G, { once: !0 }), O !== "error" && k(A, K, { once: !0 });
        });
      }, l.EventEmitter = l, l.prototype._events = void 0, l.prototype._eventsCount = 0, l.prototype._maxListeners = void 0;
      var R = 10;
      Object.defineProperty(l, "defaultMaxListeners", { enumerable: !0, get: function() {
        return R;
      }, set: function(A) {
        if (typeof A != "number" || 0 > A || N(A)) throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + A + ".");
        R = A;
      } }), l.init = function() {
        (this._events === void 0 || this._events === Object.getPrototypeOf(this)._events) && (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
      }, l.prototype.setMaxListeners = function(A) {
        if (typeof A != "number" || 0 > A || N(A)) throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + A + ".");
        return this._maxListeners = A, this;
      }, l.prototype.getMaxListeners = function() {
        return f(this);
      }, l.prototype.emit = function(A) {
        for (var O = [], B = 1; B < arguments.length; B++) O.push(arguments[B]);
        var U = A === "error", K = this._events;
        if (K !== void 0) U = U && K.error === void 0;
        else if (!U) return !1;
        if (U) {
          var G;
          if (0 < O.length && (G = O[0]), G instanceof Error) throw G;
          var J = new Error("Unhandled error." + (G ? " (" + G.message + ")" : ""));
          throw J.context = G, J;
        }
        var te = K[A];
        if (te === void 0) return !1;
        if (typeof te == "function") x(te, this, O);
        else for (var re = te.length, X = v(te, re), B = 0; B < re; ++B) x(X[B], this, O);
        return !0;
      }, l.prototype.addListener = function(A, O) {
        return d(this, A, O, !1);
      }, l.prototype.on = l.prototype.addListener, l.prototype.prependListener = function(A, O) {
        return d(this, A, O, !0);
      }, l.prototype.once = function(A, O) {
        return c(O), this.on(A, h(this, A, O)), this;
      }, l.prototype.prependOnceListener = function(A, O) {
        return c(O), this.prependListener(A, h(this, A, O)), this;
      }, l.prototype.removeListener = function(A, O) {
        var B, U, K, G, J;
        if (c(O), U = this._events, U === void 0) return this;
        if (B = U[A], B === void 0) return this;
        if (B === O || B.listener === O) --this._eventsCount == 0 ? this._events = /* @__PURE__ */ Object.create(null) : (delete U[A], U.removeListener && this.emit("removeListener", A, B.listener || O));
        else if (typeof B != "function") {
          for (K = -1, G = B.length - 1; 0 <= G; G--) if (B[G] === O || B[G].listener === O) {
            J = B[G].listener, K = G;
            break;
          }
          if (0 > K) return this;
          K === 0 ? B.shift() : y(B, K), B.length === 1 && (U[A] = B[0]), U.removeListener !== void 0 && this.emit("removeListener", A, J || O);
        }
        return this;
      }, l.prototype.off = l.prototype.removeListener, l.prototype.removeAllListeners = function(A) {
        var O, B, U;
        if (B = this._events, B === void 0) return this;
        if (B.removeListener === void 0) return arguments.length === 0 ? (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0) : B[A] !== void 0 && (--this._eventsCount == 0 ? this._events = /* @__PURE__ */ Object.create(null) : delete B[A]), this;
        if (arguments.length === 0) {
          var K, G = Object.keys(B);
          for (U = 0; U < G.length; ++U) K = G[U], K !== "removeListener" && this.removeAllListeners(K);
          return this.removeAllListeners("removeListener"), this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0, this;
        }
        if (O = B[A], typeof O == "function") this.removeListener(A, O);
        else if (O !== void 0) for (U = O.length - 1; 0 <= U; U--) this.removeListener(A, O[U]);
        return this;
      }, l.prototype.listeners = function(A) {
        return p(this, A, !0);
      }, l.prototype.rawListeners = function(A) {
        return p(this, A, !1);
      }, l.listenerCount = function(A, O) {
        return typeof A.listenerCount == "function" ? A.listenerCount(O) : m.call(A, O);
      }, l.prototype.listenerCount = m, l.prototype.eventNames = function() {
        return 0 < this._eventsCount ? S(this._events) : [];
      };
    }, {}], 8: [function(o, s) {
      s.exports = function() {
        if (typeof globalThis > "u") return null;
        var a = { RTCPeerConnection: globalThis.RTCPeerConnection || globalThis.mozRTCPeerConnection || globalThis.webkitRTCPeerConnection, RTCSessionDescription: globalThis.RTCSessionDescription || globalThis.mozRTCSessionDescription || globalThis.webkitRTCSessionDescription, RTCIceCandidate: globalThis.RTCIceCandidate || globalThis.mozRTCIceCandidate || globalThis.webkitRTCIceCandidate };
        return a.RTCPeerConnection ? a : null;
      };
    }, {}], 9: [function(o, s, a) {
      /*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
      a.read = function(l, c, f, d, u) {
        var h, p, m = 8 * u - d - 1, v = (1 << m) - 1, y = v >> 1, C = -7, k = f ? u - 1 : 0, _ = f ? -1 : 1, S = l[c + k];
        for (k += _, h = S & (1 << -C) - 1, S >>= -C, C += m; 0 < C; h = 256 * h + l[c + k], k += _, C -= 8) ;
        for (p = h & (1 << -C) - 1, h >>= -C, C += d; 0 < C; p = 256 * p + l[c + k], k += _, C -= 8) ;
        if (h === 0) h = 1 - y;
        else {
          if (h === v) return p ? NaN : (S ? -1 : 1) * (1 / 0);
          p += r(2, d), h -= y;
        }
        return (S ? -1 : 1) * p * r(2, h - d);
      }, a.write = function(l, c, f, d, u, h) {
        var p, m, v, y = Math.LN2, C = Math.log, k = 8 * h - u - 1, _ = (1 << k) - 1, S = _ >> 1, E = u === 23 ? r(2, -24) - r(2, -77) : 0, x = d ? 0 : h - 1, N = d ? 1 : -1, R = 0 > c || c === 0 && 0 > 1 / c ? 1 : 0;
        for (c = i(c), isNaN(c) || c === 1 / 0 ? (m = isNaN(c) ? 1 : 0, p = _) : (p = n(C(c) / y), 1 > c * (v = r(2, -p)) && (p--, v *= 2), c += 1 <= p + S ? E / v : E * r(2, 1 - S), 2 <= c * v && (p++, v /= 2), p + S >= _ ? (m = 0, p = _) : 1 <= p + S ? (m = (c * v - 1) * r(2, u), p += S) : (m = c * r(2, S - 1) * r(2, u), p = 0)); 8 <= u; l[f + x] = 255 & m, x += N, m /= 256, u -= 8) ;
        for (p = p << u | m, k += u; 0 < k; l[f + x] = 255 & p, x += N, p /= 256, k -= 8) ;
        l[f + x - N] |= 128 * R;
      };
    }, {}], 10: [function(o, s) {
      s.exports = typeof Object.create == "function" ? function(a, l) {
        l && (a.super_ = l, a.prototype = Object.create(l.prototype, { constructor: { value: a, enumerable: !1, writable: !0, configurable: !0 } }));
      } : function(a, l) {
        if (l) {
          a.super_ = l;
          var c = function() {
          };
          c.prototype = l.prototype, a.prototype = new c(), a.prototype.constructor = a;
        }
      };
    }, {}], 11: [function(o, s) {
      var a = Math.round;
      function l(u) {
        if (u += "", !(100 < u.length)) {
          var h = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(u);
          if (h) {
            var p = parseFloat(h[1]), m = (h[2] || "ms").toLowerCase();
            return m === "years" || m === "year" || m === "yrs" || m === "yr" || m === "y" ? 315576e5 * p : m === "weeks" || m === "week" || m === "w" ? 6048e5 * p : m === "days" || m === "day" || m === "d" ? 864e5 * p : m === "hours" || m === "hour" || m === "hrs" || m === "hr" || m === "h" ? 36e5 * p : m === "minutes" || m === "minute" || m === "mins" || m === "min" || m === "m" ? 6e4 * p : m === "seconds" || m === "second" || m === "secs" || m === "sec" || m === "s" ? 1e3 * p : m === "milliseconds" || m === "millisecond" || m === "msecs" || m === "msec" || m === "ms" ? p : void 0;
          }
        }
      }
      function c(u) {
        var h = i(u);
        return 864e5 <= h ? a(u / 864e5) + "d" : 36e5 <= h ? a(u / 36e5) + "h" : 6e4 <= h ? a(u / 6e4) + "m" : 1e3 <= h ? a(u / 1e3) + "s" : u + "ms";
      }
      function f(u) {
        var h = i(u);
        return 864e5 <= h ? d(u, h, 864e5, "day") : 36e5 <= h ? d(u, h, 36e5, "hour") : 6e4 <= h ? d(u, h, 6e4, "minute") : 1e3 <= h ? d(u, h, 1e3, "second") : u + " ms";
      }
      function d(u, h, p, m) {
        return a(u / p) + " " + m + (h >= 1.5 * p ? "s" : "");
      }
      s.exports = function(u, h) {
        h = h || {};
        var p = typeof u;
        if (p == "string" && 0 < u.length) return l(u);
        if (p === "number" && isFinite(u)) return h.long ? f(u) : c(u);
        throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(u));
      };
    }, {}], 12: [function(o, s) {
      function a() {
        throw new Error("setTimeout has not been defined");
      }
      function l() {
        throw new Error("clearTimeout has not been defined");
      }
      function c(E) {
        if (m === setTimeout) return setTimeout(E, 0);
        if ((m === a || !m) && setTimeout) return m = setTimeout, setTimeout(E, 0);
        try {
          return m(E, 0);
        } catch {
          try {
            return m.call(null, E, 0);
          } catch {
            return m.call(this, E, 0);
          }
        }
      }
      function f(E) {
        if (v === clearTimeout) return clearTimeout(E);
        if ((v === l || !v) && clearTimeout) return v = clearTimeout, clearTimeout(E);
        try {
          return v(E);
        } catch {
          try {
            return v.call(null, E);
          } catch {
            return v.call(this, E);
          }
        }
      }
      function d() {
        _ && C && (_ = !1, C.length ? k = C.concat(k) : S = -1, k.length && u());
      }
      function u() {
        if (!_) {
          var E = c(d);
          _ = !0;
          for (var x = k.length; x; ) {
            for (C = k, k = []; ++S < x; ) C && C[S].run();
            S = -1, x = k.length;
          }
          C = null, _ = !1, f(E);
        }
      }
      function h(E, x) {
        this.fun = E, this.array = x;
      }
      function p() {
      }
      var m, v, y = s.exports = {};
      (function() {
        try {
          m = typeof setTimeout == "function" ? setTimeout : a;
        } catch {
          m = a;
        }
        try {
          v = typeof clearTimeout == "function" ? clearTimeout : l;
        } catch {
          v = l;
        }
      })();
      var C, k = [], _ = !1, S = -1;
      y.nextTick = function(E) {
        var x = Array(arguments.length - 1);
        if (1 < arguments.length) for (var N = 1; N < arguments.length; N++) x[N - 1] = arguments[N];
        k.push(new h(E, x)), k.length !== 1 || _ || c(u);
      }, h.prototype.run = function() {
        this.fun.apply(null, this.array);
      }, y.title = "browser", y.browser = !0, y.env = {}, y.argv = [], y.version = "", y.versions = {}, y.on = p, y.addListener = p, y.once = p, y.off = p, y.removeListener = p, y.removeAllListeners = p, y.emit = p, y.prependListener = p, y.prependOnceListener = p, y.listeners = function() {
        return [];
      }, y.binding = function() {
        throw new Error("process.binding is not supported");
      }, y.cwd = function() {
        return "/";
      }, y.chdir = function() {
        throw new Error("process.chdir is not supported");
      }, y.umask = function() {
        return 0;
      };
    }, {}], 13: [function(o, s) {
      (function(a) {
        (function() {
          /*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
          let l;
          s.exports = typeof queueMicrotask == "function" ? queueMicrotask.bind(typeof window > "u" ? a : window) : (c) => (l || (l = Promise.resolve())).then(c).catch((f) => setTimeout(() => {
            throw f;
          }, 0));
        }).call(this);
      }).call(this, typeof pr > "u" ? typeof self > "u" ? typeof window > "u" ? {} : window : self : pr);
    }, {}], 14: [function(o, s) {
      (function(a, l) {
        (function() {
          var c = o("safe-buffer").Buffer, f = l.crypto || l.msCrypto;
          s.exports = f && f.getRandomValues ? function(d, u) {
            if (d > 4294967295) throw new RangeError("requested too many random bytes");
            var h = c.allocUnsafe(d);
            if (0 < d) if (65536 < d) for (var p = 0; p < d; p += 65536) f.getRandomValues(h.slice(p, p + 65536));
            else f.getRandomValues(h);
            return typeof u == "function" ? a.nextTick(function() {
              u(null, h);
            }) : h;
          } : function() {
            throw new Error(`Secure random number generation is not supported by this browser.
Use Chrome, Firefox or Internet Explorer 11`);
          };
        }).call(this);
      }).call(this, o("_process"), typeof pr > "u" ? typeof self > "u" ? typeof window > "u" ? {} : window : self : pr);
    }, { _process: 12, "safe-buffer": 30 }], 15: [function(o, s) {
      function a(p, m) {
        p.prototype = Object.create(m.prototype), p.prototype.constructor = p, p.__proto__ = m;
      }
      function l(p, m, v) {
        function y(k, _, S) {
          return typeof m == "string" ? m : m(k, _, S);
        }
        v || (v = Error);
        var C = function(k) {
          function _(S, E, x) {
            return k.call(this, y(S, E, x)) || this;
          }
          return a(_, k), _;
        }(v);
        C.prototype.name = v.name, C.prototype.code = p, h[p] = C;
      }
      function c(p, m) {
        if (Array.isArray(p)) {
          var v = p.length;
          return p = p.map(function(y) {
            return y + "";
          }), 2 < v ? "one of ".concat(m, " ").concat(p.slice(0, v - 1).join(", "), ", or ") + p[v - 1] : v === 2 ? "one of ".concat(m, " ").concat(p[0], " or ").concat(p[1]) : "of ".concat(m, " ").concat(p[0]);
        }
        return "of ".concat(m, " ").concat(p + "");
      }
      function f(p, m, v) {
        return p.substr(0, m.length) === m;
      }
      function d(p, m, v) {
        return (v === void 0 || v > p.length) && (v = p.length), p.substring(v - m.length, v) === m;
      }
      function u(p, m, v) {
        return typeof v != "number" && (v = 0), !(v + m.length > p.length) && p.indexOf(m, v) !== -1;
      }
      var h = {};
      l("ERR_INVALID_OPT_VALUE", function(p, m) {
        return 'The value "' + m + '" is invalid for option "' + p + '"';
      }, TypeError), l("ERR_INVALID_ARG_TYPE", function(p, m, v) {
        var y;
        typeof m == "string" && f(m, "not ") ? (y = "must not be", m = m.replace(/^not /, "")) : y = "must be";
        var C;
        if (d(p, " argument")) C = "The ".concat(p, " ").concat(y, " ").concat(c(m, "type"));
        else {
          var k = u(p, ".") ? "property" : "argument";
          C = 'The "'.concat(p, '" ').concat(k, " ").concat(y, " ").concat(c(m, "type"));
        }
        return C += ". Received type ".concat(typeof v), C;
      }, TypeError), l("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF"), l("ERR_METHOD_NOT_IMPLEMENTED", function(p) {
        return "The " + p + " method is not implemented";
      }), l("ERR_STREAM_PREMATURE_CLOSE", "Premature close"), l("ERR_STREAM_DESTROYED", function(p) {
        return "Cannot call " + p + " after a stream was destroyed";
      }), l("ERR_MULTIPLE_CALLBACK", "Callback called multiple times"), l("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable"), l("ERR_STREAM_WRITE_AFTER_END", "write after end"), l("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError), l("ERR_UNKNOWN_ENCODING", function(p) {
        return "Unknown encoding: " + p;
      }, TypeError), l("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event"), s.exports.codes = h;
    }, {}], 16: [function(o, s) {
      (function(a) {
        (function() {
          function l(y) {
            return this instanceof l ? (u.call(this, y), h.call(this, y), this.allowHalfOpen = !0, void (y && (y.readable === !1 && (this.readable = !1), y.writable === !1 && (this.writable = !1), y.allowHalfOpen === !1 && (this.allowHalfOpen = !1, this.once("end", c))))) : new l(y);
          }
          function c() {
            this._writableState.ended || a.nextTick(f, this);
          }
          function f(y) {
            y.end();
          }
          var d = Object.keys || function(y) {
            var C = [];
            for (var k in y) C.push(k);
            return C;
          };
          s.exports = l;
          var u = o("./_stream_readable"), h = o("./_stream_writable");
          o("inherits")(l, u);
          for (var p, m = d(h.prototype), v = 0; v < m.length; v++) p = m[v], l.prototype[p] || (l.prototype[p] = h.prototype[p]);
          Object.defineProperty(l.prototype, "writableHighWaterMark", { enumerable: !1, get: function() {
            return this._writableState.highWaterMark;
          } }), Object.defineProperty(l.prototype, "writableBuffer", { enumerable: !1, get: function() {
            return this._writableState && this._writableState.getBuffer();
          } }), Object.defineProperty(l.prototype, "writableLength", { enumerable: !1, get: function() {
            return this._writableState.length;
          } }), Object.defineProperty(l.prototype, "destroyed", { enumerable: !1, get: function() {
            return this._readableState !== void 0 && this._writableState !== void 0 && this._readableState.destroyed && this._writableState.destroyed;
          }, set: function(y) {
            this._readableState === void 0 || this._writableState === void 0 || (this._readableState.destroyed = y, this._writableState.destroyed = y);
          } });
        }).call(this);
      }).call(this, o("_process"));
    }, { "./_stream_readable": 18, "./_stream_writable": 20, _process: 12, inherits: 10 }], 17: [function(o, s) {
      function a(c) {
        return this instanceof a ? void l.call(this, c) : new a(c);
      }
      s.exports = a;
      var l = o("./_stream_transform");
      o("inherits")(a, l), a.prototype._transform = function(c, f, d) {
        d(null, c);
      };
    }, { "./_stream_transform": 19, inherits: 10 }], 18: [function(o, s) {
      (function(a, l) {
        (function() {
          function c(I) {
            return Se.from(I);
          }
          function f(I) {
            return Se.isBuffer(I) || I instanceof F;
          }
          function d(I, g, T) {
            return typeof I.prependListener == "function" ? I.prependListener(g, T) : void (I._events && I._events[g] ? Array.isArray(I._events[g]) ? I._events[g].unshift(T) : I._events[g] = [T, I._events[g]] : I.on(g, T));
          }
          function u(I, g, T) {
            re = re || o("./_stream_duplex"), I = I || {}, typeof T != "boolean" && (T = g instanceof re), this.objectMode = !!I.objectMode, T && (this.objectMode = this.objectMode || !!I.readableObjectMode), this.highWaterMark = Zt(this, I, "readableHighWaterMark", T), this.buffer = new Ye(), this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = !1, this.endEmitted = !1, this.reading = !1, this.sync = !0, this.needReadable = !1, this.emittedReadable = !1, this.readableListening = !1, this.resumeScheduled = !1, this.paused = !0, this.emitClose = I.emitClose !== !1, this.autoDestroy = !!I.autoDestroy, this.destroyed = !1, this.defaultEncoding = I.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = !1, this.decoder = null, this.encoding = null, I.encoding && (!ft && (ft = o("string_decoder/").StringDecoder), this.decoder = new ft(I.encoding), this.encoding = I.encoding);
          }
          function h(I) {
            if (re = re || o("./_stream_duplex"), !(this instanceof h)) return new h(I);
            var g = this instanceof re;
            this._readableState = new u(I, this, g), this.readable = !0, I && (typeof I.read == "function" && (this._read = I.read), typeof I.destroy == "function" && (this._destroy = I.destroy)), me.call(this);
          }
          function p(I, g, T, M, j) {
            X("readableAddChunk", g);
            var q = I._readableState;
            if (g === null) q.reading = !1, k(I, q);
            else {
              var Z;
              if (j || (Z = v(q, g)), Z) fe(I, Z);
              else if (!(q.objectMode || g && 0 < g.length)) M || (q.reading = !1, E(I, q));
              else if (typeof g == "string" || q.objectMode || Object.getPrototypeOf(g) === Se.prototype || (g = c(g)), M) q.endEmitted ? fe(I, new Y()) : m(I, q, g, !0);
              else if (q.ended) fe(I, new dt());
              else {
                if (q.destroyed) return !1;
                q.reading = !1, q.decoder && !T ? (g = q.decoder.write(g), q.objectMode || g.length !== 0 ? m(I, q, g, !1) : E(I, q)) : m(I, q, g, !1);
              }
            }
            return !q.ended && (q.length < q.highWaterMark || q.length === 0);
          }
          function m(I, g, T, M) {
            g.flowing && g.length === 0 && !g.sync ? (g.awaitDrain = 0, I.emit("data", T)) : (g.length += g.objectMode ? 1 : T.length, M ? g.buffer.unshift(T) : g.buffer.push(T), g.needReadable && _(I)), E(I, g);
          }
          function v(I, g) {
            var T;
            return f(g) || typeof g == "string" || g === void 0 || I.objectMode || (T = new Dt("chunk", ["string", "Buffer", "Uint8Array"], g)), T;
          }
          function y(I) {
            return 1073741824 <= I ? I = 1073741824 : (I--, I |= I >>> 1, I |= I >>> 2, I |= I >>> 4, I |= I >>> 8, I |= I >>> 16, I++), I;
          }
          function C(I, g) {
            return 0 >= I || g.length === 0 && g.ended ? 0 : g.objectMode ? 1 : I === I ? (I > g.highWaterMark && (g.highWaterMark = y(I)), I <= g.length ? I : g.ended ? g.length : (g.needReadable = !0, 0)) : g.flowing && g.length ? g.buffer.head.data.length : g.length;
          }
          function k(I, g) {
            if (X("onEofChunk"), !g.ended) {
              if (g.decoder) {
                var T = g.decoder.end();
                T && T.length && (g.buffer.push(T), g.length += g.objectMode ? 1 : T.length);
              }
              g.ended = !0, g.sync ? _(I) : (g.needReadable = !1, !g.emittedReadable && (g.emittedReadable = !0, S(I)));
            }
          }
          function _(I) {
            var g = I._readableState;
            X("emitReadable", g.needReadable, g.emittedReadable), g.needReadable = !1, g.emittedReadable || (X("emitReadable", g.flowing), g.emittedReadable = !0, a.nextTick(S, I));
          }
          function S(I) {
            var g = I._readableState;
            X("emitReadable_", g.destroyed, g.length, g.ended), !g.destroyed && (g.length || g.ended) && (I.emit("readable"), g.emittedReadable = !1), g.needReadable = !g.flowing && !g.ended && g.length <= g.highWaterMark, U(I);
          }
          function E(I, g) {
            g.readingMore || (g.readingMore = !0, a.nextTick(x, I, g));
          }
          function x(I, g) {
            for (; !g.reading && !g.ended && (g.length < g.highWaterMark || g.flowing && g.length === 0); ) {
              var T = g.length;
              if (X("maybeReadMore read 0"), I.read(0), T === g.length) break;
            }
            g.readingMore = !1;
          }
          function N(I) {
            return function() {
              var g = I._readableState;
              X("pipeOnDrain", g.awaitDrain), g.awaitDrain && g.awaitDrain--, g.awaitDrain === 0 && D(I, "data") && (g.flowing = !0, U(I));
            };
          }
          function R(I) {
            var g = I._readableState;
            g.readableListening = 0 < I.listenerCount("readable"), g.resumeScheduled && !g.paused ? g.flowing = !0 : 0 < I.listenerCount("data") && I.resume();
          }
          function A(I) {
            X("readable nexttick read 0"), I.read(0);
          }
          function O(I, g) {
            g.resumeScheduled || (g.resumeScheduled = !0, a.nextTick(B, I, g));
          }
          function B(I, g) {
            X("resume", g.reading), g.reading || I.read(0), g.resumeScheduled = !1, I.emit("resume"), U(I), g.flowing && !g.reading && I.read(0);
          }
          function U(I) {
            var g = I._readableState;
            for (X("flow", g.flowing); g.flowing && I.read() !== null; ) ;
          }
          function K(I, g) {
            if (g.length === 0) return null;
            var T;
            return g.objectMode ? T = g.buffer.shift() : !I || I >= g.length ? (T = g.decoder ? g.buffer.join("") : g.buffer.length === 1 ? g.buffer.first() : g.buffer.concat(g.length), g.buffer.clear()) : T = g.buffer.consume(I, g.decoder), T;
          }
          function G(I) {
            var g = I._readableState;
            X("endReadable", g.endEmitted), g.endEmitted || (g.ended = !0, a.nextTick(J, g, I));
          }
          function J(I, g) {
            if (X("endReadableNT", I.endEmitted, I.length), !I.endEmitted && I.length === 0 && (I.endEmitted = !0, g.readable = !1, g.emit("end"), I.autoDestroy)) {
              var T = g._writableState;
              (!T || T.autoDestroy && T.finished) && g.destroy();
            }
          }
          function te(I, g) {
            for (var T = 0, M = I.length; T < M; T++) if (I[T] === g) return T;
            return -1;
          }
          s.exports = h;
          var re;
          h.ReadableState = u;
          var X;
          o("events").EventEmitter;
          var D = function(I, g) {
            return I.listeners(g).length;
          }, me = o("./internal/streams/stream"), Se = o("buffer").Buffer, F = l.Uint8Array || function() {
          }, Oe = o("util");
          X = Oe && Oe.debuglog ? Oe.debuglog("stream") : function() {
          };
          var ft, Re, qe, Ye = o("./internal/streams/buffer_list"), Ge = o("./internal/streams/destroy"), st = o("./internal/streams/state"), Zt = st.getHighWaterMark, Mt = o("../errors").codes, Dt = Mt.ERR_INVALID_ARG_TYPE, dt = Mt.ERR_STREAM_PUSH_AFTER_EOF, W = Mt.ERR_METHOD_NOT_IMPLEMENTED, Y = Mt.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;
          o("inherits")(h, me);
          var fe = Ge.errorOrDestroy, Ee = ["error", "close", "destroy", "pause", "resume"];
          Object.defineProperty(h.prototype, "destroyed", { enumerable: !1, get: function() {
            return this._readableState !== void 0 && this._readableState.destroyed;
          }, set: function(I) {
            this._readableState && (this._readableState.destroyed = I);
          } }), h.prototype.destroy = Ge.destroy, h.prototype._undestroy = Ge.undestroy, h.prototype._destroy = function(I, g) {
            g(I);
          }, h.prototype.push = function(I, g) {
            var T, M = this._readableState;
            return M.objectMode ? T = !0 : typeof I == "string" && (g = g || M.defaultEncoding, g !== M.encoding && (I = Se.from(I, g), g = ""), T = !0), p(this, I, g, !1, T);
          }, h.prototype.unshift = function(I) {
            return p(this, I, null, !0, !1);
          }, h.prototype.isPaused = function() {
            return this._readableState.flowing === !1;
          }, h.prototype.setEncoding = function(I) {
            ft || (ft = o("string_decoder/").StringDecoder);
            var g = new ft(I);
            this._readableState.decoder = g, this._readableState.encoding = this._readableState.decoder.encoding;
            for (var T = this._readableState.buffer.head, M = ""; T !== null; ) M += g.write(T.data), T = T.next;
            return this._readableState.buffer.clear(), M !== "" && this._readableState.buffer.push(M), this._readableState.length = M.length, this;
          }, h.prototype.read = function(I) {
            X("read", I), I = parseInt(I, 10);
            var g = this._readableState, T = I;
            if (I !== 0 && (g.emittedReadable = !1), I === 0 && g.needReadable && ((g.highWaterMark === 0 ? 0 < g.length : g.length >= g.highWaterMark) || g.ended)) return X("read: emitReadable", g.length, g.ended), g.length === 0 && g.ended ? G(this) : _(this), null;
            if (I = C(I, g), I === 0 && g.ended) return g.length === 0 && G(this), null;
            var M = g.needReadable;
            X("need readable", M), (g.length === 0 || g.length - I < g.highWaterMark) && (M = !0, X("length less than watermark", M)), g.ended || g.reading ? (M = !1, X("reading or ended", M)) : M && (X("do read"), g.reading = !0, g.sync = !0, g.length === 0 && (g.needReadable = !0), this._read(g.highWaterMark), g.sync = !1, !g.reading && (I = C(T, g)));
            var j;
            return j = 0 < I ? K(I, g) : null, j === null ? (g.needReadable = g.length <= g.highWaterMark, I = 0) : (g.length -= I, g.awaitDrain = 0), g.length === 0 && (!g.ended && (g.needReadable = !0), T !== I && g.ended && G(this)), j !== null && this.emit("data", j), j;
          }, h.prototype._read = function() {
            fe(this, new W("_read()"));
          }, h.prototype.pipe = function(I, g) {
            function T(gn, yn) {
              X("onunpipe"), gn === ue && yn && yn.hasUnpiped === !1 && (yn.hasUnpiped = !0, j());
            }
            function M() {
              X("onend"), I.end();
            }
            function j() {
              X("cleanup"), I.removeListener("close", Te), I.removeListener("finish", V), I.removeListener("drain", en), I.removeListener("error", Z), I.removeListener("unpipe", T), ue.removeListener("end", M), ue.removeListener("end", se), ue.removeListener("data", q), tn = !0, _e.awaitDrain && (!I._writableState || I._writableState.needDrain) && en();
            }
            function q(gn) {
              X("ondata");
              var yn = I.write(gn);
              X("dest.write", yn), yn === !1 && ((_e.pipesCount === 1 && _e.pipes === I || 1 < _e.pipesCount && te(_e.pipes, I) !== -1) && !tn && (X("false write response, pause", _e.awaitDrain), _e.awaitDrain++), ue.pause());
            }
            function Z(gn) {
              X("onerror", gn), se(), I.removeListener("error", Z), D(I, "error") === 0 && fe(I, gn);
            }
            function Te() {
              I.removeListener("finish", V), se();
            }
            function V() {
              X("onfinish"), I.removeListener("close", Te), se();
            }
            function se() {
              X("unpipe"), ue.unpipe(I);
            }
            var ue = this, _e = this._readableState;
            switch (_e.pipesCount) {
              case 0:
                _e.pipes = I;
                break;
              case 1:
                _e.pipes = [_e.pipes, I];
                break;
              default:
                _e.pipes.push(I);
            }
            _e.pipesCount += 1, X("pipe count=%d opts=%j", _e.pipesCount, g);
            var Le = (!g || g.end !== !1) && I !== a.stdout && I !== a.stderr, Ht = Le ? M : se;
            _e.endEmitted ? a.nextTick(Ht) : ue.once("end", Ht), I.on("unpipe", T);
            var en = N(ue);
            I.on("drain", en);
            var tn = !1;
            return ue.on("data", q), d(I, "error", Z), I.once("close", Te), I.once("finish", V), I.emit("pipe", ue), _e.flowing || (X("pipe resume"), ue.resume()), I;
          }, h.prototype.unpipe = function(I) {
            var g = this._readableState, T = { hasUnpiped: !1 };
            if (g.pipesCount === 0) return this;
            if (g.pipesCount === 1) return I && I !== g.pipes ? this : (I || (I = g.pipes), g.pipes = null, g.pipesCount = 0, g.flowing = !1, I && I.emit("unpipe", this, T), this);
            if (!I) {
              var M = g.pipes, j = g.pipesCount;
              g.pipes = null, g.pipesCount = 0, g.flowing = !1;
              for (var q = 0; q < j; q++) M[q].emit("unpipe", this, { hasUnpiped: !1 });
              return this;
            }
            var Z = te(g.pipes, I);
            return Z === -1 ? this : (g.pipes.splice(Z, 1), g.pipesCount -= 1, g.pipesCount === 1 && (g.pipes = g.pipes[0]), I.emit("unpipe", this, T), this);
          }, h.prototype.on = function(I, g) {
            var T = me.prototype.on.call(this, I, g), M = this._readableState;
            return I === "data" ? (M.readableListening = 0 < this.listenerCount("readable"), M.flowing !== !1 && this.resume()) : I == "readable" && !M.endEmitted && !M.readableListening && (M.readableListening = M.needReadable = !0, M.flowing = !1, M.emittedReadable = !1, X("on readable", M.length, M.reading), M.length ? _(this) : !M.reading && a.nextTick(A, this)), T;
          }, h.prototype.addListener = h.prototype.on, h.prototype.removeListener = function(I, g) {
            var T = me.prototype.removeListener.call(this, I, g);
            return I === "readable" && a.nextTick(R, this), T;
          }, h.prototype.removeAllListeners = function(I) {
            var g = me.prototype.removeAllListeners.apply(this, arguments);
            return (I === "readable" || I === void 0) && a.nextTick(R, this), g;
          }, h.prototype.resume = function() {
            var I = this._readableState;
            return I.flowing || (X("resume"), I.flowing = !I.readableListening, O(this, I)), I.paused = !1, this;
          }, h.prototype.pause = function() {
            return X("call pause flowing=%j", this._readableState.flowing), this._readableState.flowing !== !1 && (X("pause"), this._readableState.flowing = !1, this.emit("pause")), this._readableState.paused = !0, this;
          }, h.prototype.wrap = function(I) {
            var g = this, T = this._readableState, M = !1;
            for (var j in I.on("end", function() {
              if (X("wrapped end"), T.decoder && !T.ended) {
                var Z = T.decoder.end();
                Z && Z.length && g.push(Z);
              }
              g.push(null);
            }), I.on("data", function(Z) {
              if (X("wrapped data"), T.decoder && (Z = T.decoder.write(Z)), !(T.objectMode && Z == null) && (T.objectMode || Z && Z.length)) {
                var Te = g.push(Z);
                Te || (M = !0, I.pause());
              }
            }), I) this[j] === void 0 && typeof I[j] == "function" && (this[j] = /* @__PURE__ */ function(Z) {
              return function() {
                return I[Z].apply(I, arguments);
              };
            }(j));
            for (var q = 0; q < Ee.length; q++) I.on(Ee[q], this.emit.bind(this, Ee[q]));
            return this._read = function(Z) {
              X("wrapped _read", Z), M && (M = !1, I.resume());
            }, this;
          }, typeof Symbol == "function" && (h.prototype[Symbol.asyncIterator] = function() {
            return Re === void 0 && (Re = o("./internal/streams/async_iterator")), Re(this);
          }), Object.defineProperty(h.prototype, "readableHighWaterMark", { enumerable: !1, get: function() {
            return this._readableState.highWaterMark;
          } }), Object.defineProperty(h.prototype, "readableBuffer", { enumerable: !1, get: function() {
            return this._readableState && this._readableState.buffer;
          } }), Object.defineProperty(h.prototype, "readableFlowing", { enumerable: !1, get: function() {
            return this._readableState.flowing;
          }, set: function(I) {
            this._readableState && (this._readableState.flowing = I);
          } }), h._fromList = K, Object.defineProperty(h.prototype, "readableLength", { enumerable: !1, get: function() {
            return this._readableState.length;
          } }), typeof Symbol == "function" && (h.from = function(I, g) {
            return qe === void 0 && (qe = o("./internal/streams/from")), qe(h, I, g);
          });
        }).call(this);
      }).call(this, o("_process"), typeof pr > "u" ? typeof self > "u" ? typeof window > "u" ? {} : window : self : pr);
    }, { "../errors": 15, "./_stream_duplex": 16, "./internal/streams/async_iterator": 21, "./internal/streams/buffer_list": 22, "./internal/streams/destroy": 23, "./internal/streams/from": 25, "./internal/streams/state": 27, "./internal/streams/stream": 28, _process: 12, buffer: 3, events: 7, inherits: 10, "string_decoder/": 31, util: 2 }], 19: [function(o, s) {
      function a(y, C) {
        var k = this._transformState;
        k.transforming = !1;
        var _ = k.writecb;
        if (_ === null) return this.emit("error", new h());
        k.writechunk = null, k.writecb = null, C != null && this.push(C), _(y);
        var S = this._readableState;
        S.reading = !1, (S.needReadable || S.length < S.highWaterMark) && this._read(S.highWaterMark);
      }
      function l(y) {
        return this instanceof l ? (v.call(this, y), this._transformState = { afterTransform: a.bind(this), needTransform: !1, transforming: !1, writecb: null, writechunk: null, writeencoding: null }, this._readableState.needReadable = !0, this._readableState.sync = !1, y && (typeof y.transform == "function" && (this._transform = y.transform), typeof y.flush == "function" && (this._flush = y.flush)), void this.on("prefinish", c)) : new l(y);
      }
      function c() {
        var y = this;
        typeof this._flush != "function" || this._readableState.destroyed ? f(this, null, null) : this._flush(function(C, k) {
          f(y, C, k);
        });
      }
      function f(y, C, k) {
        if (C) return y.emit("error", C);
        if (k != null && y.push(k), y._writableState.length) throw new m();
        if (y._transformState.transforming) throw new p();
        return y.push(null);
      }
      s.exports = l;
      var d = o("../errors").codes, u = d.ERR_METHOD_NOT_IMPLEMENTED, h = d.ERR_MULTIPLE_CALLBACK, p = d.ERR_TRANSFORM_ALREADY_TRANSFORMING, m = d.ERR_TRANSFORM_WITH_LENGTH_0, v = o("./_stream_duplex");
      o("inherits")(l, v), l.prototype.push = function(y, C) {
        return this._transformState.needTransform = !1, v.prototype.push.call(this, y, C);
      }, l.prototype._transform = function(y, C, k) {
        k(new u("_transform()"));
      }, l.prototype._write = function(y, C, k) {
        var _ = this._transformState;
        if (_.writecb = k, _.writechunk = y, _.writeencoding = C, !_.transforming) {
          var S = this._readableState;
          (_.needTransform || S.needReadable || S.length < S.highWaterMark) && this._read(S.highWaterMark);
        }
      }, l.prototype._read = function() {
        var y = this._transformState;
        y.writechunk === null || y.transforming ? y.needTransform = !0 : (y.transforming = !0, this._transform(y.writechunk, y.writeencoding, y.afterTransform));
      }, l.prototype._destroy = function(y, C) {
        v.prototype._destroy.call(this, y, function(k) {
          C(k);
        });
      };
    }, { "../errors": 15, "./_stream_duplex": 16, inherits: 10 }], 20: [function(o, s) {
      (function(a, l) {
        (function() {
          function c(W) {
            var Y = this;
            this.next = null, this.entry = null, this.finish = function() {
              G(Y, W);
            };
          }
          function f(W) {
            return X.from(W);
          }
          function d(W) {
            return X.isBuffer(W) || W instanceof D;
          }
          function u() {
          }
          function h(W, Y, fe) {
            J = J || o("./_stream_duplex"), W = W || {}, typeof fe != "boolean" && (fe = Y instanceof J), this.objectMode = !!W.objectMode, fe && (this.objectMode = this.objectMode || !!W.writableObjectMode), this.highWaterMark = F(this, W, "writableHighWaterMark", fe), this.finalCalled = !1, this.needDrain = !1, this.ending = !1, this.ended = !1, this.finished = !1, this.destroyed = !1;
            var Ee = W.decodeStrings === !1;
            this.decodeStrings = !Ee, this.defaultEncoding = W.defaultEncoding || "utf8", this.length = 0, this.writing = !1, this.corked = 0, this.sync = !0, this.bufferProcessing = !1, this.onwrite = function(I) {
              E(Y, I);
            }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = !1, this.errorEmitted = !1, this.emitClose = W.emitClose !== !1, this.autoDestroy = !!W.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new c(this);
          }
          function p(W) {
            J = J || o("./_stream_duplex");
            var Y = this instanceof J;
            return Y || dt.call(p, this) ? (this._writableState = new h(W, this, Y), this.writable = !0, W && (typeof W.write == "function" && (this._write = W.write), typeof W.writev == "function" && (this._writev = W.writev), typeof W.destroy == "function" && (this._destroy = W.destroy), typeof W.final == "function" && (this._final = W.final)), void re.call(this)) : new p(W);
          }
          function m(W, Y) {
            var fe = new Zt();
            Dt(W, fe), a.nextTick(Y, fe);
          }
          function v(W, Y, fe, Ee) {
            var I;
            return fe === null ? I = new st() : typeof fe != "string" && !Y.objectMode && (I = new ft("chunk", ["string", "Buffer"], fe)), !I || (Dt(W, I), a.nextTick(Ee, I), !1);
          }
          function y(W, Y, fe) {
            return W.objectMode || W.decodeStrings === !1 || typeof Y != "string" || (Y = X.from(Y, fe)), Y;
          }
          function C(W, Y, fe, Ee, I, g) {
            if (!fe) {
              var T = y(Y, Ee, I);
              Ee !== T && (fe = !0, I = "buffer", Ee = T);
            }
            var M = Y.objectMode ? 1 : Ee.length;
            Y.length += M;
            var j = Y.length < Y.highWaterMark;
            if (j || (Y.needDrain = !0), Y.writing || Y.corked) {
              var q = Y.lastBufferedRequest;
              Y.lastBufferedRequest = { chunk: Ee, encoding: I, isBuf: fe, callback: g, next: null }, q ? q.next = Y.lastBufferedRequest : Y.bufferedRequest = Y.lastBufferedRequest, Y.bufferedRequestCount += 1;
            } else k(W, Y, !1, M, Ee, I, g);
            return j;
          }
          function k(W, Y, fe, Ee, I, g, T) {
            Y.writelen = Ee, Y.writecb = T, Y.writing = !0, Y.sync = !0, Y.destroyed ? Y.onwrite(new Ge("write")) : fe ? W._writev(I, Y.onwrite) : W._write(I, g, Y.onwrite), Y.sync = !1;
          }
          function _(W, Y, fe, Ee, I) {
            --Y.pendingcb, fe ? (a.nextTick(I, Ee), a.nextTick(U, W, Y), W._writableState.errorEmitted = !0, Dt(W, Ee)) : (I(Ee), W._writableState.errorEmitted = !0, Dt(W, Ee), U(W, Y));
          }
          function S(W) {
            W.writing = !1, W.writecb = null, W.length -= W.writelen, W.writelen = 0;
          }
          function E(W, Y) {
            var fe = W._writableState, Ee = fe.sync, I = fe.writecb;
            if (typeof I != "function") throw new qe();
            if (S(fe), Y) _(W, fe, Ee, Y, I);
            else {
              var g = A(fe) || W.destroyed;
              g || fe.corked || fe.bufferProcessing || !fe.bufferedRequest || R(W, fe), Ee ? a.nextTick(x, W, fe, g, I) : x(W, fe, g, I);
            }
          }
          function x(W, Y, fe, Ee) {
            fe || N(W, Y), Y.pendingcb--, Ee(), U(W, Y);
          }
          function N(W, Y) {
            Y.length === 0 && Y.needDrain && (Y.needDrain = !1, W.emit("drain"));
          }
          function R(W, Y) {
            Y.bufferProcessing = !0;
            var fe = Y.bufferedRequest;
            if (W._writev && fe && fe.next) {
              var Ee = Y.bufferedRequestCount, I = Array(Ee), g = Y.corkedRequestsFree;
              g.entry = fe;
              for (var T = 0, M = !0; fe; ) I[T] = fe, fe.isBuf || (M = !1), fe = fe.next, T += 1;
              I.allBuffers = M, k(W, Y, !0, Y.length, I, "", g.finish), Y.pendingcb++, Y.lastBufferedRequest = null, g.next ? (Y.corkedRequestsFree = g.next, g.next = null) : Y.corkedRequestsFree = new c(Y), Y.bufferedRequestCount = 0;
            } else {
              for (; fe; ) {
                var j = fe.chunk, q = fe.encoding, Z = fe.callback, Te = Y.objectMode ? 1 : j.length;
                if (k(W, Y, !1, Te, j, q, Z), fe = fe.next, Y.bufferedRequestCount--, Y.writing) break;
              }
              fe === null && (Y.lastBufferedRequest = null);
            }
            Y.bufferedRequest = fe, Y.bufferProcessing = !1;
          }
          function A(W) {
            return W.ending && W.length === 0 && W.bufferedRequest === null && !W.finished && !W.writing;
          }
          function O(W, Y) {
            W._final(function(fe) {
              Y.pendingcb--, fe && Dt(W, fe), Y.prefinished = !0, W.emit("prefinish"), U(W, Y);
            });
          }
          function B(W, Y) {
            Y.prefinished || Y.finalCalled || (typeof W._final != "function" || Y.destroyed ? (Y.prefinished = !0, W.emit("prefinish")) : (Y.pendingcb++, Y.finalCalled = !0, a.nextTick(O, W, Y)));
          }
          function U(W, Y) {
            var fe = A(Y);
            if (fe && (B(W, Y), Y.pendingcb === 0 && (Y.finished = !0, W.emit("finish"), Y.autoDestroy))) {
              var Ee = W._readableState;
              (!Ee || Ee.autoDestroy && Ee.endEmitted) && W.destroy();
            }
            return fe;
          }
          function K(W, Y, fe) {
            Y.ending = !0, U(W, Y), fe && (Y.finished ? a.nextTick(fe) : W.once("finish", fe)), Y.ended = !0, W.writable = !1;
          }
          function G(W, Y, fe) {
            var Ee = W.entry;
            for (W.entry = null; Ee; ) {
              var I = Ee.callback;
              Y.pendingcb--, I(fe), Ee = Ee.next;
            }
            Y.corkedRequestsFree.next = W;
          }
          s.exports = p;
          var J;
          p.WritableState = h;
          var te = { deprecate: o("util-deprecate") }, re = o("./internal/streams/stream"), X = o("buffer").Buffer, D = l.Uint8Array || function() {
          }, me = o("./internal/streams/destroy"), Se = o("./internal/streams/state"), F = Se.getHighWaterMark, Oe = o("../errors").codes, ft = Oe.ERR_INVALID_ARG_TYPE, Re = Oe.ERR_METHOD_NOT_IMPLEMENTED, qe = Oe.ERR_MULTIPLE_CALLBACK, Ye = Oe.ERR_STREAM_CANNOT_PIPE, Ge = Oe.ERR_STREAM_DESTROYED, st = Oe.ERR_STREAM_NULL_VALUES, Zt = Oe.ERR_STREAM_WRITE_AFTER_END, Mt = Oe.ERR_UNKNOWN_ENCODING, Dt = me.errorOrDestroy;
          o("inherits")(p, re), h.prototype.getBuffer = function() {
            for (var W = this.bufferedRequest, Y = []; W; ) Y.push(W), W = W.next;
            return Y;
          }, function() {
            try {
              Object.defineProperty(h.prototype, "buffer", { get: te.deprecate(function() {
                return this.getBuffer();
              }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003") });
            } catch {
            }
          }();
          var dt;
          typeof Symbol == "function" && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] == "function" ? (dt = Function.prototype[Symbol.hasInstance], Object.defineProperty(p, Symbol.hasInstance, { value: function(W) {
            return !!dt.call(this, W) || this === p && W && W._writableState instanceof h;
          } })) : dt = function(W) {
            return W instanceof this;
          }, p.prototype.pipe = function() {
            Dt(this, new Ye());
          }, p.prototype.write = function(W, Y, fe) {
            var Ee = this._writableState, I = !1, g = !Ee.objectMode && d(W);
            return g && !X.isBuffer(W) && (W = f(W)), typeof Y == "function" && (fe = Y, Y = null), g ? Y = "buffer" : !Y && (Y = Ee.defaultEncoding), typeof fe != "function" && (fe = u), Ee.ending ? m(this, fe) : (g || v(this, Ee, W, fe)) && (Ee.pendingcb++, I = C(this, Ee, g, W, Y, fe)), I;
          }, p.prototype.cork = function() {
            this._writableState.corked++;
          }, p.prototype.uncork = function() {
            var W = this._writableState;
            W.corked && (W.corked--, !W.writing && !W.corked && !W.bufferProcessing && W.bufferedRequest && R(this, W));
          }, p.prototype.setDefaultEncoding = function(W) {
            if (typeof W == "string" && (W = W.toLowerCase()), !(-1 < ["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((W + "").toLowerCase()))) throw new Mt(W);
            return this._writableState.defaultEncoding = W, this;
          }, Object.defineProperty(p.prototype, "writableBuffer", { enumerable: !1, get: function() {
            return this._writableState && this._writableState.getBuffer();
          } }), Object.defineProperty(p.prototype, "writableHighWaterMark", { enumerable: !1, get: function() {
            return this._writableState.highWaterMark;
          } }), p.prototype._write = function(W, Y, fe) {
            fe(new Re("_write()"));
          }, p.prototype._writev = null, p.prototype.end = function(W, Y, fe) {
            var Ee = this._writableState;
            return typeof W == "function" ? (fe = W, W = null, Y = null) : typeof Y == "function" && (fe = Y, Y = null), W != null && this.write(W, Y), Ee.corked && (Ee.corked = 1, this.uncork()), Ee.ending || K(this, Ee, fe), this;
          }, Object.defineProperty(p.prototype, "writableLength", { enumerable: !1, get: function() {
            return this._writableState.length;
          } }), Object.defineProperty(p.prototype, "destroyed", { enumerable: !1, get: function() {
            return this._writableState !== void 0 && this._writableState.destroyed;
          }, set: function(W) {
            this._writableState && (this._writableState.destroyed = W);
          } }), p.prototype.destroy = me.destroy, p.prototype._undestroy = me.undestroy, p.prototype._destroy = function(W, Y) {
            Y(W);
          };
        }).call(this);
      }).call(this, o("_process"), typeof pr > "u" ? typeof self > "u" ? typeof window > "u" ? {} : window : self : pr);
    }, { "../errors": 15, "./_stream_duplex": 16, "./internal/streams/destroy": 23, "./internal/streams/state": 27, "./internal/streams/stream": 28, _process: 12, buffer: 3, inherits: 10, "util-deprecate": 32 }], 21: [function(o, s) {
      (function(a) {
        (function() {
          function l(N, R, A) {
            return R in N ? Object.defineProperty(N, R, { value: A, enumerable: !0, configurable: !0, writable: !0 }) : N[R] = A, N;
          }
          function c(N, R) {
            return { value: N, done: R };
          }
          function f(N) {
            var R = N[m];
            if (R !== null) {
              var A = N[S].read();
              A !== null && (N[k] = null, N[m] = null, N[v] = null, R(c(A, !1)));
            }
          }
          function d(N) {
            a.nextTick(f, N);
          }
          function u(N, R) {
            return function(A, O) {
              N.then(function() {
                return R[C] ? void A(c(void 0, !0)) : void R[_](A, O);
              }, O);
            };
          }
          var h, p = o("./end-of-stream"), m = Symbol("lastResolve"), v = Symbol("lastReject"), y = Symbol("error"), C = Symbol("ended"), k = Symbol("lastPromise"), _ = Symbol("handlePromise"), S = Symbol("stream"), E = Object.getPrototypeOf(function() {
          }), x = Object.setPrototypeOf((h = { get stream() {
            return this[S];
          }, next: function() {
            var N = this, R = this[y];
            if (R !== null) return Promise.reject(R);
            if (this[C]) return Promise.resolve(c(void 0, !0));
            if (this[S].destroyed) return new Promise(function(U, K) {
              a.nextTick(function() {
                N[y] ? K(N[y]) : U(c(void 0, !0));
              });
            });
            var A, O = this[k];
            if (O) A = new Promise(u(O, this));
            else {
              var B = this[S].read();
              if (B !== null) return Promise.resolve(c(B, !1));
              A = new Promise(this[_]);
            }
            return this[k] = A, A;
          } }, l(h, Symbol.asyncIterator, function() {
            return this;
          }), l(h, "return", function() {
            var N = this;
            return new Promise(function(R, A) {
              N[S].destroy(null, function(O) {
                return O ? void A(O) : void R(c(void 0, !0));
              });
            });
          }), h), E);
          s.exports = function(N) {
            var R, A = Object.create(x, (R = {}, l(R, S, { value: N, writable: !0 }), l(R, m, { value: null, writable: !0 }), l(R, v, { value: null, writable: !0 }), l(R, y, { value: null, writable: !0 }), l(R, C, { value: N._readableState.endEmitted, writable: !0 }), l(R, _, { value: function(O, B) {
              var U = A[S].read();
              U ? (A[k] = null, A[m] = null, A[v] = null, O(c(U, !1))) : (A[m] = O, A[v] = B);
            }, writable: !0 }), R));
            return A[k] = null, p(N, function(O) {
              if (O && O.code !== "ERR_STREAM_PREMATURE_CLOSE") {
                var B = A[v];
                return B !== null && (A[k] = null, A[m] = null, A[v] = null, B(O)), void (A[y] = O);
              }
              var U = A[m];
              U !== null && (A[k] = null, A[m] = null, A[v] = null, U(c(void 0, !0))), A[C] = !0;
            }), N.on("readable", d.bind(null, A)), A;
          };
        }).call(this);
      }).call(this, o("_process"));
    }, { "./end-of-stream": 24, _process: 12 }], 22: [function(o, s) {
      function a(k, _) {
        var S = Object.keys(k);
        if (Object.getOwnPropertySymbols) {
          var E = Object.getOwnPropertySymbols(k);
          _ && (E = E.filter(function(x) {
            return Object.getOwnPropertyDescriptor(k, x).enumerable;
          })), S.push.apply(S, E);
        }
        return S;
      }
      function l(k) {
        for (var _, S = 1; S < arguments.length; S++) _ = arguments[S] == null ? {} : arguments[S], S % 2 ? a(Object(_), !0).forEach(function(E) {
          c(k, E, _[E]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(k, Object.getOwnPropertyDescriptors(_)) : a(Object(_)).forEach(function(E) {
          Object.defineProperty(k, E, Object.getOwnPropertyDescriptor(_, E));
        });
        return k;
      }
      function c(k, _, S) {
        return _ in k ? Object.defineProperty(k, _, { value: S, enumerable: !0, configurable: !0, writable: !0 }) : k[_] = S, k;
      }
      function f(k, _) {
        if (!(k instanceof _)) throw new TypeError("Cannot call a class as a function");
      }
      function d(k, _) {
        for (var S, E = 0; E < _.length; E++) S = _[E], S.enumerable = S.enumerable || !1, S.configurable = !0, "value" in S && (S.writable = !0), Object.defineProperty(k, S.key, S);
      }
      function u(k, _, S) {
        return _ && d(k.prototype, _), k;
      }
      function h(k, _, S) {
        m.prototype.copy.call(k, _, S);
      }
      var p = o("buffer"), m = p.Buffer, v = o("util"), y = v.inspect, C = y && y.custom || "inspect";
      s.exports = function() {
        function k() {
          f(this, k), this.head = null, this.tail = null, this.length = 0;
        }
        return u(k, [{ key: "push", value: function(_) {
          var S = { data: _, next: null };
          0 < this.length ? this.tail.next = S : this.head = S, this.tail = S, ++this.length;
        } }, { key: "unshift", value: function(_) {
          var S = { data: _, next: this.head };
          this.length === 0 && (this.tail = S), this.head = S, ++this.length;
        } }, { key: "shift", value: function() {
          if (this.length !== 0) {
            var _ = this.head.data;
            return this.head = this.length === 1 ? this.tail = null : this.head.next, --this.length, _;
          }
        } }, { key: "clear", value: function() {
          this.head = this.tail = null, this.length = 0;
        } }, { key: "join", value: function(_) {
          if (this.length === 0) return "";
          for (var S = this.head, E = "" + S.data; S = S.next; ) E += _ + S.data;
          return E;
        } }, { key: "concat", value: function(_) {
          if (this.length === 0) return m.alloc(0);
          for (var S = m.allocUnsafe(_ >>> 0), E = this.head, x = 0; E; ) h(E.data, S, x), x += E.data.length, E = E.next;
          return S;
        } }, { key: "consume", value: function(_, S) {
          var E;
          return _ < this.head.data.length ? (E = this.head.data.slice(0, _), this.head.data = this.head.data.slice(_)) : _ === this.head.data.length ? E = this.shift() : E = S ? this._getString(_) : this._getBuffer(_), E;
        } }, { key: "first", value: function() {
          return this.head.data;
        } }, { key: "_getString", value: function(_) {
          var S = this.head, E = 1, x = S.data;
          for (_ -= x.length; S = S.next; ) {
            var N = S.data, R = _ > N.length ? N.length : _;
            if (x += R === N.length ? N : N.slice(0, _), _ -= R, _ === 0) {
              R === N.length ? (++E, this.head = S.next ? S.next : this.tail = null) : (this.head = S, S.data = N.slice(R));
              break;
            }
            ++E;
          }
          return this.length -= E, x;
        } }, { key: "_getBuffer", value: function(_) {
          var S = m.allocUnsafe(_), E = this.head, x = 1;
          for (E.data.copy(S), _ -= E.data.length; E = E.next; ) {
            var N = E.data, R = _ > N.length ? N.length : _;
            if (N.copy(S, S.length - _, 0, R), _ -= R, _ === 0) {
              R === N.length ? (++x, this.head = E.next ? E.next : this.tail = null) : (this.head = E, E.data = N.slice(R));
              break;
            }
            ++x;
          }
          return this.length -= x, S;
        } }, { key: C, value: function(_, S) {
          return y(this, l({}, S, { depth: 0, customInspect: !1 }));
        } }]), k;
      }();
    }, { buffer: 3, util: 2 }], 23: [function(o, s) {
      (function(a) {
        (function() {
          function l(d, u) {
            f(d, u), c(d);
          }
          function c(d) {
            d._writableState && !d._writableState.emitClose || d._readableState && !d._readableState.emitClose || d.emit("close");
          }
          function f(d, u) {
            d.emit("error", u);
          }
          s.exports = { destroy: function(d, u) {
            var h = this, p = this._readableState && this._readableState.destroyed, m = this._writableState && this._writableState.destroyed;
            return p || m ? (u ? u(d) : d && (this._writableState ? !this._writableState.errorEmitted && (this._writableState.errorEmitted = !0, a.nextTick(f, this, d)) : a.nextTick(f, this, d)), this) : (this._readableState && (this._readableState.destroyed = !0), this._writableState && (this._writableState.destroyed = !0), this._destroy(d || null, function(v) {
              !u && v ? h._writableState ? h._writableState.errorEmitted ? a.nextTick(c, h) : (h._writableState.errorEmitted = !0, a.nextTick(l, h, v)) : a.nextTick(l, h, v) : u ? (a.nextTick(c, h), u(v)) : a.nextTick(c, h);
            }), this);
          }, undestroy: function() {
            this._readableState && (this._readableState.destroyed = !1, this._readableState.reading = !1, this._readableState.ended = !1, this._readableState.endEmitted = !1), this._writableState && (this._writableState.destroyed = !1, this._writableState.ended = !1, this._writableState.ending = !1, this._writableState.finalCalled = !1, this._writableState.prefinished = !1, this._writableState.finished = !1, this._writableState.errorEmitted = !1);
          }, errorOrDestroy: function(d, u) {
            var h = d._readableState, p = d._writableState;
            h && h.autoDestroy || p && p.autoDestroy ? d.destroy(u) : d.emit("error", u);
          } };
        }).call(this);
      }).call(this, o("_process"));
    }, { _process: 12 }], 24: [function(o, s) {
      function a(u) {
        var h = !1;
        return function() {
          if (!h) {
            h = !0;
            for (var p = arguments.length, m = Array(p), v = 0; v < p; v++) m[v] = arguments[v];
            u.apply(this, m);
          }
        };
      }
      function l() {
      }
      function c(u) {
        return u.setHeader && typeof u.abort == "function";
      }
      function f(u, h, p) {
        if (typeof h == "function") return f(u, null, h);
        h || (h = {}), p = a(p || l);
        var m = h.readable || h.readable !== !1 && u.readable, v = h.writable || h.writable !== !1 && u.writable, y = function() {
          u.writable || k();
        }, C = u._writableState && u._writableState.finished, k = function() {
          v = !1, C = !0, m || p.call(u);
        }, _ = u._readableState && u._readableState.endEmitted, S = function() {
          m = !1, _ = !0, v || p.call(u);
        }, E = function(R) {
          p.call(u, R);
        }, x = function() {
          var R;
          return m && !_ ? (u._readableState && u._readableState.ended || (R = new d()), p.call(u, R)) : v && !C ? (u._writableState && u._writableState.ended || (R = new d()), p.call(u, R)) : void 0;
        }, N = function() {
          u.req.on("finish", k);
        };
        return c(u) ? (u.on("complete", k), u.on("abort", x), u.req ? N() : u.on("request", N)) : v && !u._writableState && (u.on("end", y), u.on("close", y)), u.on("end", S), u.on("finish", k), h.error !== !1 && u.on("error", E), u.on("close", x), function() {
          u.removeListener("complete", k), u.removeListener("abort", x), u.removeListener("request", N), u.req && u.req.removeListener("finish", k), u.removeListener("end", y), u.removeListener("close", y), u.removeListener("finish", k), u.removeListener("end", S), u.removeListener("error", E), u.removeListener("close", x);
        };
      }
      var d = o("../../../errors").codes.ERR_STREAM_PREMATURE_CLOSE;
      s.exports = f;
    }, { "../../../errors": 15 }], 25: [function(o, s) {
      s.exports = function() {
        throw new Error("Readable.from is not available in the browser");
      };
    }, {}], 26: [function(o, s) {
      function a(C) {
        var k = !1;
        return function() {
          k || (k = !0, C.apply(void 0, arguments));
        };
      }
      function l(C) {
        if (C) throw C;
      }
      function c(C) {
        return C.setHeader && typeof C.abort == "function";
      }
      function f(C, k, _, S) {
        S = a(S);
        var E = !1;
        C.on("close", function() {
          E = !0;
        }), p === void 0 && (p = o("./end-of-stream")), p(C, { readable: k, writable: _ }, function(N) {
          return N ? S(N) : (E = !0, void S());
        });
        var x = !1;
        return function(N) {
          if (!E) return x ? void 0 : (x = !0, c(C) ? C.abort() : typeof C.destroy == "function" ? C.destroy() : void S(N || new y("pipe")));
        };
      }
      function d(C) {
        C();
      }
      function u(C, k) {
        return C.pipe(k);
      }
      function h(C) {
        return C.length && typeof C[C.length - 1] == "function" ? C.pop() : l;
      }
      var p, m = o("../../../errors").codes, v = m.ERR_MISSING_ARGS, y = m.ERR_STREAM_DESTROYED;
      s.exports = function() {
        for (var C = arguments.length, k = Array(C), _ = 0; _ < C; _++) k[_] = arguments[_];
        var S = h(k);
        if (Array.isArray(k[0]) && (k = k[0]), 2 > k.length) throw new v("streams");
        var E, x = k.map(function(N, R) {
          var A = R < k.length - 1;
          return f(N, A, 0 < R, function(O) {
            E || (E = O), O && x.forEach(d), A || (x.forEach(d), S(E));
          });
        });
        return k.reduce(u);
      };
    }, { "../../../errors": 15, "./end-of-stream": 24 }], 27: [function(o, s) {
      function a(c, f, d) {
        return c.highWaterMark == null ? f ? c[d] : null : c.highWaterMark;
      }
      var l = o("../../../errors").codes.ERR_INVALID_OPT_VALUE;
      s.exports = { getHighWaterMark: function(c, f, d, u) {
        var h = a(f, u, d);
        if (h != null) {
          if (!(isFinite(h) && n(h) === h) || 0 > h) {
            var p = u ? d : "highWaterMark";
            throw new l(p, h);
          }
          return n(h);
        }
        return c.objectMode ? 16 : 16384;
      } };
    }, { "../../../errors": 15 }], 28: [function(o, s) {
      s.exports = o("events").EventEmitter;
    }, { events: 7 }], 29: [function(o, s, a) {
      a = s.exports = o("./lib/_stream_readable.js"), a.Stream = a, a.Readable = a, a.Writable = o("./lib/_stream_writable.js"), a.Duplex = o("./lib/_stream_duplex.js"), a.Transform = o("./lib/_stream_transform.js"), a.PassThrough = o("./lib/_stream_passthrough.js"), a.finished = o("./lib/internal/streams/end-of-stream.js"), a.pipeline = o("./lib/internal/streams/pipeline.js");
    }, { "./lib/_stream_duplex.js": 16, "./lib/_stream_passthrough.js": 17, "./lib/_stream_readable.js": 18, "./lib/_stream_transform.js": 19, "./lib/_stream_writable.js": 20, "./lib/internal/streams/end-of-stream.js": 24, "./lib/internal/streams/pipeline.js": 26 }], 30: [function(o, s, a) {
      function l(u, h) {
        for (var p in u) h[p] = u[p];
      }
      function c(u, h, p) {
        return d(u, h, p);
      }
      /*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
      var f = o("buffer"), d = f.Buffer;
      d.from && d.alloc && d.allocUnsafe && d.allocUnsafeSlow ? s.exports = f : (l(f, a), a.Buffer = c), c.prototype = Object.create(d.prototype), l(d, c), c.from = function(u, h, p) {
        if (typeof u == "number") throw new TypeError("Argument must not be a number");
        return d(u, h, p);
      }, c.alloc = function(u, h, p) {
        if (typeof u != "number") throw new TypeError("Argument must be a number");
        var m = d(u);
        return h === void 0 ? m.fill(0) : typeof p == "string" ? m.fill(h, p) : m.fill(h), m;
      }, c.allocUnsafe = function(u) {
        if (typeof u != "number") throw new TypeError("Argument must be a number");
        return d(u);
      }, c.allocUnsafeSlow = function(u) {
        if (typeof u != "number") throw new TypeError("Argument must be a number");
        return f.SlowBuffer(u);
      };
    }, { buffer: 3 }], 31: [function(o, s, a) {
      function l(x) {
        if (!x) return "utf8";
        for (var N; ; ) switch (x) {
          case "utf8":
          case "utf-8":
            return "utf8";
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return "utf16le";
          case "latin1":
          case "binary":
            return "latin1";
          case "base64":
          case "ascii":
          case "hex":
            return x;
          default:
            if (N) return;
            x = ("" + x).toLowerCase(), N = !0;
        }
      }
      function c(x) {
        var N = l(x);
        if (typeof N != "string" && (S.isEncoding === E || !E(x))) throw new Error("Unknown encoding: " + x);
        return N || x;
      }
      function f(x) {
        this.encoding = c(x);
        var N;
        switch (this.encoding) {
          case "utf16le":
            this.text = m, this.end = v, N = 4;
            break;
          case "utf8":
            this.fillLast = p, N = 4;
            break;
          case "base64":
            this.text = y, this.end = C, N = 3;
            break;
          default:
            return this.write = k, void (this.end = _);
        }
        this.lastNeed = 0, this.lastTotal = 0, this.lastChar = S.allocUnsafe(N);
      }
      function d(x) {
        return 127 >= x ? 0 : x >> 5 == 6 ? 2 : x >> 4 == 14 ? 3 : x >> 3 == 30 ? 4 : x >> 6 == 2 ? -1 : -2;
      }
      function u(x, N, R) {
        var A = N.length - 1;
        if (A < R) return 0;
        var O = d(N[A]);
        return 0 <= O ? (0 < O && (x.lastNeed = O - 1), O) : --A < R || O === -2 ? 0 : (O = d(N[A]), 0 <= O ? (0 < O && (x.lastNeed = O - 2), O) : --A < R || O === -2 ? 0 : (O = d(N[A]), 0 <= O ? (0 < O && (O === 2 ? O = 0 : x.lastNeed = O - 3), O) : 0));
      }
      function h(x, N) {
        if ((192 & N[0]) != 128) return x.lastNeed = 0, "�";
        if (1 < x.lastNeed && 1 < N.length) {
          if ((192 & N[1]) != 128) return x.lastNeed = 1, "�";
          if (2 < x.lastNeed && 2 < N.length && (192 & N[2]) != 128) return x.lastNeed = 2, "�";
        }
      }
      function p(x) {
        var N = this.lastTotal - this.lastNeed, R = h(this, x);
        return R === void 0 ? this.lastNeed <= x.length ? (x.copy(this.lastChar, N, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal)) : (x.copy(this.lastChar, N, 0, x.length), void (this.lastNeed -= x.length)) : R;
      }
      function m(x, N) {
        if ((x.length - N) % 2 == 0) {
          var R = x.toString("utf16le", N);
          if (R) {
            var A = R.charCodeAt(R.length - 1);
            if (55296 <= A && 56319 >= A) return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = x[x.length - 2], this.lastChar[1] = x[x.length - 1], R.slice(0, -1);
          }
          return R;
        }
        return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = x[x.length - 1], x.toString("utf16le", N, x.length - 1);
      }
      function v(x) {
        var N = x && x.length ? this.write(x) : "";
        if (this.lastNeed) {
          var R = this.lastTotal - this.lastNeed;
          return N + this.lastChar.toString("utf16le", 0, R);
        }
        return N;
      }
      function y(x, N) {
        var R = (x.length - N) % 3;
        return R == 0 ? x.toString("base64", N) : (this.lastNeed = 3 - R, this.lastTotal = 3, R == 1 ? this.lastChar[0] = x[x.length - 1] : (this.lastChar[0] = x[x.length - 2], this.lastChar[1] = x[x.length - 1]), x.toString("base64", N, x.length - R));
      }
      function C(x) {
        var N = x && x.length ? this.write(x) : "";
        return this.lastNeed ? N + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : N;
      }
      function k(x) {
        return x.toString(this.encoding);
      }
      function _(x) {
        return x && x.length ? this.write(x) : "";
      }
      var S = o("safe-buffer").Buffer, E = S.isEncoding || function(x) {
        switch (x = "" + x, x && x.toLowerCase()) {
          case "hex":
          case "utf8":
          case "utf-8":
          case "ascii":
          case "binary":
          case "base64":
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
          case "raw":
            return !0;
          default:
            return !1;
        }
      };
      a.StringDecoder = f, f.prototype.write = function(x) {
        if (x.length === 0) return "";
        var N, R;
        if (this.lastNeed) {
          if (N = this.fillLast(x), N === void 0) return "";
          R = this.lastNeed, this.lastNeed = 0;
        } else R = 0;
        return R < x.length ? N ? N + this.text(x, R) : this.text(x, R) : N || "";
      }, f.prototype.end = function(x) {
        var N = x && x.length ? this.write(x) : "";
        return this.lastNeed ? N + "�" : N;
      }, f.prototype.text = function(x, N) {
        var R = u(this, x, N);
        if (!this.lastNeed) return x.toString("utf8", N);
        this.lastTotal = R;
        var A = x.length - (R - this.lastNeed);
        return x.copy(this.lastChar, 0, A), x.toString("utf8", N, A);
      }, f.prototype.fillLast = function(x) {
        return this.lastNeed <= x.length ? (x.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal)) : (x.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, x.length), void (this.lastNeed -= x.length));
      };
    }, { "safe-buffer": 30 }], 32: [function(o, s) {
      (function(a) {
        (function() {
          function l(c) {
            try {
              if (!a.localStorage) return !1;
            } catch {
              return !1;
            }
            var f = a.localStorage[c];
            return f != null && (f + "").toLowerCase() === "true";
          }
          s.exports = function(c, f) {
            function d() {
              if (!u) {
                if (l("throwDeprecation")) throw new Error(f);
                l("traceDeprecation") ? console.trace(f) : console.warn(f), u = !0;
              }
              return c.apply(this, arguments);
            }
            if (l("noDeprecation")) return c;
            var u = !1;
            return d;
          };
        }).call(this);
      }).call(this, typeof pr > "u" ? typeof self > "u" ? typeof window > "u" ? {} : window : self : pr);
    }, {}], "/": [function(o, s) {
      function a(C) {
        return C.replace(/a=ice-options:trickle\s\n/g, "");
      }
      function l(C) {
        console.warn(C);
      }
      /*! simple-peer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
      const c = o("debug")("simple-peer"), f = o("get-browser-rtc"), d = o("randombytes"), u = o("readable-stream"), h = o("queue-microtask"), p = o("err-code"), { Buffer: m } = o("buffer"), v = 65536;
      class y extends u.Duplex {
        constructor(k) {
          if (k = Object.assign({ allowHalfOpen: !1 }, k), super(k), this._id = d(4).toString("hex").slice(0, 7), this._debug("new peer %o", k), this.channelName = k.initiator ? k.channelName || d(20).toString("hex") : null, this.initiator = k.initiator || !1, this.channelConfig = k.channelConfig || y.channelConfig, this.channelNegotiated = this.channelConfig.negotiated, this.config = Object.assign({}, y.config, k.config), this.offerOptions = k.offerOptions || {}, this.answerOptions = k.answerOptions || {}, this.sdpTransform = k.sdpTransform || ((_) => _), this.streams = k.streams || (k.stream ? [k.stream] : []), this.trickle = k.trickle === void 0 || k.trickle, this.allowHalfTrickle = k.allowHalfTrickle !== void 0 && k.allowHalfTrickle, this.iceCompleteTimeout = k.iceCompleteTimeout || 5e3, this.destroyed = !1, this.destroying = !1, this._connected = !1, this.remoteAddress = void 0, this.remoteFamily = void 0, this.remotePort = void 0, this.localAddress = void 0, this.localFamily = void 0, this.localPort = void 0, this._wrtc = k.wrtc && typeof k.wrtc == "object" ? k.wrtc : f(), !this._wrtc) throw p(typeof window > "u" ? new Error("No WebRTC support: Specify `opts.wrtc` option in this environment") : new Error("No WebRTC support: Not a supported browser"), "ERR_WEBRTC_SUPPORT");
          this._pcReady = !1, this._channelReady = !1, this._iceComplete = !1, this._iceCompleteTimer = null, this._channel = null, this._pendingCandidates = [], this._isNegotiating = !1, this._firstNegotiation = !0, this._batchedNegotiation = !1, this._queuedNegotiation = !1, this._sendersAwaitingStable = [], this._senderMap = /* @__PURE__ */ new Map(), this._closingInterval = null, this._remoteTracks = [], this._remoteStreams = [], this._chunk = null, this._cb = null, this._interval = null;
          try {
            this._pc = new this._wrtc.RTCPeerConnection(this.config);
          } catch (_) {
            return void this.destroy(p(_, "ERR_PC_CONSTRUCTOR"));
          }
          this._isReactNativeWebrtc = typeof this._pc._peerConnectionId == "number", this._pc.oniceconnectionstatechange = () => {
            this._onIceStateChange();
          }, this._pc.onicegatheringstatechange = () => {
            this._onIceStateChange();
          }, this._pc.onconnectionstatechange = () => {
            this._onConnectionStateChange();
          }, this._pc.onsignalingstatechange = () => {
            this._onSignalingStateChange();
          }, this._pc.onicecandidate = (_) => {
            this._onIceCandidate(_);
          }, typeof this._pc.peerIdentity == "object" && this._pc.peerIdentity.catch((_) => {
            this.destroy(p(_, "ERR_PC_PEER_IDENTITY"));
          }), this.initiator || this.channelNegotiated ? this._setupData({ channel: this._pc.createDataChannel(this.channelName, this.channelConfig) }) : this._pc.ondatachannel = (_) => {
            this._setupData(_);
          }, this.streams && this.streams.forEach((_) => {
            this.addStream(_);
          }), this._pc.ontrack = (_) => {
            this._onTrack(_);
          }, this._debug("initial negotiation"), this._needsNegotiation(), this._onFinishBound = () => {
            this._onFinish();
          }, this.once("finish", this._onFinishBound);
        }
        get bufferSize() {
          return this._channel && this._channel.bufferedAmount || 0;
        }
        get connected() {
          return this._connected && this._channel.readyState === "open";
        }
        address() {
          return { port: this.localPort, family: this.localFamily, address: this.localAddress };
        }
        signal(k) {
          if (!this.destroying) {
            if (this.destroyed) throw p(new Error("cannot signal after peer is destroyed"), "ERR_DESTROYED");
            if (typeof k == "string") try {
              k = JSON.parse(k);
            } catch {
              k = {};
            }
            this._debug("signal()"), k.renegotiate && this.initiator && (this._debug("got request to renegotiate"), this._needsNegotiation()), k.transceiverRequest && this.initiator && (this._debug("got request for transceiver"), this.addTransceiver(k.transceiverRequest.kind, k.transceiverRequest.init)), k.candidate && (this._pc.remoteDescription && this._pc.remoteDescription.type ? this._addIceCandidate(k.candidate) : this._pendingCandidates.push(k.candidate)), k.sdp && this._pc.setRemoteDescription(new this._wrtc.RTCSessionDescription(k)).then(() => {
              this.destroyed || (this._pendingCandidates.forEach((_) => {
                this._addIceCandidate(_);
              }), this._pendingCandidates = [], this._pc.remoteDescription.type === "offer" && this._createAnswer());
            }).catch((_) => {
              this.destroy(p(_, "ERR_SET_REMOTE_DESCRIPTION"));
            }), k.sdp || k.candidate || k.renegotiate || k.transceiverRequest || this.destroy(p(new Error("signal() called with invalid signal data"), "ERR_SIGNALING"));
          }
        }
        _addIceCandidate(k) {
          const _ = new this._wrtc.RTCIceCandidate(k);
          this._pc.addIceCandidate(_).catch((S) => {
            !_.address || _.address.endsWith(".local") ? l("Ignoring unsupported ICE candidate.") : this.destroy(p(S, "ERR_ADD_ICE_CANDIDATE"));
          });
        }
        send(k) {
          if (!this.destroying) {
            if (this.destroyed) throw p(new Error("cannot send after peer is destroyed"), "ERR_DESTROYED");
            this._channel.send(k);
          }
        }
        addTransceiver(k, _) {
          if (!this.destroying) {
            if (this.destroyed) throw p(new Error("cannot addTransceiver after peer is destroyed"), "ERR_DESTROYED");
            if (this._debug("addTransceiver()"), this.initiator) try {
              this._pc.addTransceiver(k, _), this._needsNegotiation();
            } catch (S) {
              this.destroy(p(S, "ERR_ADD_TRANSCEIVER"));
            }
            else this.emit("signal", { type: "transceiverRequest", transceiverRequest: { kind: k, init: _ } });
          }
        }
        addStream(k) {
          if (!this.destroying) {
            if (this.destroyed) throw p(new Error("cannot addStream after peer is destroyed"), "ERR_DESTROYED");
            this._debug("addStream()"), k.getTracks().forEach((_) => {
              this.addTrack(_, k);
            });
          }
        }
        addTrack(k, _) {
          if (this.destroying) return;
          if (this.destroyed) throw p(new Error("cannot addTrack after peer is destroyed"), "ERR_DESTROYED");
          this._debug("addTrack()");
          const S = this._senderMap.get(k) || /* @__PURE__ */ new Map();
          let E = S.get(_);
          if (!E) E = this._pc.addTrack(k, _), S.set(_, E), this._senderMap.set(k, S), this._needsNegotiation();
          else throw E.removed ? p(new Error("Track has been removed. You should enable/disable tracks that you want to re-add."), "ERR_SENDER_REMOVED") : p(new Error("Track has already been added to that stream."), "ERR_SENDER_ALREADY_ADDED");
        }
        replaceTrack(k, _, S) {
          if (this.destroying) return;
          if (this.destroyed) throw p(new Error("cannot replaceTrack after peer is destroyed"), "ERR_DESTROYED");
          this._debug("replaceTrack()");
          const E = this._senderMap.get(k), x = E ? E.get(S) : null;
          if (!x) throw p(new Error("Cannot replace track that was never added."), "ERR_TRACK_NOT_ADDED");
          _ && this._senderMap.set(_, E), x.replaceTrack == null ? this.destroy(p(new Error("replaceTrack is not supported in this browser"), "ERR_UNSUPPORTED_REPLACETRACK")) : x.replaceTrack(_);
        }
        removeTrack(k, _) {
          if (this.destroying) return;
          if (this.destroyed) throw p(new Error("cannot removeTrack after peer is destroyed"), "ERR_DESTROYED");
          this._debug("removeSender()");
          const S = this._senderMap.get(k), E = S ? S.get(_) : null;
          if (!E) throw p(new Error("Cannot remove track that was never added."), "ERR_TRACK_NOT_ADDED");
          try {
            E.removed = !0, this._pc.removeTrack(E);
          } catch (x) {
            x.name === "NS_ERROR_UNEXPECTED" ? this._sendersAwaitingStable.push(E) : this.destroy(p(x, "ERR_REMOVE_TRACK"));
          }
          this._needsNegotiation();
        }
        removeStream(k) {
          if (!this.destroying) {
            if (this.destroyed) throw p(new Error("cannot removeStream after peer is destroyed"), "ERR_DESTROYED");
            this._debug("removeSenders()"), k.getTracks().forEach((_) => {
              this.removeTrack(_, k);
            });
          }
        }
        _needsNegotiation() {
          this._debug("_needsNegotiation"), this._batchedNegotiation || (this._batchedNegotiation = !0, h(() => {
            this._batchedNegotiation = !1, this.initiator || !this._firstNegotiation ? (this._debug("starting batched negotiation"), this.negotiate()) : this._debug("non-initiator initial negotiation request discarded"), this._firstNegotiation = !1;
          }));
        }
        negotiate() {
          if (!this.destroying) {
            if (this.destroyed) throw p(new Error("cannot negotiate after peer is destroyed"), "ERR_DESTROYED");
            this.initiator ? this._isNegotiating ? (this._queuedNegotiation = !0, this._debug("already negotiating, queueing")) : (this._debug("start negotiation"), setTimeout(() => {
              this._createOffer();
            }, 0)) : this._isNegotiating ? (this._queuedNegotiation = !0, this._debug("already negotiating, queueing")) : (this._debug("requesting negotiation from initiator"), this.emit("signal", { type: "renegotiate", renegotiate: !0 })), this._isNegotiating = !0;
          }
        }
        destroy(k) {
          this._destroy(k, () => {
          });
        }
        _destroy(k, _) {
          this.destroyed || this.destroying || (this.destroying = !0, this._debug("destroying (error: %s)", k && (k.message || k)), h(() => {
            if (this.destroyed = !0, this.destroying = !1, this._debug("destroy (error: %s)", k && (k.message || k)), this.readable = this.writable = !1, this._readableState.ended || this.push(null), this._writableState.finished || this.end(), this._connected = !1, this._pcReady = !1, this._channelReady = !1, this._remoteTracks = null, this._remoteStreams = null, this._senderMap = null, clearInterval(this._closingInterval), this._closingInterval = null, clearInterval(this._interval), this._interval = null, this._chunk = null, this._cb = null, this._onFinishBound && this.removeListener("finish", this._onFinishBound), this._onFinishBound = null, this._channel) {
              try {
                this._channel.close();
              } catch {
              }
              this._channel.onmessage = null, this._channel.onopen = null, this._channel.onclose = null, this._channel.onerror = null;
            }
            if (this._pc) {
              try {
                this._pc.close();
              } catch {
              }
              this._pc.oniceconnectionstatechange = null, this._pc.onicegatheringstatechange = null, this._pc.onsignalingstatechange = null, this._pc.onicecandidate = null, this._pc.ontrack = null, this._pc.ondatachannel = null;
            }
            this._pc = null, this._channel = null, k && this.emit("error", k), this.emit("close"), _();
          }));
        }
        _setupData(k) {
          if (!k.channel) return this.destroy(p(new Error("Data channel event is missing `channel` property"), "ERR_DATA_CHANNEL"));
          this._channel = k.channel, this._channel.binaryType = "arraybuffer", typeof this._channel.bufferedAmountLowThreshold == "number" && (this._channel.bufferedAmountLowThreshold = v), this.channelName = this._channel.label, this._channel.onmessage = (S) => {
            this._onChannelMessage(S);
          }, this._channel.onbufferedamountlow = () => {
            this._onChannelBufferedAmountLow();
          }, this._channel.onopen = () => {
            this._onChannelOpen();
          }, this._channel.onclose = () => {
            this._onChannelClose();
          }, this._channel.onerror = (S) => {
            const E = S.error instanceof Error ? S.error : new Error(`Datachannel error: ${S.message} ${S.filename}:${S.lineno}:${S.colno}`);
            this.destroy(p(E, "ERR_DATA_CHANNEL"));
          };
          let _ = !1;
          this._closingInterval = setInterval(() => {
            this._channel && this._channel.readyState === "closing" ? (_ && this._onChannelClose(), _ = !0) : _ = !1;
          }, 5e3);
        }
        _read() {
        }
        _write(k, _, S) {
          if (this.destroyed) return S(p(new Error("cannot write after peer is destroyed"), "ERR_DATA_CHANNEL"));
          if (this._connected) {
            try {
              this.send(k);
            } catch (E) {
              return this.destroy(p(E, "ERR_DATA_CHANNEL"));
            }
            this._channel.bufferedAmount > v ? (this._debug("start backpressure: bufferedAmount %d", this._channel.bufferedAmount), this._cb = S) : S(null);
          } else this._debug("write before connect"), this._chunk = k, this._cb = S;
        }
        _onFinish() {
          if (!this.destroyed) {
            const k = () => {
              setTimeout(() => this.destroy(), 1e3);
            };
            this._connected ? k() : this.once("connect", k);
          }
        }
        _startIceCompleteTimeout() {
          this.destroyed || this._iceCompleteTimer || (this._debug("started iceComplete timeout"), this._iceCompleteTimer = setTimeout(() => {
            this._iceComplete || (this._iceComplete = !0, this._debug("iceComplete timeout completed"), this.emit("iceTimeout"), this.emit("_iceComplete"));
          }, this.iceCompleteTimeout));
        }
        _createOffer() {
          this.destroyed || this._pc.createOffer(this.offerOptions).then((k) => {
            if (this.destroyed) return;
            this.trickle || this.allowHalfTrickle || (k.sdp = a(k.sdp)), k.sdp = this.sdpTransform(k.sdp);
            const _ = () => {
              if (!this.destroyed) {
                const S = this._pc.localDescription || k;
                this._debug("signal"), this.emit("signal", { type: S.type, sdp: S.sdp });
              }
            };
            this._pc.setLocalDescription(k).then(() => {
              this._debug("createOffer success"), this.destroyed || (this.trickle || this._iceComplete ? _() : this.once("_iceComplete", _));
            }).catch((S) => {
              this.destroy(p(S, "ERR_SET_LOCAL_DESCRIPTION"));
            });
          }).catch((k) => {
            this.destroy(p(k, "ERR_CREATE_OFFER"));
          });
        }
        _requestMissingTransceivers() {
          this._pc.getTransceivers && this._pc.getTransceivers().forEach((k) => {
            k.mid || !k.sender.track || k.requested || (k.requested = !0, this.addTransceiver(k.sender.track.kind));
          });
        }
        _createAnswer() {
          this.destroyed || this._pc.createAnswer(this.answerOptions).then((k) => {
            if (this.destroyed) return;
            this.trickle || this.allowHalfTrickle || (k.sdp = a(k.sdp)), k.sdp = this.sdpTransform(k.sdp);
            const _ = () => {
              if (!this.destroyed) {
                const S = this._pc.localDescription || k;
                this._debug("signal"), this.emit("signal", { type: S.type, sdp: S.sdp }), this.initiator || this._requestMissingTransceivers();
              }
            };
            this._pc.setLocalDescription(k).then(() => {
              this.destroyed || (this.trickle || this._iceComplete ? _() : this.once("_iceComplete", _));
            }).catch((S) => {
              this.destroy(p(S, "ERR_SET_LOCAL_DESCRIPTION"));
            });
          }).catch((k) => {
            this.destroy(p(k, "ERR_CREATE_ANSWER"));
          });
        }
        _onConnectionStateChange() {
          this.destroyed || this._pc.connectionState === "failed" && this.destroy(p(new Error("Connection failed."), "ERR_CONNECTION_FAILURE"));
        }
        _onIceStateChange() {
          if (this.destroyed) return;
          const k = this._pc.iceConnectionState, _ = this._pc.iceGatheringState;
          this._debug("iceStateChange (connection: %s) (gathering: %s)", k, _), this.emit("iceStateChange", k, _), (k === "connected" || k === "completed") && (this._pcReady = !0, this._maybeReady()), k === "failed" && this.destroy(p(new Error("Ice connection failed."), "ERR_ICE_CONNECTION_FAILURE")), k === "closed" && this.destroy(p(new Error("Ice connection closed."), "ERR_ICE_CONNECTION_CLOSED"));
        }
        getStats(k) {
          const _ = (S) => (Object.prototype.toString.call(S.values) === "[object Array]" && S.values.forEach((E) => {
            Object.assign(S, E);
          }), S);
          this._pc.getStats.length === 0 || this._isReactNativeWebrtc ? this._pc.getStats().then((S) => {
            const E = [];
            S.forEach((x) => {
              E.push(_(x));
            }), k(null, E);
          }, (S) => k(S)) : 0 < this._pc.getStats.length ? this._pc.getStats((S) => {
            if (this.destroyed) return;
            const E = [];
            S.result().forEach((x) => {
              const N = {};
              x.names().forEach((R) => {
                N[R] = x.stat(R);
              }), N.id = x.id, N.type = x.type, N.timestamp = x.timestamp, E.push(_(N));
            }), k(null, E);
          }, (S) => k(S)) : k(null, []);
        }
        _maybeReady() {
          if (this._debug("maybeReady pc %s channel %s", this._pcReady, this._channelReady), this._connected || this._connecting || !this._pcReady || !this._channelReady) return;
          this._connecting = !0;
          const k = () => {
            this.destroyed || this.getStats((_, S) => {
              if (this.destroyed) return;
              _ && (S = []);
              const E = {}, x = {}, N = {};
              let R = !1;
              S.forEach((O) => {
                (O.type === "remotecandidate" || O.type === "remote-candidate") && (E[O.id] = O), (O.type === "localcandidate" || O.type === "local-candidate") && (x[O.id] = O), (O.type === "candidatepair" || O.type === "candidate-pair") && (N[O.id] = O);
              });
              const A = (O) => {
                R = !0;
                let B = x[O.localCandidateId];
                B && (B.ip || B.address) ? (this.localAddress = B.ip || B.address, this.localPort = +B.port) : B && B.ipAddress ? (this.localAddress = B.ipAddress, this.localPort = +B.portNumber) : typeof O.googLocalAddress == "string" && (B = O.googLocalAddress.split(":"), this.localAddress = B[0], this.localPort = +B[1]), this.localAddress && (this.localFamily = this.localAddress.includes(":") ? "IPv6" : "IPv4");
                let U = E[O.remoteCandidateId];
                U && (U.ip || U.address) ? (this.remoteAddress = U.ip || U.address, this.remotePort = +U.port) : U && U.ipAddress ? (this.remoteAddress = U.ipAddress, this.remotePort = +U.portNumber) : typeof O.googRemoteAddress == "string" && (U = O.googRemoteAddress.split(":"), this.remoteAddress = U[0], this.remotePort = +U[1]), this.remoteAddress && (this.remoteFamily = this.remoteAddress.includes(":") ? "IPv6" : "IPv4"), this._debug("connect local: %s:%s remote: %s:%s", this.localAddress, this.localPort, this.remoteAddress, this.remotePort);
              };
              if (S.forEach((O) => {
                O.type === "transport" && O.selectedCandidatePairId && A(N[O.selectedCandidatePairId]), (O.type === "googCandidatePair" && O.googActiveConnection === "true" || (O.type === "candidatepair" || O.type === "candidate-pair") && O.selected) && A(O);
              }), !R && (!Object.keys(N).length || Object.keys(x).length)) return void setTimeout(k, 100);
              if (this._connecting = !1, this._connected = !0, this._chunk) {
                try {
                  this.send(this._chunk);
                } catch (B) {
                  return this.destroy(p(B, "ERR_DATA_CHANNEL"));
                }
                this._chunk = null, this._debug('sent chunk from "write before connect"');
                const O = this._cb;
                this._cb = null, O(null);
              }
              typeof this._channel.bufferedAmountLowThreshold != "number" && (this._interval = setInterval(() => this._onInterval(), 150), this._interval.unref && this._interval.unref()), this._debug("connect"), this.emit("connect");
            });
          };
          k();
        }
        _onInterval() {
          this._cb && this._channel && !(this._channel.bufferedAmount > v) && this._onChannelBufferedAmountLow();
        }
        _onSignalingStateChange() {
          this.destroyed || (this._pc.signalingState === "stable" && (this._isNegotiating = !1, this._debug("flushing sender queue", this._sendersAwaitingStable), this._sendersAwaitingStable.forEach((k) => {
            this._pc.removeTrack(k), this._queuedNegotiation = !0;
          }), this._sendersAwaitingStable = [], this._queuedNegotiation ? (this._debug("flushing negotiation queue"), this._queuedNegotiation = !1, this._needsNegotiation()) : (this._debug("negotiated"), this.emit("negotiated"))), this._debug("signalingStateChange %s", this._pc.signalingState), this.emit("signalingStateChange", this._pc.signalingState));
        }
        _onIceCandidate(k) {
          this.destroyed || (k.candidate && this.trickle ? this.emit("signal", { type: "candidate", candidate: { candidate: k.candidate.candidate, sdpMLineIndex: k.candidate.sdpMLineIndex, sdpMid: k.candidate.sdpMid } }) : !k.candidate && !this._iceComplete && (this._iceComplete = !0, this.emit("_iceComplete")), k.candidate && this._startIceCompleteTimeout());
        }
        _onChannelMessage(k) {
          if (this.destroyed) return;
          let _ = k.data;
          _ instanceof ArrayBuffer && (_ = m.from(_)), this.push(_);
        }
        _onChannelBufferedAmountLow() {
          if (!this.destroyed && this._cb) {
            this._debug("ending backpressure: bufferedAmount %d", this._channel.bufferedAmount);
            const k = this._cb;
            this._cb = null, k(null);
          }
        }
        _onChannelOpen() {
          this._connected || this.destroyed || (this._debug("on channel open"), this._channelReady = !0, this._maybeReady());
        }
        _onChannelClose() {
          this.destroyed || (this._debug("on channel close"), this.destroy());
        }
        _onTrack(k) {
          this.destroyed || k.streams.forEach((_) => {
            this._debug("on track"), this.emit("track", k.track, _), this._remoteTracks.push({ track: k.track, stream: _ }), this._remoteStreams.some((S) => S.id === _.id) || (this._remoteStreams.push(_), h(() => {
              this._debug("on stream"), this.emit("stream", _);
            }));
          });
        }
        _debug() {
          const k = [].slice.call(arguments);
          k[0] = "[" + this._id + "] " + k[0], c.apply(null, k);
        }
      }
      y.WEBRTC_SUPPORT = !!f(), y.config = { iceServers: [{ urls: ["stun:stun.l.google.com:19302", "stun:global.stun.twilio.com:3478"] }], sdpSemantics: "unified-plan" }, y.channelConfig = {}, s.exports = y;
    }, { buffer: 3, debug: 4, "err-code": 6, "get-browser-rtc": 8, "queue-microtask": 13, randombytes: 14, "readable-stream": 29 }] }, {}, [])("/");
  });
})(AC);
var TK = AC.exports;
const CK = /* @__PURE__ */ oh(TK), gb = 0, yb = 1, MC = 2, NC = (t, e) => {
  Fe(t, gb);
  const n = DP(e);
  Jt(t, n);
}, OC = (t, e, n) => {
  Fe(t, yb), Jt(t, OP(e, n));
}, SK = (t, e, n) => OC(e, n, bn(t)), RC = (t, e, n) => {
  try {
    AP(e, bn(t), n);
  } catch (i) {
    console.error("Caught error while handling a Yjs update", i);
  }
}, xK = (t, e) => {
  Fe(t, MC), Jt(t, e);
}, AK = RC, MK = (t, e, n, i) => {
  const r = Qe(t);
  switch (r) {
    case gb:
      SK(t, e, n);
      break;
    case yb:
      RC(t, n, i);
      break;
    case MC:
      AK(t, n, i);
      break;
    default:
      throw new Error("Unknown message type");
  }
  return r;
}, NK = (t, e) => {
  const n = rg(t).buffer, i = rg(e).buffer;
  return crypto.subtle.importKey(
    "raw",
    n,
    "PBKDF2",
    !1,
    ["deriveKey"]
  ).then(
    (r) => crypto.subtle.deriveKey(
      {
        name: "PBKDF2",
        salt: i,
        iterations: 1e5,
        hash: "SHA-256"
      },
      r,
      {
        name: "AES-GCM",
        length: 256
      },
      !0,
      ["encrypt", "decrypt"]
    )
  );
}, IC = (t, e) => {
  if (!e)
    return (
      /** @type {PromiseLike<Uint8Array>} */
      Ky(t)
    );
  const n = crypto.getRandomValues(new Uint8Array(12));
  return crypto.subtle.encrypt(
    {
      name: "AES-GCM",
      iv: n
    },
    e,
    t
  ).then((i) => {
    const r = kn();
    return xr(r, "AES-GCM"), Jt(r, n), Jt(r, new Uint8Array(i)), qt(r);
  });
}, OK = (t, e) => {
  const n = kn();
  return vl(n, t), IC(qt(n), e);
}, LC = (t, e) => {
  if (!e)
    return (
      /** @type {PromiseLike<Uint8Array>} */
      Ky(t)
    );
  const n = zr(t);
  uo(n) !== "AES-GCM" && HD(Dr("Unknown encryption algorithm"));
  const r = bn(n), o = bn(n);
  return crypto.subtle.decrypt(
    {
      name: "AES-GCM",
      iv: r
    },
    e,
    o
  ).then((s) => new Uint8Array(s));
}, RK = (t, e) => LC(t, e).then(
  (n) => bl(zr(new Uint8Array(n)))
), fi = bP("y-webrtc"), al = 0, DC = 3, vf = 1, vb = 4, j1 = /* @__PURE__ */ new Map(), ia = /* @__PURE__ */ new Map(), PC = (t) => {
  let e = !0;
  t.webrtcConns.forEach((n) => {
    n.synced || (e = !1);
  }), (!e && t.synced || e && !t.synced) && (t.synced = e, t.provider.emit("synced", [{ synced: e }]), fi("synced ", Ri, t.name, fa, " with all peers"));
}, FC = (t, e, n) => {
  const i = zr(e), r = kn(), o = Qe(i);
  if (t === void 0)
    return null;
  const s = t.awareness, a = t.doc;
  let l = !1;
  switch (o) {
    case al: {
      Fe(r, al);
      const c = MK(i, r, a, t);
      c === yb && !t.synced && n(), c === gb && (l = !0);
      break;
    }
    case DC:
      Fe(r, vf), Jt(r, Xu(s, Array.from(s.getStates().keys()))), l = !0;
      break;
    case vf:
      jF(s, bn(i), t);
      break;
    case vb: {
      const c = ca(i) === 1, f = uo(i);
      if (f !== t.peerId && (t.bcConns.has(f) && !c || !t.bcConns.has(f) && c)) {
        const d = [], u = [];
        c ? (t.bcConns.add(f), u.push(f)) : (t.bcConns.delete(f), d.push(f)), t.provider.emit("peers", [{
          added: u,
          removed: d,
          webrtcPeers: Array.from(t.webrtcConns.keys()),
          bcPeers: Array.from(t.bcConns)
        }]), BC(t);
      }
      break;
    }
    default:
      return console.error("Unable to compute message"), r;
  }
  return l ? r : null;
}, IK = (t, e) => {
  const n = t.room;
  return fi("received message from ", Ri, t.remotePeerId, ev, " (", n.name, ")", fa, Mh), FC(n, e, () => {
    t.synced = !0, fi("synced ", Ri, n.name, fa, " with ", Ri, t.remotePeerId), PC(n);
  });
}, Rm = (t, e) => {
  fi("send message to ", Ri, t.remotePeerId, fa, ev, " (", t.room.name, ")", Mh);
  try {
    t.peer.send(qt(e));
  } catch {
  }
}, LK = (t, e) => {
  fi("broadcast message in ", Ri, t.name, fa), t.webrtcConns.forEach((n) => {
    try {
      n.peer.send(e);
    } catch {
    }
  });
};
class H9 {
  /**
   * @param {SignalingConn} signalingConn
   * @param {boolean} initiator
   * @param {string} remotePeerId
   * @param {Room} room
   */
  constructor(e, n, i, r) {
    fi("establishing connection to ", Ri, i), this.room = r, this.remotePeerId = i, this.glareToken = void 0, this.closed = !1, this.connected = !1, this.synced = !1, this.peer = new CK({ initiator: n, ...r.provider.peerOpts }), this.peer.on("signal", (o) => {
      this.glareToken === void 0 && (this.glareToken = Date.now() + Math.random()), bb(e, r, { to: i, from: r.peerId, type: "signal", token: this.glareToken, signal: o });
    }), this.peer.on("connect", () => {
      fi("connected to ", Ri, i), this.connected = !0;
      const s = r.provider.doc, a = r.awareness, l = kn();
      Fe(l, al), NC(l, s), Rm(this, l);
      const c = a.getStates();
      if (c.size > 0) {
        const f = kn();
        Fe(f, vf), Jt(f, Xu(a, Array.from(c.keys()))), Rm(this, f);
      }
    }), this.peer.on("close", () => {
      this.connected = !1, this.closed = !0, r.webrtcConns.has(this.remotePeerId) && (r.webrtcConns.delete(this.remotePeerId), r.provider.emit("peers", [{
        removed: [this.remotePeerId],
        added: [],
        webrtcPeers: Array.from(r.webrtcConns.keys()),
        bcPeers: Array.from(r.bcConns)
      }])), PC(r), this.peer.destroy(), fi("closed connection to ", Ri, i), Hg(r);
    }), this.peer.on("error", (o) => {
      fi("Error in connection to ", Ri, i, ": ", o), Hg(r);
    }), this.peer.on("data", (o) => {
      const s = IK(this, o);
      s !== null && Rm(this, s);
    });
  }
  destroy() {
    this.peer.destroy();
  }
}
const Yo = (t, e) => IC(e, t.key).then(
  (n) => t.mux(
    () => EK(t.name, n)
  )
), $9 = (t, e) => {
  t.bcconnected && Yo(t, e), LK(t, e);
}, Hg = (t) => {
  j1.forEach((e) => {
    e.connected && (e.send({ type: "subscribe", topics: [t.name] }), t.webrtcConns.size < t.provider.maxConns && bb(e, t, { type: "announce", from: t.peerId }));
  });
}, BC = (t) => {
  if (t.provider.filterBcConns) {
    const e = kn();
    Fe(e, vb), rf(e, 1), xr(e, t.peerId), Yo(t, qt(e));
  }
};
class DK {
  /**
   * @param {Y.Doc} doc
   * @param {WebrtcProvider} provider
   * @param {string} name
   * @param {CryptoKey|null} key
   */
  constructor(e, n, i, r) {
    this.peerId = t8(), this.doc = e, this.awareness = n.awareness, this.provider = n, this.synced = !1, this.name = i, this.key = r, this.webrtcConns = /* @__PURE__ */ new Map(), this.bcConns = /* @__PURE__ */ new Set(), this.mux = iE(), this.bcconnected = !1, this._bcSubscriber = (o) => LC(new Uint8Array(o), r).then(
      (s) => this.mux(() => {
        const a = FC(this, s, () => {
        });
        a && Yo(this, qt(a));
      })
    ), this._docUpdateHandler = (o, s) => {
      const a = kn();
      Fe(a, al), xK(a, o), $9(this, qt(a));
    }, this._awarenessUpdateHandler = ({ added: o, updated: s, removed: a }, l) => {
      const c = o.concat(s).concat(a), f = kn();
      Fe(f, vf), Jt(f, Xu(this.awareness, c)), $9(this, qt(f));
    }, this._beforeUnloadHandler = () => {
      hg(this.awareness, [e.clientID], "window unload"), ia.forEach((o) => {
        o.disconnect();
      });
    }, typeof window < "u" ? window.addEventListener("beforeunload", this._beforeUnloadHandler) : typeof process < "u" && process.on("exit", this._beforeUnloadHandler);
  }
  connect() {
    this.doc.on("update", this._docUpdateHandler), this.awareness.on("update", this._awarenessUpdateHandler), Hg(this);
    const e = this.name;
    wK(e, this._bcSubscriber), this.bcconnected = !0, BC(this);
    const n = kn();
    Fe(n, al), NC(n, this.doc), Yo(this, qt(n));
    const i = kn();
    Fe(i, al), OC(i, this.doc), Yo(this, qt(i));
    const r = kn();
    Fe(r, DC), Yo(this, qt(r));
    const o = kn();
    Fe(o, vf), Jt(o, Xu(this.awareness, [this.doc.clientID])), Yo(this, qt(o));
  }
  disconnect() {
    j1.forEach((n) => {
      n.connected && n.send({ type: "unsubscribe", topics: [this.name] });
    }), hg(this.awareness, [this.doc.clientID], "disconnect");
    const e = kn();
    Fe(e, vb), rf(e, 0), xr(e, this.peerId), Yo(this, qt(e)), _K(this.name, this._bcSubscriber), this.bcconnected = !1, this.doc.off("update", this._docUpdateHandler), this.awareness.off("update", this._awarenessUpdateHandler), this.webrtcConns.forEach((n) => n.destroy());
  }
  destroy() {
    this.disconnect(), typeof window < "u" ? window.removeEventListener("beforeunload", this._beforeUnloadHandler) : typeof process < "u" && process.off("exit", this._beforeUnloadHandler);
  }
}
const PK = (t, e, n, i) => {
  if (ia.has(n))
    throw Dr(`A Yjs Doc connected to room "${n}" already exists!`);
  const r = new DK(t, e, n, i);
  return ia.set(
    n,
    /** @type {Room} */
    r
  ), r;
}, bb = (t, e, n) => {
  e.key ? OK(n, e.key).then((i) => {
    t.send({ type: "publish", topic: e.name, data: l8(i) });
  }) : t.send({ type: "publish", topic: e.name, data: n });
};
class FK extends vK {
  constructor(e) {
    super(e), this.providers = /* @__PURE__ */ new Set(), this.on("connect", () => {
      fi(`connected (${e})`);
      const n = Array.from(ia.keys());
      this.send({ type: "subscribe", topics: n }), ia.forEach(
        (i) => bb(this, i, { type: "announce", from: i.peerId })
      );
    }), this.on("message", (n) => {
      switch (n.type) {
        case "publish": {
          const i = n.topic, r = ia.get(i);
          if (r == null || typeof i != "string")
            return;
          const o = (s) => {
            const a = r.webrtcConns, l = r.peerId;
            if (s == null || s.from === l || s.to !== void 0 && s.to !== l || r.bcConns.has(s.from))
              return;
            const c = a.has(s.from) ? () => {
            } : () => r.provider.emit("peers", [{
              removed: [],
              added: [s.from],
              webrtcPeers: Array.from(r.webrtcConns.keys()),
              bcPeers: Array.from(r.bcConns)
            }]);
            switch (s.type) {
              case "announce":
                a.size < r.provider.maxConns && (si(a, s.from, () => new H9(this, !0, s.from, r)), c());
                break;
              case "signal":
                if (s.signal.type === "offer") {
                  const f = a.get(s.from);
                  if (f) {
                    const d = s.token, u = f.glareToken;
                    if (u && u > d) {
                      fi("offer rejected: ", s.from);
                      return;
                    }
                    f.glareToken = void 0;
                  }
                }
                if (s.signal.type === "answer") {
                  fi("offer answered by: ", s.from);
                  const f = a.get(s.from);
                  f.glareToken = void 0;
                }
                s.to === l && (si(a, s.from, () => new H9(this, !1, s.from, r)).peer.signal(s.signal), c());
                break;
            }
          };
          r.key ? typeof n.data == "string" && RK(c8(n.data), r.key).then(o) : o(n.data);
        }
      }
    }), this.on("disconnect", () => fi(`disconnect (${e})`));
  }
}
const Im = (t) => {
  t.emit("status", [{
    connected: t.connected
  }]);
};
class BK extends Uy {
  /**
   * @param {string} roomName
   * @param {Y.Doc} doc
   * @param {ProviderOptions?} opts
   */
  constructor(e, n, {
    signaling: i = ["wss://y-webrtc-eu.fly.dev"],
    password: r = null,
    awareness: o = new $F(n),
    maxConns: s = 20 + sr(Z6() * 15),
    // the random factor reduces the chance that n clients form a cluster
    filterBcConns: a = !0,
    peerOpts: l = {}
    // simple-peer options. See https://github.com/feross/simple-peer#peer--new-peeropts
  } = {}) {
    super(), this.roomName = e, this.doc = n, this.filterBcConns = a, this.awareness = o, this.shouldConnect = !1, this.signalingUrls = i, this.signalingConns = [], this.maxConns = s, this.peerOpts = l, this.key = r ? NK(r, e) : (
      /** @type {PromiseLike<null>} */
      Ky(null)
    ), this.room = null, this.key.then((c) => {
      this.room = PK(n, this, e, c), this.shouldConnect ? this.room.connect() : this.room.disconnect(), Im(this);
    }), this.connect(), this.destroy = this.destroy.bind(this), n.on("destroy", this.destroy);
  }
  /**
   * Indicates whether the provider is looking for other peers.
   *
   * Other peers can be found via signaling servers or via broadcastchannel (cross browser-tab
   * communication). You never know when you are connected to all peers. You also don't know if
   * there are other peers. connected doesn't mean that you are connected to any physical peers
   * working on the same resource as you. It does not change unless you call provider.disconnect()
   *
   * `this.on('status', (event) => { console.log(event.connected) })`
   *
   * @type {boolean}
   */
  get connected() {
    return this.room !== null && this.shouldConnect;
  }
  connect() {
    this.shouldConnect = !0, this.signalingUrls.forEach((e) => {
      const n = si(j1, e, () => new FK(e));
      this.signalingConns.push(n), n.providers.add(this);
    }), this.room && (this.room.connect(), Im(this));
  }
  disconnect() {
    this.shouldConnect = !1, this.signalingConns.forEach((e) => {
      e.providers.delete(this), e.providers.size === 0 && (e.destroy(), j1.delete(e.url));
    }), this.room && (this.room.disconnect(), Im(this));
  }
  destroy() {
    this.doc.off("destroy", this.destroy), this.key.then(() => {
      this.room.destroy(), ia.delete(this.roomName);
    }), super.destroy();
  }
}
const HC = new ba(), HK = new BK("my-document-id", HC);
function $K() {
  for (var t = "ABCDE".split(""), e = "#", n = 0; n < 3; n++)
    e += t[Math.floor(Math.random() * t.length)];
  return e;
}
function hle(t) {
  const e = sV({
    collaboration: {
      // The Yjs Provider responsible for transporting updates:
      provider: HK,
      // Where to store BlockNote data in the Y.Doc:
      fragment: HC.getXmlFragment("document-store"),
      // Information (name and color) for this user:
      user: {
        name: t.user.name || "USER: " + Math.random().toFixed(3),
        color: t.user.color || $K()
      }
    }
  });
  window.editor = e;
  const [n, i] = Ke.useState(""), r = async () => {
    const o = await e.blocksToFullHTML(e.document), s = document.createElement("div");
    s.innerHTML = o;
    const a = s.firstElementChild;
    if (!a) return;
    a.querySelectorAll("img").forEach((f) => {
      const d = f.getAttribute("alt"), u = document.querySelector(`[data-name="${d}"]`), h = u == null ? void 0 : u.getAttribute("data-url");
      h && f.setAttribute("src", h);
    });
    const c = a.outerHTML;
    i(c), navigator.clipboard.writeText(c);
  };
  return /* @__PURE__ */ Q.jsxs("div", { children: [
    /* @__PURE__ */ Q.jsx("div", { className: "bn-container", children: /* @__PURE__ */ Q.jsx(
      "div",
      {
        className: "bn-default-styles",
        dangerouslySetInnerHTML: { __html: n }
      }
    ) }),
    /* @__PURE__ */ Q.jsx(mK, { onChange: r, editor: e }),
    ";"
  ] });
}
var ur = {};
const jK = [
  65534,
  65535,
  131070,
  131071,
  196606,
  196607,
  262142,
  262143,
  327678,
  327679,
  393214,
  393215,
  458750,
  458751,
  524286,
  524287,
  589822,
  589823,
  655358,
  655359,
  720894,
  720895,
  786430,
  786431,
  851966,
  851967,
  917502,
  917503,
  983038,
  983039,
  1048574,
  1048575,
  1114110,
  1114111
];
ur.REPLACEMENT_CHARACTER = "�";
ur.CODE_POINTS = {
  EOF: -1,
  NULL: 0,
  TABULATION: 9,
  CARRIAGE_RETURN: 13,
  LINE_FEED: 10,
  FORM_FEED: 12,
  SPACE: 32,
  EXCLAMATION_MARK: 33,
  QUOTATION_MARK: 34,
  NUMBER_SIGN: 35,
  AMPERSAND: 38,
  APOSTROPHE: 39,
  HYPHEN_MINUS: 45,
  SOLIDUS: 47,
  DIGIT_0: 48,
  DIGIT_9: 57,
  SEMICOLON: 59,
  LESS_THAN_SIGN: 60,
  EQUALS_SIGN: 61,
  GREATER_THAN_SIGN: 62,
  QUESTION_MARK: 63,
  LATIN_CAPITAL_A: 65,
  LATIN_CAPITAL_F: 70,
  LATIN_CAPITAL_X: 88,
  LATIN_CAPITAL_Z: 90,
  RIGHT_SQUARE_BRACKET: 93,
  GRAVE_ACCENT: 96,
  LATIN_SMALL_A: 97,
  LATIN_SMALL_F: 102,
  LATIN_SMALL_X: 120,
  LATIN_SMALL_Z: 122,
  REPLACEMENT_CHARACTER: 65533
};
ur.CODE_POINT_SEQUENCES = {
  DASH_DASH_STRING: [45, 45],
  //--
  DOCTYPE_STRING: [68, 79, 67, 84, 89, 80, 69],
  //DOCTYPE
  CDATA_START_STRING: [91, 67, 68, 65, 84, 65, 91],
  //[CDATA[
  SCRIPT_STRING: [115, 99, 114, 105, 112, 116],
  //script
  PUBLIC_STRING: [80, 85, 66, 76, 73, 67],
  //PUBLIC
  SYSTEM_STRING: [83, 89, 83, 84, 69, 77]
  //SYSTEM
};
ur.isSurrogate = function(t) {
  return t >= 55296 && t <= 57343;
};
ur.isSurrogatePair = function(t) {
  return t >= 56320 && t <= 57343;
};
ur.getSurrogatePairCodePoint = function(t, e) {
  return (t - 55296) * 1024 + 9216 + e;
};
ur.isControlCodePoint = function(t) {
  return t !== 32 && t !== 10 && t !== 13 && t !== 9 && t !== 12 && t >= 1 && t <= 31 || t >= 127 && t <= 159;
};
ur.isUndefinedCodePoint = function(t) {
  return t >= 64976 && t <= 65007 || jK.indexOf(t) > -1;
};
var kb = {
  controlCharacterInInputStream: "control-character-in-input-stream",
  noncharacterInInputStream: "noncharacter-in-input-stream",
  surrogateInInputStream: "surrogate-in-input-stream",
  nonVoidHtmlElementStartTagWithTrailingSolidus: "non-void-html-element-start-tag-with-trailing-solidus",
  endTagWithAttributes: "end-tag-with-attributes",
  endTagWithTrailingSolidus: "end-tag-with-trailing-solidus",
  unexpectedSolidusInTag: "unexpected-solidus-in-tag",
  unexpectedNullCharacter: "unexpected-null-character",
  unexpectedQuestionMarkInsteadOfTagName: "unexpected-question-mark-instead-of-tag-name",
  invalidFirstCharacterOfTagName: "invalid-first-character-of-tag-name",
  unexpectedEqualsSignBeforeAttributeName: "unexpected-equals-sign-before-attribute-name",
  missingEndTagName: "missing-end-tag-name",
  unexpectedCharacterInAttributeName: "unexpected-character-in-attribute-name",
  unknownNamedCharacterReference: "unknown-named-character-reference",
  missingSemicolonAfterCharacterReference: "missing-semicolon-after-character-reference",
  unexpectedCharacterAfterDoctypeSystemIdentifier: "unexpected-character-after-doctype-system-identifier",
  unexpectedCharacterInUnquotedAttributeValue: "unexpected-character-in-unquoted-attribute-value",
  eofBeforeTagName: "eof-before-tag-name",
  eofInTag: "eof-in-tag",
  missingAttributeValue: "missing-attribute-value",
  missingWhitespaceBetweenAttributes: "missing-whitespace-between-attributes",
  missingWhitespaceAfterDoctypePublicKeyword: "missing-whitespace-after-doctype-public-keyword",
  missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers: "missing-whitespace-between-doctype-public-and-system-identifiers",
  missingWhitespaceAfterDoctypeSystemKeyword: "missing-whitespace-after-doctype-system-keyword",
  missingQuoteBeforeDoctypePublicIdentifier: "missing-quote-before-doctype-public-identifier",
  missingQuoteBeforeDoctypeSystemIdentifier: "missing-quote-before-doctype-system-identifier",
  missingDoctypePublicIdentifier: "missing-doctype-public-identifier",
  missingDoctypeSystemIdentifier: "missing-doctype-system-identifier",
  abruptDoctypePublicIdentifier: "abrupt-doctype-public-identifier",
  abruptDoctypeSystemIdentifier: "abrupt-doctype-system-identifier",
  cdataInHtmlContent: "cdata-in-html-content",
  incorrectlyOpenedComment: "incorrectly-opened-comment",
  eofInScriptHtmlCommentLikeText: "eof-in-script-html-comment-like-text",
  eofInDoctype: "eof-in-doctype",
  nestedComment: "nested-comment",
  abruptClosingOfEmptyComment: "abrupt-closing-of-empty-comment",
  eofInComment: "eof-in-comment",
  incorrectlyClosedComment: "incorrectly-closed-comment",
  eofInCdata: "eof-in-cdata",
  absenceOfDigitsInNumericCharacterReference: "absence-of-digits-in-numeric-character-reference",
  nullCharacterReference: "null-character-reference",
  surrogateCharacterReference: "surrogate-character-reference",
  characterReferenceOutsideUnicodeRange: "character-reference-outside-unicode-range",
  controlCharacterReference: "control-character-reference",
  noncharacterCharacterReference: "noncharacter-character-reference",
  missingWhitespaceBeforeDoctypeName: "missing-whitespace-before-doctype-name",
  missingDoctypeName: "missing-doctype-name",
  invalidCharacterSequenceAfterDoctypeName: "invalid-character-sequence-after-doctype-name",
  duplicateAttribute: "duplicate-attribute",
  nonConformingDoctype: "non-conforming-doctype",
  missingDoctype: "missing-doctype",
  misplacedDoctype: "misplaced-doctype",
  endTagWithoutMatchingOpenElement: "end-tag-without-matching-open-element",
  closingOfElementWithOpenChildElements: "closing-of-element-with-open-child-elements",
  disallowedContentInNoscriptInHead: "disallowed-content-in-noscript-in-head",
  openElementsLeftAfterEof: "open-elements-left-after-eof",
  abandonedHeadElementChild: "abandoned-head-element-child",
  misplacedStartTagForHeadElement: "misplaced-start-tag-for-head-element",
  nestedNoscriptInHead: "nested-noscript-in-head",
  eofInElementThatCanContainOnlyText: "eof-in-element-that-can-contain-only-text"
};
const za = ur, Lm = kb, Is = za.CODE_POINTS, zK = 65536;
let UK = class {
  constructor() {
    this.html = null, this.pos = -1, this.lastGapPos = -1, this.lastCharPos = -1, this.gapStack = [], this.skipNextNewLine = !1, this.lastChunkWritten = !1, this.endOfChunkHit = !1, this.bufferWaterline = zK;
  }
  _err() {
  }
  _addGap() {
    this.gapStack.push(this.lastGapPos), this.lastGapPos = this.pos;
  }
  _processSurrogate(e) {
    if (this.pos !== this.lastCharPos) {
      const n = this.html.charCodeAt(this.pos + 1);
      if (za.isSurrogatePair(n))
        return this.pos++, this._addGap(), za.getSurrogatePairCodePoint(e, n);
    } else if (!this.lastChunkWritten)
      return this.endOfChunkHit = !0, Is.EOF;
    return this._err(Lm.surrogateInInputStream), e;
  }
  dropParsedChunk() {
    this.pos > this.bufferWaterline && (this.lastCharPos -= this.pos, this.html = this.html.substring(this.pos), this.pos = 0, this.lastGapPos = -1, this.gapStack = []);
  }
  write(e, n) {
    this.html ? this.html += e : this.html = e, this.lastCharPos = this.html.length - 1, this.endOfChunkHit = !1, this.lastChunkWritten = n;
  }
  insertHtmlAtCurrentPos(e) {
    this.html = this.html.substring(0, this.pos + 1) + e + this.html.substring(this.pos + 1, this.html.length), this.lastCharPos = this.html.length - 1, this.endOfChunkHit = !1;
  }
  advance() {
    if (this.pos++, this.pos > this.lastCharPos)
      return this.endOfChunkHit = !this.lastChunkWritten, Is.EOF;
    let e = this.html.charCodeAt(this.pos);
    return this.skipNextNewLine && e === Is.LINE_FEED ? (this.skipNextNewLine = !1, this._addGap(), this.advance()) : e === Is.CARRIAGE_RETURN ? (this.skipNextNewLine = !0, Is.LINE_FEED) : (this.skipNextNewLine = !1, za.isSurrogate(e) && (e = this._processSurrogate(e)), e > 31 && e < 127 || e === Is.LINE_FEED || e === Is.CARRIAGE_RETURN || e > 159 && e < 64976 || this._checkForProblematicCharacters(e), e);
  }
  _checkForProblematicCharacters(e) {
    za.isControlCodePoint(e) ? this._err(Lm.controlCharacterInInputStream) : za.isUndefinedCodePoint(e) && this._err(Lm.noncharacterInInputStream);
  }
  retreat() {
    this.pos === this.lastGapPos && (this.lastGapPos = this.gapStack.pop(), this.pos--), this.pos--;
  }
};
var VK = UK, WK = new Uint16Array([4, 52, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 106, 303, 412, 810, 1432, 1701, 1796, 1987, 2114, 2360, 2420, 2484, 3170, 3251, 4140, 4393, 4575, 4610, 5106, 5512, 5728, 6117, 6274, 6315, 6345, 6427, 6516, 7002, 7910, 8733, 9323, 9870, 10170, 10631, 10893, 11318, 11386, 11467, 12773, 13092, 14474, 14922, 15448, 15542, 16419, 17666, 18166, 18611, 19004, 19095, 19298, 19397, 4, 16, 69, 77, 97, 98, 99, 102, 103, 108, 109, 110, 111, 112, 114, 115, 116, 117, 140, 150, 158, 169, 176, 194, 199, 210, 216, 222, 226, 242, 256, 266, 283, 294, 108, 105, 103, 5, 198, 1, 59, 148, 1, 198, 80, 5, 38, 1, 59, 156, 1, 38, 99, 117, 116, 101, 5, 193, 1, 59, 167, 1, 193, 114, 101, 118, 101, 59, 1, 258, 4, 2, 105, 121, 182, 191, 114, 99, 5, 194, 1, 59, 189, 1, 194, 59, 1, 1040, 114, 59, 3, 55349, 56580, 114, 97, 118, 101, 5, 192, 1, 59, 208, 1, 192, 112, 104, 97, 59, 1, 913, 97, 99, 114, 59, 1, 256, 100, 59, 1, 10835, 4, 2, 103, 112, 232, 237, 111, 110, 59, 1, 260, 102, 59, 3, 55349, 56632, 112, 108, 121, 70, 117, 110, 99, 116, 105, 111, 110, 59, 1, 8289, 105, 110, 103, 5, 197, 1, 59, 264, 1, 197, 4, 2, 99, 115, 272, 277, 114, 59, 3, 55349, 56476, 105, 103, 110, 59, 1, 8788, 105, 108, 100, 101, 5, 195, 1, 59, 292, 1, 195, 109, 108, 5, 196, 1, 59, 301, 1, 196, 4, 8, 97, 99, 101, 102, 111, 114, 115, 117, 321, 350, 354, 383, 388, 394, 400, 405, 4, 2, 99, 114, 327, 336, 107, 115, 108, 97, 115, 104, 59, 1, 8726, 4, 2, 118, 119, 342, 345, 59, 1, 10983, 101, 100, 59, 1, 8966, 121, 59, 1, 1041, 4, 3, 99, 114, 116, 362, 369, 379, 97, 117, 115, 101, 59, 1, 8757, 110, 111, 117, 108, 108, 105, 115, 59, 1, 8492, 97, 59, 1, 914, 114, 59, 3, 55349, 56581, 112, 102, 59, 3, 55349, 56633, 101, 118, 101, 59, 1, 728, 99, 114, 59, 1, 8492, 109, 112, 101, 113, 59, 1, 8782, 4, 14, 72, 79, 97, 99, 100, 101, 102, 104, 105, 108, 111, 114, 115, 117, 442, 447, 456, 504, 542, 547, 569, 573, 577, 616, 678, 784, 790, 796, 99, 121, 59, 1, 1063, 80, 89, 5, 169, 1, 59, 454, 1, 169, 4, 3, 99, 112, 121, 464, 470, 497, 117, 116, 101, 59, 1, 262, 4, 2, 59, 105, 476, 478, 1, 8914, 116, 97, 108, 68, 105, 102, 102, 101, 114, 101, 110, 116, 105, 97, 108, 68, 59, 1, 8517, 108, 101, 121, 115, 59, 1, 8493, 4, 4, 97, 101, 105, 111, 514, 520, 530, 535, 114, 111, 110, 59, 1, 268, 100, 105, 108, 5, 199, 1, 59, 528, 1, 199, 114, 99, 59, 1, 264, 110, 105, 110, 116, 59, 1, 8752, 111, 116, 59, 1, 266, 4, 2, 100, 110, 553, 560, 105, 108, 108, 97, 59, 1, 184, 116, 101, 114, 68, 111, 116, 59, 1, 183, 114, 59, 1, 8493, 105, 59, 1, 935, 114, 99, 108, 101, 4, 4, 68, 77, 80, 84, 591, 596, 603, 609, 111, 116, 59, 1, 8857, 105, 110, 117, 115, 59, 1, 8854, 108, 117, 115, 59, 1, 8853, 105, 109, 101, 115, 59, 1, 8855, 111, 4, 2, 99, 115, 623, 646, 107, 119, 105, 115, 101, 67, 111, 110, 116, 111, 117, 114, 73, 110, 116, 101, 103, 114, 97, 108, 59, 1, 8754, 101, 67, 117, 114, 108, 121, 4, 2, 68, 81, 658, 671, 111, 117, 98, 108, 101, 81, 117, 111, 116, 101, 59, 1, 8221, 117, 111, 116, 101, 59, 1, 8217, 4, 4, 108, 110, 112, 117, 688, 701, 736, 753, 111, 110, 4, 2, 59, 101, 696, 698, 1, 8759, 59, 1, 10868, 4, 3, 103, 105, 116, 709, 717, 722, 114, 117, 101, 110, 116, 59, 1, 8801, 110, 116, 59, 1, 8751, 111, 117, 114, 73, 110, 116, 101, 103, 114, 97, 108, 59, 1, 8750, 4, 2, 102, 114, 742, 745, 59, 1, 8450, 111, 100, 117, 99, 116, 59, 1, 8720, 110, 116, 101, 114, 67, 108, 111, 99, 107, 119, 105, 115, 101, 67, 111, 110, 116, 111, 117, 114, 73, 110, 116, 101, 103, 114, 97, 108, 59, 1, 8755, 111, 115, 115, 59, 1, 10799, 99, 114, 59, 3, 55349, 56478, 112, 4, 2, 59, 67, 803, 805, 1, 8915, 97, 112, 59, 1, 8781, 4, 11, 68, 74, 83, 90, 97, 99, 101, 102, 105, 111, 115, 834, 850, 855, 860, 865, 888, 903, 916, 921, 1011, 1415, 4, 2, 59, 111, 840, 842, 1, 8517, 116, 114, 97, 104, 100, 59, 1, 10513, 99, 121, 59, 1, 1026, 99, 121, 59, 1, 1029, 99, 121, 59, 1, 1039, 4, 3, 103, 114, 115, 873, 879, 883, 103, 101, 114, 59, 1, 8225, 114, 59, 1, 8609, 104, 118, 59, 1, 10980, 4, 2, 97, 121, 894, 900, 114, 111, 110, 59, 1, 270, 59, 1, 1044, 108, 4, 2, 59, 116, 910, 912, 1, 8711, 97, 59, 1, 916, 114, 59, 3, 55349, 56583, 4, 2, 97, 102, 927, 998, 4, 2, 99, 109, 933, 992, 114, 105, 116, 105, 99, 97, 108, 4, 4, 65, 68, 71, 84, 950, 957, 978, 985, 99, 117, 116, 101, 59, 1, 180, 111, 4, 2, 116, 117, 964, 967, 59, 1, 729, 98, 108, 101, 65, 99, 117, 116, 101, 59, 1, 733, 114, 97, 118, 101, 59, 1, 96, 105, 108, 100, 101, 59, 1, 732, 111, 110, 100, 59, 1, 8900, 102, 101, 114, 101, 110, 116, 105, 97, 108, 68, 59, 1, 8518, 4, 4, 112, 116, 117, 119, 1021, 1026, 1048, 1249, 102, 59, 3, 55349, 56635, 4, 3, 59, 68, 69, 1034, 1036, 1041, 1, 168, 111, 116, 59, 1, 8412, 113, 117, 97, 108, 59, 1, 8784, 98, 108, 101, 4, 6, 67, 68, 76, 82, 85, 86, 1065, 1082, 1101, 1189, 1211, 1236, 111, 110, 116, 111, 117, 114, 73, 110, 116, 101, 103, 114, 97, 108, 59, 1, 8751, 111, 4, 2, 116, 119, 1089, 1092, 59, 1, 168, 110, 65, 114, 114, 111, 119, 59, 1, 8659, 4, 2, 101, 111, 1107, 1141, 102, 116, 4, 3, 65, 82, 84, 1117, 1124, 1136, 114, 114, 111, 119, 59, 1, 8656, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 8660, 101, 101, 59, 1, 10980, 110, 103, 4, 2, 76, 82, 1149, 1177, 101, 102, 116, 4, 2, 65, 82, 1158, 1165, 114, 114, 111, 119, 59, 1, 10232, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 10234, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 10233, 105, 103, 104, 116, 4, 2, 65, 84, 1199, 1206, 114, 114, 111, 119, 59, 1, 8658, 101, 101, 59, 1, 8872, 112, 4, 2, 65, 68, 1218, 1225, 114, 114, 111, 119, 59, 1, 8657, 111, 119, 110, 65, 114, 114, 111, 119, 59, 1, 8661, 101, 114, 116, 105, 99, 97, 108, 66, 97, 114, 59, 1, 8741, 110, 4, 6, 65, 66, 76, 82, 84, 97, 1264, 1292, 1299, 1352, 1391, 1408, 114, 114, 111, 119, 4, 3, 59, 66, 85, 1276, 1278, 1283, 1, 8595, 97, 114, 59, 1, 10515, 112, 65, 114, 114, 111, 119, 59, 1, 8693, 114, 101, 118, 101, 59, 1, 785, 101, 102, 116, 4, 3, 82, 84, 86, 1310, 1323, 1334, 105, 103, 104, 116, 86, 101, 99, 116, 111, 114, 59, 1, 10576, 101, 101, 86, 101, 99, 116, 111, 114, 59, 1, 10590, 101, 99, 116, 111, 114, 4, 2, 59, 66, 1345, 1347, 1, 8637, 97, 114, 59, 1, 10582, 105, 103, 104, 116, 4, 2, 84, 86, 1362, 1373, 101, 101, 86, 101, 99, 116, 111, 114, 59, 1, 10591, 101, 99, 116, 111, 114, 4, 2, 59, 66, 1384, 1386, 1, 8641, 97, 114, 59, 1, 10583, 101, 101, 4, 2, 59, 65, 1399, 1401, 1, 8868, 114, 114, 111, 119, 59, 1, 8615, 114, 114, 111, 119, 59, 1, 8659, 4, 2, 99, 116, 1421, 1426, 114, 59, 3, 55349, 56479, 114, 111, 107, 59, 1, 272, 4, 16, 78, 84, 97, 99, 100, 102, 103, 108, 109, 111, 112, 113, 115, 116, 117, 120, 1466, 1470, 1478, 1489, 1515, 1520, 1525, 1536, 1544, 1593, 1609, 1617, 1650, 1664, 1668, 1677, 71, 59, 1, 330, 72, 5, 208, 1, 59, 1476, 1, 208, 99, 117, 116, 101, 5, 201, 1, 59, 1487, 1, 201, 4, 3, 97, 105, 121, 1497, 1503, 1512, 114, 111, 110, 59, 1, 282, 114, 99, 5, 202, 1, 59, 1510, 1, 202, 59, 1, 1069, 111, 116, 59, 1, 278, 114, 59, 3, 55349, 56584, 114, 97, 118, 101, 5, 200, 1, 59, 1534, 1, 200, 101, 109, 101, 110, 116, 59, 1, 8712, 4, 2, 97, 112, 1550, 1555, 99, 114, 59, 1, 274, 116, 121, 4, 2, 83, 86, 1563, 1576, 109, 97, 108, 108, 83, 113, 117, 97, 114, 101, 59, 1, 9723, 101, 114, 121, 83, 109, 97, 108, 108, 83, 113, 117, 97, 114, 101, 59, 1, 9643, 4, 2, 103, 112, 1599, 1604, 111, 110, 59, 1, 280, 102, 59, 3, 55349, 56636, 115, 105, 108, 111, 110, 59, 1, 917, 117, 4, 2, 97, 105, 1624, 1640, 108, 4, 2, 59, 84, 1631, 1633, 1, 10869, 105, 108, 100, 101, 59, 1, 8770, 108, 105, 98, 114, 105, 117, 109, 59, 1, 8652, 4, 2, 99, 105, 1656, 1660, 114, 59, 1, 8496, 109, 59, 1, 10867, 97, 59, 1, 919, 109, 108, 5, 203, 1, 59, 1675, 1, 203, 4, 2, 105, 112, 1683, 1689, 115, 116, 115, 59, 1, 8707, 111, 110, 101, 110, 116, 105, 97, 108, 69, 59, 1, 8519, 4, 5, 99, 102, 105, 111, 115, 1713, 1717, 1722, 1762, 1791, 121, 59, 1, 1060, 114, 59, 3, 55349, 56585, 108, 108, 101, 100, 4, 2, 83, 86, 1732, 1745, 109, 97, 108, 108, 83, 113, 117, 97, 114, 101, 59, 1, 9724, 101, 114, 121, 83, 109, 97, 108, 108, 83, 113, 117, 97, 114, 101, 59, 1, 9642, 4, 3, 112, 114, 117, 1770, 1775, 1781, 102, 59, 3, 55349, 56637, 65, 108, 108, 59, 1, 8704, 114, 105, 101, 114, 116, 114, 102, 59, 1, 8497, 99, 114, 59, 1, 8497, 4, 12, 74, 84, 97, 98, 99, 100, 102, 103, 111, 114, 115, 116, 1822, 1827, 1834, 1848, 1855, 1877, 1882, 1887, 1890, 1896, 1978, 1984, 99, 121, 59, 1, 1027, 5, 62, 1, 59, 1832, 1, 62, 109, 109, 97, 4, 2, 59, 100, 1843, 1845, 1, 915, 59, 1, 988, 114, 101, 118, 101, 59, 1, 286, 4, 3, 101, 105, 121, 1863, 1869, 1874, 100, 105, 108, 59, 1, 290, 114, 99, 59, 1, 284, 59, 1, 1043, 111, 116, 59, 1, 288, 114, 59, 3, 55349, 56586, 59, 1, 8921, 112, 102, 59, 3, 55349, 56638, 101, 97, 116, 101, 114, 4, 6, 69, 70, 71, 76, 83, 84, 1915, 1933, 1944, 1953, 1959, 1971, 113, 117, 97, 108, 4, 2, 59, 76, 1925, 1927, 1, 8805, 101, 115, 115, 59, 1, 8923, 117, 108, 108, 69, 113, 117, 97, 108, 59, 1, 8807, 114, 101, 97, 116, 101, 114, 59, 1, 10914, 101, 115, 115, 59, 1, 8823, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 1, 10878, 105, 108, 100, 101, 59, 1, 8819, 99, 114, 59, 3, 55349, 56482, 59, 1, 8811, 4, 8, 65, 97, 99, 102, 105, 111, 115, 117, 2005, 2012, 2026, 2032, 2036, 2049, 2073, 2089, 82, 68, 99, 121, 59, 1, 1066, 4, 2, 99, 116, 2018, 2023, 101, 107, 59, 1, 711, 59, 1, 94, 105, 114, 99, 59, 1, 292, 114, 59, 1, 8460, 108, 98, 101, 114, 116, 83, 112, 97, 99, 101, 59, 1, 8459, 4, 2, 112, 114, 2055, 2059, 102, 59, 1, 8461, 105, 122, 111, 110, 116, 97, 108, 76, 105, 110, 101, 59, 1, 9472, 4, 2, 99, 116, 2079, 2083, 114, 59, 1, 8459, 114, 111, 107, 59, 1, 294, 109, 112, 4, 2, 68, 69, 2097, 2107, 111, 119, 110, 72, 117, 109, 112, 59, 1, 8782, 113, 117, 97, 108, 59, 1, 8783, 4, 14, 69, 74, 79, 97, 99, 100, 102, 103, 109, 110, 111, 115, 116, 117, 2144, 2149, 2155, 2160, 2171, 2189, 2194, 2198, 2209, 2245, 2307, 2329, 2334, 2341, 99, 121, 59, 1, 1045, 108, 105, 103, 59, 1, 306, 99, 121, 59, 1, 1025, 99, 117, 116, 101, 5, 205, 1, 59, 2169, 1, 205, 4, 2, 105, 121, 2177, 2186, 114, 99, 5, 206, 1, 59, 2184, 1, 206, 59, 1, 1048, 111, 116, 59, 1, 304, 114, 59, 1, 8465, 114, 97, 118, 101, 5, 204, 1, 59, 2207, 1, 204, 4, 3, 59, 97, 112, 2217, 2219, 2238, 1, 8465, 4, 2, 99, 103, 2225, 2229, 114, 59, 1, 298, 105, 110, 97, 114, 121, 73, 59, 1, 8520, 108, 105, 101, 115, 59, 1, 8658, 4, 2, 116, 118, 2251, 2281, 4, 2, 59, 101, 2257, 2259, 1, 8748, 4, 2, 103, 114, 2265, 2271, 114, 97, 108, 59, 1, 8747, 115, 101, 99, 116, 105, 111, 110, 59, 1, 8898, 105, 115, 105, 98, 108, 101, 4, 2, 67, 84, 2293, 2300, 111, 109, 109, 97, 59, 1, 8291, 105, 109, 101, 115, 59, 1, 8290, 4, 3, 103, 112, 116, 2315, 2320, 2325, 111, 110, 59, 1, 302, 102, 59, 3, 55349, 56640, 97, 59, 1, 921, 99, 114, 59, 1, 8464, 105, 108, 100, 101, 59, 1, 296, 4, 2, 107, 109, 2347, 2352, 99, 121, 59, 1, 1030, 108, 5, 207, 1, 59, 2358, 1, 207, 4, 5, 99, 102, 111, 115, 117, 2372, 2386, 2391, 2397, 2414, 4, 2, 105, 121, 2378, 2383, 114, 99, 59, 1, 308, 59, 1, 1049, 114, 59, 3, 55349, 56589, 112, 102, 59, 3, 55349, 56641, 4, 2, 99, 101, 2403, 2408, 114, 59, 3, 55349, 56485, 114, 99, 121, 59, 1, 1032, 107, 99, 121, 59, 1, 1028, 4, 7, 72, 74, 97, 99, 102, 111, 115, 2436, 2441, 2446, 2452, 2467, 2472, 2478, 99, 121, 59, 1, 1061, 99, 121, 59, 1, 1036, 112, 112, 97, 59, 1, 922, 4, 2, 101, 121, 2458, 2464, 100, 105, 108, 59, 1, 310, 59, 1, 1050, 114, 59, 3, 55349, 56590, 112, 102, 59, 3, 55349, 56642, 99, 114, 59, 3, 55349, 56486, 4, 11, 74, 84, 97, 99, 101, 102, 108, 109, 111, 115, 116, 2508, 2513, 2520, 2562, 2585, 2981, 2986, 3004, 3011, 3146, 3167, 99, 121, 59, 1, 1033, 5, 60, 1, 59, 2518, 1, 60, 4, 5, 99, 109, 110, 112, 114, 2532, 2538, 2544, 2548, 2558, 117, 116, 101, 59, 1, 313, 98, 100, 97, 59, 1, 923, 103, 59, 1, 10218, 108, 97, 99, 101, 116, 114, 102, 59, 1, 8466, 114, 59, 1, 8606, 4, 3, 97, 101, 121, 2570, 2576, 2582, 114, 111, 110, 59, 1, 317, 100, 105, 108, 59, 1, 315, 59, 1, 1051, 4, 2, 102, 115, 2591, 2907, 116, 4, 10, 65, 67, 68, 70, 82, 84, 85, 86, 97, 114, 2614, 2663, 2672, 2728, 2735, 2760, 2820, 2870, 2888, 2895, 4, 2, 110, 114, 2620, 2633, 103, 108, 101, 66, 114, 97, 99, 107, 101, 116, 59, 1, 10216, 114, 111, 119, 4, 3, 59, 66, 82, 2644, 2646, 2651, 1, 8592, 97, 114, 59, 1, 8676, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 8646, 101, 105, 108, 105, 110, 103, 59, 1, 8968, 111, 4, 2, 117, 119, 2679, 2692, 98, 108, 101, 66, 114, 97, 99, 107, 101, 116, 59, 1, 10214, 110, 4, 2, 84, 86, 2699, 2710, 101, 101, 86, 101, 99, 116, 111, 114, 59, 1, 10593, 101, 99, 116, 111, 114, 4, 2, 59, 66, 2721, 2723, 1, 8643, 97, 114, 59, 1, 10585, 108, 111, 111, 114, 59, 1, 8970, 105, 103, 104, 116, 4, 2, 65, 86, 2745, 2752, 114, 114, 111, 119, 59, 1, 8596, 101, 99, 116, 111, 114, 59, 1, 10574, 4, 2, 101, 114, 2766, 2792, 101, 4, 3, 59, 65, 86, 2775, 2777, 2784, 1, 8867, 114, 114, 111, 119, 59, 1, 8612, 101, 99, 116, 111, 114, 59, 1, 10586, 105, 97, 110, 103, 108, 101, 4, 3, 59, 66, 69, 2806, 2808, 2813, 1, 8882, 97, 114, 59, 1, 10703, 113, 117, 97, 108, 59, 1, 8884, 112, 4, 3, 68, 84, 86, 2829, 2841, 2852, 111, 119, 110, 86, 101, 99, 116, 111, 114, 59, 1, 10577, 101, 101, 86, 101, 99, 116, 111, 114, 59, 1, 10592, 101, 99, 116, 111, 114, 4, 2, 59, 66, 2863, 2865, 1, 8639, 97, 114, 59, 1, 10584, 101, 99, 116, 111, 114, 4, 2, 59, 66, 2881, 2883, 1, 8636, 97, 114, 59, 1, 10578, 114, 114, 111, 119, 59, 1, 8656, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8660, 115, 4, 6, 69, 70, 71, 76, 83, 84, 2922, 2936, 2947, 2956, 2962, 2974, 113, 117, 97, 108, 71, 114, 101, 97, 116, 101, 114, 59, 1, 8922, 117, 108, 108, 69, 113, 117, 97, 108, 59, 1, 8806, 114, 101, 97, 116, 101, 114, 59, 1, 8822, 101, 115, 115, 59, 1, 10913, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 1, 10877, 105, 108, 100, 101, 59, 1, 8818, 114, 59, 3, 55349, 56591, 4, 2, 59, 101, 2992, 2994, 1, 8920, 102, 116, 97, 114, 114, 111, 119, 59, 1, 8666, 105, 100, 111, 116, 59, 1, 319, 4, 3, 110, 112, 119, 3019, 3110, 3115, 103, 4, 4, 76, 82, 108, 114, 3030, 3058, 3070, 3098, 101, 102, 116, 4, 2, 65, 82, 3039, 3046, 114, 114, 111, 119, 59, 1, 10229, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 10231, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 10230, 101, 102, 116, 4, 2, 97, 114, 3079, 3086, 114, 114, 111, 119, 59, 1, 10232, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 10234, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 10233, 102, 59, 3, 55349, 56643, 101, 114, 4, 2, 76, 82, 3123, 3134, 101, 102, 116, 65, 114, 114, 111, 119, 59, 1, 8601, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 8600, 4, 3, 99, 104, 116, 3154, 3158, 3161, 114, 59, 1, 8466, 59, 1, 8624, 114, 111, 107, 59, 1, 321, 59, 1, 8810, 4, 8, 97, 99, 101, 102, 105, 111, 115, 117, 3188, 3192, 3196, 3222, 3227, 3237, 3243, 3248, 112, 59, 1, 10501, 121, 59, 1, 1052, 4, 2, 100, 108, 3202, 3213, 105, 117, 109, 83, 112, 97, 99, 101, 59, 1, 8287, 108, 105, 110, 116, 114, 102, 59, 1, 8499, 114, 59, 3, 55349, 56592, 110, 117, 115, 80, 108, 117, 115, 59, 1, 8723, 112, 102, 59, 3, 55349, 56644, 99, 114, 59, 1, 8499, 59, 1, 924, 4, 9, 74, 97, 99, 101, 102, 111, 115, 116, 117, 3271, 3276, 3283, 3306, 3422, 3427, 4120, 4126, 4137, 99, 121, 59, 1, 1034, 99, 117, 116, 101, 59, 1, 323, 4, 3, 97, 101, 121, 3291, 3297, 3303, 114, 111, 110, 59, 1, 327, 100, 105, 108, 59, 1, 325, 59, 1, 1053, 4, 3, 103, 115, 119, 3314, 3380, 3415, 97, 116, 105, 118, 101, 4, 3, 77, 84, 86, 3327, 3340, 3365, 101, 100, 105, 117, 109, 83, 112, 97, 99, 101, 59, 1, 8203, 104, 105, 4, 2, 99, 110, 3348, 3357, 107, 83, 112, 97, 99, 101, 59, 1, 8203, 83, 112, 97, 99, 101, 59, 1, 8203, 101, 114, 121, 84, 104, 105, 110, 83, 112, 97, 99, 101, 59, 1, 8203, 116, 101, 100, 4, 2, 71, 76, 3389, 3405, 114, 101, 97, 116, 101, 114, 71, 114, 101, 97, 116, 101, 114, 59, 1, 8811, 101, 115, 115, 76, 101, 115, 115, 59, 1, 8810, 76, 105, 110, 101, 59, 1, 10, 114, 59, 3, 55349, 56593, 4, 4, 66, 110, 112, 116, 3437, 3444, 3460, 3464, 114, 101, 97, 107, 59, 1, 8288, 66, 114, 101, 97, 107, 105, 110, 103, 83, 112, 97, 99, 101, 59, 1, 160, 102, 59, 1, 8469, 4, 13, 59, 67, 68, 69, 71, 72, 76, 78, 80, 82, 83, 84, 86, 3492, 3494, 3517, 3536, 3578, 3657, 3685, 3784, 3823, 3860, 3915, 4066, 4107, 1, 10988, 4, 2, 111, 117, 3500, 3510, 110, 103, 114, 117, 101, 110, 116, 59, 1, 8802, 112, 67, 97, 112, 59, 1, 8813, 111, 117, 98, 108, 101, 86, 101, 114, 116, 105, 99, 97, 108, 66, 97, 114, 59, 1, 8742, 4, 3, 108, 113, 120, 3544, 3552, 3571, 101, 109, 101, 110, 116, 59, 1, 8713, 117, 97, 108, 4, 2, 59, 84, 3561, 3563, 1, 8800, 105, 108, 100, 101, 59, 3, 8770, 824, 105, 115, 116, 115, 59, 1, 8708, 114, 101, 97, 116, 101, 114, 4, 7, 59, 69, 70, 71, 76, 83, 84, 3600, 3602, 3609, 3621, 3631, 3637, 3650, 1, 8815, 113, 117, 97, 108, 59, 1, 8817, 117, 108, 108, 69, 113, 117, 97, 108, 59, 3, 8807, 824, 114, 101, 97, 116, 101, 114, 59, 3, 8811, 824, 101, 115, 115, 59, 1, 8825, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 3, 10878, 824, 105, 108, 100, 101, 59, 1, 8821, 117, 109, 112, 4, 2, 68, 69, 3666, 3677, 111, 119, 110, 72, 117, 109, 112, 59, 3, 8782, 824, 113, 117, 97, 108, 59, 3, 8783, 824, 101, 4, 2, 102, 115, 3692, 3724, 116, 84, 114, 105, 97, 110, 103, 108, 101, 4, 3, 59, 66, 69, 3709, 3711, 3717, 1, 8938, 97, 114, 59, 3, 10703, 824, 113, 117, 97, 108, 59, 1, 8940, 115, 4, 6, 59, 69, 71, 76, 83, 84, 3739, 3741, 3748, 3757, 3764, 3777, 1, 8814, 113, 117, 97, 108, 59, 1, 8816, 114, 101, 97, 116, 101, 114, 59, 1, 8824, 101, 115, 115, 59, 3, 8810, 824, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 3, 10877, 824, 105, 108, 100, 101, 59, 1, 8820, 101, 115, 116, 101, 100, 4, 2, 71, 76, 3795, 3812, 114, 101, 97, 116, 101, 114, 71, 114, 101, 97, 116, 101, 114, 59, 3, 10914, 824, 101, 115, 115, 76, 101, 115, 115, 59, 3, 10913, 824, 114, 101, 99, 101, 100, 101, 115, 4, 3, 59, 69, 83, 3838, 3840, 3848, 1, 8832, 113, 117, 97, 108, 59, 3, 10927, 824, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 1, 8928, 4, 2, 101, 105, 3866, 3881, 118, 101, 114, 115, 101, 69, 108, 101, 109, 101, 110, 116, 59, 1, 8716, 103, 104, 116, 84, 114, 105, 97, 110, 103, 108, 101, 4, 3, 59, 66, 69, 3900, 3902, 3908, 1, 8939, 97, 114, 59, 3, 10704, 824, 113, 117, 97, 108, 59, 1, 8941, 4, 2, 113, 117, 3921, 3973, 117, 97, 114, 101, 83, 117, 4, 2, 98, 112, 3933, 3952, 115, 101, 116, 4, 2, 59, 69, 3942, 3945, 3, 8847, 824, 113, 117, 97, 108, 59, 1, 8930, 101, 114, 115, 101, 116, 4, 2, 59, 69, 3963, 3966, 3, 8848, 824, 113, 117, 97, 108, 59, 1, 8931, 4, 3, 98, 99, 112, 3981, 4e3, 4045, 115, 101, 116, 4, 2, 59, 69, 3990, 3993, 3, 8834, 8402, 113, 117, 97, 108, 59, 1, 8840, 99, 101, 101, 100, 115, 4, 4, 59, 69, 83, 84, 4015, 4017, 4025, 4037, 1, 8833, 113, 117, 97, 108, 59, 3, 10928, 824, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 1, 8929, 105, 108, 100, 101, 59, 3, 8831, 824, 101, 114, 115, 101, 116, 4, 2, 59, 69, 4056, 4059, 3, 8835, 8402, 113, 117, 97, 108, 59, 1, 8841, 105, 108, 100, 101, 4, 4, 59, 69, 70, 84, 4080, 4082, 4089, 4100, 1, 8769, 113, 117, 97, 108, 59, 1, 8772, 117, 108, 108, 69, 113, 117, 97, 108, 59, 1, 8775, 105, 108, 100, 101, 59, 1, 8777, 101, 114, 116, 105, 99, 97, 108, 66, 97, 114, 59, 1, 8740, 99, 114, 59, 3, 55349, 56489, 105, 108, 100, 101, 5, 209, 1, 59, 4135, 1, 209, 59, 1, 925, 4, 14, 69, 97, 99, 100, 102, 103, 109, 111, 112, 114, 115, 116, 117, 118, 4170, 4176, 4187, 4205, 4212, 4217, 4228, 4253, 4259, 4292, 4295, 4316, 4337, 4346, 108, 105, 103, 59, 1, 338, 99, 117, 116, 101, 5, 211, 1, 59, 4185, 1, 211, 4, 2, 105, 121, 4193, 4202, 114, 99, 5, 212, 1, 59, 4200, 1, 212, 59, 1, 1054, 98, 108, 97, 99, 59, 1, 336, 114, 59, 3, 55349, 56594, 114, 97, 118, 101, 5, 210, 1, 59, 4226, 1, 210, 4, 3, 97, 101, 105, 4236, 4241, 4246, 99, 114, 59, 1, 332, 103, 97, 59, 1, 937, 99, 114, 111, 110, 59, 1, 927, 112, 102, 59, 3, 55349, 56646, 101, 110, 67, 117, 114, 108, 121, 4, 2, 68, 81, 4272, 4285, 111, 117, 98, 108, 101, 81, 117, 111, 116, 101, 59, 1, 8220, 117, 111, 116, 101, 59, 1, 8216, 59, 1, 10836, 4, 2, 99, 108, 4301, 4306, 114, 59, 3, 55349, 56490, 97, 115, 104, 5, 216, 1, 59, 4314, 1, 216, 105, 4, 2, 108, 109, 4323, 4332, 100, 101, 5, 213, 1, 59, 4330, 1, 213, 101, 115, 59, 1, 10807, 109, 108, 5, 214, 1, 59, 4344, 1, 214, 101, 114, 4, 2, 66, 80, 4354, 4380, 4, 2, 97, 114, 4360, 4364, 114, 59, 1, 8254, 97, 99, 4, 2, 101, 107, 4372, 4375, 59, 1, 9182, 101, 116, 59, 1, 9140, 97, 114, 101, 110, 116, 104, 101, 115, 105, 115, 59, 1, 9180, 4, 9, 97, 99, 102, 104, 105, 108, 111, 114, 115, 4413, 4422, 4426, 4431, 4435, 4438, 4448, 4471, 4561, 114, 116, 105, 97, 108, 68, 59, 1, 8706, 121, 59, 1, 1055, 114, 59, 3, 55349, 56595, 105, 59, 1, 934, 59, 1, 928, 117, 115, 77, 105, 110, 117, 115, 59, 1, 177, 4, 2, 105, 112, 4454, 4467, 110, 99, 97, 114, 101, 112, 108, 97, 110, 101, 59, 1, 8460, 102, 59, 1, 8473, 4, 4, 59, 101, 105, 111, 4481, 4483, 4526, 4531, 1, 10939, 99, 101, 100, 101, 115, 4, 4, 59, 69, 83, 84, 4498, 4500, 4507, 4519, 1, 8826, 113, 117, 97, 108, 59, 1, 10927, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 1, 8828, 105, 108, 100, 101, 59, 1, 8830, 109, 101, 59, 1, 8243, 4, 2, 100, 112, 4537, 4543, 117, 99, 116, 59, 1, 8719, 111, 114, 116, 105, 111, 110, 4, 2, 59, 97, 4555, 4557, 1, 8759, 108, 59, 1, 8733, 4, 2, 99, 105, 4567, 4572, 114, 59, 3, 55349, 56491, 59, 1, 936, 4, 4, 85, 102, 111, 115, 4585, 4594, 4599, 4604, 79, 84, 5, 34, 1, 59, 4592, 1, 34, 114, 59, 3, 55349, 56596, 112, 102, 59, 1, 8474, 99, 114, 59, 3, 55349, 56492, 4, 12, 66, 69, 97, 99, 101, 102, 104, 105, 111, 114, 115, 117, 4636, 4642, 4650, 4681, 4704, 4763, 4767, 4771, 5047, 5069, 5081, 5094, 97, 114, 114, 59, 1, 10512, 71, 5, 174, 1, 59, 4648, 1, 174, 4, 3, 99, 110, 114, 4658, 4664, 4668, 117, 116, 101, 59, 1, 340, 103, 59, 1, 10219, 114, 4, 2, 59, 116, 4675, 4677, 1, 8608, 108, 59, 1, 10518, 4, 3, 97, 101, 121, 4689, 4695, 4701, 114, 111, 110, 59, 1, 344, 100, 105, 108, 59, 1, 342, 59, 1, 1056, 4, 2, 59, 118, 4710, 4712, 1, 8476, 101, 114, 115, 101, 4, 2, 69, 85, 4722, 4748, 4, 2, 108, 113, 4728, 4736, 101, 109, 101, 110, 116, 59, 1, 8715, 117, 105, 108, 105, 98, 114, 105, 117, 109, 59, 1, 8651, 112, 69, 113, 117, 105, 108, 105, 98, 114, 105, 117, 109, 59, 1, 10607, 114, 59, 1, 8476, 111, 59, 1, 929, 103, 104, 116, 4, 8, 65, 67, 68, 70, 84, 85, 86, 97, 4792, 4840, 4849, 4905, 4912, 4972, 5022, 5040, 4, 2, 110, 114, 4798, 4811, 103, 108, 101, 66, 114, 97, 99, 107, 101, 116, 59, 1, 10217, 114, 111, 119, 4, 3, 59, 66, 76, 4822, 4824, 4829, 1, 8594, 97, 114, 59, 1, 8677, 101, 102, 116, 65, 114, 114, 111, 119, 59, 1, 8644, 101, 105, 108, 105, 110, 103, 59, 1, 8969, 111, 4, 2, 117, 119, 4856, 4869, 98, 108, 101, 66, 114, 97, 99, 107, 101, 116, 59, 1, 10215, 110, 4, 2, 84, 86, 4876, 4887, 101, 101, 86, 101, 99, 116, 111, 114, 59, 1, 10589, 101, 99, 116, 111, 114, 4, 2, 59, 66, 4898, 4900, 1, 8642, 97, 114, 59, 1, 10581, 108, 111, 111, 114, 59, 1, 8971, 4, 2, 101, 114, 4918, 4944, 101, 4, 3, 59, 65, 86, 4927, 4929, 4936, 1, 8866, 114, 114, 111, 119, 59, 1, 8614, 101, 99, 116, 111, 114, 59, 1, 10587, 105, 97, 110, 103, 108, 101, 4, 3, 59, 66, 69, 4958, 4960, 4965, 1, 8883, 97, 114, 59, 1, 10704, 113, 117, 97, 108, 59, 1, 8885, 112, 4, 3, 68, 84, 86, 4981, 4993, 5004, 111, 119, 110, 86, 101, 99, 116, 111, 114, 59, 1, 10575, 101, 101, 86, 101, 99, 116, 111, 114, 59, 1, 10588, 101, 99, 116, 111, 114, 4, 2, 59, 66, 5015, 5017, 1, 8638, 97, 114, 59, 1, 10580, 101, 99, 116, 111, 114, 4, 2, 59, 66, 5033, 5035, 1, 8640, 97, 114, 59, 1, 10579, 114, 114, 111, 119, 59, 1, 8658, 4, 2, 112, 117, 5053, 5057, 102, 59, 1, 8477, 110, 100, 73, 109, 112, 108, 105, 101, 115, 59, 1, 10608, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8667, 4, 2, 99, 104, 5087, 5091, 114, 59, 1, 8475, 59, 1, 8625, 108, 101, 68, 101, 108, 97, 121, 101, 100, 59, 1, 10740, 4, 13, 72, 79, 97, 99, 102, 104, 105, 109, 111, 113, 115, 116, 117, 5134, 5150, 5157, 5164, 5198, 5203, 5259, 5265, 5277, 5283, 5374, 5380, 5385, 4, 2, 67, 99, 5140, 5146, 72, 99, 121, 59, 1, 1065, 121, 59, 1, 1064, 70, 84, 99, 121, 59, 1, 1068, 99, 117, 116, 101, 59, 1, 346, 4, 5, 59, 97, 101, 105, 121, 5176, 5178, 5184, 5190, 5195, 1, 10940, 114, 111, 110, 59, 1, 352, 100, 105, 108, 59, 1, 350, 114, 99, 59, 1, 348, 59, 1, 1057, 114, 59, 3, 55349, 56598, 111, 114, 116, 4, 4, 68, 76, 82, 85, 5216, 5227, 5238, 5250, 111, 119, 110, 65, 114, 114, 111, 119, 59, 1, 8595, 101, 102, 116, 65, 114, 114, 111, 119, 59, 1, 8592, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 8594, 112, 65, 114, 114, 111, 119, 59, 1, 8593, 103, 109, 97, 59, 1, 931, 97, 108, 108, 67, 105, 114, 99, 108, 101, 59, 1, 8728, 112, 102, 59, 3, 55349, 56650, 4, 2, 114, 117, 5289, 5293, 116, 59, 1, 8730, 97, 114, 101, 4, 4, 59, 73, 83, 85, 5306, 5308, 5322, 5367, 1, 9633, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 59, 1, 8851, 117, 4, 2, 98, 112, 5329, 5347, 115, 101, 116, 4, 2, 59, 69, 5338, 5340, 1, 8847, 113, 117, 97, 108, 59, 1, 8849, 101, 114, 115, 101, 116, 4, 2, 59, 69, 5358, 5360, 1, 8848, 113, 117, 97, 108, 59, 1, 8850, 110, 105, 111, 110, 59, 1, 8852, 99, 114, 59, 3, 55349, 56494, 97, 114, 59, 1, 8902, 4, 4, 98, 99, 109, 112, 5395, 5420, 5475, 5478, 4, 2, 59, 115, 5401, 5403, 1, 8912, 101, 116, 4, 2, 59, 69, 5411, 5413, 1, 8912, 113, 117, 97, 108, 59, 1, 8838, 4, 2, 99, 104, 5426, 5468, 101, 101, 100, 115, 4, 4, 59, 69, 83, 84, 5440, 5442, 5449, 5461, 1, 8827, 113, 117, 97, 108, 59, 1, 10928, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 1, 8829, 105, 108, 100, 101, 59, 1, 8831, 84, 104, 97, 116, 59, 1, 8715, 59, 1, 8721, 4, 3, 59, 101, 115, 5486, 5488, 5507, 1, 8913, 114, 115, 101, 116, 4, 2, 59, 69, 5498, 5500, 1, 8835, 113, 117, 97, 108, 59, 1, 8839, 101, 116, 59, 1, 8913, 4, 11, 72, 82, 83, 97, 99, 102, 104, 105, 111, 114, 115, 5536, 5546, 5552, 5567, 5579, 5602, 5607, 5655, 5695, 5701, 5711, 79, 82, 78, 5, 222, 1, 59, 5544, 1, 222, 65, 68, 69, 59, 1, 8482, 4, 2, 72, 99, 5558, 5563, 99, 121, 59, 1, 1035, 121, 59, 1, 1062, 4, 2, 98, 117, 5573, 5576, 59, 1, 9, 59, 1, 932, 4, 3, 97, 101, 121, 5587, 5593, 5599, 114, 111, 110, 59, 1, 356, 100, 105, 108, 59, 1, 354, 59, 1, 1058, 114, 59, 3, 55349, 56599, 4, 2, 101, 105, 5613, 5631, 4, 2, 114, 116, 5619, 5627, 101, 102, 111, 114, 101, 59, 1, 8756, 97, 59, 1, 920, 4, 2, 99, 110, 5637, 5647, 107, 83, 112, 97, 99, 101, 59, 3, 8287, 8202, 83, 112, 97, 99, 101, 59, 1, 8201, 108, 100, 101, 4, 4, 59, 69, 70, 84, 5668, 5670, 5677, 5688, 1, 8764, 113, 117, 97, 108, 59, 1, 8771, 117, 108, 108, 69, 113, 117, 97, 108, 59, 1, 8773, 105, 108, 100, 101, 59, 1, 8776, 112, 102, 59, 3, 55349, 56651, 105, 112, 108, 101, 68, 111, 116, 59, 1, 8411, 4, 2, 99, 116, 5717, 5722, 114, 59, 3, 55349, 56495, 114, 111, 107, 59, 1, 358, 4, 14, 97, 98, 99, 100, 102, 103, 109, 110, 111, 112, 114, 115, 116, 117, 5758, 5789, 5805, 5823, 5830, 5835, 5846, 5852, 5921, 5937, 6089, 6095, 6101, 6108, 4, 2, 99, 114, 5764, 5774, 117, 116, 101, 5, 218, 1, 59, 5772, 1, 218, 114, 4, 2, 59, 111, 5781, 5783, 1, 8607, 99, 105, 114, 59, 1, 10569, 114, 4, 2, 99, 101, 5796, 5800, 121, 59, 1, 1038, 118, 101, 59, 1, 364, 4, 2, 105, 121, 5811, 5820, 114, 99, 5, 219, 1, 59, 5818, 1, 219, 59, 1, 1059, 98, 108, 97, 99, 59, 1, 368, 114, 59, 3, 55349, 56600, 114, 97, 118, 101, 5, 217, 1, 59, 5844, 1, 217, 97, 99, 114, 59, 1, 362, 4, 2, 100, 105, 5858, 5905, 101, 114, 4, 2, 66, 80, 5866, 5892, 4, 2, 97, 114, 5872, 5876, 114, 59, 1, 95, 97, 99, 4, 2, 101, 107, 5884, 5887, 59, 1, 9183, 101, 116, 59, 1, 9141, 97, 114, 101, 110, 116, 104, 101, 115, 105, 115, 59, 1, 9181, 111, 110, 4, 2, 59, 80, 5913, 5915, 1, 8899, 108, 117, 115, 59, 1, 8846, 4, 2, 103, 112, 5927, 5932, 111, 110, 59, 1, 370, 102, 59, 3, 55349, 56652, 4, 8, 65, 68, 69, 84, 97, 100, 112, 115, 5955, 5985, 5996, 6009, 6026, 6033, 6044, 6075, 114, 114, 111, 119, 4, 3, 59, 66, 68, 5967, 5969, 5974, 1, 8593, 97, 114, 59, 1, 10514, 111, 119, 110, 65, 114, 114, 111, 119, 59, 1, 8645, 111, 119, 110, 65, 114, 114, 111, 119, 59, 1, 8597, 113, 117, 105, 108, 105, 98, 114, 105, 117, 109, 59, 1, 10606, 101, 101, 4, 2, 59, 65, 6017, 6019, 1, 8869, 114, 114, 111, 119, 59, 1, 8613, 114, 114, 111, 119, 59, 1, 8657, 111, 119, 110, 97, 114, 114, 111, 119, 59, 1, 8661, 101, 114, 4, 2, 76, 82, 6052, 6063, 101, 102, 116, 65, 114, 114, 111, 119, 59, 1, 8598, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 8599, 105, 4, 2, 59, 108, 6082, 6084, 1, 978, 111, 110, 59, 1, 933, 105, 110, 103, 59, 1, 366, 99, 114, 59, 3, 55349, 56496, 105, 108, 100, 101, 59, 1, 360, 109, 108, 5, 220, 1, 59, 6115, 1, 220, 4, 9, 68, 98, 99, 100, 101, 102, 111, 115, 118, 6137, 6143, 6148, 6152, 6166, 6250, 6255, 6261, 6267, 97, 115, 104, 59, 1, 8875, 97, 114, 59, 1, 10987, 121, 59, 1, 1042, 97, 115, 104, 4, 2, 59, 108, 6161, 6163, 1, 8873, 59, 1, 10982, 4, 2, 101, 114, 6172, 6175, 59, 1, 8897, 4, 3, 98, 116, 121, 6183, 6188, 6238, 97, 114, 59, 1, 8214, 4, 2, 59, 105, 6194, 6196, 1, 8214, 99, 97, 108, 4, 4, 66, 76, 83, 84, 6209, 6214, 6220, 6231, 97, 114, 59, 1, 8739, 105, 110, 101, 59, 1, 124, 101, 112, 97, 114, 97, 116, 111, 114, 59, 1, 10072, 105, 108, 100, 101, 59, 1, 8768, 84, 104, 105, 110, 83, 112, 97, 99, 101, 59, 1, 8202, 114, 59, 3, 55349, 56601, 112, 102, 59, 3, 55349, 56653, 99, 114, 59, 3, 55349, 56497, 100, 97, 115, 104, 59, 1, 8874, 4, 5, 99, 101, 102, 111, 115, 6286, 6292, 6298, 6303, 6309, 105, 114, 99, 59, 1, 372, 100, 103, 101, 59, 1, 8896, 114, 59, 3, 55349, 56602, 112, 102, 59, 3, 55349, 56654, 99, 114, 59, 3, 55349, 56498, 4, 4, 102, 105, 111, 115, 6325, 6330, 6333, 6339, 114, 59, 3, 55349, 56603, 59, 1, 926, 112, 102, 59, 3, 55349, 56655, 99, 114, 59, 3, 55349, 56499, 4, 9, 65, 73, 85, 97, 99, 102, 111, 115, 117, 6365, 6370, 6375, 6380, 6391, 6405, 6410, 6416, 6422, 99, 121, 59, 1, 1071, 99, 121, 59, 1, 1031, 99, 121, 59, 1, 1070, 99, 117, 116, 101, 5, 221, 1, 59, 6389, 1, 221, 4, 2, 105, 121, 6397, 6402, 114, 99, 59, 1, 374, 59, 1, 1067, 114, 59, 3, 55349, 56604, 112, 102, 59, 3, 55349, 56656, 99, 114, 59, 3, 55349, 56500, 109, 108, 59, 1, 376, 4, 8, 72, 97, 99, 100, 101, 102, 111, 115, 6445, 6450, 6457, 6472, 6477, 6501, 6505, 6510, 99, 121, 59, 1, 1046, 99, 117, 116, 101, 59, 1, 377, 4, 2, 97, 121, 6463, 6469, 114, 111, 110, 59, 1, 381, 59, 1, 1047, 111, 116, 59, 1, 379, 4, 2, 114, 116, 6483, 6497, 111, 87, 105, 100, 116, 104, 83, 112, 97, 99, 101, 59, 1, 8203, 97, 59, 1, 918, 114, 59, 1, 8488, 112, 102, 59, 1, 8484, 99, 114, 59, 3, 55349, 56501, 4, 16, 97, 98, 99, 101, 102, 103, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 6550, 6561, 6568, 6612, 6622, 6634, 6645, 6672, 6699, 6854, 6870, 6923, 6933, 6963, 6974, 6983, 99, 117, 116, 101, 5, 225, 1, 59, 6559, 1, 225, 114, 101, 118, 101, 59, 1, 259, 4, 6, 59, 69, 100, 105, 117, 121, 6582, 6584, 6588, 6591, 6600, 6609, 1, 8766, 59, 3, 8766, 819, 59, 1, 8767, 114, 99, 5, 226, 1, 59, 6598, 1, 226, 116, 101, 5, 180, 1, 59, 6607, 1, 180, 59, 1, 1072, 108, 105, 103, 5, 230, 1, 59, 6620, 1, 230, 4, 2, 59, 114, 6628, 6630, 1, 8289, 59, 3, 55349, 56606, 114, 97, 118, 101, 5, 224, 1, 59, 6643, 1, 224, 4, 2, 101, 112, 6651, 6667, 4, 2, 102, 112, 6657, 6663, 115, 121, 109, 59, 1, 8501, 104, 59, 1, 8501, 104, 97, 59, 1, 945, 4, 2, 97, 112, 6678, 6692, 4, 2, 99, 108, 6684, 6688, 114, 59, 1, 257, 103, 59, 1, 10815, 5, 38, 1, 59, 6697, 1, 38, 4, 2, 100, 103, 6705, 6737, 4, 5, 59, 97, 100, 115, 118, 6717, 6719, 6724, 6727, 6734, 1, 8743, 110, 100, 59, 1, 10837, 59, 1, 10844, 108, 111, 112, 101, 59, 1, 10840, 59, 1, 10842, 4, 7, 59, 101, 108, 109, 114, 115, 122, 6753, 6755, 6758, 6762, 6814, 6835, 6848, 1, 8736, 59, 1, 10660, 101, 59, 1, 8736, 115, 100, 4, 2, 59, 97, 6770, 6772, 1, 8737, 4, 8, 97, 98, 99, 100, 101, 102, 103, 104, 6790, 6793, 6796, 6799, 6802, 6805, 6808, 6811, 59, 1, 10664, 59, 1, 10665, 59, 1, 10666, 59, 1, 10667, 59, 1, 10668, 59, 1, 10669, 59, 1, 10670, 59, 1, 10671, 116, 4, 2, 59, 118, 6821, 6823, 1, 8735, 98, 4, 2, 59, 100, 6830, 6832, 1, 8894, 59, 1, 10653, 4, 2, 112, 116, 6841, 6845, 104, 59, 1, 8738, 59, 1, 197, 97, 114, 114, 59, 1, 9084, 4, 2, 103, 112, 6860, 6865, 111, 110, 59, 1, 261, 102, 59, 3, 55349, 56658, 4, 7, 59, 69, 97, 101, 105, 111, 112, 6886, 6888, 6891, 6897, 6900, 6904, 6908, 1, 8776, 59, 1, 10864, 99, 105, 114, 59, 1, 10863, 59, 1, 8778, 100, 59, 1, 8779, 115, 59, 1, 39, 114, 111, 120, 4, 2, 59, 101, 6917, 6919, 1, 8776, 113, 59, 1, 8778, 105, 110, 103, 5, 229, 1, 59, 6931, 1, 229, 4, 3, 99, 116, 121, 6941, 6946, 6949, 114, 59, 3, 55349, 56502, 59, 1, 42, 109, 112, 4, 2, 59, 101, 6957, 6959, 1, 8776, 113, 59, 1, 8781, 105, 108, 100, 101, 5, 227, 1, 59, 6972, 1, 227, 109, 108, 5, 228, 1, 59, 6981, 1, 228, 4, 2, 99, 105, 6989, 6997, 111, 110, 105, 110, 116, 59, 1, 8755, 110, 116, 59, 1, 10769, 4, 16, 78, 97, 98, 99, 100, 101, 102, 105, 107, 108, 110, 111, 112, 114, 115, 117, 7036, 7041, 7119, 7135, 7149, 7155, 7219, 7224, 7347, 7354, 7463, 7489, 7786, 7793, 7814, 7866, 111, 116, 59, 1, 10989, 4, 2, 99, 114, 7047, 7094, 107, 4, 4, 99, 101, 112, 115, 7058, 7064, 7073, 7080, 111, 110, 103, 59, 1, 8780, 112, 115, 105, 108, 111, 110, 59, 1, 1014, 114, 105, 109, 101, 59, 1, 8245, 105, 109, 4, 2, 59, 101, 7088, 7090, 1, 8765, 113, 59, 1, 8909, 4, 2, 118, 119, 7100, 7105, 101, 101, 59, 1, 8893, 101, 100, 4, 2, 59, 103, 7113, 7115, 1, 8965, 101, 59, 1, 8965, 114, 107, 4, 2, 59, 116, 7127, 7129, 1, 9141, 98, 114, 107, 59, 1, 9142, 4, 2, 111, 121, 7141, 7146, 110, 103, 59, 1, 8780, 59, 1, 1073, 113, 117, 111, 59, 1, 8222, 4, 5, 99, 109, 112, 114, 116, 7167, 7181, 7188, 7193, 7199, 97, 117, 115, 4, 2, 59, 101, 7176, 7178, 1, 8757, 59, 1, 8757, 112, 116, 121, 118, 59, 1, 10672, 115, 105, 59, 1, 1014, 110, 111, 117, 59, 1, 8492, 4, 3, 97, 104, 119, 7207, 7210, 7213, 59, 1, 946, 59, 1, 8502, 101, 101, 110, 59, 1, 8812, 114, 59, 3, 55349, 56607, 103, 4, 7, 99, 111, 115, 116, 117, 118, 119, 7241, 7262, 7288, 7305, 7328, 7335, 7340, 4, 3, 97, 105, 117, 7249, 7253, 7258, 112, 59, 1, 8898, 114, 99, 59, 1, 9711, 112, 59, 1, 8899, 4, 3, 100, 112, 116, 7270, 7275, 7281, 111, 116, 59, 1, 10752, 108, 117, 115, 59, 1, 10753, 105, 109, 101, 115, 59, 1, 10754, 4, 2, 113, 116, 7294, 7300, 99, 117, 112, 59, 1, 10758, 97, 114, 59, 1, 9733, 114, 105, 97, 110, 103, 108, 101, 4, 2, 100, 117, 7318, 7324, 111, 119, 110, 59, 1, 9661, 112, 59, 1, 9651, 112, 108, 117, 115, 59, 1, 10756, 101, 101, 59, 1, 8897, 101, 100, 103, 101, 59, 1, 8896, 97, 114, 111, 119, 59, 1, 10509, 4, 3, 97, 107, 111, 7362, 7436, 7458, 4, 2, 99, 110, 7368, 7432, 107, 4, 3, 108, 115, 116, 7377, 7386, 7394, 111, 122, 101, 110, 103, 101, 59, 1, 10731, 113, 117, 97, 114, 101, 59, 1, 9642, 114, 105, 97, 110, 103, 108, 101, 4, 4, 59, 100, 108, 114, 7411, 7413, 7419, 7425, 1, 9652, 111, 119, 110, 59, 1, 9662, 101, 102, 116, 59, 1, 9666, 105, 103, 104, 116, 59, 1, 9656, 107, 59, 1, 9251, 4, 2, 49, 51, 7442, 7454, 4, 2, 50, 52, 7448, 7451, 59, 1, 9618, 59, 1, 9617, 52, 59, 1, 9619, 99, 107, 59, 1, 9608, 4, 2, 101, 111, 7469, 7485, 4, 2, 59, 113, 7475, 7478, 3, 61, 8421, 117, 105, 118, 59, 3, 8801, 8421, 116, 59, 1, 8976, 4, 4, 112, 116, 119, 120, 7499, 7504, 7517, 7523, 102, 59, 3, 55349, 56659, 4, 2, 59, 116, 7510, 7512, 1, 8869, 111, 109, 59, 1, 8869, 116, 105, 101, 59, 1, 8904, 4, 12, 68, 72, 85, 86, 98, 100, 104, 109, 112, 116, 117, 118, 7549, 7571, 7597, 7619, 7655, 7660, 7682, 7708, 7715, 7721, 7728, 7750, 4, 4, 76, 82, 108, 114, 7559, 7562, 7565, 7568, 59, 1, 9559, 59, 1, 9556, 59, 1, 9558, 59, 1, 9555, 4, 5, 59, 68, 85, 100, 117, 7583, 7585, 7588, 7591, 7594, 1, 9552, 59, 1, 9574, 59, 1, 9577, 59, 1, 9572, 59, 1, 9575, 4, 4, 76, 82, 108, 114, 7607, 7610, 7613, 7616, 59, 1, 9565, 59, 1, 9562, 59, 1, 9564, 59, 1, 9561, 4, 7, 59, 72, 76, 82, 104, 108, 114, 7635, 7637, 7640, 7643, 7646, 7649, 7652, 1, 9553, 59, 1, 9580, 59, 1, 9571, 59, 1, 9568, 59, 1, 9579, 59, 1, 9570, 59, 1, 9567, 111, 120, 59, 1, 10697, 4, 4, 76, 82, 108, 114, 7670, 7673, 7676, 7679, 59, 1, 9557, 59, 1, 9554, 59, 1, 9488, 59, 1, 9484, 4, 5, 59, 68, 85, 100, 117, 7694, 7696, 7699, 7702, 7705, 1, 9472, 59, 1, 9573, 59, 1, 9576, 59, 1, 9516, 59, 1, 9524, 105, 110, 117, 115, 59, 1, 8863, 108, 117, 115, 59, 1, 8862, 105, 109, 101, 115, 59, 1, 8864, 4, 4, 76, 82, 108, 114, 7738, 7741, 7744, 7747, 59, 1, 9563, 59, 1, 9560, 59, 1, 9496, 59, 1, 9492, 4, 7, 59, 72, 76, 82, 104, 108, 114, 7766, 7768, 7771, 7774, 7777, 7780, 7783, 1, 9474, 59, 1, 9578, 59, 1, 9569, 59, 1, 9566, 59, 1, 9532, 59, 1, 9508, 59, 1, 9500, 114, 105, 109, 101, 59, 1, 8245, 4, 2, 101, 118, 7799, 7804, 118, 101, 59, 1, 728, 98, 97, 114, 5, 166, 1, 59, 7812, 1, 166, 4, 4, 99, 101, 105, 111, 7824, 7829, 7834, 7846, 114, 59, 3, 55349, 56503, 109, 105, 59, 1, 8271, 109, 4, 2, 59, 101, 7841, 7843, 1, 8765, 59, 1, 8909, 108, 4, 3, 59, 98, 104, 7855, 7857, 7860, 1, 92, 59, 1, 10693, 115, 117, 98, 59, 1, 10184, 4, 2, 108, 109, 7872, 7885, 108, 4, 2, 59, 101, 7879, 7881, 1, 8226, 116, 59, 1, 8226, 112, 4, 3, 59, 69, 101, 7894, 7896, 7899, 1, 8782, 59, 1, 10926, 4, 2, 59, 113, 7905, 7907, 1, 8783, 59, 1, 8783, 4, 15, 97, 99, 100, 101, 102, 104, 105, 108, 111, 114, 115, 116, 117, 119, 121, 7942, 8021, 8075, 8080, 8121, 8126, 8157, 8279, 8295, 8430, 8446, 8485, 8491, 8707, 8726, 4, 3, 99, 112, 114, 7950, 7956, 8007, 117, 116, 101, 59, 1, 263, 4, 6, 59, 97, 98, 99, 100, 115, 7970, 7972, 7977, 7984, 7998, 8003, 1, 8745, 110, 100, 59, 1, 10820, 114, 99, 117, 112, 59, 1, 10825, 4, 2, 97, 117, 7990, 7994, 112, 59, 1, 10827, 112, 59, 1, 10823, 111, 116, 59, 1, 10816, 59, 3, 8745, 65024, 4, 2, 101, 111, 8013, 8017, 116, 59, 1, 8257, 110, 59, 1, 711, 4, 4, 97, 101, 105, 117, 8031, 8046, 8056, 8061, 4, 2, 112, 114, 8037, 8041, 115, 59, 1, 10829, 111, 110, 59, 1, 269, 100, 105, 108, 5, 231, 1, 59, 8054, 1, 231, 114, 99, 59, 1, 265, 112, 115, 4, 2, 59, 115, 8069, 8071, 1, 10828, 109, 59, 1, 10832, 111, 116, 59, 1, 267, 4, 3, 100, 109, 110, 8088, 8097, 8104, 105, 108, 5, 184, 1, 59, 8095, 1, 184, 112, 116, 121, 118, 59, 1, 10674, 116, 5, 162, 2, 59, 101, 8112, 8114, 1, 162, 114, 100, 111, 116, 59, 1, 183, 114, 59, 3, 55349, 56608, 4, 3, 99, 101, 105, 8134, 8138, 8154, 121, 59, 1, 1095, 99, 107, 4, 2, 59, 109, 8146, 8148, 1, 10003, 97, 114, 107, 59, 1, 10003, 59, 1, 967, 114, 4, 7, 59, 69, 99, 101, 102, 109, 115, 8174, 8176, 8179, 8258, 8261, 8268, 8273, 1, 9675, 59, 1, 10691, 4, 3, 59, 101, 108, 8187, 8189, 8193, 1, 710, 113, 59, 1, 8791, 101, 4, 2, 97, 100, 8200, 8223, 114, 114, 111, 119, 4, 2, 108, 114, 8210, 8216, 101, 102, 116, 59, 1, 8634, 105, 103, 104, 116, 59, 1, 8635, 4, 5, 82, 83, 97, 99, 100, 8235, 8238, 8241, 8246, 8252, 59, 1, 174, 59, 1, 9416, 115, 116, 59, 1, 8859, 105, 114, 99, 59, 1, 8858, 97, 115, 104, 59, 1, 8861, 59, 1, 8791, 110, 105, 110, 116, 59, 1, 10768, 105, 100, 59, 1, 10991, 99, 105, 114, 59, 1, 10690, 117, 98, 115, 4, 2, 59, 117, 8288, 8290, 1, 9827, 105, 116, 59, 1, 9827, 4, 4, 108, 109, 110, 112, 8305, 8326, 8376, 8400, 111, 110, 4, 2, 59, 101, 8313, 8315, 1, 58, 4, 2, 59, 113, 8321, 8323, 1, 8788, 59, 1, 8788, 4, 2, 109, 112, 8332, 8344, 97, 4, 2, 59, 116, 8339, 8341, 1, 44, 59, 1, 64, 4, 3, 59, 102, 108, 8352, 8354, 8358, 1, 8705, 110, 59, 1, 8728, 101, 4, 2, 109, 120, 8365, 8371, 101, 110, 116, 59, 1, 8705, 101, 115, 59, 1, 8450, 4, 2, 103, 105, 8382, 8395, 4, 2, 59, 100, 8388, 8390, 1, 8773, 111, 116, 59, 1, 10861, 110, 116, 59, 1, 8750, 4, 3, 102, 114, 121, 8408, 8412, 8417, 59, 3, 55349, 56660, 111, 100, 59, 1, 8720, 5, 169, 2, 59, 115, 8424, 8426, 1, 169, 114, 59, 1, 8471, 4, 2, 97, 111, 8436, 8441, 114, 114, 59, 1, 8629, 115, 115, 59, 1, 10007, 4, 2, 99, 117, 8452, 8457, 114, 59, 3, 55349, 56504, 4, 2, 98, 112, 8463, 8474, 4, 2, 59, 101, 8469, 8471, 1, 10959, 59, 1, 10961, 4, 2, 59, 101, 8480, 8482, 1, 10960, 59, 1, 10962, 100, 111, 116, 59, 1, 8943, 4, 7, 100, 101, 108, 112, 114, 118, 119, 8507, 8522, 8536, 8550, 8600, 8697, 8702, 97, 114, 114, 4, 2, 108, 114, 8516, 8519, 59, 1, 10552, 59, 1, 10549, 4, 2, 112, 115, 8528, 8532, 114, 59, 1, 8926, 99, 59, 1, 8927, 97, 114, 114, 4, 2, 59, 112, 8545, 8547, 1, 8630, 59, 1, 10557, 4, 6, 59, 98, 99, 100, 111, 115, 8564, 8566, 8573, 8587, 8592, 8596, 1, 8746, 114, 99, 97, 112, 59, 1, 10824, 4, 2, 97, 117, 8579, 8583, 112, 59, 1, 10822, 112, 59, 1, 10826, 111, 116, 59, 1, 8845, 114, 59, 1, 10821, 59, 3, 8746, 65024, 4, 4, 97, 108, 114, 118, 8610, 8623, 8663, 8672, 114, 114, 4, 2, 59, 109, 8618, 8620, 1, 8631, 59, 1, 10556, 121, 4, 3, 101, 118, 119, 8632, 8651, 8656, 113, 4, 2, 112, 115, 8639, 8645, 114, 101, 99, 59, 1, 8926, 117, 99, 99, 59, 1, 8927, 101, 101, 59, 1, 8910, 101, 100, 103, 101, 59, 1, 8911, 101, 110, 5, 164, 1, 59, 8670, 1, 164, 101, 97, 114, 114, 111, 119, 4, 2, 108, 114, 8684, 8690, 101, 102, 116, 59, 1, 8630, 105, 103, 104, 116, 59, 1, 8631, 101, 101, 59, 1, 8910, 101, 100, 59, 1, 8911, 4, 2, 99, 105, 8713, 8721, 111, 110, 105, 110, 116, 59, 1, 8754, 110, 116, 59, 1, 8753, 108, 99, 116, 121, 59, 1, 9005, 4, 19, 65, 72, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 111, 114, 115, 116, 117, 119, 122, 8773, 8778, 8783, 8821, 8839, 8854, 8887, 8914, 8930, 8944, 9036, 9041, 9058, 9197, 9227, 9258, 9281, 9297, 9305, 114, 114, 59, 1, 8659, 97, 114, 59, 1, 10597, 4, 4, 103, 108, 114, 115, 8793, 8799, 8805, 8809, 103, 101, 114, 59, 1, 8224, 101, 116, 104, 59, 1, 8504, 114, 59, 1, 8595, 104, 4, 2, 59, 118, 8816, 8818, 1, 8208, 59, 1, 8867, 4, 2, 107, 108, 8827, 8834, 97, 114, 111, 119, 59, 1, 10511, 97, 99, 59, 1, 733, 4, 2, 97, 121, 8845, 8851, 114, 111, 110, 59, 1, 271, 59, 1, 1076, 4, 3, 59, 97, 111, 8862, 8864, 8880, 1, 8518, 4, 2, 103, 114, 8870, 8876, 103, 101, 114, 59, 1, 8225, 114, 59, 1, 8650, 116, 115, 101, 113, 59, 1, 10871, 4, 3, 103, 108, 109, 8895, 8902, 8907, 5, 176, 1, 59, 8900, 1, 176, 116, 97, 59, 1, 948, 112, 116, 121, 118, 59, 1, 10673, 4, 2, 105, 114, 8920, 8926, 115, 104, 116, 59, 1, 10623, 59, 3, 55349, 56609, 97, 114, 4, 2, 108, 114, 8938, 8941, 59, 1, 8643, 59, 1, 8642, 4, 5, 97, 101, 103, 115, 118, 8956, 8986, 8989, 8996, 9001, 109, 4, 3, 59, 111, 115, 8965, 8967, 8983, 1, 8900, 110, 100, 4, 2, 59, 115, 8975, 8977, 1, 8900, 117, 105, 116, 59, 1, 9830, 59, 1, 9830, 59, 1, 168, 97, 109, 109, 97, 59, 1, 989, 105, 110, 59, 1, 8946, 4, 3, 59, 105, 111, 9009, 9011, 9031, 1, 247, 100, 101, 5, 247, 2, 59, 111, 9020, 9022, 1, 247, 110, 116, 105, 109, 101, 115, 59, 1, 8903, 110, 120, 59, 1, 8903, 99, 121, 59, 1, 1106, 99, 4, 2, 111, 114, 9048, 9053, 114, 110, 59, 1, 8990, 111, 112, 59, 1, 8973, 4, 5, 108, 112, 116, 117, 119, 9070, 9076, 9081, 9130, 9144, 108, 97, 114, 59, 1, 36, 102, 59, 3, 55349, 56661, 4, 5, 59, 101, 109, 112, 115, 9093, 9095, 9109, 9116, 9122, 1, 729, 113, 4, 2, 59, 100, 9102, 9104, 1, 8784, 111, 116, 59, 1, 8785, 105, 110, 117, 115, 59, 1, 8760, 108, 117, 115, 59, 1, 8724, 113, 117, 97, 114, 101, 59, 1, 8865, 98, 108, 101, 98, 97, 114, 119, 101, 100, 103, 101, 59, 1, 8966, 110, 4, 3, 97, 100, 104, 9153, 9160, 9172, 114, 114, 111, 119, 59, 1, 8595, 111, 119, 110, 97, 114, 114, 111, 119, 115, 59, 1, 8650, 97, 114, 112, 111, 111, 110, 4, 2, 108, 114, 9184, 9190, 101, 102, 116, 59, 1, 8643, 105, 103, 104, 116, 59, 1, 8642, 4, 2, 98, 99, 9203, 9211, 107, 97, 114, 111, 119, 59, 1, 10512, 4, 2, 111, 114, 9217, 9222, 114, 110, 59, 1, 8991, 111, 112, 59, 1, 8972, 4, 3, 99, 111, 116, 9235, 9248, 9252, 4, 2, 114, 121, 9241, 9245, 59, 3, 55349, 56505, 59, 1, 1109, 108, 59, 1, 10742, 114, 111, 107, 59, 1, 273, 4, 2, 100, 114, 9264, 9269, 111, 116, 59, 1, 8945, 105, 4, 2, 59, 102, 9276, 9278, 1, 9663, 59, 1, 9662, 4, 2, 97, 104, 9287, 9292, 114, 114, 59, 1, 8693, 97, 114, 59, 1, 10607, 97, 110, 103, 108, 101, 59, 1, 10662, 4, 2, 99, 105, 9311, 9315, 121, 59, 1, 1119, 103, 114, 97, 114, 114, 59, 1, 10239, 4, 18, 68, 97, 99, 100, 101, 102, 103, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 9361, 9376, 9398, 9439, 9444, 9447, 9462, 9495, 9531, 9585, 9598, 9614, 9659, 9755, 9771, 9792, 9808, 9826, 4, 2, 68, 111, 9367, 9372, 111, 116, 59, 1, 10871, 116, 59, 1, 8785, 4, 2, 99, 115, 9382, 9392, 117, 116, 101, 5, 233, 1, 59, 9390, 1, 233, 116, 101, 114, 59, 1, 10862, 4, 4, 97, 105, 111, 121, 9408, 9414, 9430, 9436, 114, 111, 110, 59, 1, 283, 114, 4, 2, 59, 99, 9421, 9423, 1, 8790, 5, 234, 1, 59, 9428, 1, 234, 108, 111, 110, 59, 1, 8789, 59, 1, 1101, 111, 116, 59, 1, 279, 59, 1, 8519, 4, 2, 68, 114, 9453, 9458, 111, 116, 59, 1, 8786, 59, 3, 55349, 56610, 4, 3, 59, 114, 115, 9470, 9472, 9482, 1, 10906, 97, 118, 101, 5, 232, 1, 59, 9480, 1, 232, 4, 2, 59, 100, 9488, 9490, 1, 10902, 111, 116, 59, 1, 10904, 4, 4, 59, 105, 108, 115, 9505, 9507, 9515, 9518, 1, 10905, 110, 116, 101, 114, 115, 59, 1, 9191, 59, 1, 8467, 4, 2, 59, 100, 9524, 9526, 1, 10901, 111, 116, 59, 1, 10903, 4, 3, 97, 112, 115, 9539, 9544, 9564, 99, 114, 59, 1, 275, 116, 121, 4, 3, 59, 115, 118, 9554, 9556, 9561, 1, 8709, 101, 116, 59, 1, 8709, 59, 1, 8709, 112, 4, 2, 49, 59, 9571, 9583, 4, 2, 51, 52, 9577, 9580, 59, 1, 8196, 59, 1, 8197, 1, 8195, 4, 2, 103, 115, 9591, 9594, 59, 1, 331, 112, 59, 1, 8194, 4, 2, 103, 112, 9604, 9609, 111, 110, 59, 1, 281, 102, 59, 3, 55349, 56662, 4, 3, 97, 108, 115, 9622, 9635, 9640, 114, 4, 2, 59, 115, 9629, 9631, 1, 8917, 108, 59, 1, 10723, 117, 115, 59, 1, 10865, 105, 4, 3, 59, 108, 118, 9649, 9651, 9656, 1, 949, 111, 110, 59, 1, 949, 59, 1, 1013, 4, 4, 99, 115, 117, 118, 9669, 9686, 9716, 9747, 4, 2, 105, 111, 9675, 9680, 114, 99, 59, 1, 8790, 108, 111, 110, 59, 1, 8789, 4, 2, 105, 108, 9692, 9696, 109, 59, 1, 8770, 97, 110, 116, 4, 2, 103, 108, 9705, 9710, 116, 114, 59, 1, 10902, 101, 115, 115, 59, 1, 10901, 4, 3, 97, 101, 105, 9724, 9729, 9734, 108, 115, 59, 1, 61, 115, 116, 59, 1, 8799, 118, 4, 2, 59, 68, 9741, 9743, 1, 8801, 68, 59, 1, 10872, 112, 97, 114, 115, 108, 59, 1, 10725, 4, 2, 68, 97, 9761, 9766, 111, 116, 59, 1, 8787, 114, 114, 59, 1, 10609, 4, 3, 99, 100, 105, 9779, 9783, 9788, 114, 59, 1, 8495, 111, 116, 59, 1, 8784, 109, 59, 1, 8770, 4, 2, 97, 104, 9798, 9801, 59, 1, 951, 5, 240, 1, 59, 9806, 1, 240, 4, 2, 109, 114, 9814, 9822, 108, 5, 235, 1, 59, 9820, 1, 235, 111, 59, 1, 8364, 4, 3, 99, 105, 112, 9834, 9838, 9843, 108, 59, 1, 33, 115, 116, 59, 1, 8707, 4, 2, 101, 111, 9849, 9859, 99, 116, 97, 116, 105, 111, 110, 59, 1, 8496, 110, 101, 110, 116, 105, 97, 108, 101, 59, 1, 8519, 4, 12, 97, 99, 101, 102, 105, 106, 108, 110, 111, 112, 114, 115, 9896, 9910, 9914, 9921, 9954, 9960, 9967, 9989, 9994, 10027, 10036, 10164, 108, 108, 105, 110, 103, 100, 111, 116, 115, 101, 113, 59, 1, 8786, 121, 59, 1, 1092, 109, 97, 108, 101, 59, 1, 9792, 4, 3, 105, 108, 114, 9929, 9935, 9950, 108, 105, 103, 59, 1, 64259, 4, 2, 105, 108, 9941, 9945, 103, 59, 1, 64256, 105, 103, 59, 1, 64260, 59, 3, 55349, 56611, 108, 105, 103, 59, 1, 64257, 108, 105, 103, 59, 3, 102, 106, 4, 3, 97, 108, 116, 9975, 9979, 9984, 116, 59, 1, 9837, 105, 103, 59, 1, 64258, 110, 115, 59, 1, 9649, 111, 102, 59, 1, 402, 4, 2, 112, 114, 1e4, 10005, 102, 59, 3, 55349, 56663, 4, 2, 97, 107, 10011, 10016, 108, 108, 59, 1, 8704, 4, 2, 59, 118, 10022, 10024, 1, 8916, 59, 1, 10969, 97, 114, 116, 105, 110, 116, 59, 1, 10765, 4, 2, 97, 111, 10042, 10159, 4, 2, 99, 115, 10048, 10155, 4, 6, 49, 50, 51, 52, 53, 55, 10062, 10102, 10114, 10135, 10139, 10151, 4, 6, 50, 51, 52, 53, 54, 56, 10076, 10083, 10086, 10093, 10096, 10099, 5, 189, 1, 59, 10081, 1, 189, 59, 1, 8531, 5, 188, 1, 59, 10091, 1, 188, 59, 1, 8533, 59, 1, 8537, 59, 1, 8539, 4, 2, 51, 53, 10108, 10111, 59, 1, 8532, 59, 1, 8534, 4, 3, 52, 53, 56, 10122, 10129, 10132, 5, 190, 1, 59, 10127, 1, 190, 59, 1, 8535, 59, 1, 8540, 53, 59, 1, 8536, 4, 2, 54, 56, 10145, 10148, 59, 1, 8538, 59, 1, 8541, 56, 59, 1, 8542, 108, 59, 1, 8260, 119, 110, 59, 1, 8994, 99, 114, 59, 3, 55349, 56507, 4, 17, 69, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 110, 111, 114, 115, 116, 118, 10206, 10217, 10247, 10254, 10268, 10273, 10358, 10363, 10374, 10380, 10385, 10406, 10458, 10464, 10470, 10497, 10610, 4, 2, 59, 108, 10212, 10214, 1, 8807, 59, 1, 10892, 4, 3, 99, 109, 112, 10225, 10231, 10244, 117, 116, 101, 59, 1, 501, 109, 97, 4, 2, 59, 100, 10239, 10241, 1, 947, 59, 1, 989, 59, 1, 10886, 114, 101, 118, 101, 59, 1, 287, 4, 2, 105, 121, 10260, 10265, 114, 99, 59, 1, 285, 59, 1, 1075, 111, 116, 59, 1, 289, 4, 4, 59, 108, 113, 115, 10283, 10285, 10288, 10308, 1, 8805, 59, 1, 8923, 4, 3, 59, 113, 115, 10296, 10298, 10301, 1, 8805, 59, 1, 8807, 108, 97, 110, 116, 59, 1, 10878, 4, 4, 59, 99, 100, 108, 10318, 10320, 10324, 10345, 1, 10878, 99, 59, 1, 10921, 111, 116, 4, 2, 59, 111, 10332, 10334, 1, 10880, 4, 2, 59, 108, 10340, 10342, 1, 10882, 59, 1, 10884, 4, 2, 59, 101, 10351, 10354, 3, 8923, 65024, 115, 59, 1, 10900, 114, 59, 3, 55349, 56612, 4, 2, 59, 103, 10369, 10371, 1, 8811, 59, 1, 8921, 109, 101, 108, 59, 1, 8503, 99, 121, 59, 1, 1107, 4, 4, 59, 69, 97, 106, 10395, 10397, 10400, 10403, 1, 8823, 59, 1, 10898, 59, 1, 10917, 59, 1, 10916, 4, 4, 69, 97, 101, 115, 10416, 10419, 10434, 10453, 59, 1, 8809, 112, 4, 2, 59, 112, 10426, 10428, 1, 10890, 114, 111, 120, 59, 1, 10890, 4, 2, 59, 113, 10440, 10442, 1, 10888, 4, 2, 59, 113, 10448, 10450, 1, 10888, 59, 1, 8809, 105, 109, 59, 1, 8935, 112, 102, 59, 3, 55349, 56664, 97, 118, 101, 59, 1, 96, 4, 2, 99, 105, 10476, 10480, 114, 59, 1, 8458, 109, 4, 3, 59, 101, 108, 10489, 10491, 10494, 1, 8819, 59, 1, 10894, 59, 1, 10896, 5, 62, 6, 59, 99, 100, 108, 113, 114, 10512, 10514, 10527, 10532, 10538, 10545, 1, 62, 4, 2, 99, 105, 10520, 10523, 59, 1, 10919, 114, 59, 1, 10874, 111, 116, 59, 1, 8919, 80, 97, 114, 59, 1, 10645, 117, 101, 115, 116, 59, 1, 10876, 4, 5, 97, 100, 101, 108, 115, 10557, 10574, 10579, 10599, 10605, 4, 2, 112, 114, 10563, 10570, 112, 114, 111, 120, 59, 1, 10886, 114, 59, 1, 10616, 111, 116, 59, 1, 8919, 113, 4, 2, 108, 113, 10586, 10592, 101, 115, 115, 59, 1, 8923, 108, 101, 115, 115, 59, 1, 10892, 101, 115, 115, 59, 1, 8823, 105, 109, 59, 1, 8819, 4, 2, 101, 110, 10616, 10626, 114, 116, 110, 101, 113, 113, 59, 3, 8809, 65024, 69, 59, 3, 8809, 65024, 4, 10, 65, 97, 98, 99, 101, 102, 107, 111, 115, 121, 10653, 10658, 10713, 10718, 10724, 10760, 10765, 10786, 10850, 10875, 114, 114, 59, 1, 8660, 4, 4, 105, 108, 109, 114, 10668, 10674, 10678, 10684, 114, 115, 112, 59, 1, 8202, 102, 59, 1, 189, 105, 108, 116, 59, 1, 8459, 4, 2, 100, 114, 10690, 10695, 99, 121, 59, 1, 1098, 4, 3, 59, 99, 119, 10703, 10705, 10710, 1, 8596, 105, 114, 59, 1, 10568, 59, 1, 8621, 97, 114, 59, 1, 8463, 105, 114, 99, 59, 1, 293, 4, 3, 97, 108, 114, 10732, 10748, 10754, 114, 116, 115, 4, 2, 59, 117, 10741, 10743, 1, 9829, 105, 116, 59, 1, 9829, 108, 105, 112, 59, 1, 8230, 99, 111, 110, 59, 1, 8889, 114, 59, 3, 55349, 56613, 115, 4, 2, 101, 119, 10772, 10779, 97, 114, 111, 119, 59, 1, 10533, 97, 114, 111, 119, 59, 1, 10534, 4, 5, 97, 109, 111, 112, 114, 10798, 10803, 10809, 10839, 10844, 114, 114, 59, 1, 8703, 116, 104, 116, 59, 1, 8763, 107, 4, 2, 108, 114, 10816, 10827, 101, 102, 116, 97, 114, 114, 111, 119, 59, 1, 8617, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8618, 102, 59, 3, 55349, 56665, 98, 97, 114, 59, 1, 8213, 4, 3, 99, 108, 116, 10858, 10863, 10869, 114, 59, 3, 55349, 56509, 97, 115, 104, 59, 1, 8463, 114, 111, 107, 59, 1, 295, 4, 2, 98, 112, 10881, 10887, 117, 108, 108, 59, 1, 8259, 104, 101, 110, 59, 1, 8208, 4, 15, 97, 99, 101, 102, 103, 105, 106, 109, 110, 111, 112, 113, 115, 116, 117, 10925, 10936, 10958, 10977, 10990, 11001, 11039, 11045, 11101, 11192, 11220, 11226, 11237, 11285, 11299, 99, 117, 116, 101, 5, 237, 1, 59, 10934, 1, 237, 4, 3, 59, 105, 121, 10944, 10946, 10955, 1, 8291, 114, 99, 5, 238, 1, 59, 10953, 1, 238, 59, 1, 1080, 4, 2, 99, 120, 10964, 10968, 121, 59, 1, 1077, 99, 108, 5, 161, 1, 59, 10975, 1, 161, 4, 2, 102, 114, 10983, 10986, 59, 1, 8660, 59, 3, 55349, 56614, 114, 97, 118, 101, 5, 236, 1, 59, 10999, 1, 236, 4, 4, 59, 105, 110, 111, 11011, 11013, 11028, 11034, 1, 8520, 4, 2, 105, 110, 11019, 11024, 110, 116, 59, 1, 10764, 116, 59, 1, 8749, 102, 105, 110, 59, 1, 10716, 116, 97, 59, 1, 8489, 108, 105, 103, 59, 1, 307, 4, 3, 97, 111, 112, 11053, 11092, 11096, 4, 3, 99, 103, 116, 11061, 11065, 11088, 114, 59, 1, 299, 4, 3, 101, 108, 112, 11073, 11076, 11082, 59, 1, 8465, 105, 110, 101, 59, 1, 8464, 97, 114, 116, 59, 1, 8465, 104, 59, 1, 305, 102, 59, 1, 8887, 101, 100, 59, 1, 437, 4, 5, 59, 99, 102, 111, 116, 11113, 11115, 11121, 11136, 11142, 1, 8712, 97, 114, 101, 59, 1, 8453, 105, 110, 4, 2, 59, 116, 11129, 11131, 1, 8734, 105, 101, 59, 1, 10717, 100, 111, 116, 59, 1, 305, 4, 5, 59, 99, 101, 108, 112, 11154, 11156, 11161, 11179, 11186, 1, 8747, 97, 108, 59, 1, 8890, 4, 2, 103, 114, 11167, 11173, 101, 114, 115, 59, 1, 8484, 99, 97, 108, 59, 1, 8890, 97, 114, 104, 107, 59, 1, 10775, 114, 111, 100, 59, 1, 10812, 4, 4, 99, 103, 112, 116, 11202, 11206, 11211, 11216, 121, 59, 1, 1105, 111, 110, 59, 1, 303, 102, 59, 3, 55349, 56666, 97, 59, 1, 953, 114, 111, 100, 59, 1, 10812, 117, 101, 115, 116, 5, 191, 1, 59, 11235, 1, 191, 4, 2, 99, 105, 11243, 11248, 114, 59, 3, 55349, 56510, 110, 4, 5, 59, 69, 100, 115, 118, 11261, 11263, 11266, 11271, 11282, 1, 8712, 59, 1, 8953, 111, 116, 59, 1, 8949, 4, 2, 59, 118, 11277, 11279, 1, 8948, 59, 1, 8947, 59, 1, 8712, 4, 2, 59, 105, 11291, 11293, 1, 8290, 108, 100, 101, 59, 1, 297, 4, 2, 107, 109, 11305, 11310, 99, 121, 59, 1, 1110, 108, 5, 239, 1, 59, 11316, 1, 239, 4, 6, 99, 102, 109, 111, 115, 117, 11332, 11346, 11351, 11357, 11363, 11380, 4, 2, 105, 121, 11338, 11343, 114, 99, 59, 1, 309, 59, 1, 1081, 114, 59, 3, 55349, 56615, 97, 116, 104, 59, 1, 567, 112, 102, 59, 3, 55349, 56667, 4, 2, 99, 101, 11369, 11374, 114, 59, 3, 55349, 56511, 114, 99, 121, 59, 1, 1112, 107, 99, 121, 59, 1, 1108, 4, 8, 97, 99, 102, 103, 104, 106, 111, 115, 11404, 11418, 11433, 11438, 11445, 11450, 11455, 11461, 112, 112, 97, 4, 2, 59, 118, 11413, 11415, 1, 954, 59, 1, 1008, 4, 2, 101, 121, 11424, 11430, 100, 105, 108, 59, 1, 311, 59, 1, 1082, 114, 59, 3, 55349, 56616, 114, 101, 101, 110, 59, 1, 312, 99, 121, 59, 1, 1093, 99, 121, 59, 1, 1116, 112, 102, 59, 3, 55349, 56668, 99, 114, 59, 3, 55349, 56512, 4, 23, 65, 66, 69, 72, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 11515, 11538, 11544, 11555, 11560, 11721, 11780, 11818, 11868, 12136, 12160, 12171, 12203, 12208, 12246, 12275, 12327, 12509, 12523, 12569, 12641, 12732, 12752, 4, 3, 97, 114, 116, 11523, 11528, 11532, 114, 114, 59, 1, 8666, 114, 59, 1, 8656, 97, 105, 108, 59, 1, 10523, 97, 114, 114, 59, 1, 10510, 4, 2, 59, 103, 11550, 11552, 1, 8806, 59, 1, 10891, 97, 114, 59, 1, 10594, 4, 9, 99, 101, 103, 109, 110, 112, 113, 114, 116, 11580, 11586, 11594, 11600, 11606, 11624, 11627, 11636, 11694, 117, 116, 101, 59, 1, 314, 109, 112, 116, 121, 118, 59, 1, 10676, 114, 97, 110, 59, 1, 8466, 98, 100, 97, 59, 1, 955, 103, 4, 3, 59, 100, 108, 11615, 11617, 11620, 1, 10216, 59, 1, 10641, 101, 59, 1, 10216, 59, 1, 10885, 117, 111, 5, 171, 1, 59, 11634, 1, 171, 114, 4, 8, 59, 98, 102, 104, 108, 112, 115, 116, 11655, 11657, 11669, 11673, 11677, 11681, 11685, 11690, 1, 8592, 4, 2, 59, 102, 11663, 11665, 1, 8676, 115, 59, 1, 10527, 115, 59, 1, 10525, 107, 59, 1, 8617, 112, 59, 1, 8619, 108, 59, 1, 10553, 105, 109, 59, 1, 10611, 108, 59, 1, 8610, 4, 3, 59, 97, 101, 11702, 11704, 11709, 1, 10923, 105, 108, 59, 1, 10521, 4, 2, 59, 115, 11715, 11717, 1, 10925, 59, 3, 10925, 65024, 4, 3, 97, 98, 114, 11729, 11734, 11739, 114, 114, 59, 1, 10508, 114, 107, 59, 1, 10098, 4, 2, 97, 107, 11745, 11758, 99, 4, 2, 101, 107, 11752, 11755, 59, 1, 123, 59, 1, 91, 4, 2, 101, 115, 11764, 11767, 59, 1, 10635, 108, 4, 2, 100, 117, 11774, 11777, 59, 1, 10639, 59, 1, 10637, 4, 4, 97, 101, 117, 121, 11790, 11796, 11811, 11815, 114, 111, 110, 59, 1, 318, 4, 2, 100, 105, 11802, 11807, 105, 108, 59, 1, 316, 108, 59, 1, 8968, 98, 59, 1, 123, 59, 1, 1083, 4, 4, 99, 113, 114, 115, 11828, 11832, 11845, 11864, 97, 59, 1, 10550, 117, 111, 4, 2, 59, 114, 11840, 11842, 1, 8220, 59, 1, 8222, 4, 2, 100, 117, 11851, 11857, 104, 97, 114, 59, 1, 10599, 115, 104, 97, 114, 59, 1, 10571, 104, 59, 1, 8626, 4, 5, 59, 102, 103, 113, 115, 11880, 11882, 12008, 12011, 12031, 1, 8804, 116, 4, 5, 97, 104, 108, 114, 116, 11895, 11913, 11935, 11947, 11996, 114, 114, 111, 119, 4, 2, 59, 116, 11905, 11907, 1, 8592, 97, 105, 108, 59, 1, 8610, 97, 114, 112, 111, 111, 110, 4, 2, 100, 117, 11925, 11931, 111, 119, 110, 59, 1, 8637, 112, 59, 1, 8636, 101, 102, 116, 97, 114, 114, 111, 119, 115, 59, 1, 8647, 105, 103, 104, 116, 4, 3, 97, 104, 115, 11959, 11974, 11984, 114, 114, 111, 119, 4, 2, 59, 115, 11969, 11971, 1, 8596, 59, 1, 8646, 97, 114, 112, 111, 111, 110, 115, 59, 1, 8651, 113, 117, 105, 103, 97, 114, 114, 111, 119, 59, 1, 8621, 104, 114, 101, 101, 116, 105, 109, 101, 115, 59, 1, 8907, 59, 1, 8922, 4, 3, 59, 113, 115, 12019, 12021, 12024, 1, 8804, 59, 1, 8806, 108, 97, 110, 116, 59, 1, 10877, 4, 5, 59, 99, 100, 103, 115, 12043, 12045, 12049, 12070, 12083, 1, 10877, 99, 59, 1, 10920, 111, 116, 4, 2, 59, 111, 12057, 12059, 1, 10879, 4, 2, 59, 114, 12065, 12067, 1, 10881, 59, 1, 10883, 4, 2, 59, 101, 12076, 12079, 3, 8922, 65024, 115, 59, 1, 10899, 4, 5, 97, 100, 101, 103, 115, 12095, 12103, 12108, 12126, 12131, 112, 112, 114, 111, 120, 59, 1, 10885, 111, 116, 59, 1, 8918, 113, 4, 2, 103, 113, 12115, 12120, 116, 114, 59, 1, 8922, 103, 116, 114, 59, 1, 10891, 116, 114, 59, 1, 8822, 105, 109, 59, 1, 8818, 4, 3, 105, 108, 114, 12144, 12150, 12156, 115, 104, 116, 59, 1, 10620, 111, 111, 114, 59, 1, 8970, 59, 3, 55349, 56617, 4, 2, 59, 69, 12166, 12168, 1, 8822, 59, 1, 10897, 4, 2, 97, 98, 12177, 12198, 114, 4, 2, 100, 117, 12184, 12187, 59, 1, 8637, 4, 2, 59, 108, 12193, 12195, 1, 8636, 59, 1, 10602, 108, 107, 59, 1, 9604, 99, 121, 59, 1, 1113, 4, 5, 59, 97, 99, 104, 116, 12220, 12222, 12227, 12235, 12241, 1, 8810, 114, 114, 59, 1, 8647, 111, 114, 110, 101, 114, 59, 1, 8990, 97, 114, 100, 59, 1, 10603, 114, 105, 59, 1, 9722, 4, 2, 105, 111, 12252, 12258, 100, 111, 116, 59, 1, 320, 117, 115, 116, 4, 2, 59, 97, 12267, 12269, 1, 9136, 99, 104, 101, 59, 1, 9136, 4, 4, 69, 97, 101, 115, 12285, 12288, 12303, 12322, 59, 1, 8808, 112, 4, 2, 59, 112, 12295, 12297, 1, 10889, 114, 111, 120, 59, 1, 10889, 4, 2, 59, 113, 12309, 12311, 1, 10887, 4, 2, 59, 113, 12317, 12319, 1, 10887, 59, 1, 8808, 105, 109, 59, 1, 8934, 4, 8, 97, 98, 110, 111, 112, 116, 119, 122, 12345, 12359, 12364, 12421, 12446, 12467, 12474, 12490, 4, 2, 110, 114, 12351, 12355, 103, 59, 1, 10220, 114, 59, 1, 8701, 114, 107, 59, 1, 10214, 103, 4, 3, 108, 109, 114, 12373, 12401, 12409, 101, 102, 116, 4, 2, 97, 114, 12382, 12389, 114, 114, 111, 119, 59, 1, 10229, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 10231, 97, 112, 115, 116, 111, 59, 1, 10236, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 10230, 112, 97, 114, 114, 111, 119, 4, 2, 108, 114, 12433, 12439, 101, 102, 116, 59, 1, 8619, 105, 103, 104, 116, 59, 1, 8620, 4, 3, 97, 102, 108, 12454, 12458, 12462, 114, 59, 1, 10629, 59, 3, 55349, 56669, 117, 115, 59, 1, 10797, 105, 109, 101, 115, 59, 1, 10804, 4, 2, 97, 98, 12480, 12485, 115, 116, 59, 1, 8727, 97, 114, 59, 1, 95, 4, 3, 59, 101, 102, 12498, 12500, 12506, 1, 9674, 110, 103, 101, 59, 1, 9674, 59, 1, 10731, 97, 114, 4, 2, 59, 108, 12517, 12519, 1, 40, 116, 59, 1, 10643, 4, 5, 97, 99, 104, 109, 116, 12535, 12540, 12548, 12561, 12564, 114, 114, 59, 1, 8646, 111, 114, 110, 101, 114, 59, 1, 8991, 97, 114, 4, 2, 59, 100, 12556, 12558, 1, 8651, 59, 1, 10605, 59, 1, 8206, 114, 105, 59, 1, 8895, 4, 6, 97, 99, 104, 105, 113, 116, 12583, 12589, 12594, 12597, 12614, 12635, 113, 117, 111, 59, 1, 8249, 114, 59, 3, 55349, 56513, 59, 1, 8624, 109, 4, 3, 59, 101, 103, 12606, 12608, 12611, 1, 8818, 59, 1, 10893, 59, 1, 10895, 4, 2, 98, 117, 12620, 12623, 59, 1, 91, 111, 4, 2, 59, 114, 12630, 12632, 1, 8216, 59, 1, 8218, 114, 111, 107, 59, 1, 322, 5, 60, 8, 59, 99, 100, 104, 105, 108, 113, 114, 12660, 12662, 12675, 12680, 12686, 12692, 12698, 12705, 1, 60, 4, 2, 99, 105, 12668, 12671, 59, 1, 10918, 114, 59, 1, 10873, 111, 116, 59, 1, 8918, 114, 101, 101, 59, 1, 8907, 109, 101, 115, 59, 1, 8905, 97, 114, 114, 59, 1, 10614, 117, 101, 115, 116, 59, 1, 10875, 4, 2, 80, 105, 12711, 12716, 97, 114, 59, 1, 10646, 4, 3, 59, 101, 102, 12724, 12726, 12729, 1, 9667, 59, 1, 8884, 59, 1, 9666, 114, 4, 2, 100, 117, 12739, 12746, 115, 104, 97, 114, 59, 1, 10570, 104, 97, 114, 59, 1, 10598, 4, 2, 101, 110, 12758, 12768, 114, 116, 110, 101, 113, 113, 59, 3, 8808, 65024, 69, 59, 3, 8808, 65024, 4, 14, 68, 97, 99, 100, 101, 102, 104, 105, 108, 110, 111, 112, 115, 117, 12803, 12809, 12893, 12908, 12914, 12928, 12933, 12937, 13011, 13025, 13032, 13049, 13052, 13069, 68, 111, 116, 59, 1, 8762, 4, 4, 99, 108, 112, 114, 12819, 12827, 12849, 12887, 114, 5, 175, 1, 59, 12825, 1, 175, 4, 2, 101, 116, 12833, 12836, 59, 1, 9794, 4, 2, 59, 101, 12842, 12844, 1, 10016, 115, 101, 59, 1, 10016, 4, 2, 59, 115, 12855, 12857, 1, 8614, 116, 111, 4, 4, 59, 100, 108, 117, 12869, 12871, 12877, 12883, 1, 8614, 111, 119, 110, 59, 1, 8615, 101, 102, 116, 59, 1, 8612, 112, 59, 1, 8613, 107, 101, 114, 59, 1, 9646, 4, 2, 111, 121, 12899, 12905, 109, 109, 97, 59, 1, 10793, 59, 1, 1084, 97, 115, 104, 59, 1, 8212, 97, 115, 117, 114, 101, 100, 97, 110, 103, 108, 101, 59, 1, 8737, 114, 59, 3, 55349, 56618, 111, 59, 1, 8487, 4, 3, 99, 100, 110, 12945, 12954, 12985, 114, 111, 5, 181, 1, 59, 12952, 1, 181, 4, 4, 59, 97, 99, 100, 12964, 12966, 12971, 12976, 1, 8739, 115, 116, 59, 1, 42, 105, 114, 59, 1, 10992, 111, 116, 5, 183, 1, 59, 12983, 1, 183, 117, 115, 4, 3, 59, 98, 100, 12995, 12997, 13e3, 1, 8722, 59, 1, 8863, 4, 2, 59, 117, 13006, 13008, 1, 8760, 59, 1, 10794, 4, 2, 99, 100, 13017, 13021, 112, 59, 1, 10971, 114, 59, 1, 8230, 112, 108, 117, 115, 59, 1, 8723, 4, 2, 100, 112, 13038, 13044, 101, 108, 115, 59, 1, 8871, 102, 59, 3, 55349, 56670, 59, 1, 8723, 4, 2, 99, 116, 13058, 13063, 114, 59, 3, 55349, 56514, 112, 111, 115, 59, 1, 8766, 4, 3, 59, 108, 109, 13077, 13079, 13087, 1, 956, 116, 105, 109, 97, 112, 59, 1, 8888, 97, 112, 59, 1, 8888, 4, 24, 71, 76, 82, 86, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 13142, 13165, 13217, 13229, 13247, 13330, 13359, 13414, 13420, 13508, 13513, 13579, 13602, 13626, 13631, 13762, 13767, 13855, 13936, 13995, 14214, 14285, 14312, 14432, 4, 2, 103, 116, 13148, 13152, 59, 3, 8921, 824, 4, 2, 59, 118, 13158, 13161, 3, 8811, 8402, 59, 3, 8811, 824, 4, 3, 101, 108, 116, 13173, 13200, 13204, 102, 116, 4, 2, 97, 114, 13181, 13188, 114, 114, 111, 119, 59, 1, 8653, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8654, 59, 3, 8920, 824, 4, 2, 59, 118, 13210, 13213, 3, 8810, 8402, 59, 3, 8810, 824, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8655, 4, 2, 68, 100, 13235, 13241, 97, 115, 104, 59, 1, 8879, 97, 115, 104, 59, 1, 8878, 4, 5, 98, 99, 110, 112, 116, 13259, 13264, 13270, 13275, 13308, 108, 97, 59, 1, 8711, 117, 116, 101, 59, 1, 324, 103, 59, 3, 8736, 8402, 4, 5, 59, 69, 105, 111, 112, 13287, 13289, 13293, 13298, 13302, 1, 8777, 59, 3, 10864, 824, 100, 59, 3, 8779, 824, 115, 59, 1, 329, 114, 111, 120, 59, 1, 8777, 117, 114, 4, 2, 59, 97, 13316, 13318, 1, 9838, 108, 4, 2, 59, 115, 13325, 13327, 1, 9838, 59, 1, 8469, 4, 2, 115, 117, 13336, 13344, 112, 5, 160, 1, 59, 13342, 1, 160, 109, 112, 4, 2, 59, 101, 13352, 13355, 3, 8782, 824, 59, 3, 8783, 824, 4, 5, 97, 101, 111, 117, 121, 13371, 13385, 13391, 13407, 13411, 4, 2, 112, 114, 13377, 13380, 59, 1, 10819, 111, 110, 59, 1, 328, 100, 105, 108, 59, 1, 326, 110, 103, 4, 2, 59, 100, 13399, 13401, 1, 8775, 111, 116, 59, 3, 10861, 824, 112, 59, 1, 10818, 59, 1, 1085, 97, 115, 104, 59, 1, 8211, 4, 7, 59, 65, 97, 100, 113, 115, 120, 13436, 13438, 13443, 13466, 13472, 13478, 13494, 1, 8800, 114, 114, 59, 1, 8663, 114, 4, 2, 104, 114, 13450, 13454, 107, 59, 1, 10532, 4, 2, 59, 111, 13460, 13462, 1, 8599, 119, 59, 1, 8599, 111, 116, 59, 3, 8784, 824, 117, 105, 118, 59, 1, 8802, 4, 2, 101, 105, 13484, 13489, 97, 114, 59, 1, 10536, 109, 59, 3, 8770, 824, 105, 115, 116, 4, 2, 59, 115, 13503, 13505, 1, 8708, 59, 1, 8708, 114, 59, 3, 55349, 56619, 4, 4, 69, 101, 115, 116, 13523, 13527, 13563, 13568, 59, 3, 8807, 824, 4, 3, 59, 113, 115, 13535, 13537, 13559, 1, 8817, 4, 3, 59, 113, 115, 13545, 13547, 13551, 1, 8817, 59, 3, 8807, 824, 108, 97, 110, 116, 59, 3, 10878, 824, 59, 3, 10878, 824, 105, 109, 59, 1, 8821, 4, 2, 59, 114, 13574, 13576, 1, 8815, 59, 1, 8815, 4, 3, 65, 97, 112, 13587, 13592, 13597, 114, 114, 59, 1, 8654, 114, 114, 59, 1, 8622, 97, 114, 59, 1, 10994, 4, 3, 59, 115, 118, 13610, 13612, 13623, 1, 8715, 4, 2, 59, 100, 13618, 13620, 1, 8956, 59, 1, 8954, 59, 1, 8715, 99, 121, 59, 1, 1114, 4, 7, 65, 69, 97, 100, 101, 115, 116, 13647, 13652, 13656, 13661, 13665, 13737, 13742, 114, 114, 59, 1, 8653, 59, 3, 8806, 824, 114, 114, 59, 1, 8602, 114, 59, 1, 8229, 4, 4, 59, 102, 113, 115, 13675, 13677, 13703, 13725, 1, 8816, 116, 4, 2, 97, 114, 13684, 13691, 114, 114, 111, 119, 59, 1, 8602, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8622, 4, 3, 59, 113, 115, 13711, 13713, 13717, 1, 8816, 59, 3, 8806, 824, 108, 97, 110, 116, 59, 3, 10877, 824, 4, 2, 59, 115, 13731, 13734, 3, 10877, 824, 59, 1, 8814, 105, 109, 59, 1, 8820, 4, 2, 59, 114, 13748, 13750, 1, 8814, 105, 4, 2, 59, 101, 13757, 13759, 1, 8938, 59, 1, 8940, 105, 100, 59, 1, 8740, 4, 2, 112, 116, 13773, 13778, 102, 59, 3, 55349, 56671, 5, 172, 3, 59, 105, 110, 13787, 13789, 13829, 1, 172, 110, 4, 4, 59, 69, 100, 118, 13800, 13802, 13806, 13812, 1, 8713, 59, 3, 8953, 824, 111, 116, 59, 3, 8949, 824, 4, 3, 97, 98, 99, 13820, 13823, 13826, 59, 1, 8713, 59, 1, 8951, 59, 1, 8950, 105, 4, 2, 59, 118, 13836, 13838, 1, 8716, 4, 3, 97, 98, 99, 13846, 13849, 13852, 59, 1, 8716, 59, 1, 8958, 59, 1, 8957, 4, 3, 97, 111, 114, 13863, 13892, 13899, 114, 4, 4, 59, 97, 115, 116, 13874, 13876, 13883, 13888, 1, 8742, 108, 108, 101, 108, 59, 1, 8742, 108, 59, 3, 11005, 8421, 59, 3, 8706, 824, 108, 105, 110, 116, 59, 1, 10772, 4, 3, 59, 99, 101, 13907, 13909, 13914, 1, 8832, 117, 101, 59, 1, 8928, 4, 2, 59, 99, 13920, 13923, 3, 10927, 824, 4, 2, 59, 101, 13929, 13931, 1, 8832, 113, 59, 3, 10927, 824, 4, 4, 65, 97, 105, 116, 13946, 13951, 13971, 13982, 114, 114, 59, 1, 8655, 114, 114, 4, 3, 59, 99, 119, 13961, 13963, 13967, 1, 8603, 59, 3, 10547, 824, 59, 3, 8605, 824, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8603, 114, 105, 4, 2, 59, 101, 13990, 13992, 1, 8939, 59, 1, 8941, 4, 7, 99, 104, 105, 109, 112, 113, 117, 14011, 14036, 14060, 14080, 14085, 14090, 14106, 4, 4, 59, 99, 101, 114, 14021, 14023, 14028, 14032, 1, 8833, 117, 101, 59, 1, 8929, 59, 3, 10928, 824, 59, 3, 55349, 56515, 111, 114, 116, 4, 2, 109, 112, 14045, 14050, 105, 100, 59, 1, 8740, 97, 114, 97, 108, 108, 101, 108, 59, 1, 8742, 109, 4, 2, 59, 101, 14067, 14069, 1, 8769, 4, 2, 59, 113, 14075, 14077, 1, 8772, 59, 1, 8772, 105, 100, 59, 1, 8740, 97, 114, 59, 1, 8742, 115, 117, 4, 2, 98, 112, 14098, 14102, 101, 59, 1, 8930, 101, 59, 1, 8931, 4, 3, 98, 99, 112, 14114, 14157, 14171, 4, 4, 59, 69, 101, 115, 14124, 14126, 14130, 14133, 1, 8836, 59, 3, 10949, 824, 59, 1, 8840, 101, 116, 4, 2, 59, 101, 14141, 14144, 3, 8834, 8402, 113, 4, 2, 59, 113, 14151, 14153, 1, 8840, 59, 3, 10949, 824, 99, 4, 2, 59, 101, 14164, 14166, 1, 8833, 113, 59, 3, 10928, 824, 4, 4, 59, 69, 101, 115, 14181, 14183, 14187, 14190, 1, 8837, 59, 3, 10950, 824, 59, 1, 8841, 101, 116, 4, 2, 59, 101, 14198, 14201, 3, 8835, 8402, 113, 4, 2, 59, 113, 14208, 14210, 1, 8841, 59, 3, 10950, 824, 4, 4, 103, 105, 108, 114, 14224, 14228, 14238, 14242, 108, 59, 1, 8825, 108, 100, 101, 5, 241, 1, 59, 14236, 1, 241, 103, 59, 1, 8824, 105, 97, 110, 103, 108, 101, 4, 2, 108, 114, 14254, 14269, 101, 102, 116, 4, 2, 59, 101, 14263, 14265, 1, 8938, 113, 59, 1, 8940, 105, 103, 104, 116, 4, 2, 59, 101, 14279, 14281, 1, 8939, 113, 59, 1, 8941, 4, 2, 59, 109, 14291, 14293, 1, 957, 4, 3, 59, 101, 115, 14301, 14303, 14308, 1, 35, 114, 111, 59, 1, 8470, 112, 59, 1, 8199, 4, 9, 68, 72, 97, 100, 103, 105, 108, 114, 115, 14332, 14338, 14344, 14349, 14355, 14369, 14376, 14408, 14426, 97, 115, 104, 59, 1, 8877, 97, 114, 114, 59, 1, 10500, 112, 59, 3, 8781, 8402, 97, 115, 104, 59, 1, 8876, 4, 2, 101, 116, 14361, 14365, 59, 3, 8805, 8402, 59, 3, 62, 8402, 110, 102, 105, 110, 59, 1, 10718, 4, 3, 65, 101, 116, 14384, 14389, 14393, 114, 114, 59, 1, 10498, 59, 3, 8804, 8402, 4, 2, 59, 114, 14399, 14402, 3, 60, 8402, 105, 101, 59, 3, 8884, 8402, 4, 2, 65, 116, 14414, 14419, 114, 114, 59, 1, 10499, 114, 105, 101, 59, 3, 8885, 8402, 105, 109, 59, 3, 8764, 8402, 4, 3, 65, 97, 110, 14440, 14445, 14468, 114, 114, 59, 1, 8662, 114, 4, 2, 104, 114, 14452, 14456, 107, 59, 1, 10531, 4, 2, 59, 111, 14462, 14464, 1, 8598, 119, 59, 1, 8598, 101, 97, 114, 59, 1, 10535, 4, 18, 83, 97, 99, 100, 101, 102, 103, 104, 105, 108, 109, 111, 112, 114, 115, 116, 117, 118, 14512, 14515, 14535, 14560, 14597, 14603, 14618, 14643, 14657, 14662, 14701, 14741, 14747, 14769, 14851, 14877, 14907, 14916, 59, 1, 9416, 4, 2, 99, 115, 14521, 14531, 117, 116, 101, 5, 243, 1, 59, 14529, 1, 243, 116, 59, 1, 8859, 4, 2, 105, 121, 14541, 14557, 114, 4, 2, 59, 99, 14548, 14550, 1, 8858, 5, 244, 1, 59, 14555, 1, 244, 59, 1, 1086, 4, 5, 97, 98, 105, 111, 115, 14572, 14577, 14583, 14587, 14591, 115, 104, 59, 1, 8861, 108, 97, 99, 59, 1, 337, 118, 59, 1, 10808, 116, 59, 1, 8857, 111, 108, 100, 59, 1, 10684, 108, 105, 103, 59, 1, 339, 4, 2, 99, 114, 14609, 14614, 105, 114, 59, 1, 10687, 59, 3, 55349, 56620, 4, 3, 111, 114, 116, 14626, 14630, 14640, 110, 59, 1, 731, 97, 118, 101, 5, 242, 1, 59, 14638, 1, 242, 59, 1, 10689, 4, 2, 98, 109, 14649, 14654, 97, 114, 59, 1, 10677, 59, 1, 937, 110, 116, 59, 1, 8750, 4, 4, 97, 99, 105, 116, 14672, 14677, 14693, 14698, 114, 114, 59, 1, 8634, 4, 2, 105, 114, 14683, 14687, 114, 59, 1, 10686, 111, 115, 115, 59, 1, 10683, 110, 101, 59, 1, 8254, 59, 1, 10688, 4, 3, 97, 101, 105, 14709, 14714, 14719, 99, 114, 59, 1, 333, 103, 97, 59, 1, 969, 4, 3, 99, 100, 110, 14727, 14733, 14736, 114, 111, 110, 59, 1, 959, 59, 1, 10678, 117, 115, 59, 1, 8854, 112, 102, 59, 3, 55349, 56672, 4, 3, 97, 101, 108, 14755, 14759, 14764, 114, 59, 1, 10679, 114, 112, 59, 1, 10681, 117, 115, 59, 1, 8853, 4, 7, 59, 97, 100, 105, 111, 115, 118, 14785, 14787, 14792, 14831, 14837, 14841, 14848, 1, 8744, 114, 114, 59, 1, 8635, 4, 4, 59, 101, 102, 109, 14802, 14804, 14817, 14824, 1, 10845, 114, 4, 2, 59, 111, 14811, 14813, 1, 8500, 102, 59, 1, 8500, 5, 170, 1, 59, 14822, 1, 170, 5, 186, 1, 59, 14829, 1, 186, 103, 111, 102, 59, 1, 8886, 114, 59, 1, 10838, 108, 111, 112, 101, 59, 1, 10839, 59, 1, 10843, 4, 3, 99, 108, 111, 14859, 14863, 14873, 114, 59, 1, 8500, 97, 115, 104, 5, 248, 1, 59, 14871, 1, 248, 108, 59, 1, 8856, 105, 4, 2, 108, 109, 14884, 14893, 100, 101, 5, 245, 1, 59, 14891, 1, 245, 101, 115, 4, 2, 59, 97, 14901, 14903, 1, 8855, 115, 59, 1, 10806, 109, 108, 5, 246, 1, 59, 14914, 1, 246, 98, 97, 114, 59, 1, 9021, 4, 12, 97, 99, 101, 102, 104, 105, 108, 109, 111, 114, 115, 117, 14948, 14992, 14996, 15033, 15038, 15068, 15090, 15189, 15192, 15222, 15427, 15441, 114, 4, 4, 59, 97, 115, 116, 14959, 14961, 14976, 14989, 1, 8741, 5, 182, 2, 59, 108, 14968, 14970, 1, 182, 108, 101, 108, 59, 1, 8741, 4, 2, 105, 108, 14982, 14986, 109, 59, 1, 10995, 59, 1, 11005, 59, 1, 8706, 121, 59, 1, 1087, 114, 4, 5, 99, 105, 109, 112, 116, 15009, 15014, 15019, 15024, 15027, 110, 116, 59, 1, 37, 111, 100, 59, 1, 46, 105, 108, 59, 1, 8240, 59, 1, 8869, 101, 110, 107, 59, 1, 8241, 114, 59, 3, 55349, 56621, 4, 3, 105, 109, 111, 15046, 15057, 15063, 4, 2, 59, 118, 15052, 15054, 1, 966, 59, 1, 981, 109, 97, 116, 59, 1, 8499, 110, 101, 59, 1, 9742, 4, 3, 59, 116, 118, 15076, 15078, 15087, 1, 960, 99, 104, 102, 111, 114, 107, 59, 1, 8916, 59, 1, 982, 4, 2, 97, 117, 15096, 15119, 110, 4, 2, 99, 107, 15103, 15115, 107, 4, 2, 59, 104, 15110, 15112, 1, 8463, 59, 1, 8462, 118, 59, 1, 8463, 115, 4, 9, 59, 97, 98, 99, 100, 101, 109, 115, 116, 15140, 15142, 15148, 15151, 15156, 15168, 15171, 15179, 15184, 1, 43, 99, 105, 114, 59, 1, 10787, 59, 1, 8862, 105, 114, 59, 1, 10786, 4, 2, 111, 117, 15162, 15165, 59, 1, 8724, 59, 1, 10789, 59, 1, 10866, 110, 5, 177, 1, 59, 15177, 1, 177, 105, 109, 59, 1, 10790, 119, 111, 59, 1, 10791, 59, 1, 177, 4, 3, 105, 112, 117, 15200, 15208, 15213, 110, 116, 105, 110, 116, 59, 1, 10773, 102, 59, 3, 55349, 56673, 110, 100, 5, 163, 1, 59, 15220, 1, 163, 4, 10, 59, 69, 97, 99, 101, 105, 110, 111, 115, 117, 15244, 15246, 15249, 15253, 15258, 15334, 15347, 15367, 15416, 15421, 1, 8826, 59, 1, 10931, 112, 59, 1, 10935, 117, 101, 59, 1, 8828, 4, 2, 59, 99, 15264, 15266, 1, 10927, 4, 6, 59, 97, 99, 101, 110, 115, 15280, 15282, 15290, 15299, 15303, 15329, 1, 8826, 112, 112, 114, 111, 120, 59, 1, 10935, 117, 114, 108, 121, 101, 113, 59, 1, 8828, 113, 59, 1, 10927, 4, 3, 97, 101, 115, 15311, 15319, 15324, 112, 112, 114, 111, 120, 59, 1, 10937, 113, 113, 59, 1, 10933, 105, 109, 59, 1, 8936, 105, 109, 59, 1, 8830, 109, 101, 4, 2, 59, 115, 15342, 15344, 1, 8242, 59, 1, 8473, 4, 3, 69, 97, 115, 15355, 15358, 15362, 59, 1, 10933, 112, 59, 1, 10937, 105, 109, 59, 1, 8936, 4, 3, 100, 102, 112, 15375, 15378, 15404, 59, 1, 8719, 4, 3, 97, 108, 115, 15386, 15392, 15398, 108, 97, 114, 59, 1, 9006, 105, 110, 101, 59, 1, 8978, 117, 114, 102, 59, 1, 8979, 4, 2, 59, 116, 15410, 15412, 1, 8733, 111, 59, 1, 8733, 105, 109, 59, 1, 8830, 114, 101, 108, 59, 1, 8880, 4, 2, 99, 105, 15433, 15438, 114, 59, 3, 55349, 56517, 59, 1, 968, 110, 99, 115, 112, 59, 1, 8200, 4, 6, 102, 105, 111, 112, 115, 117, 15462, 15467, 15472, 15478, 15485, 15491, 114, 59, 3, 55349, 56622, 110, 116, 59, 1, 10764, 112, 102, 59, 3, 55349, 56674, 114, 105, 109, 101, 59, 1, 8279, 99, 114, 59, 3, 55349, 56518, 4, 3, 97, 101, 111, 15499, 15520, 15534, 116, 4, 2, 101, 105, 15506, 15515, 114, 110, 105, 111, 110, 115, 59, 1, 8461, 110, 116, 59, 1, 10774, 115, 116, 4, 2, 59, 101, 15528, 15530, 1, 63, 113, 59, 1, 8799, 116, 5, 34, 1, 59, 15540, 1, 34, 4, 21, 65, 66, 72, 97, 98, 99, 100, 101, 102, 104, 105, 108, 109, 110, 111, 112, 114, 115, 116, 117, 120, 15586, 15609, 15615, 15620, 15796, 15855, 15893, 15931, 15977, 16001, 16039, 16183, 16204, 16222, 16228, 16285, 16312, 16318, 16363, 16408, 16416, 4, 3, 97, 114, 116, 15594, 15599, 15603, 114, 114, 59, 1, 8667, 114, 59, 1, 8658, 97, 105, 108, 59, 1, 10524, 97, 114, 114, 59, 1, 10511, 97, 114, 59, 1, 10596, 4, 7, 99, 100, 101, 110, 113, 114, 116, 15636, 15651, 15656, 15664, 15687, 15696, 15770, 4, 2, 101, 117, 15642, 15646, 59, 3, 8765, 817, 116, 101, 59, 1, 341, 105, 99, 59, 1, 8730, 109, 112, 116, 121, 118, 59, 1, 10675, 103, 4, 4, 59, 100, 101, 108, 15675, 15677, 15680, 15683, 1, 10217, 59, 1, 10642, 59, 1, 10661, 101, 59, 1, 10217, 117, 111, 5, 187, 1, 59, 15694, 1, 187, 114, 4, 11, 59, 97, 98, 99, 102, 104, 108, 112, 115, 116, 119, 15721, 15723, 15727, 15739, 15742, 15746, 15750, 15754, 15758, 15763, 15767, 1, 8594, 112, 59, 1, 10613, 4, 2, 59, 102, 15733, 15735, 1, 8677, 115, 59, 1, 10528, 59, 1, 10547, 115, 59, 1, 10526, 107, 59, 1, 8618, 112, 59, 1, 8620, 108, 59, 1, 10565, 105, 109, 59, 1, 10612, 108, 59, 1, 8611, 59, 1, 8605, 4, 2, 97, 105, 15776, 15781, 105, 108, 59, 1, 10522, 111, 4, 2, 59, 110, 15788, 15790, 1, 8758, 97, 108, 115, 59, 1, 8474, 4, 3, 97, 98, 114, 15804, 15809, 15814, 114, 114, 59, 1, 10509, 114, 107, 59, 1, 10099, 4, 2, 97, 107, 15820, 15833, 99, 4, 2, 101, 107, 15827, 15830, 59, 1, 125, 59, 1, 93, 4, 2, 101, 115, 15839, 15842, 59, 1, 10636, 108, 4, 2, 100, 117, 15849, 15852, 59, 1, 10638, 59, 1, 10640, 4, 4, 97, 101, 117, 121, 15865, 15871, 15886, 15890, 114, 111, 110, 59, 1, 345, 4, 2, 100, 105, 15877, 15882, 105, 108, 59, 1, 343, 108, 59, 1, 8969, 98, 59, 1, 125, 59, 1, 1088, 4, 4, 99, 108, 113, 115, 15903, 15907, 15914, 15927, 97, 59, 1, 10551, 100, 104, 97, 114, 59, 1, 10601, 117, 111, 4, 2, 59, 114, 15922, 15924, 1, 8221, 59, 1, 8221, 104, 59, 1, 8627, 4, 3, 97, 99, 103, 15939, 15966, 15970, 108, 4, 4, 59, 105, 112, 115, 15950, 15952, 15957, 15963, 1, 8476, 110, 101, 59, 1, 8475, 97, 114, 116, 59, 1, 8476, 59, 1, 8477, 116, 59, 1, 9645, 5, 174, 1, 59, 15975, 1, 174, 4, 3, 105, 108, 114, 15985, 15991, 15997, 115, 104, 116, 59, 1, 10621, 111, 111, 114, 59, 1, 8971, 59, 3, 55349, 56623, 4, 2, 97, 111, 16007, 16028, 114, 4, 2, 100, 117, 16014, 16017, 59, 1, 8641, 4, 2, 59, 108, 16023, 16025, 1, 8640, 59, 1, 10604, 4, 2, 59, 118, 16034, 16036, 1, 961, 59, 1, 1009, 4, 3, 103, 110, 115, 16047, 16167, 16171, 104, 116, 4, 6, 97, 104, 108, 114, 115, 116, 16063, 16081, 16103, 16130, 16143, 16155, 114, 114, 111, 119, 4, 2, 59, 116, 16073, 16075, 1, 8594, 97, 105, 108, 59, 1, 8611, 97, 114, 112, 111, 111, 110, 4, 2, 100, 117, 16093, 16099, 111, 119, 110, 59, 1, 8641, 112, 59, 1, 8640, 101, 102, 116, 4, 2, 97, 104, 16112, 16120, 114, 114, 111, 119, 115, 59, 1, 8644, 97, 114, 112, 111, 111, 110, 115, 59, 1, 8652, 105, 103, 104, 116, 97, 114, 114, 111, 119, 115, 59, 1, 8649, 113, 117, 105, 103, 97, 114, 114, 111, 119, 59, 1, 8605, 104, 114, 101, 101, 116, 105, 109, 101, 115, 59, 1, 8908, 103, 59, 1, 730, 105, 110, 103, 100, 111, 116, 115, 101, 113, 59, 1, 8787, 4, 3, 97, 104, 109, 16191, 16196, 16201, 114, 114, 59, 1, 8644, 97, 114, 59, 1, 8652, 59, 1, 8207, 111, 117, 115, 116, 4, 2, 59, 97, 16214, 16216, 1, 9137, 99, 104, 101, 59, 1, 9137, 109, 105, 100, 59, 1, 10990, 4, 4, 97, 98, 112, 116, 16238, 16252, 16257, 16278, 4, 2, 110, 114, 16244, 16248, 103, 59, 1, 10221, 114, 59, 1, 8702, 114, 107, 59, 1, 10215, 4, 3, 97, 102, 108, 16265, 16269, 16273, 114, 59, 1, 10630, 59, 3, 55349, 56675, 117, 115, 59, 1, 10798, 105, 109, 101, 115, 59, 1, 10805, 4, 2, 97, 112, 16291, 16304, 114, 4, 2, 59, 103, 16298, 16300, 1, 41, 116, 59, 1, 10644, 111, 108, 105, 110, 116, 59, 1, 10770, 97, 114, 114, 59, 1, 8649, 4, 4, 97, 99, 104, 113, 16328, 16334, 16339, 16342, 113, 117, 111, 59, 1, 8250, 114, 59, 3, 55349, 56519, 59, 1, 8625, 4, 2, 98, 117, 16348, 16351, 59, 1, 93, 111, 4, 2, 59, 114, 16358, 16360, 1, 8217, 59, 1, 8217, 4, 3, 104, 105, 114, 16371, 16377, 16383, 114, 101, 101, 59, 1, 8908, 109, 101, 115, 59, 1, 8906, 105, 4, 4, 59, 101, 102, 108, 16394, 16396, 16399, 16402, 1, 9657, 59, 1, 8885, 59, 1, 9656, 116, 114, 105, 59, 1, 10702, 108, 117, 104, 97, 114, 59, 1, 10600, 59, 1, 8478, 4, 19, 97, 98, 99, 100, 101, 102, 104, 105, 108, 109, 111, 112, 113, 114, 115, 116, 117, 119, 122, 16459, 16466, 16472, 16572, 16590, 16672, 16687, 16746, 16844, 16850, 16924, 16963, 16988, 17115, 17121, 17154, 17206, 17614, 17656, 99, 117, 116, 101, 59, 1, 347, 113, 117, 111, 59, 1, 8218, 4, 10, 59, 69, 97, 99, 101, 105, 110, 112, 115, 121, 16494, 16496, 16499, 16513, 16518, 16531, 16536, 16556, 16564, 16569, 1, 8827, 59, 1, 10932, 4, 2, 112, 114, 16505, 16508, 59, 1, 10936, 111, 110, 59, 1, 353, 117, 101, 59, 1, 8829, 4, 2, 59, 100, 16524, 16526, 1, 10928, 105, 108, 59, 1, 351, 114, 99, 59, 1, 349, 4, 3, 69, 97, 115, 16544, 16547, 16551, 59, 1, 10934, 112, 59, 1, 10938, 105, 109, 59, 1, 8937, 111, 108, 105, 110, 116, 59, 1, 10771, 105, 109, 59, 1, 8831, 59, 1, 1089, 111, 116, 4, 3, 59, 98, 101, 16582, 16584, 16587, 1, 8901, 59, 1, 8865, 59, 1, 10854, 4, 7, 65, 97, 99, 109, 115, 116, 120, 16606, 16611, 16634, 16642, 16646, 16652, 16668, 114, 114, 59, 1, 8664, 114, 4, 2, 104, 114, 16618, 16622, 107, 59, 1, 10533, 4, 2, 59, 111, 16628, 16630, 1, 8600, 119, 59, 1, 8600, 116, 5, 167, 1, 59, 16640, 1, 167, 105, 59, 1, 59, 119, 97, 114, 59, 1, 10537, 109, 4, 2, 105, 110, 16659, 16665, 110, 117, 115, 59, 1, 8726, 59, 1, 8726, 116, 59, 1, 10038, 114, 4, 2, 59, 111, 16679, 16682, 3, 55349, 56624, 119, 110, 59, 1, 8994, 4, 4, 97, 99, 111, 121, 16697, 16702, 16716, 16739, 114, 112, 59, 1, 9839, 4, 2, 104, 121, 16708, 16713, 99, 121, 59, 1, 1097, 59, 1, 1096, 114, 116, 4, 2, 109, 112, 16724, 16729, 105, 100, 59, 1, 8739, 97, 114, 97, 108, 108, 101, 108, 59, 1, 8741, 5, 173, 1, 59, 16744, 1, 173, 4, 2, 103, 109, 16752, 16770, 109, 97, 4, 3, 59, 102, 118, 16762, 16764, 16767, 1, 963, 59, 1, 962, 59, 1, 962, 4, 8, 59, 100, 101, 103, 108, 110, 112, 114, 16788, 16790, 16795, 16806, 16817, 16828, 16832, 16838, 1, 8764, 111, 116, 59, 1, 10858, 4, 2, 59, 113, 16801, 16803, 1, 8771, 59, 1, 8771, 4, 2, 59, 69, 16812, 16814, 1, 10910, 59, 1, 10912, 4, 2, 59, 69, 16823, 16825, 1, 10909, 59, 1, 10911, 101, 59, 1, 8774, 108, 117, 115, 59, 1, 10788, 97, 114, 114, 59, 1, 10610, 97, 114, 114, 59, 1, 8592, 4, 4, 97, 101, 105, 116, 16860, 16883, 16891, 16904, 4, 2, 108, 115, 16866, 16878, 108, 115, 101, 116, 109, 105, 110, 117, 115, 59, 1, 8726, 104, 112, 59, 1, 10803, 112, 97, 114, 115, 108, 59, 1, 10724, 4, 2, 100, 108, 16897, 16900, 59, 1, 8739, 101, 59, 1, 8995, 4, 2, 59, 101, 16910, 16912, 1, 10922, 4, 2, 59, 115, 16918, 16920, 1, 10924, 59, 3, 10924, 65024, 4, 3, 102, 108, 112, 16932, 16938, 16958, 116, 99, 121, 59, 1, 1100, 4, 2, 59, 98, 16944, 16946, 1, 47, 4, 2, 59, 97, 16952, 16954, 1, 10692, 114, 59, 1, 9023, 102, 59, 3, 55349, 56676, 97, 4, 2, 100, 114, 16970, 16985, 101, 115, 4, 2, 59, 117, 16978, 16980, 1, 9824, 105, 116, 59, 1, 9824, 59, 1, 8741, 4, 3, 99, 115, 117, 16996, 17028, 17089, 4, 2, 97, 117, 17002, 17015, 112, 4, 2, 59, 115, 17009, 17011, 1, 8851, 59, 3, 8851, 65024, 112, 4, 2, 59, 115, 17022, 17024, 1, 8852, 59, 3, 8852, 65024, 117, 4, 2, 98, 112, 17035, 17062, 4, 3, 59, 101, 115, 17043, 17045, 17048, 1, 8847, 59, 1, 8849, 101, 116, 4, 2, 59, 101, 17056, 17058, 1, 8847, 113, 59, 1, 8849, 4, 3, 59, 101, 115, 17070, 17072, 17075, 1, 8848, 59, 1, 8850, 101, 116, 4, 2, 59, 101, 17083, 17085, 1, 8848, 113, 59, 1, 8850, 4, 3, 59, 97, 102, 17097, 17099, 17112, 1, 9633, 114, 4, 2, 101, 102, 17106, 17109, 59, 1, 9633, 59, 1, 9642, 59, 1, 9642, 97, 114, 114, 59, 1, 8594, 4, 4, 99, 101, 109, 116, 17131, 17136, 17142, 17148, 114, 59, 3, 55349, 56520, 116, 109, 110, 59, 1, 8726, 105, 108, 101, 59, 1, 8995, 97, 114, 102, 59, 1, 8902, 4, 2, 97, 114, 17160, 17172, 114, 4, 2, 59, 102, 17167, 17169, 1, 9734, 59, 1, 9733, 4, 2, 97, 110, 17178, 17202, 105, 103, 104, 116, 4, 2, 101, 112, 17188, 17197, 112, 115, 105, 108, 111, 110, 59, 1, 1013, 104, 105, 59, 1, 981, 115, 59, 1, 175, 4, 5, 98, 99, 109, 110, 112, 17218, 17351, 17420, 17423, 17427, 4, 9, 59, 69, 100, 101, 109, 110, 112, 114, 115, 17238, 17240, 17243, 17248, 17261, 17267, 17279, 17285, 17291, 1, 8834, 59, 1, 10949, 111, 116, 59, 1, 10941, 4, 2, 59, 100, 17254, 17256, 1, 8838, 111, 116, 59, 1, 10947, 117, 108, 116, 59, 1, 10945, 4, 2, 69, 101, 17273, 17276, 59, 1, 10955, 59, 1, 8842, 108, 117, 115, 59, 1, 10943, 97, 114, 114, 59, 1, 10617, 4, 3, 101, 105, 117, 17299, 17335, 17339, 116, 4, 3, 59, 101, 110, 17308, 17310, 17322, 1, 8834, 113, 4, 2, 59, 113, 17317, 17319, 1, 8838, 59, 1, 10949, 101, 113, 4, 2, 59, 113, 17330, 17332, 1, 8842, 59, 1, 10955, 109, 59, 1, 10951, 4, 2, 98, 112, 17345, 17348, 59, 1, 10965, 59, 1, 10963, 99, 4, 6, 59, 97, 99, 101, 110, 115, 17366, 17368, 17376, 17385, 17389, 17415, 1, 8827, 112, 112, 114, 111, 120, 59, 1, 10936, 117, 114, 108, 121, 101, 113, 59, 1, 8829, 113, 59, 1, 10928, 4, 3, 97, 101, 115, 17397, 17405, 17410, 112, 112, 114, 111, 120, 59, 1, 10938, 113, 113, 59, 1, 10934, 105, 109, 59, 1, 8937, 105, 109, 59, 1, 8831, 59, 1, 8721, 103, 59, 1, 9834, 4, 13, 49, 50, 51, 59, 69, 100, 101, 104, 108, 109, 110, 112, 115, 17455, 17462, 17469, 17476, 17478, 17481, 17496, 17509, 17524, 17530, 17536, 17548, 17554, 5, 185, 1, 59, 17460, 1, 185, 5, 178, 1, 59, 17467, 1, 178, 5, 179, 1, 59, 17474, 1, 179, 1, 8835, 59, 1, 10950, 4, 2, 111, 115, 17487, 17491, 116, 59, 1, 10942, 117, 98, 59, 1, 10968, 4, 2, 59, 100, 17502, 17504, 1, 8839, 111, 116, 59, 1, 10948, 115, 4, 2, 111, 117, 17516, 17520, 108, 59, 1, 10185, 98, 59, 1, 10967, 97, 114, 114, 59, 1, 10619, 117, 108, 116, 59, 1, 10946, 4, 2, 69, 101, 17542, 17545, 59, 1, 10956, 59, 1, 8843, 108, 117, 115, 59, 1, 10944, 4, 3, 101, 105, 117, 17562, 17598, 17602, 116, 4, 3, 59, 101, 110, 17571, 17573, 17585, 1, 8835, 113, 4, 2, 59, 113, 17580, 17582, 1, 8839, 59, 1, 10950, 101, 113, 4, 2, 59, 113, 17593, 17595, 1, 8843, 59, 1, 10956, 109, 59, 1, 10952, 4, 2, 98, 112, 17608, 17611, 59, 1, 10964, 59, 1, 10966, 4, 3, 65, 97, 110, 17622, 17627, 17650, 114, 114, 59, 1, 8665, 114, 4, 2, 104, 114, 17634, 17638, 107, 59, 1, 10534, 4, 2, 59, 111, 17644, 17646, 1, 8601, 119, 59, 1, 8601, 119, 97, 114, 59, 1, 10538, 108, 105, 103, 5, 223, 1, 59, 17664, 1, 223, 4, 13, 97, 98, 99, 100, 101, 102, 104, 105, 111, 112, 114, 115, 119, 17694, 17709, 17714, 17737, 17742, 17749, 17754, 17860, 17905, 17957, 17964, 18090, 18122, 4, 2, 114, 117, 17700, 17706, 103, 101, 116, 59, 1, 8982, 59, 1, 964, 114, 107, 59, 1, 9140, 4, 3, 97, 101, 121, 17722, 17728, 17734, 114, 111, 110, 59, 1, 357, 100, 105, 108, 59, 1, 355, 59, 1, 1090, 111, 116, 59, 1, 8411, 108, 114, 101, 99, 59, 1, 8981, 114, 59, 3, 55349, 56625, 4, 4, 101, 105, 107, 111, 17764, 17805, 17836, 17851, 4, 2, 114, 116, 17770, 17786, 101, 4, 2, 52, 102, 17777, 17780, 59, 1, 8756, 111, 114, 101, 59, 1, 8756, 97, 4, 3, 59, 115, 118, 17795, 17797, 17802, 1, 952, 121, 109, 59, 1, 977, 59, 1, 977, 4, 2, 99, 110, 17811, 17831, 107, 4, 2, 97, 115, 17818, 17826, 112, 112, 114, 111, 120, 59, 1, 8776, 105, 109, 59, 1, 8764, 115, 112, 59, 1, 8201, 4, 2, 97, 115, 17842, 17846, 112, 59, 1, 8776, 105, 109, 59, 1, 8764, 114, 110, 5, 254, 1, 59, 17858, 1, 254, 4, 3, 108, 109, 110, 17868, 17873, 17901, 100, 101, 59, 1, 732, 101, 115, 5, 215, 3, 59, 98, 100, 17884, 17886, 17898, 1, 215, 4, 2, 59, 97, 17892, 17894, 1, 8864, 114, 59, 1, 10801, 59, 1, 10800, 116, 59, 1, 8749, 4, 3, 101, 112, 115, 17913, 17917, 17953, 97, 59, 1, 10536, 4, 4, 59, 98, 99, 102, 17927, 17929, 17934, 17939, 1, 8868, 111, 116, 59, 1, 9014, 105, 114, 59, 1, 10993, 4, 2, 59, 111, 17945, 17948, 3, 55349, 56677, 114, 107, 59, 1, 10970, 97, 59, 1, 10537, 114, 105, 109, 101, 59, 1, 8244, 4, 3, 97, 105, 112, 17972, 17977, 18082, 100, 101, 59, 1, 8482, 4, 7, 97, 100, 101, 109, 112, 115, 116, 17993, 18051, 18056, 18059, 18066, 18072, 18076, 110, 103, 108, 101, 4, 5, 59, 100, 108, 113, 114, 18009, 18011, 18017, 18032, 18035, 1, 9653, 111, 119, 110, 59, 1, 9663, 101, 102, 116, 4, 2, 59, 101, 18026, 18028, 1, 9667, 113, 59, 1, 8884, 59, 1, 8796, 105, 103, 104, 116, 4, 2, 59, 101, 18045, 18047, 1, 9657, 113, 59, 1, 8885, 111, 116, 59, 1, 9708, 59, 1, 8796, 105, 110, 117, 115, 59, 1, 10810, 108, 117, 115, 59, 1, 10809, 98, 59, 1, 10701, 105, 109, 101, 59, 1, 10811, 101, 122, 105, 117, 109, 59, 1, 9186, 4, 3, 99, 104, 116, 18098, 18111, 18116, 4, 2, 114, 121, 18104, 18108, 59, 3, 55349, 56521, 59, 1, 1094, 99, 121, 59, 1, 1115, 114, 111, 107, 59, 1, 359, 4, 2, 105, 111, 18128, 18133, 120, 116, 59, 1, 8812, 104, 101, 97, 100, 4, 2, 108, 114, 18143, 18154, 101, 102, 116, 97, 114, 114, 111, 119, 59, 1, 8606, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8608, 4, 18, 65, 72, 97, 98, 99, 100, 102, 103, 104, 108, 109, 111, 112, 114, 115, 116, 117, 119, 18204, 18209, 18214, 18234, 18250, 18268, 18292, 18308, 18319, 18343, 18379, 18397, 18413, 18504, 18547, 18553, 18584, 18603, 114, 114, 59, 1, 8657, 97, 114, 59, 1, 10595, 4, 2, 99, 114, 18220, 18230, 117, 116, 101, 5, 250, 1, 59, 18228, 1, 250, 114, 59, 1, 8593, 114, 4, 2, 99, 101, 18241, 18245, 121, 59, 1, 1118, 118, 101, 59, 1, 365, 4, 2, 105, 121, 18256, 18265, 114, 99, 5, 251, 1, 59, 18263, 1, 251, 59, 1, 1091, 4, 3, 97, 98, 104, 18276, 18281, 18287, 114, 114, 59, 1, 8645, 108, 97, 99, 59, 1, 369, 97, 114, 59, 1, 10606, 4, 2, 105, 114, 18298, 18304, 115, 104, 116, 59, 1, 10622, 59, 3, 55349, 56626, 114, 97, 118, 101, 5, 249, 1, 59, 18317, 1, 249, 4, 2, 97, 98, 18325, 18338, 114, 4, 2, 108, 114, 18332, 18335, 59, 1, 8639, 59, 1, 8638, 108, 107, 59, 1, 9600, 4, 2, 99, 116, 18349, 18374, 4, 2, 111, 114, 18355, 18369, 114, 110, 4, 2, 59, 101, 18363, 18365, 1, 8988, 114, 59, 1, 8988, 111, 112, 59, 1, 8975, 114, 105, 59, 1, 9720, 4, 2, 97, 108, 18385, 18390, 99, 114, 59, 1, 363, 5, 168, 1, 59, 18395, 1, 168, 4, 2, 103, 112, 18403, 18408, 111, 110, 59, 1, 371, 102, 59, 3, 55349, 56678, 4, 6, 97, 100, 104, 108, 115, 117, 18427, 18434, 18445, 18470, 18475, 18494, 114, 114, 111, 119, 59, 1, 8593, 111, 119, 110, 97, 114, 114, 111, 119, 59, 1, 8597, 97, 114, 112, 111, 111, 110, 4, 2, 108, 114, 18457, 18463, 101, 102, 116, 59, 1, 8639, 105, 103, 104, 116, 59, 1, 8638, 117, 115, 59, 1, 8846, 105, 4, 3, 59, 104, 108, 18484, 18486, 18489, 1, 965, 59, 1, 978, 111, 110, 59, 1, 965, 112, 97, 114, 114, 111, 119, 115, 59, 1, 8648, 4, 3, 99, 105, 116, 18512, 18537, 18542, 4, 2, 111, 114, 18518, 18532, 114, 110, 4, 2, 59, 101, 18526, 18528, 1, 8989, 114, 59, 1, 8989, 111, 112, 59, 1, 8974, 110, 103, 59, 1, 367, 114, 105, 59, 1, 9721, 99, 114, 59, 3, 55349, 56522, 4, 3, 100, 105, 114, 18561, 18566, 18572, 111, 116, 59, 1, 8944, 108, 100, 101, 59, 1, 361, 105, 4, 2, 59, 102, 18579, 18581, 1, 9653, 59, 1, 9652, 4, 2, 97, 109, 18590, 18595, 114, 114, 59, 1, 8648, 108, 5, 252, 1, 59, 18601, 1, 252, 97, 110, 103, 108, 101, 59, 1, 10663, 4, 15, 65, 66, 68, 97, 99, 100, 101, 102, 108, 110, 111, 112, 114, 115, 122, 18643, 18648, 18661, 18667, 18847, 18851, 18857, 18904, 18909, 18915, 18931, 18937, 18943, 18949, 18996, 114, 114, 59, 1, 8661, 97, 114, 4, 2, 59, 118, 18656, 18658, 1, 10984, 59, 1, 10985, 97, 115, 104, 59, 1, 8872, 4, 2, 110, 114, 18673, 18679, 103, 114, 116, 59, 1, 10652, 4, 7, 101, 107, 110, 112, 114, 115, 116, 18695, 18704, 18711, 18720, 18742, 18754, 18810, 112, 115, 105, 108, 111, 110, 59, 1, 1013, 97, 112, 112, 97, 59, 1, 1008, 111, 116, 104, 105, 110, 103, 59, 1, 8709, 4, 3, 104, 105, 114, 18728, 18732, 18735, 105, 59, 1, 981, 59, 1, 982, 111, 112, 116, 111, 59, 1, 8733, 4, 2, 59, 104, 18748, 18750, 1, 8597, 111, 59, 1, 1009, 4, 2, 105, 117, 18760, 18766, 103, 109, 97, 59, 1, 962, 4, 2, 98, 112, 18772, 18791, 115, 101, 116, 110, 101, 113, 4, 2, 59, 113, 18784, 18787, 3, 8842, 65024, 59, 3, 10955, 65024, 115, 101, 116, 110, 101, 113, 4, 2, 59, 113, 18803, 18806, 3, 8843, 65024, 59, 3, 10956, 65024, 4, 2, 104, 114, 18816, 18822, 101, 116, 97, 59, 1, 977, 105, 97, 110, 103, 108, 101, 4, 2, 108, 114, 18834, 18840, 101, 102, 116, 59, 1, 8882, 105, 103, 104, 116, 59, 1, 8883, 121, 59, 1, 1074, 97, 115, 104, 59, 1, 8866, 4, 3, 101, 108, 114, 18865, 18884, 18890, 4, 3, 59, 98, 101, 18873, 18875, 18880, 1, 8744, 97, 114, 59, 1, 8891, 113, 59, 1, 8794, 108, 105, 112, 59, 1, 8942, 4, 2, 98, 116, 18896, 18901, 97, 114, 59, 1, 124, 59, 1, 124, 114, 59, 3, 55349, 56627, 116, 114, 105, 59, 1, 8882, 115, 117, 4, 2, 98, 112, 18923, 18927, 59, 3, 8834, 8402, 59, 3, 8835, 8402, 112, 102, 59, 3, 55349, 56679, 114, 111, 112, 59, 1, 8733, 116, 114, 105, 59, 1, 8883, 4, 2, 99, 117, 18955, 18960, 114, 59, 3, 55349, 56523, 4, 2, 98, 112, 18966, 18981, 110, 4, 2, 69, 101, 18973, 18977, 59, 3, 10955, 65024, 59, 3, 8842, 65024, 110, 4, 2, 69, 101, 18988, 18992, 59, 3, 10956, 65024, 59, 3, 8843, 65024, 105, 103, 122, 97, 103, 59, 1, 10650, 4, 7, 99, 101, 102, 111, 112, 114, 115, 19020, 19026, 19061, 19066, 19072, 19075, 19089, 105, 114, 99, 59, 1, 373, 4, 2, 100, 105, 19032, 19055, 4, 2, 98, 103, 19038, 19043, 97, 114, 59, 1, 10847, 101, 4, 2, 59, 113, 19050, 19052, 1, 8743, 59, 1, 8793, 101, 114, 112, 59, 1, 8472, 114, 59, 3, 55349, 56628, 112, 102, 59, 3, 55349, 56680, 59, 1, 8472, 4, 2, 59, 101, 19081, 19083, 1, 8768, 97, 116, 104, 59, 1, 8768, 99, 114, 59, 3, 55349, 56524, 4, 14, 99, 100, 102, 104, 105, 108, 109, 110, 111, 114, 115, 117, 118, 119, 19125, 19146, 19152, 19157, 19173, 19176, 19192, 19197, 19202, 19236, 19252, 19269, 19286, 19291, 4, 3, 97, 105, 117, 19133, 19137, 19142, 112, 59, 1, 8898, 114, 99, 59, 1, 9711, 112, 59, 1, 8899, 116, 114, 105, 59, 1, 9661, 114, 59, 3, 55349, 56629, 4, 2, 65, 97, 19163, 19168, 114, 114, 59, 1, 10234, 114, 114, 59, 1, 10231, 59, 1, 958, 4, 2, 65, 97, 19182, 19187, 114, 114, 59, 1, 10232, 114, 114, 59, 1, 10229, 97, 112, 59, 1, 10236, 105, 115, 59, 1, 8955, 4, 3, 100, 112, 116, 19210, 19215, 19230, 111, 116, 59, 1, 10752, 4, 2, 102, 108, 19221, 19225, 59, 3, 55349, 56681, 117, 115, 59, 1, 10753, 105, 109, 101, 59, 1, 10754, 4, 2, 65, 97, 19242, 19247, 114, 114, 59, 1, 10233, 114, 114, 59, 1, 10230, 4, 2, 99, 113, 19258, 19263, 114, 59, 3, 55349, 56525, 99, 117, 112, 59, 1, 10758, 4, 2, 112, 116, 19275, 19281, 108, 117, 115, 59, 1, 10756, 114, 105, 59, 1, 9651, 101, 101, 59, 1, 8897, 101, 100, 103, 101, 59, 1, 8896, 4, 8, 97, 99, 101, 102, 105, 111, 115, 117, 19316, 19335, 19349, 19357, 19362, 19367, 19373, 19379, 99, 4, 2, 117, 121, 19323, 19332, 116, 101, 5, 253, 1, 59, 19330, 1, 253, 59, 1, 1103, 4, 2, 105, 121, 19341, 19346, 114, 99, 59, 1, 375, 59, 1, 1099, 110, 5, 165, 1, 59, 19355, 1, 165, 114, 59, 3, 55349, 56630, 99, 121, 59, 1, 1111, 112, 102, 59, 3, 55349, 56682, 99, 114, 59, 3, 55349, 56526, 4, 2, 99, 109, 19385, 19389, 121, 59, 1, 1102, 108, 5, 255, 1, 59, 19395, 1, 255, 4, 10, 97, 99, 100, 101, 102, 104, 105, 111, 115, 119, 19419, 19426, 19441, 19446, 19462, 19467, 19472, 19480, 19486, 19492, 99, 117, 116, 101, 59, 1, 378, 4, 2, 97, 121, 19432, 19438, 114, 111, 110, 59, 1, 382, 59, 1, 1079, 111, 116, 59, 1, 380, 4, 2, 101, 116, 19452, 19458, 116, 114, 102, 59, 1, 8488, 97, 59, 1, 950, 114, 59, 3, 55349, 56631, 99, 121, 59, 1, 1078, 103, 114, 97, 114, 114, 59, 1, 8669, 112, 102, 59, 3, 55349, 56683, 99, 114, 59, 3, 55349, 56527, 4, 2, 106, 110, 19498, 19501, 59, 1, 8205, 106, 59, 1, 8204]);
const qK = VK, St = ur, Js = WK, oe = kb, H = St.CODE_POINTS, Ls = St.CODE_POINT_SEQUENCES, GK = {
  128: 8364,
  130: 8218,
  131: 402,
  132: 8222,
  133: 8230,
  134: 8224,
  135: 8225,
  136: 710,
  137: 8240,
  138: 352,
  139: 8249,
  140: 338,
  142: 381,
  145: 8216,
  146: 8217,
  147: 8220,
  148: 8221,
  149: 8226,
  150: 8211,
  151: 8212,
  152: 732,
  153: 8482,
  154: 353,
  155: 8250,
  156: 339,
  158: 382,
  159: 376
}, $C = 1, jC = 2, zC = 4, KK = $C | jC | zC, at = "DATA_STATE", Ua = "RCDATA_STATE", Cc = "RAWTEXT_STATE", io = "SCRIPT_DATA_STATE", UC = "PLAINTEXT_STATE", j9 = "TAG_OPEN_STATE", z9 = "END_TAG_OPEN_STATE", Dm = "TAG_NAME_STATE", U9 = "RCDATA_LESS_THAN_SIGN_STATE", V9 = "RCDATA_END_TAG_OPEN_STATE", W9 = "RCDATA_END_TAG_NAME_STATE", q9 = "RAWTEXT_LESS_THAN_SIGN_STATE", G9 = "RAWTEXT_END_TAG_OPEN_STATE", K9 = "RAWTEXT_END_TAG_NAME_STATE", Y9 = "SCRIPT_DATA_LESS_THAN_SIGN_STATE", J9 = "SCRIPT_DATA_END_TAG_OPEN_STATE", X9 = "SCRIPT_DATA_END_TAG_NAME_STATE", Q9 = "SCRIPT_DATA_ESCAPE_START_STATE", Z9 = "SCRIPT_DATA_ESCAPE_START_DASH_STATE", Gi = "SCRIPT_DATA_ESCAPED_STATE", e4 = "SCRIPT_DATA_ESCAPED_DASH_STATE", Pm = "SCRIPT_DATA_ESCAPED_DASH_DASH_STATE", Md = "SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE", t4 = "SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE", n4 = "SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE", i4 = "SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE", Yr = "SCRIPT_DATA_DOUBLE_ESCAPED_STATE", r4 = "SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE", o4 = "SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE", Nd = "SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE", s4 = "SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE", gr = "BEFORE_ATTRIBUTE_NAME_STATE", Od = "ATTRIBUTE_NAME_STATE", Fm = "AFTER_ATTRIBUTE_NAME_STATE", Bm = "BEFORE_ATTRIBUTE_VALUE_STATE", Rd = "ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE", Id = "ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE", Ld = "ATTRIBUTE_VALUE_UNQUOTED_STATE", Hm = "AFTER_ATTRIBUTE_VALUE_QUOTED_STATE", Bo = "SELF_CLOSING_START_TAG_STATE", dc = "BOGUS_COMMENT_STATE", a4 = "MARKUP_DECLARATION_OPEN_STATE", l4 = "COMMENT_START_STATE", c4 = "COMMENT_START_DASH_STATE", Ho = "COMMENT_STATE", f4 = "COMMENT_LESS_THAN_SIGN_STATE", d4 = "COMMENT_LESS_THAN_SIGN_BANG_STATE", u4 = "COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE", h4 = "COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE", Dd = "COMMENT_END_DASH_STATE", Pd = "COMMENT_END_STATE", p4 = "COMMENT_END_BANG_STATE", m4 = "DOCTYPE_STATE", Fd = "BEFORE_DOCTYPE_NAME_STATE", Bd = "DOCTYPE_NAME_STATE", g4 = "AFTER_DOCTYPE_NAME_STATE", y4 = "AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE", v4 = "BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE", $m = "DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE", jm = "DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE", zm = "AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE", b4 = "BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE", k4 = "AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE", w4 = "BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE", uc = "DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE", hc = "DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE", Um = "AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE", Jr = "BOGUS_DOCTYPE_STATE", Hd = "CDATA_SECTION_STATE", _4 = "CDATA_SECTION_BRACKET_STATE", E4 = "CDATA_SECTION_END_STATE", La = "CHARACTER_REFERENCE_STATE", T4 = "NAMED_CHARACTER_REFERENCE_STATE", C4 = "AMBIGUOS_AMPERSAND_STATE", S4 = "NUMERIC_CHARACTER_REFERENCE_STATE", x4 = "HEXADEMICAL_CHARACTER_REFERENCE_START_STATE", A4 = "DECIMAL_CHARACTER_REFERENCE_START_STATE", M4 = "HEXADEMICAL_CHARACTER_REFERENCE_STATE", N4 = "DECIMAL_CHARACTER_REFERENCE_STATE", pc = "NUMERIC_CHARACTER_REFERENCE_END_STATE";
function $t(t) {
  return t === H.SPACE || t === H.LINE_FEED || t === H.TABULATION || t === H.FORM_FEED;
}
function Fc(t) {
  return t >= H.DIGIT_0 && t <= H.DIGIT_9;
}
function Ki(t) {
  return t >= H.LATIN_CAPITAL_A && t <= H.LATIN_CAPITAL_Z;
}
function Bs(t) {
  return t >= H.LATIN_SMALL_A && t <= H.LATIN_SMALL_Z;
}
function Vo(t) {
  return Bs(t) || Ki(t);
}
function Vm(t) {
  return Vo(t) || Fc(t);
}
function VC(t) {
  return t >= H.LATIN_CAPITAL_A && t <= H.LATIN_CAPITAL_F;
}
function WC(t) {
  return t >= H.LATIN_SMALL_A && t <= H.LATIN_SMALL_F;
}
function YK(t) {
  return Fc(t) || VC(t) || WC(t);
}
function hu(t) {
  return t + 32;
}
function Kt(t) {
  return t <= 65535 ? String.fromCharCode(t) : (t -= 65536, String.fromCharCode(t >>> 10 & 1023 | 55296) + String.fromCharCode(56320 | t & 1023));
}
function $o(t) {
  return String.fromCharCode(hu(t));
}
function O4(t, e) {
  const n = Js[++t];
  let i = ++t, r = i + n - 1;
  for (; i <= r; ) {
    const o = i + r >>> 1, s = Js[o];
    if (s < e)
      i = o + 1;
    else if (s > e)
      r = o - 1;
    else
      return Js[o + n];
  }
  return -1;
}
let ji = class Qn {
  constructor() {
    this.preprocessor = new qK(), this.tokenQueue = [], this.allowCDATA = !1, this.state = at, this.returnState = "", this.charRefCode = -1, this.tempBuff = [], this.lastStartTagName = "", this.consumedAfterSnapshot = -1, this.active = !1, this.currentCharacterToken = null, this.currentToken = null, this.currentAttr = null;
  }
  //Errors
  _err() {
  }
  _errOnNextCodePoint(e) {
    this._consume(), this._err(e), this._unconsume();
  }
  //API
  getNextToken() {
    for (; !this.tokenQueue.length && this.active; ) {
      this.consumedAfterSnapshot = 0;
      const e = this._consume();
      this._ensureHibernation() || this[this.state](e);
    }
    return this.tokenQueue.shift();
  }
  write(e, n) {
    this.active = !0, this.preprocessor.write(e, n);
  }
  insertHtmlAtCurrentPos(e) {
    this.active = !0, this.preprocessor.insertHtmlAtCurrentPos(e);
  }
  //Hibernation
  _ensureHibernation() {
    if (this.preprocessor.endOfChunkHit) {
      for (; this.consumedAfterSnapshot > 0; this.consumedAfterSnapshot--)
        this.preprocessor.retreat();
      return this.active = !1, this.tokenQueue.push({ type: Qn.HIBERNATION_TOKEN }), !0;
    }
    return !1;
  }
  //Consumption
  _consume() {
    return this.consumedAfterSnapshot++, this.preprocessor.advance();
  }
  _unconsume() {
    this.consumedAfterSnapshot--, this.preprocessor.retreat();
  }
  _reconsumeInState(e) {
    this.state = e, this._unconsume();
  }
  _consumeSequenceIfMatch(e, n, i) {
    let r = 0, o = !0;
    const s = e.length;
    let a = 0, l = n, c;
    for (; a < s; a++) {
      if (a > 0 && (l = this._consume(), r++), l === H.EOF) {
        o = !1;
        break;
      }
      if (c = e[a], l !== c && (i || l !== hu(c))) {
        o = !1;
        break;
      }
    }
    if (!o)
      for (; r--; )
        this._unconsume();
    return o;
  }
  //Temp buffer
  _isTempBufferEqualToScriptString() {
    if (this.tempBuff.length !== Ls.SCRIPT_STRING.length)
      return !1;
    for (let e = 0; e < this.tempBuff.length; e++)
      if (this.tempBuff[e] !== Ls.SCRIPT_STRING[e])
        return !1;
    return !0;
  }
  //Token creation
  _createStartTagToken() {
    this.currentToken = {
      type: Qn.START_TAG_TOKEN,
      tagName: "",
      selfClosing: !1,
      ackSelfClosing: !1,
      attrs: []
    };
  }
  _createEndTagToken() {
    this.currentToken = {
      type: Qn.END_TAG_TOKEN,
      tagName: "",
      selfClosing: !1,
      attrs: []
    };
  }
  _createCommentToken() {
    this.currentToken = {
      type: Qn.COMMENT_TOKEN,
      data: ""
    };
  }
  _createDoctypeToken(e) {
    this.currentToken = {
      type: Qn.DOCTYPE_TOKEN,
      name: e,
      forceQuirks: !1,
      publicId: null,
      systemId: null
    };
  }
  _createCharacterToken(e, n) {
    this.currentCharacterToken = {
      type: e,
      chars: n
    };
  }
  _createEOFToken() {
    this.currentToken = { type: Qn.EOF_TOKEN };
  }
  //Tag attributes
  _createAttr(e) {
    this.currentAttr = {
      name: e,
      value: ""
    };
  }
  _leaveAttrName(e) {
    Qn.getTokenAttr(this.currentToken, this.currentAttr.name) === null ? this.currentToken.attrs.push(this.currentAttr) : this._err(oe.duplicateAttribute), this.state = e;
  }
  _leaveAttrValue(e) {
    this.state = e;
  }
  //Token emission
  _emitCurrentToken() {
    this._emitCurrentCharacterToken();
    const e = this.currentToken;
    this.currentToken = null, e.type === Qn.START_TAG_TOKEN ? this.lastStartTagName = e.tagName : e.type === Qn.END_TAG_TOKEN && (e.attrs.length > 0 && this._err(oe.endTagWithAttributes), e.selfClosing && this._err(oe.endTagWithTrailingSolidus)), this.tokenQueue.push(e);
  }
  _emitCurrentCharacterToken() {
    this.currentCharacterToken && (this.tokenQueue.push(this.currentCharacterToken), this.currentCharacterToken = null);
  }
  _emitEOFToken() {
    this._createEOFToken(), this._emitCurrentToken();
  }
  //Characters emission
  //OPTIMIZATION: specification uses only one type of character tokens (one token per character).
  //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.
  //If we have a sequence of characters that belong to the same group, parser can process it
  //as a single solid character token.
  //So, there are 3 types of character tokens in parse5:
  //1)NULL_CHARACTER_TOKEN - \u0000-character sequences (e.g. '\u0000\u0000\u0000')
  //2)WHITESPACE_CHARACTER_TOKEN - any whitespace/new-line character sequences (e.g. '\n  \r\t   \f')
  //3)CHARACTER_TOKEN - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')
  _appendCharToCurrentCharacterToken(e, n) {
    this.currentCharacterToken && this.currentCharacterToken.type !== e && this._emitCurrentCharacterToken(), this.currentCharacterToken ? this.currentCharacterToken.chars += n : this._createCharacterToken(e, n);
  }
  _emitCodePoint(e) {
    let n = Qn.CHARACTER_TOKEN;
    $t(e) ? n = Qn.WHITESPACE_CHARACTER_TOKEN : e === H.NULL && (n = Qn.NULL_CHARACTER_TOKEN), this._appendCharToCurrentCharacterToken(n, Kt(e));
  }
  _emitSeveralCodePoints(e) {
    for (let n = 0; n < e.length; n++)
      this._emitCodePoint(e[n]);
  }
  //NOTE: used then we emit character explicitly. This is always a non-whitespace and a non-null character.
  //So we can avoid additional checks here.
  _emitChars(e) {
    this._appendCharToCurrentCharacterToken(Qn.CHARACTER_TOKEN, e);
  }
  // Character reference helpers
  _matchNamedCharacterReference(e) {
    let n = null, i = 1, r = O4(0, e);
    for (this.tempBuff.push(e); r > -1; ) {
      const o = Js[r], s = o < KK;
      s && o & $C && (n = o & jC ? [Js[++r], Js[++r]] : [Js[++r]], i = 0);
      const l = this._consume();
      if (this.tempBuff.push(l), i++, l === H.EOF)
        break;
      s ? r = o & zC ? O4(r, l) : -1 : r = l === o ? ++r : -1;
    }
    for (; i--; )
      this.tempBuff.pop(), this._unconsume();
    return n;
  }
  _isCharacterReferenceInAttribute() {
    return this.returnState === Rd || this.returnState === Id || this.returnState === Ld;
  }
  _isCharacterReferenceAttributeQuirk(e) {
    if (!e && this._isCharacterReferenceInAttribute()) {
      const n = this._consume();
      return this._unconsume(), n === H.EQUALS_SIGN || Vm(n);
    }
    return !1;
  }
  _flushCodePointsConsumedAsCharacterReference() {
    if (this._isCharacterReferenceInAttribute())
      for (let e = 0; e < this.tempBuff.length; e++)
        this.currentAttr.value += Kt(this.tempBuff[e]);
    else
      this._emitSeveralCodePoints(this.tempBuff);
    this.tempBuff = [];
  }
  // State machine
  // Data state
  //------------------------------------------------------------------
  [at](e) {
    this.preprocessor.dropParsedChunk(), e === H.LESS_THAN_SIGN ? this.state = j9 : e === H.AMPERSAND ? (this.returnState = at, this.state = La) : e === H.NULL ? (this._err(oe.unexpectedNullCharacter), this._emitCodePoint(e)) : e === H.EOF ? this._emitEOFToken() : this._emitCodePoint(e);
  }
  //  RCDATA state
  //------------------------------------------------------------------
  [Ua](e) {
    this.preprocessor.dropParsedChunk(), e === H.AMPERSAND ? (this.returnState = Ua, this.state = La) : e === H.LESS_THAN_SIGN ? this.state = U9 : e === H.NULL ? (this._err(oe.unexpectedNullCharacter), this._emitChars(St.REPLACEMENT_CHARACTER)) : e === H.EOF ? this._emitEOFToken() : this._emitCodePoint(e);
  }
  // RAWTEXT state
  //------------------------------------------------------------------
  [Cc](e) {
    this.preprocessor.dropParsedChunk(), e === H.LESS_THAN_SIGN ? this.state = q9 : e === H.NULL ? (this._err(oe.unexpectedNullCharacter), this._emitChars(St.REPLACEMENT_CHARACTER)) : e === H.EOF ? this._emitEOFToken() : this._emitCodePoint(e);
  }
  // Script data state
  //------------------------------------------------------------------
  [io](e) {
    this.preprocessor.dropParsedChunk(), e === H.LESS_THAN_SIGN ? this.state = Y9 : e === H.NULL ? (this._err(oe.unexpectedNullCharacter), this._emitChars(St.REPLACEMENT_CHARACTER)) : e === H.EOF ? this._emitEOFToken() : this._emitCodePoint(e);
  }
  // PLAINTEXT state
  //------------------------------------------------------------------
  [UC](e) {
    this.preprocessor.dropParsedChunk(), e === H.NULL ? (this._err(oe.unexpectedNullCharacter), this._emitChars(St.REPLACEMENT_CHARACTER)) : e === H.EOF ? this._emitEOFToken() : this._emitCodePoint(e);
  }
  // Tag open state
  //------------------------------------------------------------------
  [j9](e) {
    e === H.EXCLAMATION_MARK ? this.state = a4 : e === H.SOLIDUS ? this.state = z9 : Vo(e) ? (this._createStartTagToken(), this._reconsumeInState(Dm)) : e === H.QUESTION_MARK ? (this._err(oe.unexpectedQuestionMarkInsteadOfTagName), this._createCommentToken(), this._reconsumeInState(dc)) : e === H.EOF ? (this._err(oe.eofBeforeTagName), this._emitChars("<"), this._emitEOFToken()) : (this._err(oe.invalidFirstCharacterOfTagName), this._emitChars("<"), this._reconsumeInState(at));
  }
  // End tag open state
  //------------------------------------------------------------------
  [z9](e) {
    Vo(e) ? (this._createEndTagToken(), this._reconsumeInState(Dm)) : e === H.GREATER_THAN_SIGN ? (this._err(oe.missingEndTagName), this.state = at) : e === H.EOF ? (this._err(oe.eofBeforeTagName), this._emitChars("</"), this._emitEOFToken()) : (this._err(oe.invalidFirstCharacterOfTagName), this._createCommentToken(), this._reconsumeInState(dc));
  }
  // Tag name state
  //------------------------------------------------------------------
  [Dm](e) {
    $t(e) ? this.state = gr : e === H.SOLIDUS ? this.state = Bo : e === H.GREATER_THAN_SIGN ? (this.state = at, this._emitCurrentToken()) : Ki(e) ? this.currentToken.tagName += $o(e) : e === H.NULL ? (this._err(oe.unexpectedNullCharacter), this.currentToken.tagName += St.REPLACEMENT_CHARACTER) : e === H.EOF ? (this._err(oe.eofInTag), this._emitEOFToken()) : this.currentToken.tagName += Kt(e);
  }
  // RCDATA less-than sign state
  //------------------------------------------------------------------
  [U9](e) {
    e === H.SOLIDUS ? (this.tempBuff = [], this.state = V9) : (this._emitChars("<"), this._reconsumeInState(Ua));
  }
  // RCDATA end tag open state
  //------------------------------------------------------------------
  [V9](e) {
    Vo(e) ? (this._createEndTagToken(), this._reconsumeInState(W9)) : (this._emitChars("</"), this._reconsumeInState(Ua));
  }
  // RCDATA end tag name state
  //------------------------------------------------------------------
  [W9](e) {
    if (Ki(e))
      this.currentToken.tagName += $o(e), this.tempBuff.push(e);
    else if (Bs(e))
      this.currentToken.tagName += Kt(e), this.tempBuff.push(e);
    else {
      if (this.lastStartTagName === this.currentToken.tagName) {
        if ($t(e)) {
          this.state = gr;
          return;
        }
        if (e === H.SOLIDUS) {
          this.state = Bo;
          return;
        }
        if (e === H.GREATER_THAN_SIGN) {
          this.state = at, this._emitCurrentToken();
          return;
        }
      }
      this._emitChars("</"), this._emitSeveralCodePoints(this.tempBuff), this._reconsumeInState(Ua);
    }
  }
  // RAWTEXT less-than sign state
  //------------------------------------------------------------------
  [q9](e) {
    e === H.SOLIDUS ? (this.tempBuff = [], this.state = G9) : (this._emitChars("<"), this._reconsumeInState(Cc));
  }
  // RAWTEXT end tag open state
  //------------------------------------------------------------------
  [G9](e) {
    Vo(e) ? (this._createEndTagToken(), this._reconsumeInState(K9)) : (this._emitChars("</"), this._reconsumeInState(Cc));
  }
  // RAWTEXT end tag name state
  //------------------------------------------------------------------
  [K9](e) {
    if (Ki(e))
      this.currentToken.tagName += $o(e), this.tempBuff.push(e);
    else if (Bs(e))
      this.currentToken.tagName += Kt(e), this.tempBuff.push(e);
    else {
      if (this.lastStartTagName === this.currentToken.tagName) {
        if ($t(e)) {
          this.state = gr;
          return;
        }
        if (e === H.SOLIDUS) {
          this.state = Bo;
          return;
        }
        if (e === H.GREATER_THAN_SIGN) {
          this._emitCurrentToken(), this.state = at;
          return;
        }
      }
      this._emitChars("</"), this._emitSeveralCodePoints(this.tempBuff), this._reconsumeInState(Cc);
    }
  }
  // Script data less-than sign state
  //------------------------------------------------------------------
  [Y9](e) {
    e === H.SOLIDUS ? (this.tempBuff = [], this.state = J9) : e === H.EXCLAMATION_MARK ? (this.state = Q9, this._emitChars("<!")) : (this._emitChars("<"), this._reconsumeInState(io));
  }
  // Script data end tag open state
  //------------------------------------------------------------------
  [J9](e) {
    Vo(e) ? (this._createEndTagToken(), this._reconsumeInState(X9)) : (this._emitChars("</"), this._reconsumeInState(io));
  }
  // Script data end tag name state
  //------------------------------------------------------------------
  [X9](e) {
    if (Ki(e))
      this.currentToken.tagName += $o(e), this.tempBuff.push(e);
    else if (Bs(e))
      this.currentToken.tagName += Kt(e), this.tempBuff.push(e);
    else {
      if (this.lastStartTagName === this.currentToken.tagName) {
        if ($t(e)) {
          this.state = gr;
          return;
        } else if (e === H.SOLIDUS) {
          this.state = Bo;
          return;
        } else if (e === H.GREATER_THAN_SIGN) {
          this._emitCurrentToken(), this.state = at;
          return;
        }
      }
      this._emitChars("</"), this._emitSeveralCodePoints(this.tempBuff), this._reconsumeInState(io);
    }
  }
  // Script data escape start state
  //------------------------------------------------------------------
  [Q9](e) {
    e === H.HYPHEN_MINUS ? (this.state = Z9, this._emitChars("-")) : this._reconsumeInState(io);
  }
  // Script data escape start dash state
  //------------------------------------------------------------------
  [Z9](e) {
    e === H.HYPHEN_MINUS ? (this.state = Pm, this._emitChars("-")) : this._reconsumeInState(io);
  }
  // Script data escaped state
  //------------------------------------------------------------------
  [Gi](e) {
    e === H.HYPHEN_MINUS ? (this.state = e4, this._emitChars("-")) : e === H.LESS_THAN_SIGN ? this.state = Md : e === H.NULL ? (this._err(oe.unexpectedNullCharacter), this._emitChars(St.REPLACEMENT_CHARACTER)) : e === H.EOF ? (this._err(oe.eofInScriptHtmlCommentLikeText), this._emitEOFToken()) : this._emitCodePoint(e);
  }
  // Script data escaped dash state
  //------------------------------------------------------------------
  [e4](e) {
    e === H.HYPHEN_MINUS ? (this.state = Pm, this._emitChars("-")) : e === H.LESS_THAN_SIGN ? this.state = Md : e === H.NULL ? (this._err(oe.unexpectedNullCharacter), this.state = Gi, this._emitChars(St.REPLACEMENT_CHARACTER)) : e === H.EOF ? (this._err(oe.eofInScriptHtmlCommentLikeText), this._emitEOFToken()) : (this.state = Gi, this._emitCodePoint(e));
  }
  // Script data escaped dash dash state
  //------------------------------------------------------------------
  [Pm](e) {
    e === H.HYPHEN_MINUS ? this._emitChars("-") : e === H.LESS_THAN_SIGN ? this.state = Md : e === H.GREATER_THAN_SIGN ? (this.state = io, this._emitChars(">")) : e === H.NULL ? (this._err(oe.unexpectedNullCharacter), this.state = Gi, this._emitChars(St.REPLACEMENT_CHARACTER)) : e === H.EOF ? (this._err(oe.eofInScriptHtmlCommentLikeText), this._emitEOFToken()) : (this.state = Gi, this._emitCodePoint(e));
  }
  // Script data escaped less-than sign state
  //------------------------------------------------------------------
  [Md](e) {
    e === H.SOLIDUS ? (this.tempBuff = [], this.state = t4) : Vo(e) ? (this.tempBuff = [], this._emitChars("<"), this._reconsumeInState(i4)) : (this._emitChars("<"), this._reconsumeInState(Gi));
  }
  // Script data escaped end tag open state
  //------------------------------------------------------------------
  [t4](e) {
    Vo(e) ? (this._createEndTagToken(), this._reconsumeInState(n4)) : (this._emitChars("</"), this._reconsumeInState(Gi));
  }
  // Script data escaped end tag name state
  //------------------------------------------------------------------
  [n4](e) {
    if (Ki(e))
      this.currentToken.tagName += $o(e), this.tempBuff.push(e);
    else if (Bs(e))
      this.currentToken.tagName += Kt(e), this.tempBuff.push(e);
    else {
      if (this.lastStartTagName === this.currentToken.tagName) {
        if ($t(e)) {
          this.state = gr;
          return;
        }
        if (e === H.SOLIDUS) {
          this.state = Bo;
          return;
        }
        if (e === H.GREATER_THAN_SIGN) {
          this._emitCurrentToken(), this.state = at;
          return;
        }
      }
      this._emitChars("</"), this._emitSeveralCodePoints(this.tempBuff), this._reconsumeInState(Gi);
    }
  }
  // Script data double escape start state
  //------------------------------------------------------------------
  [i4](e) {
    $t(e) || e === H.SOLIDUS || e === H.GREATER_THAN_SIGN ? (this.state = this._isTempBufferEqualToScriptString() ? Yr : Gi, this._emitCodePoint(e)) : Ki(e) ? (this.tempBuff.push(hu(e)), this._emitCodePoint(e)) : Bs(e) ? (this.tempBuff.push(e), this._emitCodePoint(e)) : this._reconsumeInState(Gi);
  }
  // Script data double escaped state
  //------------------------------------------------------------------
  [Yr](e) {
    e === H.HYPHEN_MINUS ? (this.state = r4, this._emitChars("-")) : e === H.LESS_THAN_SIGN ? (this.state = Nd, this._emitChars("<")) : e === H.NULL ? (this._err(oe.unexpectedNullCharacter), this._emitChars(St.REPLACEMENT_CHARACTER)) : e === H.EOF ? (this._err(oe.eofInScriptHtmlCommentLikeText), this._emitEOFToken()) : this._emitCodePoint(e);
  }
  // Script data double escaped dash state
  //------------------------------------------------------------------
  [r4](e) {
    e === H.HYPHEN_MINUS ? (this.state = o4, this._emitChars("-")) : e === H.LESS_THAN_SIGN ? (this.state = Nd, this._emitChars("<")) : e === H.NULL ? (this._err(oe.unexpectedNullCharacter), this.state = Yr, this._emitChars(St.REPLACEMENT_CHARACTER)) : e === H.EOF ? (this._err(oe.eofInScriptHtmlCommentLikeText), this._emitEOFToken()) : (this.state = Yr, this._emitCodePoint(e));
  }
  // Script data double escaped dash dash state
  //------------------------------------------------------------------
  [o4](e) {
    e === H.HYPHEN_MINUS ? this._emitChars("-") : e === H.LESS_THAN_SIGN ? (this.state = Nd, this._emitChars("<")) : e === H.GREATER_THAN_SIGN ? (this.state = io, this._emitChars(">")) : e === H.NULL ? (this._err(oe.unexpectedNullCharacter), this.state = Yr, this._emitChars(St.REPLACEMENT_CHARACTER)) : e === H.EOF ? (this._err(oe.eofInScriptHtmlCommentLikeText), this._emitEOFToken()) : (this.state = Yr, this._emitCodePoint(e));
  }
  // Script data double escaped less-than sign state
  //------------------------------------------------------------------
  [Nd](e) {
    e === H.SOLIDUS ? (this.tempBuff = [], this.state = s4, this._emitChars("/")) : this._reconsumeInState(Yr);
  }
  // Script data double escape end state
  //------------------------------------------------------------------
  [s4](e) {
    $t(e) || e === H.SOLIDUS || e === H.GREATER_THAN_SIGN ? (this.state = this._isTempBufferEqualToScriptString() ? Gi : Yr, this._emitCodePoint(e)) : Ki(e) ? (this.tempBuff.push(hu(e)), this._emitCodePoint(e)) : Bs(e) ? (this.tempBuff.push(e), this._emitCodePoint(e)) : this._reconsumeInState(Yr);
  }
  // Before attribute name state
  //------------------------------------------------------------------
  [gr](e) {
    $t(e) || (e === H.SOLIDUS || e === H.GREATER_THAN_SIGN || e === H.EOF ? this._reconsumeInState(Fm) : e === H.EQUALS_SIGN ? (this._err(oe.unexpectedEqualsSignBeforeAttributeName), this._createAttr("="), this.state = Od) : (this._createAttr(""), this._reconsumeInState(Od)));
  }
  // Attribute name state
  //------------------------------------------------------------------
  [Od](e) {
    $t(e) || e === H.SOLIDUS || e === H.GREATER_THAN_SIGN || e === H.EOF ? (this._leaveAttrName(Fm), this._unconsume()) : e === H.EQUALS_SIGN ? this._leaveAttrName(Bm) : Ki(e) ? this.currentAttr.name += $o(e) : e === H.QUOTATION_MARK || e === H.APOSTROPHE || e === H.LESS_THAN_SIGN ? (this._err(oe.unexpectedCharacterInAttributeName), this.currentAttr.name += Kt(e)) : e === H.NULL ? (this._err(oe.unexpectedNullCharacter), this.currentAttr.name += St.REPLACEMENT_CHARACTER) : this.currentAttr.name += Kt(e);
  }
  // After attribute name state
  //------------------------------------------------------------------
  [Fm](e) {
    $t(e) || (e === H.SOLIDUS ? this.state = Bo : e === H.EQUALS_SIGN ? this.state = Bm : e === H.GREATER_THAN_SIGN ? (this.state = at, this._emitCurrentToken()) : e === H.EOF ? (this._err(oe.eofInTag), this._emitEOFToken()) : (this._createAttr(""), this._reconsumeInState(Od)));
  }
  // Before attribute value state
  //------------------------------------------------------------------
  [Bm](e) {
    $t(e) || (e === H.QUOTATION_MARK ? this.state = Rd : e === H.APOSTROPHE ? this.state = Id : e === H.GREATER_THAN_SIGN ? (this._err(oe.missingAttributeValue), this.state = at, this._emitCurrentToken()) : this._reconsumeInState(Ld));
  }
  // Attribute value (double-quoted) state
  //------------------------------------------------------------------
  [Rd](e) {
    e === H.QUOTATION_MARK ? this.state = Hm : e === H.AMPERSAND ? (this.returnState = Rd, this.state = La) : e === H.NULL ? (this._err(oe.unexpectedNullCharacter), this.currentAttr.value += St.REPLACEMENT_CHARACTER) : e === H.EOF ? (this._err(oe.eofInTag), this._emitEOFToken()) : this.currentAttr.value += Kt(e);
  }
  // Attribute value (single-quoted) state
  //------------------------------------------------------------------
  [Id](e) {
    e === H.APOSTROPHE ? this.state = Hm : e === H.AMPERSAND ? (this.returnState = Id, this.state = La) : e === H.NULL ? (this._err(oe.unexpectedNullCharacter), this.currentAttr.value += St.REPLACEMENT_CHARACTER) : e === H.EOF ? (this._err(oe.eofInTag), this._emitEOFToken()) : this.currentAttr.value += Kt(e);
  }
  // Attribute value (unquoted) state
  //------------------------------------------------------------------
  [Ld](e) {
    $t(e) ? this._leaveAttrValue(gr) : e === H.AMPERSAND ? (this.returnState = Ld, this.state = La) : e === H.GREATER_THAN_SIGN ? (this._leaveAttrValue(at), this._emitCurrentToken()) : e === H.NULL ? (this._err(oe.unexpectedNullCharacter), this.currentAttr.value += St.REPLACEMENT_CHARACTER) : e === H.QUOTATION_MARK || e === H.APOSTROPHE || e === H.LESS_THAN_SIGN || e === H.EQUALS_SIGN || e === H.GRAVE_ACCENT ? (this._err(oe.unexpectedCharacterInUnquotedAttributeValue), this.currentAttr.value += Kt(e)) : e === H.EOF ? (this._err(oe.eofInTag), this._emitEOFToken()) : this.currentAttr.value += Kt(e);
  }
  // After attribute value (quoted) state
  //------------------------------------------------------------------
  [Hm](e) {
    $t(e) ? this._leaveAttrValue(gr) : e === H.SOLIDUS ? this._leaveAttrValue(Bo) : e === H.GREATER_THAN_SIGN ? (this._leaveAttrValue(at), this._emitCurrentToken()) : e === H.EOF ? (this._err(oe.eofInTag), this._emitEOFToken()) : (this._err(oe.missingWhitespaceBetweenAttributes), this._reconsumeInState(gr));
  }
  // Self-closing start tag state
  //------------------------------------------------------------------
  [Bo](e) {
    e === H.GREATER_THAN_SIGN ? (this.currentToken.selfClosing = !0, this.state = at, this._emitCurrentToken()) : e === H.EOF ? (this._err(oe.eofInTag), this._emitEOFToken()) : (this._err(oe.unexpectedSolidusInTag), this._reconsumeInState(gr));
  }
  // Bogus comment state
  //------------------------------------------------------------------
  [dc](e) {
    e === H.GREATER_THAN_SIGN ? (this.state = at, this._emitCurrentToken()) : e === H.EOF ? (this._emitCurrentToken(), this._emitEOFToken()) : e === H.NULL ? (this._err(oe.unexpectedNullCharacter), this.currentToken.data += St.REPLACEMENT_CHARACTER) : this.currentToken.data += Kt(e);
  }
  // Markup declaration open state
  //------------------------------------------------------------------
  [a4](e) {
    this._consumeSequenceIfMatch(Ls.DASH_DASH_STRING, e, !0) ? (this._createCommentToken(), this.state = l4) : this._consumeSequenceIfMatch(Ls.DOCTYPE_STRING, e, !1) ? this.state = m4 : this._consumeSequenceIfMatch(Ls.CDATA_START_STRING, e, !0) ? this.allowCDATA ? this.state = Hd : (this._err(oe.cdataInHtmlContent), this._createCommentToken(), this.currentToken.data = "[CDATA[", this.state = dc) : this._ensureHibernation() || (this._err(oe.incorrectlyOpenedComment), this._createCommentToken(), this._reconsumeInState(dc));
  }
  // Comment start state
  //------------------------------------------------------------------
  [l4](e) {
    e === H.HYPHEN_MINUS ? this.state = c4 : e === H.GREATER_THAN_SIGN ? (this._err(oe.abruptClosingOfEmptyComment), this.state = at, this._emitCurrentToken()) : this._reconsumeInState(Ho);
  }
  // Comment start dash state
  //------------------------------------------------------------------
  [c4](e) {
    e === H.HYPHEN_MINUS ? this.state = Pd : e === H.GREATER_THAN_SIGN ? (this._err(oe.abruptClosingOfEmptyComment), this.state = at, this._emitCurrentToken()) : e === H.EOF ? (this._err(oe.eofInComment), this._emitCurrentToken(), this._emitEOFToken()) : (this.currentToken.data += "-", this._reconsumeInState(Ho));
  }
  // Comment state
  //------------------------------------------------------------------
  [Ho](e) {
    e === H.HYPHEN_MINUS ? this.state = Dd : e === H.LESS_THAN_SIGN ? (this.currentToken.data += "<", this.state = f4) : e === H.NULL ? (this._err(oe.unexpectedNullCharacter), this.currentToken.data += St.REPLACEMENT_CHARACTER) : e === H.EOF ? (this._err(oe.eofInComment), this._emitCurrentToken(), this._emitEOFToken()) : this.currentToken.data += Kt(e);
  }
  // Comment less-than sign state
  //------------------------------------------------------------------
  [f4](e) {
    e === H.EXCLAMATION_MARK ? (this.currentToken.data += "!", this.state = d4) : e === H.LESS_THAN_SIGN ? this.currentToken.data += "!" : this._reconsumeInState(Ho);
  }
  // Comment less-than sign bang state
  //------------------------------------------------------------------
  [d4](e) {
    e === H.HYPHEN_MINUS ? this.state = u4 : this._reconsumeInState(Ho);
  }
  // Comment less-than sign bang dash state
  //------------------------------------------------------------------
  [u4](e) {
    e === H.HYPHEN_MINUS ? this.state = h4 : this._reconsumeInState(Dd);
  }
  // Comment less-than sign bang dash dash state
  //------------------------------------------------------------------
  [h4](e) {
    e !== H.GREATER_THAN_SIGN && e !== H.EOF && this._err(oe.nestedComment), this._reconsumeInState(Pd);
  }
  // Comment end dash state
  //------------------------------------------------------------------
  [Dd](e) {
    e === H.HYPHEN_MINUS ? this.state = Pd : e === H.EOF ? (this._err(oe.eofInComment), this._emitCurrentToken(), this._emitEOFToken()) : (this.currentToken.data += "-", this._reconsumeInState(Ho));
  }
  // Comment end state
  //------------------------------------------------------------------
  [Pd](e) {
    e === H.GREATER_THAN_SIGN ? (this.state = at, this._emitCurrentToken()) : e === H.EXCLAMATION_MARK ? this.state = p4 : e === H.HYPHEN_MINUS ? this.currentToken.data += "-" : e === H.EOF ? (this._err(oe.eofInComment), this._emitCurrentToken(), this._emitEOFToken()) : (this.currentToken.data += "--", this._reconsumeInState(Ho));
  }
  // Comment end bang state
  //------------------------------------------------------------------
  [p4](e) {
    e === H.HYPHEN_MINUS ? (this.currentToken.data += "--!", this.state = Dd) : e === H.GREATER_THAN_SIGN ? (this._err(oe.incorrectlyClosedComment), this.state = at, this._emitCurrentToken()) : e === H.EOF ? (this._err(oe.eofInComment), this._emitCurrentToken(), this._emitEOFToken()) : (this.currentToken.data += "--!", this._reconsumeInState(Ho));
  }
  // DOCTYPE state
  //------------------------------------------------------------------
  [m4](e) {
    $t(e) ? this.state = Fd : e === H.GREATER_THAN_SIGN ? this._reconsumeInState(Fd) : e === H.EOF ? (this._err(oe.eofInDoctype), this._createDoctypeToken(null), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : (this._err(oe.missingWhitespaceBeforeDoctypeName), this._reconsumeInState(Fd));
  }
  // Before DOCTYPE name state
  //------------------------------------------------------------------
  [Fd](e) {
    $t(e) || (Ki(e) ? (this._createDoctypeToken($o(e)), this.state = Bd) : e === H.NULL ? (this._err(oe.unexpectedNullCharacter), this._createDoctypeToken(St.REPLACEMENT_CHARACTER), this.state = Bd) : e === H.GREATER_THAN_SIGN ? (this._err(oe.missingDoctypeName), this._createDoctypeToken(null), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this.state = at) : e === H.EOF ? (this._err(oe.eofInDoctype), this._createDoctypeToken(null), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : (this._createDoctypeToken(Kt(e)), this.state = Bd));
  }
  // DOCTYPE name state
  //------------------------------------------------------------------
  [Bd](e) {
    $t(e) ? this.state = g4 : e === H.GREATER_THAN_SIGN ? (this.state = at, this._emitCurrentToken()) : Ki(e) ? this.currentToken.name += $o(e) : e === H.NULL ? (this._err(oe.unexpectedNullCharacter), this.currentToken.name += St.REPLACEMENT_CHARACTER) : e === H.EOF ? (this._err(oe.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : this.currentToken.name += Kt(e);
  }
  // After DOCTYPE name state
  //------------------------------------------------------------------
  [g4](e) {
    $t(e) || (e === H.GREATER_THAN_SIGN ? (this.state = at, this._emitCurrentToken()) : e === H.EOF ? (this._err(oe.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : this._consumeSequenceIfMatch(Ls.PUBLIC_STRING, e, !1) ? this.state = y4 : this._consumeSequenceIfMatch(Ls.SYSTEM_STRING, e, !1) ? this.state = k4 : this._ensureHibernation() || (this._err(oe.invalidCharacterSequenceAfterDoctypeName), this.currentToken.forceQuirks = !0, this._reconsumeInState(Jr)));
  }
  // After DOCTYPE public keyword state
  //------------------------------------------------------------------
  [y4](e) {
    $t(e) ? this.state = v4 : e === H.QUOTATION_MARK ? (this._err(oe.missingWhitespaceAfterDoctypePublicKeyword), this.currentToken.publicId = "", this.state = $m) : e === H.APOSTROPHE ? (this._err(oe.missingWhitespaceAfterDoctypePublicKeyword), this.currentToken.publicId = "", this.state = jm) : e === H.GREATER_THAN_SIGN ? (this._err(oe.missingDoctypePublicIdentifier), this.currentToken.forceQuirks = !0, this.state = at, this._emitCurrentToken()) : e === H.EOF ? (this._err(oe.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : (this._err(oe.missingQuoteBeforeDoctypePublicIdentifier), this.currentToken.forceQuirks = !0, this._reconsumeInState(Jr));
  }
  // Before DOCTYPE public identifier state
  //------------------------------------------------------------------
  [v4](e) {
    $t(e) || (e === H.QUOTATION_MARK ? (this.currentToken.publicId = "", this.state = $m) : e === H.APOSTROPHE ? (this.currentToken.publicId = "", this.state = jm) : e === H.GREATER_THAN_SIGN ? (this._err(oe.missingDoctypePublicIdentifier), this.currentToken.forceQuirks = !0, this.state = at, this._emitCurrentToken()) : e === H.EOF ? (this._err(oe.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : (this._err(oe.missingQuoteBeforeDoctypePublicIdentifier), this.currentToken.forceQuirks = !0, this._reconsumeInState(Jr)));
  }
  // DOCTYPE public identifier (double-quoted) state
  //------------------------------------------------------------------
  [$m](e) {
    e === H.QUOTATION_MARK ? this.state = zm : e === H.NULL ? (this._err(oe.unexpectedNullCharacter), this.currentToken.publicId += St.REPLACEMENT_CHARACTER) : e === H.GREATER_THAN_SIGN ? (this._err(oe.abruptDoctypePublicIdentifier), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this.state = at) : e === H.EOF ? (this._err(oe.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : this.currentToken.publicId += Kt(e);
  }
  // DOCTYPE public identifier (single-quoted) state
  //------------------------------------------------------------------
  [jm](e) {
    e === H.APOSTROPHE ? this.state = zm : e === H.NULL ? (this._err(oe.unexpectedNullCharacter), this.currentToken.publicId += St.REPLACEMENT_CHARACTER) : e === H.GREATER_THAN_SIGN ? (this._err(oe.abruptDoctypePublicIdentifier), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this.state = at) : e === H.EOF ? (this._err(oe.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : this.currentToken.publicId += Kt(e);
  }
  // After DOCTYPE public identifier state
  //------------------------------------------------------------------
  [zm](e) {
    $t(e) ? this.state = b4 : e === H.GREATER_THAN_SIGN ? (this.state = at, this._emitCurrentToken()) : e === H.QUOTATION_MARK ? (this._err(oe.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers), this.currentToken.systemId = "", this.state = uc) : e === H.APOSTROPHE ? (this._err(oe.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers), this.currentToken.systemId = "", this.state = hc) : e === H.EOF ? (this._err(oe.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : (this._err(oe.missingQuoteBeforeDoctypeSystemIdentifier), this.currentToken.forceQuirks = !0, this._reconsumeInState(Jr));
  }
  // Between DOCTYPE public and system identifiers state
  //------------------------------------------------------------------
  [b4](e) {
    $t(e) || (e === H.GREATER_THAN_SIGN ? (this._emitCurrentToken(), this.state = at) : e === H.QUOTATION_MARK ? (this.currentToken.systemId = "", this.state = uc) : e === H.APOSTROPHE ? (this.currentToken.systemId = "", this.state = hc) : e === H.EOF ? (this._err(oe.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : (this._err(oe.missingQuoteBeforeDoctypeSystemIdentifier), this.currentToken.forceQuirks = !0, this._reconsumeInState(Jr)));
  }
  // After DOCTYPE system keyword state
  //------------------------------------------------------------------
  [k4](e) {
    $t(e) ? this.state = w4 : e === H.QUOTATION_MARK ? (this._err(oe.missingWhitespaceAfterDoctypeSystemKeyword), this.currentToken.systemId = "", this.state = uc) : e === H.APOSTROPHE ? (this._err(oe.missingWhitespaceAfterDoctypeSystemKeyword), this.currentToken.systemId = "", this.state = hc) : e === H.GREATER_THAN_SIGN ? (this._err(oe.missingDoctypeSystemIdentifier), this.currentToken.forceQuirks = !0, this.state = at, this._emitCurrentToken()) : e === H.EOF ? (this._err(oe.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : (this._err(oe.missingQuoteBeforeDoctypeSystemIdentifier), this.currentToken.forceQuirks = !0, this._reconsumeInState(Jr));
  }
  // Before DOCTYPE system identifier state
  //------------------------------------------------------------------
  [w4](e) {
    $t(e) || (e === H.QUOTATION_MARK ? (this.currentToken.systemId = "", this.state = uc) : e === H.APOSTROPHE ? (this.currentToken.systemId = "", this.state = hc) : e === H.GREATER_THAN_SIGN ? (this._err(oe.missingDoctypeSystemIdentifier), this.currentToken.forceQuirks = !0, this.state = at, this._emitCurrentToken()) : e === H.EOF ? (this._err(oe.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : (this._err(oe.missingQuoteBeforeDoctypeSystemIdentifier), this.currentToken.forceQuirks = !0, this._reconsumeInState(Jr)));
  }
  // DOCTYPE system identifier (double-quoted) state
  //------------------------------------------------------------------
  [uc](e) {
    e === H.QUOTATION_MARK ? this.state = Um : e === H.NULL ? (this._err(oe.unexpectedNullCharacter), this.currentToken.systemId += St.REPLACEMENT_CHARACTER) : e === H.GREATER_THAN_SIGN ? (this._err(oe.abruptDoctypeSystemIdentifier), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this.state = at) : e === H.EOF ? (this._err(oe.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : this.currentToken.systemId += Kt(e);
  }
  // DOCTYPE system identifier (single-quoted) state
  //------------------------------------------------------------------
  [hc](e) {
    e === H.APOSTROPHE ? this.state = Um : e === H.NULL ? (this._err(oe.unexpectedNullCharacter), this.currentToken.systemId += St.REPLACEMENT_CHARACTER) : e === H.GREATER_THAN_SIGN ? (this._err(oe.abruptDoctypeSystemIdentifier), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this.state = at) : e === H.EOF ? (this._err(oe.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : this.currentToken.systemId += Kt(e);
  }
  // After DOCTYPE system identifier state
  //------------------------------------------------------------------
  [Um](e) {
    $t(e) || (e === H.GREATER_THAN_SIGN ? (this._emitCurrentToken(), this.state = at) : e === H.EOF ? (this._err(oe.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : (this._err(oe.unexpectedCharacterAfterDoctypeSystemIdentifier), this._reconsumeInState(Jr)));
  }
  // Bogus DOCTYPE state
  //------------------------------------------------------------------
  [Jr](e) {
    e === H.GREATER_THAN_SIGN ? (this._emitCurrentToken(), this.state = at) : e === H.NULL ? this._err(oe.unexpectedNullCharacter) : e === H.EOF && (this._emitCurrentToken(), this._emitEOFToken());
  }
  // CDATA section state
  //------------------------------------------------------------------
  [Hd](e) {
    e === H.RIGHT_SQUARE_BRACKET ? this.state = _4 : e === H.EOF ? (this._err(oe.eofInCdata), this._emitEOFToken()) : this._emitCodePoint(e);
  }
  // CDATA section bracket state
  //------------------------------------------------------------------
  [_4](e) {
    e === H.RIGHT_SQUARE_BRACKET ? this.state = E4 : (this._emitChars("]"), this._reconsumeInState(Hd));
  }
  // CDATA section end state
  //------------------------------------------------------------------
  [E4](e) {
    e === H.GREATER_THAN_SIGN ? this.state = at : e === H.RIGHT_SQUARE_BRACKET ? this._emitChars("]") : (this._emitChars("]]"), this._reconsumeInState(Hd));
  }
  // Character reference state
  //------------------------------------------------------------------
  [La](e) {
    this.tempBuff = [H.AMPERSAND], e === H.NUMBER_SIGN ? (this.tempBuff.push(e), this.state = S4) : Vm(e) ? this._reconsumeInState(T4) : (this._flushCodePointsConsumedAsCharacterReference(), this._reconsumeInState(this.returnState));
  }
  // Named character reference state
  //------------------------------------------------------------------
  [T4](e) {
    const n = this._matchNamedCharacterReference(e);
    if (this._ensureHibernation())
      this.tempBuff = [H.AMPERSAND];
    else if (n) {
      const i = this.tempBuff[this.tempBuff.length - 1] === H.SEMICOLON;
      this._isCharacterReferenceAttributeQuirk(i) || (i || this._errOnNextCodePoint(oe.missingSemicolonAfterCharacterReference), this.tempBuff = n), this._flushCodePointsConsumedAsCharacterReference(), this.state = this.returnState;
    } else
      this._flushCodePointsConsumedAsCharacterReference(), this.state = C4;
  }
  // Ambiguos ampersand state
  //------------------------------------------------------------------
  [C4](e) {
    Vm(e) ? this._isCharacterReferenceInAttribute() ? this.currentAttr.value += Kt(e) : this._emitCodePoint(e) : (e === H.SEMICOLON && this._err(oe.unknownNamedCharacterReference), this._reconsumeInState(this.returnState));
  }
  // Numeric character reference state
  //------------------------------------------------------------------
  [S4](e) {
    this.charRefCode = 0, e === H.LATIN_SMALL_X || e === H.LATIN_CAPITAL_X ? (this.tempBuff.push(e), this.state = x4) : this._reconsumeInState(A4);
  }
  // Hexademical character reference start state
  //------------------------------------------------------------------
  [x4](e) {
    YK(e) ? this._reconsumeInState(M4) : (this._err(oe.absenceOfDigitsInNumericCharacterReference), this._flushCodePointsConsumedAsCharacterReference(), this._reconsumeInState(this.returnState));
  }
  // Decimal character reference start state
  //------------------------------------------------------------------
  [A4](e) {
    Fc(e) ? this._reconsumeInState(N4) : (this._err(oe.absenceOfDigitsInNumericCharacterReference), this._flushCodePointsConsumedAsCharacterReference(), this._reconsumeInState(this.returnState));
  }
  // Hexademical character reference state
  //------------------------------------------------------------------
  [M4](e) {
    VC(e) ? this.charRefCode = this.charRefCode * 16 + e - 55 : WC(e) ? this.charRefCode = this.charRefCode * 16 + e - 87 : Fc(e) ? this.charRefCode = this.charRefCode * 16 + e - 48 : e === H.SEMICOLON ? this.state = pc : (this._err(oe.missingSemicolonAfterCharacterReference), this._reconsumeInState(pc));
  }
  // Decimal character reference state
  //------------------------------------------------------------------
  [N4](e) {
    Fc(e) ? this.charRefCode = this.charRefCode * 10 + e - 48 : e === H.SEMICOLON ? this.state = pc : (this._err(oe.missingSemicolonAfterCharacterReference), this._reconsumeInState(pc));
  }
  // Numeric character reference end state
  //------------------------------------------------------------------
  [pc]() {
    if (this.charRefCode === H.NULL)
      this._err(oe.nullCharacterReference), this.charRefCode = H.REPLACEMENT_CHARACTER;
    else if (this.charRefCode > 1114111)
      this._err(oe.characterReferenceOutsideUnicodeRange), this.charRefCode = H.REPLACEMENT_CHARACTER;
    else if (St.isSurrogate(this.charRefCode))
      this._err(oe.surrogateCharacterReference), this.charRefCode = H.REPLACEMENT_CHARACTER;
    else if (St.isUndefinedCodePoint(this.charRefCode))
      this._err(oe.noncharacterCharacterReference);
    else if (St.isControlCodePoint(this.charRefCode) || this.charRefCode === H.CARRIAGE_RETURN) {
      this._err(oe.controlCharacterReference);
      const e = GK[this.charRefCode];
      e && (this.charRefCode = e);
    }
    this.tempBuff = [this.charRefCode], this._flushCodePointsConsumedAsCharacterReference(), this._reconsumeInState(this.returnState);
  }
};
ji.CHARACTER_TOKEN = "CHARACTER_TOKEN";
ji.NULL_CHARACTER_TOKEN = "NULL_CHARACTER_TOKEN";
ji.WHITESPACE_CHARACTER_TOKEN = "WHITESPACE_CHARACTER_TOKEN";
ji.START_TAG_TOKEN = "START_TAG_TOKEN";
ji.END_TAG_TOKEN = "END_TAG_TOKEN";
ji.COMMENT_TOKEN = "COMMENT_TOKEN";
ji.DOCTYPE_TOKEN = "DOCTYPE_TOKEN";
ji.EOF_TOKEN = "EOF_TOKEN";
ji.HIBERNATION_TOKEN = "HIBERNATION_TOKEN";
ji.MODE = {
  DATA: at,
  RCDATA: Ua,
  RAWTEXT: Cc,
  SCRIPT_DATA: io,
  PLAINTEXT: UC
};
ji.getTokenAttr = function(t, e) {
  for (let n = t.attrs.length - 1; n >= 0; n--)
    if (t.attrs[n].name === e)
      return t.attrs[n].value;
  return null;
};
var cp = ji, hr = {};
const Wm = hr.NAMESPACES = {
  HTML: "http://www.w3.org/1999/xhtml",
  MATHML: "http://www.w3.org/1998/Math/MathML",
  SVG: "http://www.w3.org/2000/svg",
  XLINK: "http://www.w3.org/1999/xlink",
  XML: "http://www.w3.org/XML/1998/namespace",
  XMLNS: "http://www.w3.org/2000/xmlns/"
};
hr.ATTRS = {
  TYPE: "type",
  ACTION: "action",
  ENCODING: "encoding",
  PROMPT: "prompt",
  NAME: "name",
  COLOR: "color",
  FACE: "face",
  SIZE: "size"
};
hr.DOCUMENT_MODE = {
  NO_QUIRKS: "no-quirks",
  QUIRKS: "quirks",
  LIMITED_QUIRKS: "limited-quirks"
};
const ye = hr.TAG_NAMES = {
  A: "a",
  ADDRESS: "address",
  ANNOTATION_XML: "annotation-xml",
  APPLET: "applet",
  AREA: "area",
  ARTICLE: "article",
  ASIDE: "aside",
  B: "b",
  BASE: "base",
  BASEFONT: "basefont",
  BGSOUND: "bgsound",
  BIG: "big",
  BLOCKQUOTE: "blockquote",
  BODY: "body",
  BR: "br",
  BUTTON: "button",
  CAPTION: "caption",
  CENTER: "center",
  CODE: "code",
  COL: "col",
  COLGROUP: "colgroup",
  DD: "dd",
  DESC: "desc",
  DETAILS: "details",
  DIALOG: "dialog",
  DIR: "dir",
  DIV: "div",
  DL: "dl",
  DT: "dt",
  EM: "em",
  EMBED: "embed",
  FIELDSET: "fieldset",
  FIGCAPTION: "figcaption",
  FIGURE: "figure",
  FONT: "font",
  FOOTER: "footer",
  FOREIGN_OBJECT: "foreignObject",
  FORM: "form",
  FRAME: "frame",
  FRAMESET: "frameset",
  H1: "h1",
  H2: "h2",
  H3: "h3",
  H4: "h4",
  H5: "h5",
  H6: "h6",
  HEAD: "head",
  HEADER: "header",
  HGROUP: "hgroup",
  HR: "hr",
  HTML: "html",
  I: "i",
  IMG: "img",
  IMAGE: "image",
  INPUT: "input",
  IFRAME: "iframe",
  KEYGEN: "keygen",
  LABEL: "label",
  LI: "li",
  LINK: "link",
  LISTING: "listing",
  MAIN: "main",
  MALIGNMARK: "malignmark",
  MARQUEE: "marquee",
  MATH: "math",
  MENU: "menu",
  META: "meta",
  MGLYPH: "mglyph",
  MI: "mi",
  MO: "mo",
  MN: "mn",
  MS: "ms",
  MTEXT: "mtext",
  NAV: "nav",
  NOBR: "nobr",
  NOFRAMES: "noframes",
  NOEMBED: "noembed",
  NOSCRIPT: "noscript",
  OBJECT: "object",
  OL: "ol",
  OPTGROUP: "optgroup",
  OPTION: "option",
  P: "p",
  PARAM: "param",
  PLAINTEXT: "plaintext",
  PRE: "pre",
  RB: "rb",
  RP: "rp",
  RT: "rt",
  RTC: "rtc",
  RUBY: "ruby",
  S: "s",
  SCRIPT: "script",
  SECTION: "section",
  SELECT: "select",
  SOURCE: "source",
  SMALL: "small",
  SPAN: "span",
  STRIKE: "strike",
  STRONG: "strong",
  STYLE: "style",
  SUB: "sub",
  SUMMARY: "summary",
  SUP: "sup",
  TABLE: "table",
  TBODY: "tbody",
  TEMPLATE: "template",
  TEXTAREA: "textarea",
  TFOOT: "tfoot",
  TD: "td",
  TH: "th",
  THEAD: "thead",
  TITLE: "title",
  TR: "tr",
  TRACK: "track",
  TT: "tt",
  U: "u",
  UL: "ul",
  SVG: "svg",
  VAR: "var",
  WBR: "wbr",
  XMP: "xmp"
};
hr.SPECIAL_ELEMENTS = {
  [Wm.HTML]: {
    [ye.ADDRESS]: !0,
    [ye.APPLET]: !0,
    [ye.AREA]: !0,
    [ye.ARTICLE]: !0,
    [ye.ASIDE]: !0,
    [ye.BASE]: !0,
    [ye.BASEFONT]: !0,
    [ye.BGSOUND]: !0,
    [ye.BLOCKQUOTE]: !0,
    [ye.BODY]: !0,
    [ye.BR]: !0,
    [ye.BUTTON]: !0,
    [ye.CAPTION]: !0,
    [ye.CENTER]: !0,
    [ye.COL]: !0,
    [ye.COLGROUP]: !0,
    [ye.DD]: !0,
    [ye.DETAILS]: !0,
    [ye.DIR]: !0,
    [ye.DIV]: !0,
    [ye.DL]: !0,
    [ye.DT]: !0,
    [ye.EMBED]: !0,
    [ye.FIELDSET]: !0,
    [ye.FIGCAPTION]: !0,
    [ye.FIGURE]: !0,
    [ye.FOOTER]: !0,
    [ye.FORM]: !0,
    [ye.FRAME]: !0,
    [ye.FRAMESET]: !0,
    [ye.H1]: !0,
    [ye.H2]: !0,
    [ye.H3]: !0,
    [ye.H4]: !0,
    [ye.H5]: !0,
    [ye.H6]: !0,
    [ye.HEAD]: !0,
    [ye.HEADER]: !0,
    [ye.HGROUP]: !0,
    [ye.HR]: !0,
    [ye.HTML]: !0,
    [ye.IFRAME]: !0,
    [ye.IMG]: !0,
    [ye.INPUT]: !0,
    [ye.LI]: !0,
    [ye.LINK]: !0,
    [ye.LISTING]: !0,
    [ye.MAIN]: !0,
    [ye.MARQUEE]: !0,
    [ye.MENU]: !0,
    [ye.META]: !0,
    [ye.NAV]: !0,
    [ye.NOEMBED]: !0,
    [ye.NOFRAMES]: !0,
    [ye.NOSCRIPT]: !0,
    [ye.OBJECT]: !0,
    [ye.OL]: !0,
    [ye.P]: !0,
    [ye.PARAM]: !0,
    [ye.PLAINTEXT]: !0,
    [ye.PRE]: !0,
    [ye.SCRIPT]: !0,
    [ye.SECTION]: !0,
    [ye.SELECT]: !0,
    [ye.SOURCE]: !0,
    [ye.STYLE]: !0,
    [ye.SUMMARY]: !0,
    [ye.TABLE]: !0,
    [ye.TBODY]: !0,
    [ye.TD]: !0,
    [ye.TEMPLATE]: !0,
    [ye.TEXTAREA]: !0,
    [ye.TFOOT]: !0,
    [ye.TH]: !0,
    [ye.THEAD]: !0,
    [ye.TITLE]: !0,
    [ye.TR]: !0,
    [ye.TRACK]: !0,
    [ye.UL]: !0,
    [ye.WBR]: !0,
    [ye.XMP]: !0
  },
  [Wm.MATHML]: {
    [ye.MI]: !0,
    [ye.MO]: !0,
    [ye.MN]: !0,
    [ye.MS]: !0,
    [ye.MTEXT]: !0,
    [ye.ANNOTATION_XML]: !0
  },
  [Wm.SVG]: {
    [ye.TITLE]: !0,
    [ye.FOREIGN_OBJECT]: !0,
    [ye.DESC]: !0
  }
};
const qC = hr, ve = qC.TAG_NAMES, xt = qC.NAMESPACES;
function R4(t) {
  switch (t.length) {
    case 1:
      return t === ve.P;
    case 2:
      return t === ve.RB || t === ve.RP || t === ve.RT || t === ve.DD || t === ve.DT || t === ve.LI;
    case 3:
      return t === ve.RTC;
    case 6:
      return t === ve.OPTION;
    case 8:
      return t === ve.OPTGROUP;
  }
  return !1;
}
function JK(t) {
  switch (t.length) {
    case 1:
      return t === ve.P;
    case 2:
      return t === ve.RB || t === ve.RP || t === ve.RT || t === ve.DD || t === ve.DT || t === ve.LI || t === ve.TD || t === ve.TH || t === ve.TR;
    case 3:
      return t === ve.RTC;
    case 5:
      return t === ve.TBODY || t === ve.TFOOT || t === ve.THEAD;
    case 6:
      return t === ve.OPTION;
    case 7:
      return t === ve.CAPTION;
    case 8:
      return t === ve.OPTGROUP || t === ve.COLGROUP;
  }
  return !1;
}
function $d(t, e) {
  switch (t.length) {
    case 2:
      if (t === ve.TD || t === ve.TH)
        return e === xt.HTML;
      if (t === ve.MI || t === ve.MO || t === ve.MN || t === ve.MS)
        return e === xt.MATHML;
      break;
    case 4:
      if (t === ve.HTML)
        return e === xt.HTML;
      if (t === ve.DESC)
        return e === xt.SVG;
      break;
    case 5:
      if (t === ve.TABLE)
        return e === xt.HTML;
      if (t === ve.MTEXT)
        return e === xt.MATHML;
      if (t === ve.TITLE)
        return e === xt.SVG;
      break;
    case 6:
      return (t === ve.APPLET || t === ve.OBJECT) && e === xt.HTML;
    case 7:
      return (t === ve.CAPTION || t === ve.MARQUEE) && e === xt.HTML;
    case 8:
      return t === ve.TEMPLATE && e === xt.HTML;
    case 13:
      return t === ve.FOREIGN_OBJECT && e === xt.SVG;
    case 14:
      return t === ve.ANNOTATION_XML && e === xt.MATHML;
  }
  return !1;
}
let XK = class {
  constructor(e, n) {
    this.stackTop = -1, this.items = [], this.current = e, this.currentTagName = null, this.currentTmplContent = null, this.tmplCount = 0, this.treeAdapter = n;
  }
  //Index of element
  _indexOf(e) {
    let n = -1;
    for (let i = this.stackTop; i >= 0; i--)
      if (this.items[i] === e) {
        n = i;
        break;
      }
    return n;
  }
  //Update current element
  _isInTemplate() {
    return this.currentTagName === ve.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === xt.HTML;
  }
  _updateCurrentElement() {
    this.current = this.items[this.stackTop], this.currentTagName = this.current && this.treeAdapter.getTagName(this.current), this.currentTmplContent = this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : null;
  }
  //Mutations
  push(e) {
    this.items[++this.stackTop] = e, this._updateCurrentElement(), this._isInTemplate() && this.tmplCount++;
  }
  pop() {
    this.stackTop--, this.tmplCount > 0 && this._isInTemplate() && this.tmplCount--, this._updateCurrentElement();
  }
  replace(e, n) {
    const i = this._indexOf(e);
    this.items[i] = n, i === this.stackTop && this._updateCurrentElement();
  }
  insertAfter(e, n) {
    const i = this._indexOf(e) + 1;
    this.items.splice(i, 0, n), i === ++this.stackTop && this._updateCurrentElement();
  }
  popUntilTagNamePopped(e) {
    for (; this.stackTop > -1; ) {
      const n = this.currentTagName, i = this.treeAdapter.getNamespaceURI(this.current);
      if (this.pop(), n === e && i === xt.HTML)
        break;
    }
  }
  popUntilElementPopped(e) {
    for (; this.stackTop > -1; ) {
      const n = this.current;
      if (this.pop(), n === e)
        break;
    }
  }
  popUntilNumberedHeaderPopped() {
    for (; this.stackTop > -1; ) {
      const e = this.currentTagName, n = this.treeAdapter.getNamespaceURI(this.current);
      if (this.pop(), e === ve.H1 || e === ve.H2 || e === ve.H3 || e === ve.H4 || e === ve.H5 || e === ve.H6 && n === xt.HTML)
        break;
    }
  }
  popUntilTableCellPopped() {
    for (; this.stackTop > -1; ) {
      const e = this.currentTagName, n = this.treeAdapter.getNamespaceURI(this.current);
      if (this.pop(), e === ve.TD || e === ve.TH && n === xt.HTML)
        break;
    }
  }
  popAllUpToHtmlElement() {
    this.stackTop = 0, this._updateCurrentElement();
  }
  clearBackToTableContext() {
    for (; this.currentTagName !== ve.TABLE && this.currentTagName !== ve.TEMPLATE && this.currentTagName !== ve.HTML || this.treeAdapter.getNamespaceURI(this.current) !== xt.HTML; )
      this.pop();
  }
  clearBackToTableBodyContext() {
    for (; this.currentTagName !== ve.TBODY && this.currentTagName !== ve.TFOOT && this.currentTagName !== ve.THEAD && this.currentTagName !== ve.TEMPLATE && this.currentTagName !== ve.HTML || this.treeAdapter.getNamespaceURI(this.current) !== xt.HTML; )
      this.pop();
  }
  clearBackToTableRowContext() {
    for (; this.currentTagName !== ve.TR && this.currentTagName !== ve.TEMPLATE && this.currentTagName !== ve.HTML || this.treeAdapter.getNamespaceURI(this.current) !== xt.HTML; )
      this.pop();
  }
  remove(e) {
    for (let n = this.stackTop; n >= 0; n--)
      if (this.items[n] === e) {
        this.items.splice(n, 1), this.stackTop--, this._updateCurrentElement();
        break;
      }
  }
  //Search
  tryPeekProperlyNestedBodyElement() {
    const e = this.items[1];
    return e && this.treeAdapter.getTagName(e) === ve.BODY ? e : null;
  }
  contains(e) {
    return this._indexOf(e) > -1;
  }
  getCommonAncestor(e) {
    let n = this._indexOf(e);
    return --n >= 0 ? this.items[n] : null;
  }
  isRootHtmlElementCurrent() {
    return this.stackTop === 0 && this.currentTagName === ve.HTML;
  }
  //Element in scope
  hasInScope(e) {
    for (let n = this.stackTop; n >= 0; n--) {
      const i = this.treeAdapter.getTagName(this.items[n]), r = this.treeAdapter.getNamespaceURI(this.items[n]);
      if (i === e && r === xt.HTML)
        return !0;
      if ($d(i, r))
        return !1;
    }
    return !0;
  }
  hasNumberedHeaderInScope() {
    for (let e = this.stackTop; e >= 0; e--) {
      const n = this.treeAdapter.getTagName(this.items[e]), i = this.treeAdapter.getNamespaceURI(this.items[e]);
      if ((n === ve.H1 || n === ve.H2 || n === ve.H3 || n === ve.H4 || n === ve.H5 || n === ve.H6) && i === xt.HTML)
        return !0;
      if ($d(n, i))
        return !1;
    }
    return !0;
  }
  hasInListItemScope(e) {
    for (let n = this.stackTop; n >= 0; n--) {
      const i = this.treeAdapter.getTagName(this.items[n]), r = this.treeAdapter.getNamespaceURI(this.items[n]);
      if (i === e && r === xt.HTML)
        return !0;
      if ((i === ve.UL || i === ve.OL) && r === xt.HTML || $d(i, r))
        return !1;
    }
    return !0;
  }
  hasInButtonScope(e) {
    for (let n = this.stackTop; n >= 0; n--) {
      const i = this.treeAdapter.getTagName(this.items[n]), r = this.treeAdapter.getNamespaceURI(this.items[n]);
      if (i === e && r === xt.HTML)
        return !0;
      if (i === ve.BUTTON && r === xt.HTML || $d(i, r))
        return !1;
    }
    return !0;
  }
  hasInTableScope(e) {
    for (let n = this.stackTop; n >= 0; n--) {
      const i = this.treeAdapter.getTagName(this.items[n]);
      if (this.treeAdapter.getNamespaceURI(this.items[n]) === xt.HTML) {
        if (i === e)
          return !0;
        if (i === ve.TABLE || i === ve.TEMPLATE || i === ve.HTML)
          return !1;
      }
    }
    return !0;
  }
  hasTableBodyContextInTableScope() {
    for (let e = this.stackTop; e >= 0; e--) {
      const n = this.treeAdapter.getTagName(this.items[e]);
      if (this.treeAdapter.getNamespaceURI(this.items[e]) === xt.HTML) {
        if (n === ve.TBODY || n === ve.THEAD || n === ve.TFOOT)
          return !0;
        if (n === ve.TABLE || n === ve.HTML)
          return !1;
      }
    }
    return !0;
  }
  hasInSelectScope(e) {
    for (let n = this.stackTop; n >= 0; n--) {
      const i = this.treeAdapter.getTagName(this.items[n]);
      if (this.treeAdapter.getNamespaceURI(this.items[n]) === xt.HTML) {
        if (i === e)
          return !0;
        if (i !== ve.OPTION && i !== ve.OPTGROUP)
          return !1;
      }
    }
    return !0;
  }
  //Implied end tags
  generateImpliedEndTags() {
    for (; R4(this.currentTagName); )
      this.pop();
  }
  generateImpliedEndTagsThoroughly() {
    for (; JK(this.currentTagName); )
      this.pop();
  }
  generateImpliedEndTagsWithExclusion(e) {
    for (; R4(this.currentTagName) && this.currentTagName !== e; )
      this.pop();
  }
};
var QK = XK;
const jd = 3;
let wb = class Wo {
  constructor(e) {
    this.length = 0, this.entries = [], this.treeAdapter = e, this.bookmark = null;
  }
  //Noah Ark's condition
  //OPTIMIZATION: at first we try to find possible candidates for exclusion using
  //lightweight heuristics without thorough attributes check.
  _getNoahArkConditionCandidates(e) {
    const n = [];
    if (this.length >= jd) {
      const i = this.treeAdapter.getAttrList(e).length, r = this.treeAdapter.getTagName(e), o = this.treeAdapter.getNamespaceURI(e);
      for (let s = this.length - 1; s >= 0; s--) {
        const a = this.entries[s];
        if (a.type === Wo.MARKER_ENTRY)
          break;
        const l = a.element, c = this.treeAdapter.getAttrList(l);
        this.treeAdapter.getTagName(l) === r && this.treeAdapter.getNamespaceURI(l) === o && c.length === i && n.push({ idx: s, attrs: c });
      }
    }
    return n.length < jd ? [] : n;
  }
  _ensureNoahArkCondition(e) {
    const n = this._getNoahArkConditionCandidates(e);
    let i = n.length;
    if (i) {
      const r = this.treeAdapter.getAttrList(e), o = r.length, s = /* @__PURE__ */ Object.create(null);
      for (let a = 0; a < o; a++) {
        const l = r[a];
        s[l.name] = l.value;
      }
      for (let a = 0; a < o; a++)
        for (let l = 0; l < i; l++) {
          const c = n[l].attrs[a];
          if (s[c.name] !== c.value && (n.splice(l, 1), i--), n.length < jd)
            return;
        }
      for (let a = i - 1; a >= jd - 1; a--)
        this.entries.splice(n[a].idx, 1), this.length--;
    }
  }
  //Mutations
  insertMarker() {
    this.entries.push({ type: Wo.MARKER_ENTRY }), this.length++;
  }
  pushElement(e, n) {
    this._ensureNoahArkCondition(e), this.entries.push({
      type: Wo.ELEMENT_ENTRY,
      element: e,
      token: n
    }), this.length++;
  }
  insertElementAfterBookmark(e, n) {
    let i = this.length - 1;
    for (; i >= 0 && this.entries[i] !== this.bookmark; i--)
      ;
    this.entries.splice(i + 1, 0, {
      type: Wo.ELEMENT_ENTRY,
      element: e,
      token: n
    }), this.length++;
  }
  removeEntry(e) {
    for (let n = this.length - 1; n >= 0; n--)
      if (this.entries[n] === e) {
        this.entries.splice(n, 1), this.length--;
        break;
      }
  }
  clearToLastMarker() {
    for (; this.length; ) {
      const e = this.entries.pop();
      if (this.length--, e.type === Wo.MARKER_ENTRY)
        break;
    }
  }
  //Search
  getElementEntryInScopeWithTagName(e) {
    for (let n = this.length - 1; n >= 0; n--) {
      const i = this.entries[n];
      if (i.type === Wo.MARKER_ENTRY)
        return null;
      if (this.treeAdapter.getTagName(i.element) === e)
        return i;
    }
    return null;
  }
  getElementEntry(e) {
    for (let n = this.length - 1; n >= 0; n--) {
      const i = this.entries[n];
      if (i.type === Wo.ELEMENT_ENTRY && i.element === e)
        return i;
    }
    return null;
  }
};
wb.MARKER_ENTRY = "MARKER_ENTRY";
wb.ELEMENT_ENTRY = "ELEMENT_ENTRY";
var ZK = wb;
let GC = class {
  constructor(e) {
    const n = {}, i = this._getOverriddenMethods(this, n);
    for (const r of Object.keys(i))
      typeof i[r] == "function" && (n[r] = e[r], e[r] = i[r]);
  }
  _getOverriddenMethods() {
    throw new Error("Not implemented");
  }
};
GC.install = function(t, e, n) {
  t.__mixins || (t.__mixins = []);
  for (let r = 0; r < t.__mixins.length; r++)
    if (t.__mixins[r].constructor === e)
      return t.__mixins[r];
  const i = new e(t, n);
  return t.__mixins.push(i), i;
};
var Ao = GC;
const eY = Ao;
let tY = class extends eY {
  constructor(e) {
    super(e), this.preprocessor = e, this.isEol = !1, this.lineStartPos = 0, this.droppedBufferSize = 0, this.offset = 0, this.col = 0, this.line = 1;
  }
  _getOverriddenMethods(e, n) {
    return {
      advance() {
        const i = this.pos + 1, r = this.html[i];
        return e.isEol && (e.isEol = !1, e.line++, e.lineStartPos = i), (r === `
` || r === "\r" && this.html[i + 1] !== `
`) && (e.isEol = !0), e.col = i - e.lineStartPos + 1, e.offset = e.droppedBufferSize + i, n.advance.call(this);
      },
      retreat() {
        n.retreat.call(this), e.isEol = !1, e.col = this.pos - e.lineStartPos + 1;
      },
      dropParsedChunk() {
        const i = this.pos;
        n.dropParsedChunk.call(this);
        const r = i - this.pos;
        e.lineStartPos -= r, e.droppedBufferSize += r, e.offset = e.droppedBufferSize + this.pos;
      }
    };
  }
};
var KC = tY;
const I4 = Ao, qm = cp, nY = KC;
let iY = class extends I4 {
  constructor(e) {
    super(e), this.tokenizer = e, this.posTracker = I4.install(e.preprocessor, nY), this.currentAttrLocation = null, this.ctLoc = null;
  }
  _getCurrentLocation() {
    return {
      startLine: this.posTracker.line,
      startCol: this.posTracker.col,
      startOffset: this.posTracker.offset,
      endLine: -1,
      endCol: -1,
      endOffset: -1
    };
  }
  _attachCurrentAttrLocationInfo() {
    this.currentAttrLocation.endLine = this.posTracker.line, this.currentAttrLocation.endCol = this.posTracker.col, this.currentAttrLocation.endOffset = this.posTracker.offset;
    const e = this.tokenizer.currentToken, n = this.tokenizer.currentAttr;
    e.location.attrs || (e.location.attrs = /* @__PURE__ */ Object.create(null)), e.location.attrs[n.name] = this.currentAttrLocation;
  }
  _getOverriddenMethods(e, n) {
    const i = {
      _createStartTagToken() {
        n._createStartTagToken.call(this), this.currentToken.location = e.ctLoc;
      },
      _createEndTagToken() {
        n._createEndTagToken.call(this), this.currentToken.location = e.ctLoc;
      },
      _createCommentToken() {
        n._createCommentToken.call(this), this.currentToken.location = e.ctLoc;
      },
      _createDoctypeToken(r) {
        n._createDoctypeToken.call(this, r), this.currentToken.location = e.ctLoc;
      },
      _createCharacterToken(r, o) {
        n._createCharacterToken.call(this, r, o), this.currentCharacterToken.location = e.ctLoc;
      },
      _createEOFToken() {
        n._createEOFToken.call(this), this.currentToken.location = e._getCurrentLocation();
      },
      _createAttr(r) {
        n._createAttr.call(this, r), e.currentAttrLocation = e._getCurrentLocation();
      },
      _leaveAttrName(r) {
        n._leaveAttrName.call(this, r), e._attachCurrentAttrLocationInfo();
      },
      _leaveAttrValue(r) {
        n._leaveAttrValue.call(this, r), e._attachCurrentAttrLocationInfo();
      },
      _emitCurrentToken() {
        const r = this.currentToken.location;
        this.currentCharacterToken && (this.currentCharacterToken.location.endLine = r.startLine, this.currentCharacterToken.location.endCol = r.startCol, this.currentCharacterToken.location.endOffset = r.startOffset), this.currentToken.type === qm.EOF_TOKEN ? (r.endLine = r.startLine, r.endCol = r.startCol, r.endOffset = r.startOffset) : (r.endLine = e.posTracker.line, r.endCol = e.posTracker.col + 1, r.endOffset = e.posTracker.offset + 1), n._emitCurrentToken.call(this);
      },
      _emitCurrentCharacterToken() {
        const r = this.currentCharacterToken && this.currentCharacterToken.location;
        r && r.endOffset === -1 && (r.endLine = e.posTracker.line, r.endCol = e.posTracker.col, r.endOffset = e.posTracker.offset), n._emitCurrentCharacterToken.call(this);
      }
    };
    return Object.keys(qm.MODE).forEach((r) => {
      const o = qm.MODE[r];
      i[o] = function(s) {
        e.ctLoc = e._getCurrentLocation(), n[o].call(this, s);
      };
    }), i;
  }
};
var YC = iY;
const rY = Ao;
let oY = class extends rY {
  constructor(e, n) {
    super(e), this.onItemPop = n.onItemPop;
  }
  _getOverriddenMethods(e, n) {
    return {
      pop() {
        e.onItemPop(this.current), n.pop.call(this);
      },
      popAllUpToHtmlElement() {
        for (let i = this.stackTop; i > 0; i--)
          e.onItemPop(this.items[i]);
        n.popAllUpToHtmlElement.call(this);
      },
      remove(i) {
        e.onItemPop(this.current), n.remove.call(this, i);
      }
    };
  }
};
var sY = oY;
const Gm = Ao, L4 = cp, aY = YC, lY = sY, cY = hr, Km = cY.TAG_NAMES;
let fY = class extends Gm {
  constructor(e) {
    super(e), this.parser = e, this.treeAdapter = this.parser.treeAdapter, this.posTracker = null, this.lastStartTagToken = null, this.lastFosterParentingLocation = null, this.currentToken = null;
  }
  _setStartLocation(e) {
    let n = null;
    this.lastStartTagToken && (n = Object.assign({}, this.lastStartTagToken.location), n.startTag = this.lastStartTagToken.location), this.treeAdapter.setNodeSourceCodeLocation(e, n);
  }
  _setEndLocation(e, n) {
    if (this.treeAdapter.getNodeSourceCodeLocation(e) && n.location) {
      const r = n.location, o = this.treeAdapter.getTagName(e), s = n.type === L4.END_TAG_TOKEN && o === n.tagName, a = {};
      s ? (a.endTag = Object.assign({}, r), a.endLine = r.endLine, a.endCol = r.endCol, a.endOffset = r.endOffset) : (a.endLine = r.startLine, a.endCol = r.startCol, a.endOffset = r.startOffset), this.treeAdapter.updateNodeSourceCodeLocation(e, a);
    }
  }
  _getOverriddenMethods(e, n) {
    return {
      _bootstrap(i, r) {
        n._bootstrap.call(this, i, r), e.lastStartTagToken = null, e.lastFosterParentingLocation = null, e.currentToken = null;
        const o = Gm.install(this.tokenizer, aY);
        e.posTracker = o.posTracker, Gm.install(this.openElements, lY, {
          onItemPop: function(s) {
            e._setEndLocation(s, e.currentToken);
          }
        });
      },
      _runParsingLoop(i) {
        n._runParsingLoop.call(this, i);
        for (let r = this.openElements.stackTop; r >= 0; r--)
          e._setEndLocation(this.openElements.items[r], e.currentToken);
      },
      //Token processing
      _processTokenInForeignContent(i) {
        e.currentToken = i, n._processTokenInForeignContent.call(this, i);
      },
      _processToken(i) {
        if (e.currentToken = i, n._processToken.call(this, i), i.type === L4.END_TAG_TOKEN && (i.tagName === Km.HTML || i.tagName === Km.BODY && this.openElements.hasInScope(Km.BODY)))
          for (let o = this.openElements.stackTop; o >= 0; o--) {
            const s = this.openElements.items[o];
            if (this.treeAdapter.getTagName(s) === i.tagName) {
              e._setEndLocation(s, i);
              break;
            }
          }
      },
      //Doctype
      _setDocumentType(i) {
        n._setDocumentType.call(this, i);
        const r = this.treeAdapter.getChildNodes(this.document), o = r.length;
        for (let s = 0; s < o; s++) {
          const a = r[s];
          if (this.treeAdapter.isDocumentTypeNode(a)) {
            this.treeAdapter.setNodeSourceCodeLocation(a, i.location);
            break;
          }
        }
      },
      //Elements
      _attachElementToTree(i) {
        e._setStartLocation(i), e.lastStartTagToken = null, n._attachElementToTree.call(this, i);
      },
      _appendElement(i, r) {
        e.lastStartTagToken = i, n._appendElement.call(this, i, r);
      },
      _insertElement(i, r) {
        e.lastStartTagToken = i, n._insertElement.call(this, i, r);
      },
      _insertTemplate(i) {
        e.lastStartTagToken = i, n._insertTemplate.call(this, i);
        const r = this.treeAdapter.getTemplateContent(this.openElements.current);
        this.treeAdapter.setNodeSourceCodeLocation(r, null);
      },
      _insertFakeRootElement() {
        n._insertFakeRootElement.call(this), this.treeAdapter.setNodeSourceCodeLocation(this.openElements.current, null);
      },
      //Comments
      _appendCommentNode(i, r) {
        n._appendCommentNode.call(this, i, r);
        const o = this.treeAdapter.getChildNodes(r), s = o[o.length - 1];
        this.treeAdapter.setNodeSourceCodeLocation(s, i.location);
      },
      //Text
      _findFosterParentingLocation() {
        return e.lastFosterParentingLocation = n._findFosterParentingLocation.call(this), e.lastFosterParentingLocation;
      },
      _insertCharacters(i) {
        n._insertCharacters.call(this, i);
        const r = this._shouldFosterParentOnInsertion(), o = r && e.lastFosterParentingLocation.parent || this.openElements.currentTmplContent || this.openElements.current, s = this.treeAdapter.getChildNodes(o), a = r && e.lastFosterParentingLocation.beforeElement ? s.indexOf(e.lastFosterParentingLocation.beforeElement) - 1 : s.length - 1, l = s[a];
        if (this.treeAdapter.getNodeSourceCodeLocation(l)) {
          const { endLine: f, endCol: d, endOffset: u } = i.location;
          this.treeAdapter.updateNodeSourceCodeLocation(l, { endLine: f, endCol: d, endOffset: u });
        } else
          this.treeAdapter.setNodeSourceCodeLocation(l, i.location);
      }
    };
  }
};
var dY = fY;
const uY = Ao;
let hY = class extends uY {
  constructor(e, n) {
    super(e), this.posTracker = null, this.onParseError = n.onParseError;
  }
  _setErrorLocation(e) {
    e.startLine = e.endLine = this.posTracker.line, e.startCol = e.endCol = this.posTracker.col, e.startOffset = e.endOffset = this.posTracker.offset;
  }
  _reportError(e) {
    const n = {
      code: e,
      startLine: -1,
      startCol: -1,
      startOffset: -1,
      endLine: -1,
      endCol: -1,
      endOffset: -1
    };
    this._setErrorLocation(n), this.onParseError(n);
  }
  _getOverriddenMethods(e) {
    return {
      _err(n) {
        e._reportError(n);
      }
    };
  }
};
var _b = hY;
const pY = _b, mY = KC, gY = Ao;
let yY = class extends pY {
  constructor(e, n) {
    super(e, n), this.posTracker = gY.install(e, mY), this.lastErrOffset = -1;
  }
  _reportError(e) {
    this.lastErrOffset !== this.posTracker.offset && (this.lastErrOffset = this.posTracker.offset, super._reportError(e));
  }
};
var vY = yY;
const bY = _b, kY = vY, wY = Ao;
let _Y = class extends bY {
  constructor(e, n) {
    super(e, n);
    const i = wY.install(e.preprocessor, kY, n);
    this.posTracker = i.posTracker;
  }
};
var EY = _Y;
const TY = _b, CY = EY, SY = YC, D4 = Ao;
let xY = class extends TY {
  constructor(e, n) {
    super(e, n), this.opts = n, this.ctLoc = null, this.locBeforeToken = !1;
  }
  _setErrorLocation(e) {
    this.ctLoc && (e.startLine = this.ctLoc.startLine, e.startCol = this.ctLoc.startCol, e.startOffset = this.ctLoc.startOffset, e.endLine = this.locBeforeToken ? this.ctLoc.startLine : this.ctLoc.endLine, e.endCol = this.locBeforeToken ? this.ctLoc.startCol : this.ctLoc.endCol, e.endOffset = this.locBeforeToken ? this.ctLoc.startOffset : this.ctLoc.endOffset);
  }
  _getOverriddenMethods(e, n) {
    return {
      _bootstrap(i, r) {
        n._bootstrap.call(this, i, r), D4.install(this.tokenizer, CY, e.opts), D4.install(this.tokenizer, SY);
      },
      _processInputToken(i) {
        e.ctLoc = i.location, n._processInputToken.call(this, i);
      },
      _err(i, r) {
        e.locBeforeToken = r && r.beforeToken, e._reportError(i);
      }
    };
  }
};
var AY = xY, kt = {};
const { DOCUMENT_MODE: MY } = hr;
kt.createDocument = function() {
  return {
    nodeName: "#document",
    mode: MY.NO_QUIRKS,
    childNodes: []
  };
};
kt.createDocumentFragment = function() {
  return {
    nodeName: "#document-fragment",
    childNodes: []
  };
};
kt.createElement = function(t, e, n) {
  return {
    nodeName: t,
    tagName: t,
    attrs: n,
    namespaceURI: e,
    childNodes: [],
    parentNode: null
  };
};
kt.createCommentNode = function(t) {
  return {
    nodeName: "#comment",
    data: t,
    parentNode: null
  };
};
const JC = function(t) {
  return {
    nodeName: "#text",
    value: t,
    parentNode: null
  };
}, XC = kt.appendChild = function(t, e) {
  t.childNodes.push(e), e.parentNode = t;
}, NY = kt.insertBefore = function(t, e, n) {
  const i = t.childNodes.indexOf(n);
  t.childNodes.splice(i, 0, e), e.parentNode = t;
};
kt.setTemplateContent = function(t, e) {
  t.content = e;
};
kt.getTemplateContent = function(t) {
  return t.content;
};
kt.setDocumentType = function(t, e, n, i) {
  let r = null;
  for (let o = 0; o < t.childNodes.length; o++)
    if (t.childNodes[o].nodeName === "#documentType") {
      r = t.childNodes[o];
      break;
    }
  r ? (r.name = e, r.publicId = n, r.systemId = i) : XC(t, {
    nodeName: "#documentType",
    name: e,
    publicId: n,
    systemId: i
  });
};
kt.setDocumentMode = function(t, e) {
  t.mode = e;
};
kt.getDocumentMode = function(t) {
  return t.mode;
};
kt.detachNode = function(t) {
  if (t.parentNode) {
    const e = t.parentNode.childNodes.indexOf(t);
    t.parentNode.childNodes.splice(e, 1), t.parentNode = null;
  }
};
kt.insertText = function(t, e) {
  if (t.childNodes.length) {
    const n = t.childNodes[t.childNodes.length - 1];
    if (n.nodeName === "#text") {
      n.value += e;
      return;
    }
  }
  XC(t, JC(e));
};
kt.insertTextBefore = function(t, e, n) {
  const i = t.childNodes[t.childNodes.indexOf(n) - 1];
  i && i.nodeName === "#text" ? i.value += e : NY(t, JC(e), n);
};
kt.adoptAttributes = function(t, e) {
  const n = [];
  for (let i = 0; i < t.attrs.length; i++)
    n.push(t.attrs[i].name);
  for (let i = 0; i < e.length; i++)
    n.indexOf(e[i].name) === -1 && t.attrs.push(e[i]);
};
kt.getFirstChild = function(t) {
  return t.childNodes[0];
};
kt.getChildNodes = function(t) {
  return t.childNodes;
};
kt.getParentNode = function(t) {
  return t.parentNode;
};
kt.getAttrList = function(t) {
  return t.attrs;
};
kt.getTagName = function(t) {
  return t.tagName;
};
kt.getNamespaceURI = function(t) {
  return t.namespaceURI;
};
kt.getTextNodeContent = function(t) {
  return t.value;
};
kt.getCommentNodeContent = function(t) {
  return t.data;
};
kt.getDocumentTypeNodeName = function(t) {
  return t.name;
};
kt.getDocumentTypeNodePublicId = function(t) {
  return t.publicId;
};
kt.getDocumentTypeNodeSystemId = function(t) {
  return t.systemId;
};
kt.isTextNode = function(t) {
  return t.nodeName === "#text";
};
kt.isCommentNode = function(t) {
  return t.nodeName === "#comment";
};
kt.isDocumentTypeNode = function(t) {
  return t.nodeName === "#documentType";
};
kt.isElementNode = function(t) {
  return !!t.tagName;
};
kt.setNodeSourceCodeLocation = function(t, e) {
  t.sourceCodeLocation = e;
};
kt.getNodeSourceCodeLocation = function(t) {
  return t.sourceCodeLocation;
};
kt.updateNodeSourceCodeLocation = function(t, e) {
  t.sourceCodeLocation = Object.assign(t.sourceCodeLocation, e);
};
var OY = function(e, n) {
  return n = n || /* @__PURE__ */ Object.create(null), [e, n].reduce((i, r) => (Object.keys(r).forEach((o) => {
    i[o] = r[o];
  }), i), /* @__PURE__ */ Object.create(null));
}, fp = {};
const { DOCUMENT_MODE: Da } = hr, QC = "html", RY = "about:legacy-compat", IY = "http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd", ZC = [
  "+//silmaril//dtd html pro v0r11 19970101//",
  "-//as//dtd html 3.0 aswedit + extensions//",
  "-//advasoft ltd//dtd html 3.0 aswedit + extensions//",
  "-//ietf//dtd html 2.0 level 1//",
  "-//ietf//dtd html 2.0 level 2//",
  "-//ietf//dtd html 2.0 strict level 1//",
  "-//ietf//dtd html 2.0 strict level 2//",
  "-//ietf//dtd html 2.0 strict//",
  "-//ietf//dtd html 2.0//",
  "-//ietf//dtd html 2.1e//",
  "-//ietf//dtd html 3.0//",
  "-//ietf//dtd html 3.2 final//",
  "-//ietf//dtd html 3.2//",
  "-//ietf//dtd html 3//",
  "-//ietf//dtd html level 0//",
  "-//ietf//dtd html level 1//",
  "-//ietf//dtd html level 2//",
  "-//ietf//dtd html level 3//",
  "-//ietf//dtd html strict level 0//",
  "-//ietf//dtd html strict level 1//",
  "-//ietf//dtd html strict level 2//",
  "-//ietf//dtd html strict level 3//",
  "-//ietf//dtd html strict//",
  "-//ietf//dtd html//",
  "-//metrius//dtd metrius presentational//",
  "-//microsoft//dtd internet explorer 2.0 html strict//",
  "-//microsoft//dtd internet explorer 2.0 html//",
  "-//microsoft//dtd internet explorer 2.0 tables//",
  "-//microsoft//dtd internet explorer 3.0 html strict//",
  "-//microsoft//dtd internet explorer 3.0 html//",
  "-//microsoft//dtd internet explorer 3.0 tables//",
  "-//netscape comm. corp.//dtd html//",
  "-//netscape comm. corp.//dtd strict html//",
  "-//o'reilly and associates//dtd html 2.0//",
  "-//o'reilly and associates//dtd html extended 1.0//",
  "-//o'reilly and associates//dtd html extended relaxed 1.0//",
  "-//sq//dtd html 2.0 hotmetal + extensions//",
  "-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//",
  "-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//",
  "-//spyglass//dtd html 2.0 extended//",
  "-//sun microsystems corp.//dtd hotjava html//",
  "-//sun microsystems corp.//dtd hotjava strict html//",
  "-//w3c//dtd html 3 1995-03-24//",
  "-//w3c//dtd html 3.2 draft//",
  "-//w3c//dtd html 3.2 final//",
  "-//w3c//dtd html 3.2//",
  "-//w3c//dtd html 3.2s draft//",
  "-//w3c//dtd html 4.0 frameset//",
  "-//w3c//dtd html 4.0 transitional//",
  "-//w3c//dtd html experimental 19960712//",
  "-//w3c//dtd html experimental 970421//",
  "-//w3c//dtd w3 html//",
  "-//w3o//dtd w3 html 3.0//",
  "-//webtechs//dtd mozilla html 2.0//",
  "-//webtechs//dtd mozilla html//"
], LY = ZC.concat([
  "-//w3c//dtd html 4.01 frameset//",
  "-//w3c//dtd html 4.01 transitional//"
]), DY = ["-//w3o//dtd w3 html strict 3.0//en//", "-/w3c/dtd html 4.0 transitional/en", "html"], e7 = ["-//w3c//dtd xhtml 1.0 frameset//", "-//w3c//dtd xhtml 1.0 transitional//"], PY = e7.concat([
  "-//w3c//dtd html 4.01 frameset//",
  "-//w3c//dtd html 4.01 transitional//"
]);
function P4(t) {
  const e = t.indexOf('"') !== -1 ? "'" : '"';
  return e + t + e;
}
function F4(t, e) {
  for (let n = 0; n < e.length; n++)
    if (t.indexOf(e[n]) === 0)
      return !0;
  return !1;
}
fp.isConforming = function(t) {
  return t.name === QC && t.publicId === null && (t.systemId === null || t.systemId === RY);
};
fp.getDocumentMode = function(t) {
  if (t.name !== QC)
    return Da.QUIRKS;
  const e = t.systemId;
  if (e && e.toLowerCase() === IY)
    return Da.QUIRKS;
  let n = t.publicId;
  if (n !== null) {
    if (n = n.toLowerCase(), DY.indexOf(n) > -1)
      return Da.QUIRKS;
    let i = e === null ? LY : ZC;
    if (F4(n, i))
      return Da.QUIRKS;
    if (i = e === null ? e7 : PY, F4(n, i))
      return Da.LIMITED_QUIRKS;
  }
  return Da.NO_QUIRKS;
};
fp.serializeContent = function(t, e, n) {
  let i = "!DOCTYPE ";
  return t && (i += t), e ? i += " PUBLIC " + P4(e) : n && (i += " SYSTEM"), n !== null && (i += " " + P4(n)), i;
};
var Ns = {};
const Ym = cp, Eb = hr, De = Eb.TAG_NAMES, Mn = Eb.NAMESPACES, pu = Eb.ATTRS, B4 = {
  TEXT_HTML: "text/html",
  APPLICATION_XML: "application/xhtml+xml"
}, FY = "definitionurl", BY = "definitionURL", HY = {
  attributename: "attributeName",
  attributetype: "attributeType",
  basefrequency: "baseFrequency",
  baseprofile: "baseProfile",
  calcmode: "calcMode",
  clippathunits: "clipPathUnits",
  diffuseconstant: "diffuseConstant",
  edgemode: "edgeMode",
  filterunits: "filterUnits",
  glyphref: "glyphRef",
  gradienttransform: "gradientTransform",
  gradientunits: "gradientUnits",
  kernelmatrix: "kernelMatrix",
  kernelunitlength: "kernelUnitLength",
  keypoints: "keyPoints",
  keysplines: "keySplines",
  keytimes: "keyTimes",
  lengthadjust: "lengthAdjust",
  limitingconeangle: "limitingConeAngle",
  markerheight: "markerHeight",
  markerunits: "markerUnits",
  markerwidth: "markerWidth",
  maskcontentunits: "maskContentUnits",
  maskunits: "maskUnits",
  numoctaves: "numOctaves",
  pathlength: "pathLength",
  patterncontentunits: "patternContentUnits",
  patterntransform: "patternTransform",
  patternunits: "patternUnits",
  pointsatx: "pointsAtX",
  pointsaty: "pointsAtY",
  pointsatz: "pointsAtZ",
  preservealpha: "preserveAlpha",
  preserveaspectratio: "preserveAspectRatio",
  primitiveunits: "primitiveUnits",
  refx: "refX",
  refy: "refY",
  repeatcount: "repeatCount",
  repeatdur: "repeatDur",
  requiredextensions: "requiredExtensions",
  requiredfeatures: "requiredFeatures",
  specularconstant: "specularConstant",
  specularexponent: "specularExponent",
  spreadmethod: "spreadMethod",
  startoffset: "startOffset",
  stddeviation: "stdDeviation",
  stitchtiles: "stitchTiles",
  surfacescale: "surfaceScale",
  systemlanguage: "systemLanguage",
  tablevalues: "tableValues",
  targetx: "targetX",
  targety: "targetY",
  textlength: "textLength",
  viewbox: "viewBox",
  viewtarget: "viewTarget",
  xchannelselector: "xChannelSelector",
  ychannelselector: "yChannelSelector",
  zoomandpan: "zoomAndPan"
}, $Y = {
  "xlink:actuate": { prefix: "xlink", name: "actuate", namespace: Mn.XLINK },
  "xlink:arcrole": { prefix: "xlink", name: "arcrole", namespace: Mn.XLINK },
  "xlink:href": { prefix: "xlink", name: "href", namespace: Mn.XLINK },
  "xlink:role": { prefix: "xlink", name: "role", namespace: Mn.XLINK },
  "xlink:show": { prefix: "xlink", name: "show", namespace: Mn.XLINK },
  "xlink:title": { prefix: "xlink", name: "title", namespace: Mn.XLINK },
  "xlink:type": { prefix: "xlink", name: "type", namespace: Mn.XLINK },
  "xml:base": { prefix: "xml", name: "base", namespace: Mn.XML },
  "xml:lang": { prefix: "xml", name: "lang", namespace: Mn.XML },
  "xml:space": { prefix: "xml", name: "space", namespace: Mn.XML },
  xmlns: { prefix: "", name: "xmlns", namespace: Mn.XMLNS },
  "xmlns:xlink": { prefix: "xmlns", name: "xlink", namespace: Mn.XMLNS }
}, jY = Ns.SVG_TAG_NAMES_ADJUSTMENT_MAP = {
  altglyph: "altGlyph",
  altglyphdef: "altGlyphDef",
  altglyphitem: "altGlyphItem",
  animatecolor: "animateColor",
  animatemotion: "animateMotion",
  animatetransform: "animateTransform",
  clippath: "clipPath",
  feblend: "feBlend",
  fecolormatrix: "feColorMatrix",
  fecomponenttransfer: "feComponentTransfer",
  fecomposite: "feComposite",
  feconvolvematrix: "feConvolveMatrix",
  fediffuselighting: "feDiffuseLighting",
  fedisplacementmap: "feDisplacementMap",
  fedistantlight: "feDistantLight",
  feflood: "feFlood",
  fefunca: "feFuncA",
  fefuncb: "feFuncB",
  fefuncg: "feFuncG",
  fefuncr: "feFuncR",
  fegaussianblur: "feGaussianBlur",
  feimage: "feImage",
  femerge: "feMerge",
  femergenode: "feMergeNode",
  femorphology: "feMorphology",
  feoffset: "feOffset",
  fepointlight: "fePointLight",
  fespecularlighting: "feSpecularLighting",
  fespotlight: "feSpotLight",
  fetile: "feTile",
  feturbulence: "feTurbulence",
  foreignobject: "foreignObject",
  glyphref: "glyphRef",
  lineargradient: "linearGradient",
  radialgradient: "radialGradient",
  textpath: "textPath"
}, zY = {
  [De.B]: !0,
  [De.BIG]: !0,
  [De.BLOCKQUOTE]: !0,
  [De.BODY]: !0,
  [De.BR]: !0,
  [De.CENTER]: !0,
  [De.CODE]: !0,
  [De.DD]: !0,
  [De.DIV]: !0,
  [De.DL]: !0,
  [De.DT]: !0,
  [De.EM]: !0,
  [De.EMBED]: !0,
  [De.H1]: !0,
  [De.H2]: !0,
  [De.H3]: !0,
  [De.H4]: !0,
  [De.H5]: !0,
  [De.H6]: !0,
  [De.HEAD]: !0,
  [De.HR]: !0,
  [De.I]: !0,
  [De.IMG]: !0,
  [De.LI]: !0,
  [De.LISTING]: !0,
  [De.MENU]: !0,
  [De.META]: !0,
  [De.NOBR]: !0,
  [De.OL]: !0,
  [De.P]: !0,
  [De.PRE]: !0,
  [De.RUBY]: !0,
  [De.S]: !0,
  [De.SMALL]: !0,
  [De.SPAN]: !0,
  [De.STRONG]: !0,
  [De.STRIKE]: !0,
  [De.SUB]: !0,
  [De.SUP]: !0,
  [De.TABLE]: !0,
  [De.TT]: !0,
  [De.U]: !0,
  [De.UL]: !0,
  [De.VAR]: !0
};
Ns.causesExit = function(t) {
  const e = t.tagName;
  return e === De.FONT && (Ym.getTokenAttr(t, pu.COLOR) !== null || Ym.getTokenAttr(t, pu.SIZE) !== null || Ym.getTokenAttr(t, pu.FACE) !== null) ? !0 : zY[e];
};
Ns.adjustTokenMathMLAttrs = function(t) {
  for (let e = 0; e < t.attrs.length; e++)
    if (t.attrs[e].name === FY) {
      t.attrs[e].name = BY;
      break;
    }
};
Ns.adjustTokenSVGAttrs = function(t) {
  for (let e = 0; e < t.attrs.length; e++) {
    const n = HY[t.attrs[e].name];
    n && (t.attrs[e].name = n);
  }
};
Ns.adjustTokenXMLAttrs = function(t) {
  for (let e = 0; e < t.attrs.length; e++) {
    const n = $Y[t.attrs[e].name];
    n && (t.attrs[e].prefix = n.prefix, t.attrs[e].name = n.name, t.attrs[e].namespace = n.namespace);
  }
};
Ns.adjustTokenSVGTagName = function(t) {
  const e = jY[t.tagName];
  e && (t.tagName = e);
};
function UY(t, e) {
  return e === Mn.MATHML && (t === De.MI || t === De.MO || t === De.MN || t === De.MS || t === De.MTEXT);
}
function VY(t, e, n) {
  if (e === Mn.MATHML && t === De.ANNOTATION_XML) {
    for (let i = 0; i < n.length; i++)
      if (n[i].name === pu.ENCODING) {
        const r = n[i].value.toLowerCase();
        return r === B4.TEXT_HTML || r === B4.APPLICATION_XML;
      }
  }
  return e === Mn.SVG && (t === De.FOREIGN_OBJECT || t === De.DESC || t === De.TITLE);
}
Ns.isIntegrationPoint = function(t, e, n, i) {
  return !!((!i || i === Mn.HTML) && VY(t, e, n) || (!i || i === Mn.MATHML) && UY(t, e));
};
const $ = cp, WY = QK, H4 = ZK, qY = dY, GY = AY, $4 = Ao, KY = kt, YY = OY, j4 = fp, Tr = Ns, Ln = kb, JY = ur, Ta = hr, w = Ta.TAG_NAMES, Ae = Ta.NAMESPACES, t7 = Ta.ATTRS, XY = {
  scriptingEnabled: !0,
  sourceCodeLocationInfo: !1,
  onParseError: null,
  treeAdapter: KY
}, n7 = "hidden", QY = 8, ZY = 3, i7 = "INITIAL_MODE", Tb = "BEFORE_HTML_MODE", dp = "BEFORE_HEAD_MODE", Ul = "IN_HEAD_MODE", r7 = "IN_HEAD_NO_SCRIPT_MODE", up = "AFTER_HEAD_MODE", Nr = "IN_BODY_MODE", z1 = "TEXT_MODE", Bn = "IN_TABLE_MODE", o7 = "IN_TABLE_TEXT_MODE", hp = "IN_CAPTION_MODE", Vf = "IN_COLUMN_GROUP_MODE", Di = "IN_TABLE_BODY_MODE", _o = "IN_ROW_MODE", pp = "IN_CELL_MODE", Cb = "IN_SELECT_MODE", Sb = "IN_SELECT_IN_TABLE_MODE", U1 = "IN_TEMPLATE_MODE", xb = "AFTER_BODY_MODE", mp = "IN_FRAMESET_MODE", s7 = "AFTER_FRAMESET_MODE", a7 = "AFTER_AFTER_BODY_MODE", l7 = "AFTER_AFTER_FRAMESET_MODE", eJ = {
  [w.TR]: _o,
  [w.TBODY]: Di,
  [w.THEAD]: Di,
  [w.TFOOT]: Di,
  [w.CAPTION]: hp,
  [w.COLGROUP]: Vf,
  [w.TABLE]: Bn,
  [w.BODY]: Nr,
  [w.FRAMESET]: mp
}, tJ = {
  [w.CAPTION]: Bn,
  [w.COLGROUP]: Bn,
  [w.TBODY]: Bn,
  [w.TFOOT]: Bn,
  [w.THEAD]: Bn,
  [w.COL]: Vf,
  [w.TR]: Di,
  [w.TD]: _o,
  [w.TH]: _o
}, z4 = {
  [i7]: {
    [$.CHARACTER_TOKEN]: gc,
    [$.NULL_CHARACTER_TOKEN]: gc,
    [$.WHITESPACE_CHARACTER_TOKEN]: ut,
    [$.COMMENT_TOKEN]: pn,
    [$.DOCTYPE_TOKEN]: dJ,
    [$.START_TAG_TOKEN]: gc,
    [$.END_TAG_TOKEN]: gc,
    [$.EOF_TOKEN]: gc
  },
  [Tb]: {
    [$.CHARACTER_TOKEN]: Bc,
    [$.NULL_CHARACTER_TOKEN]: Bc,
    [$.WHITESPACE_CHARACTER_TOKEN]: ut,
    [$.COMMENT_TOKEN]: pn,
    [$.DOCTYPE_TOKEN]: ut,
    [$.START_TAG_TOKEN]: uJ,
    [$.END_TAG_TOKEN]: hJ,
    [$.EOF_TOKEN]: Bc
  },
  [dp]: {
    [$.CHARACTER_TOKEN]: Hc,
    [$.NULL_CHARACTER_TOKEN]: Hc,
    [$.WHITESPACE_CHARACTER_TOKEN]: ut,
    [$.COMMENT_TOKEN]: pn,
    [$.DOCTYPE_TOKEN]: zd,
    [$.START_TAG_TOKEN]: pJ,
    [$.END_TAG_TOKEN]: mJ,
    [$.EOF_TOKEN]: Hc
  },
  [Ul]: {
    [$.CHARACTER_TOKEN]: $c,
    [$.NULL_CHARACTER_TOKEN]: $c,
    [$.WHITESPACE_CHARACTER_TOKEN]: Zn,
    [$.COMMENT_TOKEN]: pn,
    [$.DOCTYPE_TOKEN]: zd,
    [$.START_TAG_TOKEN]: _n,
    [$.END_TAG_TOKEN]: Ca,
    [$.EOF_TOKEN]: $c
  },
  [r7]: {
    [$.CHARACTER_TOKEN]: jc,
    [$.NULL_CHARACTER_TOKEN]: jc,
    [$.WHITESPACE_CHARACTER_TOKEN]: Zn,
    [$.COMMENT_TOKEN]: pn,
    [$.DOCTYPE_TOKEN]: zd,
    [$.START_TAG_TOKEN]: gJ,
    [$.END_TAG_TOKEN]: yJ,
    [$.EOF_TOKEN]: jc
  },
  [up]: {
    [$.CHARACTER_TOKEN]: zc,
    [$.NULL_CHARACTER_TOKEN]: zc,
    [$.WHITESPACE_CHARACTER_TOKEN]: Zn,
    [$.COMMENT_TOKEN]: pn,
    [$.DOCTYPE_TOKEN]: zd,
    [$.START_TAG_TOKEN]: vJ,
    [$.END_TAG_TOKEN]: bJ,
    [$.EOF_TOKEN]: zc
  },
  [Nr]: {
    [$.CHARACTER_TOKEN]: Ud,
    [$.NULL_CHARACTER_TOKEN]: ut,
    [$.WHITESPACE_CHARACTER_TOKEN]: Ds,
    [$.COMMENT_TOKEN]: pn,
    [$.DOCTYPE_TOKEN]: ut,
    [$.START_TAG_TOKEN]: ai,
    [$.END_TAG_TOKEN]: Ab,
    [$.EOF_TOKEN]: Qr
  },
  [z1]: {
    [$.CHARACTER_TOKEN]: Zn,
    [$.NULL_CHARACTER_TOKEN]: Zn,
    [$.WHITESPACE_CHARACTER_TOKEN]: Zn,
    [$.COMMENT_TOKEN]: ut,
    [$.DOCTYPE_TOKEN]: ut,
    [$.START_TAG_TOKEN]: ut,
    [$.END_TAG_TOKEN]: JJ,
    [$.EOF_TOKEN]: XJ
  },
  [Bn]: {
    [$.CHARACTER_TOKEN]: Zr,
    [$.NULL_CHARACTER_TOKEN]: Zr,
    [$.WHITESPACE_CHARACTER_TOKEN]: Zr,
    [$.COMMENT_TOKEN]: pn,
    [$.DOCTYPE_TOKEN]: ut,
    [$.START_TAG_TOKEN]: Mb,
    [$.END_TAG_TOKEN]: Nb,
    [$.EOF_TOKEN]: Qr
  },
  [o7]: {
    [$.CHARACTER_TOKEN]: aX,
    [$.NULL_CHARACTER_TOKEN]: ut,
    [$.WHITESPACE_CHARACTER_TOKEN]: sX,
    [$.COMMENT_TOKEN]: yc,
    [$.DOCTYPE_TOKEN]: yc,
    [$.START_TAG_TOKEN]: yc,
    [$.END_TAG_TOKEN]: yc,
    [$.EOF_TOKEN]: yc
  },
  [hp]: {
    [$.CHARACTER_TOKEN]: Ud,
    [$.NULL_CHARACTER_TOKEN]: ut,
    [$.WHITESPACE_CHARACTER_TOKEN]: Ds,
    [$.COMMENT_TOKEN]: pn,
    [$.DOCTYPE_TOKEN]: ut,
    [$.START_TAG_TOKEN]: lX,
    [$.END_TAG_TOKEN]: cX,
    [$.EOF_TOKEN]: Qr
  },
  [Vf]: {
    [$.CHARACTER_TOKEN]: V1,
    [$.NULL_CHARACTER_TOKEN]: V1,
    [$.WHITESPACE_CHARACTER_TOKEN]: Zn,
    [$.COMMENT_TOKEN]: pn,
    [$.DOCTYPE_TOKEN]: ut,
    [$.START_TAG_TOKEN]: fX,
    [$.END_TAG_TOKEN]: dX,
    [$.EOF_TOKEN]: Qr
  },
  [Di]: {
    [$.CHARACTER_TOKEN]: Zr,
    [$.NULL_CHARACTER_TOKEN]: Zr,
    [$.WHITESPACE_CHARACTER_TOKEN]: Zr,
    [$.COMMENT_TOKEN]: pn,
    [$.DOCTYPE_TOKEN]: ut,
    [$.START_TAG_TOKEN]: uX,
    [$.END_TAG_TOKEN]: hX,
    [$.EOF_TOKEN]: Qr
  },
  [_o]: {
    [$.CHARACTER_TOKEN]: Zr,
    [$.NULL_CHARACTER_TOKEN]: Zr,
    [$.WHITESPACE_CHARACTER_TOKEN]: Zr,
    [$.COMMENT_TOKEN]: pn,
    [$.DOCTYPE_TOKEN]: ut,
    [$.START_TAG_TOKEN]: pX,
    [$.END_TAG_TOKEN]: mX,
    [$.EOF_TOKEN]: Qr
  },
  [pp]: {
    [$.CHARACTER_TOKEN]: Ud,
    [$.NULL_CHARACTER_TOKEN]: ut,
    [$.WHITESPACE_CHARACTER_TOKEN]: Ds,
    [$.COMMENT_TOKEN]: pn,
    [$.DOCTYPE_TOKEN]: ut,
    [$.START_TAG_TOKEN]: gX,
    [$.END_TAG_TOKEN]: yX,
    [$.EOF_TOKEN]: Qr
  },
  [Cb]: {
    [$.CHARACTER_TOKEN]: Zn,
    [$.NULL_CHARACTER_TOKEN]: ut,
    [$.WHITESPACE_CHARACTER_TOKEN]: Zn,
    [$.COMMENT_TOKEN]: pn,
    [$.DOCTYPE_TOKEN]: ut,
    [$.START_TAG_TOKEN]: c7,
    [$.END_TAG_TOKEN]: f7,
    [$.EOF_TOKEN]: Qr
  },
  [Sb]: {
    [$.CHARACTER_TOKEN]: Zn,
    [$.NULL_CHARACTER_TOKEN]: ut,
    [$.WHITESPACE_CHARACTER_TOKEN]: Zn,
    [$.COMMENT_TOKEN]: pn,
    [$.DOCTYPE_TOKEN]: ut,
    [$.START_TAG_TOKEN]: vX,
    [$.END_TAG_TOKEN]: bX,
    [$.EOF_TOKEN]: Qr
  },
  [U1]: {
    [$.CHARACTER_TOKEN]: Ud,
    [$.NULL_CHARACTER_TOKEN]: ut,
    [$.WHITESPACE_CHARACTER_TOKEN]: Ds,
    [$.COMMENT_TOKEN]: pn,
    [$.DOCTYPE_TOKEN]: ut,
    [$.START_TAG_TOKEN]: kX,
    [$.END_TAG_TOKEN]: wX,
    [$.EOF_TOKEN]: d7
  },
  [xb]: {
    [$.CHARACTER_TOKEN]: W1,
    [$.NULL_CHARACTER_TOKEN]: W1,
    [$.WHITESPACE_CHARACTER_TOKEN]: Ds,
    [$.COMMENT_TOKEN]: fJ,
    [$.DOCTYPE_TOKEN]: ut,
    [$.START_TAG_TOKEN]: _X,
    [$.END_TAG_TOKEN]: EX,
    [$.EOF_TOKEN]: mc
  },
  [mp]: {
    [$.CHARACTER_TOKEN]: ut,
    [$.NULL_CHARACTER_TOKEN]: ut,
    [$.WHITESPACE_CHARACTER_TOKEN]: Zn,
    [$.COMMENT_TOKEN]: pn,
    [$.DOCTYPE_TOKEN]: ut,
    [$.START_TAG_TOKEN]: TX,
    [$.END_TAG_TOKEN]: CX,
    [$.EOF_TOKEN]: mc
  },
  [s7]: {
    [$.CHARACTER_TOKEN]: ut,
    [$.NULL_CHARACTER_TOKEN]: ut,
    [$.WHITESPACE_CHARACTER_TOKEN]: Zn,
    [$.COMMENT_TOKEN]: pn,
    [$.DOCTYPE_TOKEN]: ut,
    [$.START_TAG_TOKEN]: SX,
    [$.END_TAG_TOKEN]: xX,
    [$.EOF_TOKEN]: mc
  },
  [a7]: {
    [$.CHARACTER_TOKEN]: mu,
    [$.NULL_CHARACTER_TOKEN]: mu,
    [$.WHITESPACE_CHARACTER_TOKEN]: Ds,
    [$.COMMENT_TOKEN]: U4,
    [$.DOCTYPE_TOKEN]: ut,
    [$.START_TAG_TOKEN]: AX,
    [$.END_TAG_TOKEN]: mu,
    [$.EOF_TOKEN]: mc
  },
  [l7]: {
    [$.CHARACTER_TOKEN]: ut,
    [$.NULL_CHARACTER_TOKEN]: ut,
    [$.WHITESPACE_CHARACTER_TOKEN]: Ds,
    [$.COMMENT_TOKEN]: U4,
    [$.DOCTYPE_TOKEN]: ut,
    [$.START_TAG_TOKEN]: MX,
    [$.END_TAG_TOKEN]: ut,
    [$.EOF_TOKEN]: mc
  }
};
class nJ {
  constructor(e) {
    this.options = YY(XY, e), this.treeAdapter = this.options.treeAdapter, this.pendingScript = null, this.options.sourceCodeLocationInfo && $4.install(this, qY), this.options.onParseError && $4.install(this, GY, { onParseError: this.options.onParseError });
  }
  // API
  parse(e) {
    const n = this.treeAdapter.createDocument();
    return this._bootstrap(n, null), this.tokenizer.write(e, !0), this._runParsingLoop(null), n;
  }
  parseFragment(e, n) {
    n || (n = this.treeAdapter.createElement(w.TEMPLATE, Ae.HTML, []));
    const i = this.treeAdapter.createElement("documentmock", Ae.HTML, []);
    this._bootstrap(i, n), this.treeAdapter.getTagName(n) === w.TEMPLATE && this._pushTmplInsertionMode(U1), this._initTokenizerForFragmentParsing(), this._insertFakeRootElement(), this._resetInsertionMode(), this._findFormInFragmentContext(), this.tokenizer.write(e, !0), this._runParsingLoop(null);
    const r = this.treeAdapter.getFirstChild(i), o = this.treeAdapter.createDocumentFragment();
    return this._adoptNodes(r, o), o;
  }
  //Bootstrap parser
  _bootstrap(e, n) {
    this.tokenizer = new $(this.options), this.stopped = !1, this.insertionMode = i7, this.originalInsertionMode = "", this.document = e, this.fragmentContext = n, this.headElement = null, this.formElement = null, this.openElements = new WY(this.document, this.treeAdapter), this.activeFormattingElements = new H4(this.treeAdapter), this.tmplInsertionModeStack = [], this.tmplInsertionModeStackTop = -1, this.currentTmplInsertionMode = null, this.pendingCharacterTokens = [], this.hasNonWhitespacePendingCharacterToken = !1, this.framesetOk = !0, this.skipNextNewLine = !1, this.fosterParentingEnabled = !1;
  }
  //Errors
  _err() {
  }
  //Parsing loop
  _runParsingLoop(e) {
    for (; !this.stopped; ) {
      this._setupTokenizerCDATAMode();
      const n = this.tokenizer.getNextToken();
      if (n.type === $.HIBERNATION_TOKEN)
        break;
      if (this.skipNextNewLine && (this.skipNextNewLine = !1, n.type === $.WHITESPACE_CHARACTER_TOKEN && n.chars[0] === `
`)) {
        if (n.chars.length === 1)
          continue;
        n.chars = n.chars.substr(1);
      }
      if (this._processInputToken(n), e && this.pendingScript)
        break;
    }
  }
  runParsingLoopForCurrentChunk(e, n) {
    if (this._runParsingLoop(n), n && this.pendingScript) {
      const i = this.pendingScript;
      this.pendingScript = null, n(i);
      return;
    }
    e && e();
  }
  //Text parsing
  _setupTokenizerCDATAMode() {
    const e = this._getAdjustedCurrentElement();
    this.tokenizer.allowCDATA = e && e !== this.document && this.treeAdapter.getNamespaceURI(e) !== Ae.HTML && !this._isIntegrationPoint(e);
  }
  _switchToTextParsing(e, n) {
    this._insertElement(e, Ae.HTML), this.tokenizer.state = n, this.originalInsertionMode = this.insertionMode, this.insertionMode = z1;
  }
  switchToPlaintextParsing() {
    this.insertionMode = z1, this.originalInsertionMode = Nr, this.tokenizer.state = $.MODE.PLAINTEXT;
  }
  //Fragment parsing
  _getAdjustedCurrentElement() {
    return this.openElements.stackTop === 0 && this.fragmentContext ? this.fragmentContext : this.openElements.current;
  }
  _findFormInFragmentContext() {
    let e = this.fragmentContext;
    do {
      if (this.treeAdapter.getTagName(e) === w.FORM) {
        this.formElement = e;
        break;
      }
      e = this.treeAdapter.getParentNode(e);
    } while (e);
  }
  _initTokenizerForFragmentParsing() {
    if (this.treeAdapter.getNamespaceURI(this.fragmentContext) === Ae.HTML) {
      const e = this.treeAdapter.getTagName(this.fragmentContext);
      e === w.TITLE || e === w.TEXTAREA ? this.tokenizer.state = $.MODE.RCDATA : e === w.STYLE || e === w.XMP || e === w.IFRAME || e === w.NOEMBED || e === w.NOFRAMES || e === w.NOSCRIPT ? this.tokenizer.state = $.MODE.RAWTEXT : e === w.SCRIPT ? this.tokenizer.state = $.MODE.SCRIPT_DATA : e === w.PLAINTEXT && (this.tokenizer.state = $.MODE.PLAINTEXT);
    }
  }
  //Tree mutation
  _setDocumentType(e) {
    const n = e.name || "", i = e.publicId || "", r = e.systemId || "";
    this.treeAdapter.setDocumentType(this.document, n, i, r);
  }
  _attachElementToTree(e) {
    if (this._shouldFosterParentOnInsertion())
      this._fosterParentElement(e);
    else {
      const n = this.openElements.currentTmplContent || this.openElements.current;
      this.treeAdapter.appendChild(n, e);
    }
  }
  _appendElement(e, n) {
    const i = this.treeAdapter.createElement(e.tagName, n, e.attrs);
    this._attachElementToTree(i);
  }
  _insertElement(e, n) {
    const i = this.treeAdapter.createElement(e.tagName, n, e.attrs);
    this._attachElementToTree(i), this.openElements.push(i);
  }
  _insertFakeElement(e) {
    const n = this.treeAdapter.createElement(e, Ae.HTML, []);
    this._attachElementToTree(n), this.openElements.push(n);
  }
  _insertTemplate(e) {
    const n = this.treeAdapter.createElement(e.tagName, Ae.HTML, e.attrs), i = this.treeAdapter.createDocumentFragment();
    this.treeAdapter.setTemplateContent(n, i), this._attachElementToTree(n), this.openElements.push(n);
  }
  _insertFakeRootElement() {
    const e = this.treeAdapter.createElement(w.HTML, Ae.HTML, []);
    this.treeAdapter.appendChild(this.openElements.current, e), this.openElements.push(e);
  }
  _appendCommentNode(e, n) {
    const i = this.treeAdapter.createCommentNode(e.data);
    this.treeAdapter.appendChild(n, i);
  }
  _insertCharacters(e) {
    if (this._shouldFosterParentOnInsertion())
      this._fosterParentText(e.chars);
    else {
      const n = this.openElements.currentTmplContent || this.openElements.current;
      this.treeAdapter.insertText(n, e.chars);
    }
  }
  _adoptNodes(e, n) {
    for (let i = this.treeAdapter.getFirstChild(e); i; i = this.treeAdapter.getFirstChild(e))
      this.treeAdapter.detachNode(i), this.treeAdapter.appendChild(n, i);
  }
  //Token processing
  _shouldProcessTokenInForeignContent(e) {
    const n = this._getAdjustedCurrentElement();
    if (!n || n === this.document)
      return !1;
    const i = this.treeAdapter.getNamespaceURI(n);
    if (i === Ae.HTML || this.treeAdapter.getTagName(n) === w.ANNOTATION_XML && i === Ae.MATHML && e.type === $.START_TAG_TOKEN && e.tagName === w.SVG)
      return !1;
    const r = e.type === $.CHARACTER_TOKEN || e.type === $.NULL_CHARACTER_TOKEN || e.type === $.WHITESPACE_CHARACTER_TOKEN;
    return (e.type === $.START_TAG_TOKEN && e.tagName !== w.MGLYPH && e.tagName !== w.MALIGNMARK || r) && this._isIntegrationPoint(n, Ae.MATHML) || (e.type === $.START_TAG_TOKEN || r) && this._isIntegrationPoint(n, Ae.HTML) ? !1 : e.type !== $.EOF_TOKEN;
  }
  _processToken(e) {
    z4[this.insertionMode][e.type](this, e);
  }
  _processTokenInBodyMode(e) {
    z4[Nr][e.type](this, e);
  }
  _processTokenInForeignContent(e) {
    e.type === $.CHARACTER_TOKEN ? OX(this, e) : e.type === $.NULL_CHARACTER_TOKEN ? NX(this, e) : e.type === $.WHITESPACE_CHARACTER_TOKEN ? Zn(this, e) : e.type === $.COMMENT_TOKEN ? pn(this, e) : e.type === $.START_TAG_TOKEN ? RX(this, e) : e.type === $.END_TAG_TOKEN && IX(this, e);
  }
  _processInputToken(e) {
    this._shouldProcessTokenInForeignContent(e) ? this._processTokenInForeignContent(e) : this._processToken(e), e.type === $.START_TAG_TOKEN && e.selfClosing && !e.ackSelfClosing && this._err(Ln.nonVoidHtmlElementStartTagWithTrailingSolidus);
  }
  //Integration points
  _isIntegrationPoint(e, n) {
    const i = this.treeAdapter.getTagName(e), r = this.treeAdapter.getNamespaceURI(e), o = this.treeAdapter.getAttrList(e);
    return Tr.isIntegrationPoint(i, r, o, n);
  }
  //Active formatting elements reconstruction
  _reconstructActiveFormattingElements() {
    const e = this.activeFormattingElements.length;
    if (e) {
      let n = e, i = null;
      do
        if (n--, i = this.activeFormattingElements.entries[n], i.type === H4.MARKER_ENTRY || this.openElements.contains(i.element)) {
          n++;
          break;
        }
      while (n > 0);
      for (let r = n; r < e; r++)
        i = this.activeFormattingElements.entries[r], this._insertElement(i.token, this.treeAdapter.getNamespaceURI(i.element)), i.element = this.openElements.current;
    }
  }
  //Close elements
  _closeTableCell() {
    this.openElements.generateImpliedEndTags(), this.openElements.popUntilTableCellPopped(), this.activeFormattingElements.clearToLastMarker(), this.insertionMode = _o;
  }
  _closePElement() {
    this.openElements.generateImpliedEndTagsWithExclusion(w.P), this.openElements.popUntilTagNamePopped(w.P);
  }
  //Insertion modes
  _resetInsertionMode() {
    for (let e = this.openElements.stackTop, n = !1; e >= 0; e--) {
      let i = this.openElements.items[e];
      e === 0 && (n = !0, this.fragmentContext && (i = this.fragmentContext));
      const r = this.treeAdapter.getTagName(i), o = eJ[r];
      if (o) {
        this.insertionMode = o;
        break;
      } else if (!n && (r === w.TD || r === w.TH)) {
        this.insertionMode = pp;
        break;
      } else if (!n && r === w.HEAD) {
        this.insertionMode = Ul;
        break;
      } else if (r === w.SELECT) {
        this._resetInsertionModeForSelect(e);
        break;
      } else if (r === w.TEMPLATE) {
        this.insertionMode = this.currentTmplInsertionMode;
        break;
      } else if (r === w.HTML) {
        this.insertionMode = this.headElement ? up : dp;
        break;
      } else if (n) {
        this.insertionMode = Nr;
        break;
      }
    }
  }
  _resetInsertionModeForSelect(e) {
    if (e > 0)
      for (let n = e - 1; n > 0; n--) {
        const i = this.openElements.items[n], r = this.treeAdapter.getTagName(i);
        if (r === w.TEMPLATE)
          break;
        if (r === w.TABLE) {
          this.insertionMode = Sb;
          return;
        }
      }
    this.insertionMode = Cb;
  }
  _pushTmplInsertionMode(e) {
    this.tmplInsertionModeStack.push(e), this.tmplInsertionModeStackTop++, this.currentTmplInsertionMode = e;
  }
  _popTmplInsertionMode() {
    this.tmplInsertionModeStack.pop(), this.tmplInsertionModeStackTop--, this.currentTmplInsertionMode = this.tmplInsertionModeStack[this.tmplInsertionModeStackTop];
  }
  //Foster parenting
  _isElementCausesFosterParenting(e) {
    const n = this.treeAdapter.getTagName(e);
    return n === w.TABLE || n === w.TBODY || n === w.TFOOT || n === w.THEAD || n === w.TR;
  }
  _shouldFosterParentOnInsertion() {
    return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.current);
  }
  _findFosterParentingLocation() {
    const e = {
      parent: null,
      beforeElement: null
    };
    for (let n = this.openElements.stackTop; n >= 0; n--) {
      const i = this.openElements.items[n], r = this.treeAdapter.getTagName(i), o = this.treeAdapter.getNamespaceURI(i);
      if (r === w.TEMPLATE && o === Ae.HTML) {
        e.parent = this.treeAdapter.getTemplateContent(i);
        break;
      } else if (r === w.TABLE) {
        e.parent = this.treeAdapter.getParentNode(i), e.parent ? e.beforeElement = i : e.parent = this.openElements.items[n - 1];
        break;
      }
    }
    return e.parent || (e.parent = this.openElements.items[0]), e;
  }
  _fosterParentElement(e) {
    const n = this._findFosterParentingLocation();
    n.beforeElement ? this.treeAdapter.insertBefore(n.parent, e, n.beforeElement) : this.treeAdapter.appendChild(n.parent, e);
  }
  _fosterParentText(e) {
    const n = this._findFosterParentingLocation();
    n.beforeElement ? this.treeAdapter.insertTextBefore(n.parent, e, n.beforeElement) : this.treeAdapter.insertText(n.parent, e);
  }
  //Special elements
  _isSpecialElement(e) {
    const n = this.treeAdapter.getTagName(e), i = this.treeAdapter.getNamespaceURI(e);
    return Ta.SPECIAL_ELEMENTS[i][n];
  }
}
var iJ = nJ;
function rJ(t, e) {
  let n = t.activeFormattingElements.getElementEntryInScopeWithTagName(e.tagName);
  return n ? t.openElements.contains(n.element) ? t.openElements.hasInScope(e.tagName) || (n = null) : (t.activeFormattingElements.removeEntry(n), n = null) : Yi(t, e), n;
}
function oJ(t, e) {
  let n = null;
  for (let i = t.openElements.stackTop; i >= 0; i--) {
    const r = t.openElements.items[i];
    if (r === e.element)
      break;
    t._isSpecialElement(r) && (n = r);
  }
  return n || (t.openElements.popUntilElementPopped(e.element), t.activeFormattingElements.removeEntry(e)), n;
}
function sJ(t, e, n) {
  let i = e, r = t.openElements.getCommonAncestor(e);
  for (let o = 0, s = r; s !== n; o++, s = r) {
    r = t.openElements.getCommonAncestor(s);
    const a = t.activeFormattingElements.getElementEntry(s), l = a && o >= ZY;
    !a || l ? (l && t.activeFormattingElements.removeEntry(a), t.openElements.remove(s)) : (s = aJ(t, a), i === e && (t.activeFormattingElements.bookmark = a), t.treeAdapter.detachNode(i), t.treeAdapter.appendChild(s, i), i = s);
  }
  return i;
}
function aJ(t, e) {
  const n = t.treeAdapter.getNamespaceURI(e.element), i = t.treeAdapter.createElement(e.token.tagName, n, e.token.attrs);
  return t.openElements.replace(e.element, i), e.element = i, i;
}
function lJ(t, e, n) {
  if (t._isElementCausesFosterParenting(e))
    t._fosterParentElement(n);
  else {
    const i = t.treeAdapter.getTagName(e), r = t.treeAdapter.getNamespaceURI(e);
    i === w.TEMPLATE && r === Ae.HTML && (e = t.treeAdapter.getTemplateContent(e)), t.treeAdapter.appendChild(e, n);
  }
}
function cJ(t, e, n) {
  const i = t.treeAdapter.getNamespaceURI(n.element), r = n.token, o = t.treeAdapter.createElement(r.tagName, i, r.attrs);
  t._adoptNodes(e, o), t.treeAdapter.appendChild(e, o), t.activeFormattingElements.insertElementAfterBookmark(o, n.token), t.activeFormattingElements.removeEntry(n), t.openElements.remove(n.element), t.openElements.insertAfter(e, o);
}
function Jo(t, e) {
  let n;
  for (let i = 0; i < QY && (n = rJ(t, e), !!n); i++) {
    const r = oJ(t, n);
    if (!r)
      break;
    t.activeFormattingElements.bookmark = n;
    const o = sJ(t, r, n.element), s = t.openElements.getCommonAncestor(n.element);
    t.treeAdapter.detachNode(o), lJ(t, s, o), cJ(t, r, n);
  }
}
function ut() {
}
function zd(t) {
  t._err(Ln.misplacedDoctype);
}
function pn(t, e) {
  t._appendCommentNode(e, t.openElements.currentTmplContent || t.openElements.current);
}
function fJ(t, e) {
  t._appendCommentNode(e, t.openElements.items[0]);
}
function U4(t, e) {
  t._appendCommentNode(e, t.document);
}
function Zn(t, e) {
  t._insertCharacters(e);
}
function mc(t) {
  t.stopped = !0;
}
function dJ(t, e) {
  t._setDocumentType(e);
  const n = e.forceQuirks ? Ta.DOCUMENT_MODE.QUIRKS : j4.getDocumentMode(e);
  j4.isConforming(e) || t._err(Ln.nonConformingDoctype), t.treeAdapter.setDocumentMode(t.document, n), t.insertionMode = Tb;
}
function gc(t, e) {
  t._err(Ln.missingDoctype, { beforeToken: !0 }), t.treeAdapter.setDocumentMode(t.document, Ta.DOCUMENT_MODE.QUIRKS), t.insertionMode = Tb, t._processToken(e);
}
function uJ(t, e) {
  e.tagName === w.HTML ? (t._insertElement(e, Ae.HTML), t.insertionMode = dp) : Bc(t, e);
}
function hJ(t, e) {
  const n = e.tagName;
  (n === w.HTML || n === w.HEAD || n === w.BODY || n === w.BR) && Bc(t, e);
}
function Bc(t, e) {
  t._insertFakeRootElement(), t.insertionMode = dp, t._processToken(e);
}
function pJ(t, e) {
  const n = e.tagName;
  n === w.HTML ? ai(t, e) : n === w.HEAD ? (t._insertElement(e, Ae.HTML), t.headElement = t.openElements.current, t.insertionMode = Ul) : Hc(t, e);
}
function mJ(t, e) {
  const n = e.tagName;
  n === w.HEAD || n === w.BODY || n === w.HTML || n === w.BR ? Hc(t, e) : t._err(Ln.endTagWithoutMatchingOpenElement);
}
function Hc(t, e) {
  t._insertFakeElement(w.HEAD), t.headElement = t.openElements.current, t.insertionMode = Ul, t._processToken(e);
}
function _n(t, e) {
  const n = e.tagName;
  n === w.HTML ? ai(t, e) : n === w.BASE || n === w.BASEFONT || n === w.BGSOUND || n === w.LINK || n === w.META ? (t._appendElement(e, Ae.HTML), e.ackSelfClosing = !0) : n === w.TITLE ? t._switchToTextParsing(e, $.MODE.RCDATA) : n === w.NOSCRIPT ? t.options.scriptingEnabled ? t._switchToTextParsing(e, $.MODE.RAWTEXT) : (t._insertElement(e, Ae.HTML), t.insertionMode = r7) : n === w.NOFRAMES || n === w.STYLE ? t._switchToTextParsing(e, $.MODE.RAWTEXT) : n === w.SCRIPT ? t._switchToTextParsing(e, $.MODE.SCRIPT_DATA) : n === w.TEMPLATE ? (t._insertTemplate(e, Ae.HTML), t.activeFormattingElements.insertMarker(), t.framesetOk = !1, t.insertionMode = U1, t._pushTmplInsertionMode(U1)) : n === w.HEAD ? t._err(Ln.misplacedStartTagForHeadElement) : $c(t, e);
}
function Ca(t, e) {
  const n = e.tagName;
  n === w.HEAD ? (t.openElements.pop(), t.insertionMode = up) : n === w.BODY || n === w.BR || n === w.HTML ? $c(t, e) : n === w.TEMPLATE && t.openElements.tmplCount > 0 ? (t.openElements.generateImpliedEndTagsThoroughly(), t.openElements.currentTagName !== w.TEMPLATE && t._err(Ln.closingOfElementWithOpenChildElements), t.openElements.popUntilTagNamePopped(w.TEMPLATE), t.activeFormattingElements.clearToLastMarker(), t._popTmplInsertionMode(), t._resetInsertionMode()) : t._err(Ln.endTagWithoutMatchingOpenElement);
}
function $c(t, e) {
  t.openElements.pop(), t.insertionMode = up, t._processToken(e);
}
function gJ(t, e) {
  const n = e.tagName;
  n === w.HTML ? ai(t, e) : n === w.BASEFONT || n === w.BGSOUND || n === w.HEAD || n === w.LINK || n === w.META || n === w.NOFRAMES || n === w.STYLE ? _n(t, e) : n === w.NOSCRIPT ? t._err(Ln.nestedNoscriptInHead) : jc(t, e);
}
function yJ(t, e) {
  const n = e.tagName;
  n === w.NOSCRIPT ? (t.openElements.pop(), t.insertionMode = Ul) : n === w.BR ? jc(t, e) : t._err(Ln.endTagWithoutMatchingOpenElement);
}
function jc(t, e) {
  const n = e.type === $.EOF_TOKEN ? Ln.openElementsLeftAfterEof : Ln.disallowedContentInNoscriptInHead;
  t._err(n), t.openElements.pop(), t.insertionMode = Ul, t._processToken(e);
}
function vJ(t, e) {
  const n = e.tagName;
  n === w.HTML ? ai(t, e) : n === w.BODY ? (t._insertElement(e, Ae.HTML), t.framesetOk = !1, t.insertionMode = Nr) : n === w.FRAMESET ? (t._insertElement(e, Ae.HTML), t.insertionMode = mp) : n === w.BASE || n === w.BASEFONT || n === w.BGSOUND || n === w.LINK || n === w.META || n === w.NOFRAMES || n === w.SCRIPT || n === w.STYLE || n === w.TEMPLATE || n === w.TITLE ? (t._err(Ln.abandonedHeadElementChild), t.openElements.push(t.headElement), _n(t, e), t.openElements.remove(t.headElement)) : n === w.HEAD ? t._err(Ln.misplacedStartTagForHeadElement) : zc(t, e);
}
function bJ(t, e) {
  const n = e.tagName;
  n === w.BODY || n === w.HTML || n === w.BR ? zc(t, e) : n === w.TEMPLATE ? Ca(t, e) : t._err(Ln.endTagWithoutMatchingOpenElement);
}
function zc(t, e) {
  t._insertFakeElement(w.BODY), t.insertionMode = Nr, t._processToken(e);
}
function Ds(t, e) {
  t._reconstructActiveFormattingElements(), t._insertCharacters(e);
}
function Ud(t, e) {
  t._reconstructActiveFormattingElements(), t._insertCharacters(e), t.framesetOk = !1;
}
function kJ(t, e) {
  t.openElements.tmplCount === 0 && t.treeAdapter.adoptAttributes(t.openElements.items[0], e.attrs);
}
function wJ(t, e) {
  const n = t.openElements.tryPeekProperlyNestedBodyElement();
  n && t.openElements.tmplCount === 0 && (t.framesetOk = !1, t.treeAdapter.adoptAttributes(n, e.attrs));
}
function _J(t, e) {
  const n = t.openElements.tryPeekProperlyNestedBodyElement();
  t.framesetOk && n && (t.treeAdapter.detachNode(n), t.openElements.popAllUpToHtmlElement(), t._insertElement(e, Ae.HTML), t.insertionMode = mp);
}
function Xr(t, e) {
  t.openElements.hasInButtonScope(w.P) && t._closePElement(), t._insertElement(e, Ae.HTML);
}
function EJ(t, e) {
  t.openElements.hasInButtonScope(w.P) && t._closePElement();
  const n = t.openElements.currentTagName;
  (n === w.H1 || n === w.H2 || n === w.H3 || n === w.H4 || n === w.H5 || n === w.H6) && t.openElements.pop(), t._insertElement(e, Ae.HTML);
}
function V4(t, e) {
  t.openElements.hasInButtonScope(w.P) && t._closePElement(), t._insertElement(e, Ae.HTML), t.skipNextNewLine = !0, t.framesetOk = !1;
}
function TJ(t, e) {
  const n = t.openElements.tmplCount > 0;
  (!t.formElement || n) && (t.openElements.hasInButtonScope(w.P) && t._closePElement(), t._insertElement(e, Ae.HTML), n || (t.formElement = t.openElements.current));
}
function CJ(t, e) {
  t.framesetOk = !1;
  const n = e.tagName;
  for (let i = t.openElements.stackTop; i >= 0; i--) {
    const r = t.openElements.items[i], o = t.treeAdapter.getTagName(r);
    let s = null;
    if (n === w.LI && o === w.LI ? s = w.LI : (n === w.DD || n === w.DT) && (o === w.DD || o === w.DT) && (s = o), s) {
      t.openElements.generateImpliedEndTagsWithExclusion(s), t.openElements.popUntilTagNamePopped(s);
      break;
    }
    if (o !== w.ADDRESS && o !== w.DIV && o !== w.P && t._isSpecialElement(r))
      break;
  }
  t.openElements.hasInButtonScope(w.P) && t._closePElement(), t._insertElement(e, Ae.HTML);
}
function SJ(t, e) {
  t.openElements.hasInButtonScope(w.P) && t._closePElement(), t._insertElement(e, Ae.HTML), t.tokenizer.state = $.MODE.PLAINTEXT;
}
function xJ(t, e) {
  t.openElements.hasInScope(w.BUTTON) && (t.openElements.generateImpliedEndTags(), t.openElements.popUntilTagNamePopped(w.BUTTON)), t._reconstructActiveFormattingElements(), t._insertElement(e, Ae.HTML), t.framesetOk = !1;
}
function AJ(t, e) {
  const n = t.activeFormattingElements.getElementEntryInScopeWithTagName(w.A);
  n && (Jo(t, e), t.openElements.remove(n.element), t.activeFormattingElements.removeEntry(n)), t._reconstructActiveFormattingElements(), t._insertElement(e, Ae.HTML), t.activeFormattingElements.pushElement(t.openElements.current, e);
}
function Pa(t, e) {
  t._reconstructActiveFormattingElements(), t._insertElement(e, Ae.HTML), t.activeFormattingElements.pushElement(t.openElements.current, e);
}
function MJ(t, e) {
  t._reconstructActiveFormattingElements(), t.openElements.hasInScope(w.NOBR) && (Jo(t, e), t._reconstructActiveFormattingElements()), t._insertElement(e, Ae.HTML), t.activeFormattingElements.pushElement(t.openElements.current, e);
}
function W4(t, e) {
  t._reconstructActiveFormattingElements(), t._insertElement(e, Ae.HTML), t.activeFormattingElements.insertMarker(), t.framesetOk = !1;
}
function NJ(t, e) {
  t.treeAdapter.getDocumentMode(t.document) !== Ta.DOCUMENT_MODE.QUIRKS && t.openElements.hasInButtonScope(w.P) && t._closePElement(), t._insertElement(e, Ae.HTML), t.framesetOk = !1, t.insertionMode = Bn;
}
function Va(t, e) {
  t._reconstructActiveFormattingElements(), t._appendElement(e, Ae.HTML), t.framesetOk = !1, e.ackSelfClosing = !0;
}
function OJ(t, e) {
  t._reconstructActiveFormattingElements(), t._appendElement(e, Ae.HTML);
  const n = $.getTokenAttr(e, t7.TYPE);
  (!n || n.toLowerCase() !== n7) && (t.framesetOk = !1), e.ackSelfClosing = !0;
}
function q4(t, e) {
  t._appendElement(e, Ae.HTML), e.ackSelfClosing = !0;
}
function RJ(t, e) {
  t.openElements.hasInButtonScope(w.P) && t._closePElement(), t._appendElement(e, Ae.HTML), t.framesetOk = !1, e.ackSelfClosing = !0;
}
function IJ(t, e) {
  e.tagName = w.IMG, Va(t, e);
}
function LJ(t, e) {
  t._insertElement(e, Ae.HTML), t.skipNextNewLine = !0, t.tokenizer.state = $.MODE.RCDATA, t.originalInsertionMode = t.insertionMode, t.framesetOk = !1, t.insertionMode = z1;
}
function DJ(t, e) {
  t.openElements.hasInButtonScope(w.P) && t._closePElement(), t._reconstructActiveFormattingElements(), t.framesetOk = !1, t._switchToTextParsing(e, $.MODE.RAWTEXT);
}
function PJ(t, e) {
  t.framesetOk = !1, t._switchToTextParsing(e, $.MODE.RAWTEXT);
}
function G4(t, e) {
  t._switchToTextParsing(e, $.MODE.RAWTEXT);
}
function FJ(t, e) {
  t._reconstructActiveFormattingElements(), t._insertElement(e, Ae.HTML), t.framesetOk = !1, t.insertionMode === Bn || t.insertionMode === hp || t.insertionMode === Di || t.insertionMode === _o || t.insertionMode === pp ? t.insertionMode = Sb : t.insertionMode = Cb;
}
function K4(t, e) {
  t.openElements.currentTagName === w.OPTION && t.openElements.pop(), t._reconstructActiveFormattingElements(), t._insertElement(e, Ae.HTML);
}
function Y4(t, e) {
  t.openElements.hasInScope(w.RUBY) && t.openElements.generateImpliedEndTags(), t._insertElement(e, Ae.HTML);
}
function BJ(t, e) {
  t.openElements.hasInScope(w.RUBY) && t.openElements.generateImpliedEndTagsWithExclusion(w.RTC), t._insertElement(e, Ae.HTML);
}
function HJ(t, e) {
  t.openElements.hasInButtonScope(w.P) && t._closePElement(), t._insertElement(e, Ae.HTML);
}
function $J(t, e) {
  t._reconstructActiveFormattingElements(), Tr.adjustTokenMathMLAttrs(e), Tr.adjustTokenXMLAttrs(e), e.selfClosing ? t._appendElement(e, Ae.MATHML) : t._insertElement(e, Ae.MATHML), e.ackSelfClosing = !0;
}
function jJ(t, e) {
  t._reconstructActiveFormattingElements(), Tr.adjustTokenSVGAttrs(e), Tr.adjustTokenXMLAttrs(e), e.selfClosing ? t._appendElement(e, Ae.SVG) : t._insertElement(e, Ae.SVG), e.ackSelfClosing = !0;
}
function _i(t, e) {
  t._reconstructActiveFormattingElements(), t._insertElement(e, Ae.HTML);
}
function ai(t, e) {
  const n = e.tagName;
  switch (n.length) {
    case 1:
      n === w.I || n === w.S || n === w.B || n === w.U ? Pa(t, e) : n === w.P ? Xr(t, e) : n === w.A ? AJ(t, e) : _i(t, e);
      break;
    case 2:
      n === w.DL || n === w.OL || n === w.UL ? Xr(t, e) : n === w.H1 || n === w.H2 || n === w.H3 || n === w.H4 || n === w.H5 || n === w.H6 ? EJ(t, e) : n === w.LI || n === w.DD || n === w.DT ? CJ(t, e) : n === w.EM || n === w.TT ? Pa(t, e) : n === w.BR ? Va(t, e) : n === w.HR ? RJ(t, e) : n === w.RB ? Y4(t, e) : n === w.RT || n === w.RP ? BJ(t, e) : n !== w.TH && n !== w.TD && n !== w.TR && _i(t, e);
      break;
    case 3:
      n === w.DIV || n === w.DIR || n === w.NAV ? Xr(t, e) : n === w.PRE ? V4(t, e) : n === w.BIG ? Pa(t, e) : n === w.IMG || n === w.WBR ? Va(t, e) : n === w.XMP ? DJ(t, e) : n === w.SVG ? jJ(t, e) : n === w.RTC ? Y4(t, e) : n !== w.COL && _i(t, e);
      break;
    case 4:
      n === w.HTML ? kJ(t, e) : n === w.BASE || n === w.LINK || n === w.META ? _n(t, e) : n === w.BODY ? wJ(t, e) : n === w.MAIN || n === w.MENU ? Xr(t, e) : n === w.FORM ? TJ(t, e) : n === w.CODE || n === w.FONT ? Pa(t, e) : n === w.NOBR ? MJ(t, e) : n === w.AREA ? Va(t, e) : n === w.MATH ? $J(t, e) : n === w.MENU ? HJ(t, e) : n !== w.HEAD && _i(t, e);
      break;
    case 5:
      n === w.STYLE || n === w.TITLE ? _n(t, e) : n === w.ASIDE ? Xr(t, e) : n === w.SMALL ? Pa(t, e) : n === w.TABLE ? NJ(t, e) : n === w.EMBED ? Va(t, e) : n === w.INPUT ? OJ(t, e) : n === w.PARAM || n === w.TRACK ? q4(t, e) : n === w.IMAGE ? IJ(t, e) : n !== w.FRAME && n !== w.TBODY && n !== w.TFOOT && n !== w.THEAD && _i(t, e);
      break;
    case 6:
      n === w.SCRIPT ? _n(t, e) : n === w.CENTER || n === w.FIGURE || n === w.FOOTER || n === w.HEADER || n === w.HGROUP || n === w.DIALOG ? Xr(t, e) : n === w.BUTTON ? xJ(t, e) : n === w.STRIKE || n === w.STRONG ? Pa(t, e) : n === w.APPLET || n === w.OBJECT ? W4(t, e) : n === w.KEYGEN ? Va(t, e) : n === w.SOURCE ? q4(t, e) : n === w.IFRAME ? PJ(t, e) : n === w.SELECT ? FJ(t, e) : n === w.OPTION ? K4(t, e) : _i(t, e);
      break;
    case 7:
      n === w.BGSOUND ? _n(t, e) : n === w.DETAILS || n === w.ADDRESS || n === w.ARTICLE || n === w.SECTION || n === w.SUMMARY ? Xr(t, e) : n === w.LISTING ? V4(t, e) : n === w.MARQUEE ? W4(t, e) : n === w.NOEMBED ? G4(t, e) : n !== w.CAPTION && _i(t, e);
      break;
    case 8:
      n === w.BASEFONT ? _n(t, e) : n === w.FRAMESET ? _J(t, e) : n === w.FIELDSET ? Xr(t, e) : n === w.TEXTAREA ? LJ(t, e) : n === w.TEMPLATE ? _n(t, e) : n === w.NOSCRIPT ? t.options.scriptingEnabled ? G4(t, e) : _i(t, e) : n === w.OPTGROUP ? K4(t, e) : n !== w.COLGROUP && _i(t, e);
      break;
    case 9:
      n === w.PLAINTEXT ? SJ(t, e) : _i(t, e);
      break;
    case 10:
      n === w.BLOCKQUOTE || n === w.FIGCAPTION ? Xr(t, e) : _i(t, e);
      break;
    default:
      _i(t, e);
  }
}
function zJ(t) {
  t.openElements.hasInScope(w.BODY) && (t.insertionMode = xb);
}
function UJ(t, e) {
  t.openElements.hasInScope(w.BODY) && (t.insertionMode = xb, t._processToken(e));
}
function jo(t, e) {
  const n = e.tagName;
  t.openElements.hasInScope(n) && (t.openElements.generateImpliedEndTags(), t.openElements.popUntilTagNamePopped(n));
}
function VJ(t) {
  const e = t.openElements.tmplCount > 0, n = t.formElement;
  e || (t.formElement = null), (n || e) && t.openElements.hasInScope(w.FORM) && (t.openElements.generateImpliedEndTags(), e ? t.openElements.popUntilTagNamePopped(w.FORM) : t.openElements.remove(n));
}
function WJ(t) {
  t.openElements.hasInButtonScope(w.P) || t._insertFakeElement(w.P), t._closePElement();
}
function qJ(t) {
  t.openElements.hasInListItemScope(w.LI) && (t.openElements.generateImpliedEndTagsWithExclusion(w.LI), t.openElements.popUntilTagNamePopped(w.LI));
}
function GJ(t, e) {
  const n = e.tagName;
  t.openElements.hasInScope(n) && (t.openElements.generateImpliedEndTagsWithExclusion(n), t.openElements.popUntilTagNamePopped(n));
}
function KJ(t) {
  t.openElements.hasNumberedHeaderInScope() && (t.openElements.generateImpliedEndTags(), t.openElements.popUntilNumberedHeaderPopped());
}
function J4(t, e) {
  const n = e.tagName;
  t.openElements.hasInScope(n) && (t.openElements.generateImpliedEndTags(), t.openElements.popUntilTagNamePopped(n), t.activeFormattingElements.clearToLastMarker());
}
function YJ(t) {
  t._reconstructActiveFormattingElements(), t._insertFakeElement(w.BR), t.openElements.pop(), t.framesetOk = !1;
}
function Yi(t, e) {
  const n = e.tagName;
  for (let i = t.openElements.stackTop; i > 0; i--) {
    const r = t.openElements.items[i];
    if (t.treeAdapter.getTagName(r) === n) {
      t.openElements.generateImpliedEndTagsWithExclusion(n), t.openElements.popUntilElementPopped(r);
      break;
    }
    if (t._isSpecialElement(r))
      break;
  }
}
function Ab(t, e) {
  const n = e.tagName;
  switch (n.length) {
    case 1:
      n === w.A || n === w.B || n === w.I || n === w.S || n === w.U ? Jo(t, e) : n === w.P ? WJ(t) : Yi(t, e);
      break;
    case 2:
      n === w.DL || n === w.UL || n === w.OL ? jo(t, e) : n === w.LI ? qJ(t) : n === w.DD || n === w.DT ? GJ(t, e) : n === w.H1 || n === w.H2 || n === w.H3 || n === w.H4 || n === w.H5 || n === w.H6 ? KJ(t) : n === w.BR ? YJ(t) : n === w.EM || n === w.TT ? Jo(t, e) : Yi(t, e);
      break;
    case 3:
      n === w.BIG ? Jo(t, e) : n === w.DIR || n === w.DIV || n === w.NAV || n === w.PRE ? jo(t, e) : Yi(t, e);
      break;
    case 4:
      n === w.BODY ? zJ(t) : n === w.HTML ? UJ(t, e) : n === w.FORM ? VJ(t) : n === w.CODE || n === w.FONT || n === w.NOBR ? Jo(t, e) : n === w.MAIN || n === w.MENU ? jo(t, e) : Yi(t, e);
      break;
    case 5:
      n === w.ASIDE ? jo(t, e) : n === w.SMALL ? Jo(t, e) : Yi(t, e);
      break;
    case 6:
      n === w.CENTER || n === w.FIGURE || n === w.FOOTER || n === w.HEADER || n === w.HGROUP || n === w.DIALOG ? jo(t, e) : n === w.APPLET || n === w.OBJECT ? J4(t, e) : n === w.STRIKE || n === w.STRONG ? Jo(t, e) : Yi(t, e);
      break;
    case 7:
      n === w.ADDRESS || n === w.ARTICLE || n === w.DETAILS || n === w.SECTION || n === w.SUMMARY || n === w.LISTING ? jo(t, e) : n === w.MARQUEE ? J4(t, e) : Yi(t, e);
      break;
    case 8:
      n === w.FIELDSET ? jo(t, e) : n === w.TEMPLATE ? Ca(t, e) : Yi(t, e);
      break;
    case 10:
      n === w.BLOCKQUOTE || n === w.FIGCAPTION ? jo(t, e) : Yi(t, e);
      break;
    default:
      Yi(t, e);
  }
}
function Qr(t, e) {
  t.tmplInsertionModeStackTop > -1 ? d7(t, e) : t.stopped = !0;
}
function JJ(t, e) {
  e.tagName === w.SCRIPT && (t.pendingScript = t.openElements.current), t.openElements.pop(), t.insertionMode = t.originalInsertionMode;
}
function XJ(t, e) {
  t._err(Ln.eofInElementThatCanContainOnlyText), t.openElements.pop(), t.insertionMode = t.originalInsertionMode, t._processToken(e);
}
function Zr(t, e) {
  const n = t.openElements.currentTagName;
  n === w.TABLE || n === w.TBODY || n === w.TFOOT || n === w.THEAD || n === w.TR ? (t.pendingCharacterTokens = [], t.hasNonWhitespacePendingCharacterToken = !1, t.originalInsertionMode = t.insertionMode, t.insertionMode = o7, t._processToken(e)) : Ci(t, e);
}
function QJ(t, e) {
  t.openElements.clearBackToTableContext(), t.activeFormattingElements.insertMarker(), t._insertElement(e, Ae.HTML), t.insertionMode = hp;
}
function ZJ(t, e) {
  t.openElements.clearBackToTableContext(), t._insertElement(e, Ae.HTML), t.insertionMode = Vf;
}
function eX(t, e) {
  t.openElements.clearBackToTableContext(), t._insertFakeElement(w.COLGROUP), t.insertionMode = Vf, t._processToken(e);
}
function tX(t, e) {
  t.openElements.clearBackToTableContext(), t._insertElement(e, Ae.HTML), t.insertionMode = Di;
}
function nX(t, e) {
  t.openElements.clearBackToTableContext(), t._insertFakeElement(w.TBODY), t.insertionMode = Di, t._processToken(e);
}
function iX(t, e) {
  t.openElements.hasInTableScope(w.TABLE) && (t.openElements.popUntilTagNamePopped(w.TABLE), t._resetInsertionMode(), t._processToken(e));
}
function rX(t, e) {
  const n = $.getTokenAttr(e, t7.TYPE);
  n && n.toLowerCase() === n7 ? t._appendElement(e, Ae.HTML) : Ci(t, e), e.ackSelfClosing = !0;
}
function oX(t, e) {
  !t.formElement && t.openElements.tmplCount === 0 && (t._insertElement(e, Ae.HTML), t.formElement = t.openElements.current, t.openElements.pop());
}
function Mb(t, e) {
  const n = e.tagName;
  switch (n.length) {
    case 2:
      n === w.TD || n === w.TH || n === w.TR ? nX(t, e) : Ci(t, e);
      break;
    case 3:
      n === w.COL ? eX(t, e) : Ci(t, e);
      break;
    case 4:
      n === w.FORM ? oX(t, e) : Ci(t, e);
      break;
    case 5:
      n === w.TABLE ? iX(t, e) : n === w.STYLE ? _n(t, e) : n === w.TBODY || n === w.TFOOT || n === w.THEAD ? tX(t, e) : n === w.INPUT ? rX(t, e) : Ci(t, e);
      break;
    case 6:
      n === w.SCRIPT ? _n(t, e) : Ci(t, e);
      break;
    case 7:
      n === w.CAPTION ? QJ(t, e) : Ci(t, e);
      break;
    case 8:
      n === w.COLGROUP ? ZJ(t, e) : n === w.TEMPLATE ? _n(t, e) : Ci(t, e);
      break;
    default:
      Ci(t, e);
  }
}
function Nb(t, e) {
  const n = e.tagName;
  n === w.TABLE ? t.openElements.hasInTableScope(w.TABLE) && (t.openElements.popUntilTagNamePopped(w.TABLE), t._resetInsertionMode()) : n === w.TEMPLATE ? Ca(t, e) : n !== w.BODY && n !== w.CAPTION && n !== w.COL && n !== w.COLGROUP && n !== w.HTML && n !== w.TBODY && n !== w.TD && n !== w.TFOOT && n !== w.TH && n !== w.THEAD && n !== w.TR && Ci(t, e);
}
function Ci(t, e) {
  const n = t.fosterParentingEnabled;
  t.fosterParentingEnabled = !0, t._processTokenInBodyMode(e), t.fosterParentingEnabled = n;
}
function sX(t, e) {
  t.pendingCharacterTokens.push(e);
}
function aX(t, e) {
  t.pendingCharacterTokens.push(e), t.hasNonWhitespacePendingCharacterToken = !0;
}
function yc(t, e) {
  let n = 0;
  if (t.hasNonWhitespacePendingCharacterToken)
    for (; n < t.pendingCharacterTokens.length; n++)
      Ci(t, t.pendingCharacterTokens[n]);
  else
    for (; n < t.pendingCharacterTokens.length; n++)
      t._insertCharacters(t.pendingCharacterTokens[n]);
  t.insertionMode = t.originalInsertionMode, t._processToken(e);
}
function lX(t, e) {
  const n = e.tagName;
  n === w.CAPTION || n === w.COL || n === w.COLGROUP || n === w.TBODY || n === w.TD || n === w.TFOOT || n === w.TH || n === w.THEAD || n === w.TR ? t.openElements.hasInTableScope(w.CAPTION) && (t.openElements.generateImpliedEndTags(), t.openElements.popUntilTagNamePopped(w.CAPTION), t.activeFormattingElements.clearToLastMarker(), t.insertionMode = Bn, t._processToken(e)) : ai(t, e);
}
function cX(t, e) {
  const n = e.tagName;
  n === w.CAPTION || n === w.TABLE ? t.openElements.hasInTableScope(w.CAPTION) && (t.openElements.generateImpliedEndTags(), t.openElements.popUntilTagNamePopped(w.CAPTION), t.activeFormattingElements.clearToLastMarker(), t.insertionMode = Bn, n === w.TABLE && t._processToken(e)) : n !== w.BODY && n !== w.COL && n !== w.COLGROUP && n !== w.HTML && n !== w.TBODY && n !== w.TD && n !== w.TFOOT && n !== w.TH && n !== w.THEAD && n !== w.TR && Ab(t, e);
}
function fX(t, e) {
  const n = e.tagName;
  n === w.HTML ? ai(t, e) : n === w.COL ? (t._appendElement(e, Ae.HTML), e.ackSelfClosing = !0) : n === w.TEMPLATE ? _n(t, e) : V1(t, e);
}
function dX(t, e) {
  const n = e.tagName;
  n === w.COLGROUP ? t.openElements.currentTagName === w.COLGROUP && (t.openElements.pop(), t.insertionMode = Bn) : n === w.TEMPLATE ? Ca(t, e) : n !== w.COL && V1(t, e);
}
function V1(t, e) {
  t.openElements.currentTagName === w.COLGROUP && (t.openElements.pop(), t.insertionMode = Bn, t._processToken(e));
}
function uX(t, e) {
  const n = e.tagName;
  n === w.TR ? (t.openElements.clearBackToTableBodyContext(), t._insertElement(e, Ae.HTML), t.insertionMode = _o) : n === w.TH || n === w.TD ? (t.openElements.clearBackToTableBodyContext(), t._insertFakeElement(w.TR), t.insertionMode = _o, t._processToken(e)) : n === w.CAPTION || n === w.COL || n === w.COLGROUP || n === w.TBODY || n === w.TFOOT || n === w.THEAD ? t.openElements.hasTableBodyContextInTableScope() && (t.openElements.clearBackToTableBodyContext(), t.openElements.pop(), t.insertionMode = Bn, t._processToken(e)) : Mb(t, e);
}
function hX(t, e) {
  const n = e.tagName;
  n === w.TBODY || n === w.TFOOT || n === w.THEAD ? t.openElements.hasInTableScope(n) && (t.openElements.clearBackToTableBodyContext(), t.openElements.pop(), t.insertionMode = Bn) : n === w.TABLE ? t.openElements.hasTableBodyContextInTableScope() && (t.openElements.clearBackToTableBodyContext(), t.openElements.pop(), t.insertionMode = Bn, t._processToken(e)) : (n !== w.BODY && n !== w.CAPTION && n !== w.COL && n !== w.COLGROUP || n !== w.HTML && n !== w.TD && n !== w.TH && n !== w.TR) && Nb(t, e);
}
function pX(t, e) {
  const n = e.tagName;
  n === w.TH || n === w.TD ? (t.openElements.clearBackToTableRowContext(), t._insertElement(e, Ae.HTML), t.insertionMode = pp, t.activeFormattingElements.insertMarker()) : n === w.CAPTION || n === w.COL || n === w.COLGROUP || n === w.TBODY || n === w.TFOOT || n === w.THEAD || n === w.TR ? t.openElements.hasInTableScope(w.TR) && (t.openElements.clearBackToTableRowContext(), t.openElements.pop(), t.insertionMode = Di, t._processToken(e)) : Mb(t, e);
}
function mX(t, e) {
  const n = e.tagName;
  n === w.TR ? t.openElements.hasInTableScope(w.TR) && (t.openElements.clearBackToTableRowContext(), t.openElements.pop(), t.insertionMode = Di) : n === w.TABLE ? t.openElements.hasInTableScope(w.TR) && (t.openElements.clearBackToTableRowContext(), t.openElements.pop(), t.insertionMode = Di, t._processToken(e)) : n === w.TBODY || n === w.TFOOT || n === w.THEAD ? (t.openElements.hasInTableScope(n) || t.openElements.hasInTableScope(w.TR)) && (t.openElements.clearBackToTableRowContext(), t.openElements.pop(), t.insertionMode = Di, t._processToken(e)) : (n !== w.BODY && n !== w.CAPTION && n !== w.COL && n !== w.COLGROUP || n !== w.HTML && n !== w.TD && n !== w.TH) && Nb(t, e);
}
function gX(t, e) {
  const n = e.tagName;
  n === w.CAPTION || n === w.COL || n === w.COLGROUP || n === w.TBODY || n === w.TD || n === w.TFOOT || n === w.TH || n === w.THEAD || n === w.TR ? (t.openElements.hasInTableScope(w.TD) || t.openElements.hasInTableScope(w.TH)) && (t._closeTableCell(), t._processToken(e)) : ai(t, e);
}
function yX(t, e) {
  const n = e.tagName;
  n === w.TD || n === w.TH ? t.openElements.hasInTableScope(n) && (t.openElements.generateImpliedEndTags(), t.openElements.popUntilTagNamePopped(n), t.activeFormattingElements.clearToLastMarker(), t.insertionMode = _o) : n === w.TABLE || n === w.TBODY || n === w.TFOOT || n === w.THEAD || n === w.TR ? t.openElements.hasInTableScope(n) && (t._closeTableCell(), t._processToken(e)) : n !== w.BODY && n !== w.CAPTION && n !== w.COL && n !== w.COLGROUP && n !== w.HTML && Ab(t, e);
}
function c7(t, e) {
  const n = e.tagName;
  n === w.HTML ? ai(t, e) : n === w.OPTION ? (t.openElements.currentTagName === w.OPTION && t.openElements.pop(), t._insertElement(e, Ae.HTML)) : n === w.OPTGROUP ? (t.openElements.currentTagName === w.OPTION && t.openElements.pop(), t.openElements.currentTagName === w.OPTGROUP && t.openElements.pop(), t._insertElement(e, Ae.HTML)) : n === w.INPUT || n === w.KEYGEN || n === w.TEXTAREA || n === w.SELECT ? t.openElements.hasInSelectScope(w.SELECT) && (t.openElements.popUntilTagNamePopped(w.SELECT), t._resetInsertionMode(), n !== w.SELECT && t._processToken(e)) : (n === w.SCRIPT || n === w.TEMPLATE) && _n(t, e);
}
function f7(t, e) {
  const n = e.tagName;
  if (n === w.OPTGROUP) {
    const i = t.openElements.items[t.openElements.stackTop - 1], r = i && t.treeAdapter.getTagName(i);
    t.openElements.currentTagName === w.OPTION && r === w.OPTGROUP && t.openElements.pop(), t.openElements.currentTagName === w.OPTGROUP && t.openElements.pop();
  } else n === w.OPTION ? t.openElements.currentTagName === w.OPTION && t.openElements.pop() : n === w.SELECT && t.openElements.hasInSelectScope(w.SELECT) ? (t.openElements.popUntilTagNamePopped(w.SELECT), t._resetInsertionMode()) : n === w.TEMPLATE && Ca(t, e);
}
function vX(t, e) {
  const n = e.tagName;
  n === w.CAPTION || n === w.TABLE || n === w.TBODY || n === w.TFOOT || n === w.THEAD || n === w.TR || n === w.TD || n === w.TH ? (t.openElements.popUntilTagNamePopped(w.SELECT), t._resetInsertionMode(), t._processToken(e)) : c7(t, e);
}
function bX(t, e) {
  const n = e.tagName;
  n === w.CAPTION || n === w.TABLE || n === w.TBODY || n === w.TFOOT || n === w.THEAD || n === w.TR || n === w.TD || n === w.TH ? t.openElements.hasInTableScope(n) && (t.openElements.popUntilTagNamePopped(w.SELECT), t._resetInsertionMode(), t._processToken(e)) : f7(t, e);
}
function kX(t, e) {
  const n = e.tagName;
  if (n === w.BASE || n === w.BASEFONT || n === w.BGSOUND || n === w.LINK || n === w.META || n === w.NOFRAMES || n === w.SCRIPT || n === w.STYLE || n === w.TEMPLATE || n === w.TITLE)
    _n(t, e);
  else {
    const i = tJ[n] || Nr;
    t._popTmplInsertionMode(), t._pushTmplInsertionMode(i), t.insertionMode = i, t._processToken(e);
  }
}
function wX(t, e) {
  e.tagName === w.TEMPLATE && Ca(t, e);
}
function d7(t, e) {
  t.openElements.tmplCount > 0 ? (t.openElements.popUntilTagNamePopped(w.TEMPLATE), t.activeFormattingElements.clearToLastMarker(), t._popTmplInsertionMode(), t._resetInsertionMode(), t._processToken(e)) : t.stopped = !0;
}
function _X(t, e) {
  e.tagName === w.HTML ? ai(t, e) : W1(t, e);
}
function EX(t, e) {
  e.tagName === w.HTML ? t.fragmentContext || (t.insertionMode = a7) : W1(t, e);
}
function W1(t, e) {
  t.insertionMode = Nr, t._processToken(e);
}
function TX(t, e) {
  const n = e.tagName;
  n === w.HTML ? ai(t, e) : n === w.FRAMESET ? t._insertElement(e, Ae.HTML) : n === w.FRAME ? (t._appendElement(e, Ae.HTML), e.ackSelfClosing = !0) : n === w.NOFRAMES && _n(t, e);
}
function CX(t, e) {
  e.tagName === w.FRAMESET && !t.openElements.isRootHtmlElementCurrent() && (t.openElements.pop(), !t.fragmentContext && t.openElements.currentTagName !== w.FRAMESET && (t.insertionMode = s7));
}
function SX(t, e) {
  const n = e.tagName;
  n === w.HTML ? ai(t, e) : n === w.NOFRAMES && _n(t, e);
}
function xX(t, e) {
  e.tagName === w.HTML && (t.insertionMode = l7);
}
function AX(t, e) {
  e.tagName === w.HTML ? ai(t, e) : mu(t, e);
}
function mu(t, e) {
  t.insertionMode = Nr, t._processToken(e);
}
function MX(t, e) {
  const n = e.tagName;
  n === w.HTML ? ai(t, e) : n === w.NOFRAMES && _n(t, e);
}
function NX(t, e) {
  e.chars = JY.REPLACEMENT_CHARACTER, t._insertCharacters(e);
}
function OX(t, e) {
  t._insertCharacters(e), t.framesetOk = !1;
}
function RX(t, e) {
  if (Tr.causesExit(e) && !t.fragmentContext) {
    for (; t.treeAdapter.getNamespaceURI(t.openElements.current) !== Ae.HTML && !t._isIntegrationPoint(t.openElements.current); )
      t.openElements.pop();
    t._processToken(e);
  } else {
    const n = t._getAdjustedCurrentElement(), i = t.treeAdapter.getNamespaceURI(n);
    i === Ae.MATHML ? Tr.adjustTokenMathMLAttrs(e) : i === Ae.SVG && (Tr.adjustTokenSVGTagName(e), Tr.adjustTokenSVGAttrs(e)), Tr.adjustTokenXMLAttrs(e), e.selfClosing ? t._appendElement(e, i) : t._insertElement(e, i), e.ackSelfClosing = !0;
  }
}
function IX(t, e) {
  for (let n = t.openElements.stackTop; n > 0; n--) {
    const i = t.openElements.items[n];
    if (t.treeAdapter.getNamespaceURI(i) === Ae.HTML) {
      t._processToken(e);
      break;
    }
    if (t.treeAdapter.getTagName(i).toLowerCase() === e.tagName) {
      t.openElements.popUntilElementPopped(i);
      break;
    }
  }
}
const LX = /* @__PURE__ */ oh(iJ);
class Wf {
  /**
   * @constructor
   * @param {Properties} property
   * @param {Normal} normal
   * @param {string} [space]
   */
  constructor(e, n, i) {
    this.property = e, this.normal = n, i && (this.space = i);
  }
}
Wf.prototype.property = {};
Wf.prototype.normal = {};
Wf.prototype.space = null;
function u7(t, e) {
  const n = {}, i = {};
  let r = -1;
  for (; ++r < t.length; )
    Object.assign(n, t[r].property), Object.assign(i, t[r].normal);
  return new Wf(n, i, e);
}
function bf(t) {
  return t.toLowerCase();
}
class zi {
  /**
   * @constructor
   * @param {string} property
   * @param {string} attribute
   */
  constructor(e, n) {
    this.property = e, this.attribute = n;
  }
}
zi.prototype.space = null;
zi.prototype.boolean = !1;
zi.prototype.booleanish = !1;
zi.prototype.overloadedBoolean = !1;
zi.prototype.number = !1;
zi.prototype.commaSeparated = !1;
zi.prototype.spaceSeparated = !1;
zi.prototype.commaOrSpaceSeparated = !1;
zi.prototype.mustUseProperty = !1;
zi.prototype.defined = !1;
let DX = 0;
const et = Sa(), ln = Sa(), h7 = Sa(), ge = Sa(), Pt = Sa(), ll = Sa(), li = Sa();
function Sa() {
  return 2 ** ++DX;
}
const $g = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  boolean: et,
  booleanish: ln,
  commaOrSpaceSeparated: li,
  commaSeparated: ll,
  number: ge,
  overloadedBoolean: h7,
  spaceSeparated: Pt
}, Symbol.toStringTag, { value: "Module" })), Jm = Object.keys($g);
class Ob extends zi {
  /**
   * @constructor
   * @param {string} property
   * @param {string} attribute
   * @param {number|null} [mask]
   * @param {string} [space]
   */
  constructor(e, n, i, r) {
    let o = -1;
    if (super(e, n), X4(this, "space", r), typeof i == "number")
      for (; ++o < Jm.length; ) {
        const s = Jm[o];
        X4(this, Jm[o], (i & $g[s]) === $g[s]);
      }
  }
}
Ob.prototype.defined = !0;
function X4(t, e, n) {
  n && (t[e] = n);
}
const PX = {}.hasOwnProperty;
function Vl(t) {
  const e = {}, n = {};
  let i;
  for (i in t.properties)
    if (PX.call(t.properties, i)) {
      const r = t.properties[i], o = new Ob(
        i,
        t.transform(t.attributes || {}, i),
        r,
        t.space
      );
      t.mustUseProperty && t.mustUseProperty.includes(i) && (o.mustUseProperty = !0), e[i] = o, n[bf(i)] = i, n[bf(o.attribute)] = i;
    }
  return new Wf(e, n, t.space);
}
const p7 = Vl({
  space: "xlink",
  transform(t, e) {
    return "xlink:" + e.slice(5).toLowerCase();
  },
  properties: {
    xLinkActuate: null,
    xLinkArcRole: null,
    xLinkHref: null,
    xLinkRole: null,
    xLinkShow: null,
    xLinkTitle: null,
    xLinkType: null
  }
}), m7 = Vl({
  space: "xml",
  transform(t, e) {
    return "xml:" + e.slice(3).toLowerCase();
  },
  properties: { xmlLang: null, xmlBase: null, xmlSpace: null }
});
function g7(t, e) {
  return e in t ? t[e] : e;
}
function y7(t, e) {
  return g7(t, e.toLowerCase());
}
const v7 = Vl({
  space: "xmlns",
  attributes: { xmlnsxlink: "xmlns:xlink" },
  transform: y7,
  properties: { xmlns: null, xmlnsXLink: null }
}), b7 = Vl({
  transform(t, e) {
    return e === "role" ? e : "aria-" + e.slice(4).toLowerCase();
  },
  properties: {
    ariaActiveDescendant: null,
    ariaAtomic: ln,
    ariaAutoComplete: null,
    ariaBusy: ln,
    ariaChecked: ln,
    ariaColCount: ge,
    ariaColIndex: ge,
    ariaColSpan: ge,
    ariaControls: Pt,
    ariaCurrent: null,
    ariaDescribedBy: Pt,
    ariaDetails: null,
    ariaDisabled: ln,
    ariaDropEffect: Pt,
    ariaErrorMessage: null,
    ariaExpanded: ln,
    ariaFlowTo: Pt,
    ariaGrabbed: ln,
    ariaHasPopup: null,
    ariaHidden: ln,
    ariaInvalid: null,
    ariaKeyShortcuts: null,
    ariaLabel: null,
    ariaLabelledBy: Pt,
    ariaLevel: ge,
    ariaLive: null,
    ariaModal: ln,
    ariaMultiLine: ln,
    ariaMultiSelectable: ln,
    ariaOrientation: null,
    ariaOwns: Pt,
    ariaPlaceholder: null,
    ariaPosInSet: ge,
    ariaPressed: ln,
    ariaReadOnly: ln,
    ariaRelevant: null,
    ariaRequired: ln,
    ariaRoleDescription: Pt,
    ariaRowCount: ge,
    ariaRowIndex: ge,
    ariaRowSpan: ge,
    ariaSelected: ln,
    ariaSetSize: ge,
    ariaSort: null,
    ariaValueMax: ge,
    ariaValueMin: ge,
    ariaValueNow: ge,
    ariaValueText: null,
    role: null
  }
}), FX = Vl({
  space: "html",
  attributes: {
    acceptcharset: "accept-charset",
    classname: "class",
    htmlfor: "for",
    httpequiv: "http-equiv"
  },
  transform: y7,
  mustUseProperty: ["checked", "multiple", "muted", "selected"],
  properties: {
    // Standard Properties.
    abbr: null,
    accept: ll,
    acceptCharset: Pt,
    accessKey: Pt,
    action: null,
    allow: null,
    allowFullScreen: et,
    allowPaymentRequest: et,
    allowUserMedia: et,
    alt: null,
    as: null,
    async: et,
    autoCapitalize: null,
    autoComplete: Pt,
    autoFocus: et,
    autoPlay: et,
    blocking: Pt,
    capture: null,
    charSet: null,
    checked: et,
    cite: null,
    className: Pt,
    cols: ge,
    colSpan: null,
    content: null,
    contentEditable: ln,
    controls: et,
    controlsList: Pt,
    coords: ge | ll,
    crossOrigin: null,
    data: null,
    dateTime: null,
    decoding: null,
    default: et,
    defer: et,
    dir: null,
    dirName: null,
    disabled: et,
    download: h7,
    draggable: ln,
    encType: null,
    enterKeyHint: null,
    fetchPriority: null,
    form: null,
    formAction: null,
    formEncType: null,
    formMethod: null,
    formNoValidate: et,
    formTarget: null,
    headers: Pt,
    height: ge,
    hidden: et,
    high: ge,
    href: null,
    hrefLang: null,
    htmlFor: Pt,
    httpEquiv: Pt,
    id: null,
    imageSizes: null,
    imageSrcSet: null,
    inert: et,
    inputMode: null,
    integrity: null,
    is: null,
    isMap: et,
    itemId: null,
    itemProp: Pt,
    itemRef: Pt,
    itemScope: et,
    itemType: Pt,
    kind: null,
    label: null,
    lang: null,
    language: null,
    list: null,
    loading: null,
    loop: et,
    low: ge,
    manifest: null,
    max: null,
    maxLength: ge,
    media: null,
    method: null,
    min: null,
    minLength: ge,
    multiple: et,
    muted: et,
    name: null,
    nonce: null,
    noModule: et,
    noValidate: et,
    onAbort: null,
    onAfterPrint: null,
    onAuxClick: null,
    onBeforeMatch: null,
    onBeforePrint: null,
    onBeforeToggle: null,
    onBeforeUnload: null,
    onBlur: null,
    onCancel: null,
    onCanPlay: null,
    onCanPlayThrough: null,
    onChange: null,
    onClick: null,
    onClose: null,
    onContextLost: null,
    onContextMenu: null,
    onContextRestored: null,
    onCopy: null,
    onCueChange: null,
    onCut: null,
    onDblClick: null,
    onDrag: null,
    onDragEnd: null,
    onDragEnter: null,
    onDragExit: null,
    onDragLeave: null,
    onDragOver: null,
    onDragStart: null,
    onDrop: null,
    onDurationChange: null,
    onEmptied: null,
    onEnded: null,
    onError: null,
    onFocus: null,
    onFormData: null,
    onHashChange: null,
    onInput: null,
    onInvalid: null,
    onKeyDown: null,
    onKeyPress: null,
    onKeyUp: null,
    onLanguageChange: null,
    onLoad: null,
    onLoadedData: null,
    onLoadedMetadata: null,
    onLoadEnd: null,
    onLoadStart: null,
    onMessage: null,
    onMessageError: null,
    onMouseDown: null,
    onMouseEnter: null,
    onMouseLeave: null,
    onMouseMove: null,
    onMouseOut: null,
    onMouseOver: null,
    onMouseUp: null,
    onOffline: null,
    onOnline: null,
    onPageHide: null,
    onPageShow: null,
    onPaste: null,
    onPause: null,
    onPlay: null,
    onPlaying: null,
    onPopState: null,
    onProgress: null,
    onRateChange: null,
    onRejectionHandled: null,
    onReset: null,
    onResize: null,
    onScroll: null,
    onScrollEnd: null,
    onSecurityPolicyViolation: null,
    onSeeked: null,
    onSeeking: null,
    onSelect: null,
    onSlotChange: null,
    onStalled: null,
    onStorage: null,
    onSubmit: null,
    onSuspend: null,
    onTimeUpdate: null,
    onToggle: null,
    onUnhandledRejection: null,
    onUnload: null,
    onVolumeChange: null,
    onWaiting: null,
    onWheel: null,
    open: et,
    optimum: ge,
    pattern: null,
    ping: Pt,
    placeholder: null,
    playsInline: et,
    popover: null,
    popoverTarget: null,
    popoverTargetAction: null,
    poster: null,
    preload: null,
    readOnly: et,
    referrerPolicy: null,
    rel: Pt,
    required: et,
    reversed: et,
    rows: ge,
    rowSpan: ge,
    sandbox: Pt,
    scope: null,
    scoped: et,
    seamless: et,
    selected: et,
    shadowRootClonable: et,
    shadowRootDelegatesFocus: et,
    shadowRootMode: null,
    shape: null,
    size: ge,
    sizes: null,
    slot: null,
    span: ge,
    spellCheck: ln,
    src: null,
    srcDoc: null,
    srcLang: null,
    srcSet: null,
    start: ge,
    step: null,
    style: null,
    tabIndex: ge,
    target: null,
    title: null,
    translate: null,
    type: null,
    typeMustMatch: et,
    useMap: null,
    value: ln,
    width: ge,
    wrap: null,
    writingSuggestions: null,
    // Legacy.
    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis
    align: null,
    // Several. Use CSS `text-align` instead,
    aLink: null,
    // `<body>`. Use CSS `a:active {color}` instead
    archive: Pt,
    // `<object>`. List of URIs to archives
    axis: null,
    // `<td>` and `<th>`. Use `scope` on `<th>`
    background: null,
    // `<body>`. Use CSS `background-image` instead
    bgColor: null,
    // `<body>` and table elements. Use CSS `background-color` instead
    border: ge,
    // `<table>`. Use CSS `border-width` instead,
    borderColor: null,
    // `<table>`. Use CSS `border-color` instead,
    bottomMargin: ge,
    // `<body>`
    cellPadding: null,
    // `<table>`
    cellSpacing: null,
    // `<table>`
    char: null,
    // Several table elements. When `align=char`, sets the character to align on
    charOff: null,
    // Several table elements. When `char`, offsets the alignment
    classId: null,
    // `<object>`
    clear: null,
    // `<br>`. Use CSS `clear` instead
    code: null,
    // `<object>`
    codeBase: null,
    // `<object>`
    codeType: null,
    // `<object>`
    color: null,
    // `<font>` and `<hr>`. Use CSS instead
    compact: et,
    // Lists. Use CSS to reduce space between items instead
    declare: et,
    // `<object>`
    event: null,
    // `<script>`
    face: null,
    // `<font>`. Use CSS instead
    frame: null,
    // `<table>`
    frameBorder: null,
    // `<iframe>`. Use CSS `border` instead
    hSpace: ge,
    // `<img>` and `<object>`
    leftMargin: ge,
    // `<body>`
    link: null,
    // `<body>`. Use CSS `a:link {color: *}` instead
    longDesc: null,
    // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`
    lowSrc: null,
    // `<img>`. Use a `<picture>`
    marginHeight: ge,
    // `<body>`
    marginWidth: ge,
    // `<body>`
    noResize: et,
    // `<frame>`
    noHref: et,
    // `<area>`. Use no href instead of an explicit `nohref`
    noShade: et,
    // `<hr>`. Use background-color and height instead of borders
    noWrap: et,
    // `<td>` and `<th>`
    object: null,
    // `<applet>`
    profile: null,
    // `<head>`
    prompt: null,
    // `<isindex>`
    rev: null,
    // `<link>`
    rightMargin: ge,
    // `<body>`
    rules: null,
    // `<table>`
    scheme: null,
    // `<meta>`
    scrolling: ln,
    // `<frame>`. Use overflow in the child context
    standby: null,
    // `<object>`
    summary: null,
    // `<table>`
    text: null,
    // `<body>`. Use CSS `color` instead
    topMargin: ge,
    // `<body>`
    valueType: null,
    // `<param>`
    version: null,
    // `<html>`. Use a doctype.
    vAlign: null,
    // Several. Use CSS `vertical-align` instead
    vLink: null,
    // `<body>`. Use CSS `a:visited {color}` instead
    vSpace: ge,
    // `<img>` and `<object>`
    // Non-standard Properties.
    allowTransparency: null,
    autoCorrect: null,
    autoSave: null,
    disablePictureInPicture: et,
    disableRemotePlayback: et,
    prefix: null,
    property: null,
    results: ge,
    security: null,
    unselectable: null
  }
}), BX = Vl({
  space: "svg",
  attributes: {
    accentHeight: "accent-height",
    alignmentBaseline: "alignment-baseline",
    arabicForm: "arabic-form",
    baselineShift: "baseline-shift",
    capHeight: "cap-height",
    className: "class",
    clipPath: "clip-path",
    clipRule: "clip-rule",
    colorInterpolation: "color-interpolation",
    colorInterpolationFilters: "color-interpolation-filters",
    colorProfile: "color-profile",
    colorRendering: "color-rendering",
    crossOrigin: "crossorigin",
    dataType: "datatype",
    dominantBaseline: "dominant-baseline",
    enableBackground: "enable-background",
    fillOpacity: "fill-opacity",
    fillRule: "fill-rule",
    floodColor: "flood-color",
    floodOpacity: "flood-opacity",
    fontFamily: "font-family",
    fontSize: "font-size",
    fontSizeAdjust: "font-size-adjust",
    fontStretch: "font-stretch",
    fontStyle: "font-style",
    fontVariant: "font-variant",
    fontWeight: "font-weight",
    glyphName: "glyph-name",
    glyphOrientationHorizontal: "glyph-orientation-horizontal",
    glyphOrientationVertical: "glyph-orientation-vertical",
    hrefLang: "hreflang",
    horizAdvX: "horiz-adv-x",
    horizOriginX: "horiz-origin-x",
    horizOriginY: "horiz-origin-y",
    imageRendering: "image-rendering",
    letterSpacing: "letter-spacing",
    lightingColor: "lighting-color",
    markerEnd: "marker-end",
    markerMid: "marker-mid",
    markerStart: "marker-start",
    navDown: "nav-down",
    navDownLeft: "nav-down-left",
    navDownRight: "nav-down-right",
    navLeft: "nav-left",
    navNext: "nav-next",
    navPrev: "nav-prev",
    navRight: "nav-right",
    navUp: "nav-up",
    navUpLeft: "nav-up-left",
    navUpRight: "nav-up-right",
    onAbort: "onabort",
    onActivate: "onactivate",
    onAfterPrint: "onafterprint",
    onBeforePrint: "onbeforeprint",
    onBegin: "onbegin",
    onCancel: "oncancel",
    onCanPlay: "oncanplay",
    onCanPlayThrough: "oncanplaythrough",
    onChange: "onchange",
    onClick: "onclick",
    onClose: "onclose",
    onCopy: "oncopy",
    onCueChange: "oncuechange",
    onCut: "oncut",
    onDblClick: "ondblclick",
    onDrag: "ondrag",
    onDragEnd: "ondragend",
    onDragEnter: "ondragenter",
    onDragExit: "ondragexit",
    onDragLeave: "ondragleave",
    onDragOver: "ondragover",
    onDragStart: "ondragstart",
    onDrop: "ondrop",
    onDurationChange: "ondurationchange",
    onEmptied: "onemptied",
    onEnd: "onend",
    onEnded: "onended",
    onError: "onerror",
    onFocus: "onfocus",
    onFocusIn: "onfocusin",
    onFocusOut: "onfocusout",
    onHashChange: "onhashchange",
    onInput: "oninput",
    onInvalid: "oninvalid",
    onKeyDown: "onkeydown",
    onKeyPress: "onkeypress",
    onKeyUp: "onkeyup",
    onLoad: "onload",
    onLoadedData: "onloadeddata",
    onLoadedMetadata: "onloadedmetadata",
    onLoadStart: "onloadstart",
    onMessage: "onmessage",
    onMouseDown: "onmousedown",
    onMouseEnter: "onmouseenter",
    onMouseLeave: "onmouseleave",
    onMouseMove: "onmousemove",
    onMouseOut: "onmouseout",
    onMouseOver: "onmouseover",
    onMouseUp: "onmouseup",
    onMouseWheel: "onmousewheel",
    onOffline: "onoffline",
    onOnline: "ononline",
    onPageHide: "onpagehide",
    onPageShow: "onpageshow",
    onPaste: "onpaste",
    onPause: "onpause",
    onPlay: "onplay",
    onPlaying: "onplaying",
    onPopState: "onpopstate",
    onProgress: "onprogress",
    onRateChange: "onratechange",
    onRepeat: "onrepeat",
    onReset: "onreset",
    onResize: "onresize",
    onScroll: "onscroll",
    onSeeked: "onseeked",
    onSeeking: "onseeking",
    onSelect: "onselect",
    onShow: "onshow",
    onStalled: "onstalled",
    onStorage: "onstorage",
    onSubmit: "onsubmit",
    onSuspend: "onsuspend",
    onTimeUpdate: "ontimeupdate",
    onToggle: "ontoggle",
    onUnload: "onunload",
    onVolumeChange: "onvolumechange",
    onWaiting: "onwaiting",
    onZoom: "onzoom",
    overlinePosition: "overline-position",
    overlineThickness: "overline-thickness",
    paintOrder: "paint-order",
    panose1: "panose-1",
    pointerEvents: "pointer-events",
    referrerPolicy: "referrerpolicy",
    renderingIntent: "rendering-intent",
    shapeRendering: "shape-rendering",
    stopColor: "stop-color",
    stopOpacity: "stop-opacity",
    strikethroughPosition: "strikethrough-position",
    strikethroughThickness: "strikethrough-thickness",
    strokeDashArray: "stroke-dasharray",
    strokeDashOffset: "stroke-dashoffset",
    strokeLineCap: "stroke-linecap",
    strokeLineJoin: "stroke-linejoin",
    strokeMiterLimit: "stroke-miterlimit",
    strokeOpacity: "stroke-opacity",
    strokeWidth: "stroke-width",
    tabIndex: "tabindex",
    textAnchor: "text-anchor",
    textDecoration: "text-decoration",
    textRendering: "text-rendering",
    transformOrigin: "transform-origin",
    typeOf: "typeof",
    underlinePosition: "underline-position",
    underlineThickness: "underline-thickness",
    unicodeBidi: "unicode-bidi",
    unicodeRange: "unicode-range",
    unitsPerEm: "units-per-em",
    vAlphabetic: "v-alphabetic",
    vHanging: "v-hanging",
    vIdeographic: "v-ideographic",
    vMathematical: "v-mathematical",
    vectorEffect: "vector-effect",
    vertAdvY: "vert-adv-y",
    vertOriginX: "vert-origin-x",
    vertOriginY: "vert-origin-y",
    wordSpacing: "word-spacing",
    writingMode: "writing-mode",
    xHeight: "x-height",
    // These were camelcased in Tiny. Now lowercased in SVG 2
    playbackOrder: "playbackorder",
    timelineBegin: "timelinebegin"
  },
  transform: g7,
  properties: {
    about: li,
    accentHeight: ge,
    accumulate: null,
    additive: null,
    alignmentBaseline: null,
    alphabetic: ge,
    amplitude: ge,
    arabicForm: null,
    ascent: ge,
    attributeName: null,
    attributeType: null,
    azimuth: ge,
    bandwidth: null,
    baselineShift: null,
    baseFrequency: null,
    baseProfile: null,
    bbox: null,
    begin: null,
    bias: ge,
    by: null,
    calcMode: null,
    capHeight: ge,
    className: Pt,
    clip: null,
    clipPath: null,
    clipPathUnits: null,
    clipRule: null,
    color: null,
    colorInterpolation: null,
    colorInterpolationFilters: null,
    colorProfile: null,
    colorRendering: null,
    content: null,
    contentScriptType: null,
    contentStyleType: null,
    crossOrigin: null,
    cursor: null,
    cx: null,
    cy: null,
    d: null,
    dataType: null,
    defaultAction: null,
    descent: ge,
    diffuseConstant: ge,
    direction: null,
    display: null,
    dur: null,
    divisor: ge,
    dominantBaseline: null,
    download: et,
    dx: null,
    dy: null,
    edgeMode: null,
    editable: null,
    elevation: ge,
    enableBackground: null,
    end: null,
    event: null,
    exponent: ge,
    externalResourcesRequired: null,
    fill: null,
    fillOpacity: ge,
    fillRule: null,
    filter: null,
    filterRes: null,
    filterUnits: null,
    floodColor: null,
    floodOpacity: null,
    focusable: null,
    focusHighlight: null,
    fontFamily: null,
    fontSize: null,
    fontSizeAdjust: null,
    fontStretch: null,
    fontStyle: null,
    fontVariant: null,
    fontWeight: null,
    format: null,
    fr: null,
    from: null,
    fx: null,
    fy: null,
    g1: ll,
    g2: ll,
    glyphName: ll,
    glyphOrientationHorizontal: null,
    glyphOrientationVertical: null,
    glyphRef: null,
    gradientTransform: null,
    gradientUnits: null,
    handler: null,
    hanging: ge,
    hatchContentUnits: null,
    hatchUnits: null,
    height: null,
    href: null,
    hrefLang: null,
    horizAdvX: ge,
    horizOriginX: ge,
    horizOriginY: ge,
    id: null,
    ideographic: ge,
    imageRendering: null,
    initialVisibility: null,
    in: null,
    in2: null,
    intercept: ge,
    k: ge,
    k1: ge,
    k2: ge,
    k3: ge,
    k4: ge,
    kernelMatrix: li,
    kernelUnitLength: null,
    keyPoints: null,
    // SEMI_COLON_SEPARATED
    keySplines: null,
    // SEMI_COLON_SEPARATED
    keyTimes: null,
    // SEMI_COLON_SEPARATED
    kerning: null,
    lang: null,
    lengthAdjust: null,
    letterSpacing: null,
    lightingColor: null,
    limitingConeAngle: ge,
    local: null,
    markerEnd: null,
    markerMid: null,
    markerStart: null,
    markerHeight: null,
    markerUnits: null,
    markerWidth: null,
    mask: null,
    maskContentUnits: null,
    maskUnits: null,
    mathematical: null,
    max: null,
    media: null,
    mediaCharacterEncoding: null,
    mediaContentEncodings: null,
    mediaSize: ge,
    mediaTime: null,
    method: null,
    min: null,
    mode: null,
    name: null,
    navDown: null,
    navDownLeft: null,
    navDownRight: null,
    navLeft: null,
    navNext: null,
    navPrev: null,
    navRight: null,
    navUp: null,
    navUpLeft: null,
    navUpRight: null,
    numOctaves: null,
    observer: null,
    offset: null,
    onAbort: null,
    onActivate: null,
    onAfterPrint: null,
    onBeforePrint: null,
    onBegin: null,
    onCancel: null,
    onCanPlay: null,
    onCanPlayThrough: null,
    onChange: null,
    onClick: null,
    onClose: null,
    onCopy: null,
    onCueChange: null,
    onCut: null,
    onDblClick: null,
    onDrag: null,
    onDragEnd: null,
    onDragEnter: null,
    onDragExit: null,
    onDragLeave: null,
    onDragOver: null,
    onDragStart: null,
    onDrop: null,
    onDurationChange: null,
    onEmptied: null,
    onEnd: null,
    onEnded: null,
    onError: null,
    onFocus: null,
    onFocusIn: null,
    onFocusOut: null,
    onHashChange: null,
    onInput: null,
    onInvalid: null,
    onKeyDown: null,
    onKeyPress: null,
    onKeyUp: null,
    onLoad: null,
    onLoadedData: null,
    onLoadedMetadata: null,
    onLoadStart: null,
    onMessage: null,
    onMouseDown: null,
    onMouseEnter: null,
    onMouseLeave: null,
    onMouseMove: null,
    onMouseOut: null,
    onMouseOver: null,
    onMouseUp: null,
    onMouseWheel: null,
    onOffline: null,
    onOnline: null,
    onPageHide: null,
    onPageShow: null,
    onPaste: null,
    onPause: null,
    onPlay: null,
    onPlaying: null,
    onPopState: null,
    onProgress: null,
    onRateChange: null,
    onRepeat: null,
    onReset: null,
    onResize: null,
    onScroll: null,
    onSeeked: null,
    onSeeking: null,
    onSelect: null,
    onShow: null,
    onStalled: null,
    onStorage: null,
    onSubmit: null,
    onSuspend: null,
    onTimeUpdate: null,
    onToggle: null,
    onUnload: null,
    onVolumeChange: null,
    onWaiting: null,
    onZoom: null,
    opacity: null,
    operator: null,
    order: null,
    orient: null,
    orientation: null,
    origin: null,
    overflow: null,
    overlay: null,
    overlinePosition: ge,
    overlineThickness: ge,
    paintOrder: null,
    panose1: null,
    path: null,
    pathLength: ge,
    patternContentUnits: null,
    patternTransform: null,
    patternUnits: null,
    phase: null,
    ping: Pt,
    pitch: null,
    playbackOrder: null,
    pointerEvents: null,
    points: null,
    pointsAtX: ge,
    pointsAtY: ge,
    pointsAtZ: ge,
    preserveAlpha: null,
    preserveAspectRatio: null,
    primitiveUnits: null,
    propagate: null,
    property: li,
    r: null,
    radius: null,
    referrerPolicy: null,
    refX: null,
    refY: null,
    rel: li,
    rev: li,
    renderingIntent: null,
    repeatCount: null,
    repeatDur: null,
    requiredExtensions: li,
    requiredFeatures: li,
    requiredFonts: li,
    requiredFormats: li,
    resource: null,
    restart: null,
    result: null,
    rotate: null,
    rx: null,
    ry: null,
    scale: null,
    seed: null,
    shapeRendering: null,
    side: null,
    slope: null,
    snapshotTime: null,
    specularConstant: ge,
    specularExponent: ge,
    spreadMethod: null,
    spacing: null,
    startOffset: null,
    stdDeviation: null,
    stemh: null,
    stemv: null,
    stitchTiles: null,
    stopColor: null,
    stopOpacity: null,
    strikethroughPosition: ge,
    strikethroughThickness: ge,
    string: null,
    stroke: null,
    strokeDashArray: li,
    strokeDashOffset: null,
    strokeLineCap: null,
    strokeLineJoin: null,
    strokeMiterLimit: ge,
    strokeOpacity: ge,
    strokeWidth: null,
    style: null,
    surfaceScale: ge,
    syncBehavior: null,
    syncBehaviorDefault: null,
    syncMaster: null,
    syncTolerance: null,
    syncToleranceDefault: null,
    systemLanguage: li,
    tabIndex: ge,
    tableValues: null,
    target: null,
    targetX: ge,
    targetY: ge,
    textAnchor: null,
    textDecoration: null,
    textRendering: null,
    textLength: null,
    timelineBegin: null,
    title: null,
    transformBehavior: null,
    type: null,
    typeOf: li,
    to: null,
    transform: null,
    transformOrigin: null,
    u1: null,
    u2: null,
    underlinePosition: ge,
    underlineThickness: ge,
    unicode: null,
    unicodeBidi: null,
    unicodeRange: null,
    unitsPerEm: ge,
    values: null,
    vAlphabetic: ge,
    vMathematical: ge,
    vectorEffect: null,
    vHanging: ge,
    vIdeographic: ge,
    version: null,
    vertAdvY: ge,
    vertOriginX: ge,
    vertOriginY: ge,
    viewBox: null,
    viewTarget: null,
    visibility: null,
    width: null,
    widths: null,
    wordSpacing: null,
    writingMode: null,
    x: null,
    x1: null,
    x2: null,
    xChannelSelector: null,
    xHeight: ge,
    y: null,
    y1: null,
    y2: null,
    yChannelSelector: null,
    z: null,
    zoomAndPan: null
  }
}), HX = /^data[-\w.:]+$/i, Q4 = /-[a-z]/g, $X = /[A-Z]/g;
function Rb(t, e) {
  const n = bf(e);
  let i = e, r = zi;
  if (n in t.normal)
    return t.property[t.normal[n]];
  if (n.length > 4 && n.slice(0, 4) === "data" && HX.test(e)) {
    if (e.charAt(4) === "-") {
      const o = e.slice(5).replace(Q4, zX);
      i = "data" + o.charAt(0).toUpperCase() + o.slice(1);
    } else {
      const o = e.slice(4);
      if (!Q4.test(o)) {
        let s = o.replace($X, jX);
        s.charAt(0) !== "-" && (s = "-" + s), e = "data" + s;
      }
    }
    r = Ob;
  }
  return new r(i, e);
}
function jX(t) {
  return "-" + t.toLowerCase();
}
function zX(t) {
  return t.charAt(1).toUpperCase();
}
const gp = u7([m7, p7, v7, b7, FX], "html"), qf = u7([m7, p7, v7, b7, BX], "svg"), Z4 = /[#.]/g;
function UX(t, e) {
  const n = t || "", i = {};
  let r = 0, o, s;
  for (; r < n.length; ) {
    Z4.lastIndex = r;
    const a = Z4.exec(n), l = n.slice(r, a ? a.index : n.length);
    l && (o ? o === "#" ? i.id = l : Array.isArray(i.className) ? i.className.push(l) : i.className = [l] : s = l, r += l.length), a && (o = a[0], r++);
  }
  return {
    type: "element",
    // @ts-expect-error: fine.
    tagName: s || e || "div",
    properties: i,
    children: []
  };
}
function e_(t) {
  const e = String(t || "").trim();
  return e ? e.split(/[ \t\n\r\f]+/g) : [];
}
function VX(t) {
  return t.join(" ").trim();
}
function t_(t) {
  const e = [], n = String(t || "");
  let i = n.indexOf(","), r = 0, o = !1;
  for (; !o; ) {
    i === -1 && (i = n.length, o = !0);
    const s = n.slice(r, i).trim();
    (s || !o) && e.push(s), r = i + 1, i = n.indexOf(",", r);
  }
  return e;
}
function WX(t, e) {
  const n = e || {};
  return (t[t.length - 1] === "" ? [...t, ""] : t).join(
    (n.padRight ? " " : "") + "," + (n.padLeft === !1 ? "" : " ")
  ).trim();
}
const qX = /* @__PURE__ */ new Set(["menu", "submit", "reset", "button"]), jg = {}.hasOwnProperty;
function k7(t, e, n) {
  const i = n && JX(n);
  return (
    /**
     * @type {{
     *   (): Root
     *   (selector: null | undefined, ...children: Array<HChild>): Root
     *   (selector: string, properties?: HProperties, ...children: Array<HChild>): Element
     *   (selector: string, ...children: Array<HChild>): Element
     * }}
     */
    /**
     * Hyperscript compatible DSL for creating virtual hast trees.
     *
     * @param {string | null} [selector]
     * @param {HProperties | HChild} [properties]
     * @param {Array<HChild>} children
     * @returns {HResult}
     */
    function(o, s, ...a) {
      let l = -1, c;
      if (o == null)
        c = { type: "root", children: [] }, a.unshift(s);
      else if (c = UX(o, e), c.tagName = c.tagName.toLowerCase(), i && jg.call(i, c.tagName) && (c.tagName = i[c.tagName]), GX(s, c.tagName)) {
        let f;
        for (f in s)
          jg.call(s, f) && KX(t, c.properties, f, s[f]);
      } else
        a.unshift(s);
      for (; ++l < a.length; )
        zg(c.children, a[l]);
      return c.type === "element" && c.tagName === "template" && (c.content = { type: "root", children: c.children }, c.children = []), c;
    }
  );
}
function GX(t, e) {
  return t == null || typeof t != "object" || Array.isArray(t) ? !1 : e === "input" || !t.type || typeof t.type != "string" ? !0 : "children" in t && Array.isArray(t.children) ? !1 : e === "button" ? qX.has(t.type.toLowerCase()) : !("value" in t);
}
function KX(t, e, n, i) {
  const r = Rb(t, n);
  let o = -1, s;
  if (i != null) {
    if (typeof i == "number") {
      if (Number.isNaN(i)) return;
      s = i;
    } else typeof i == "boolean" ? s = i : typeof i == "string" ? r.spaceSeparated ? s = e_(i) : r.commaSeparated ? s = t_(i) : r.commaOrSpaceSeparated ? s = e_(t_(i).join(" ")) : s = n_(r, r.property, i) : Array.isArray(i) ? s = i.concat() : s = r.property === "style" ? YX(i) : String(i);
    if (Array.isArray(s)) {
      const a = [];
      for (; ++o < s.length; )
        a[o] = n_(r, r.property, s[o]);
      s = a;
    }
    r.property === "className" && Array.isArray(e.className) && (s = e.className.concat(s)), e[r.property] = s;
  }
}
function zg(t, e) {
  let n = -1;
  if (e != null) if (typeof e == "string" || typeof e == "number")
    t.push({ type: "text", value: String(e) });
  else if (Array.isArray(e))
    for (; ++n < e.length; )
      zg(t, e[n]);
  else if (typeof e == "object" && "type" in e)
    e.type === "root" ? zg(t, e.children) : t.push(e);
  else
    throw new Error("Expected node, nodes, or string, got `" + e + "`");
}
function n_(t, e, n) {
  if (typeof n == "string") {
    if (t.number && n && !Number.isNaN(Number(n)))
      return Number(n);
    if ((t.boolean || t.overloadedBoolean) && (n === "" || bf(n) === bf(e)))
      return !0;
  }
  return n;
}
function YX(t) {
  const e = [];
  let n;
  for (n in t)
    jg.call(t, n) && e.push([n, t[n]].join(": "));
  return e.join("; ");
}
function JX(t) {
  const e = {};
  let n = -1;
  for (; ++n < t.length; )
    e[t[n].toLowerCase()] = t[n];
  return e;
}
const w7 = k7(gp, "div"), XX = [
  "altGlyph",
  "altGlyphDef",
  "altGlyphItem",
  "animateColor",
  "animateMotion",
  "animateTransform",
  "clipPath",
  "feBlend",
  "feColorMatrix",
  "feComponentTransfer",
  "feComposite",
  "feConvolveMatrix",
  "feDiffuseLighting",
  "feDisplacementMap",
  "feDistantLight",
  "feDropShadow",
  "feFlood",
  "feFuncA",
  "feFuncB",
  "feFuncG",
  "feFuncR",
  "feGaussianBlur",
  "feImage",
  "feMerge",
  "feMergeNode",
  "feMorphology",
  "feOffset",
  "fePointLight",
  "feSpecularLighting",
  "feSpotLight",
  "feTile",
  "feTurbulence",
  "foreignObject",
  "glyphRef",
  "linearGradient",
  "radialGradient",
  "solidColor",
  "textArea",
  "textPath"
], _7 = k7(qf, "g", XX);
function QX(t) {
  const e = String(t), n = [], i = /\r?\n|\r/g;
  for (; i.test(e); )
    n.push(i.lastIndex);
  return n.push(e.length + 1), { toPoint: r, toOffset: o };
  function r(s) {
    let a = -1;
    if (typeof s == "number" && s > -1 && s < n[n.length - 1]) {
      for (; ++a < n.length; )
        if (n[a] > s)
          return {
            line: a + 1,
            column: s - (a > 0 ? n[a - 1] : 0) + 1,
            offset: s
          };
    }
    return { line: void 0, column: void 0, offset: void 0 };
  }
  function o(s) {
    const a = s && s.line, l = s && s.column;
    if (typeof a == "number" && typeof l == "number" && !Number.isNaN(a) && !Number.isNaN(l) && a - 1 in n) {
      const c = (n[a - 2] || 0) + l - 1 || 0;
      if (c > -1 && c < n[n.length - 1])
        return c;
    }
    return -1;
  }
}
const gu = {
  html: "http://www.w3.org/1999/xhtml",
  mathml: "http://www.w3.org/1998/Math/MathML",
  svg: "http://www.w3.org/2000/svg",
  xlink: "http://www.w3.org/1999/xlink",
  xml: "http://www.w3.org/XML/1998/namespace",
  xmlns: "http://www.w3.org/2000/xmlns/"
}, E7 = {}.hasOwnProperty, ZX = Object.prototype;
function eQ(t, e) {
  const n = e || {};
  let i, r;
  return iQ(n) ? (r = n, i = {}) : (r = n.file || void 0, i = n), Ib(
    {
      schema: i.space === "svg" ? qf : gp,
      file: r,
      verbose: i.verbose,
      location: !1
    },
    t
  );
}
function Ib(t, e) {
  let n;
  switch (e.nodeName) {
    case "#comment": {
      const i = (
        /** @type {P5Comment} */
        e
      );
      return n = { type: "comment", value: i.data }, yu(t, i, n), n;
    }
    case "#document":
    case "#document-fragment": {
      const i = (
        /** @type {P5Document | P5DocumentFragment} */
        e
      ), r = "mode" in i ? i.mode === "quirks" || i.mode === "limited-quirks" : !1;
      if (n = {
        type: "root",
        children: T7(t, e.childNodes),
        data: { quirksMode: r }
      }, t.file && t.location) {
        const o = String(t.file), s = QX(o), a = s.toPoint(0), l = s.toPoint(o.length);
        n.position = { start: a, end: l };
      }
      return n;
    }
    case "#documentType": {
      const i = (
        /** @type {P5DocumentType} */
        e
      );
      return n = { type: "doctype" }, yu(t, i, n), n;
    }
    case "#text": {
      const i = (
        /** @type {P5Text} */
        e
      );
      return n = { type: "text", value: i.value }, yu(t, i, n), n;
    }
    default:
      return n = tQ(
        t,
        /** @type {P5Element} */
        e
      ), n;
  }
}
function T7(t, e) {
  let n = -1;
  const i = [];
  for (; ++n < e.length; )
    i[n] = Ib(t, e[n]);
  return i;
}
function tQ(t, e) {
  const n = t.schema;
  t.schema = e.namespaceURI === gu.svg ? qf : gp;
  let i = -1;
  const r = {};
  for (; ++i < e.attrs.length; ) {
    const a = e.attrs[i], l = (a.prefix ? a.prefix + ":" : "") + a.name;
    E7.call(ZX, l) || (r[l] = a.value);
  }
  const s = (t.schema.space === "svg" ? _7 : w7)(e.tagName, r, T7(t, e.childNodes));
  if (yu(t, e, s), s.tagName === "template") {
    const a = (
      /** @type {P5Template} */
      e
    ), l = a.sourceCodeLocation, c = l && l.startTag && Ya(l.startTag), f = l && l.endTag && Ya(l.endTag), d = Ib(t, a.content);
    c && f && t.file && (d.position = { start: c.end, end: f.start }), s.content = d;
  }
  return t.schema = n, s;
}
function yu(t, e, n) {
  if ("sourceCodeLocation" in e && e.sourceCodeLocation && t.file) {
    const i = nQ(t, n, e.sourceCodeLocation);
    i && (t.location = !0, n.position = i);
  }
}
function nQ(t, e, n) {
  const i = Ya(n);
  if (e.type === "element") {
    const r = e.children[e.children.length - 1];
    if (i && !n.endTag && r && r.position && r.position.end && (i.end = Object.assign({}, r.position.end)), t.verbose) {
      const o = {};
      let s;
      if (n.attrs)
        for (s in n.attrs)
          E7.call(n.attrs, s) && (o[Rb(t.schema, s).property] = Ya(
            n.attrs[s]
          ));
      e.data = {
        position: {
          // @ts-expect-error: assume not `undefined`.
          opening: Ya(n.startTag),
          closing: n.endTag ? Ya(n.endTag) : null,
          properties: o
        }
      };
    }
  }
  return i;
}
function Ya(t) {
  const e = i_({
    line: t.startLine,
    column: t.startCol,
    offset: t.startOffset
  }), n = i_({
    line: t.endLine,
    column: t.endCol,
    offset: t.endOffset
  });
  return e || n ? { start: e, end: n } : void 0;
}
function i_(t) {
  return t.line && t.column ? t : void 0;
}
function iQ(t) {
  return "messages" in t;
}
const rQ = {
  abandonedHeadElementChild: {
    reason: "Unexpected metadata element after head",
    description: "Unexpected element after head. Expected the element before `</head>`",
    url: !1
  },
  abruptClosingOfEmptyComment: {
    reason: "Unexpected abruptly closed empty comment",
    description: "Unexpected `>` or `->`. Expected `-->` to close comments"
  },
  abruptDoctypePublicIdentifier: {
    reason: "Unexpected abruptly closed public identifier",
    description: "Unexpected `>`. Expected a closing `\"` or `'` after the public identifier"
  },
  abruptDoctypeSystemIdentifier: {
    reason: "Unexpected abruptly closed system identifier",
    description: "Unexpected `>`. Expected a closing `\"` or `'` after the identifier identifier"
  },
  absenceOfDigitsInNumericCharacterReference: {
    reason: "Unexpected non-digit at start of numeric character reference",
    description: "Unexpected `%c`. Expected `[0-9]` for decimal references or `[0-9a-fA-F]` for hexadecimal references"
  },
  cdataInHtmlContent: {
    reason: "Unexpected CDATA section in HTML",
    description: "Unexpected `<![CDATA[` in HTML. Remove it, use a comment, or encode special characters instead"
  },
  characterReferenceOutsideUnicodeRange: {
    reason: "Unexpected too big numeric character reference",
    description: "Unexpectedly high character reference. Expected character references to be at most hexadecimal 10ffff (or decimal 1114111)"
  },
  closingOfElementWithOpenChildElements: {
    reason: "Unexpected closing tag with open child elements",
    description: "Unexpectedly closing tag. Expected other tags to be closed first",
    url: !1
  },
  controlCharacterInInputStream: {
    reason: "Unexpected control character",
    description: "Unexpected control character `%x`. Expected a non-control code point, 0x00, or ASCII whitespace"
  },
  controlCharacterReference: {
    reason: "Unexpected control character reference",
    description: "Unexpectedly control character in reference. Expected a non-control code point, 0x00, or ASCII whitespace"
  },
  disallowedContentInNoscriptInHead: {
    reason: "Disallowed content inside `<noscript>` in `<head>`",
    description: "Unexpected text character `%c`. Only use text in `<noscript>`s in `<body>`",
    url: !1
  },
  duplicateAttribute: {
    reason: "Unexpected duplicate attribute",
    description: "Unexpectedly double attribute. Expected attributes to occur only once"
  },
  endTagWithAttributes: {
    reason: "Unexpected attribute on closing tag",
    description: "Unexpected attribute. Expected `>` instead"
  },
  endTagWithTrailingSolidus: {
    reason: "Unexpected slash at end of closing tag",
    description: "Unexpected `%c-1`. Expected `>` instead"
  },
  endTagWithoutMatchingOpenElement: {
    reason: "Unexpected unopened end tag",
    description: "Unexpected end tag. Expected no end tag or another end tag",
    url: !1
  },
  eofBeforeTagName: {
    reason: "Unexpected end of file",
    description: "Unexpected end of file. Expected tag name instead"
  },
  eofInCdata: {
    reason: "Unexpected end of file in CDATA",
    description: "Unexpected end of file. Expected `]]>` to close the CDATA"
  },
  eofInComment: {
    reason: "Unexpected end of file in comment",
    description: "Unexpected end of file. Expected `-->` to close the comment"
  },
  eofInDoctype: {
    reason: "Unexpected end of file in doctype",
    description: "Unexpected end of file. Expected a valid doctype (such as `<!doctype html>`)"
  },
  eofInElementThatCanContainOnlyText: {
    reason: "Unexpected end of file in element that can only contain text",
    description: "Unexpected end of file. Expected text or a closing tag",
    url: !1
  },
  eofInScriptHtmlCommentLikeText: {
    reason: "Unexpected end of file in comment inside script",
    description: "Unexpected end of file. Expected `-->` to close the comment"
  },
  eofInTag: {
    reason: "Unexpected end of file in tag",
    description: "Unexpected end of file. Expected `>` to close the tag"
  },
  incorrectlyClosedComment: {
    reason: "Incorrectly closed comment",
    description: "Unexpected `%c-1`. Expected `-->` to close the comment"
  },
  incorrectlyOpenedComment: {
    reason: "Incorrectly opened comment",
    description: "Unexpected `%c`. Expected `<!--` to open the comment"
  },
  invalidCharacterSequenceAfterDoctypeName: {
    reason: "Invalid sequence after doctype name",
    description: "Unexpected sequence at `%c`. Expected `public` or `system`"
  },
  invalidFirstCharacterOfTagName: {
    reason: "Invalid first character in tag name",
    description: "Unexpected `%c`. Expected an ASCII letter instead"
  },
  misplacedDoctype: {
    reason: "Misplaced doctype",
    description: "Unexpected doctype. Expected doctype before head",
    url: !1
  },
  misplacedStartTagForHeadElement: {
    reason: "Misplaced `<head>` start tag",
    description: "Unexpected start tag `<head>`. Expected `<head>` directly after doctype",
    url: !1
  },
  missingAttributeValue: {
    reason: "Missing attribute value",
    description: "Unexpected `%c-1`. Expected an attribute value or no `%c-1` instead"
  },
  missingDoctype: {
    reason: "Missing doctype before other content",
    description: "Expected a `<!doctype html>` before anything else",
    url: !1
  },
  missingDoctypeName: {
    reason: "Missing doctype name",
    description: "Unexpected doctype end at `%c`. Expected `html` instead"
  },
  missingDoctypePublicIdentifier: {
    reason: "Missing public identifier in doctype",
    description: "Unexpected `%c`. Expected identifier for `public` instead"
  },
  missingDoctypeSystemIdentifier: {
    reason: "Missing system identifier in doctype",
    description: 'Unexpected `%c`. Expected identifier for `system` instead (suggested: `"about:legacy-compat"`)'
  },
  missingEndTagName: {
    reason: "Missing name in end tag",
    description: "Unexpected `%c`. Expected an ASCII letter instead"
  },
  missingQuoteBeforeDoctypePublicIdentifier: {
    reason: "Missing quote before public identifier in doctype",
    description: "Unexpected `%c`. Expected `\"` or `'` instead"
  },
  missingQuoteBeforeDoctypeSystemIdentifier: {
    reason: "Missing quote before system identifier in doctype",
    description: "Unexpected `%c`. Expected `\"` or `'` instead"
  },
  missingSemicolonAfterCharacterReference: {
    reason: "Missing semicolon after character reference",
    description: "Unexpected `%c`. Expected `;` instead"
  },
  missingWhitespaceAfterDoctypePublicKeyword: {
    reason: "Missing whitespace after public identifier in doctype",
    description: "Unexpected `%c`. Expected ASCII whitespace instead"
  },
  missingWhitespaceAfterDoctypeSystemKeyword: {
    reason: "Missing whitespace after system identifier in doctype",
    description: "Unexpected `%c`. Expected ASCII whitespace instead"
  },
  missingWhitespaceBeforeDoctypeName: {
    reason: "Missing whitespace before doctype name",
    description: "Unexpected `%c`. Expected ASCII whitespace instead"
  },
  missingWhitespaceBetweenAttributes: {
    reason: "Missing whitespace between attributes",
    description: "Unexpected `%c`. Expected ASCII whitespace instead"
  },
  missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers: {
    reason: "Missing whitespace between public and system identifiers in doctype",
    description: "Unexpected `%c`. Expected ASCII whitespace instead"
  },
  nestedComment: {
    reason: "Unexpected nested comment",
    description: "Unexpected `<!--`. Expected `-->`"
  },
  nestedNoscriptInHead: {
    reason: "Unexpected nested `<noscript>` in `<head>`",
    description: "Unexpected `<noscript>`. Expected a closing tag or a meta element",
    url: !1
  },
  nonConformingDoctype: {
    reason: "Unexpected non-conforming doctype declaration",
    description: 'Expected `<!doctype html>` or `<!doctype html system "about:legacy-compat">`',
    url: !1
  },
  nonVoidHtmlElementStartTagWithTrailingSolidus: {
    reason: "Unexpected trailing slash on start tag of non-void element",
    description: "Unexpected `/`. Expected `>` instead"
  },
  noncharacterCharacterReference: {
    reason: "Unexpected noncharacter code point referenced by character reference",
    description: "Unexpected code point. Do not use noncharacters in HTML"
  },
  noncharacterInInputStream: {
    reason: "Unexpected noncharacter character",
    description: "Unexpected code point `%x`. Do not use noncharacters in HTML"
  },
  nullCharacterReference: {
    reason: "Unexpected NULL character referenced by character reference",
    description: "Unexpected code point. Do not use NULL characters in HTML"
  },
  openElementsLeftAfterEof: {
    reason: "Unexpected end of file",
    description: "Unexpected end of file. Expected closing tag instead",
    url: !1
  },
  surrogateCharacterReference: {
    reason: "Unexpected surrogate character referenced by character reference",
    description: "Unexpected code point. Do not use lone surrogate characters in HTML"
  },
  surrogateInInputStream: {
    reason: "Unexpected surrogate character",
    description: "Unexpected code point `%x`. Do not use lone surrogate characters in HTML"
  },
  unexpectedCharacterAfterDoctypeSystemIdentifier: {
    reason: "Invalid character after system identifier in doctype",
    description: "Unexpected character at `%c`. Expected `>`"
  },
  unexpectedCharacterInAttributeName: {
    reason: "Unexpected character in attribute name",
    description: "Unexpected `%c`. Expected whitespace, `/`, `>`, `=`, or probably an ASCII letter"
  },
  unexpectedCharacterInUnquotedAttributeValue: {
    reason: "Unexpected character in unquoted attribute value",
    description: "Unexpected `%c`. Quote the attribute value to include it"
  },
  unexpectedEqualsSignBeforeAttributeName: {
    reason: "Unexpected equals sign before attribute name",
    description: "Unexpected `%c`. Add an attribute name before it"
  },
  unexpectedNullCharacter: {
    reason: "Unexpected NULL character",
    description: "Unexpected code point `%x`. Do not use NULL characters in HTML"
  },
  unexpectedQuestionMarkInsteadOfTagName: {
    reason: "Unexpected question mark instead of tag name",
    description: "Unexpected `%c`. Expected an ASCII letter instead"
  },
  unexpectedSolidusInTag: {
    reason: "Unexpected slash in tag",
    description: "Unexpected `%c-1`. Expected it followed by `>` or in a quoted attribute value"
  },
  unknownNamedCharacterReference: {
    reason: "Unexpected unknown named character reference",
    description: "Unexpected character reference. Expected known named character references"
  }
}, oQ = "https://html.spec.whatwg.org/multipage/parsing.html#parse-error-", sQ = { 2: !0, 1: !1, 0: null };
function aQ(t) {
  const e = (
    /** @type {Options} */
    this.data("settings")
  ), n = Object.assign({}, e, t);
  Object.assign(this, { Parser: i });
  function i(r, o) {
    const s = n.fragment ? "parseFragment" : "parse", a = n.emitParseErrors ? c : null, l = new LX({
      sourceCodeLocationInfo: !0,
      onParseError: a,
      scriptingEnabled: !1
    });
    return eQ(l[s](r), {
      space: n.space,
      file: o,
      verbose: n.verbose
    });
    function c(f) {
      const d = f.code, u = lQ(d), h = n[u], p = h ?? !0, m = typeof p == "number" ? p : p ? 1 : 0, v = {
        line: f.startLine,
        column: f.startCol,
        offset: f.startOffset
      }, y = {
        line: f.endLine,
        column: f.endCol,
        offset: f.endOffset
      };
      if (m) {
        const k = rQ[u] || { reason: "", description: "", url: "" }, _ = o.message(C(k.reason), { start: v, end: y });
        _.source = "parse-error", _.ruleId = d, _.fatal = sQ[m], _.note = C(k.description), _.url = "url" in k && k.url === !1 ? null : oQ + d;
      }
      function C(k) {
        return k.replace(/%c(?:-(\d+))?/g, (_, S) => {
          const E = S ? -Number.parseInt(S, 10) : 0, x = r.charAt(f.startOffset + E);
          return x === "`" ? "` ` `" : x;
        }).replace(
          /%x/g,
          () => "0x" + r.charCodeAt(f.startOffset).toString(16).toUpperCase()
        );
      }
    }
  }
}
function lQ(t) {
  return t.replace(/-[a-z]/g, (e) => e.charAt(1).toUpperCase());
}
const cQ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: aQ
}, Symbol.toStringTag, { value: "Module" })), fQ = [
  "area",
  "base",
  "basefont",
  "bgsound",
  "br",
  "col",
  "command",
  "embed",
  "frame",
  "hr",
  "image",
  "img",
  "input",
  "isindex",
  "keygen",
  "link",
  "menuitem",
  "meta",
  "nextid",
  "param",
  "source",
  "track",
  "wbr"
], r_ = {}.hasOwnProperty;
function C7(t, e) {
  const n = e || {};
  function i(r, ...o) {
    let s = i.invalid;
    const a = i.handlers;
    if (r && r_.call(r, t)) {
      const l = String(r[t]);
      s = r_.call(a, l) ? a[l] : i.unknown;
    }
    if (s)
      return s.call(this, r, ...o);
  }
  return i.handlers = n.handlers || {}, i.invalid = n.invalid, i.unknown = n.unknown, i;
}
const dQ = /["&'<>`]/g, uQ = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g, hQ = (
  // eslint-disable-next-line no-control-regex, unicorn/no-hex-escape
  /[\x01-\t\v\f\x0E-\x1F\x7F\x81\x8D\x8F\x90\x9D\xA0-\uFFFF]/g
), pQ = /[|\\{}()[\]^$+*?.]/g, o_ = /* @__PURE__ */ new WeakMap();
function mQ(t, e) {
  if (t = t.replace(
    e.subset ? gQ(e.subset) : dQ,
    i
  ), e.subset || e.escapeOnly)
    return t;
  return t.replace(uQ, n).replace(hQ, i);
  function n(r, o, s) {
    return e.format(
      (r.charCodeAt(0) - 55296) * 1024 + r.charCodeAt(1) - 56320 + 65536,
      s.charCodeAt(o + 2),
      e
    );
  }
  function i(r, o, s) {
    return e.format(
      r.charCodeAt(0),
      s.charCodeAt(o + 1),
      e
    );
  }
}
function gQ(t) {
  let e = o_.get(t);
  return e || (e = yQ(t), o_.set(t, e)), e;
}
function yQ(t) {
  const e = [];
  let n = -1;
  for (; ++n < t.length; )
    e.push(t[n].replace(pQ, "\\$&"));
  return new RegExp("(?:" + e.join("|") + ")", "g");
}
const vQ = /[\dA-Fa-f]/;
function bQ(t, e, n) {
  const i = "&#x" + t.toString(16).toUpperCase();
  return n && e && !vQ.test(String.fromCharCode(e)) ? i : i + ";";
}
const kQ = /\d/;
function wQ(t, e, n) {
  const i = "&#" + String(t);
  return n && e && !kQ.test(String.fromCharCode(e)) ? i : i + ";";
}
const _Q = [
  "AElig",
  "AMP",
  "Aacute",
  "Acirc",
  "Agrave",
  "Aring",
  "Atilde",
  "Auml",
  "COPY",
  "Ccedil",
  "ETH",
  "Eacute",
  "Ecirc",
  "Egrave",
  "Euml",
  "GT",
  "Iacute",
  "Icirc",
  "Igrave",
  "Iuml",
  "LT",
  "Ntilde",
  "Oacute",
  "Ocirc",
  "Ograve",
  "Oslash",
  "Otilde",
  "Ouml",
  "QUOT",
  "REG",
  "THORN",
  "Uacute",
  "Ucirc",
  "Ugrave",
  "Uuml",
  "Yacute",
  "aacute",
  "acirc",
  "acute",
  "aelig",
  "agrave",
  "amp",
  "aring",
  "atilde",
  "auml",
  "brvbar",
  "ccedil",
  "cedil",
  "cent",
  "copy",
  "curren",
  "deg",
  "divide",
  "eacute",
  "ecirc",
  "egrave",
  "eth",
  "euml",
  "frac12",
  "frac14",
  "frac34",
  "gt",
  "iacute",
  "icirc",
  "iexcl",
  "igrave",
  "iquest",
  "iuml",
  "laquo",
  "lt",
  "macr",
  "micro",
  "middot",
  "nbsp",
  "not",
  "ntilde",
  "oacute",
  "ocirc",
  "ograve",
  "ordf",
  "ordm",
  "oslash",
  "otilde",
  "ouml",
  "para",
  "plusmn",
  "pound",
  "quot",
  "raquo",
  "reg",
  "sect",
  "shy",
  "sup1",
  "sup2",
  "sup3",
  "szlig",
  "thorn",
  "times",
  "uacute",
  "ucirc",
  "ugrave",
  "uml",
  "uuml",
  "yacute",
  "yen",
  "yuml"
], Xm = {
  nbsp: " ",
  iexcl: "¡",
  cent: "¢",
  pound: "£",
  curren: "¤",
  yen: "¥",
  brvbar: "¦",
  sect: "§",
  uml: "¨",
  copy: "©",
  ordf: "ª",
  laquo: "«",
  not: "¬",
  shy: "­",
  reg: "®",
  macr: "¯",
  deg: "°",
  plusmn: "±",
  sup2: "²",
  sup3: "³",
  acute: "´",
  micro: "µ",
  para: "¶",
  middot: "·",
  cedil: "¸",
  sup1: "¹",
  ordm: "º",
  raquo: "»",
  frac14: "¼",
  frac12: "½",
  frac34: "¾",
  iquest: "¿",
  Agrave: "À",
  Aacute: "Á",
  Acirc: "Â",
  Atilde: "Ã",
  Auml: "Ä",
  Aring: "Å",
  AElig: "Æ",
  Ccedil: "Ç",
  Egrave: "È",
  Eacute: "É",
  Ecirc: "Ê",
  Euml: "Ë",
  Igrave: "Ì",
  Iacute: "Í",
  Icirc: "Î",
  Iuml: "Ï",
  ETH: "Ð",
  Ntilde: "Ñ",
  Ograve: "Ò",
  Oacute: "Ó",
  Ocirc: "Ô",
  Otilde: "Õ",
  Ouml: "Ö",
  times: "×",
  Oslash: "Ø",
  Ugrave: "Ù",
  Uacute: "Ú",
  Ucirc: "Û",
  Uuml: "Ü",
  Yacute: "Ý",
  THORN: "Þ",
  szlig: "ß",
  agrave: "à",
  aacute: "á",
  acirc: "â",
  atilde: "ã",
  auml: "ä",
  aring: "å",
  aelig: "æ",
  ccedil: "ç",
  egrave: "è",
  eacute: "é",
  ecirc: "ê",
  euml: "ë",
  igrave: "ì",
  iacute: "í",
  icirc: "î",
  iuml: "ï",
  eth: "ð",
  ntilde: "ñ",
  ograve: "ò",
  oacute: "ó",
  ocirc: "ô",
  otilde: "õ",
  ouml: "ö",
  divide: "÷",
  oslash: "ø",
  ugrave: "ù",
  uacute: "ú",
  ucirc: "û",
  uuml: "ü",
  yacute: "ý",
  thorn: "þ",
  yuml: "ÿ",
  fnof: "ƒ",
  Alpha: "Α",
  Beta: "Β",
  Gamma: "Γ",
  Delta: "Δ",
  Epsilon: "Ε",
  Zeta: "Ζ",
  Eta: "Η",
  Theta: "Θ",
  Iota: "Ι",
  Kappa: "Κ",
  Lambda: "Λ",
  Mu: "Μ",
  Nu: "Ν",
  Xi: "Ξ",
  Omicron: "Ο",
  Pi: "Π",
  Rho: "Ρ",
  Sigma: "Σ",
  Tau: "Τ",
  Upsilon: "Υ",
  Phi: "Φ",
  Chi: "Χ",
  Psi: "Ψ",
  Omega: "Ω",
  alpha: "α",
  beta: "β",
  gamma: "γ",
  delta: "δ",
  epsilon: "ε",
  zeta: "ζ",
  eta: "η",
  theta: "θ",
  iota: "ι",
  kappa: "κ",
  lambda: "λ",
  mu: "μ",
  nu: "ν",
  xi: "ξ",
  omicron: "ο",
  pi: "π",
  rho: "ρ",
  sigmaf: "ς",
  sigma: "σ",
  tau: "τ",
  upsilon: "υ",
  phi: "φ",
  chi: "χ",
  psi: "ψ",
  omega: "ω",
  thetasym: "ϑ",
  upsih: "ϒ",
  piv: "ϖ",
  bull: "•",
  hellip: "…",
  prime: "′",
  Prime: "″",
  oline: "‾",
  frasl: "⁄",
  weierp: "℘",
  image: "ℑ",
  real: "ℜ",
  trade: "™",
  alefsym: "ℵ",
  larr: "←",
  uarr: "↑",
  rarr: "→",
  darr: "↓",
  harr: "↔",
  crarr: "↵",
  lArr: "⇐",
  uArr: "⇑",
  rArr: "⇒",
  dArr: "⇓",
  hArr: "⇔",
  forall: "∀",
  part: "∂",
  exist: "∃",
  empty: "∅",
  nabla: "∇",
  isin: "∈",
  notin: "∉",
  ni: "∋",
  prod: "∏",
  sum: "∑",
  minus: "−",
  lowast: "∗",
  radic: "√",
  prop: "∝",
  infin: "∞",
  ang: "∠",
  and: "∧",
  or: "∨",
  cap: "∩",
  cup: "∪",
  int: "∫",
  there4: "∴",
  sim: "∼",
  cong: "≅",
  asymp: "≈",
  ne: "≠",
  equiv: "≡",
  le: "≤",
  ge: "≥",
  sub: "⊂",
  sup: "⊃",
  nsub: "⊄",
  sube: "⊆",
  supe: "⊇",
  oplus: "⊕",
  otimes: "⊗",
  perp: "⊥",
  sdot: "⋅",
  lceil: "⌈",
  rceil: "⌉",
  lfloor: "⌊",
  rfloor: "⌋",
  lang: "〈",
  rang: "〉",
  loz: "◊",
  spades: "♠",
  clubs: "♣",
  hearts: "♥",
  diams: "♦",
  quot: '"',
  amp: "&",
  lt: "<",
  gt: ">",
  OElig: "Œ",
  oelig: "œ",
  Scaron: "Š",
  scaron: "š",
  Yuml: "Ÿ",
  circ: "ˆ",
  tilde: "˜",
  ensp: " ",
  emsp: " ",
  thinsp: " ",
  zwnj: "‌",
  zwj: "‍",
  lrm: "‎",
  rlm: "‏",
  ndash: "–",
  mdash: "—",
  lsquo: "‘",
  rsquo: "’",
  sbquo: "‚",
  ldquo: "“",
  rdquo: "”",
  bdquo: "„",
  dagger: "†",
  Dagger: "‡",
  permil: "‰",
  lsaquo: "‹",
  rsaquo: "›",
  euro: "€"
}, EQ = [
  "cent",
  "copy",
  "divide",
  "gt",
  "lt",
  "not",
  "para",
  "times"
], S7 = {}.hasOwnProperty, Ug = {};
let Vd;
for (Vd in Xm)
  S7.call(Xm, Vd) && (Ug[Xm[Vd]] = Vd);
const TQ = /[^\dA-Za-z]/;
function CQ(t, e, n, i) {
  const r = String.fromCharCode(t);
  if (S7.call(Ug, r)) {
    const o = Ug[r], s = "&" + o;
    return n && _Q.includes(o) && !EQ.includes(o) && (!i || e && e !== 61 && TQ.test(String.fromCharCode(e))) ? s : s + ";";
  }
  return "";
}
function SQ(t, e, n) {
  let i = bQ(t, e, n.omitOptionalSemicolons), r;
  if ((n.useNamedReferences || n.useShortestReferences) && (r = CQ(
    t,
    e,
    n.omitOptionalSemicolons,
    n.attribute
  )), (n.useShortestReferences || !r) && n.useShortestReferences) {
    const o = wQ(t, e, n.omitOptionalSemicolons);
    o.length < i.length && (i = o);
  }
  return r && (!n.useShortestReferences || r.length < i.length) ? r : i;
}
function cl(t, e) {
  return mQ(t, Object.assign({ format: SQ }, e));
}
function xQ(t, e, n, i) {
  return i.settings.bogusComments ? "<?" + cl(
    t.value,
    Object.assign({}, i.settings.characterReferences, { subset: [">"] })
  ) + ">" : "<!--" + t.value.replace(/^>|^->|<!--|-->|--!>|<!-$/g, r) + "-->";
  function r(o) {
    return cl(
      o,
      Object.assign({}, i.settings.characterReferences, {
        subset: ["<", ">"]
      })
    );
  }
}
function AQ(t, e, n, i) {
  return "<!" + (i.settings.upperDoctype ? "DOCTYPE" : "doctype") + (i.settings.tightDoctype ? "" : " ") + "html>";
}
function q1(t, e) {
  const n = String(t);
  if (typeof e != "string")
    throw new TypeError("Expected character");
  let i = 0, r = n.indexOf(e);
  for (; r !== -1; )
    i++, r = n.indexOf(e, r + e.length);
  return i;
}
function Lb(t) {
  const e = (
    // @ts-expect-error looks like a node.
    t && typeof t == "object" && t.type === "text" ? (
      // @ts-expect-error looks like a text.
      t.value || ""
    ) : t
  );
  return typeof e == "string" && e.replace(/[ \t\n\f\r]/g, "") === "";
}
const hn = A7(1), x7 = A7(-1);
function A7(t) {
  return e;
  function e(n, i, r) {
    const o = n ? n.children : [];
    let s = (i || 0) + t, a = o && o[s];
    if (!r)
      for (; a && Lb(a); )
        s += t, a = o[s];
    return a;
  }
}
const MQ = {}.hasOwnProperty;
function M7(t) {
  return e;
  function e(n, i, r) {
    return MQ.call(t, n.tagName) && t[n.tagName](n, i, r);
  }
}
const Db = M7({
  html: NQ,
  head: Qm,
  body: OQ,
  p: RQ,
  li: IQ,
  dt: LQ,
  dd: DQ,
  rt: s_,
  rp: s_,
  optgroup: PQ,
  option: FQ,
  menuitem: BQ,
  colgroup: Qm,
  caption: Qm,
  thead: HQ,
  tbody: $Q,
  tfoot: jQ,
  tr: zQ,
  td: a_,
  th: a_
});
function Qm(t, e, n) {
  const i = hn(n, e, !0);
  return !i || i.type !== "comment" && !(i.type === "text" && Lb(i.value.charAt(0)));
}
function NQ(t, e, n) {
  const i = hn(n, e);
  return !i || i.type !== "comment";
}
function OQ(t, e, n) {
  const i = hn(n, e);
  return !i || i.type !== "comment";
}
function RQ(t, e, n) {
  const i = hn(n, e);
  return i ? i.type === "element" && (i.tagName === "address" || i.tagName === "article" || i.tagName === "aside" || i.tagName === "blockquote" || i.tagName === "details" || i.tagName === "div" || i.tagName === "dl" || i.tagName === "fieldset" || i.tagName === "figcaption" || i.tagName === "figure" || i.tagName === "footer" || i.tagName === "form" || i.tagName === "h1" || i.tagName === "h2" || i.tagName === "h3" || i.tagName === "h4" || i.tagName === "h5" || i.tagName === "h6" || i.tagName === "header" || i.tagName === "hgroup" || i.tagName === "hr" || i.tagName === "main" || i.tagName === "menu" || i.tagName === "nav" || i.tagName === "ol" || i.tagName === "p" || i.tagName === "pre" || i.tagName === "section" || i.tagName === "table" || i.tagName === "ul") : !n || // Confusing parent.
  !(n.type === "element" && (n.tagName === "a" || n.tagName === "audio" || n.tagName === "del" || n.tagName === "ins" || n.tagName === "map" || n.tagName === "noscript" || n.tagName === "video"));
}
function IQ(t, e, n) {
  const i = hn(n, e);
  return !i || i.type === "element" && i.tagName === "li";
}
function LQ(t, e, n) {
  const i = hn(n, e);
  return i && i.type === "element" && (i.tagName === "dt" || i.tagName === "dd");
}
function DQ(t, e, n) {
  const i = hn(n, e);
  return !i || i.type === "element" && (i.tagName === "dt" || i.tagName === "dd");
}
function s_(t, e, n) {
  const i = hn(n, e);
  return !i || i.type === "element" && (i.tagName === "rp" || i.tagName === "rt");
}
function PQ(t, e, n) {
  const i = hn(n, e);
  return !i || i.type === "element" && i.tagName === "optgroup";
}
function FQ(t, e, n) {
  const i = hn(n, e);
  return !i || i.type === "element" && (i.tagName === "option" || i.tagName === "optgroup");
}
function BQ(t, e, n) {
  const i = hn(n, e);
  return !i || i.type === "element" && (i.tagName === "menuitem" || i.tagName === "hr" || i.tagName === "menu");
}
function HQ(t, e, n) {
  const i = hn(n, e);
  return i && i.type === "element" && (i.tagName === "tbody" || i.tagName === "tfoot");
}
function $Q(t, e, n) {
  const i = hn(n, e);
  return !i || i.type === "element" && (i.tagName === "tbody" || i.tagName === "tfoot");
}
function jQ(t, e, n) {
  return !hn(n, e);
}
function zQ(t, e, n) {
  const i = hn(n, e);
  return !i || i.type === "element" && i.tagName === "tr";
}
function a_(t, e, n) {
  const i = hn(n, e);
  return !i || i.type === "element" && (i.tagName === "td" || i.tagName === "th");
}
const UQ = M7({
  html: VQ,
  head: WQ,
  body: qQ,
  colgroup: GQ,
  tbody: KQ
});
function VQ(t) {
  const e = hn(t, -1);
  return !e || e.type !== "comment";
}
function WQ(t) {
  const e = t.children, n = [];
  let i = -1;
  for (; ++i < e.length; ) {
    const r = e[i];
    if (r.type === "element" && (r.tagName === "title" || r.tagName === "base")) {
      if (n.includes(r.tagName)) return !1;
      n.push(r.tagName);
    }
  }
  return e.length > 0;
}
function qQ(t) {
  const e = hn(t, -1, !0);
  return !e || e.type !== "comment" && !(e.type === "text" && Lb(e.value.charAt(0))) && !(e.type === "element" && (e.tagName === "meta" || e.tagName === "link" || e.tagName === "script" || e.tagName === "style" || e.tagName === "template"));
}
function GQ(t, e, n) {
  const i = x7(n, e), r = hn(t, -1, !0);
  return n && i && i.type === "element" && i.tagName === "colgroup" && Db(i, n.children.indexOf(i), n) ? !1 : r && r.type === "element" && r.tagName === "col";
}
function KQ(t, e, n) {
  const i = x7(n, e), r = hn(t, -1);
  return n && i && i.type === "element" && (i.tagName === "thead" || i.tagName === "tbody") && Db(i, n.children.indexOf(i), n) ? !1 : r && r.type === "element" && r.tagName === "tr";
}
const Wd = {
  // See: <https://html.spec.whatwg.org/#attribute-name-state>.
  name: [
    [`	
\f\r &/=>`.split(""), `	
\f\r "&'/=>\``.split("")],
    [`\0	
\f\r "&'/<=>`.split(""), `\0	
\f\r "&'/<=>\``.split("")]
  ],
  // See: <https://html.spec.whatwg.org/#attribute-value-(unquoted)-state>.
  unquoted: [
    [`	
\f\r &>`.split(""), `\0	
\f\r "&'<=>\``.split("")],
    [`\0	
\f\r "&'<=>\``.split(""), `\0	
\f\r "&'<=>\``.split("")]
  ],
  // See: <https://html.spec.whatwg.org/#attribute-value-(single-quoted)-state>.
  single: [
    ["&'".split(""), "\"&'`".split("")],
    ["\0&'".split(""), "\0\"&'`".split("")]
  ],
  // See: <https://html.spec.whatwg.org/#attribute-value-(double-quoted)-state>.
  double: [
    ['"&'.split(""), "\"&'`".split("")],
    ['\0"&'.split(""), "\0\"&'`".split("")]
  ]
};
function YQ(t, e, n, i) {
  const r = i.schema, o = r.space === "svg" ? !1 : i.settings.omitOptionalTags;
  let s = r.space === "svg" ? i.settings.closeEmptyElements : i.settings.voids.includes(t.tagName.toLowerCase());
  const a = [];
  let l;
  r.space === "html" && t.tagName === "svg" && (i.schema = qf);
  const c = JQ(i, t.properties), f = i.all(
    r.space === "html" && t.tagName === "template" ? t.content : t
  );
  return i.schema = r, f && (s = !1), (c || !o || !UQ(t, e, n)) && (a.push("<", t.tagName, c ? " " + c : ""), s && (r.space === "svg" || i.settings.closeSelfClosing) && (l = c.charAt(c.length - 1), (!i.settings.tightSelfClosing || l === "/" || l && l !== '"' && l !== "'") && a.push(" "), a.push("/")), a.push(">")), a.push(f), !s && (!o || !Db(t, e, n)) && a.push("</" + t.tagName + ">"), a.join("");
}
function JQ(t, e) {
  const n = [];
  let i = -1, r;
  if (e) {
    for (r in e)
      if (e[r] !== void 0 && e[r] !== null) {
        const o = XQ(t, r, e[r]);
        o && n.push(o);
      }
  }
  for (; ++i < n.length; ) {
    const o = t.settings.tightAttributes ? n[i].charAt(n[i].length - 1) : null;
    i !== n.length - 1 && o !== '"' && o !== "'" && (n[i] += " ");
  }
  return n.join("");
}
function XQ(t, e, n) {
  const i = Rb(t.schema, e), r = t.settings.allowParseErrors && t.schema.space === "html" ? 0 : 1, o = t.settings.allowDangerousCharacters ? 0 : 1;
  let s = t.quote, a;
  if (i.overloadedBoolean && (n === i.attribute || n === "") ? n = !0 : (i.boolean || i.overloadedBoolean && typeof n != "string") && (n = !!n), n == null || n === !1 || typeof n == "number" && Number.isNaN(n))
    return "";
  const l = cl(
    i.attribute,
    Object.assign({}, t.settings.characterReferences, {
      // Always encode without parse errors in non-HTML.
      subset: Wd.name[r][o]
    })
  );
  return n === !0 || (n = Array.isArray(n) ? (i.commaSeparated ? WX : VX)(n, {
    padLeft: !t.settings.tightCommaSeparatedLists
  }) : String(n), t.settings.collapseEmptyAttributes && !n) ? l : (t.settings.preferUnquoted && (a = cl(
    n,
    Object.assign({}, t.settings.characterReferences, {
      subset: Wd.unquoted[r][o],
      attribute: !0
    })
  )), a !== n && (t.settings.quoteSmart && q1(n, s) > q1(n, t.alternative) && (s = t.alternative), a = s + cl(
    n,
    Object.assign({}, t.settings.characterReferences, {
      // Always encode without parse errors in non-HTML.
      subset: (s === "'" ? Wd.single : Wd.double)[r][o],
      attribute: !0
    })
  ) + s), l + (a && "=" + a));
}
function N7(t, e, n, i) {
  return n && n.type === "element" && (n.tagName === "script" || n.tagName === "style") ? t.value : cl(
    t.value,
    Object.assign({}, i.settings.characterReferences, {
      subset: ["<", "&"]
    })
  );
}
function QQ(t, e, n, i) {
  return i.settings.allowDangerousHtml ? t.value : N7(t, e, n, i);
}
function ZQ(t, e, n, i) {
  return i.all(t);
}
const eZ = C7("type", {
  invalid: tZ,
  unknown: nZ,
  handlers: { comment: xQ, doctype: AQ, element: YQ, raw: QQ, root: ZQ, text: N7 }
});
function tZ(t) {
  throw new Error("Expected node, not `" + t + "`");
}
function nZ(t) {
  throw new Error("Cannot compile unknown node `" + t.type + "`");
}
function iZ(t, e) {
  const n = e || {}, i = n.quote || '"', r = i === '"' ? "'" : '"';
  if (i !== '"' && i !== "'")
    throw new Error("Invalid quote `" + i + "`, expected `'` or `\"`");
  return {
    one: rZ,
    all: oZ,
    settings: {
      omitOptionalTags: n.omitOptionalTags || !1,
      allowParseErrors: n.allowParseErrors || !1,
      allowDangerousCharacters: n.allowDangerousCharacters || !1,
      quoteSmart: n.quoteSmart || !1,
      preferUnquoted: n.preferUnquoted || !1,
      tightAttributes: n.tightAttributes || !1,
      upperDoctype: n.upperDoctype || !1,
      tightDoctype: n.tightDoctype || !1,
      bogusComments: n.bogusComments || !1,
      tightCommaSeparatedLists: n.tightCommaSeparatedLists || !1,
      tightSelfClosing: n.tightSelfClosing || !1,
      collapseEmptyAttributes: n.collapseEmptyAttributes || !1,
      allowDangerousHtml: n.allowDangerousHtml || !1,
      voids: n.voids || fQ,
      characterReferences: n.characterReferences || n.entities || {},
      closeSelfClosing: n.closeSelfClosing || !1,
      closeEmptyElements: n.closeEmptyElements || !1
    },
    schema: n.space === "svg" ? qf : gp,
    quote: i,
    alternative: r
  }.one(
    Array.isArray(t) ? { type: "root", children: t } : t,
    void 0,
    void 0
  );
}
function rZ(t, e, n) {
  return eZ(t, e, n, this);
}
function oZ(t) {
  const e = [], n = t && t.children || [];
  let i = -1;
  for (; ++i < n.length; )
    e[i] = this.one(n[i], i, t);
  return e.join("");
}
function sZ(t) {
  const e = (
    /** @type {Options} */
    this.data("settings")
  ), n = Object.assign({}, e, t);
  Object.assign(this, { Compiler: i });
  function i(r) {
    return iZ(r, n);
  }
}
const aZ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: sZ
}, Symbol.toStringTag, { value: "Module" }));
function l_(t) {
  if (t)
    throw t;
}
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
var lZ = function(e) {
  return e != null && e.constructor != null && typeof e.constructor.isBuffer == "function" && e.constructor.isBuffer(e);
};
const O7 = /* @__PURE__ */ oh(lZ);
var vu = Object.prototype.hasOwnProperty, R7 = Object.prototype.toString, c_ = Object.defineProperty, f_ = Object.getOwnPropertyDescriptor, d_ = function(e) {
  return typeof Array.isArray == "function" ? Array.isArray(e) : R7.call(e) === "[object Array]";
}, u_ = function(e) {
  if (!e || R7.call(e) !== "[object Object]")
    return !1;
  var n = vu.call(e, "constructor"), i = e.constructor && e.constructor.prototype && vu.call(e.constructor.prototype, "isPrototypeOf");
  if (e.constructor && !n && !i)
    return !1;
  var r;
  for (r in e)
    ;
  return typeof r > "u" || vu.call(e, r);
}, h_ = function(e, n) {
  c_ && n.name === "__proto__" ? c_(e, n.name, {
    enumerable: !0,
    configurable: !0,
    value: n.newValue,
    writable: !0
  }) : e[n.name] = n.newValue;
}, p_ = function(e, n) {
  if (n === "__proto__")
    if (vu.call(e, n)) {
      if (f_)
        return f_(e, n).value;
    } else return;
  return e[n];
}, cZ = function t() {
  var e, n, i, r, o, s, a = arguments[0], l = 1, c = arguments.length, f = !1;
  for (typeof a == "boolean" && (f = a, a = arguments[1] || {}, l = 2), (a == null || typeof a != "object" && typeof a != "function") && (a = {}); l < c; ++l)
    if (e = arguments[l], e != null)
      for (n in e)
        i = p_(a, n), r = p_(e, n), a !== r && (f && r && (u_(r) || (o = d_(r))) ? (o ? (o = !1, s = i && d_(i) ? i : []) : s = i && u_(i) ? i : {}, h_(a, { name: n, newValue: t(f, s, r) })) : typeof r < "u" && h_(a, { name: n, newValue: r }));
  return a;
};
const G1 = /* @__PURE__ */ oh(cZ);
function Vg(t) {
  if (typeof t != "object" || t === null)
    return !1;
  const e = Object.getPrototypeOf(t);
  return (e === null || e === Object.prototype || Object.getPrototypeOf(e) === null) && !(Symbol.toStringTag in t) && !(Symbol.iterator in t);
}
function fZ() {
  const t = [], e = { run: n, use: i };
  return e;
  function n(...r) {
    let o = -1;
    const s = r.pop();
    if (typeof s != "function")
      throw new TypeError("Expected function as last argument, not " + s);
    a(null, ...r);
    function a(l, ...c) {
      const f = t[++o];
      let d = -1;
      if (l) {
        s(l);
        return;
      }
      for (; ++d < r.length; )
        (c[d] === null || c[d] === void 0) && (c[d] = r[d]);
      r = c, f ? dZ(f, a)(...c) : s(null, ...c);
    }
  }
  function i(r) {
    if (typeof r != "function")
      throw new TypeError(
        "Expected `middelware` to be a function, not " + r
      );
    return t.push(r), e;
  }
}
function dZ(t, e) {
  let n;
  return i;
  function i(...s) {
    const a = t.length > s.length;
    let l;
    a && s.push(r);
    try {
      l = t.apply(this, s);
    } catch (c) {
      const f = (
        /** @type {Error} */
        c
      );
      if (a && n)
        throw f;
      return r(f);
    }
    a || (l && l.then && typeof l.then == "function" ? l.then(o, r) : l instanceof Error ? r(l) : o(l));
  }
  function r(s, ...a) {
    n || (n = !0, e(s, ...a));
  }
  function o(s) {
    r(null, s);
  }
}
function Uc(t) {
  return !t || typeof t != "object" ? "" : "position" in t || "type" in t ? m_(t.position) : "start" in t || "end" in t ? m_(t) : "line" in t || "column" in t ? Wg(t) : "";
}
function Wg(t) {
  return g_(t && t.line) + ":" + g_(t && t.column);
}
function m_(t) {
  return Wg(t && t.start) + "-" + Wg(t && t.end);
}
function g_(t) {
  return t && typeof t == "number" ? t : 1;
}
class Ui extends Error {
  /**
   * Create a message for `reason` at `place` from `origin`.
   *
   * When an error is passed in as `reason`, the `stack` is copied.
   *
   * @param {string | Error | VFileMessage} reason
   *   Reason for message, uses the stack and message of the error if given.
   *
   *   > 👉 **Note**: you should use markdown.
   * @param {Node | NodeLike | Position | Point | null | undefined} [place]
   *   Place in file where the message occurred.
   * @param {string | null | undefined} [origin]
   *   Place in code where the message originates (example:
   *   `'my-package:my-rule'` or `'my-rule'`).
   * @returns
   *   Instance of `VFileMessage`.
   */
  // To do: next major: expose `undefined` everywhere instead of `null`.
  constructor(e, n, i) {
    const r = [null, null];
    let o = {
      // @ts-expect-error: we always follows the structure of `position`.
      start: { line: null, column: null },
      // @ts-expect-error: "
      end: { line: null, column: null }
    };
    if (super(), typeof n == "string" && (i = n, n = void 0), typeof i == "string") {
      const s = i.indexOf(":");
      s === -1 ? r[1] = i : (r[0] = i.slice(0, s), r[1] = i.slice(s + 1));
    }
    n && ("type" in n || "position" in n ? n.position && (o = n.position) : "start" in n || "end" in n ? o = n : ("line" in n || "column" in n) && (o.start = n)), this.name = Uc(n) || "1:1", this.message = typeof e == "object" ? e.message : e, this.stack = "", typeof e == "object" && e.stack && (this.stack = e.stack), this.reason = this.message, this.fatal, this.line = o.start.line, this.column = o.start.column, this.position = o, this.source = r[0], this.ruleId = r[1], this.file, this.actual, this.expected, this.url, this.note;
  }
}
Ui.prototype.file = "";
Ui.prototype.name = "";
Ui.prototype.reason = "";
Ui.prototype.message = "";
Ui.prototype.stack = "";
Ui.prototype.fatal = null;
Ui.prototype.column = null;
Ui.prototype.line = null;
Ui.prototype.source = null;
Ui.prototype.ruleId = null;
Ui.prototype.position = null;
const _r = { basename: uZ, dirname: hZ, extname: pZ, join: mZ, sep: "/" };
function uZ(t, e) {
  if (e !== void 0 && typeof e != "string")
    throw new TypeError('"ext" argument must be a string');
  Gf(t);
  let n = 0, i = -1, r = t.length, o;
  if (e === void 0 || e.length === 0 || e.length > t.length) {
    for (; r--; )
      if (t.charCodeAt(r) === 47) {
        if (o) {
          n = r + 1;
          break;
        }
      } else i < 0 && (o = !0, i = r + 1);
    return i < 0 ? "" : t.slice(n, i);
  }
  if (e === t)
    return "";
  let s = -1, a = e.length - 1;
  for (; r--; )
    if (t.charCodeAt(r) === 47) {
      if (o) {
        n = r + 1;
        break;
      }
    } else
      s < 0 && (o = !0, s = r + 1), a > -1 && (t.charCodeAt(r) === e.charCodeAt(a--) ? a < 0 && (i = r) : (a = -1, i = s));
  return n === i ? i = s : i < 0 && (i = t.length), t.slice(n, i);
}
function hZ(t) {
  if (Gf(t), t.length === 0)
    return ".";
  let e = -1, n = t.length, i;
  for (; --n; )
    if (t.charCodeAt(n) === 47) {
      if (i) {
        e = n;
        break;
      }
    } else i || (i = !0);
  return e < 0 ? t.charCodeAt(0) === 47 ? "/" : "." : e === 1 && t.charCodeAt(0) === 47 ? "//" : t.slice(0, e);
}
function pZ(t) {
  Gf(t);
  let e = t.length, n = -1, i = 0, r = -1, o = 0, s;
  for (; e--; ) {
    const a = t.charCodeAt(e);
    if (a === 47) {
      if (s) {
        i = e + 1;
        break;
      }
      continue;
    }
    n < 0 && (s = !0, n = e + 1), a === 46 ? r < 0 ? r = e : o !== 1 && (o = 1) : r > -1 && (o = -1);
  }
  return r < 0 || n < 0 || // We saw a non-dot character immediately before the dot.
  o === 0 || // The (right-most) trimmed path component is exactly `..`.
  o === 1 && r === n - 1 && r === i + 1 ? "" : t.slice(r, n);
}
function mZ(...t) {
  let e = -1, n;
  for (; ++e < t.length; )
    Gf(t[e]), t[e] && (n = n === void 0 ? t[e] : n + "/" + t[e]);
  return n === void 0 ? "." : gZ(n);
}
function gZ(t) {
  Gf(t);
  const e = t.charCodeAt(0) === 47;
  let n = yZ(t, !e);
  return n.length === 0 && !e && (n = "."), n.length > 0 && t.charCodeAt(t.length - 1) === 47 && (n += "/"), e ? "/" + n : n;
}
function yZ(t, e) {
  let n = "", i = 0, r = -1, o = 0, s = -1, a, l;
  for (; ++s <= t.length; ) {
    if (s < t.length)
      a = t.charCodeAt(s);
    else {
      if (a === 47)
        break;
      a = 47;
    }
    if (a === 47) {
      if (!(r === s - 1 || o === 1)) if (r !== s - 1 && o === 2) {
        if (n.length < 2 || i !== 2 || n.charCodeAt(n.length - 1) !== 46 || n.charCodeAt(n.length - 2) !== 46) {
          if (n.length > 2) {
            if (l = n.lastIndexOf("/"), l !== n.length - 1) {
              l < 0 ? (n = "", i = 0) : (n = n.slice(0, l), i = n.length - 1 - n.lastIndexOf("/")), r = s, o = 0;
              continue;
            }
          } else if (n.length > 0) {
            n = "", i = 0, r = s, o = 0;
            continue;
          }
        }
        e && (n = n.length > 0 ? n + "/.." : "..", i = 2);
      } else
        n.length > 0 ? n += "/" + t.slice(r + 1, s) : n = t.slice(r + 1, s), i = s - r - 1;
      r = s, o = 0;
    } else a === 46 && o > -1 ? o++ : o = -1;
  }
  return n;
}
function Gf(t) {
  if (typeof t != "string")
    throw new TypeError(
      "Path must be a string. Received " + JSON.stringify(t)
    );
}
const vZ = { cwd: bZ };
function bZ() {
  return "/";
}
function qg(t) {
  return t !== null && typeof t == "object" && // @ts-expect-error: indexable.
  t.href && // @ts-expect-error: indexable.
  t.origin;
}
function kZ(t) {
  if (typeof t == "string")
    t = new URL(t);
  else if (!qg(t)) {
    const e = new TypeError(
      'The "path" argument must be of type string or an instance of URL. Received `' + t + "`"
    );
    throw e.code = "ERR_INVALID_ARG_TYPE", e;
  }
  if (t.protocol !== "file:") {
    const e = new TypeError("The URL must be of scheme file");
    throw e.code = "ERR_INVALID_URL_SCHEME", e;
  }
  return wZ(t);
}
function wZ(t) {
  if (t.hostname !== "") {
    const i = new TypeError(
      'File URL host must be "localhost" or empty on darwin'
    );
    throw i.code = "ERR_INVALID_FILE_URL_HOST", i;
  }
  const e = t.pathname;
  let n = -1;
  for (; ++n < e.length; )
    if (e.charCodeAt(n) === 37 && e.charCodeAt(n + 1) === 50) {
      const i = e.charCodeAt(n + 2);
      if (i === 70 || i === 102) {
        const r = new TypeError(
          "File URL path must not include encoded / characters"
        );
        throw r.code = "ERR_INVALID_FILE_URL_PATH", r;
      }
    }
  return decodeURIComponent(e);
}
const Zm = ["history", "path", "basename", "stem", "extname", "dirname"];
class _Z {
  /**
   * Create a new virtual file.
   *
   * `options` is treated as:
   *
   * *   `string` or `Buffer` — `{value: options}`
   * *   `URL` — `{path: options}`
   * *   `VFile` — shallow copies its data over to the new file
   * *   `object` — all fields are shallow copied over to the new file
   *
   * Path related fields are set in the following order (least specific to
   * most specific): `history`, `path`, `basename`, `stem`, `extname`,
   * `dirname`.
   *
   * You cannot set `dirname` or `extname` without setting either `history`,
   * `path`, `basename`, or `stem` too.
   *
   * @param {Compatible | null | undefined} [value]
   *   File value.
   * @returns
   *   New instance.
   */
  constructor(e) {
    let n;
    e ? typeof e == "string" || EZ(e) ? n = { value: e } : qg(e) ? n = { path: e } : n = e : n = {}, this.data = {}, this.messages = [], this.history = [], this.cwd = vZ.cwd(), this.value, this.stored, this.result, this.map;
    let i = -1;
    for (; ++i < Zm.length; ) {
      const o = Zm[i];
      o in n && n[o] !== void 0 && n[o] !== null && (this[o] = o === "history" ? [...n[o]] : n[o]);
    }
    let r;
    for (r in n)
      Zm.includes(r) || (this[r] = n[r]);
  }
  /**
   * Get the full path (example: `'~/index.min.js'`).
   *
   * @returns {string}
   */
  get path() {
    return this.history[this.history.length - 1];
  }
  /**
   * Set the full path (example: `'~/index.min.js'`).
   *
   * Cannot be nullified.
   * You can set a file URL (a `URL` object with a `file:` protocol) which will
   * be turned into a path with `url.fileURLToPath`.
   *
   * @param {string | URL} path
   */
  set path(e) {
    qg(e) && (e = kZ(e)), t0(e, "path"), this.path !== e && this.history.push(e);
  }
  /**
   * Get the parent path (example: `'~'`).
   */
  get dirname() {
    return typeof this.path == "string" ? _r.dirname(this.path) : void 0;
  }
  /**
   * Set the parent path (example: `'~'`).
   *
   * Cannot be set if there’s no `path` yet.
   */
  set dirname(e) {
    y_(this.basename, "dirname"), this.path = _r.join(e || "", this.basename);
  }
  /**
   * Get the basename (including extname) (example: `'index.min.js'`).
   */
  get basename() {
    return typeof this.path == "string" ? _r.basename(this.path) : void 0;
  }
  /**
   * Set basename (including extname) (`'index.min.js'`).
   *
   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\'`
   * on windows).
   * Cannot be nullified (use `file.path = file.dirname` instead).
   */
  set basename(e) {
    t0(e, "basename"), e0(e, "basename"), this.path = _r.join(this.dirname || "", e);
  }
  /**
   * Get the extname (including dot) (example: `'.js'`).
   */
  get extname() {
    return typeof this.path == "string" ? _r.extname(this.path) : void 0;
  }
  /**
   * Set the extname (including dot) (example: `'.js'`).
   *
   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\'`
   * on windows).
   * Cannot be set if there’s no `path` yet.
   */
  set extname(e) {
    if (e0(e, "extname"), y_(this.dirname, "extname"), e) {
      if (e.charCodeAt(0) !== 46)
        throw new Error("`extname` must start with `.`");
      if (e.includes(".", 1))
        throw new Error("`extname` cannot contain multiple dots");
    }
    this.path = _r.join(this.dirname, this.stem + (e || ""));
  }
  /**
   * Get the stem (basename w/o extname) (example: `'index.min'`).
   */
  get stem() {
    return typeof this.path == "string" ? _r.basename(this.path, this.extname) : void 0;
  }
  /**
   * Set the stem (basename w/o extname) (example: `'index.min'`).
   *
   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\'`
   * on windows).
   * Cannot be nullified (use `file.path = file.dirname` instead).
   */
  set stem(e) {
    t0(e, "stem"), e0(e, "stem"), this.path = _r.join(this.dirname || "", e + (this.extname || ""));
  }
  /**
   * Serialize the file.
   *
   * @param {BufferEncoding | null | undefined} [encoding='utf8']
   *   Character encoding to understand `value` as when it’s a `Buffer`
   *   (default: `'utf8'`).
   * @returns {string}
   *   Serialized file.
   */
  toString(e) {
    return (this.value || "").toString(e || void 0);
  }
  /**
   * Create a warning message associated with the file.
   *
   * Its `fatal` is set to `false` and `file` is set to the current file path.
   * Its added to `file.messages`.
   *
   * @param {string | Error | VFileMessage} reason
   *   Reason for message, uses the stack and message of the error if given.
   * @param {Node | NodeLike | Position | Point | null | undefined} [place]
   *   Place in file where the message occurred.
   * @param {string | null | undefined} [origin]
   *   Place in code where the message originates (example:
   *   `'my-package:my-rule'` or `'my-rule'`).
   * @returns {VFileMessage}
   *   Message.
   */
  message(e, n, i) {
    const r = new Ui(e, n, i);
    return this.path && (r.name = this.path + ":" + r.name, r.file = this.path), r.fatal = !1, this.messages.push(r), r;
  }
  /**
   * Create an info message associated with the file.
   *
   * Its `fatal` is set to `null` and `file` is set to the current file path.
   * Its added to `file.messages`.
   *
   * @param {string | Error | VFileMessage} reason
   *   Reason for message, uses the stack and message of the error if given.
   * @param {Node | NodeLike | Position | Point | null | undefined} [place]
   *   Place in file where the message occurred.
   * @param {string | null | undefined} [origin]
   *   Place in code where the message originates (example:
   *   `'my-package:my-rule'` or `'my-rule'`).
   * @returns {VFileMessage}
   *   Message.
   */
  info(e, n, i) {
    const r = this.message(e, n, i);
    return r.fatal = null, r;
  }
  /**
   * Create a fatal error associated with the file.
   *
   * Its `fatal` is set to `true` and `file` is set to the current file path.
   * Its added to `file.messages`.
   *
   * > 👉 **Note**: a fatal error means that a file is no longer processable.
   *
   * @param {string | Error | VFileMessage} reason
   *   Reason for message, uses the stack and message of the error if given.
   * @param {Node | NodeLike | Position | Point | null | undefined} [place]
   *   Place in file where the message occurred.
   * @param {string | null | undefined} [origin]
   *   Place in code where the message originates (example:
   *   `'my-package:my-rule'` or `'my-rule'`).
   * @returns {never}
   *   Message.
   * @throws {VFileMessage}
   *   Message.
   */
  fail(e, n, i) {
    const r = this.message(e, n, i);
    throw r.fatal = !0, r;
  }
}
function e0(t, e) {
  if (t && t.includes(_r.sep))
    throw new Error(
      "`" + e + "` cannot be a path: did not expect `" + _r.sep + "`"
    );
}
function t0(t, e) {
  if (!t)
    throw new Error("`" + e + "` cannot be empty");
}
function y_(t, e) {
  if (!t)
    throw new Error("Setting `" + e + "` requires `path` to be set too");
}
function EZ(t) {
  return O7(t);
}
const TZ = L7().freeze(), I7 = {}.hasOwnProperty;
function L7() {
  const t = fZ(), e = [];
  let n = {}, i, r = -1;
  return o.data = s, o.Parser = void 0, o.Compiler = void 0, o.freeze = a, o.attachers = e, o.use = l, o.parse = c, o.stringify = f, o.run = d, o.runSync = u, o.process = h, o.processSync = p, o;
  function o() {
    const m = L7();
    let v = -1;
    for (; ++v < e.length; )
      m.use(...e[v]);
    return m.data(G1(!0, {}, n)), m;
  }
  function s(m, v) {
    return typeof m == "string" ? arguments.length === 2 ? (r0("data", i), n[m] = v, o) : I7.call(n, m) && n[m] || null : m ? (r0("data", i), n = m, o) : n;
  }
  function a() {
    if (i)
      return o;
    for (; ++r < e.length; ) {
      const [m, ...v] = e[r];
      if (v[0] === !1)
        continue;
      v[0] === !0 && (v[0] = void 0);
      const y = m.call(o, ...v);
      typeof y == "function" && t.use(y);
    }
    return i = !0, r = Number.POSITIVE_INFINITY, o;
  }
  function l(m, ...v) {
    let y;
    if (r0("use", i), m != null) if (typeof m == "function")
      S(m, ...v);
    else if (typeof m == "object")
      Array.isArray(m) ? _(m) : k(m);
    else
      throw new TypeError("Expected usable value, not `" + m + "`");
    return y && (n.settings = Object.assign(n.settings || {}, y)), o;
    function C(E) {
      if (typeof E == "function")
        S(E);
      else if (typeof E == "object")
        if (Array.isArray(E)) {
          const [x, ...N] = E;
          S(x, ...N);
        } else
          k(E);
      else
        throw new TypeError("Expected usable value, not `" + E + "`");
    }
    function k(E) {
      _(E.plugins), E.settings && (y = Object.assign(y || {}, E.settings));
    }
    function _(E) {
      let x = -1;
      if (E != null) if (Array.isArray(E))
        for (; ++x < E.length; ) {
          const N = E[x];
          C(N);
        }
      else
        throw new TypeError("Expected a list of plugins, not `" + E + "`");
    }
    function S(E, x) {
      let N = -1, R;
      for (; ++N < e.length; )
        if (e[N][0] === E) {
          R = e[N];
          break;
        }
      R ? (Vg(R[1]) && Vg(x) && (x = G1(!0, R[1], x)), R[1] = x) : e.push([...arguments]);
    }
  }
  function c(m) {
    o.freeze();
    const v = vc(m), y = o.Parser;
    return n0("parse", y), v_(y, "parse") ? new y(String(v), v).parse() : y(String(v), v);
  }
  function f(m, v) {
    o.freeze();
    const y = vc(v), C = o.Compiler;
    return i0("stringify", C), b_(m), v_(C, "compile") ? new C(m, y).compile() : C(m, y);
  }
  function d(m, v, y) {
    if (b_(m), o.freeze(), !y && typeof v == "function" && (y = v, v = void 0), !y)
      return new Promise(C);
    C(null, y);
    function C(k, _) {
      t.run(m, vc(v), S);
      function S(E, x, N) {
        x = x || m, E ? _(E) : k ? k(x) : y(null, x, N);
      }
    }
  }
  function u(m, v) {
    let y, C;
    return o.run(m, v, k), k_("runSync", "run", C), y;
    function k(_, S) {
      l_(_), y = S, C = !0;
    }
  }
  function h(m, v) {
    if (o.freeze(), n0("process", o.Parser), i0("process", o.Compiler), !v)
      return new Promise(y);
    y(null, v);
    function y(C, k) {
      const _ = vc(m);
      o.run(o.parse(_), _, (E, x, N) => {
        if (E || !x || !N)
          S(E);
        else {
          const R = o.stringify(x, N);
          R == null || (xZ(R) ? N.value = R : N.result = R), S(E, N);
        }
      });
      function S(E, x) {
        E || !x ? k(E) : C ? C(x) : v(null, x);
      }
    }
  }
  function p(m) {
    let v;
    o.freeze(), n0("processSync", o.Parser), i0("processSync", o.Compiler);
    const y = vc(m);
    return o.process(y, C), k_("processSync", "process", v), y;
    function C(k) {
      v = !0, l_(k);
    }
  }
}
function v_(t, e) {
  return typeof t == "function" && // Prototypes do exist.
  // type-coverage:ignore-next-line
  t.prototype && // A function with keys in its prototype is probably a constructor.
  // Classes’ prototype methods are not enumerable, so we check if some value
  // exists in the prototype.
  // type-coverage:ignore-next-line
  (CZ(t.prototype) || e in t.prototype);
}
function CZ(t) {
  let e;
  for (e in t)
    if (I7.call(t, e))
      return !0;
  return !1;
}
function n0(t, e) {
  if (typeof e != "function")
    throw new TypeError("Cannot `" + t + "` without `Parser`");
}
function i0(t, e) {
  if (typeof e != "function")
    throw new TypeError("Cannot `" + t + "` without `Compiler`");
}
function r0(t, e) {
  if (e)
    throw new Error(
      "Cannot call `" + t + "` on a frozen processor.\nCreate a new processor first, by calling it: use `processor()` instead of `processor`."
    );
}
function b_(t) {
  if (!Vg(t) || typeof t.type != "string")
    throw new TypeError("Expected node, got `" + t + "`");
}
function k_(t, e, n) {
  if (!n)
    throw new Error(
      "`" + t + "` finished async. Use `" + e + "` instead"
    );
}
function vc(t) {
  return SZ(t) ? t : new _Z(t);
}
function SZ(t) {
  return !!(t && typeof t == "object" && "message" in t && "messages" in t);
}
function xZ(t) {
  return typeof t == "string" || O7(t);
}
const AZ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  unified: TZ
}, Symbol.toStringTag, { value: "Module" }));
function MZ(t, e) {
  return (t ? D7(t, e || {}) : void 0) || { type: "root", children: [] };
}
function D7(t, e) {
  const n = NZ(t, e);
  return n && e.afterTransform && e.afterTransform(t, n), n;
}
function NZ(t, e) {
  switch (t.nodeType) {
    case 1:
      return LZ(t, e);
    case 3:
      return RZ(t);
    case 8:
      return IZ(t);
    case 9:
      return w_(t, e);
    case 10:
      return OZ();
    case 11:
      return w_(t, e);
    default:
      return;
  }
}
function w_(t, e) {
  return { type: "root", children: P7(t, e) };
}
function OZ() {
  return { type: "doctype" };
}
function RZ(t) {
  return { type: "text", value: t.nodeValue || "" };
}
function IZ(t) {
  return { type: "comment", value: t.nodeValue || "" };
}
function LZ(t, e) {
  const n = t.namespaceURI, i = n === gu.svg ? _7 : w7, r = n === gu.html ? t.tagName.toLowerCase() : t.tagName, o = (
    // @ts-expect-error Types are wrong.
    n === gu.html && r === "template" ? t.content : t
  ), s = t.getAttributeNames(), a = {};
  let l = -1;
  for (; ++l < s.length; )
    a[s[l]] = t.getAttribute(s[l]) || "";
  return i(r, a, P7(o, e));
}
function P7(t, e) {
  const n = t.childNodes, i = [];
  let r = -1;
  for (; ++r < n.length; ) {
    const o = D7(n[r], e);
    o !== void 0 && i.push(o);
  }
  return i;
}
const DZ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  fromDom: MZ
}, Symbol.toStringTag, { value: "Module" })), yp = (
  /**
   * @type {(
   *   (() => false) &
   *   (<T extends Element = Element>(node: unknown, test?: PredicateTest<T>, index?: number, parent?: Parent, context?: unknown) => node is T) &
   *   ((node: unknown, test: Test, index?: number, parent?: Parent, context?: unknown) => boolean)
   * )}
   */
  /**
   * @param {unknown} [node]
   * @param {Test | undefined} [test]
   * @param {number | null | undefined} [index]
   * @param {Parent | null | undefined} [parent]
   * @param {unknown} [context]
   * @returns {boolean}
   */
  // eslint-disable-next-line max-params
  function(t, e, n, i, r) {
    const o = Lt(e);
    return !t || !t.type || typeof t.type != "string" ? !1 : o.call(r, t, n, i);
  }
), Lt = (
  /**
   * @type {(
   *   (<T extends Element>(test: T['tagName'] | TestFunctionPredicate<T>) => AssertPredicate<T>) &
   *   ((test?: Test) => AssertAnything)
   * )}
   */
  /**
   * @param {Test | null | undefined} [test]
   * @returns {AssertAnything}
   */
  function(t) {
    if (t == null)
      return Pb;
    if (typeof t == "string")
      return FZ(t);
    if (typeof t == "object")
      return PZ(t);
    if (typeof t == "function")
      return F7(t);
    throw new Error("Expected function, string, or array as test");
  }
);
function PZ(t) {
  const e = [];
  let n = -1;
  for (; ++n < t.length; )
    e[n] = Lt(t[n]);
  return F7(i);
  function i(...r) {
    let o = -1;
    for (; ++o < e.length; )
      if (e[o].call(this, ...r))
        return !0;
    return !1;
  }
}
function FZ(t) {
  return e;
  function e(n) {
    return Pb(n) && n.tagName === t;
  }
}
function F7(t) {
  return e;
  function e(n, ...i) {
    return Pb(n) && !!t.call(this, n, ...i);
  }
}
function Pb(t) {
  return !!(t && typeof t == "object" && // @ts-expect-error Looks like a node.
  t.type === "element" && // @ts-expect-error Looks like an element.
  typeof t.tagName == "string");
}
const BZ = Lt([
  "audio",
  "canvas",
  "embed",
  "iframe",
  "img",
  "math",
  "object",
  "picture",
  "svg",
  "video"
]), Os = (
  /**
   * @type {(
   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &
   *   ((test?: Test) => AssertAnything)
   * )}
   */
  /**
   * @param {Test} [test]
   * @returns {AssertAnything}
   */
  function(t) {
    if (t == null)
      return zZ;
    if (typeof t == "string")
      return jZ(t);
    if (typeof t == "object")
      return Array.isArray(t) ? HZ(t) : $Z(t);
    if (typeof t == "function")
      return vp(t);
    throw new Error("Expected function, string, or object as test");
  }
);
function HZ(t) {
  const e = [];
  let n = -1;
  for (; ++n < t.length; )
    e[n] = Os(t[n]);
  return vp(i);
  function i(...r) {
    let o = -1;
    for (; ++o < e.length; )
      if (e[o].call(this, ...r)) return !0;
    return !1;
  }
}
function $Z(t) {
  return vp(e);
  function e(n) {
    let i;
    for (i in t)
      if (n[i] !== t[i]) return !1;
    return !0;
  }
}
function jZ(t) {
  return vp(e);
  function e(n) {
    return n && n.type === t;
  }
}
function vp(t) {
  return e;
  function e(n, ...i) {
    return !!(n && typeof n == "object" && "type" in n && t.call(this, n, ...i));
  }
}
function zZ() {
  return !0;
}
function UZ(t) {
  const e = (
    // @ts-expect-error looks like a node.
    t && typeof t == "object" && t.type === "text" ? (
      // @ts-expect-error looks like a text.
      t.value || ""
    ) : t
  );
  return typeof e == "string" && e.replace(/[ \t\n\f\r]/g, "") === "";
}
const VZ = [
  "address",
  // Flow content.
  "article",
  // Sections and headings.
  "aside",
  // Sections and headings.
  "blockquote",
  // Flow content.
  "body",
  // Page.
  "br",
  // Contribute whitespace intrinsically.
  "caption",
  // Similar to block.
  "center",
  // Flow content, legacy.
  "col",
  // Similar to block.
  "colgroup",
  // Similar to block.
  "dd",
  // Lists.
  "dialog",
  // Flow content.
  "dir",
  // Lists, legacy.
  "div",
  // Flow content.
  "dl",
  // Lists.
  "dt",
  // Lists.
  "figcaption",
  // Flow content.
  "figure",
  // Flow content.
  "footer",
  // Flow content.
  "form",
  // Flow content.
  "h1",
  // Sections and headings.
  "h2",
  // Sections and headings.
  "h3",
  // Sections and headings.
  "h4",
  // Sections and headings.
  "h5",
  // Sections and headings.
  "h6",
  // Sections and headings.
  "head",
  // Page.
  "header",
  // Flow content.
  "hgroup",
  // Sections and headings.
  "hr",
  // Flow content.
  "html",
  // Page.
  "legend",
  // Flow content.
  "li",
  // Block-like.
  "li",
  // Similar to block.
  "listing",
  // Flow content, legacy
  "main",
  // Flow content.
  "menu",
  // Lists.
  "nav",
  // Sections and headings.
  "ol",
  // Lists.
  "optgroup",
  // Similar to block.
  "option",
  // Similar to block.
  "p",
  // Flow content.
  "plaintext",
  // Flow content, legacy
  "pre",
  // Flow content.
  "section",
  // Sections and headings.
  "summary",
  // Similar to block.
  "table",
  // Similar to block.
  "tbody",
  // Similar to block.
  "td",
  // Block-like.
  "td",
  // Similar to block.
  "tfoot",
  // Similar to block.
  "th",
  // Block-like.
  "th",
  // Similar to block.
  "thead",
  // Similar to block.
  "tr",
  // Similar to block.
  "ul",
  // Lists.
  "wbr",
  // Contribute whitespace intrinsically.
  "xmp"
  // Flow content, legacy
], WZ = [
  // Form.
  "button",
  "input",
  "select",
  "textarea"
], qZ = [
  "area",
  "base",
  "basefont",
  "dialog",
  "datalist",
  "head",
  "link",
  "meta",
  "noembed",
  "noframes",
  "param",
  "rp",
  "script",
  "source",
  "style",
  "template",
  "track",
  "title"
], Fb = Os(["doctype", "comment"]);
function GZ(t = {}) {
  const e = eee(
    t.newlines ? QZ : ZZ
  );
  return (n) => {
    B7(n, { collapse: e, whitespace: "normal" });
  };
}
function B7(t, e) {
  if ("children" in t) {
    const n = Object.assign({}, e);
    return (t.type === "root" || j7(t)) && (n.before = !0, n.after = !0), n.whitespace = tee(t, e), YZ(t, n);
  }
  if (t.type === "text") {
    if (e.whitespace === "normal")
      return KZ(t, e);
    e.whitespace === "nowrap" && (t.value = e.collapse(t.value));
  }
  return { remove: !1, ignore: Fb(t), stripAtStart: !1 };
}
function KZ(t, e) {
  const n = e.collapse(t.value), i = { remove: !1, ignore: !1, stripAtStart: !1 };
  let r = 0, o = n.length;
  return e.before && __(n.charAt(0)) && r++, r !== o && __(n.charAt(o - 1)) && (e.after ? o-- : i.stripAtStart = !0), r === o ? i.remove = !0 : t.value = n.slice(r, o), i;
}
function YZ(t, e) {
  let n = e.before;
  const i = e.after, r = t.children;
  let o = r.length, s = -1;
  for (; ++s < o; ) {
    const a = B7(
      r[s],
      Object.assign({}, e, {
        before: n,
        after: H7(r, s, i)
      })
    );
    a.remove ? (r.splice(s, 1), s--, o--) : a.ignore || (n = a.stripAtStart), $7(r[s]) && (n = !1);
  }
  return { remove: !1, ignore: !1, stripAtStart: !!(n || i) };
}
function H7(t, e, n) {
  for (; ++e < t.length; ) {
    const i = t[e];
    let r = JZ(i);
    if (r === void 0 && "children" in i && !XZ(i) && (r = H7(i.children, -1)), typeof r == "boolean")
      return r;
  }
  return n;
}
function JZ(t) {
  if (t.type === "element") {
    if ($7(t))
      return !1;
    if (j7(t))
      return !0;
  } else if (t.type === "text") {
    if (!UZ(t))
      return !1;
  } else if (!Fb(t))
    return !1;
}
function $7(t) {
  return BZ(t) || yp(t, WZ);
}
function j7(t) {
  return yp(t, VZ);
}
function XZ(t) {
  return !!("properties" in t && t.properties && t.properties.hidden) || Fb(t) || yp(t, qZ);
}
function __(t) {
  return t === " " || t === `
`;
}
function QZ(t) {
  const e = /\r?\n|\r/.exec(t);
  return e ? e[0] : " ";
}
function ZZ() {
  return " ";
}
function eee(t) {
  return e;
  function e(n) {
    return String(n).replace(/[\t\n\v\f\r ]+/g, t);
  }
}
function tee(t, e) {
  if ("tagName" in t && t.properties)
    switch (t.tagName) {
      case "listing":
      case "plaintext":
      case "script":
      case "style":
      case "xmp":
        return "pre";
      case "nobr":
        return "nowrap";
      case "pre":
        return t.properties.wrap ? "pre-wrap" : "pre";
      case "td":
      case "th":
        return t.properties.noWrap ? "nowrap" : e.whitespace;
      case "textarea":
        return "pre-wrap";
    }
  return e.whitespace;
}
const nee = !0, K1 = !1, z7 = "skip", iee = (
  /**
   * @type {(
   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &
   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)
   * )}
   */
  /**
   * @param {Node} tree
   * @param {Test} test
   * @param {Visitor<Node>} visitor
   * @param {boolean | null | undefined} [reverse]
   * @returns {void}
   */
  function(t, e, n, i) {
    typeof e == "function" && typeof n != "function" && (i = n, n = e, e = null);
    const r = Os(e), o = i ? -1 : 1;
    s(t, void 0, [])();
    function s(a, l, c) {
      const f = a && typeof a == "object" ? a : {};
      if (typeof f.type == "string") {
        const u = (
          // `hast`
          typeof f.tagName == "string" ? f.tagName : (
            // `xast`
            typeof f.name == "string" ? f.name : void 0
          )
        );
        Object.defineProperty(d, "name", {
          value: "node (" + (a.type + (u ? "<" + u + ">" : "")) + ")"
        });
      }
      return d;
      function d() {
        let u = [], h, p, m;
        if ((!e || r(a, l, c[c.length - 1] || null)) && (u = ree(n(a, c)), u[0] === K1))
          return u;
        if (a.children && u[0] !== z7)
          for (p = (i ? a.children.length : -1) + o, m = c.concat(a); p > -1 && p < a.children.length; ) {
            if (h = s(a.children[p], p, m)(), h[0] === K1)
              return h;
            p = typeof h[1] == "number" ? h[1] : p + o;
          }
        return u;
      }
    }
  }
);
function ree(t) {
  return Array.isArray(t) ? t : typeof t == "number" ? [nee, t] : [t];
}
const ma = (
  /**
   * @type {(
   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &
   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)
   * )}
   */
  /**
   * @param {Node} tree
   * @param {Test} test
   * @param {Visitor} visitor
   * @param {boolean | null | undefined} [reverse]
   * @returns {void}
   */
  function(t, e, n, i) {
    typeof e == "function" && typeof n != "function" && (i = n, n = e, e = null), iee(t, e, r, i);
    function r(o, s) {
      const a = s[s.length - 1];
      return n(
        o,
        a ? a.children.indexOf(o) : null,
        a
      );
    }
  }
);
function Pe(t, e) {
  const n = e.children || [], i = [];
  let r = -1;
  for (; ++r < n.length; ) {
    const a = Bb(t, n[r], e);
    Array.isArray(a) ? i.push(...a) : a && i.push(a);
  }
  let o = 0, s = i.length;
  for (; o < s && i[o].type === "break"; )
    o++;
  for (; s > o && i[s - 1].type === "break"; )
    s--;
  return o === 0 && s === i.length ? i : i.slice(o, s);
}
const Y1 = {}.hasOwnProperty;
function Fn(t, e) {
  return t.wrapText ? e : e.replace(/\r?\n|\r/g, " ");
}
function Bb(t, e, n) {
  let i;
  if (e.type === "element") {
    if (e.properties && e.properties.dataMdast === "ignore")
      return;
    Y1.call(t.handlers, e.tagName) && (i = t.handlers[e.tagName]);
  } else Y1.call(t.handlers, e.type) && (i = t.handlers[e.type]);
  return typeof i == "function" ? i(t, e, n) : oee(t, e);
}
function oee(t, e) {
  return typeof e.value == "string" ? t(e, "text", Fn(t, e.value)) : Pe(t, e);
}
const see = {}.hasOwnProperty;
function Kf(t, e) {
  const n = typeof e == "string" && aee(t) && t.type === "element" && t.properties && see.call(t.properties, e) && t.properties[e];
  return n != null && n !== !1;
}
function aee(t) {
  return !!(t && typeof t == "object" && "type" in t);
}
const lee = Lt([
  "audio",
  "canvas",
  "embed",
  "iframe",
  "img",
  "math",
  "object",
  "picture",
  "svg",
  "video"
]), cee = /* @__PURE__ */ new Set(["pingback", "prefetch", "stylesheet"]);
function fee(t) {
  if (!yp(t, "link"))
    return !1;
  if (Kf(t, "itemProp"))
    return !0;
  const n = (t.properties || {}).rel || [];
  let i = -1;
  if (!Array.isArray(n) || n.length === 0)
    return !1;
  for (; ++i < n.length; )
    if (!cee.has(String(n[i])))
      return !1;
  return !0;
}
const dee = Lt([
  "a",
  "abbr",
  // `area` is in fact only phrasing if it is inside a `map` element.
  // However, since `area`s are required to be inside a `map` element, and it’s
  // a rather involved check, it’s ignored here for now.
  "area",
  "b",
  "bdi",
  "bdo",
  "br",
  "button",
  "cite",
  "code",
  "data",
  "datalist",
  "del",
  "dfn",
  "em",
  "i",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "map",
  "mark",
  "meter",
  "noscript",
  "output",
  "progress",
  "q",
  "ruby",
  "s",
  "samp",
  "script",
  "select",
  "small",
  "span",
  "strong",
  "sub",
  "sup",
  "template",
  "textarea",
  "time",
  "u",
  "var",
  "wbr"
]), uee = Lt("meta");
function hee(t) {
  return !!(pee(t) && (t.type === "text" || dee(t) || lee(t) || fee(t) || uee(t) && Kf(t, "itemProp")));
}
function pee(t) {
  return t && typeof t == "object" && "type" in t;
}
const U7 = (
  /** @type {AssertPredicatePhrasing} */
  Os([
    "break",
    "delete",
    "emphasis",
    "footnote",
    "footnoteReference",
    "image",
    "imageReference",
    "inlineCode",
    "link",
    "linkReference",
    "strong",
    "text"
  ])
);
function V7(t) {
  return W7(t, e);
  function e(n) {
    const i = n[0];
    return n.length === 1 && i.type === "text" && (i.value === " " || i.value === `
`) ? [] : { type: "paragraph", children: n };
  }
}
function bp(t) {
  let e = -1, n;
  for (; ++e < t.length; )
    if (n = t[e], !q7(n) || "children" in n && bp(n.children))
      return !0;
  return !1;
}
function W7(t, e, n) {
  const i = n || yee, r = mee(t);
  let o = [], s = -1, a, l;
  for (; ++s < r.length; )
    l = r[s], q7(l) ? (a || (a = []), a.push(l)) : (a && (o = o.concat(e(a)), a = void 0), o = o.concat(i(l)));
  return a && (o = o.concat(e(a))), o;
}
function mee(t) {
  let e = [], n = -1, i;
  for (; ++n < t.length; )
    i = t[n], (i.type === "delete" || i.type === "link") && bp(i.children) ? e = e.concat(gee(i)) : e.push(i);
  return e;
}
function gee(t) {
  return W7(t.children, n, e);
  function e(i) {
    if ("children" in i && "children" in t) {
      const { children: r, ...o } = t;
      return {
        ...i,
        // @ts-expect-error: assume matching parent & child.
        children: [{ ...G1(!0, {}, o), children: i.children }]
      };
    }
    return { ...i };
  }
  function n(i) {
    const { children: r, ...o } = t;
    return { ...G1(!0, {}, o), children: i };
  }
}
function q7(t) {
  return t.data && t.data.hName ? hee({
    type: "element",
    tagName: t.data.hName,
    properties: {},
    children: []
  }) : U7(t);
}
function yee(t) {
  return t;
}
function Yt(t, e) {
  return V7(Pe(t, e));
}
function ga(t, e) {
  return e == null ? "" : t.frozenBaseUrl ? String(new URL(e, t.frozenBaseUrl)) : e;
}
function vee(t, e) {
  const n = e.properties;
  return t(
    e,
    "link",
    {
      title: n.title || null,
      url: ga(t, String(n.href || "") || null)
    },
    Pe(t, e)
  );
}
function bee(t, e) {
  t.baseFound || (t.frozenBaseUrl = String(e.properties && e.properties.href || "") || null, t.baseFound = !0);
}
function kee(t, e) {
  return t(e, "blockquote", Yt(t, e));
}
function wee(t, e) {
  return t.wrapText ? t(e, "break") : t(e, "text", " ");
}
const E_ = (
  /**
   * @type {(
   *  (<T extends Node>(node: Parent, index: Node | number, test: import('unist-util-is').PredicateTest<T>) => T | null) &
   *  ((node: Parent, index: Node | number, test?: Test) => Node | null)
   * )}
   */
  /**
   * @param {Parent} parent
   * @param {Node | number} index
   * @param {Test} [test]
   * @returns {Node | null}
   */
  function(t, e, n) {
    const i = Os(n);
    if (!t || !t.type || !t.children)
      throw new Error("Expected parent node");
    if (typeof e == "number") {
      if (e < 0 || e === Number.POSITIVE_INFINITY)
        throw new Error("Expected positive finite number as index");
    } else if (e = t.children.indexOf(e), e < 0)
      throw new Error("Expected child node or index");
    for (; ++e < t.children.length; )
      if (i(t.children[e], e, t))
        return t.children[e];
    return null;
  }
), T_ = /\n/g, C_ = /[\t ]+/g, Gg = Lt("br"), _ee = Lt("p"), S_ = Lt(["th", "td"]), x_ = Lt("tr"), Eee = Lt([
  // List from: <https://html.spec.whatwg.org/#hidden-elements>
  "datalist",
  "head",
  "noembed",
  "noframes",
  "noscript",
  // Act as if we support scripting.
  "rp",
  "script",
  "style",
  "template",
  "title",
  // Hidden attribute.
  xee,
  // From: <https://html.spec.whatwg.org/#flow-content-3>
  Aee
]), G7 = Lt([
  "address",
  // Flow content
  "article",
  // Sections and headings
  "aside",
  // Sections and headings
  "blockquote",
  // Flow content
  "body",
  // Page
  "caption",
  // `table-caption`
  "center",
  // Flow content (legacy)
  "dd",
  // Lists
  "dialog",
  // Flow content
  "dir",
  // Lists (legacy)
  "dl",
  // Lists
  "dt",
  // Lists
  "div",
  // Flow content
  "figure",
  // Flow content
  "figcaption",
  // Flow content
  "footer",
  // Flow content
  "form,",
  // Flow content
  "h1",
  // Sections and headings
  "h2",
  // Sections and headings
  "h3",
  // Sections and headings
  "h4",
  // Sections and headings
  "h5",
  // Sections and headings
  "h6",
  // Sections and headings
  "header",
  // Flow content
  "hgroup",
  // Sections and headings
  "hr",
  // Flow content
  "html",
  // Page
  "legend",
  // Flow content
  "listing",
  // Flow content (legacy)
  "main",
  // Flow content
  "menu",
  // Lists
  "nav",
  // Sections and headings
  "ol",
  // Lists
  "p",
  // Flow content
  "plaintext",
  // Flow content (legacy)
  "pre",
  // Flow content
  "section",
  // Sections and headings
  "ul",
  // Lists
  "xmp"
  // Flow content (legacy)
]);
function Yf(t, e = {}) {
  const n = "children" in t ? t.children : [], i = G7(t), r = J7(t, {
    whitespace: e.whitespace || "normal",
    breakBefore: !1,
    breakAfter: !1
  }), o = [];
  (t.type === "text" || t.type === "comment") && o.push(
    ...Y7(t, {
      whitespace: r,
      breakBefore: !0,
      breakAfter: !0
    })
  );
  let s = -1;
  for (; ++s < n.length; )
    o.push(
      ...K7(n[s], t, {
        whitespace: r,
        breakBefore: s ? void 0 : i,
        breakAfter: s < n.length - 1 ? Gg(n[s + 1]) : i
      })
    );
  const a = [];
  let l;
  for (s = -1; ++s < o.length; ) {
    const c = o[s];
    typeof c == "number" ? l !== void 0 && c > l && (l = c) : c && (l !== void 0 && l > -1 && a.push(`
`.repeat(l) || " "), l = -1, a.push(c));
  }
  return a.join("");
}
function K7(t, e, n) {
  return t.type === "element" ? Tee(t, e, n) : t.type === "text" ? n.whitespace === "normal" ? Y7(t, n) : Cee(t) : [];
}
function Tee(t, e, n) {
  const i = J7(t, n), r = t.children || [];
  let o = -1, s = [];
  if (Eee(t))
    return s;
  let a, l;
  for (Gg(t) || x_(t) && E_(e, t, x_) ? l = `
` : _ee(t) ? (a = 2, l = 2) : G7(t) && (a = 1, l = 1); ++o < r.length; )
    s = s.concat(
      K7(r[o], t, {
        whitespace: i,
        breakBefore: o ? void 0 : a,
        breakAfter: o < r.length - 1 ? Gg(r[o + 1]) : l
      })
    );
  return S_(t) && E_(e, t, S_) && s.push("	"), a && s.unshift(a), l && s.push(l), s;
}
function Y7(t, e) {
  const n = String(t.value), i = [], r = [];
  let o = 0;
  for (; o <= n.length; ) {
    T_.lastIndex = o;
    const l = T_.exec(n), c = l && "index" in l ? l.index : n.length;
    i.push(
      // Any sequence of collapsible spaces and tabs immediately preceding or
      // following a segment break is removed.
      See(
        // […] ignoring bidi formatting characters (characters with the
        // Bidi_Control property [UAX9]: ALM, LTR, RTL, LRE-RLO, LRI-PDI) as if
        // they were not there.
        n.slice(o, c).replace(/[\u061C\u200E\u200F\u202A-\u202E\u2066-\u2069]/g, ""),
        o === 0 ? e.breakBefore : !0,
        c === n.length ? e.breakAfter : !0
      )
    ), o = c + 1;
  }
  let s = -1, a;
  for (; ++s < i.length; )
    i[s].charCodeAt(i[s].length - 1) === 8203 || s < i.length - 1 && i[s + 1].charCodeAt(0) === 8203 ? (r.push(i[s]), a = void 0) : i[s] ? (typeof a == "number" && r.push(a), r.push(i[s]), a = 0) : (s === 0 || s === i.length - 1) && r.push(0);
  return r;
}
function Cee(t) {
  return [String(t.value)];
}
function See(t, e, n) {
  const i = [];
  let r = 0, o;
  for (; r < t.length; ) {
    C_.lastIndex = r;
    const s = C_.exec(t);
    o = s ? s.index : t.length, !r && !o && s && !e && i.push(""), r !== o && i.push(t.slice(r, o)), r = s ? o + s[0].length : o;
  }
  return r !== o && !n && i.push(""), i.join(" ");
}
function J7(t, e) {
  if (t.type === "element") {
    const n = t.properties || {};
    switch (t.tagName) {
      case "listing":
      case "plaintext":
      case "xmp":
        return "pre";
      case "nobr":
        return "nowrap";
      case "pre":
        return n.wrap ? "pre-wrap" : "pre";
      case "td":
      case "th":
        return n.noWrap ? "nowrap" : e.whitespace;
      case "textarea":
        return "pre-wrap";
    }
  }
  return e.whitespace;
}
function xee(t) {
  return !!(t.properties || {}).hidden;
}
function Aee(t) {
  return t.tagName === "dialog" && !(t.properties || {}).open;
}
function Mee(t) {
  const e = String(t);
  let n = e.length;
  for (; n > 0; ) {
    const i = e.codePointAt(n - 1);
    if (i !== void 0 && (i === 10 || i === 13))
      n--;
    else
      break;
  }
  return e.slice(0, n);
}
const o0 = "language-", Nee = Lt("pre"), Oee = Lt("code");
function qd(t, e) {
  const n = e.children;
  let i = -1, r, o;
  if (Nee(e))
    for (; ++i < n.length; ) {
      const s = n[i];
      if (Oee(s) && s.properties && s.properties.className && Array.isArray(s.properties.className)) {
        r = s.properties.className;
        break;
      }
    }
  if (r) {
    for (i = -1; ++i < r.length; )
      if (String(r[i]).slice(0, o0.length) === o0) {
        o = String(r[i]).slice(o0.length);
        break;
      }
  }
  return t(
    e,
    "code",
    { lang: o || null, meta: null },
    Mee(Fn(t, Yf(e)))
  );
}
function Ree(t, e) {
  return t(e, "html", "<!--" + Fn(t, e.value) + "-->");
}
function s0(t, e) {
  return t(e, "delete", Pe(t, e));
}
function Hb(t) {
  let e = -1;
  if (t.length > 1) {
    for (; ++e < t.length; )
      if (t[e].spread)
        return !0;
  }
  return !1;
}
function X7(t, e) {
  const n = Pe(t, e);
  let i = -1;
  for (; ++i < n.length; ) {
    const r = n[i];
    r.type !== "listItem" && (n[i] = {
      type: "listItem",
      spread: !1,
      checked: null,
      // @ts-expect-error Assume `children[index]` is block content.
      children: [r]
    });
  }
  return n;
}
const Iee = Lt("div"), Lee = Lt("dt"), Dee = Lt("dd");
function Pee(t, e) {
  const n = e.children;
  let i = -1, r = [];
  const o = [];
  let s = { titles: [], definitions: [] }, a, l;
  for (; ++i < n.length; )
    a = n[i], r = r.concat(Iee(a) ? a.children : a);
  for (i = -1; ++i < r.length; )
    a = r[i], Lee(a) ? (Dee(r[i - 1]) && (o.push(s), s = { titles: [], definitions: [] }), s.titles.push(a)) : s.definitions.push(a);
  o.push(s), i = -1;
  const c = [];
  for (; ++i < o.length; )
    l = [
      ...A_(t, o[i].titles),
      ...A_(t, o[i].definitions)
    ], l.length > 0 && c.push({
      type: "listItem",
      spread: l.length > 1,
      checked: null,
      children: l
    });
  if (c.length > 0)
    return t(
      e,
      "list",
      { ordered: !1, start: null, spread: Hb(c) },
      c
    );
}
function A_(t, e) {
  const n = X7(t, { type: "element", tagName: "x", children: e });
  return n.length === 0 ? [] : n.length === 1 ? n[0].children : [
    {
      type: "list",
      ordered: !1,
      start: null,
      spread: Hb(n),
      children: n
    }
  ];
}
function Gd(t, e) {
  return t(e, "emphasis", Pe(t, e));
}
function Fa(t, e) {
  const n = Number(e.tagName.charAt(1)) || 1, i = t.wrapText;
  t.wrapText = !1;
  const r = t(e, "heading", { depth: n }, Pe(t, e));
  return t.wrapText = i, r;
}
function Fee(t, e) {
  return t(e, "thematicBreak");
}
function Bee(t, e) {
  const n = e.properties, i = String(n.src || ""), r = String(n.title || "");
  if (i && r)
    return {
      type: "link",
      title: null,
      url: ga(t, i),
      children: [{ type: "text", value: Fn(t, r) }]
    };
}
function M_(t, e) {
  const n = e.properties;
  return t(e, "image", {
    url: ga(t, String(n.src || "") || null),
    title: n.title || null,
    alt: n.alt || ""
  });
}
function bc(t, e) {
  return t(e, "inlineCode", Fn(t, Yf(e)));
}
const Hee = Lt("option");
function Q7(t, e, n) {
  const i = n || e.properties;
  let r = Z7(e);
  const o = Math.min(Number.parseInt(String(i.size), 10), 0) || (i.multiple ? 4 : 1);
  let s = -1;
  const a = [], l = [];
  for (; ++s < r.length; )
    Kf(r[s], "selected") && a.push(r[s]);
  for (r = (a.length > 0 ? a : r).slice(0, o), s = -1; ++s < r.length; ) {
    const f = r[s], d = Fn(t, Yf(f)), u = f.properties, h = d || String(u.label || ""), p = String(u.value || "") || d;
    l.push([p, h === p ? null : h]);
  }
  return l;
}
function Z7(t) {
  const e = t.children;
  let n = -1, i = [], r;
  for (; ++n < e.length; )
    r = e[n], Array.isArray(r.children) && (i = i.concat(Z7(r))), Hee(r) && !Kf(r, "disabled") && i.push(r);
  return i;
}
const $ee = Lt("datalist");
function jee(t, e) {
  const n = e.properties;
  let i = String(n.value || n.placeholder || "");
  const r = [], o = [];
  let s = [], a = -1, l;
  if (!(n.disabled || n.type === "hidden" || n.type === "file")) {
    if (n.type === "checkbox" || n.type === "radio")
      return t(
        e,
        "text",
        Fn(t, t[n.checked ? "checked" : "unchecked"])
      );
    if (n.type === "image")
      return n.alt || i ? t(e, "image", {
        url: ga(t, String(n.src || "") || null),
        title: Fn(t, String(n.title || "")) || null,
        alt: Fn(t, String(n.alt || i))
      }) : [];
    if (i ? s = [[i, null]] : (
      // `list` is not supported on these types:
      n.type !== "password" && n.type !== "file" && n.type !== "submit" && n.type !== "reset" && n.type !== "button" && n.list && (l = String(n.list).toUpperCase(), Y1.call(t.nodeById, l) && $ee(t.nodeById[l]) && (s = Q7(t, t.nodeById[l], n)))
    ), s.length !== 0) {
      if (n.type === "password" && (s[0] = ["•".repeat(s[0][0].length), null]), n.type === "url" || n.type === "email") {
        for (; ++a < s.length; )
          i = ga(t, s[a][0]), r.push(
            t(
              e,
              "link",
              {
                title: null,
                url: Fn(t, n.type === "email" ? "mailto:" + i : i)
              },
              [{ type: "text", value: Fn(t, s[a][1] || i) }]
            )
          ), a !== s.length - 1 && r.push({ type: "text", value: ", " });
        return r;
      }
      for (; ++a < s.length; )
        o.push(
          s[a][1] ? s[a][1] + " (" + s[a][0] + ")" : s[a][0]
        );
      return t(e, "text", Fn(t, o.join(", ")));
    }
  }
}
const zee = Lt("p"), Uee = Lt("input");
function a0(t, e) {
  const n = e.children[0];
  let i = null, r, o;
  zee(n) && (r = n.children[0], Uee(r) && r.properties && (r.properties.type === "checkbox" || r.properties.type === "radio") && (i = !!r.properties.checked, o = {
    ...e,
    children: [
      { ...n, children: n.children.slice(1) },
      ...e.children.slice(1)
    ]
  }));
  const s = Yt(t, o || e);
  return t(e, "listItem", { spread: s.length > 1, checked: i }, s);
}
const Vee = Lt("ol");
function l0(t, e) {
  const n = Vee(e), i = X7(t, e);
  let r = null;
  return n && (r = Kf(e, "start") ? (
    // @ts-expect-error: `props` exist.
    Number.parseInt(String(e.properties.start), 10)
  ) : 1), t(
    e,
    "list",
    { ordered: n, start: r, spread: Hb(i) },
    i
  );
}
const Wee = {};
function kp(t, e) {
  const n = Wee, i = typeof n.includeImageAlt == "boolean" ? n.includeImageAlt : !0, r = typeof n.includeHtml == "boolean" ? n.includeHtml : !0;
  return eS(t, i, r);
}
function eS(t, e, n) {
  if (qee(t)) {
    if ("value" in t)
      return t.type === "html" && !n ? "" : t.value;
    if (e && "alt" in t && t.alt)
      return t.alt;
    if ("children" in t)
      return N_(t.children, e, n);
  }
  return Array.isArray(t) ? N_(t, e, n) : "";
}
function N_(t, e, n) {
  const i = [];
  let r = -1;
  for (; ++r < t.length; )
    i[r] = eS(t[r], e, n);
  return i.join("");
}
function qee(t) {
  return !!(t && typeof t == "object");
}
const Gee = Lt("source"), Kee = Lt("video");
function O_(t, e) {
  let n = Pe(t, e);
  const i = e.properties, r = Kee(e) && String(i.poster || "");
  let o = String(i.src || ""), s = -1, a = !1, l;
  if (ma({ type: "root", children: n }, "link", c), a || bp(n))
    return n;
  for (; !o && ++s < e.children.length; )
    l = e.children[s], Gee(l) && (o = String(l.properties.src || ""));
  return r && (n = [
    {
      type: "image",
      title: null,
      url: ga(t, r),
      alt: kp({ children: n })
    }
  ]), {
    type: "link",
    // @ts-expect-error Types are broken.
    title: e.properties.title || null,
    url: ga(t, o),
    // @ts-expect-error Assume phrasing content.
    children: n
  };
  function c() {
    return a = !0, K1;
  }
}
function R_(t, e) {
  const n = Pe(t, e);
  if (n.length > 0)
    return t(e, "paragraph", n);
}
function Yee(t, e) {
  const n = t.quotes[t.qNesting % t.quotes.length];
  t.qNesting++;
  const i = Pe(t, e);
  return t.qNesting--, i.unshift({ type: "text", value: n.charAt(0) }), i.push({
    type: "text",
    value: n.length > 1 ? n.charAt(1) : n
  }), i;
}
function Jee(t, e) {
  let n = Pe(t, e);
  return (t.document || bp(n)) && (n = V7(n)), t(e, "root", n);
}
function Xee(t, e) {
  const n = Q7(t, e);
  let i = -1;
  const r = [];
  let o;
  for (; ++i < n.length; )
    o = n[i], r.push(o[1] ? o[1] + " (" + o[0] + ")" : o[0]);
  if (r.length > 0)
    return t(e, "text", Fn(t, r.join(", ")));
}
function I_(t, e) {
  return t(e, "strong", Pe(t, e));
}
function L_(t, e) {
  const n = t.wrapText;
  t.wrapText = !1;
  const i = t(e, "tableCell", Pe(t, e));
  if (e.properties && (e.properties.rowSpan || e.properties.colSpan)) {
    const r = i.data || (i.data = {});
    e.properties.rowSpan && (r.rowSpan = e.properties.rowSpan), e.properties.colSpan && (r.colSpan = e.properties.colSpan);
  }
  return t.wrapText = n, i;
}
function Qee(t, e) {
  return t(e, "tableRow", Pe(t, e));
}
const Zee = Lt("thead"), ete = Lt("tr"), tte = Lt(["th", "td"]);
function nte(t, e) {
  if (t.inTable)
    return t(e, "text", Fn(t, Yf(e)));
  t.inTable = !0;
  const { headless: n, align: i } = ite(e), r = rte(Pe(t, e), n);
  let o = 1, s = -1;
  for (; ++s < r.length; ) {
    const l = r[s].children;
    let c = -1;
    for (; ++c < l.length; ) {
      const f = l[c];
      if (f.data) {
        const d = Number.parseInt(String(f.data.colSpan), 10) || 1, u = Number.parseInt(String(f.data.rowSpan), 10) || 1;
        if (d > 1 || u > 1) {
          let h = s - 1;
          for (; ++h < s + u; ) {
            let p = c - 1;
            for (; ++p < c + d && r[h]; ) {
              const m = [];
              (h !== s || p !== c) && m.push({ type: "tableCell", children: [] }), r[h].children.splice(p, 0, ...m);
            }
          }
        }
        "colSpan" in f.data && delete f.data.colSpan, "rowSpan" in f.data && delete f.data.rowSpan, Object.keys(f.data).length === 0 && delete f.data;
      }
    }
    l.length > o && (o = l.length);
  }
  for (s = -1; ++s < r.length; ) {
    const l = r[s].children;
    let c = l.length - 1;
    for (; ++c < o; )
      l.push({ type: "tableCell", children: [] });
  }
  let a = i.length - 1;
  for (; ++a < o; )
    i.push(null);
  return t.inTable = !1, t(e, "table", { align: i }, r);
}
function ite(t) {
  let e = !0, n = 0, i = 0;
  const r = [null];
  return ma(t, "element", (o) => {
    if (o.tagName === "table" && t !== o)
      return z7;
    tte(o) && o.properties ? (r[i] || (r[i] = String(o.properties.align || "") || null), e && n < 2 && o.tagName === "th" && (e = !1), i++) : Zee(o) ? e = !1 : ete(o) && (n++, i = 0);
  }), { align: r, headless: e };
}
function rte(t, e) {
  let n = -1;
  const i = [];
  let r;
  for (e && i.push({ type: "tableRow", children: [] }); ++n < t.length; ) {
    const o = t[n];
    o.type === "tableRow" ? (r && (o.children.unshift(...r), r = void 0), i.push(o)) : (r || (r = []), r.push(o));
  }
  for (r && i[i.length - 1].children.push(...r), n = -1; ++n < i.length; )
    i[n].children = ote(i[n].children);
  return i;
}
function ote(t) {
  const e = [];
  let n = -1, i, r;
  for (; ++n < t.length; )
    i = t[n], i.type === "tableCell" ? (r && (i.children.unshift(...r), r = void 0), e.push(i)) : (r || (r = []), r.push(i));
  return r && (i = e[e.length - 1], i || (i = { type: "tableCell", children: [] }, e.push(i)), i.children.push(...r)), e;
}
function ste(t, e) {
  return t(e, "text", Fn(t, e.value));
}
function ate(t, e) {
  return t(e, "text", Fn(t, Yf(e)));
}
function lte(t, e) {
  return t(e, "text", "​");
}
const Kg = {
  root: Jee,
  text: ste,
  comment: Ree,
  doctype: rt,
  applet: rt,
  area: rt,
  basefont: rt,
  bgsound: rt,
  caption: rt,
  col: rt,
  colgroup: rt,
  command: rt,
  content: rt,
  datalist: rt,
  dialog: rt,
  element: rt,
  embed: rt,
  frame: rt,
  frameset: rt,
  isindex: rt,
  keygen: rt,
  link: rt,
  math: rt,
  menu: rt,
  menuitem: rt,
  meta: rt,
  nextid: rt,
  noembed: rt,
  noframes: rt,
  optgroup: rt,
  option: rt,
  param: rt,
  script: rt,
  shadow: rt,
  source: rt,
  spacer: rt,
  style: rt,
  svg: rt,
  template: rt,
  title: rt,
  track: rt,
  abbr: Pe,
  acronym: Pe,
  bdi: Pe,
  bdo: Pe,
  big: Pe,
  blink: Pe,
  button: Pe,
  canvas: Pe,
  cite: Pe,
  data: Pe,
  details: Pe,
  dfn: Pe,
  font: Pe,
  ins: Pe,
  label: Pe,
  map: Pe,
  marquee: Pe,
  meter: Pe,
  nobr: Pe,
  noscript: Pe,
  object: Pe,
  output: Pe,
  progress: Pe,
  rb: Pe,
  rbc: Pe,
  rp: Pe,
  rt: Pe,
  rtc: Pe,
  ruby: Pe,
  slot: Pe,
  small: Pe,
  span: Pe,
  sup: Pe,
  sub: Pe,
  tbody: Pe,
  tfoot: Pe,
  thead: Pe,
  time: Pe,
  address: Yt,
  article: Yt,
  aside: Yt,
  body: Yt,
  center: Yt,
  div: Yt,
  fieldset: Yt,
  figcaption: Yt,
  figure: Yt,
  form: Yt,
  footer: Yt,
  header: Yt,
  hgroup: Yt,
  html: Yt,
  legend: Yt,
  main: Yt,
  multicol: Yt,
  nav: Yt,
  picture: Yt,
  section: Yt,
  a: vee,
  audio: O_,
  b: I_,
  base: bee,
  blockquote: kee,
  br: wee,
  code: bc,
  dir: l0,
  dl: Pee,
  dt: a0,
  dd: a0,
  del: s0,
  em: Gd,
  h1: Fa,
  h2: Fa,
  h3: Fa,
  h4: Fa,
  h5: Fa,
  h6: Fa,
  hr: Fee,
  i: Gd,
  iframe: Bee,
  img: M_,
  image: M_,
  input: jee,
  kbd: bc,
  li: a0,
  listing: qd,
  mark: Gd,
  ol: l0,
  p: R_,
  plaintext: qd,
  pre: qd,
  q: Yee,
  s: s0,
  samp: bc,
  select: Xee,
  strike: s0,
  strong: I_,
  summary: R_,
  table: nte,
  td: L_,
  textarea: ate,
  th: L_,
  tr: Qee,
  tt: bc,
  u: Gd,
  ul: l0,
  var: bc,
  video: O_,
  wbr: lte,
  xmp: qd
};
function rt() {
}
const cte = Os(["heading", "paragraph", "root"]);
function tS(t, e = {}) {
  const n = {};
  let i;
  const r = Object.assign(
    /**
     * @type {HWithProps & HWithoutProps}
     */
    /**
     * @param {Node} node
     * @param {string} type
     * @param {Properties|string|Array<Node>} [props]
     * @param {string|Array<Node>} [children]
     */
    (a, l, c, f) => {
      let d;
      typeof c == "string" || Array.isArray(c) ? (f = c, d = {}) : d = c;
      const u = { type: l, ...d };
      return typeof f == "string" ? u.value = f : f && (u.children = f), a.position && (u.position = a.position), u;
    },
    {
      nodeById: n,
      baseFound: !1,
      inTable: !1,
      wrapText: !0,
      /** @type {string|null} */
      frozenBaseUrl: null,
      qNesting: 0,
      handlers: e.handlers ? { ...Kg, ...e.handlers } : Kg,
      document: e.document,
      checked: e.checked || "[x]",
      unchecked: e.unchecked || "[ ]",
      quotes: e.quotes || ['"']
    }
  );
  ma(t, "element", (a) => {
    const l = a.properties && "id" in a.properties && String(a.properties.id).toUpperCase();
    l && !Y1.call(n, l) && (n[l] = a);
  }), GZ({ newlines: e.newlines === !0 })(t);
  const o = Bb(r, t, void 0);
  return o ? Array.isArray(o) ? i = { type: "root", children: o } : i = o : i = { type: "root", children: [] }, ma(i, "text", s), i;
  function s(a, l, c) {
    if (l === null || !c)
      return;
    const f = c.children[l - 1];
    if (f && f.type === a.type)
      return f.value += a.value, c.children.splice(l, 1), f.position && a.position && (f.position.end = a.position.end), l - 1;
    if (a.value = a.value.replace(/[\t ]*(\r?\n|\r)[\t ]*/, "$1"), c && cte(c) && (l || (a.value = a.value.replace(/^[\t ]+/, "")), l === c.children.length - 1 && (a.value = a.value.replace(/[\t ]+$/, ""))), !a.value)
      return c.children.splice(l, 1), l;
  }
}
const fte = (
  /**
   * @type {(import('unified').Plugin<[Processor, Options?], HastRoot> & import('unified').Plugin<[Options?]|void[], HastRoot, MdastRoot>)}
   */
  /**
   * @param {Processor|Options} [destination]
   * @param {Options} [options]
   */
  function(t, e) {
    let n, i;
    return typeof t == "function" ? (i = t, n = e || {}) : n = t || {}, (n.document === void 0 || n.document === null) && (n = Object.assign({}, n, { document: !0 })), i ? dte(i, n) : ute(n);
  }
);
function dte(t, e) {
  return (n, i, r) => {
    t.run(tS(n, e), i, (o) => {
      r(o);
    });
  };
}
function ute(t = {}) {
  return (e) => (
    /** @type {MdastRoot} */
    tS(e, t)
  );
}
const hte = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  all: Pe,
  default: fte,
  defaultHandlers: Kg,
  one: Bb
}, Symbol.toStringTag, { value: "Module" }));
function pi(t, e, n, i) {
  const r = t.length;
  let o = 0, s;
  if (e < 0 ? e = -e > r ? 0 : r + e : e = e > r ? r : e, n = n > 0 ? n : 0, i.length < 1e4)
    s = Array.from(i), s.unshift(e, n), t.splice(...s);
  else
    for (n && t.splice(e, n); o < i.length; )
      s = i.slice(o, o + 1e4), s.unshift(e, 0), t.splice(...s), o += 1e4, e += 1e4;
}
function xi(t, e) {
  return t.length > 0 ? (pi(t, t.length, 0, e), t) : e;
}
const D_ = {}.hasOwnProperty;
function nS(t) {
  const e = {};
  let n = -1;
  for (; ++n < t.length; )
    pte(e, t[n]);
  return e;
}
function pte(t, e) {
  let n;
  for (n in e) {
    const r = (D_.call(t, n) ? t[n] : void 0) || (t[n] = {}), o = e[n];
    let s;
    if (o)
      for (s in o) {
        D_.call(r, s) || (r[s] = []);
        const a = o[s];
        mte(
          // @ts-expect-error Looks like a list.
          r[s],
          Array.isArray(a) ? a : a ? [a] : []
        );
      }
  }
}
function mte(t, e) {
  let n = -1;
  const i = [];
  for (; ++n < e.length; )
    (e[n].add === "after" ? t : i).push(e[n]);
  pi(t, 0, 0, i);
}
const gte = /[!-\/:-@\[-`\{-~\xA1\xA7\xAB\xB6\xB7\xBB\xBF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061D-\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1B7D\u1B7E\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u2E52-\u2E5D\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]/, Vn = Rs(/[A-Za-z]/), jn = Rs(/[\dA-Za-z]/), yte = Rs(/[#-'*+\--9=?A-Z^-~]/);
function J1(t) {
  return (
    // Special whitespace codes (which have negative values), C0 and Control
    // character DEL
    t !== null && (t < 32 || t === 127)
  );
}
const Yg = Rs(/\d/), vte = Rs(/[\dA-Fa-f]/), bte = Rs(/[!-/:-@[-`{-~]/);
function He(t) {
  return t !== null && t < -2;
}
function It(t) {
  return t !== null && (t < 0 || t === 32);
}
function lt(t) {
  return t === -2 || t === -1 || t === 32;
}
const wp = Rs(gte), ya = Rs(/\s/);
function Rs(t) {
  return e;
  function e(n) {
    return n !== null && t.test(String.fromCharCode(n));
  }
}
const kte = {
  tokenize: Ste,
  partial: !0
}, iS = {
  tokenize: xte,
  partial: !0
}, rS = {
  tokenize: Ate,
  partial: !0
}, oS = {
  tokenize: Mte,
  partial: !0
}, wte = {
  tokenize: Nte,
  partial: !0
}, sS = {
  tokenize: Tte,
  previous: lS
}, aS = {
  tokenize: Cte,
  previous: cS
}, Mo = {
  tokenize: Ete,
  previous: fS
}, Wr = {}, _te = {
  text: Wr
};
let Ps = 48;
for (; Ps < 123; )
  Wr[Ps] = Mo, Ps++, Ps === 58 ? Ps = 65 : Ps === 91 && (Ps = 97);
Wr[43] = Mo;
Wr[45] = Mo;
Wr[46] = Mo;
Wr[95] = Mo;
Wr[72] = [Mo, aS];
Wr[104] = [Mo, aS];
Wr[87] = [Mo, sS];
Wr[119] = [Mo, sS];
function Ete(t, e, n) {
  const i = this;
  let r, o;
  return s;
  function s(d) {
    return !Jg(d) || !fS.call(i, i.previous) || $b(i.events) ? n(d) : (t.enter("literalAutolink"), t.enter("literalAutolinkEmail"), a(d));
  }
  function a(d) {
    return Jg(d) ? (t.consume(d), a) : d === 64 ? (t.consume(d), l) : n(d);
  }
  function l(d) {
    return d === 46 ? t.check(
      wte,
      f,
      c
    )(d) : d === 45 || d === 95 || jn(d) ? (o = !0, t.consume(d), l) : f(d);
  }
  function c(d) {
    return t.consume(d), r = !0, l;
  }
  function f(d) {
    return o && r && Vn(i.previous) ? (t.exit("literalAutolinkEmail"), t.exit("literalAutolink"), e(d)) : n(d);
  }
}
function Tte(t, e, n) {
  const i = this;
  return r;
  function r(s) {
    return s !== 87 && s !== 119 || !lS.call(i, i.previous) || $b(i.events) ? n(s) : (t.enter("literalAutolink"), t.enter("literalAutolinkWww"), t.check(
      kte,
      t.attempt(iS, t.attempt(rS, o), n),
      n
    )(s));
  }
  function o(s) {
    return t.exit("literalAutolinkWww"), t.exit("literalAutolink"), e(s);
  }
}
function Cte(t, e, n) {
  const i = this;
  let r = "", o = !1;
  return s;
  function s(d) {
    return (d === 72 || d === 104) && cS.call(i, i.previous) && !$b(i.events) ? (t.enter("literalAutolink"), t.enter("literalAutolinkHttp"), r += String.fromCodePoint(d), t.consume(d), a) : n(d);
  }
  function a(d) {
    if (Vn(d) && r.length < 5)
      return r += String.fromCodePoint(d), t.consume(d), a;
    if (d === 58) {
      const u = r.toLowerCase();
      if (u === "http" || u === "https")
        return t.consume(d), l;
    }
    return n(d);
  }
  function l(d) {
    return d === 47 ? (t.consume(d), o ? c : (o = !0, l)) : n(d);
  }
  function c(d) {
    return d === null || J1(d) || It(d) || ya(d) || wp(d) ? n(d) : t.attempt(iS, t.attempt(rS, f), n)(d);
  }
  function f(d) {
    return t.exit("literalAutolinkHttp"), t.exit("literalAutolink"), e(d);
  }
}
function Ste(t, e, n) {
  let i = 0;
  return r;
  function r(s) {
    return (s === 87 || s === 119) && i < 3 ? (i++, t.consume(s), r) : s === 46 && i === 3 ? (t.consume(s), o) : n(s);
  }
  function o(s) {
    return s === null ? n(s) : e(s);
  }
}
function xte(t, e, n) {
  let i, r, o;
  return s;
  function s(c) {
    return c === 46 || c === 95 ? t.check(oS, l, a)(c) : c === null || It(c) || ya(c) || c !== 45 && wp(c) ? l(c) : (o = !0, t.consume(c), s);
  }
  function a(c) {
    return c === 95 ? i = !0 : (r = i, i = void 0), t.consume(c), s;
  }
  function l(c) {
    return r || i || !o ? n(c) : e(c);
  }
}
function Ate(t, e) {
  let n = 0, i = 0;
  return r;
  function r(s) {
    return s === 40 ? (n++, t.consume(s), r) : s === 41 && i < n ? o(s) : s === 33 || s === 34 || s === 38 || s === 39 || s === 41 || s === 42 || s === 44 || s === 46 || s === 58 || s === 59 || s === 60 || s === 63 || s === 93 || s === 95 || s === 126 ? t.check(oS, e, o)(s) : s === null || It(s) || ya(s) ? e(s) : (t.consume(s), r);
  }
  function o(s) {
    return s === 41 && i++, t.consume(s), r;
  }
}
function Mte(t, e, n) {
  return i;
  function i(a) {
    return a === 33 || a === 34 || a === 39 || a === 41 || a === 42 || a === 44 || a === 46 || a === 58 || a === 59 || a === 63 || a === 95 || a === 126 ? (t.consume(a), i) : a === 38 ? (t.consume(a), o) : a === 93 ? (t.consume(a), r) : (
      // `<` is an end.
      a === 60 || // So is whitespace.
      a === null || It(a) || ya(a) ? e(a) : n(a)
    );
  }
  function r(a) {
    return a === null || a === 40 || a === 91 || It(a) || ya(a) ? e(a) : i(a);
  }
  function o(a) {
    return Vn(a) ? s(a) : n(a);
  }
  function s(a) {
    return a === 59 ? (t.consume(a), i) : Vn(a) ? (t.consume(a), s) : n(a);
  }
}
function Nte(t, e, n) {
  return i;
  function i(o) {
    return t.consume(o), r;
  }
  function r(o) {
    return jn(o) ? n(o) : e(o);
  }
}
function lS(t) {
  return t === null || t === 40 || t === 42 || t === 95 || t === 91 || t === 93 || t === 126 || It(t);
}
function cS(t) {
  return !Vn(t);
}
function fS(t) {
  return !(t === 47 || Jg(t));
}
function Jg(t) {
  return t === 43 || t === 45 || t === 46 || t === 95 || jn(t);
}
function $b(t) {
  let e = t.length, n = !1;
  for (; e--; ) {
    const i = t[e][1];
    if ((i.type === "labelLink" || i.type === "labelImage") && !i._balanced) {
      n = !0;
      break;
    }
    if (i._gfmAutolinkLiteralWalkedInto) {
      n = !1;
      break;
    }
  }
  return t.length > 0 && !n && (t[t.length - 1][1]._gfmAutolinkLiteralWalkedInto = !0), n;
}
function Wl(t) {
  const e = [];
  let n = -1, i = 0, r = 0;
  for (; ++n < t.length; ) {
    const o = t.charCodeAt(n);
    let s = "";
    if (o === 37 && jn(t.charCodeAt(n + 1)) && jn(t.charCodeAt(n + 2)))
      r = 2;
    else if (o < 128)
      /[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(o)) || (s = String.fromCharCode(o));
    else if (o > 55295 && o < 57344) {
      const a = t.charCodeAt(n + 1);
      o < 56320 && a > 56319 && a < 57344 ? (s = String.fromCharCode(o, a), r = 1) : s = "�";
    } else
      s = String.fromCharCode(o);
    s && (e.push(t.slice(i, n), encodeURIComponent(s)), i = n + r + 1, s = ""), r && (n += r, r = 0);
  }
  return e.join("") + t.slice(i);
}
function X1(t) {
  if (t === null || It(t) || ya(t))
    return 1;
  if (wp(t))
    return 2;
}
function _p(t, e, n) {
  const i = [];
  let r = -1;
  for (; ++r < t.length; ) {
    const o = t[r].resolveAll;
    o && !i.includes(o) && (e = o(e, n), i.push(o));
  }
  return e;
}
const Xg = {
  name: "attention",
  tokenize: Rte,
  resolveAll: Ote
};
function Ote(t, e) {
  let n = -1, i, r, o, s, a, l, c, f;
  for (; ++n < t.length; )
    if (t[n][0] === "enter" && t[n][1].type === "attentionSequence" && t[n][1]._close) {
      for (i = n; i--; )
        if (t[i][0] === "exit" && t[i][1].type === "attentionSequence" && t[i][1]._open && // If the markers are the same:
        e.sliceSerialize(t[i][1]).charCodeAt(0) === e.sliceSerialize(t[n][1]).charCodeAt(0)) {
          if ((t[i][1]._close || t[n][1]._open) && (t[n][1].end.offset - t[n][1].start.offset) % 3 && !((t[i][1].end.offset - t[i][1].start.offset + t[n][1].end.offset - t[n][1].start.offset) % 3))
            continue;
          l = t[i][1].end.offset - t[i][1].start.offset > 1 && t[n][1].end.offset - t[n][1].start.offset > 1 ? 2 : 1;
          const d = Object.assign({}, t[i][1].end), u = Object.assign({}, t[n][1].start);
          P_(d, -l), P_(u, l), s = {
            type: l > 1 ? "strongSequence" : "emphasisSequence",
            start: d,
            end: Object.assign({}, t[i][1].end)
          }, a = {
            type: l > 1 ? "strongSequence" : "emphasisSequence",
            start: Object.assign({}, t[n][1].start),
            end: u
          }, o = {
            type: l > 1 ? "strongText" : "emphasisText",
            start: Object.assign({}, t[i][1].end),
            end: Object.assign({}, t[n][1].start)
          }, r = {
            type: l > 1 ? "strong" : "emphasis",
            start: Object.assign({}, s.start),
            end: Object.assign({}, a.end)
          }, t[i][1].end = Object.assign({}, s.start), t[n][1].start = Object.assign({}, a.end), c = [], t[i][1].end.offset - t[i][1].start.offset && (c = xi(c, [
            ["enter", t[i][1], e],
            ["exit", t[i][1], e]
          ])), c = xi(c, [
            ["enter", r, e],
            ["enter", s, e],
            ["exit", s, e],
            ["enter", o, e]
          ]), c = xi(
            c,
            _p(
              e.parser.constructs.insideSpan.null,
              t.slice(i + 1, n),
              e
            )
          ), c = xi(c, [
            ["exit", o, e],
            ["enter", a, e],
            ["exit", a, e],
            ["exit", r, e]
          ]), t[n][1].end.offset - t[n][1].start.offset ? (f = 2, c = xi(c, [
            ["enter", t[n][1], e],
            ["exit", t[n][1], e]
          ])) : f = 0, pi(t, i - 1, n - i + 3, c), n = i + c.length - f - 2;
          break;
        }
    }
  for (n = -1; ++n < t.length; )
    t[n][1].type === "attentionSequence" && (t[n][1].type = "data");
  return t;
}
function Rte(t, e) {
  const n = this.parser.constructs.attentionMarkers.null, i = this.previous, r = X1(i);
  let o;
  return s;
  function s(l) {
    return o = l, t.enter("attentionSequence"), a(l);
  }
  function a(l) {
    if (l === o)
      return t.consume(l), a;
    const c = t.exit("attentionSequence"), f = X1(l), d = !f || f === 2 && r || n.includes(l), u = !r || r === 2 && f || n.includes(i);
    return c._open = !!(o === 42 ? d : d && (r || !u)), c._close = !!(o === 42 ? u : u && (f || !d)), e(l);
  }
}
function P_(t, e) {
  t.column += e, t.offset += e, t._bufferIndex += e;
}
const Ite = {
  name: "autolink",
  tokenize: Lte
};
function Lte(t, e, n) {
  let i = 0;
  return r;
  function r(h) {
    return t.enter("autolink"), t.enter("autolinkMarker"), t.consume(h), t.exit("autolinkMarker"), t.enter("autolinkProtocol"), o;
  }
  function o(h) {
    return Vn(h) ? (t.consume(h), s) : c(h);
  }
  function s(h) {
    return h === 43 || h === 45 || h === 46 || jn(h) ? (i = 1, a(h)) : c(h);
  }
  function a(h) {
    return h === 58 ? (t.consume(h), i = 0, l) : (h === 43 || h === 45 || h === 46 || jn(h)) && i++ < 32 ? (t.consume(h), a) : (i = 0, c(h));
  }
  function l(h) {
    return h === 62 ? (t.exit("autolinkProtocol"), t.enter("autolinkMarker"), t.consume(h), t.exit("autolinkMarker"), t.exit("autolink"), e) : h === null || h === 32 || h === 60 || J1(h) ? n(h) : (t.consume(h), l);
  }
  function c(h) {
    return h === 64 ? (t.consume(h), f) : yte(h) ? (t.consume(h), c) : n(h);
  }
  function f(h) {
    return jn(h) ? d(h) : n(h);
  }
  function d(h) {
    return h === 46 ? (t.consume(h), i = 0, f) : h === 62 ? (t.exit("autolinkProtocol").type = "autolinkEmail", t.enter("autolinkMarker"), t.consume(h), t.exit("autolinkMarker"), t.exit("autolink"), e) : u(h);
  }
  function u(h) {
    if ((h === 45 || jn(h)) && i++ < 63) {
      const p = h === 45 ? u : d;
      return t.consume(h), p;
    }
    return n(h);
  }
}
function vt(t, e, n, i) {
  const r = i ? i - 1 : Number.POSITIVE_INFINITY;
  let o = 0;
  return s;
  function s(l) {
    return lt(l) ? (t.enter(n), a(l)) : e(l);
  }
  function a(l) {
    return lt(l) && o++ < r ? (t.consume(l), a) : (t.exit(n), e(l));
  }
}
const Jf = {
  tokenize: Dte,
  partial: !0
};
function Dte(t, e, n) {
  return i;
  function i(o) {
    return lt(o) ? vt(t, r, "linePrefix")(o) : r(o);
  }
  function r(o) {
    return o === null || He(o) ? e(o) : n(o);
  }
}
const dS = {
  name: "blockQuote",
  tokenize: Pte,
  continuation: {
    tokenize: Fte
  },
  exit: Bte
};
function Pte(t, e, n) {
  const i = this;
  return r;
  function r(s) {
    if (s === 62) {
      const a = i.containerState;
      return a.open || (t.enter("blockQuote", {
        _container: !0
      }), a.open = !0), t.enter("blockQuotePrefix"), t.enter("blockQuoteMarker"), t.consume(s), t.exit("blockQuoteMarker"), o;
    }
    return n(s);
  }
  function o(s) {
    return lt(s) ? (t.enter("blockQuotePrefixWhitespace"), t.consume(s), t.exit("blockQuotePrefixWhitespace"), t.exit("blockQuotePrefix"), e) : (t.exit("blockQuotePrefix"), e(s));
  }
}
function Fte(t, e, n) {
  const i = this;
  return r;
  function r(s) {
    return lt(s) ? vt(
      t,
      o,
      "linePrefix",
      i.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4
    )(s) : o(s);
  }
  function o(s) {
    return t.attempt(dS, e, n)(s);
  }
}
function Bte(t) {
  t.exit("blockQuote");
}
const uS = {
  name: "characterEscape",
  tokenize: Hte
};
function Hte(t, e, n) {
  return i;
  function i(o) {
    return t.enter("characterEscape"), t.enter("escapeMarker"), t.consume(o), t.exit("escapeMarker"), r;
  }
  function r(o) {
    return bte(o) ? (t.enter("characterEscapeValue"), t.consume(o), t.exit("characterEscapeValue"), t.exit("characterEscape"), e) : n(o);
  }
}
const F_ = document.createElement("i");
function jb(t) {
  const e = "&" + t + ";";
  F_.innerHTML = e;
  const n = F_.textContent;
  return n.charCodeAt(n.length - 1) === 59 && t !== "semi" || n === e ? !1 : n;
}
const hS = {
  name: "characterReference",
  tokenize: $te
};
function $te(t, e, n) {
  const i = this;
  let r = 0, o, s;
  return a;
  function a(d) {
    return t.enter("characterReference"), t.enter("characterReferenceMarker"), t.consume(d), t.exit("characterReferenceMarker"), l;
  }
  function l(d) {
    return d === 35 ? (t.enter("characterReferenceMarkerNumeric"), t.consume(d), t.exit("characterReferenceMarkerNumeric"), c) : (t.enter("characterReferenceValue"), o = 31, s = jn, f(d));
  }
  function c(d) {
    return d === 88 || d === 120 ? (t.enter("characterReferenceMarkerHexadecimal"), t.consume(d), t.exit("characterReferenceMarkerHexadecimal"), t.enter("characterReferenceValue"), o = 6, s = vte, f) : (t.enter("characterReferenceValue"), o = 7, s = Yg, f(d));
  }
  function f(d) {
    if (d === 59 && r) {
      const u = t.exit("characterReferenceValue");
      return s === jn && !jb(i.sliceSerialize(u)) ? n(d) : (t.enter("characterReferenceMarker"), t.consume(d), t.exit("characterReferenceMarker"), t.exit("characterReference"), e);
    }
    return s(d) && r++ < o ? (t.consume(d), f) : n(d);
  }
}
const B_ = {
  tokenize: zte,
  partial: !0
}, H_ = {
  name: "codeFenced",
  tokenize: jte,
  concrete: !0
};
function jte(t, e, n) {
  const i = this, r = {
    tokenize: S,
    partial: !0
  };
  let o = 0, s = 0, a;
  return l;
  function l(E) {
    return c(E);
  }
  function c(E) {
    const x = i.events[i.events.length - 1];
    return o = x && x[1].type === "linePrefix" ? x[2].sliceSerialize(x[1], !0).length : 0, a = E, t.enter("codeFenced"), t.enter("codeFencedFence"), t.enter("codeFencedFenceSequence"), f(E);
  }
  function f(E) {
    return E === a ? (s++, t.consume(E), f) : s < 3 ? n(E) : (t.exit("codeFencedFenceSequence"), lt(E) ? vt(t, d, "whitespace")(E) : d(E));
  }
  function d(E) {
    return E === null || He(E) ? (t.exit("codeFencedFence"), i.interrupt ? e(E) : t.check(B_, m, _)(E)) : (t.enter("codeFencedFenceInfo"), t.enter("chunkString", {
      contentType: "string"
    }), u(E));
  }
  function u(E) {
    return E === null || He(E) ? (t.exit("chunkString"), t.exit("codeFencedFenceInfo"), d(E)) : lt(E) ? (t.exit("chunkString"), t.exit("codeFencedFenceInfo"), vt(t, h, "whitespace")(E)) : E === 96 && E === a ? n(E) : (t.consume(E), u);
  }
  function h(E) {
    return E === null || He(E) ? d(E) : (t.enter("codeFencedFenceMeta"), t.enter("chunkString", {
      contentType: "string"
    }), p(E));
  }
  function p(E) {
    return E === null || He(E) ? (t.exit("chunkString"), t.exit("codeFencedFenceMeta"), d(E)) : E === 96 && E === a ? n(E) : (t.consume(E), p);
  }
  function m(E) {
    return t.attempt(r, _, v)(E);
  }
  function v(E) {
    return t.enter("lineEnding"), t.consume(E), t.exit("lineEnding"), y;
  }
  function y(E) {
    return o > 0 && lt(E) ? vt(
      t,
      C,
      "linePrefix",
      o + 1
    )(E) : C(E);
  }
  function C(E) {
    return E === null || He(E) ? t.check(B_, m, _)(E) : (t.enter("codeFlowValue"), k(E));
  }
  function k(E) {
    return E === null || He(E) ? (t.exit("codeFlowValue"), C(E)) : (t.consume(E), k);
  }
  function _(E) {
    return t.exit("codeFenced"), e(E);
  }
  function S(E, x, N) {
    let R = 0;
    return A;
    function A(G) {
      return E.enter("lineEnding"), E.consume(G), E.exit("lineEnding"), O;
    }
    function O(G) {
      return E.enter("codeFencedFence"), lt(G) ? vt(
        E,
        B,
        "linePrefix",
        i.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4
      )(G) : B(G);
    }
    function B(G) {
      return G === a ? (E.enter("codeFencedFenceSequence"), U(G)) : N(G);
    }
    function U(G) {
      return G === a ? (R++, E.consume(G), U) : R >= s ? (E.exit("codeFencedFenceSequence"), lt(G) ? vt(E, K, "whitespace")(G) : K(G)) : N(G);
    }
    function K(G) {
      return G === null || He(G) ? (E.exit("codeFencedFence"), x(G)) : N(G);
    }
  }
}
function zte(t, e, n) {
  const i = this;
  return r;
  function r(s) {
    return s === null ? n(s) : (t.enter("lineEnding"), t.consume(s), t.exit("lineEnding"), o);
  }
  function o(s) {
    return i.parser.lazy[i.now().line] ? n(s) : e(s);
  }
}
const c0 = {
  name: "codeIndented",
  tokenize: Vte
}, Ute = {
  tokenize: Wte,
  partial: !0
};
function Vte(t, e, n) {
  const i = this;
  return r;
  function r(c) {
    return t.enter("codeIndented"), vt(t, o, "linePrefix", 5)(c);
  }
  function o(c) {
    const f = i.events[i.events.length - 1];
    return f && f[1].type === "linePrefix" && f[2].sliceSerialize(f[1], !0).length >= 4 ? s(c) : n(c);
  }
  function s(c) {
    return c === null ? l(c) : He(c) ? t.attempt(Ute, s, l)(c) : (t.enter("codeFlowValue"), a(c));
  }
  function a(c) {
    return c === null || He(c) ? (t.exit("codeFlowValue"), s(c)) : (t.consume(c), a);
  }
  function l(c) {
    return t.exit("codeIndented"), e(c);
  }
}
function Wte(t, e, n) {
  const i = this;
  return r;
  function r(s) {
    return i.parser.lazy[i.now().line] ? n(s) : He(s) ? (t.enter("lineEnding"), t.consume(s), t.exit("lineEnding"), r) : vt(t, o, "linePrefix", 5)(s);
  }
  function o(s) {
    const a = i.events[i.events.length - 1];
    return a && a[1].type === "linePrefix" && a[2].sliceSerialize(a[1], !0).length >= 4 ? e(s) : He(s) ? r(s) : n(s);
  }
}
const qte = {
  name: "codeText",
  tokenize: Yte,
  resolve: Gte,
  previous: Kte
};
function Gte(t) {
  let e = t.length - 4, n = 3, i, r;
  if ((t[n][1].type === "lineEnding" || t[n][1].type === "space") && (t[e][1].type === "lineEnding" || t[e][1].type === "space")) {
    for (i = n; ++i < e; )
      if (t[i][1].type === "codeTextData") {
        t[n][1].type = "codeTextPadding", t[e][1].type = "codeTextPadding", n += 2, e -= 2;
        break;
      }
  }
  for (i = n - 1, e++; ++i <= e; )
    r === void 0 ? i !== e && t[i][1].type !== "lineEnding" && (r = i) : (i === e || t[i][1].type === "lineEnding") && (t[r][1].type = "codeTextData", i !== r + 2 && (t[r][1].end = t[i - 1][1].end, t.splice(r + 2, i - r - 2), e -= i - r - 2, i = r + 2), r = void 0);
  return t;
}
function Kte(t) {
  return t !== 96 || this.events[this.events.length - 1][1].type === "characterEscape";
}
function Yte(t, e, n) {
  let i = 0, r, o;
  return s;
  function s(d) {
    return t.enter("codeText"), t.enter("codeTextSequence"), a(d);
  }
  function a(d) {
    return d === 96 ? (t.consume(d), i++, a) : (t.exit("codeTextSequence"), l(d));
  }
  function l(d) {
    return d === null ? n(d) : d === 32 ? (t.enter("space"), t.consume(d), t.exit("space"), l) : d === 96 ? (o = t.enter("codeTextSequence"), r = 0, f(d)) : He(d) ? (t.enter("lineEnding"), t.consume(d), t.exit("lineEnding"), l) : (t.enter("codeTextData"), c(d));
  }
  function c(d) {
    return d === null || d === 32 || d === 96 || He(d) ? (t.exit("codeTextData"), l(d)) : (t.consume(d), c);
  }
  function f(d) {
    return d === 96 ? (t.consume(d), r++, f) : r === i ? (t.exit("codeTextSequence"), t.exit("codeText"), e(d)) : (o.type = "codeTextData", c(d));
  }
}
function pS(t) {
  const e = {};
  let n = -1, i, r, o, s, a, l, c;
  for (; ++n < t.length; ) {
    for (; n in e; )
      n = e[n];
    if (i = t[n], n && i[1].type === "chunkFlow" && t[n - 1][1].type === "listItemPrefix" && (l = i[1]._tokenizer.events, o = 0, o < l.length && l[o][1].type === "lineEndingBlank" && (o += 2), o < l.length && l[o][1].type === "content"))
      for (; ++o < l.length && l[o][1].type !== "content"; )
        l[o][1].type === "chunkText" && (l[o][1]._isInFirstContentOfListItem = !0, o++);
    if (i[0] === "enter")
      i[1].contentType && (Object.assign(e, Jte(t, n)), n = e[n], c = !0);
    else if (i[1]._container) {
      for (o = n, r = void 0; o-- && (s = t[o], s[1].type === "lineEnding" || s[1].type === "lineEndingBlank"); )
        s[0] === "enter" && (r && (t[r][1].type = "lineEndingBlank"), s[1].type = "lineEnding", r = o);
      r && (i[1].end = Object.assign({}, t[r][1].start), a = t.slice(r, n), a.unshift(i), pi(t, r, n - r + 1, a));
    }
  }
  return !c;
}
function Jte(t, e) {
  const n = t[e][1], i = t[e][2];
  let r = e - 1;
  const o = [], s = n._tokenizer || i.parser[n.contentType](n.start), a = s.events, l = [], c = {};
  let f, d, u = -1, h = n, p = 0, m = 0;
  const v = [m];
  for (; h; ) {
    for (; t[++r][1] !== h; )
      ;
    o.push(r), h._tokenizer || (f = i.sliceStream(h), h.next || f.push(null), d && s.defineSkip(h.start), h._isInFirstContentOfListItem && (s._gfmTasklistFirstContentOfListItem = !0), s.write(f), h._isInFirstContentOfListItem && (s._gfmTasklistFirstContentOfListItem = void 0)), d = h, h = h.next;
  }
  for (h = n; ++u < a.length; )
    // Find a void token that includes a break.
    a[u][0] === "exit" && a[u - 1][0] === "enter" && a[u][1].type === a[u - 1][1].type && a[u][1].start.line !== a[u][1].end.line && (m = u + 1, v.push(m), h._tokenizer = void 0, h.previous = void 0, h = h.next);
  for (s.events = [], h ? (h._tokenizer = void 0, h.previous = void 0) : v.pop(), u = v.length; u--; ) {
    const y = a.slice(v[u], v[u + 1]), C = o.pop();
    l.unshift([C, C + y.length - 1]), pi(t, C, 2, y);
  }
  for (u = -1; ++u < l.length; )
    c[p + l[u][0]] = p + l[u][1], p += l[u][1] - l[u][0] - 1;
  return c;
}
const Xte = {
  tokenize: ene,
  resolve: Zte
}, Qte = {
  tokenize: tne,
  partial: !0
};
function Zte(t) {
  return pS(t), t;
}
function ene(t, e) {
  let n;
  return i;
  function i(a) {
    return t.enter("content"), n = t.enter("chunkContent", {
      contentType: "content"
    }), r(a);
  }
  function r(a) {
    return a === null ? o(a) : He(a) ? t.check(
      Qte,
      s,
      o
    )(a) : (t.consume(a), r);
  }
  function o(a) {
    return t.exit("chunkContent"), t.exit("content"), e(a);
  }
  function s(a) {
    return t.consume(a), t.exit("chunkContent"), n.next = t.enter("chunkContent", {
      contentType: "content",
      previous: n
    }), n = n.next, r;
  }
}
function tne(t, e, n) {
  const i = this;
  return r;
  function r(s) {
    return t.exit("chunkContent"), t.enter("lineEnding"), t.consume(s), t.exit("lineEnding"), vt(t, o, "linePrefix");
  }
  function o(s) {
    if (s === null || He(s))
      return n(s);
    const a = i.events[i.events.length - 1];
    return !i.parser.constructs.disable.null.includes("codeIndented") && a && a[1].type === "linePrefix" && a[2].sliceSerialize(a[1], !0).length >= 4 ? e(s) : t.interrupt(i.parser.constructs.flow, n, e)(s);
  }
}
function mS(t, e, n, i, r, o, s, a, l) {
  const c = l || Number.POSITIVE_INFINITY;
  let f = 0;
  return d;
  function d(y) {
    return y === 60 ? (t.enter(i), t.enter(r), t.enter(o), t.consume(y), t.exit(o), u) : y === null || y === 32 || y === 41 || J1(y) ? n(y) : (t.enter(i), t.enter(s), t.enter(a), t.enter("chunkString", {
      contentType: "string"
    }), m(y));
  }
  function u(y) {
    return y === 62 ? (t.enter(o), t.consume(y), t.exit(o), t.exit(r), t.exit(i), e) : (t.enter(a), t.enter("chunkString", {
      contentType: "string"
    }), h(y));
  }
  function h(y) {
    return y === 62 ? (t.exit("chunkString"), t.exit(a), u(y)) : y === null || y === 60 || He(y) ? n(y) : (t.consume(y), y === 92 ? p : h);
  }
  function p(y) {
    return y === 60 || y === 62 || y === 92 ? (t.consume(y), h) : h(y);
  }
  function m(y) {
    return !f && (y === null || y === 41 || It(y)) ? (t.exit("chunkString"), t.exit(a), t.exit(s), t.exit(i), e(y)) : f < c && y === 40 ? (t.consume(y), f++, m) : y === 41 ? (t.consume(y), f--, m) : y === null || y === 32 || y === 40 || J1(y) ? n(y) : (t.consume(y), y === 92 ? v : m);
  }
  function v(y) {
    return y === 40 || y === 41 || y === 92 ? (t.consume(y), m) : m(y);
  }
}
function gS(t, e, n, i, r, o) {
  const s = this;
  let a = 0, l;
  return c;
  function c(h) {
    return t.enter(i), t.enter(r), t.consume(h), t.exit(r), t.enter(o), f;
  }
  function f(h) {
    return a > 999 || h === null || h === 91 || h === 93 && !l || // To do: remove in the future once we’ve switched from
    // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,
    // which doesn’t need this.
    // Hidden footnotes hook.
    /* c8 ignore next 3 */
    h === 94 && !a && "_hiddenFootnoteSupport" in s.parser.constructs ? n(h) : h === 93 ? (t.exit(o), t.enter(r), t.consume(h), t.exit(r), t.exit(i), e) : He(h) ? (t.enter("lineEnding"), t.consume(h), t.exit("lineEnding"), f) : (t.enter("chunkString", {
      contentType: "string"
    }), d(h));
  }
  function d(h) {
    return h === null || h === 91 || h === 93 || He(h) || a++ > 999 ? (t.exit("chunkString"), f(h)) : (t.consume(h), l || (l = !lt(h)), h === 92 ? u : d);
  }
  function u(h) {
    return h === 91 || h === 92 || h === 93 ? (t.consume(h), a++, d) : d(h);
  }
}
function yS(t, e, n, i, r, o) {
  let s;
  return a;
  function a(u) {
    return u === 34 || u === 39 || u === 40 ? (t.enter(i), t.enter(r), t.consume(u), t.exit(r), s = u === 40 ? 41 : u, l) : n(u);
  }
  function l(u) {
    return u === s ? (t.enter(r), t.consume(u), t.exit(r), t.exit(i), e) : (t.enter(o), c(u));
  }
  function c(u) {
    return u === s ? (t.exit(o), l(s)) : u === null ? n(u) : He(u) ? (t.enter("lineEnding"), t.consume(u), t.exit("lineEnding"), vt(t, c, "linePrefix")) : (t.enter("chunkString", {
      contentType: "string"
    }), f(u));
  }
  function f(u) {
    return u === s || u === null || He(u) ? (t.exit("chunkString"), c(u)) : (t.consume(u), u === 92 ? d : f);
  }
  function d(u) {
    return u === s || u === 92 ? (t.consume(u), f) : f(u);
  }
}
function Vc(t, e) {
  let n;
  return i;
  function i(r) {
    return He(r) ? (t.enter("lineEnding"), t.consume(r), t.exit("lineEnding"), n = !0, i) : lt(r) ? vt(
      t,
      i,
      n ? "linePrefix" : "lineSuffix"
    )(r) : e(r);
  }
}
function nr(t) {
  return t.replace(/[\t\n\r ]+/g, " ").replace(/^ | $/g, "").toLowerCase().toUpperCase();
}
const nne = {
  name: "definition",
  tokenize: rne
}, ine = {
  tokenize: one,
  partial: !0
};
function rne(t, e, n) {
  const i = this;
  let r;
  return o;
  function o(h) {
    return t.enter("definition"), s(h);
  }
  function s(h) {
    return gS.call(
      i,
      t,
      a,
      // Note: we don’t need to reset the way `markdown-rs` does.
      n,
      "definitionLabel",
      "definitionLabelMarker",
      "definitionLabelString"
    )(h);
  }
  function a(h) {
    return r = nr(
      i.sliceSerialize(i.events[i.events.length - 1][1]).slice(1, -1)
    ), h === 58 ? (t.enter("definitionMarker"), t.consume(h), t.exit("definitionMarker"), l) : n(h);
  }
  function l(h) {
    return It(h) ? Vc(t, c)(h) : c(h);
  }
  function c(h) {
    return mS(
      t,
      f,
      // Note: we don’t need to reset the way `markdown-rs` does.
      n,
      "definitionDestination",
      "definitionDestinationLiteral",
      "definitionDestinationLiteralMarker",
      "definitionDestinationRaw",
      "definitionDestinationString"
    )(h);
  }
  function f(h) {
    return t.attempt(ine, d, d)(h);
  }
  function d(h) {
    return lt(h) ? vt(t, u, "whitespace")(h) : u(h);
  }
  function u(h) {
    return h === null || He(h) ? (t.exit("definition"), i.parser.defined.push(r), e(h)) : n(h);
  }
}
function one(t, e, n) {
  return i;
  function i(a) {
    return It(a) ? Vc(t, r)(a) : n(a);
  }
  function r(a) {
    return yS(
      t,
      o,
      n,
      "definitionTitle",
      "definitionTitleMarker",
      "definitionTitleString"
    )(a);
  }
  function o(a) {
    return lt(a) ? vt(t, s, "whitespace")(a) : s(a);
  }
  function s(a) {
    return a === null || He(a) ? e(a) : n(a);
  }
}
const sne = {
  name: "hardBreakEscape",
  tokenize: ane
};
function ane(t, e, n) {
  return i;
  function i(o) {
    return t.enter("hardBreakEscape"), t.consume(o), r;
  }
  function r(o) {
    return He(o) ? (t.exit("hardBreakEscape"), e(o)) : n(o);
  }
}
const lne = {
  name: "headingAtx",
  tokenize: fne,
  resolve: cne
};
function cne(t, e) {
  let n = t.length - 2, i = 3, r, o;
  return t[i][1].type === "whitespace" && (i += 2), n - 2 > i && t[n][1].type === "whitespace" && (n -= 2), t[n][1].type === "atxHeadingSequence" && (i === n - 1 || n - 4 > i && t[n - 2][1].type === "whitespace") && (n -= i + 1 === n ? 2 : 4), n > i && (r = {
    type: "atxHeadingText",
    start: t[i][1].start,
    end: t[n][1].end
  }, o = {
    type: "chunkText",
    start: t[i][1].start,
    end: t[n][1].end,
    contentType: "text"
  }, pi(t, i, n - i + 1, [
    ["enter", r, e],
    ["enter", o, e],
    ["exit", o, e],
    ["exit", r, e]
  ])), t;
}
function fne(t, e, n) {
  let i = 0;
  return r;
  function r(f) {
    return t.enter("atxHeading"), o(f);
  }
  function o(f) {
    return t.enter("atxHeadingSequence"), s(f);
  }
  function s(f) {
    return f === 35 && i++ < 6 ? (t.consume(f), s) : f === null || It(f) ? (t.exit("atxHeadingSequence"), a(f)) : n(f);
  }
  function a(f) {
    return f === 35 ? (t.enter("atxHeadingSequence"), l(f)) : f === null || He(f) ? (t.exit("atxHeading"), e(f)) : lt(f) ? vt(t, a, "whitespace")(f) : (t.enter("atxHeadingText"), c(f));
  }
  function l(f) {
    return f === 35 ? (t.consume(f), l) : (t.exit("atxHeadingSequence"), a(f));
  }
  function c(f) {
    return f === null || f === 35 || It(f) ? (t.exit("atxHeadingText"), a(f)) : (t.consume(f), c);
  }
}
const dne = [
  "address",
  "article",
  "aside",
  "base",
  "basefont",
  "blockquote",
  "body",
  "caption",
  "center",
  "col",
  "colgroup",
  "dd",
  "details",
  "dialog",
  "dir",
  "div",
  "dl",
  "dt",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "frame",
  "frameset",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hr",
  "html",
  "iframe",
  "legend",
  "li",
  "link",
  "main",
  "menu",
  "menuitem",
  "nav",
  "noframes",
  "ol",
  "optgroup",
  "option",
  "p",
  "param",
  "search",
  "section",
  "summary",
  "table",
  "tbody",
  "td",
  "tfoot",
  "th",
  "thead",
  "title",
  "tr",
  "track",
  "ul"
], $_ = ["pre", "script", "style", "textarea"], une = {
  name: "htmlFlow",
  tokenize: gne,
  resolveTo: mne,
  concrete: !0
}, hne = {
  tokenize: vne,
  partial: !0
}, pne = {
  tokenize: yne,
  partial: !0
};
function mne(t) {
  let e = t.length;
  for (; e-- && !(t[e][0] === "enter" && t[e][1].type === "htmlFlow"); )
    ;
  return e > 1 && t[e - 2][1].type === "linePrefix" && (t[e][1].start = t[e - 2][1].start, t[e + 1][1].start = t[e - 2][1].start, t.splice(e - 2, 2)), t;
}
function gne(t, e, n) {
  const i = this;
  let r, o, s, a, l;
  return c;
  function c(F) {
    return f(F);
  }
  function f(F) {
    return t.enter("htmlFlow"), t.enter("htmlFlowData"), t.consume(F), d;
  }
  function d(F) {
    return F === 33 ? (t.consume(F), u) : F === 47 ? (t.consume(F), o = !0, m) : F === 63 ? (t.consume(F), r = 3, i.interrupt ? e : D) : Vn(F) ? (t.consume(F), s = String.fromCharCode(F), v) : n(F);
  }
  function u(F) {
    return F === 45 ? (t.consume(F), r = 2, h) : F === 91 ? (t.consume(F), r = 5, a = 0, p) : Vn(F) ? (t.consume(F), r = 4, i.interrupt ? e : D) : n(F);
  }
  function h(F) {
    return F === 45 ? (t.consume(F), i.interrupt ? e : D) : n(F);
  }
  function p(F) {
    const Oe = "CDATA[";
    return F === Oe.charCodeAt(a++) ? (t.consume(F), a === Oe.length ? i.interrupt ? e : B : p) : n(F);
  }
  function m(F) {
    return Vn(F) ? (t.consume(F), s = String.fromCharCode(F), v) : n(F);
  }
  function v(F) {
    if (F === null || F === 47 || F === 62 || It(F)) {
      const Oe = F === 47, ft = s.toLowerCase();
      return !Oe && !o && $_.includes(ft) ? (r = 1, i.interrupt ? e(F) : B(F)) : dne.includes(s.toLowerCase()) ? (r = 6, Oe ? (t.consume(F), y) : i.interrupt ? e(F) : B(F)) : (r = 7, i.interrupt && !i.parser.lazy[i.now().line] ? n(F) : o ? C(F) : k(F));
    }
    return F === 45 || jn(F) ? (t.consume(F), s += String.fromCharCode(F), v) : n(F);
  }
  function y(F) {
    return F === 62 ? (t.consume(F), i.interrupt ? e : B) : n(F);
  }
  function C(F) {
    return lt(F) ? (t.consume(F), C) : A(F);
  }
  function k(F) {
    return F === 47 ? (t.consume(F), A) : F === 58 || F === 95 || Vn(F) ? (t.consume(F), _) : lt(F) ? (t.consume(F), k) : A(F);
  }
  function _(F) {
    return F === 45 || F === 46 || F === 58 || F === 95 || jn(F) ? (t.consume(F), _) : S(F);
  }
  function S(F) {
    return F === 61 ? (t.consume(F), E) : lt(F) ? (t.consume(F), S) : k(F);
  }
  function E(F) {
    return F === null || F === 60 || F === 61 || F === 62 || F === 96 ? n(F) : F === 34 || F === 39 ? (t.consume(F), l = F, x) : lt(F) ? (t.consume(F), E) : N(F);
  }
  function x(F) {
    return F === l ? (t.consume(F), l = null, R) : F === null || He(F) ? n(F) : (t.consume(F), x);
  }
  function N(F) {
    return F === null || F === 34 || F === 39 || F === 47 || F === 60 || F === 61 || F === 62 || F === 96 || It(F) ? S(F) : (t.consume(F), N);
  }
  function R(F) {
    return F === 47 || F === 62 || lt(F) ? k(F) : n(F);
  }
  function A(F) {
    return F === 62 ? (t.consume(F), O) : n(F);
  }
  function O(F) {
    return F === null || He(F) ? B(F) : lt(F) ? (t.consume(F), O) : n(F);
  }
  function B(F) {
    return F === 45 && r === 2 ? (t.consume(F), J) : F === 60 && r === 1 ? (t.consume(F), te) : F === 62 && r === 4 ? (t.consume(F), me) : F === 63 && r === 3 ? (t.consume(F), D) : F === 93 && r === 5 ? (t.consume(F), X) : He(F) && (r === 6 || r === 7) ? (t.exit("htmlFlowData"), t.check(
      hne,
      Se,
      U
    )(F)) : F === null || He(F) ? (t.exit("htmlFlowData"), U(F)) : (t.consume(F), B);
  }
  function U(F) {
    return t.check(
      pne,
      K,
      Se
    )(F);
  }
  function K(F) {
    return t.enter("lineEnding"), t.consume(F), t.exit("lineEnding"), G;
  }
  function G(F) {
    return F === null || He(F) ? U(F) : (t.enter("htmlFlowData"), B(F));
  }
  function J(F) {
    return F === 45 ? (t.consume(F), D) : B(F);
  }
  function te(F) {
    return F === 47 ? (t.consume(F), s = "", re) : B(F);
  }
  function re(F) {
    if (F === 62) {
      const Oe = s.toLowerCase();
      return $_.includes(Oe) ? (t.consume(F), me) : B(F);
    }
    return Vn(F) && s.length < 8 ? (t.consume(F), s += String.fromCharCode(F), re) : B(F);
  }
  function X(F) {
    return F === 93 ? (t.consume(F), D) : B(F);
  }
  function D(F) {
    return F === 62 ? (t.consume(F), me) : F === 45 && r === 2 ? (t.consume(F), D) : B(F);
  }
  function me(F) {
    return F === null || He(F) ? (t.exit("htmlFlowData"), Se(F)) : (t.consume(F), me);
  }
  function Se(F) {
    return t.exit("htmlFlow"), e(F);
  }
}
function yne(t, e, n) {
  const i = this;
  return r;
  function r(s) {
    return He(s) ? (t.enter("lineEnding"), t.consume(s), t.exit("lineEnding"), o) : n(s);
  }
  function o(s) {
    return i.parser.lazy[i.now().line] ? n(s) : e(s);
  }
}
function vne(t, e, n) {
  return i;
  function i(r) {
    return t.enter("lineEnding"), t.consume(r), t.exit("lineEnding"), t.attempt(Jf, e, n);
  }
}
const bne = {
  name: "htmlText",
  tokenize: kne
};
function kne(t, e, n) {
  const i = this;
  let r, o, s;
  return a;
  function a(D) {
    return t.enter("htmlText"), t.enter("htmlTextData"), t.consume(D), l;
  }
  function l(D) {
    return D === 33 ? (t.consume(D), c) : D === 47 ? (t.consume(D), S) : D === 63 ? (t.consume(D), k) : Vn(D) ? (t.consume(D), N) : n(D);
  }
  function c(D) {
    return D === 45 ? (t.consume(D), f) : D === 91 ? (t.consume(D), o = 0, p) : Vn(D) ? (t.consume(D), C) : n(D);
  }
  function f(D) {
    return D === 45 ? (t.consume(D), h) : n(D);
  }
  function d(D) {
    return D === null ? n(D) : D === 45 ? (t.consume(D), u) : He(D) ? (s = d, te(D)) : (t.consume(D), d);
  }
  function u(D) {
    return D === 45 ? (t.consume(D), h) : d(D);
  }
  function h(D) {
    return D === 62 ? J(D) : D === 45 ? u(D) : d(D);
  }
  function p(D) {
    const me = "CDATA[";
    return D === me.charCodeAt(o++) ? (t.consume(D), o === me.length ? m : p) : n(D);
  }
  function m(D) {
    return D === null ? n(D) : D === 93 ? (t.consume(D), v) : He(D) ? (s = m, te(D)) : (t.consume(D), m);
  }
  function v(D) {
    return D === 93 ? (t.consume(D), y) : m(D);
  }
  function y(D) {
    return D === 62 ? J(D) : D === 93 ? (t.consume(D), y) : m(D);
  }
  function C(D) {
    return D === null || D === 62 ? J(D) : He(D) ? (s = C, te(D)) : (t.consume(D), C);
  }
  function k(D) {
    return D === null ? n(D) : D === 63 ? (t.consume(D), _) : He(D) ? (s = k, te(D)) : (t.consume(D), k);
  }
  function _(D) {
    return D === 62 ? J(D) : k(D);
  }
  function S(D) {
    return Vn(D) ? (t.consume(D), E) : n(D);
  }
  function E(D) {
    return D === 45 || jn(D) ? (t.consume(D), E) : x(D);
  }
  function x(D) {
    return He(D) ? (s = x, te(D)) : lt(D) ? (t.consume(D), x) : J(D);
  }
  function N(D) {
    return D === 45 || jn(D) ? (t.consume(D), N) : D === 47 || D === 62 || It(D) ? R(D) : n(D);
  }
  function R(D) {
    return D === 47 ? (t.consume(D), J) : D === 58 || D === 95 || Vn(D) ? (t.consume(D), A) : He(D) ? (s = R, te(D)) : lt(D) ? (t.consume(D), R) : J(D);
  }
  function A(D) {
    return D === 45 || D === 46 || D === 58 || D === 95 || jn(D) ? (t.consume(D), A) : O(D);
  }
  function O(D) {
    return D === 61 ? (t.consume(D), B) : He(D) ? (s = O, te(D)) : lt(D) ? (t.consume(D), O) : R(D);
  }
  function B(D) {
    return D === null || D === 60 || D === 61 || D === 62 || D === 96 ? n(D) : D === 34 || D === 39 ? (t.consume(D), r = D, U) : He(D) ? (s = B, te(D)) : lt(D) ? (t.consume(D), B) : (t.consume(D), K);
  }
  function U(D) {
    return D === r ? (t.consume(D), r = void 0, G) : D === null ? n(D) : He(D) ? (s = U, te(D)) : (t.consume(D), U);
  }
  function K(D) {
    return D === null || D === 34 || D === 39 || D === 60 || D === 61 || D === 96 ? n(D) : D === 47 || D === 62 || It(D) ? R(D) : (t.consume(D), K);
  }
  function G(D) {
    return D === 47 || D === 62 || It(D) ? R(D) : n(D);
  }
  function J(D) {
    return D === 62 ? (t.consume(D), t.exit("htmlTextData"), t.exit("htmlText"), e) : n(D);
  }
  function te(D) {
    return t.exit("htmlTextData"), t.enter("lineEnding"), t.consume(D), t.exit("lineEnding"), re;
  }
  function re(D) {
    return lt(D) ? vt(
      t,
      X,
      "linePrefix",
      i.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4
    )(D) : X(D);
  }
  function X(D) {
    return t.enter("htmlTextData"), s(D);
  }
}
const zb = {
  name: "labelEnd",
  tokenize: Sne,
  resolveTo: Cne,
  resolveAll: Tne
}, wne = {
  tokenize: xne
}, _ne = {
  tokenize: Ane
}, Ene = {
  tokenize: Mne
};
function Tne(t) {
  let e = -1;
  for (; ++e < t.length; ) {
    const n = t[e][1];
    (n.type === "labelImage" || n.type === "labelLink" || n.type === "labelEnd") && (t.splice(e + 1, n.type === "labelImage" ? 4 : 2), n.type = "data", e++);
  }
  return t;
}
function Cne(t, e) {
  let n = t.length, i = 0, r, o, s, a;
  for (; n--; )
    if (r = t[n][1], o) {
      if (r.type === "link" || r.type === "labelLink" && r._inactive)
        break;
      t[n][0] === "enter" && r.type === "labelLink" && (r._inactive = !0);
    } else if (s) {
      if (t[n][0] === "enter" && (r.type === "labelImage" || r.type === "labelLink") && !r._balanced && (o = n, r.type !== "labelLink")) {
        i = 2;
        break;
      }
    } else r.type === "labelEnd" && (s = n);
  const l = {
    type: t[o][1].type === "labelLink" ? "link" : "image",
    start: Object.assign({}, t[o][1].start),
    end: Object.assign({}, t[t.length - 1][1].end)
  }, c = {
    type: "label",
    start: Object.assign({}, t[o][1].start),
    end: Object.assign({}, t[s][1].end)
  }, f = {
    type: "labelText",
    start: Object.assign({}, t[o + i + 2][1].end),
    end: Object.assign({}, t[s - 2][1].start)
  };
  return a = [
    ["enter", l, e],
    ["enter", c, e]
  ], a = xi(a, t.slice(o + 1, o + i + 3)), a = xi(a, [["enter", f, e]]), a = xi(
    a,
    _p(
      e.parser.constructs.insideSpan.null,
      t.slice(o + i + 4, s - 3),
      e
    )
  ), a = xi(a, [
    ["exit", f, e],
    t[s - 2],
    t[s - 1],
    ["exit", c, e]
  ]), a = xi(a, t.slice(s + 1)), a = xi(a, [["exit", l, e]]), pi(t, o, t.length, a), t;
}
function Sne(t, e, n) {
  const i = this;
  let r = i.events.length, o, s;
  for (; r--; )
    if ((i.events[r][1].type === "labelImage" || i.events[r][1].type === "labelLink") && !i.events[r][1]._balanced) {
      o = i.events[r][1];
      break;
    }
  return a;
  function a(u) {
    return o ? o._inactive ? d(u) : (s = i.parser.defined.includes(
      nr(
        i.sliceSerialize({
          start: o.end,
          end: i.now()
        })
      )
    ), t.enter("labelEnd"), t.enter("labelMarker"), t.consume(u), t.exit("labelMarker"), t.exit("labelEnd"), l) : n(u);
  }
  function l(u) {
    return u === 40 ? t.attempt(
      wne,
      f,
      s ? f : d
    )(u) : u === 91 ? t.attempt(
      _ne,
      f,
      s ? c : d
    )(u) : s ? f(u) : d(u);
  }
  function c(u) {
    return t.attempt(
      Ene,
      f,
      d
    )(u);
  }
  function f(u) {
    return e(u);
  }
  function d(u) {
    return o._balanced = !0, n(u);
  }
}
function xne(t, e, n) {
  return i;
  function i(d) {
    return t.enter("resource"), t.enter("resourceMarker"), t.consume(d), t.exit("resourceMarker"), r;
  }
  function r(d) {
    return It(d) ? Vc(t, o)(d) : o(d);
  }
  function o(d) {
    return d === 41 ? f(d) : mS(
      t,
      s,
      a,
      "resourceDestination",
      "resourceDestinationLiteral",
      "resourceDestinationLiteralMarker",
      "resourceDestinationRaw",
      "resourceDestinationString",
      32
    )(d);
  }
  function s(d) {
    return It(d) ? Vc(t, l)(d) : f(d);
  }
  function a(d) {
    return n(d);
  }
  function l(d) {
    return d === 34 || d === 39 || d === 40 ? yS(
      t,
      c,
      n,
      "resourceTitle",
      "resourceTitleMarker",
      "resourceTitleString"
    )(d) : f(d);
  }
  function c(d) {
    return It(d) ? Vc(t, f)(d) : f(d);
  }
  function f(d) {
    return d === 41 ? (t.enter("resourceMarker"), t.consume(d), t.exit("resourceMarker"), t.exit("resource"), e) : n(d);
  }
}
function Ane(t, e, n) {
  const i = this;
  return r;
  function r(a) {
    return gS.call(
      i,
      t,
      o,
      s,
      "reference",
      "referenceMarker",
      "referenceString"
    )(a);
  }
  function o(a) {
    return i.parser.defined.includes(
      nr(
        i.sliceSerialize(i.events[i.events.length - 1][1]).slice(1, -1)
      )
    ) ? e(a) : n(a);
  }
  function s(a) {
    return n(a);
  }
}
function Mne(t, e, n) {
  return i;
  function i(o) {
    return t.enter("reference"), t.enter("referenceMarker"), t.consume(o), t.exit("referenceMarker"), r;
  }
  function r(o) {
    return o === 93 ? (t.enter("referenceMarker"), t.consume(o), t.exit("referenceMarker"), t.exit("reference"), e) : n(o);
  }
}
const Nne = {
  name: "labelStartImage",
  tokenize: One,
  resolveAll: zb.resolveAll
};
function One(t, e, n) {
  const i = this;
  return r;
  function r(a) {
    return t.enter("labelImage"), t.enter("labelImageMarker"), t.consume(a), t.exit("labelImageMarker"), o;
  }
  function o(a) {
    return a === 91 ? (t.enter("labelMarker"), t.consume(a), t.exit("labelMarker"), t.exit("labelImage"), s) : n(a);
  }
  function s(a) {
    return a === 94 && "_hiddenFootnoteSupport" in i.parser.constructs ? n(a) : e(a);
  }
}
const Rne = {
  name: "labelStartLink",
  tokenize: Ine,
  resolveAll: zb.resolveAll
};
function Ine(t, e, n) {
  const i = this;
  return r;
  function r(s) {
    return t.enter("labelLink"), t.enter("labelMarker"), t.consume(s), t.exit("labelMarker"), t.exit("labelLink"), o;
  }
  function o(s) {
    return s === 94 && "_hiddenFootnoteSupport" in i.parser.constructs ? n(s) : e(s);
  }
}
const f0 = {
  name: "lineEnding",
  tokenize: Lne
};
function Lne(t, e) {
  return n;
  function n(i) {
    return t.enter("lineEnding"), t.consume(i), t.exit("lineEnding"), vt(t, e, "linePrefix");
  }
}
const bu = {
  name: "thematicBreak",
  tokenize: Dne
};
function Dne(t, e, n) {
  let i = 0, r;
  return o;
  function o(c) {
    return t.enter("thematicBreak"), s(c);
  }
  function s(c) {
    return r = c, a(c);
  }
  function a(c) {
    return c === r ? (t.enter("thematicBreakSequence"), l(c)) : i >= 3 && (c === null || He(c)) ? (t.exit("thematicBreak"), e(c)) : n(c);
  }
  function l(c) {
    return c === r ? (t.consume(c), i++, l) : (t.exit("thematicBreakSequence"), lt(c) ? vt(t, a, "whitespace")(c) : a(c));
  }
}
const ei = {
  name: "list",
  tokenize: Bne,
  continuation: {
    tokenize: Hne
  },
  exit: jne
}, Pne = {
  tokenize: zne,
  partial: !0
}, Fne = {
  tokenize: $ne,
  partial: !0
};
function Bne(t, e, n) {
  const i = this, r = i.events[i.events.length - 1];
  let o = r && r[1].type === "linePrefix" ? r[2].sliceSerialize(r[1], !0).length : 0, s = 0;
  return a;
  function a(h) {
    const p = i.containerState.type || (h === 42 || h === 43 || h === 45 ? "listUnordered" : "listOrdered");
    if (p === "listUnordered" ? !i.containerState.marker || h === i.containerState.marker : Yg(h)) {
      if (i.containerState.type || (i.containerState.type = p, t.enter(p, {
        _container: !0
      })), p === "listUnordered")
        return t.enter("listItemPrefix"), h === 42 || h === 45 ? t.check(bu, n, c)(h) : c(h);
      if (!i.interrupt || h === 49)
        return t.enter("listItemPrefix"), t.enter("listItemValue"), l(h);
    }
    return n(h);
  }
  function l(h) {
    return Yg(h) && ++s < 10 ? (t.consume(h), l) : (!i.interrupt || s < 2) && (i.containerState.marker ? h === i.containerState.marker : h === 41 || h === 46) ? (t.exit("listItemValue"), c(h)) : n(h);
  }
  function c(h) {
    return t.enter("listItemMarker"), t.consume(h), t.exit("listItemMarker"), i.containerState.marker = i.containerState.marker || h, t.check(
      Jf,
      // Can’t be empty when interrupting.
      i.interrupt ? n : f,
      t.attempt(
        Pne,
        u,
        d
      )
    );
  }
  function f(h) {
    return i.containerState.initialBlankLine = !0, o++, u(h);
  }
  function d(h) {
    return lt(h) ? (t.enter("listItemPrefixWhitespace"), t.consume(h), t.exit("listItemPrefixWhitespace"), u) : n(h);
  }
  function u(h) {
    return i.containerState.size = o + i.sliceSerialize(t.exit("listItemPrefix"), !0).length, e(h);
  }
}
function Hne(t, e, n) {
  const i = this;
  return i.containerState._closeFlow = void 0, t.check(Jf, r, o);
  function r(a) {
    return i.containerState.furtherBlankLines = i.containerState.furtherBlankLines || i.containerState.initialBlankLine, vt(
      t,
      e,
      "listItemIndent",
      i.containerState.size + 1
    )(a);
  }
  function o(a) {
    return i.containerState.furtherBlankLines || !lt(a) ? (i.containerState.furtherBlankLines = void 0, i.containerState.initialBlankLine = void 0, s(a)) : (i.containerState.furtherBlankLines = void 0, i.containerState.initialBlankLine = void 0, t.attempt(Fne, e, s)(a));
  }
  function s(a) {
    return i.containerState._closeFlow = !0, i.interrupt = void 0, vt(
      t,
      t.attempt(ei, e, n),
      "linePrefix",
      i.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4
    )(a);
  }
}
function $ne(t, e, n) {
  const i = this;
  return vt(
    t,
    r,
    "listItemIndent",
    i.containerState.size + 1
  );
  function r(o) {
    const s = i.events[i.events.length - 1];
    return s && s[1].type === "listItemIndent" && s[2].sliceSerialize(s[1], !0).length === i.containerState.size ? e(o) : n(o);
  }
}
function jne(t) {
  t.exit(this.containerState.type);
}
function zne(t, e, n) {
  const i = this;
  return vt(
    t,
    r,
    "listItemPrefixWhitespace",
    i.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 5
  );
  function r(o) {
    const s = i.events[i.events.length - 1];
    return !lt(o) && s && s[1].type === "listItemPrefixWhitespace" ? e(o) : n(o);
  }
}
const j_ = {
  name: "setextUnderline",
  tokenize: Vne,
  resolveTo: Une
};
function Une(t, e) {
  let n = t.length, i, r, o;
  for (; n--; )
    if (t[n][0] === "enter") {
      if (t[n][1].type === "content") {
        i = n;
        break;
      }
      t[n][1].type === "paragraph" && (r = n);
    } else
      t[n][1].type === "content" && t.splice(n, 1), !o && t[n][1].type === "definition" && (o = n);
  const s = {
    type: "setextHeading",
    start: Object.assign({}, t[r][1].start),
    end: Object.assign({}, t[t.length - 1][1].end)
  };
  return t[r][1].type = "setextHeadingText", o ? (t.splice(r, 0, ["enter", s, e]), t.splice(o + 1, 0, ["exit", t[i][1], e]), t[i][1].end = Object.assign({}, t[o][1].end)) : t[i][1] = s, t.push(["exit", s, e]), t;
}
function Vne(t, e, n) {
  const i = this;
  let r;
  return o;
  function o(c) {
    let f = i.events.length, d;
    for (; f--; )
      if (i.events[f][1].type !== "lineEnding" && i.events[f][1].type !== "linePrefix" && i.events[f][1].type !== "content") {
        d = i.events[f][1].type === "paragraph";
        break;
      }
    return !i.parser.lazy[i.now().line] && (i.interrupt || d) ? (t.enter("setextHeadingLine"), r = c, s(c)) : n(c);
  }
  function s(c) {
    return t.enter("setextHeadingLineSequence"), a(c);
  }
  function a(c) {
    return c === r ? (t.consume(c), a) : (t.exit("setextHeadingLineSequence"), lt(c) ? vt(t, l, "lineSuffix")(c) : l(c));
  }
  function l(c) {
    return c === null || He(c) ? (t.exit("setextHeadingLine"), e(c)) : n(c);
  }
}
const Wne = {
  tokenize: Zne,
  partial: !0
};
function qne() {
  return {
    document: {
      91: {
        tokenize: Jne,
        continuation: {
          tokenize: Xne
        },
        exit: Qne
      }
    },
    text: {
      91: {
        tokenize: Yne
      },
      93: {
        add: "after",
        tokenize: Gne,
        resolveTo: Kne
      }
    }
  };
}
function Gne(t, e, n) {
  const i = this;
  let r = i.events.length;
  const o = i.parser.gfmFootnotes || (i.parser.gfmFootnotes = []);
  let s;
  for (; r--; ) {
    const l = i.events[r][1];
    if (l.type === "labelImage") {
      s = l;
      break;
    }
    if (l.type === "gfmFootnoteCall" || l.type === "labelLink" || l.type === "label" || l.type === "image" || l.type === "link")
      break;
  }
  return a;
  function a(l) {
    if (!s || !s._balanced)
      return n(l);
    const c = nr(
      i.sliceSerialize({
        start: s.end,
        end: i.now()
      })
    );
    return c.codePointAt(0) !== 94 || !o.includes(c.slice(1)) ? n(l) : (t.enter("gfmFootnoteCallLabelMarker"), t.consume(l), t.exit("gfmFootnoteCallLabelMarker"), e(l));
  }
}
function Kne(t, e) {
  let n = t.length;
  for (; n--; )
    if (t[n][1].type === "labelImage" && t[n][0] === "enter") {
      t[n][1];
      break;
    }
  t[n + 1][1].type = "data", t[n + 3][1].type = "gfmFootnoteCallLabelMarker";
  const i = {
    type: "gfmFootnoteCall",
    start: Object.assign({}, t[n + 3][1].start),
    end: Object.assign({}, t[t.length - 1][1].end)
  }, r = {
    type: "gfmFootnoteCallMarker",
    start: Object.assign({}, t[n + 3][1].end),
    end: Object.assign({}, t[n + 3][1].end)
  };
  r.end.column++, r.end.offset++, r.end._bufferIndex++;
  const o = {
    type: "gfmFootnoteCallString",
    start: Object.assign({}, r.end),
    end: Object.assign({}, t[t.length - 1][1].start)
  }, s = {
    type: "chunkString",
    contentType: "string",
    start: Object.assign({}, o.start),
    end: Object.assign({}, o.end)
  }, a = [
    // Take the `labelImageMarker` (now `data`, the `!`)
    t[n + 1],
    t[n + 2],
    ["enter", i, e],
    // The `[`
    t[n + 3],
    t[n + 4],
    // The `^`.
    ["enter", r, e],
    ["exit", r, e],
    // Everything in between.
    ["enter", o, e],
    ["enter", s, e],
    ["exit", s, e],
    ["exit", o, e],
    // The ending (`]`, properly parsed and labelled).
    t[t.length - 2],
    t[t.length - 1],
    ["exit", i, e]
  ];
  return t.splice(n, t.length - n + 1, ...a), t;
}
function Yne(t, e, n) {
  const i = this, r = i.parser.gfmFootnotes || (i.parser.gfmFootnotes = []);
  let o = 0, s;
  return a;
  function a(d) {
    return t.enter("gfmFootnoteCall"), t.enter("gfmFootnoteCallLabelMarker"), t.consume(d), t.exit("gfmFootnoteCallLabelMarker"), l;
  }
  function l(d) {
    return d !== 94 ? n(d) : (t.enter("gfmFootnoteCallMarker"), t.consume(d), t.exit("gfmFootnoteCallMarker"), t.enter("gfmFootnoteCallString"), t.enter("chunkString").contentType = "string", c);
  }
  function c(d) {
    if (
      // Too long.
      o > 999 || // Closing brace with nothing.
      d === 93 && !s || // Space or tab is not supported by GFM for some reason.
      // `\n` and `[` not being supported makes sense.
      d === null || d === 91 || It(d)
    )
      return n(d);
    if (d === 93) {
      t.exit("chunkString");
      const u = t.exit("gfmFootnoteCallString");
      return r.includes(nr(i.sliceSerialize(u))) ? (t.enter("gfmFootnoteCallLabelMarker"), t.consume(d), t.exit("gfmFootnoteCallLabelMarker"), t.exit("gfmFootnoteCall"), e) : n(d);
    }
    return It(d) || (s = !0), o++, t.consume(d), d === 92 ? f : c;
  }
  function f(d) {
    return d === 91 || d === 92 || d === 93 ? (t.consume(d), o++, c) : c(d);
  }
}
function Jne(t, e, n) {
  const i = this, r = i.parser.gfmFootnotes || (i.parser.gfmFootnotes = []);
  let o, s = 0, a;
  return l;
  function l(p) {
    return t.enter("gfmFootnoteDefinition")._container = !0, t.enter("gfmFootnoteDefinitionLabel"), t.enter("gfmFootnoteDefinitionLabelMarker"), t.consume(p), t.exit("gfmFootnoteDefinitionLabelMarker"), c;
  }
  function c(p) {
    return p === 94 ? (t.enter("gfmFootnoteDefinitionMarker"), t.consume(p), t.exit("gfmFootnoteDefinitionMarker"), t.enter("gfmFootnoteDefinitionLabelString"), t.enter("chunkString").contentType = "string", f) : n(p);
  }
  function f(p) {
    if (
      // Too long.
      s > 999 || // Closing brace with nothing.
      p === 93 && !a || // Space or tab is not supported by GFM for some reason.
      // `\n` and `[` not being supported makes sense.
      p === null || p === 91 || It(p)
    )
      return n(p);
    if (p === 93) {
      t.exit("chunkString");
      const m = t.exit("gfmFootnoteDefinitionLabelString");
      return o = nr(i.sliceSerialize(m)), t.enter("gfmFootnoteDefinitionLabelMarker"), t.consume(p), t.exit("gfmFootnoteDefinitionLabelMarker"), t.exit("gfmFootnoteDefinitionLabel"), u;
    }
    return It(p) || (a = !0), s++, t.consume(p), p === 92 ? d : f;
  }
  function d(p) {
    return p === 91 || p === 92 || p === 93 ? (t.consume(p), s++, f) : f(p);
  }
  function u(p) {
    return p === 58 ? (t.enter("definitionMarker"), t.consume(p), t.exit("definitionMarker"), r.includes(o) || r.push(o), vt(
      t,
      h,
      "gfmFootnoteDefinitionWhitespace"
    )) : n(p);
  }
  function h(p) {
    return e(p);
  }
}
function Xne(t, e, n) {
  return t.check(Jf, e, t.attempt(Wne, e, n));
}
function Qne(t) {
  t.exit("gfmFootnoteDefinition");
}
function Zne(t, e, n) {
  const i = this;
  return vt(
    t,
    r,
    "gfmFootnoteDefinitionIndent",
    5
  );
  function r(o) {
    const s = i.events[i.events.length - 1];
    return s && s[1].type === "gfmFootnoteDefinitionIndent" && s[2].sliceSerialize(s[1], !0).length === 4 ? e(o) : n(o);
  }
}
function eie(t) {
  let n = (t || {}).singleTilde;
  const i = {
    tokenize: o,
    resolveAll: r
  };
  return n == null && (n = !0), {
    text: {
      126: i
    },
    insideSpan: {
      null: [i]
    },
    attentionMarkers: {
      null: [126]
    }
  };
  function r(s, a) {
    let l = -1;
    for (; ++l < s.length; )
      if (s[l][0] === "enter" && s[l][1].type === "strikethroughSequenceTemporary" && s[l][1]._close) {
        let c = l;
        for (; c--; )
          if (s[c][0] === "exit" && s[c][1].type === "strikethroughSequenceTemporary" && s[c][1]._open && // If the sizes are the same:
          s[l][1].end.offset - s[l][1].start.offset === s[c][1].end.offset - s[c][1].start.offset) {
            s[l][1].type = "strikethroughSequence", s[c][1].type = "strikethroughSequence";
            const f = {
              type: "strikethrough",
              start: Object.assign({}, s[c][1].start),
              end: Object.assign({}, s[l][1].end)
            }, d = {
              type: "strikethroughText",
              start: Object.assign({}, s[c][1].end),
              end: Object.assign({}, s[l][1].start)
            }, u = [
              ["enter", f, a],
              ["enter", s[c][1], a],
              ["exit", s[c][1], a],
              ["enter", d, a]
            ], h = a.parser.constructs.insideSpan.null;
            h && pi(
              u,
              u.length,
              0,
              _p(h, s.slice(c + 1, l), a)
            ), pi(u, u.length, 0, [
              ["exit", d, a],
              ["enter", s[l][1], a],
              ["exit", s[l][1], a],
              ["exit", f, a]
            ]), pi(s, c - 1, l - c + 3, u), l = c + u.length - 2;
            break;
          }
      }
    for (l = -1; ++l < s.length; )
      s[l][1].type === "strikethroughSequenceTemporary" && (s[l][1].type = "data");
    return s;
  }
  function o(s, a, l) {
    const c = this.previous, f = this.events;
    let d = 0;
    return u;
    function u(p) {
      return c === 126 && f[f.length - 1][1].type !== "characterEscape" ? l(p) : (s.enter("strikethroughSequenceTemporary"), h(p));
    }
    function h(p) {
      const m = X1(c);
      if (p === 126)
        return d > 1 ? l(p) : (s.consume(p), d++, h);
      if (d < 2 && !n) return l(p);
      const v = s.exit("strikethroughSequenceTemporary"), y = X1(p);
      return v._open = !y || y === 2 && !!m, v._close = !m || m === 2 && !!y, a(p);
    }
  }
}
class tie {
  /**
   * Create a new edit map.
   */
  constructor() {
    this.map = [];
  }
  /**
   * Create an edit: a remove and/or add at a certain place.
   *
   * @param {number} index
   * @param {number} remove
   * @param {Array<Event>} add
   * @returns {void}
   */
  add(e, n, i) {
    nie(this, e, n, i);
  }
  // To do: not used here.
  // /**
  //  * Create an edit: but insert `add` before existing additions.
  //  *
  //  * @param {number} index
  //  * @param {number} remove
  //  * @param {Array<Event>} add
  //  * @returns {void}
  //  */
  // addBefore(index, remove, add) {
  //   addImpl(this, index, remove, add, true)
  // }
  /**
   * Done, change the events.
   *
   * @param {Array<Event>} events
   * @returns {void}
   */
  consume(e) {
    if (this.map.sort((o, s) => o[0] - s[0]), this.map.length === 0)
      return;
    let n = this.map.length;
    const i = [];
    for (; n > 0; )
      n -= 1, i.push(e.slice(this.map[n][0] + this.map[n][1])), i.push(this.map[n][2]), e.length = this.map[n][0];
    i.push([...e]), e.length = 0;
    let r = i.pop();
    for (; r; )
      e.push(...r), r = i.pop();
    this.map.length = 0;
  }
}
function nie(t, e, n, i) {
  let r = 0;
  if (!(n === 0 && i.length === 0)) {
    for (; r < t.map.length; ) {
      if (t.map[r][0] === e) {
        t.map[r][1] += n, t.map[r][2].push(...i);
        return;
      }
      r += 1;
    }
    t.map.push([e, n, i]);
  }
}
function iie(t, e) {
  let n = !1;
  const i = [];
  for (; e < t.length; ) {
    const r = t[e];
    if (n) {
      if (r[0] === "enter")
        r[1].type === "tableContent" && i.push(
          t[e + 1][1].type === "tableDelimiterMarker" ? "left" : "none"
        );
      else if (r[1].type === "tableContent") {
        if (t[e - 1][1].type === "tableDelimiterMarker") {
          const o = i.length - 1;
          i[o] = i[o] === "left" ? "center" : "right";
        }
      } else if (r[1].type === "tableDelimiterRow")
        break;
    } else r[0] === "enter" && r[1].type === "tableDelimiterRow" && (n = !0);
    e += 1;
  }
  return i;
}
const rie = {
  flow: {
    null: {
      tokenize: oie,
      resolveAll: sie
    }
  }
};
function oie(t, e, n) {
  const i = this;
  let r = 0, o = 0, s;
  return a;
  function a(A) {
    let O = i.events.length - 1;
    for (; O > -1; ) {
      const K = i.events[O][1].type;
      if (K === "lineEnding" || // Note: markdown-rs uses `whitespace` instead of `linePrefix`
      K === "linePrefix")
        O--;
      else break;
    }
    const B = O > -1 ? i.events[O][1].type : null, U = B === "tableHead" || B === "tableRow" ? E : l;
    return U === E && i.parser.lazy[i.now().line] ? n(A) : U(A);
  }
  function l(A) {
    return t.enter("tableHead"), t.enter("tableRow"), c(A);
  }
  function c(A) {
    return A === 124 || (s = !0, o += 1), f(A);
  }
  function f(A) {
    return A === null ? n(A) : He(A) ? o > 1 ? (o = 0, i.interrupt = !0, t.exit("tableRow"), t.enter("lineEnding"), t.consume(A), t.exit("lineEnding"), h) : n(A) : lt(A) ? vt(t, f, "whitespace")(A) : (o += 1, s && (s = !1, r += 1), A === 124 ? (t.enter("tableCellDivider"), t.consume(A), t.exit("tableCellDivider"), s = !0, f) : (t.enter("data"), d(A)));
  }
  function d(A) {
    return A === null || A === 124 || It(A) ? (t.exit("data"), f(A)) : (t.consume(A), A === 92 ? u : d);
  }
  function u(A) {
    return A === 92 || A === 124 ? (t.consume(A), d) : d(A);
  }
  function h(A) {
    return i.interrupt = !1, i.parser.lazy[i.now().line] ? n(A) : (t.enter("tableDelimiterRow"), s = !1, lt(A) ? vt(
      t,
      p,
      "linePrefix",
      i.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4
    )(A) : p(A));
  }
  function p(A) {
    return A === 45 || A === 58 ? v(A) : A === 124 ? (s = !0, t.enter("tableCellDivider"), t.consume(A), t.exit("tableCellDivider"), m) : S(A);
  }
  function m(A) {
    return lt(A) ? vt(t, v, "whitespace")(A) : v(A);
  }
  function v(A) {
    return A === 58 ? (o += 1, s = !0, t.enter("tableDelimiterMarker"), t.consume(A), t.exit("tableDelimiterMarker"), y) : A === 45 ? (o += 1, y(A)) : A === null || He(A) ? _(A) : S(A);
  }
  function y(A) {
    return A === 45 ? (t.enter("tableDelimiterFiller"), C(A)) : S(A);
  }
  function C(A) {
    return A === 45 ? (t.consume(A), C) : A === 58 ? (s = !0, t.exit("tableDelimiterFiller"), t.enter("tableDelimiterMarker"), t.consume(A), t.exit("tableDelimiterMarker"), k) : (t.exit("tableDelimiterFiller"), k(A));
  }
  function k(A) {
    return lt(A) ? vt(t, _, "whitespace")(A) : _(A);
  }
  function _(A) {
    return A === 124 ? p(A) : A === null || He(A) ? !s || r !== o ? S(A) : (t.exit("tableDelimiterRow"), t.exit("tableHead"), e(A)) : S(A);
  }
  function S(A) {
    return n(A);
  }
  function E(A) {
    return t.enter("tableRow"), x(A);
  }
  function x(A) {
    return A === 124 ? (t.enter("tableCellDivider"), t.consume(A), t.exit("tableCellDivider"), x) : A === null || He(A) ? (t.exit("tableRow"), e(A)) : lt(A) ? vt(t, x, "whitespace")(A) : (t.enter("data"), N(A));
  }
  function N(A) {
    return A === null || A === 124 || It(A) ? (t.exit("data"), x(A)) : (t.consume(A), A === 92 ? R : N);
  }
  function R(A) {
    return A === 92 || A === 124 ? (t.consume(A), N) : N(A);
  }
}
function sie(t, e) {
  let n = -1, i = !0, r = 0, o = [0, 0, 0, 0], s = [0, 0, 0, 0], a = !1, l = 0, c, f, d;
  const u = new tie();
  for (; ++n < t.length; ) {
    const h = t[n], p = h[1];
    h[0] === "enter" ? p.type === "tableHead" ? (a = !1, l !== 0 && (z_(u, e, l, c, f), f = void 0, l = 0), c = {
      type: "table",
      start: Object.assign({}, p.start),
      // Note: correct end is set later.
      end: Object.assign({}, p.end)
    }, u.add(n, 0, [["enter", c, e]])) : p.type === "tableRow" || p.type === "tableDelimiterRow" ? (i = !0, d = void 0, o = [0, 0, 0, 0], s = [0, n + 1, 0, 0], a && (a = !1, f = {
      type: "tableBody",
      start: Object.assign({}, p.start),
      // Note: correct end is set later.
      end: Object.assign({}, p.end)
    }, u.add(n, 0, [["enter", f, e]])), r = p.type === "tableDelimiterRow" ? 2 : f ? 3 : 1) : r && (p.type === "data" || p.type === "tableDelimiterMarker" || p.type === "tableDelimiterFiller") ? (i = !1, s[2] === 0 && (o[1] !== 0 && (s[0] = s[1], d = Kd(
      u,
      e,
      o,
      r,
      void 0,
      d
    ), o = [0, 0, 0, 0]), s[2] = n)) : p.type === "tableCellDivider" && (i ? i = !1 : (o[1] !== 0 && (s[0] = s[1], d = Kd(
      u,
      e,
      o,
      r,
      void 0,
      d
    )), o = s, s = [o[1], n, 0, 0])) : p.type === "tableHead" ? (a = !0, l = n) : p.type === "tableRow" || p.type === "tableDelimiterRow" ? (l = n, o[1] !== 0 ? (s[0] = s[1], d = Kd(
      u,
      e,
      o,
      r,
      n,
      d
    )) : s[1] !== 0 && (d = Kd(u, e, s, r, n, d)), r = 0) : r && (p.type === "data" || p.type === "tableDelimiterMarker" || p.type === "tableDelimiterFiller") && (s[3] = n);
  }
  for (l !== 0 && z_(u, e, l, c, f), u.consume(e.events), n = -1; ++n < e.events.length; ) {
    const h = e.events[n];
    h[0] === "enter" && h[1].type === "table" && (h[1]._align = iie(e.events, n));
  }
  return t;
}
function Kd(t, e, n, i, r, o) {
  const s = i === 1 ? "tableHeader" : i === 2 ? "tableDelimiter" : "tableData", a = "tableContent";
  n[0] !== 0 && (o.end = Object.assign({}, Wa(e.events, n[0])), t.add(n[0], 0, [["exit", o, e]]));
  const l = Wa(e.events, n[1]);
  if (o = {
    type: s,
    start: Object.assign({}, l),
    // Note: correct end is set later.
    end: Object.assign({}, l)
  }, t.add(n[1], 0, [["enter", o, e]]), n[2] !== 0) {
    const c = Wa(e.events, n[2]), f = Wa(e.events, n[3]), d = {
      type: a,
      start: Object.assign({}, c),
      end: Object.assign({}, f)
    };
    if (t.add(n[2], 0, [["enter", d, e]]), i !== 2) {
      const u = e.events[n[2]], h = e.events[n[3]];
      if (u[1].end = Object.assign({}, h[1].end), u[1].type = "chunkText", u[1].contentType = "text", n[3] > n[2] + 1) {
        const p = n[2] + 1, m = n[3] - n[2] - 1;
        t.add(p, m, []);
      }
    }
    t.add(n[3] + 1, 0, [["exit", d, e]]);
  }
  return r !== void 0 && (o.end = Object.assign({}, Wa(e.events, r)), t.add(r, 0, [["exit", o, e]]), o = void 0), o;
}
function z_(t, e, n, i, r) {
  const o = [], s = Wa(e.events, n);
  r && (r.end = Object.assign({}, s), o.push(["exit", r, e])), i.end = Object.assign({}, s), o.push(["exit", i, e]), t.add(n + 1, 0, o);
}
function Wa(t, e) {
  const n = t[e], i = n[0] === "enter" ? "start" : "end";
  return n[1][i];
}
const aie = {
  tokenize: cie
}, lie = {
  text: {
    91: aie
  }
};
function cie(t, e, n) {
  const i = this;
  return r;
  function r(l) {
    return (
      // Exit if there’s stuff before.
      i.previous !== null || // Exit if not in the first content that is the first child of a list
      // item.
      !i._gfmTasklistFirstContentOfListItem ? n(l) : (t.enter("taskListCheck"), t.enter("taskListCheckMarker"), t.consume(l), t.exit("taskListCheckMarker"), o)
    );
  }
  function o(l) {
    return It(l) ? (t.enter("taskListCheckValueUnchecked"), t.consume(l), t.exit("taskListCheckValueUnchecked"), s) : l === 88 || l === 120 ? (t.enter("taskListCheckValueChecked"), t.consume(l), t.exit("taskListCheckValueChecked"), s) : n(l);
  }
  function s(l) {
    return l === 93 ? (t.enter("taskListCheckMarker"), t.consume(l), t.exit("taskListCheckMarker"), t.exit("taskListCheck"), a) : n(l);
  }
  function a(l) {
    return He(l) ? e(l) : lt(l) ? t.check(
      {
        tokenize: fie
      },
      e,
      n
    )(l) : n(l);
  }
}
function fie(t, e, n) {
  return vt(t, i, "whitespace");
  function i(r) {
    return r === null ? n(r) : e(r);
  }
}
function die(t) {
  return nS([
    _te,
    qne(),
    eie(t),
    rie,
    lie
  ]);
}
function uie(t) {
  if (typeof t != "string")
    throw new TypeError("Expected a string");
  return t.replace(/[|\\{}()[\]^$+*?.]/g, "\\$&").replace(/-/g, "\\x2d");
}
const hie = !0, U_ = !1, pie = "skip", mie = (
  /**
   * @type {(
   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &
   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)
   * )}
   */
  /**
   * @param {Node} tree
   * @param {Test} test
   * @param {Visitor<Node>} visitor
   * @param {boolean | null | undefined} [reverse]
   * @returns {void}
   */
  function(t, e, n, i) {
    const r = Os(e), o = 1;
    s(t, void 0, [])();
    function s(a, l, c) {
      const f = a && typeof a == "object" ? a : {};
      if (typeof f.type == "string") {
        const u = (
          // `hast`
          typeof f.tagName == "string" ? f.tagName : (
            // `xast`
            typeof f.name == "string" ? f.name : void 0
          )
        );
        Object.defineProperty(d, "name", {
          value: "node (" + (a.type + (u ? "<" + u + ">" : "")) + ")"
        });
      }
      return d;
      function d() {
        let u = [], h, p, m;
        if (r(a, l, c[c.length - 1] || null) && (u = gie(n(a, c)), u[0] === U_))
          return u;
        if (a.children && u[0] !== pie)
          for (p = -1 + o, m = c.concat(a); p > -1 && p < a.children.length; ) {
            if (h = s(a.children[p], p, m)(), h[0] === U_)
              return h;
            p = typeof h[1] == "number" ? h[1] : p + o;
          }
        return u;
      }
    }
  }
);
function gie(t) {
  return Array.isArray(t) ? t : typeof t == "number" ? [hie, t] : [t];
}
const yie = {}.hasOwnProperty, vie = (
  /**
   * @type {(
   *   (<Tree extends Node>(tree: Tree, find: Find, replace?: Replace | null | undefined, options?: Options | null | undefined) => Tree) &
   *   (<Tree extends Node>(tree: Tree, schema: FindAndReplaceSchema | FindAndReplaceList, options?: Options | null | undefined) => Tree)
   * )}
   **/
  /**
   * @template {Node} Tree
   * @param {Tree} tree
   * @param {Find | FindAndReplaceSchema | FindAndReplaceList} find
   * @param {Replace | Options | null | undefined} [replace]
   * @param {Options | null | undefined} [options]
   * @returns {Tree}
   */
  function(t, e, n, i) {
    let r, o;
    typeof e == "string" || e instanceof RegExp ? (o = [[e, n]], r = i) : (o = e, r = n), r || (r = {});
    const s = Os(r.ignore || []), a = bie(o);
    let l = -1;
    for (; ++l < a.length; )
      mie(t, "text", c);
    return t;
    function c(d, u) {
      let h = -1, p;
      for (; ++h < u.length; ) {
        const m = u[h];
        if (s(
          m,
          // @ts-expect-error: TS doesn’t understand but it’s perfect.
          p ? p.children.indexOf(m) : void 0,
          p
        ))
          return;
        p = m;
      }
      if (p)
        return f(d, u);
    }
    function f(d, u) {
      const h = u[u.length - 1], p = a[l][0], m = a[l][1];
      let v = 0;
      const y = h.children.indexOf(d);
      let C = !1, k = [];
      p.lastIndex = 0;
      let _ = p.exec(d.value);
      for (; _; ) {
        const S = _.index, E = {
          index: _.index,
          input: _.input,
          // @ts-expect-error: stack is fine.
          stack: [...u, d]
        };
        let x = m(..._, E);
        if (typeof x == "string" && (x = x.length > 0 ? { type: "text", value: x } : void 0), x !== !1 && (v !== S && k.push({
          type: "text",
          value: d.value.slice(v, S)
        }), Array.isArray(x) ? k.push(...x) : x && k.push(x), v = S + _[0].length, C = !0), !p.global)
          break;
        _ = p.exec(d.value);
      }
      return C ? (v < d.value.length && k.push({ type: "text", value: d.value.slice(v) }), h.children.splice(y, 1, ...k)) : k = [d], y + k.length;
    }
  }
);
function bie(t) {
  const e = [];
  if (typeof t != "object")
    throw new TypeError("Expected array or object as schema");
  if (Array.isArray(t)) {
    let n = -1;
    for (; ++n < t.length; )
      e.push([
        V_(t[n][0]),
        W_(t[n][1])
      ]);
  } else {
    let n;
    for (n in t)
      yie.call(t, n) && e.push([V_(n), W_(t[n])]);
  }
  return e;
}
function V_(t) {
  return typeof t == "string" ? new RegExp(uie(t), "g") : t;
}
function W_(t) {
  return typeof t == "function" ? t : () => t;
}
const d0 = "phrasing", u0 = ["autolink", "link", "image", "label"], kie = {
  transforms: [xie],
  enter: {
    literalAutolink: _ie,
    literalAutolinkEmail: h0,
    literalAutolinkHttp: h0,
    literalAutolinkWww: h0
  },
  exit: {
    literalAutolink: Sie,
    literalAutolinkEmail: Cie,
    literalAutolinkHttp: Eie,
    literalAutolinkWww: Tie
  }
}, wie = {
  unsafe: [
    {
      character: "@",
      before: "[+\\-.\\w]",
      after: "[\\-.\\w]",
      inConstruct: d0,
      notInConstruct: u0
    },
    {
      character: ".",
      before: "[Ww]",
      after: "[\\-.\\w]",
      inConstruct: d0,
      notInConstruct: u0
    },
    { character: ":", before: "[ps]", after: "\\/", inConstruct: d0, notInConstruct: u0 }
  ]
};
function _ie(t) {
  this.enter({ type: "link", title: null, url: "", children: [] }, t);
}
function h0(t) {
  this.config.enter.autolinkProtocol.call(this, t);
}
function Eie(t) {
  this.config.exit.autolinkProtocol.call(this, t);
}
function Tie(t) {
  this.config.exit.data.call(this, t);
  const e = (
    /** @type {Link} */
    this.stack[this.stack.length - 1]
  );
  e.url = "http://" + this.sliceSerialize(t);
}
function Cie(t) {
  this.config.exit.autolinkEmail.call(this, t);
}
function Sie(t) {
  this.exit(t);
}
function xie(t) {
  vie(
    t,
    [
      [/(https?:\/\/|www(?=\.))([-.\w]+)([^ \t\r\n]*)/gi, Aie],
      [/([-.\w+]+)@([-\w]+(?:\.[-\w]+)+)/g, Mie]
    ],
    { ignore: ["link", "linkReference"] }
  );
}
function Aie(t, e, n, i, r) {
  let o = "";
  if (!vS(r) || (/^w/i.test(e) && (n = e + n, e = "", o = "http://"), !Nie(n)))
    return !1;
  const s = Oie(n + i);
  if (!s[0]) return !1;
  const a = {
    type: "link",
    title: null,
    url: o + e + s[0],
    children: [{ type: "text", value: e + s[0] }]
  };
  return s[1] ? [a, { type: "text", value: s[1] }] : a;
}
function Mie(t, e, n, i) {
  return (
    // Not an expected previous character.
    !vS(i, !0) || // Label ends in not allowed character.
    /[-\d_]$/.test(n) ? !1 : {
      type: "link",
      title: null,
      url: "mailto:" + e + "@" + n,
      children: [{ type: "text", value: e + "@" + n }]
    }
  );
}
function Nie(t) {
  const e = t.split(".");
  return !(e.length < 2 || e[e.length - 1] && (/_/.test(e[e.length - 1]) || !/[a-zA-Z\d]/.test(e[e.length - 1])) || e[e.length - 2] && (/_/.test(e[e.length - 2]) || !/[a-zA-Z\d]/.test(e[e.length - 2])));
}
function Oie(t) {
  const e = /[!"&'),.:;<>?\]}]+$/.exec(t);
  if (!e)
    return [t, void 0];
  t = t.slice(0, e.index);
  let n = e[0], i = n.indexOf(")");
  const r = q1(t, "(");
  let o = q1(t, ")");
  for (; i !== -1 && r > o; )
    t += n.slice(0, i + 1), n = n.slice(i + 1), i = n.indexOf(")"), o++;
  return [t, n];
}
function vS(t, e) {
  const n = t.input.charCodeAt(t.index - 1);
  return (t.index === 0 || ya(n) || wp(n)) && (!e || n !== 47);
}
function bS(t, e) {
  const n = Number.parseInt(t, e);
  return (
    // C0 except for HT, LF, FF, CR, space.
    n < 9 || n === 11 || n > 13 && n < 32 || // Control character (DEL) of C0, and C1 controls.
    n > 126 && n < 160 || // Lone high surrogates and low surrogates.
    n > 55295 && n < 57344 || // Noncharacters.
    n > 64975 && n < 65008 || (n & 65535) === 65535 || (n & 65535) === 65534 || // Out of range
    n > 1114111 ? "�" : String.fromCharCode(n)
  );
}
const Rie = /\\([!-/:-@[-`{-~])|&(#(?:\d{1,7}|x[\da-f]{1,6})|[\da-z]{1,31});/gi;
function kS(t) {
  return t.replace(Rie, Iie);
}
function Iie(t, e, n) {
  if (e)
    return e;
  if (n.charCodeAt(0) === 35) {
    const r = n.charCodeAt(1), o = r === 120 || r === 88;
    return bS(n.slice(o ? 2 : 1), o ? 16 : 10);
  }
  return jb(n) || t;
}
function Ub(t) {
  return t.label || !t.identifier ? t.label || "" : kS(t.identifier);
}
function wS(t, e, n) {
  const i = e.indexStack, r = t.children || [], o = e.createTracker(n), s = [];
  let a = -1;
  for (i.push(-1); ++a < r.length; ) {
    const l = r[a];
    i[i.length - 1] = a, s.push(
      o.move(
        e.handle(l, t, e, {
          before: `
`,
          after: `
`,
          ...o.current()
        })
      )
    ), l.type !== "list" && (e.bulletLastUsed = void 0), a < r.length - 1 && s.push(
      o.move(Lie(l, r[a + 1], t, e))
    );
  }
  return i.pop(), s.join("");
}
function Lie(t, e, n, i) {
  let r = i.join.length;
  for (; r--; ) {
    const o = i.join[r](t, e, n, i);
    if (o === !0 || o === 1)
      break;
    if (typeof o == "number")
      return `
`.repeat(1 + o);
    if (o === !1)
      return `

<!---->

`;
  }
  return `

`;
}
const Die = /\r?\n|\r/g;
function _S(t, e) {
  const n = [];
  let i = 0, r = 0, o;
  for (; o = Die.exec(t); )
    s(t.slice(i, o.index)), n.push(o[0]), i = o.index + o[0].length, r++;
  return s(t.slice(i)), n.join("");
  function s(a) {
    n.push(e(a, r, !a));
  }
}
function ES(t) {
  if (!t._compiled) {
    const e = (t.atBreak ? "[\\r\\n][\\t ]*" : "") + (t.before ? "(?:" + t.before + ")" : "");
    t._compiled = new RegExp(
      (e ? "(" + e + ")" : "") + (/[|\\{}()[\]^$+*?.-]/.test(t.character) ? "\\" : "") + t.character + (t.after ? "(?:" + t.after + ")" : ""),
      "g"
    );
  }
  return t._compiled;
}
function TS(t, e) {
  return q_(t, e.inConstruct, !0) && !q_(t, e.notInConstruct, !1);
}
function q_(t, e, n) {
  if (typeof e == "string" && (e = [e]), !e || e.length === 0)
    return n;
  let i = -1;
  for (; ++i < e.length; )
    if (t.includes(e[i]))
      return !0;
  return !1;
}
function Vb(t, e, n) {
  const i = (n.before || "") + (e || "") + (n.after || ""), r = [], o = [], s = {};
  let a = -1;
  for (; ++a < t.unsafe.length; ) {
    const f = t.unsafe[a];
    if (!TS(t.stack, f))
      continue;
    const d = ES(f);
    let u;
    for (; u = d.exec(i); ) {
      const h = "before" in f || !!f.atBreak, p = "after" in f, m = u.index + (h ? u[1].length : 0);
      r.includes(m) ? (s[m].before && !h && (s[m].before = !1), s[m].after && !p && (s[m].after = !1)) : (r.push(m), s[m] = { before: h, after: p });
    }
  }
  r.sort(Pie);
  let l = n.before ? n.before.length : 0;
  const c = i.length - (n.after ? n.after.length : 0);
  for (a = -1; ++a < r.length; ) {
    const f = r[a];
    f < l || f >= c || f + 1 < c && r[a + 1] === f + 1 && s[f].after && !s[f + 1].before && !s[f + 1].after || r[a - 1] === f - 1 && s[f].before && !s[f - 1].before && !s[f - 1].after || (l !== f && o.push(G_(i.slice(l, f), "\\")), l = f, /[!-/:-@[-`{-~]/.test(i.charAt(f)) && (!n.encode || !n.encode.includes(i.charAt(f))) ? o.push("\\") : (o.push(
      "&#x" + i.charCodeAt(f).toString(16).toUpperCase() + ";"
    ), l++));
  }
  return o.push(G_(i.slice(l, c), n.after)), o.join("");
}
function Pie(t, e) {
  return t - e;
}
function G_(t, e) {
  const n = /\\(?=[!-/:-@[-`{-~])/g, i = [], r = [], o = t + e;
  let s = -1, a = 0, l;
  for (; l = n.exec(o); )
    i.push(l.index);
  for (; ++s < i.length; )
    a !== i[s] && r.push(t.slice(a, i[s])), r.push("\\"), a = i[s];
  return r.push(t.slice(a)), r.join("");
}
function Xf(t) {
  const e = t || {}, n = e.now || {};
  let i = e.lineShift || 0, r = n.line || 1, o = n.column || 1;
  return { move: l, current: s, shift: a };
  function s() {
    return { now: { line: r, column: o }, lineShift: i };
  }
  function a(c) {
    i += c;
  }
  function l(c) {
    const f = c || "", d = f.split(/\r?\n|\r/g), u = d[d.length - 1];
    return r += d.length - 1, o = d.length === 1 ? o + u.length : 1 + u.length + i, f;
  }
}
CS.peek = Gie;
function Fie() {
  return {
    enter: {
      gfmFootnoteDefinition: Hie,
      gfmFootnoteDefinitionLabelString: $ie,
      gfmFootnoteCall: Uie,
      gfmFootnoteCallString: Vie
    },
    exit: {
      gfmFootnoteDefinition: zie,
      gfmFootnoteDefinitionLabelString: jie,
      gfmFootnoteCall: qie,
      gfmFootnoteCallString: Wie
    }
  };
}
function Bie() {
  return {
    // This is on by default already.
    unsafe: [{ character: "[", inConstruct: ["phrasing", "label", "reference"] }],
    handlers: { footnoteDefinition: Kie, footnoteReference: CS }
  };
}
function Hie(t) {
  this.enter(
    { type: "footnoteDefinition", identifier: "", label: "", children: [] },
    t
  );
}
function $ie() {
  this.buffer();
}
function jie(t) {
  const e = this.resume(), n = (
    /** @type {FootnoteDefinition} */
    this.stack[this.stack.length - 1]
  );
  n.label = e, n.identifier = nr(
    this.sliceSerialize(t)
  ).toLowerCase();
}
function zie(t) {
  this.exit(t);
}
function Uie(t) {
  this.enter({ type: "footnoteReference", identifier: "", label: "" }, t);
}
function Vie() {
  this.buffer();
}
function Wie(t) {
  const e = this.resume(), n = (
    /** @type {FootnoteDefinition} */
    this.stack[this.stack.length - 1]
  );
  n.label = e, n.identifier = nr(
    this.sliceSerialize(t)
  ).toLowerCase();
}
function qie(t) {
  this.exit(t);
}
function CS(t, e, n, i) {
  const r = Xf(i);
  let o = r.move("[^");
  const s = n.enter("footnoteReference"), a = n.enter("reference");
  return o += r.move(
    Vb(n, Ub(t), {
      ...r.current(),
      before: o,
      after: "]"
    })
  ), a(), s(), o += r.move("]"), o;
}
function Gie() {
  return "[";
}
function Kie(t, e, n, i) {
  const r = Xf(i);
  let o = r.move("[^");
  const s = n.enter("footnoteDefinition"), a = n.enter("label");
  return o += r.move(
    Vb(n, Ub(t), {
      ...r.current(),
      before: o,
      after: "]"
    })
  ), a(), o += r.move(
    "]:" + (t.children && t.children.length > 0 ? " " : "")
  ), r.shift(4), o += r.move(
    _S(wS(t, n, r.current()), Yie)
  ), s(), o;
}
function Yie(t, e, n) {
  return e === 0 ? t : (n ? "" : "    ") + t;
}
function Wb(t, e, n) {
  const i = e.indexStack, r = t.children || [], o = [];
  let s = -1, a = n.before;
  i.push(-1);
  let l = e.createTracker(n);
  for (; ++s < r.length; ) {
    const c = r[s];
    let f;
    if (i[i.length - 1] = s, s + 1 < r.length) {
      let d = e.handle.handlers[r[s + 1].type];
      d && d.peek && (d = d.peek), f = d ? d(r[s + 1], t, e, {
        before: "",
        after: "",
        ...l.current()
      }).charAt(0) : "";
    } else
      f = n.after;
    o.length > 0 && (a === "\r" || a === `
`) && c.type === "html" && (o[o.length - 1] = o[o.length - 1].replace(
      /(\r?\n|\r)$/,
      " "
    ), a = " ", l = e.createTracker(n), l.move(o.join(""))), o.push(
      l.move(
        e.handle(c, t, e, {
          ...l.current(),
          before: a,
          after: f
        })
      )
    ), a = o[o.length - 1].slice(-1);
  }
  return i.pop(), o.join("");
}
const Jie = [
  "autolink",
  "destinationLiteral",
  "destinationRaw",
  "reference",
  "titleQuote",
  "titleApostrophe"
];
SS.peek = tre;
const Xie = {
  canContainEols: ["delete"],
  enter: { strikethrough: Zie },
  exit: { strikethrough: ere }
}, Qie = {
  unsafe: [
    {
      character: "~",
      inConstruct: "phrasing",
      notInConstruct: Jie
    }
  ],
  handlers: { delete: SS }
};
function Zie(t) {
  this.enter({ type: "delete", children: [] }, t);
}
function ere(t) {
  this.exit(t);
}
function SS(t, e, n, i) {
  const r = Xf(i), o = n.enter("strikethrough");
  let s = r.move("~~");
  return s += Wb(t, n, {
    ...r.current(),
    before: s,
    after: "~"
  }), s += r.move("~~"), o(), s;
}
function tre() {
  return "~";
}
qb.peek = nre;
function qb(t, e, n) {
  let i = t.value || "", r = "`", o = -1;
  for (; new RegExp("(^|[^`])" + r + "([^`]|$)").test(i); )
    r += "`";
  for (/[^ \r\n]/.test(i) && (/^[ \r\n]/.test(i) && /[ \r\n]$/.test(i) || /^`|`$/.test(i)) && (i = " " + i + " "); ++o < n.unsafe.length; ) {
    const s = n.unsafe[o], a = ES(s);
    let l;
    if (s.atBreak)
      for (; l = a.exec(i); ) {
        let c = l.index;
        i.charCodeAt(c) === 10 && i.charCodeAt(c - 1) === 13 && c--, i = i.slice(0, c) + " " + i.slice(l.index + 1);
      }
  }
  return r + i + r;
}
function nre() {
  return "`";
}
function ire(t, e = {}) {
  const n = (e.align || []).concat(), i = e.stringLength || ore, r = [], o = [], s = [], a = [];
  let l = 0, c = -1;
  for (; ++c < t.length; ) {
    const p = [], m = [];
    let v = -1;
    for (t[c].length > l && (l = t[c].length); ++v < t[c].length; ) {
      const y = rre(t[c][v]);
      if (e.alignDelimiters !== !1) {
        const C = i(y);
        m[v] = C, (a[v] === void 0 || C > a[v]) && (a[v] = C);
      }
      p.push(y);
    }
    o[c] = p, s[c] = m;
  }
  let f = -1;
  if (typeof n == "object" && "length" in n)
    for (; ++f < l; )
      r[f] = K_(n[f]);
  else {
    const p = K_(n);
    for (; ++f < l; )
      r[f] = p;
  }
  f = -1;
  const d = [], u = [];
  for (; ++f < l; ) {
    const p = r[f];
    let m = "", v = "";
    p === 99 ? (m = ":", v = ":") : p === 108 ? m = ":" : p === 114 && (v = ":");
    let y = e.alignDelimiters === !1 ? 1 : Math.max(
      1,
      a[f] - m.length - v.length
    );
    const C = m + "-".repeat(y) + v;
    e.alignDelimiters !== !1 && (y = m.length + y + v.length, y > a[f] && (a[f] = y), u[f] = y), d[f] = C;
  }
  o.splice(1, 0, d), s.splice(1, 0, u), c = -1;
  const h = [];
  for (; ++c < o.length; ) {
    const p = o[c], m = s[c];
    f = -1;
    const v = [];
    for (; ++f < l; ) {
      const y = p[f] || "";
      let C = "", k = "";
      if (e.alignDelimiters !== !1) {
        const _ = a[f] - (m[f] || 0), S = r[f];
        S === 114 ? C = " ".repeat(_) : S === 99 ? _ % 2 ? (C = " ".repeat(_ / 2 + 0.5), k = " ".repeat(_ / 2 - 0.5)) : (C = " ".repeat(_ / 2), k = C) : k = " ".repeat(_);
      }
      e.delimiterStart !== !1 && !f && v.push("|"), e.padding !== !1 && // Don’t add the opening space if we’re not aligning and the cell is
      // empty: there will be a closing space.
      !(e.alignDelimiters === !1 && y === "") && (e.delimiterStart !== !1 || f) && v.push(" "), e.alignDelimiters !== !1 && v.push(C), v.push(y), e.alignDelimiters !== !1 && v.push(k), e.padding !== !1 && v.push(" "), (e.delimiterEnd !== !1 || f !== l - 1) && v.push("|");
    }
    h.push(
      e.delimiterEnd === !1 ? v.join("").replace(/ +$/, "") : v.join("")
    );
  }
  return h.join(`
`);
}
function rre(t) {
  return t == null ? "" : String(t);
}
function ore(t) {
  return t.length;
}
function K_(t) {
  const e = typeof t == "string" ? t.codePointAt(0) : 0;
  return e === 67 || e === 99 ? 99 : e === 76 || e === 108 ? 108 : e === 82 || e === 114 ? 114 : 0;
}
const sre = {
  enter: {
    table: are,
    tableData: Y_,
    tableHeader: Y_,
    tableRow: cre
  },
  exit: {
    codeText: fre,
    table: lre,
    tableData: p0,
    tableHeader: p0,
    tableRow: p0
  }
};
function are(t) {
  const e = t._align;
  this.enter(
    {
      type: "table",
      align: e.map((n) => n === "none" ? null : n),
      children: []
    },
    t
  ), this.setData("inTable", !0);
}
function lre(t) {
  this.exit(t), this.setData("inTable");
}
function cre(t) {
  this.enter({ type: "tableRow", children: [] }, t);
}
function p0(t) {
  this.exit(t);
}
function Y_(t) {
  this.enter({ type: "tableCell", children: [] }, t);
}
function fre(t) {
  let e = this.resume();
  this.getData("inTable") && (e = e.replace(/\\([\\|])/g, dre));
  const n = (
    /** @type {InlineCode} */
    this.stack[this.stack.length - 1]
  );
  n.value = e, this.exit(t);
}
function dre(t, e) {
  return e === "|" ? e : t;
}
function ure(t) {
  const e = t || {}, n = e.tableCellPadding, i = e.tablePipeAlign, r = e.stringLength, o = n ? " " : "|";
  return {
    unsafe: [
      { character: "\r", inConstruct: "tableCell" },
      { character: `
`, inConstruct: "tableCell" },
      // A pipe, when followed by a tab or space (padding), or a dash or colon
      // (unpadded delimiter row), could result in a table.
      { atBreak: !0, character: "|", after: "[	 :-]" },
      // A pipe in a cell must be encoded.
      { character: "|", inConstruct: "tableCell" },
      // A colon must be followed by a dash, in which case it could start a
      // delimiter row.
      { atBreak: !0, character: ":", after: "-" },
      // A delimiter row can also start with a dash, when followed by more
      // dashes, a colon, or a pipe.
      // This is a stricter version than the built in check for lists, thematic
      // breaks, and setex heading underlines though:
      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>
      { atBreak: !0, character: "-", after: "[:|-]" }
    ],
    handlers: {
      table: s,
      tableRow: a,
      tableCell: l,
      inlineCode: u
    }
  };
  function s(h, p, m, v) {
    return c(
      f(h, m, v),
      h.align
    );
  }
  function a(h, p, m, v) {
    const y = d(h, m, v), C = c([y]);
    return C.slice(0, C.indexOf(`
`));
  }
  function l(h, p, m, v) {
    const y = m.enter("tableCell"), C = m.enter("phrasing"), k = Wb(h, m, {
      ...v,
      before: o,
      after: o
    });
    return C(), y(), k;
  }
  function c(h, p) {
    return ire(h, {
      align: p,
      // @ts-expect-error: `markdown-table` types should support `null`.
      alignDelimiters: i,
      // @ts-expect-error: `markdown-table` types should support `null`.
      padding: n,
      // @ts-expect-error: `markdown-table` types should support `null`.
      stringLength: r
    });
  }
  function f(h, p, m) {
    const v = h.children;
    let y = -1;
    const C = [], k = p.enter("table");
    for (; ++y < v.length; )
      C[y] = d(
        v[y],
        p,
        m
      );
    return k(), C;
  }
  function d(h, p, m) {
    const v = h.children;
    let y = -1;
    const C = [], k = p.enter("tableRow");
    for (; ++y < v.length; )
      C[y] = l(
        v[y],
        h,
        p,
        m
      );
    return k(), C;
  }
  function u(h, p, m) {
    let v = qb(h, p, m);
    return m.stack.includes("tableCell") && (v = v.replace(/\|/g, "\\$&")), v;
  }
}
function Gb(t) {
  const e = t.options.bullet || "*";
  if (e !== "*" && e !== "+" && e !== "-")
    throw new Error(
      "Cannot serialize items with `" + e + "` for `options.bullet`, expected `*`, `+`, or `-`"
    );
  return e;
}
function hre(t) {
  const e = t.options.listItemIndent || "tab";
  if (e === 1 || e === "1")
    return "one";
  if (e !== "tab" && e !== "one" && e !== "mixed")
    throw new Error(
      "Cannot serialize items with `" + e + "` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`"
    );
  return e;
}
function xS(t, e, n, i) {
  const r = hre(n);
  let o = n.bulletCurrent || Gb(n);
  e && e.type === "list" && e.ordered && (o = (typeof e.start == "number" && e.start > -1 ? e.start : 1) + (n.options.incrementListMarker === !1 ? 0 : e.children.indexOf(t)) + o);
  let s = o.length + 1;
  (r === "tab" || r === "mixed" && (e && e.type === "list" && e.spread || t.spread)) && (s = Math.ceil(s / 4) * 4);
  const a = n.createTracker(i);
  a.move(o + " ".repeat(s - o.length)), a.shift(s);
  const l = n.enter("listItem"), c = n.indentLines(
    n.containerFlow(t, a.current()),
    f
  );
  return l(), c;
  function f(d, u, h) {
    return u ? (h ? "" : " ".repeat(s)) + d : (h ? o : o + " ".repeat(s - o.length)) + d;
  }
}
const pre = {
  exit: {
    taskListCheckValueChecked: J_,
    taskListCheckValueUnchecked: J_,
    paragraph: gre
  }
}, mre = {
  unsafe: [{ atBreak: !0, character: "-", after: "[:|-]" }],
  handlers: { listItem: yre }
};
function J_(t) {
  const e = (
    /** @type {ListItem} */
    this.stack[this.stack.length - 2]
  );
  e.checked = t.type === "taskListCheckValueChecked";
}
function gre(t) {
  const e = (
    /** @type {Parents} */
    this.stack[this.stack.length - 2]
  );
  if (e && e.type === "listItem" && typeof e.checked == "boolean") {
    const n = (
      /** @type {Paragraph} */
      this.stack[this.stack.length - 1]
    ), i = n.children[0];
    if (i && i.type === "text") {
      const r = e.children;
      let o = -1, s;
      for (; ++o < r.length; ) {
        const a = r[o];
        if (a.type === "paragraph") {
          s = a;
          break;
        }
      }
      s === n && (i.value = i.value.slice(1), i.value.length === 0 ? n.children.shift() : n.position && i.position && typeof i.position.start.offset == "number" && (i.position.start.column++, i.position.start.offset++, n.position.start = Object.assign({}, i.position.start)));
    }
  }
  this.exit(t);
}
function yre(t, e, n, i) {
  const r = t.children[0], o = typeof t.checked == "boolean" && r && r.type === "paragraph", s = "[" + (t.checked ? "x" : " ") + "] ", a = Xf(i);
  o && a.move(s);
  let l = xS(t, e, n, {
    ...i,
    ...a.current()
  });
  return o && (l = l.replace(/^(?:[*+-]|\d+\.)([\r\n]| {1,3})/, c)), l;
  function c(f) {
    return f + s;
  }
}
function vre() {
  return [
    kie,
    Fie(),
    Xie,
    sre,
    pre
  ];
}
function bre(t) {
  return {
    extensions: [
      wie,
      Bie(),
      Qie,
      ure(t),
      mre
    ]
  };
}
function kre(t = {}) {
  const e = this.data();
  n("micromarkExtensions", die(t)), n("fromMarkdownExtensions", vre()), n("toMarkdownExtensions", bre(t));
  function n(i, r) {
    /** @type {unknown[]} */
    // Other extensions
    /* c8 ignore next 2 */
    (e[i] ? e[i] : e[i] = []).push(r);
  }
}
const wre = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: kre
}, Symbol.toStringTag, { value: "Module" }));
function ku(t, e) {
  let n = -1, i;
  if (e.extensions)
    for (; ++n < e.extensions.length; )
      ku(t, e.extensions[n]);
  for (i in e)
    i === "extensions" || (i === "unsafe" || i === "join" ? t[i] = [...t[i] || [], ...e[i] || []] : i === "handlers" ? t[i] = Object.assign(t[i], e[i] || {}) : t.options[i] = e[i]);
  return t;
}
function _re(t, e, n, i) {
  const r = n.enter("blockquote"), o = n.createTracker(i);
  o.move("> "), o.shift(2);
  const s = n.indentLines(
    n.containerFlow(t, o.current()),
    Ere
  );
  return r(), s;
}
function Ere(t, e, n) {
  return ">" + (n ? "" : " ") + t;
}
function X_(t, e, n, i) {
  let r = -1;
  for (; ++r < n.unsafe.length; )
    if (n.unsafe[r].character === `
` && TS(n.stack, n.unsafe[r]))
      return /[ \t]/.test(i.before) ? "" : " ";
  return `\\
`;
}
function Tre(t, e) {
  const n = String(t);
  let i = n.indexOf(e), r = i, o = 0, s = 0;
  if (typeof e != "string")
    throw new TypeError("Expected substring");
  for (; i !== -1; )
    i === r ? ++o > s && (s = o) : o = 1, r = i + e.length, i = n.indexOf(e, r);
  return s;
}
function Qg(t, e) {
  return !!(!e.options.fences && t.value && // If there’s no info…
  !t.lang && // And there’s a non-whitespace character…
  /[^ \r\n]/.test(t.value) && // And the value doesn’t start or end in a blank…
  !/^[\t ]*(?:[\r\n]|$)|(?:^|[\r\n])[\t ]*$/.test(t.value));
}
function Cre(t) {
  const e = t.options.fence || "`";
  if (e !== "`" && e !== "~")
    throw new Error(
      "Cannot serialize code with `" + e + "` for `options.fence`, expected `` ` `` or `~`"
    );
  return e;
}
function Sre(t, e, n, i) {
  const r = Cre(n), o = t.value || "", s = r === "`" ? "GraveAccent" : "Tilde";
  if (Qg(t, n)) {
    const d = n.enter("codeIndented"), u = n.indentLines(o, xre);
    return d(), u;
  }
  const a = n.createTracker(i), l = r.repeat(Math.max(Tre(o, r) + 1, 3)), c = n.enter("codeFenced");
  let f = a.move(l);
  if (t.lang) {
    const d = n.enter(`codeFencedLang${s}`);
    f += a.move(
      n.safe(t.lang, {
        before: f,
        after: " ",
        encode: ["`"],
        ...a.current()
      })
    ), d();
  }
  if (t.lang && t.meta) {
    const d = n.enter(`codeFencedMeta${s}`);
    f += a.move(" "), f += a.move(
      n.safe(t.meta, {
        before: f,
        after: `
`,
        encode: ["`"],
        ...a.current()
      })
    ), d();
  }
  return f += a.move(`
`), o && (f += a.move(o + `
`)), f += a.move(l), c(), f;
}
function xre(t, e, n) {
  return (n ? "" : "    ") + t;
}
function Kb(t) {
  const e = t.options.quote || '"';
  if (e !== '"' && e !== "'")
    throw new Error(
      "Cannot serialize title with `" + e + "` for `options.quote`, expected `\"`, or `'`"
    );
  return e;
}
function Are(t, e, n, i) {
  const r = Kb(n), o = r === '"' ? "Quote" : "Apostrophe", s = n.enter("definition");
  let a = n.enter("label");
  const l = n.createTracker(i);
  let c = l.move("[");
  return c += l.move(
    n.safe(n.associationId(t), {
      before: c,
      after: "]",
      ...l.current()
    })
  ), c += l.move("]: "), a(), // If there’s no url, or…
  !t.url || // If there are control characters or whitespace.
  /[\0- \u007F]/.test(t.url) ? (a = n.enter("destinationLiteral"), c += l.move("<"), c += l.move(
    n.safe(t.url, { before: c, after: ">", ...l.current() })
  ), c += l.move(">")) : (a = n.enter("destinationRaw"), c += l.move(
    n.safe(t.url, {
      before: c,
      after: t.title ? " " : `
`,
      ...l.current()
    })
  )), a(), t.title && (a = n.enter(`title${o}`), c += l.move(" " + r), c += l.move(
    n.safe(t.title, {
      before: c,
      after: r,
      ...l.current()
    })
  ), c += l.move(r), a()), s(), c;
}
function Mre(t) {
  const e = t.options.emphasis || "*";
  if (e !== "*" && e !== "_")
    throw new Error(
      "Cannot serialize emphasis with `" + e + "` for `options.emphasis`, expected `*`, or `_`"
    );
  return e;
}
AS.peek = Nre;
function AS(t, e, n, i) {
  const r = Mre(n), o = n.enter("emphasis"), s = n.createTracker(i);
  let a = s.move(r);
  return a += s.move(
    n.containerPhrasing(t, {
      before: a,
      after: r,
      ...s.current()
    })
  ), a += s.move(r), o(), a;
}
function Nre(t, e, n) {
  return n.options.emphasis || "*";
}
function MS(t, e) {
  let n = !1;
  return ma(t, (i) => {
    if ("value" in i && /\r?\n|\r/.test(i.value) || i.type === "break")
      return n = !0, K1;
  }), !!((!t.depth || t.depth < 3) && kp(t) && (e.options.setext || n));
}
function Ore(t, e, n, i) {
  const r = Math.max(Math.min(6, t.depth || 1), 1), o = n.createTracker(i);
  if (MS(t, n)) {
    const f = n.enter("headingSetext"), d = n.enter("phrasing"), u = n.containerPhrasing(t, {
      ...o.current(),
      before: `
`,
      after: `
`
    });
    return d(), f(), u + `
` + (r === 1 ? "=" : "-").repeat(
      // The whole size…
      u.length - // Minus the position of the character after the last EOL (or
      // 0 if there is none)…
      (Math.max(u.lastIndexOf("\r"), u.lastIndexOf(`
`)) + 1)
    );
  }
  const s = "#".repeat(r), a = n.enter("headingAtx"), l = n.enter("phrasing");
  o.move(s + " ");
  let c = n.containerPhrasing(t, {
    before: "# ",
    after: `
`,
    ...o.current()
  });
  return /^[\t ]/.test(c) && (c = "&#x" + c.charCodeAt(0).toString(16).toUpperCase() + ";" + c.slice(1)), c = c ? s + " " + c : s, n.options.closeAtx && (c += " " + s), l(), a(), c;
}
NS.peek = Rre;
function NS(t) {
  return t.value || "";
}
function Rre() {
  return "<";
}
OS.peek = Ire;
function OS(t, e, n, i) {
  const r = Kb(n), o = r === '"' ? "Quote" : "Apostrophe", s = n.enter("image");
  let a = n.enter("label");
  const l = n.createTracker(i);
  let c = l.move("![");
  return c += l.move(
    n.safe(t.alt, { before: c, after: "]", ...l.current() })
  ), c += l.move("]("), a(), // If there’s no url but there is a title…
  !t.url && t.title || // If there are control characters or whitespace.
  /[\0- \u007F]/.test(t.url) ? (a = n.enter("destinationLiteral"), c += l.move("<"), c += l.move(
    n.safe(t.url, { before: c, after: ">", ...l.current() })
  ), c += l.move(">")) : (a = n.enter("destinationRaw"), c += l.move(
    n.safe(t.url, {
      before: c,
      after: t.title ? " " : ")",
      ...l.current()
    })
  )), a(), t.title && (a = n.enter(`title${o}`), c += l.move(" " + r), c += l.move(
    n.safe(t.title, {
      before: c,
      after: r,
      ...l.current()
    })
  ), c += l.move(r), a()), c += l.move(")"), s(), c;
}
function Ire() {
  return "!";
}
RS.peek = Lre;
function RS(t, e, n, i) {
  const r = t.referenceType, o = n.enter("imageReference");
  let s = n.enter("label");
  const a = n.createTracker(i);
  let l = a.move("![");
  const c = n.safe(t.alt, {
    before: l,
    after: "]",
    ...a.current()
  });
  l += a.move(c + "]["), s();
  const f = n.stack;
  n.stack = [], s = n.enter("reference");
  const d = n.safe(n.associationId(t), {
    before: l,
    after: "]",
    ...a.current()
  });
  return s(), n.stack = f, o(), r === "full" || !c || c !== d ? l += a.move(d + "]") : r === "shortcut" ? l = l.slice(0, -1) : l += a.move("]"), l;
}
function Lre() {
  return "!";
}
function IS(t, e) {
  const n = kp(t);
  return !!(!e.options.resourceLink && // If there’s a url…
  t.url && // And there’s a no title…
  !t.title && // And the content of `node` is a single text node…
  t.children && t.children.length === 1 && t.children[0].type === "text" && // And if the url is the same as the content…
  (n === t.url || "mailto:" + n === t.url) && // And that starts w/ a protocol…
  /^[a-z][a-z+.-]+:/i.test(t.url) && // And that doesn’t contain ASCII control codes (character escapes and
  // references don’t work), space, or angle brackets…
  !/[\0- <>\u007F]/.test(t.url));
}
LS.peek = Dre;
function LS(t, e, n, i) {
  const r = Kb(n), o = r === '"' ? "Quote" : "Apostrophe", s = n.createTracker(i);
  let a, l;
  if (IS(t, n)) {
    const f = n.stack;
    n.stack = [], a = n.enter("autolink");
    let d = s.move("<");
    return d += s.move(
      n.containerPhrasing(t, {
        before: d,
        after: ">",
        ...s.current()
      })
    ), d += s.move(">"), a(), n.stack = f, d;
  }
  a = n.enter("link"), l = n.enter("label");
  let c = s.move("[");
  return c += s.move(
    n.containerPhrasing(t, {
      before: c,
      after: "](",
      ...s.current()
    })
  ), c += s.move("]("), l(), // If there’s no url but there is a title…
  !t.url && t.title || // If there are control characters or whitespace.
  /[\0- \u007F]/.test(t.url) ? (l = n.enter("destinationLiteral"), c += s.move("<"), c += s.move(
    n.safe(t.url, { before: c, after: ">", ...s.current() })
  ), c += s.move(">")) : (l = n.enter("destinationRaw"), c += s.move(
    n.safe(t.url, {
      before: c,
      after: t.title ? " " : ")",
      ...s.current()
    })
  )), l(), t.title && (l = n.enter(`title${o}`), c += s.move(" " + r), c += s.move(
    n.safe(t.title, {
      before: c,
      after: r,
      ...s.current()
    })
  ), c += s.move(r), l()), c += s.move(")"), a(), c;
}
function Dre(t, e, n) {
  return IS(t, n) ? "<" : "[";
}
DS.peek = Pre;
function DS(t, e, n, i) {
  const r = t.referenceType, o = n.enter("linkReference");
  let s = n.enter("label");
  const a = n.createTracker(i);
  let l = a.move("[");
  const c = n.containerPhrasing(t, {
    before: l,
    after: "]",
    ...a.current()
  });
  l += a.move(c + "]["), s();
  const f = n.stack;
  n.stack = [], s = n.enter("reference");
  const d = n.safe(n.associationId(t), {
    before: l,
    after: "]",
    ...a.current()
  });
  return s(), n.stack = f, o(), r === "full" || !c || c !== d ? l += a.move(d + "]") : r === "shortcut" ? l = l.slice(0, -1) : l += a.move("]"), l;
}
function Pre() {
  return "[";
}
function Fre(t) {
  const e = Gb(t), n = t.options.bulletOther;
  if (!n)
    return e === "*" ? "-" : "*";
  if (n !== "*" && n !== "+" && n !== "-")
    throw new Error(
      "Cannot serialize items with `" + n + "` for `options.bulletOther`, expected `*`, `+`, or `-`"
    );
  if (n === e)
    throw new Error(
      "Expected `bullet` (`" + e + "`) and `bulletOther` (`" + n + "`) to be different"
    );
  return n;
}
function PS(t) {
  const e = t.options.bulletOrdered || ".";
  if (e !== "." && e !== ")")
    throw new Error(
      "Cannot serialize items with `" + e + "` for `options.bulletOrdered`, expected `.` or `)`"
    );
  return e;
}
function Bre(t) {
  const e = PS(t), n = t.options.bulletOrderedOther;
  if (!n)
    return e === "." ? ")" : ".";
  if (n !== "." && n !== ")")
    throw new Error(
      "Cannot serialize items with `" + n + "` for `options.bulletOrderedOther`, expected `*`, `+`, or `-`"
    );
  if (n === e)
    throw new Error(
      "Expected `bulletOrdered` (`" + e + "`) and `bulletOrderedOther` (`" + n + "`) to be different"
    );
  return n;
}
function FS(t) {
  const e = t.options.rule || "*";
  if (e !== "*" && e !== "-" && e !== "_")
    throw new Error(
      "Cannot serialize rules with `" + e + "` for `options.rule`, expected `*`, `-`, or `_`"
    );
  return e;
}
function Hre(t, e, n, i) {
  const r = n.enter("list"), o = n.bulletCurrent;
  let s = t.ordered ? PS(n) : Gb(n);
  const a = t.ordered ? Bre(n) : Fre(n), l = n.bulletLastUsed;
  let c = !1;
  if (e && // Explicit `other` set.
  (t.ordered ? n.options.bulletOrderedOther : n.options.bulletOther) && l && s === l && (c = !0), !t.ordered) {
    const d = t.children ? t.children[0] : void 0;
    if (
      // Bullet could be used as a thematic break marker:
      (s === "*" || s === "-") && // Empty first list item:
      d && (!d.children || !d.children[0]) && // Directly in two other list items:
      n.stack[n.stack.length - 1] === "list" && n.stack[n.stack.length - 2] === "listItem" && n.stack[n.stack.length - 3] === "list" && n.stack[n.stack.length - 4] === "listItem" && // That are each the first child.
      n.indexStack[n.indexStack.length - 1] === 0 && n.indexStack[n.indexStack.length - 2] === 0 && n.indexStack[n.indexStack.length - 3] === 0 && (c = !0), FS(n) === s && d
    ) {
      let u = -1;
      for (; ++u < t.children.length; ) {
        const h = t.children[u];
        if (h && h.type === "listItem" && h.children && h.children[0] && h.children[0].type === "thematicBreak") {
          c = !0;
          break;
        }
      }
    }
  }
  c && (s = a), n.bulletCurrent = s;
  const f = n.containerFlow(t, i);
  return n.bulletLastUsed = s, n.bulletCurrent = o, r(), f;
}
function $re(t, e, n, i) {
  const r = n.enter("paragraph"), o = n.enter("phrasing"), s = n.containerPhrasing(t, i);
  return o(), r(), s;
}
function jre(t, e, n, i) {
  return (t.children.some((s) => U7(s)) ? n.containerPhrasing : n.containerFlow).call(n, t, i);
}
function zre(t) {
  const e = t.options.strong || "*";
  if (e !== "*" && e !== "_")
    throw new Error(
      "Cannot serialize strong with `" + e + "` for `options.strong`, expected `*`, or `_`"
    );
  return e;
}
BS.peek = Ure;
function BS(t, e, n, i) {
  const r = zre(n), o = n.enter("strong"), s = n.createTracker(i);
  let a = s.move(r + r);
  return a += s.move(
    n.containerPhrasing(t, {
      before: a,
      after: r,
      ...s.current()
    })
  ), a += s.move(r + r), o(), a;
}
function Ure(t, e, n) {
  return n.options.strong || "*";
}
function Vre(t, e, n, i) {
  return n.safe(t.value, i);
}
function Wre(t) {
  const e = t.options.ruleRepetition || 3;
  if (e < 3)
    throw new Error(
      "Cannot serialize rules with repetition `" + e + "` for `options.ruleRepetition`, expected `3` or more"
    );
  return e;
}
function qre(t, e, n) {
  const i = (FS(n) + (n.options.ruleSpaces ? " " : "")).repeat(Wre(n));
  return n.options.ruleSpaces ? i.slice(0, -1) : i;
}
const Gre = {
  blockquote: _re,
  break: X_,
  code: Sre,
  definition: Are,
  emphasis: AS,
  hardBreak: X_,
  heading: Ore,
  html: NS,
  image: OS,
  imageReference: RS,
  inlineCode: qb,
  link: LS,
  linkReference: DS,
  list: Hre,
  listItem: xS,
  paragraph: $re,
  root: jre,
  strong: BS,
  text: Vre,
  thematicBreak: qre
}, Kre = [Yre];
function Yre(t, e, n, i) {
  if (e.type === "code" && Qg(e, i) && (t.type === "list" || t.type === e.type && Qg(t, i)) || t.type === "list" && t.type === e.type && !!t.ordered == !!e.ordered && !(t.ordered ? i.options.bulletOrderedOther : i.options.bulletOther))
    return !1;
  if ("spread" in n && typeof n.spread == "boolean")
    return t.type === "paragraph" && // Two paragraphs.
    (t.type === e.type || e.type === "definition" || // Paragraph followed by a setext heading.
    e.type === "heading" && MS(e, i)) ? void 0 : n.spread ? 1 : 0;
}
const Fs = [
  "autolink",
  "destinationLiteral",
  "destinationRaw",
  "reference",
  "titleQuote",
  "titleApostrophe"
], Jre = [
  { character: "	", after: "[\\r\\n]", inConstruct: "phrasing" },
  { character: "	", before: "[\\r\\n]", inConstruct: "phrasing" },
  {
    character: "	",
    inConstruct: ["codeFencedLangGraveAccent", "codeFencedLangTilde"]
  },
  {
    character: "\r",
    inConstruct: [
      "codeFencedLangGraveAccent",
      "codeFencedLangTilde",
      "codeFencedMetaGraveAccent",
      "codeFencedMetaTilde",
      "destinationLiteral",
      "headingAtx"
    ]
  },
  {
    character: `
`,
    inConstruct: [
      "codeFencedLangGraveAccent",
      "codeFencedLangTilde",
      "codeFencedMetaGraveAccent",
      "codeFencedMetaTilde",
      "destinationLiteral",
      "headingAtx"
    ]
  },
  { character: " ", after: "[\\r\\n]", inConstruct: "phrasing" },
  { character: " ", before: "[\\r\\n]", inConstruct: "phrasing" },
  {
    character: " ",
    inConstruct: ["codeFencedLangGraveAccent", "codeFencedLangTilde"]
  },
  // An exclamation mark can start an image, if it is followed by a link or
  // a link reference.
  {
    character: "!",
    after: "\\[",
    inConstruct: "phrasing",
    notInConstruct: Fs
  },
  // A quote can break out of a title.
  { character: '"', inConstruct: "titleQuote" },
  // A number sign could start an ATX heading if it starts a line.
  { atBreak: !0, character: "#" },
  { character: "#", inConstruct: "headingAtx", after: `(?:[\r
]|$)` },
  // Dollar sign and percentage are not used in markdown.
  // An ampersand could start a character reference.
  { character: "&", after: "[#A-Za-z]", inConstruct: "phrasing" },
  // An apostrophe can break out of a title.
  { character: "'", inConstruct: "titleApostrophe" },
  // A left paren could break out of a destination raw.
  { character: "(", inConstruct: "destinationRaw" },
  // A left paren followed by `]` could make something into a link or image.
  {
    before: "\\]",
    character: "(",
    inConstruct: "phrasing",
    notInConstruct: Fs
  },
  // A right paren could start a list item or break out of a destination
  // raw.
  { atBreak: !0, before: "\\d+", character: ")" },
  { character: ")", inConstruct: "destinationRaw" },
  // An asterisk can start thematic breaks, list items, emphasis, strong.
  { atBreak: !0, character: "*", after: `(?:[ 	\r
*])` },
  { character: "*", inConstruct: "phrasing", notInConstruct: Fs },
  // A plus sign could start a list item.
  { atBreak: !0, character: "+", after: `(?:[ 	\r
])` },
  // A dash can start thematic breaks, list items, and setext heading
  // underlines.
  { atBreak: !0, character: "-", after: `(?:[ 	\r
-])` },
  // A dot could start a list item.
  { atBreak: !0, before: "\\d+", character: ".", after: `(?:[ 	\r
]|$)` },
  // Slash, colon, and semicolon are not used in markdown for constructs.
  // A less than can start html (flow or text) or an autolink.
  // HTML could start with an exclamation mark (declaration, cdata, comment),
  // slash (closing tag), question mark (instruction), or a letter (tag).
  // An autolink also starts with a letter.
  // Finally, it could break out of a destination literal.
  { atBreak: !0, character: "<", after: "[!/?A-Za-z]" },
  {
    character: "<",
    after: "[!/?A-Za-z]",
    inConstruct: "phrasing",
    notInConstruct: Fs
  },
  { character: "<", inConstruct: "destinationLiteral" },
  // An equals to can start setext heading underlines.
  { atBreak: !0, character: "=" },
  // A greater than can start block quotes and it can break out of a
  // destination literal.
  { atBreak: !0, character: ">" },
  { character: ">", inConstruct: "destinationLiteral" },
  // Question mark and at sign are not used in markdown for constructs.
  // A left bracket can start definitions, references, labels,
  { atBreak: !0, character: "[" },
  { character: "[", inConstruct: "phrasing", notInConstruct: Fs },
  { character: "[", inConstruct: ["label", "reference"] },
  // A backslash can start an escape (when followed by punctuation) or a
  // hard break (when followed by an eol).
  // Note: typical escapes are handled in `safe`!
  { character: "\\", after: "[\\r\\n]", inConstruct: "phrasing" },
  // A right bracket can exit labels.
  { character: "]", inConstruct: ["label", "reference"] },
  // Caret is not used in markdown for constructs.
  // An underscore can start emphasis, strong, or a thematic break.
  { atBreak: !0, character: "_" },
  { character: "_", inConstruct: "phrasing", notInConstruct: Fs },
  // A grave accent can start code (fenced or text), or it can break out of
  // a grave accent code fence.
  { atBreak: !0, character: "`" },
  {
    character: "`",
    inConstruct: ["codeFencedLangGraveAccent", "codeFencedMetaGraveAccent"]
  },
  { character: "`", inConstruct: "phrasing", notInConstruct: Fs },
  // Left brace, vertical bar, right brace are not used in markdown for
  // constructs.
  // A tilde can start code (fenced).
  { atBreak: !0, character: "~" }
];
function Xre(t, e = {}) {
  const n = {
    enter: r,
    indentLines: _S,
    associationId: Ub,
    containerPhrasing: toe,
    containerFlow: noe,
    createTracker: Xf,
    safe: ioe,
    stack: [],
    unsafe: [],
    join: [],
    // @ts-expect-error: we’ll fill it next.
    handlers: {},
    options: {},
    indexStack: [],
    // @ts-expect-error: we’ll add `handle` later.
    handle: void 0
  };
  ku(n, { unsafe: Jre, join: Kre, handlers: Gre }), ku(n, e), n.options.tightDefinitions && ku(n, { join: [eoe] }), n.handle = C7("type", {
    invalid: Qre,
    unknown: Zre,
    handlers: n.handlers
  });
  let i = n.handle(t, void 0, n, {
    before: `
`,
    after: `
`,
    now: { line: 1, column: 1 },
    lineShift: 0
  });
  return i && i.charCodeAt(i.length - 1) !== 10 && i.charCodeAt(i.length - 1) !== 13 && (i += `
`), i;
  function r(o) {
    return n.stack.push(o), s;
    function s() {
      n.stack.pop();
    }
  }
}
function Qre(t) {
  throw new Error("Cannot handle value `" + t + "`, expected node");
}
function Zre(t) {
  throw new Error("Cannot handle unknown node `" + t.type + "`");
}
function eoe(t, e) {
  if (t.type === "definition" && t.type === e.type)
    return 0;
}
function toe(t, e) {
  return Wb(t, this, e);
}
function noe(t, e) {
  return wS(t, this, e);
}
function ioe(t, e) {
  return Vb(this, t, e);
}
function roe(t) {
  Object.assign(this, { Compiler: (n) => {
    const i = (
      /** @type {Options} */
      this.data("settings")
    );
    return Xre(
      n,
      Object.assign({}, i, t, {
        // Note: this option is not in the readme.
        // The goal is for it to be set by plugins on `data` instead of being
        // passed by users.
        extensions: (
          /** @type {ToMarkdownOptions['extensions']} */
          this.data("toMarkdownExtensions") || []
        )
      })
    );
  } });
}
const ooe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: roe
}, Symbol.toStringTag, { value: "Module" })), soe = {
  tokenize: aoe
};
function aoe(t) {
  const e = t.attempt(
    this.parser.constructs.contentInitial,
    i,
    r
  );
  let n;
  return e;
  function i(a) {
    if (a === null) {
      t.consume(a);
      return;
    }
    return t.enter("lineEnding"), t.consume(a), t.exit("lineEnding"), vt(t, e, "linePrefix");
  }
  function r(a) {
    return t.enter("paragraph"), o(a);
  }
  function o(a) {
    const l = t.enter("chunkText", {
      contentType: "text",
      previous: n
    });
    return n && (n.next = l), n = l, s(a);
  }
  function s(a) {
    if (a === null) {
      t.exit("chunkText"), t.exit("paragraph"), t.consume(a);
      return;
    }
    return He(a) ? (t.consume(a), t.exit("chunkText"), o) : (t.consume(a), s);
  }
}
const loe = {
  tokenize: coe
}, Q_ = {
  tokenize: foe
};
function coe(t) {
  const e = this, n = [];
  let i = 0, r, o, s;
  return a;
  function a(k) {
    if (i < n.length) {
      const _ = n[i];
      return e.containerState = _[1], t.attempt(
        _[0].continuation,
        l,
        c
      )(k);
    }
    return c(k);
  }
  function l(k) {
    if (i++, e.containerState._closeFlow) {
      e.containerState._closeFlow = void 0, r && C();
      const _ = e.events.length;
      let S = _, E;
      for (; S--; )
        if (e.events[S][0] === "exit" && e.events[S][1].type === "chunkFlow") {
          E = e.events[S][1].end;
          break;
        }
      y(i);
      let x = _;
      for (; x < e.events.length; )
        e.events[x][1].end = Object.assign({}, E), x++;
      return pi(
        e.events,
        S + 1,
        0,
        e.events.slice(_)
      ), e.events.length = x, c(k);
    }
    return a(k);
  }
  function c(k) {
    if (i === n.length) {
      if (!r)
        return u(k);
      if (r.currentConstruct && r.currentConstruct.concrete)
        return p(k);
      e.interrupt = !!(r.currentConstruct && !r._gfmTableDynamicInterruptHack);
    }
    return e.containerState = {}, t.check(
      Q_,
      f,
      d
    )(k);
  }
  function f(k) {
    return r && C(), y(i), u(k);
  }
  function d(k) {
    return e.parser.lazy[e.now().line] = i !== n.length, s = e.now().offset, p(k);
  }
  function u(k) {
    return e.containerState = {}, t.attempt(
      Q_,
      h,
      p
    )(k);
  }
  function h(k) {
    return i++, n.push([e.currentConstruct, e.containerState]), u(k);
  }
  function p(k) {
    if (k === null) {
      r && C(), y(0), t.consume(k);
      return;
    }
    return r = r || e.parser.flow(e.now()), t.enter("chunkFlow", {
      contentType: "flow",
      previous: o,
      _tokenizer: r
    }), m(k);
  }
  function m(k) {
    if (k === null) {
      v(t.exit("chunkFlow"), !0), y(0), t.consume(k);
      return;
    }
    return He(k) ? (t.consume(k), v(t.exit("chunkFlow")), i = 0, e.interrupt = void 0, a) : (t.consume(k), m);
  }
  function v(k, _) {
    const S = e.sliceStream(k);
    if (_ && S.push(null), k.previous = o, o && (o.next = k), o = k, r.defineSkip(k.start), r.write(S), e.parser.lazy[k.start.line]) {
      let E = r.events.length;
      for (; E--; )
        if (
          // The token starts before the line ending…
          r.events[E][1].start.offset < s && // …and either is not ended yet…
          (!r.events[E][1].end || // …or ends after it.
          r.events[E][1].end.offset > s)
        )
          return;
      const x = e.events.length;
      let N = x, R, A;
      for (; N--; )
        if (e.events[N][0] === "exit" && e.events[N][1].type === "chunkFlow") {
          if (R) {
            A = e.events[N][1].end;
            break;
          }
          R = !0;
        }
      for (y(i), E = x; E < e.events.length; )
        e.events[E][1].end = Object.assign({}, A), E++;
      pi(
        e.events,
        N + 1,
        0,
        e.events.slice(x)
      ), e.events.length = E;
    }
  }
  function y(k) {
    let _ = n.length;
    for (; _-- > k; ) {
      const S = n[_];
      e.containerState = S[1], S[0].exit.call(e, t);
    }
    n.length = k;
  }
  function C() {
    r.write([null]), o = void 0, r = void 0, e.containerState._closeFlow = void 0;
  }
}
function foe(t, e, n) {
  return vt(
    t,
    t.attempt(this.parser.constructs.document, e, n),
    "linePrefix",
    this.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4
  );
}
const doe = {
  tokenize: uoe
};
function uoe(t) {
  const e = this, n = t.attempt(
    // Try to parse a blank line.
    Jf,
    i,
    // Try to parse initial flow (essentially, only code).
    t.attempt(
      this.parser.constructs.flowInitial,
      r,
      vt(
        t,
        t.attempt(
          this.parser.constructs.flow,
          r,
          t.attempt(Xte, r)
        ),
        "linePrefix"
      )
    )
  );
  return n;
  function i(o) {
    if (o === null) {
      t.consume(o);
      return;
    }
    return t.enter("lineEndingBlank"), t.consume(o), t.exit("lineEndingBlank"), e.currentConstruct = void 0, n;
  }
  function r(o) {
    if (o === null) {
      t.consume(o);
      return;
    }
    return t.enter("lineEnding"), t.consume(o), t.exit("lineEnding"), e.currentConstruct = void 0, n;
  }
}
const hoe = {
  resolveAll: $S()
}, poe = HS("string"), moe = HS("text");
function HS(t) {
  return {
    tokenize: e,
    resolveAll: $S(
      t === "text" ? goe : void 0
    )
  };
  function e(n) {
    const i = this, r = this.parser.constructs[t], o = n.attempt(r, s, a);
    return s;
    function s(f) {
      return c(f) ? o(f) : a(f);
    }
    function a(f) {
      if (f === null) {
        n.consume(f);
        return;
      }
      return n.enter("data"), n.consume(f), l;
    }
    function l(f) {
      return c(f) ? (n.exit("data"), o(f)) : (n.consume(f), l);
    }
    function c(f) {
      if (f === null)
        return !0;
      const d = r[f];
      let u = -1;
      if (d)
        for (; ++u < d.length; ) {
          const h = d[u];
          if (!h.previous || h.previous.call(i, i.previous))
            return !0;
        }
      return !1;
    }
  }
}
function $S(t) {
  return e;
  function e(n, i) {
    let r = -1, o;
    for (; ++r <= n.length; )
      o === void 0 ? n[r] && n[r][1].type === "data" && (o = r, r++) : (!n[r] || n[r][1].type !== "data") && (r !== o + 2 && (n[o][1].end = n[r - 1][1].end, n.splice(o + 2, r - o - 2), r = o + 2), o = void 0);
    return t ? t(n, i) : n;
  }
}
function goe(t, e) {
  let n = 0;
  for (; ++n <= t.length; )
    if ((n === t.length || t[n][1].type === "lineEnding") && t[n - 1][1].type === "data") {
      const i = t[n - 1][1], r = e.sliceStream(i);
      let o = r.length, s = -1, a = 0, l;
      for (; o--; ) {
        const c = r[o];
        if (typeof c == "string") {
          for (s = c.length; c.charCodeAt(s - 1) === 32; )
            a++, s--;
          if (s) break;
          s = -1;
        } else if (c === -2)
          l = !0, a++;
        else if (c !== -1) {
          o++;
          break;
        }
      }
      if (a) {
        const c = {
          type: n === t.length || l || a < 2 ? "lineSuffix" : "hardBreakTrailing",
          start: {
            line: i.end.line,
            column: i.end.column - a,
            offset: i.end.offset - a,
            _index: i.start._index + o,
            _bufferIndex: o ? s : i.start._bufferIndex + s
          },
          end: Object.assign({}, i.end)
        };
        i.end = Object.assign({}, c.start), i.start.offset === i.end.offset ? Object.assign(i, c) : (t.splice(
          n,
          0,
          ["enter", c, e],
          ["exit", c, e]
        ), n += 2);
      }
      n++;
    }
  return t;
}
function yoe(t, e, n) {
  let i = Object.assign(
    n ? Object.assign({}, n) : {
      line: 1,
      column: 1,
      offset: 0
    },
    {
      _index: 0,
      _bufferIndex: -1
    }
  );
  const r = {}, o = [];
  let s = [], a = [];
  const l = {
    consume: C,
    enter: k,
    exit: _,
    attempt: x(S),
    check: x(E),
    interrupt: x(E, {
      interrupt: !0
    })
  }, c = {
    previous: null,
    code: null,
    containerState: {},
    events: [],
    parser: t,
    sliceStream: h,
    sliceSerialize: u,
    now: p,
    defineSkip: m,
    write: d
  };
  let f = e.tokenize.call(c, l);
  return e.resolveAll && o.push(e), c;
  function d(O) {
    return s = xi(s, O), v(), s[s.length - 1] !== null ? [] : (N(e, 0), c.events = _p(o, c.events, c), c.events);
  }
  function u(O, B) {
    return boe(h(O), B);
  }
  function h(O) {
    return voe(s, O);
  }
  function p() {
    const { line: O, column: B, offset: U, _index: K, _bufferIndex: G } = i;
    return {
      line: O,
      column: B,
      offset: U,
      _index: K,
      _bufferIndex: G
    };
  }
  function m(O) {
    r[O.line] = O.column, A();
  }
  function v() {
    let O;
    for (; i._index < s.length; ) {
      const B = s[i._index];
      if (typeof B == "string")
        for (O = i._index, i._bufferIndex < 0 && (i._bufferIndex = 0); i._index === O && i._bufferIndex < B.length; )
          y(B.charCodeAt(i._bufferIndex));
      else
        y(B);
    }
  }
  function y(O) {
    f = f(O);
  }
  function C(O) {
    He(O) ? (i.line++, i.column = 1, i.offset += O === -3 ? 2 : 1, A()) : O !== -1 && (i.column++, i.offset++), i._bufferIndex < 0 ? i._index++ : (i._bufferIndex++, i._bufferIndex === s[i._index].length && (i._bufferIndex = -1, i._index++)), c.previous = O;
  }
  function k(O, B) {
    const U = B || {};
    return U.type = O, U.start = p(), c.events.push(["enter", U, c]), a.push(U), U;
  }
  function _(O) {
    const B = a.pop();
    return B.end = p(), c.events.push(["exit", B, c]), B;
  }
  function S(O, B) {
    N(O, B.from);
  }
  function E(O, B) {
    B.restore();
  }
  function x(O, B) {
    return U;
    function U(K, G, J) {
      let te, re, X, D;
      return Array.isArray(K) ? Se(K) : "tokenize" in K ? (
        // @ts-expect-error Looks like a construct.
        Se([K])
      ) : me(K);
      function me(Re) {
        return qe;
        function qe(Ye) {
          const Ge = Ye !== null && Re[Ye], st = Ye !== null && Re.null, Zt = [
            // To do: add more extension tests.
            /* c8 ignore next 2 */
            ...Array.isArray(Ge) ? Ge : Ge ? [Ge] : [],
            ...Array.isArray(st) ? st : st ? [st] : []
          ];
          return Se(Zt)(Ye);
        }
      }
      function Se(Re) {
        return te = Re, re = 0, Re.length === 0 ? J : F(Re[re]);
      }
      function F(Re) {
        return qe;
        function qe(Ye) {
          return D = R(), X = Re, Re.partial || (c.currentConstruct = Re), Re.name && c.parser.constructs.disable.null.includes(Re.name) ? ft() : Re.tokenize.call(
            // If we do have fields, create an object w/ `context` as its
            // prototype.
            // This allows a “live binding”, which is needed for `interrupt`.
            B ? Object.assign(Object.create(c), B) : c,
            l,
            Oe,
            ft
          )(Ye);
        }
      }
      function Oe(Re) {
        return O(X, D), G;
      }
      function ft(Re) {
        return D.restore(), ++re < te.length ? F(te[re]) : J;
      }
    }
  }
  function N(O, B) {
    O.resolveAll && !o.includes(O) && o.push(O), O.resolve && pi(
      c.events,
      B,
      c.events.length - B,
      O.resolve(c.events.slice(B), c)
    ), O.resolveTo && (c.events = O.resolveTo(c.events, c));
  }
  function R() {
    const O = p(), B = c.previous, U = c.currentConstruct, K = c.events.length, G = Array.from(a);
    return {
      restore: J,
      from: K
    };
    function J() {
      i = O, c.previous = B, c.currentConstruct = U, c.events.length = K, a = G, A();
    }
  }
  function A() {
    i.line in r && i.column < 2 && (i.column = r[i.line], i.offset += r[i.line] - 1);
  }
}
function voe(t, e) {
  const n = e.start._index, i = e.start._bufferIndex, r = e.end._index, o = e.end._bufferIndex;
  let s;
  if (n === r)
    s = [t[n].slice(i, o)];
  else {
    if (s = t.slice(n, r), i > -1) {
      const a = s[0];
      typeof a == "string" ? s[0] = a.slice(i) : s.shift();
    }
    o > 0 && s.push(t[r].slice(0, o));
  }
  return s;
}
function boe(t, e) {
  let n = -1;
  const i = [];
  let r;
  for (; ++n < t.length; ) {
    const o = t[n];
    let s;
    if (typeof o == "string")
      s = o;
    else
      switch (o) {
        case -5: {
          s = "\r";
          break;
        }
        case -4: {
          s = `
`;
          break;
        }
        case -3: {
          s = `\r
`;
          break;
        }
        case -2: {
          s = e ? " " : "	";
          break;
        }
        case -1: {
          if (!e && r) continue;
          s = " ";
          break;
        }
        default:
          s = String.fromCharCode(o);
      }
    r = o === -2, i.push(s);
  }
  return i.join("");
}
const koe = {
  42: ei,
  43: ei,
  45: ei,
  48: ei,
  49: ei,
  50: ei,
  51: ei,
  52: ei,
  53: ei,
  54: ei,
  55: ei,
  56: ei,
  57: ei,
  62: dS
}, woe = {
  91: nne
}, _oe = {
  [-2]: c0,
  [-1]: c0,
  32: c0
}, Eoe = {
  35: lne,
  42: bu,
  45: [j_, bu],
  60: une,
  61: j_,
  95: bu,
  96: H_,
  126: H_
}, Toe = {
  38: hS,
  92: uS
}, Coe = {
  [-5]: f0,
  [-4]: f0,
  [-3]: f0,
  33: Nne,
  38: hS,
  42: Xg,
  60: [Ite, bne],
  91: Rne,
  92: [sne, uS],
  93: zb,
  95: Xg,
  96: qte
}, Soe = {
  null: [Xg, hoe]
}, xoe = {
  null: [42, 95]
}, Aoe = {
  null: []
}, Moe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  attentionMarkers: xoe,
  contentInitial: woe,
  disable: Aoe,
  document: koe,
  flow: Eoe,
  flowInitial: _oe,
  insideSpan: Soe,
  string: Toe,
  text: Coe
}, Symbol.toStringTag, { value: "Module" }));
function Noe(t) {
  const n = (
    /** @type {FullNormalizedExtension} */
    nS([Moe, ...(t || {}).extensions || []])
  ), i = {
    defined: [],
    lazy: {},
    constructs: n,
    content: r(soe),
    document: r(loe),
    flow: r(doe),
    string: r(poe),
    text: r(moe)
  };
  return i;
  function r(o) {
    return s;
    function s(a) {
      return yoe(i, o, a);
    }
  }
}
const Z_ = /[\0\t\n\r]/g;
function Ooe() {
  let t = 1, e = "", n = !0, i;
  return r;
  function r(o, s, a) {
    const l = [];
    let c, f, d, u, h;
    for (o = e + o.toString(s), d = 0, e = "", n && (o.charCodeAt(0) === 65279 && d++, n = void 0); d < o.length; ) {
      if (Z_.lastIndex = d, c = Z_.exec(o), u = c && c.index !== void 0 ? c.index : o.length, h = o.charCodeAt(u), !c) {
        e = o.slice(d);
        break;
      }
      if (h === 10 && d === u && i)
        l.push(-3), i = void 0;
      else
        switch (i && (l.push(-5), i = void 0), d < u && (l.push(o.slice(d, u)), t += u - d), h) {
          case 0: {
            l.push(65533), t++;
            break;
          }
          case 9: {
            for (f = Math.ceil(t / 4) * 4, l.push(-2); t++ < f; ) l.push(-1);
            break;
          }
          case 10: {
            l.push(-4), t = 1;
            break;
          }
          default:
            i = !0, t = 1;
        }
      d = u + 1;
    }
    return a && (i && l.push(-5), e && l.push(e), l.push(null)), l;
  }
}
function Roe(t) {
  for (; !pS(t); )
    ;
  return t;
}
const jS = {}.hasOwnProperty, Ioe = (
  /**
   * @type {(
   *   ((value: Value, encoding: Encoding, options?: Options | null | undefined) => Root) &
   *   ((value: Value, options?: Options | null | undefined) => Root)
   * )}
   */
  /**
   * @param {Value} value
   * @param {Encoding | Options | null | undefined} [encoding]
   * @param {Options | null | undefined} [options]
   * @returns {Root}
   */
  function(t, e, n) {
    return typeof e != "string" && (n = e, e = void 0), Loe(n)(
      Roe(
        Noe(n).document().write(Ooe()(t, e, !0))
      )
    );
  }
);
function Loe(t) {
  const e = {
    transforms: [],
    canContainEols: ["emphasis", "fragment", "heading", "paragraph", "strong"],
    enter: {
      autolink: a(g),
      autolinkProtocol: O,
      autolinkEmail: O,
      atxHeading: a(Y),
      blockQuote: a(Zt),
      characterEscape: O,
      characterReference: O,
      codeFenced: a(Mt),
      codeFencedFenceInfo: l,
      codeFencedFenceMeta: l,
      codeIndented: a(Mt, l),
      codeText: a(Dt, l),
      codeTextData: O,
      data: O,
      codeFlowValue: O,
      definition: a(dt),
      definitionDestinationString: l,
      definitionLabelString: l,
      definitionTitleString: l,
      emphasis: a(W),
      hardBreakEscape: a(fe),
      hardBreakTrailing: a(fe),
      htmlFlow: a(Ee, l),
      htmlFlowData: O,
      htmlText: a(Ee, l),
      htmlTextData: O,
      image: a(I),
      label: l,
      link: a(g),
      listItem: a(M),
      listItemValue: p,
      listOrdered: a(T, h),
      listUnordered: a(T),
      paragraph: a(j),
      reference: ft,
      referenceString: l,
      resourceDestinationString: l,
      resourceTitleString: l,
      setextHeading: a(Y),
      strong: a(q),
      thematicBreak: a(Te)
    },
    exit: {
      atxHeading: f(),
      atxHeadingSequence: x,
      autolink: f(),
      autolinkEmail: st,
      autolinkProtocol: Ge,
      blockQuote: f(),
      characterEscapeValue: B,
      characterReferenceMarkerHexadecimal: qe,
      characterReferenceMarkerNumeric: qe,
      characterReferenceValue: Ye,
      codeFenced: f(C),
      codeFencedFence: y,
      codeFencedFenceInfo: m,
      codeFencedFenceMeta: v,
      codeFlowValue: B,
      codeIndented: f(k),
      codeText: f(te),
      codeTextData: B,
      data: B,
      definition: f(),
      definitionDestinationString: E,
      definitionLabelString: _,
      definitionTitleString: S,
      emphasis: f(),
      hardBreakEscape: f(K),
      hardBreakTrailing: f(K),
      htmlFlow: f(G),
      htmlFlowData: B,
      htmlText: f(J),
      htmlTextData: B,
      image: f(X),
      label: me,
      labelText: D,
      lineEnding: U,
      link: f(re),
      listItem: f(),
      listOrdered: f(),
      listUnordered: f(),
      paragraph: f(),
      referenceString: Re,
      resourceDestinationString: Se,
      resourceTitleString: F,
      resource: Oe,
      setextHeading: f(A),
      setextHeadingLineSequence: R,
      setextHeadingText: N,
      strong: f(),
      thematicBreak: f()
    }
  };
  zS(e, (t || {}).mdastExtensions || []);
  const n = {};
  return i;
  function i(V) {
    let se = {
      type: "root",
      children: []
    };
    const ue = {
      stack: [se],
      tokenStack: [],
      config: e,
      enter: c,
      exit: d,
      buffer: l,
      resume: u,
      setData: o,
      getData: s
    }, _e = [];
    let Le = -1;
    for (; ++Le < V.length; )
      if (V[Le][1].type === "listOrdered" || V[Le][1].type === "listUnordered")
        if (V[Le][0] === "enter")
          _e.push(Le);
        else {
          const Ht = _e.pop();
          Le = r(V, Ht, Le);
        }
    for (Le = -1; ++Le < V.length; ) {
      const Ht = e[V[Le][0]];
      jS.call(Ht, V[Le][1].type) && Ht[V[Le][1].type].call(
        Object.assign(
          {
            sliceSerialize: V[Le][2].sliceSerialize
          },
          ue
        ),
        V[Le][1]
      );
    }
    if (ue.tokenStack.length > 0) {
      const Ht = ue.tokenStack[ue.tokenStack.length - 1];
      (Ht[1] || e3).call(ue, void 0, Ht[0]);
    }
    for (se.position = {
      start: zo(
        V.length > 0 ? V[0][1].start : {
          line: 1,
          column: 1,
          offset: 0
        }
      ),
      end: zo(
        V.length > 0 ? V[V.length - 2][1].end : {
          line: 1,
          column: 1,
          offset: 0
        }
      )
    }, Le = -1; ++Le < e.transforms.length; )
      se = e.transforms[Le](se) || se;
    return se;
  }
  function r(V, se, ue) {
    let _e = se - 1, Le = -1, Ht = !1, en, tn, gn, yn;
    for (; ++_e <= ue; ) {
      const Nt = V[_e];
      if (Nt[1].type === "listUnordered" || Nt[1].type === "listOrdered" || Nt[1].type === "blockQuote" ? (Nt[0] === "enter" ? Le++ : Le--, yn = void 0) : Nt[1].type === "lineEndingBlank" ? Nt[0] === "enter" && (en && !yn && !Le && !gn && (gn = _e), yn = void 0) : Nt[1].type === "linePrefix" || Nt[1].type === "listItemValue" || Nt[1].type === "listItemMarker" || Nt[1].type === "listItemPrefix" || Nt[1].type === "listItemPrefixWhitespace" || (yn = void 0), !Le && Nt[0] === "enter" && Nt[1].type === "listItemPrefix" || Le === -1 && Nt[0] === "exit" && (Nt[1].type === "listUnordered" || Nt[1].type === "listOrdered")) {
        if (en) {
          let qr = _e;
          for (tn = void 0; qr--; ) {
            const nn = V[qr];
            if (nn[1].type === "lineEnding" || nn[1].type === "lineEndingBlank") {
              if (nn[0] === "exit") continue;
              tn && (V[tn][1].type = "lineEndingBlank", Ht = !0), nn[1].type = "lineEnding", tn = qr;
            } else if (!(nn[1].type === "linePrefix" || nn[1].type === "blockQuotePrefix" || nn[1].type === "blockQuotePrefixWhitespace" || nn[1].type === "blockQuoteMarker" || nn[1].type === "listItemIndent")) break;
          }
          gn && (!tn || gn < tn) && (en._spread = !0), en.end = Object.assign(
            {},
            tn ? V[tn][1].start : Nt[1].end
          ), V.splice(tn || _e, 0, ["exit", en, Nt[2]]), _e++, ue++;
        }
        Nt[1].type === "listItemPrefix" && (en = {
          type: "listItem",
          _spread: !1,
          start: Object.assign({}, Nt[1].start),
          // @ts-expect-error: we’ll add `end` in a second.
          end: void 0
        }, V.splice(_e, 0, ["enter", en, Nt[2]]), _e++, ue++, gn = void 0, yn = !0);
      }
    }
    return V[se][1]._spread = Ht, ue;
  }
  function o(V, se) {
    n[V] = se;
  }
  function s(V) {
    return n[V];
  }
  function a(V, se) {
    return ue;
    function ue(_e) {
      c.call(this, V(_e), _e), se && se.call(this, _e);
    }
  }
  function l() {
    this.stack.push({
      type: "fragment",
      children: []
    });
  }
  function c(V, se, ue) {
    return this.stack[this.stack.length - 1].children.push(V), this.stack.push(V), this.tokenStack.push([se, ue]), V.position = {
      start: zo(se.start)
    }, V;
  }
  function f(V) {
    return se;
    function se(ue) {
      V && V.call(this, ue), d.call(this, ue);
    }
  }
  function d(V, se) {
    const ue = this.stack.pop(), _e = this.tokenStack.pop();
    if (_e)
      _e[0].type !== V.type && (se ? se.call(this, V, _e[0]) : (_e[1] || e3).call(this, V, _e[0]));
    else throw new Error(
      "Cannot close `" + V.type + "` (" + Uc({
        start: V.start,
        end: V.end
      }) + "): it’s not open"
    );
    return ue.position.end = zo(V.end), ue;
  }
  function u() {
    return kp(this.stack.pop());
  }
  function h() {
    o("expectingFirstListItemValue", !0);
  }
  function p(V) {
    if (s("expectingFirstListItemValue")) {
      const se = this.stack[this.stack.length - 2];
      se.start = Number.parseInt(this.sliceSerialize(V), 10), o("expectingFirstListItemValue");
    }
  }
  function m() {
    const V = this.resume(), se = this.stack[this.stack.length - 1];
    se.lang = V;
  }
  function v() {
    const V = this.resume(), se = this.stack[this.stack.length - 1];
    se.meta = V;
  }
  function y() {
    s("flowCodeInside") || (this.buffer(), o("flowCodeInside", !0));
  }
  function C() {
    const V = this.resume(), se = this.stack[this.stack.length - 1];
    se.value = V.replace(/^(\r?\n|\r)|(\r?\n|\r)$/g, ""), o("flowCodeInside");
  }
  function k() {
    const V = this.resume(), se = this.stack[this.stack.length - 1];
    se.value = V.replace(/(\r?\n|\r)$/g, "");
  }
  function _(V) {
    const se = this.resume(), ue = this.stack[this.stack.length - 1];
    ue.label = se, ue.identifier = nr(
      this.sliceSerialize(V)
    ).toLowerCase();
  }
  function S() {
    const V = this.resume(), se = this.stack[this.stack.length - 1];
    se.title = V;
  }
  function E() {
    const V = this.resume(), se = this.stack[this.stack.length - 1];
    se.url = V;
  }
  function x(V) {
    const se = this.stack[this.stack.length - 1];
    if (!se.depth) {
      const ue = this.sliceSerialize(V).length;
      se.depth = ue;
    }
  }
  function N() {
    o("setextHeadingSlurpLineEnding", !0);
  }
  function R(V) {
    const se = this.stack[this.stack.length - 1];
    se.depth = this.sliceSerialize(V).charCodeAt(0) === 61 ? 1 : 2;
  }
  function A() {
    o("setextHeadingSlurpLineEnding");
  }
  function O(V) {
    const se = this.stack[this.stack.length - 1];
    let ue = se.children[se.children.length - 1];
    (!ue || ue.type !== "text") && (ue = Z(), ue.position = {
      start: zo(V.start)
    }, se.children.push(ue)), this.stack.push(ue);
  }
  function B(V) {
    const se = this.stack.pop();
    se.value += this.sliceSerialize(V), se.position.end = zo(V.end);
  }
  function U(V) {
    const se = this.stack[this.stack.length - 1];
    if (s("atHardBreak")) {
      const ue = se.children[se.children.length - 1];
      ue.position.end = zo(V.end), o("atHardBreak");
      return;
    }
    !s("setextHeadingSlurpLineEnding") && e.canContainEols.includes(se.type) && (O.call(this, V), B.call(this, V));
  }
  function K() {
    o("atHardBreak", !0);
  }
  function G() {
    const V = this.resume(), se = this.stack[this.stack.length - 1];
    se.value = V;
  }
  function J() {
    const V = this.resume(), se = this.stack[this.stack.length - 1];
    se.value = V;
  }
  function te() {
    const V = this.resume(), se = this.stack[this.stack.length - 1];
    se.value = V;
  }
  function re() {
    const V = this.stack[this.stack.length - 1];
    if (s("inReference")) {
      const se = s("referenceType") || "shortcut";
      V.type += "Reference", V.referenceType = se, delete V.url, delete V.title;
    } else
      delete V.identifier, delete V.label;
    o("referenceType");
  }
  function X() {
    const V = this.stack[this.stack.length - 1];
    if (s("inReference")) {
      const se = s("referenceType") || "shortcut";
      V.type += "Reference", V.referenceType = se, delete V.url, delete V.title;
    } else
      delete V.identifier, delete V.label;
    o("referenceType");
  }
  function D(V) {
    const se = this.sliceSerialize(V), ue = this.stack[this.stack.length - 2];
    ue.label = kS(se), ue.identifier = nr(se).toLowerCase();
  }
  function me() {
    const V = this.stack[this.stack.length - 1], se = this.resume(), ue = this.stack[this.stack.length - 1];
    if (o("inReference", !0), ue.type === "link") {
      const _e = V.children;
      ue.children = _e;
    } else
      ue.alt = se;
  }
  function Se() {
    const V = this.resume(), se = this.stack[this.stack.length - 1];
    se.url = V;
  }
  function F() {
    const V = this.resume(), se = this.stack[this.stack.length - 1];
    se.title = V;
  }
  function Oe() {
    o("inReference");
  }
  function ft() {
    o("referenceType", "collapsed");
  }
  function Re(V) {
    const se = this.resume(), ue = this.stack[this.stack.length - 1];
    ue.label = se, ue.identifier = nr(
      this.sliceSerialize(V)
    ).toLowerCase(), o("referenceType", "full");
  }
  function qe(V) {
    o("characterReferenceType", V.type);
  }
  function Ye(V) {
    const se = this.sliceSerialize(V), ue = s("characterReferenceType");
    let _e;
    ue ? (_e = bS(
      se,
      ue === "characterReferenceMarkerNumeric" ? 10 : 16
    ), o("characterReferenceType")) : _e = jb(se);
    const Le = this.stack.pop();
    Le.value += _e, Le.position.end = zo(V.end);
  }
  function Ge(V) {
    B.call(this, V);
    const se = this.stack[this.stack.length - 1];
    se.url = this.sliceSerialize(V);
  }
  function st(V) {
    B.call(this, V);
    const se = this.stack[this.stack.length - 1];
    se.url = "mailto:" + this.sliceSerialize(V);
  }
  function Zt() {
    return {
      type: "blockquote",
      children: []
    };
  }
  function Mt() {
    return {
      type: "code",
      lang: null,
      meta: null,
      value: ""
    };
  }
  function Dt() {
    return {
      type: "inlineCode",
      value: ""
    };
  }
  function dt() {
    return {
      type: "definition",
      identifier: "",
      label: null,
      title: null,
      url: ""
    };
  }
  function W() {
    return {
      type: "emphasis",
      children: []
    };
  }
  function Y() {
    return {
      type: "heading",
      depth: void 0,
      children: []
    };
  }
  function fe() {
    return {
      type: "break"
    };
  }
  function Ee() {
    return {
      type: "html",
      value: ""
    };
  }
  function I() {
    return {
      type: "image",
      title: null,
      url: "",
      alt: null
    };
  }
  function g() {
    return {
      type: "link",
      title: null,
      url: "",
      children: []
    };
  }
  function T(V) {
    return {
      type: "list",
      ordered: V.type === "listOrdered",
      start: null,
      spread: V._spread,
      children: []
    };
  }
  function M(V) {
    return {
      type: "listItem",
      spread: V._spread,
      checked: null,
      children: []
    };
  }
  function j() {
    return {
      type: "paragraph",
      children: []
    };
  }
  function q() {
    return {
      type: "strong",
      children: []
    };
  }
  function Z() {
    return {
      type: "text",
      value: ""
    };
  }
  function Te() {
    return {
      type: "thematicBreak"
    };
  }
}
function zo(t) {
  return {
    line: t.line,
    column: t.column,
    offset: t.offset
  };
}
function zS(t, e) {
  let n = -1;
  for (; ++n < e.length; ) {
    const i = e[n];
    Array.isArray(i) ? zS(t, i) : Doe(t, i);
  }
}
function Doe(t, e) {
  let n;
  for (n in e)
    if (jS.call(e, n)) {
      if (n === "canContainEols") {
        const i = e[n];
        i && t[n].push(...i);
      } else if (n === "transforms") {
        const i = e[n];
        i && t[n].push(...i);
      } else if (n === "enter" || n === "exit") {
        const i = e[n];
        i && Object.assign(t[n], i);
      }
    }
}
function e3(t, e) {
  throw t ? new Error(
    "Cannot close `" + t.type + "` (" + Uc({
      start: t.start,
      end: t.end
    }) + "): a different token (`" + e.type + "`, " + Uc({
      start: e.start,
      end: e.end
    }) + ") is open"
  ) : new Error(
    "Cannot close document, a token (`" + e.type + "`, " + Uc({
      start: e.start,
      end: e.end
    }) + ") is still open"
  );
}
function Poe(t) {
  Object.assign(this, { Parser: (n) => {
    const i = (
      /** @type {Options} */
      this.data("settings")
    );
    return Ioe(
      n,
      Object.assign({}, i, t, {
        // Note: these options are not in the readme.
        // The goal is for them to be set by plugins on `data` instead of being
        // passed by users.
        extensions: this.data("micromarkExtensions") || [],
        mdastExtensions: this.data("fromMarkdownExtensions") || []
      })
    );
  } });
}
const Foe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Poe
}, Symbol.toStringTag, { value: "Module" }));
function Boe(t, e) {
  const n = {
    type: "element",
    tagName: "blockquote",
    properties: {},
    children: t.wrap(t.all(e), !0)
  };
  return t.patch(e, n), t.applyData(e, n);
}
function Hoe(t, e) {
  const n = { type: "element", tagName: "br", properties: {}, children: [] };
  return t.patch(e, n), [t.applyData(e, n), { type: "text", value: `
` }];
}
function $oe(t, e) {
  const n = e.value ? e.value + `
` : "", i = e.lang ? e.lang.match(/^[^ \t]+(?=[ \t]|$)/) : null, r = {};
  i && (r.className = ["language-" + i]);
  let o = {
    type: "element",
    tagName: "code",
    properties: r,
    children: [{ type: "text", value: n }]
  };
  return e.meta && (o.data = { meta: e.meta }), t.patch(e, o), o = t.applyData(e, o), o = { type: "element", tagName: "pre", properties: {}, children: [o] }, t.patch(e, o), o;
}
function joe(t, e) {
  const n = {
    type: "element",
    tagName: "del",
    properties: {},
    children: t.all(e)
  };
  return t.patch(e, n), t.applyData(e, n);
}
function zoe(t, e) {
  const n = {
    type: "element",
    tagName: "em",
    properties: {},
    children: t.all(e)
  };
  return t.patch(e, n), t.applyData(e, n);
}
function US(t, e) {
  const n = String(e.identifier).toUpperCase(), i = Wl(n.toLowerCase()), r = t.footnoteOrder.indexOf(n);
  let o;
  r === -1 ? (t.footnoteOrder.push(n), t.footnoteCounts[n] = 1, o = t.footnoteOrder.length) : (t.footnoteCounts[n]++, o = r + 1);
  const s = t.footnoteCounts[n], a = {
    type: "element",
    tagName: "a",
    properties: {
      href: "#" + t.clobberPrefix + "fn-" + i,
      id: t.clobberPrefix + "fnref-" + i + (s > 1 ? "-" + s : ""),
      dataFootnoteRef: !0,
      ariaDescribedBy: ["footnote-label"]
    },
    children: [{ type: "text", value: String(o) }]
  };
  t.patch(e, a);
  const l = {
    type: "element",
    tagName: "sup",
    properties: {},
    children: [a]
  };
  return t.patch(e, l), t.applyData(e, l);
}
function Uoe(t, e) {
  const n = t.footnoteById;
  let i = 1;
  for (; i in n; ) i++;
  const r = String(i);
  return n[r] = {
    type: "footnoteDefinition",
    identifier: r,
    children: [{ type: "paragraph", children: e.children }],
    position: e.position
  }, US(t, {
    type: "footnoteReference",
    identifier: r,
    position: e.position
  });
}
function Voe(t, e) {
  const n = {
    type: "element",
    tagName: "h" + e.depth,
    properties: {},
    children: t.all(e)
  };
  return t.patch(e, n), t.applyData(e, n);
}
function Woe(t, e) {
  if (t.dangerous) {
    const n = { type: "raw", value: e.value };
    return t.patch(e, n), t.applyData(e, n);
  }
  return null;
}
function VS(t, e) {
  const n = e.referenceType;
  let i = "]";
  if (n === "collapsed" ? i += "[]" : n === "full" && (i += "[" + (e.label || e.identifier) + "]"), e.type === "imageReference")
    return { type: "text", value: "![" + e.alt + i };
  const r = t.all(e), o = r[0];
  o && o.type === "text" ? o.value = "[" + o.value : r.unshift({ type: "text", value: "[" });
  const s = r[r.length - 1];
  return s && s.type === "text" ? s.value += i : r.push({ type: "text", value: i }), r;
}
function qoe(t, e) {
  const n = t.definition(e.identifier);
  if (!n)
    return VS(t, e);
  const i = { src: Wl(n.url || ""), alt: e.alt };
  n.title !== null && n.title !== void 0 && (i.title = n.title);
  const r = { type: "element", tagName: "img", properties: i, children: [] };
  return t.patch(e, r), t.applyData(e, r);
}
function Goe(t, e) {
  const n = { src: Wl(e.url) };
  e.alt !== null && e.alt !== void 0 && (n.alt = e.alt), e.title !== null && e.title !== void 0 && (n.title = e.title);
  const i = { type: "element", tagName: "img", properties: n, children: [] };
  return t.patch(e, i), t.applyData(e, i);
}
function Koe(t, e) {
  const n = { type: "text", value: e.value.replace(/\r?\n|\r/g, " ") };
  t.patch(e, n);
  const i = {
    type: "element",
    tagName: "code",
    properties: {},
    children: [n]
  };
  return t.patch(e, i), t.applyData(e, i);
}
function Yoe(t, e) {
  const n = t.definition(e.identifier);
  if (!n)
    return VS(t, e);
  const i = { href: Wl(n.url || "") };
  n.title !== null && n.title !== void 0 && (i.title = n.title);
  const r = {
    type: "element",
    tagName: "a",
    properties: i,
    children: t.all(e)
  };
  return t.patch(e, r), t.applyData(e, r);
}
function Joe(t, e) {
  const n = { href: Wl(e.url) };
  e.title !== null && e.title !== void 0 && (n.title = e.title);
  const i = {
    type: "element",
    tagName: "a",
    properties: n,
    children: t.all(e)
  };
  return t.patch(e, i), t.applyData(e, i);
}
function Xoe(t, e, n) {
  const i = t.all(e), r = n ? Qoe(n) : WS(e), o = {}, s = [];
  if (typeof e.checked == "boolean") {
    const f = i[0];
    let d;
    f && f.type === "element" && f.tagName === "p" ? d = f : (d = { type: "element", tagName: "p", properties: {}, children: [] }, i.unshift(d)), d.children.length > 0 && d.children.unshift({ type: "text", value: " " }), d.children.unshift({
      type: "element",
      tagName: "input",
      properties: { type: "checkbox", checked: e.checked, disabled: !0 },
      children: []
    }), o.className = ["task-list-item"];
  }
  let a = -1;
  for (; ++a < i.length; ) {
    const f = i[a];
    (r || a !== 0 || f.type !== "element" || f.tagName !== "p") && s.push({ type: "text", value: `
` }), f.type === "element" && f.tagName === "p" && !r ? s.push(...f.children) : s.push(f);
  }
  const l = i[i.length - 1];
  l && (r || l.type !== "element" || l.tagName !== "p") && s.push({ type: "text", value: `
` });
  const c = { type: "element", tagName: "li", properties: o, children: s };
  return t.patch(e, c), t.applyData(e, c);
}
function Qoe(t) {
  let e = !1;
  if (t.type === "list") {
    e = t.spread || !1;
    const n = t.children;
    let i = -1;
    for (; !e && ++i < n.length; )
      e = WS(n[i]);
  }
  return e;
}
function WS(t) {
  const e = t.spread;
  return e ?? t.children.length > 1;
}
function Zoe(t, e) {
  const n = {}, i = t.all(e);
  let r = -1;
  for (typeof e.start == "number" && e.start !== 1 && (n.start = e.start); ++r < i.length; ) {
    const s = i[r];
    if (s.type === "element" && s.tagName === "li" && s.properties && Array.isArray(s.properties.className) && s.properties.className.includes("task-list-item")) {
      n.className = ["contains-task-list"];
      break;
    }
  }
  const o = {
    type: "element",
    tagName: e.ordered ? "ol" : "ul",
    properties: n,
    children: t.wrap(i, !0)
  };
  return t.patch(e, o), t.applyData(e, o);
}
function ese(t, e) {
  const n = {
    type: "element",
    tagName: "p",
    properties: {},
    children: t.all(e)
  };
  return t.patch(e, n), t.applyData(e, n);
}
function tse(t, e) {
  const n = { type: "root", children: t.wrap(t.all(e)) };
  return t.patch(e, n), t.applyData(e, n);
}
function nse(t, e) {
  const n = {
    type: "element",
    tagName: "strong",
    properties: {},
    children: t.all(e)
  };
  return t.patch(e, n), t.applyData(e, n);
}
const Yb = qS("start"), Jb = qS("end");
function ise(t) {
  return { start: Yb(t), end: Jb(t) };
}
function qS(t) {
  return e;
  function e(n) {
    const i = n && n.position && n.position[t] || {};
    return {
      // @ts-expect-error: in practice, null is allowed.
      line: i.line || null,
      // @ts-expect-error: in practice, null is allowed.
      column: i.column || null,
      // @ts-expect-error: in practice, null is allowed.
      offset: i.offset > -1 ? i.offset : null
    };
  }
}
function rse(t, e) {
  const n = t.all(e), i = n.shift(), r = [];
  if (i) {
    const s = {
      type: "element",
      tagName: "thead",
      properties: {},
      children: t.wrap([i], !0)
    };
    t.patch(e.children[0], s), r.push(s);
  }
  if (n.length > 0) {
    const s = {
      type: "element",
      tagName: "tbody",
      properties: {},
      children: t.wrap(n, !0)
    }, a = Yb(e.children[1]), l = Jb(e.children[e.children.length - 1]);
    a.line && l.line && (s.position = { start: a, end: l }), r.push(s);
  }
  const o = {
    type: "element",
    tagName: "table",
    properties: {},
    children: t.wrap(r, !0)
  };
  return t.patch(e, o), t.applyData(e, o);
}
function ose(t, e, n) {
  const i = n ? n.children : void 0, o = (i ? i.indexOf(e) : 1) === 0 ? "th" : "td", s = n && n.type === "table" ? n.align : void 0, a = s ? s.length : e.children.length;
  let l = -1;
  const c = [];
  for (; ++l < a; ) {
    const d = e.children[l], u = {}, h = s ? s[l] : void 0;
    h && (u.align = h);
    let p = { type: "element", tagName: o, properties: u, children: [] };
    d && (p.children = t.all(d), t.patch(d, p), p = t.applyData(e, p)), c.push(p);
  }
  const f = {
    type: "element",
    tagName: "tr",
    properties: {},
    children: t.wrap(c, !0)
  };
  return t.patch(e, f), t.applyData(e, f);
}
function sse(t, e) {
  const n = {
    type: "element",
    tagName: "td",
    // Assume body cell.
    properties: {},
    children: t.all(e)
  };
  return t.patch(e, n), t.applyData(e, n);
}
const t3 = 9, n3 = 32;
function ase(t) {
  const e = String(t), n = /\r?\n|\r/g;
  let i = n.exec(e), r = 0;
  const o = [];
  for (; i; )
    o.push(
      i3(e.slice(r, i.index), r > 0, !0),
      i[0]
    ), r = i.index + i[0].length, i = n.exec(e);
  return o.push(i3(e.slice(r), r > 0, !1)), o.join("");
}
function i3(t, e, n) {
  let i = 0, r = t.length;
  if (e) {
    let o = t.codePointAt(i);
    for (; o === t3 || o === n3; )
      i++, o = t.codePointAt(i);
  }
  if (n) {
    let o = t.codePointAt(r - 1);
    for (; o === t3 || o === n3; )
      r--, o = t.codePointAt(r - 1);
  }
  return r > i ? t.slice(i, r) : "";
}
function lse(t, e) {
  const n = { type: "text", value: ase(String(e.value)) };
  return t.patch(e, n), t.applyData(e, n);
}
function cse(t, e) {
  const n = {
    type: "element",
    tagName: "hr",
    properties: {},
    children: []
  };
  return t.patch(e, n), t.applyData(e, n);
}
const GS = {
  blockquote: Boe,
  break: Hoe,
  code: $oe,
  delete: joe,
  emphasis: zoe,
  footnoteReference: US,
  footnote: Uoe,
  heading: Voe,
  html: Woe,
  imageReference: qoe,
  image: Goe,
  inlineCode: Koe,
  linkReference: Yoe,
  link: Joe,
  listItem: Xoe,
  list: Zoe,
  paragraph: ese,
  root: tse,
  strong: nse,
  table: rse,
  tableCell: sse,
  tableRow: ose,
  text: lse,
  thematicBreak: cse,
  toml: Yd,
  yaml: Yd,
  definition: Yd,
  footnoteDefinition: Yd
};
function Yd() {
  return null;
}
function fse(t) {
  return !t || !t.position || !t.position.start || !t.position.start.line || !t.position.start.column || !t.position.end || !t.position.end.line || !t.position.end.column;
}
const r3 = {}.hasOwnProperty;
function dse(t) {
  const e = /* @__PURE__ */ Object.create(null);
  if (!t || !t.type)
    throw new Error("mdast-util-definitions expected node");
  return ma(t, "definition", (i) => {
    const r = o3(i.identifier);
    r && !r3.call(e, r) && (e[r] = i);
  }), n;
  function n(i) {
    const r = o3(i);
    return r && r3.call(e, r) ? e[r] : null;
  }
}
function o3(t) {
  return String(t || "").toUpperCase();
}
const Q1 = {}.hasOwnProperty;
function use(t, e) {
  const n = e || {}, i = n.allowDangerousHtml || !1, r = {};
  return s.dangerous = i, s.clobberPrefix = n.clobberPrefix === void 0 || n.clobberPrefix === null ? "user-content-" : n.clobberPrefix, s.footnoteLabel = n.footnoteLabel || "Footnotes", s.footnoteLabelTagName = n.footnoteLabelTagName || "h2", s.footnoteLabelProperties = n.footnoteLabelProperties || {
    className: ["sr-only"]
  }, s.footnoteBackLabel = n.footnoteBackLabel || "Back to content", s.unknownHandler = n.unknownHandler, s.passThrough = n.passThrough, s.handlers = { ...GS, ...n.handlers }, s.definition = dse(t), s.footnoteById = r, s.footnoteOrder = [], s.footnoteCounts = {}, s.patch = hse, s.applyData = pse, s.one = a, s.all = l, s.wrap = gse, s.augment = o, ma(t, "footnoteDefinition", (c) => {
    const f = String(c.identifier).toUpperCase();
    Q1.call(r, f) || (r[f] = c);
  }), s;
  function o(c, f) {
    if (c && "data" in c && c.data) {
      const d = c.data;
      d.hName && (f.type !== "element" && (f = {
        type: "element",
        tagName: "",
        properties: {},
        children: []
      }), f.tagName = d.hName), f.type === "element" && d.hProperties && (f.properties = { ...f.properties, ...d.hProperties }), "children" in f && f.children && d.hChildren && (f.children = d.hChildren);
    }
    if (c) {
      const d = "type" in c ? c : { position: c };
      fse(d) || (f.position = { start: Yb(d), end: Jb(d) });
    }
    return f;
  }
  function s(c, f, d, u) {
    return Array.isArray(d) && (u = d, d = {}), o(c, {
      type: "element",
      tagName: f,
      properties: d || {},
      children: u || []
    });
  }
  function a(c, f) {
    return Xb(s, c, f);
  }
  function l(c) {
    return Ep(s, c);
  }
}
function hse(t, e) {
  t.position && (e.position = ise(t));
}
function pse(t, e) {
  let n = e;
  if (t && t.data) {
    const i = t.data.hName, r = t.data.hChildren, o = t.data.hProperties;
    typeof i == "string" && (n.type === "element" ? n.tagName = i : n = {
      type: "element",
      tagName: i,
      properties: {},
      children: []
    }), n.type === "element" && o && (n.properties = { ...n.properties, ...o }), "children" in n && n.children && r !== null && r !== void 0 && (n.children = r);
  }
  return n;
}
function Xb(t, e, n) {
  const i = e && e.type;
  if (!i)
    throw new Error("Expected node, got `" + e + "`");
  return Q1.call(t.handlers, i) ? t.handlers[i](t, e, n) : t.passThrough && t.passThrough.includes(i) ? "children" in e ? { ...e, children: Ep(t, e) } : e : t.unknownHandler ? t.unknownHandler(t, e, n) : mse(t, e);
}
function Ep(t, e) {
  const n = [];
  if ("children" in e) {
    const i = e.children;
    let r = -1;
    for (; ++r < i.length; ) {
      const o = Xb(t, i[r], e);
      if (o) {
        if (r && i[r - 1].type === "break" && (!Array.isArray(o) && o.type === "text" && (o.value = o.value.replace(/^\s+/, "")), !Array.isArray(o) && o.type === "element")) {
          const s = o.children[0];
          s && s.type === "text" && (s.value = s.value.replace(/^\s+/, ""));
        }
        Array.isArray(o) ? n.push(...o) : n.push(o);
      }
    }
  }
  return n;
}
function mse(t, e) {
  const n = e.data || {}, i = "value" in e && !(Q1.call(n, "hProperties") || Q1.call(n, "hChildren")) ? { type: "text", value: e.value } : {
    type: "element",
    tagName: "div",
    properties: {},
    children: Ep(t, e)
  };
  return t.patch(e, i), t.applyData(e, i);
}
function gse(t, e) {
  const n = [];
  let i = -1;
  for (e && n.push({ type: "text", value: `
` }); ++i < t.length; )
    i && n.push({ type: "text", value: `
` }), n.push(t[i]);
  return e && t.length > 0 && n.push({ type: "text", value: `
` }), n;
}
function yse(t) {
  const e = [];
  let n = -1;
  for (; ++n < t.footnoteOrder.length; ) {
    const i = t.footnoteById[t.footnoteOrder[n]];
    if (!i)
      continue;
    const r = t.all(i), o = String(i.identifier).toUpperCase(), s = Wl(o.toLowerCase());
    let a = 0;
    const l = [];
    for (; ++a <= t.footnoteCounts[o]; ) {
      const d = {
        type: "element",
        tagName: "a",
        properties: {
          href: "#" + t.clobberPrefix + "fnref-" + s + (a > 1 ? "-" + a : ""),
          dataFootnoteBackref: !0,
          className: ["data-footnote-backref"],
          ariaLabel: t.footnoteBackLabel
        },
        children: [{ type: "text", value: "↩" }]
      };
      a > 1 && d.children.push({
        type: "element",
        tagName: "sup",
        children: [{ type: "text", value: String(a) }]
      }), l.length > 0 && l.push({ type: "text", value: " " }), l.push(d);
    }
    const c = r[r.length - 1];
    if (c && c.type === "element" && c.tagName === "p") {
      const d = c.children[c.children.length - 1];
      d && d.type === "text" ? d.value += " " : c.children.push({ type: "text", value: " " }), c.children.push(...l);
    } else
      r.push(...l);
    const f = {
      type: "element",
      tagName: "li",
      properties: { id: t.clobberPrefix + "fn-" + s },
      children: t.wrap(r, !0)
    };
    t.patch(i, f), e.push(f);
  }
  if (e.length !== 0)
    return {
      type: "element",
      tagName: "section",
      properties: { dataFootnotes: !0, className: ["footnotes"] },
      children: [
        {
          type: "element",
          tagName: t.footnoteLabelTagName,
          properties: {
            // To do: use structured clone.
            ...JSON.parse(JSON.stringify(t.footnoteLabelProperties)),
            id: "footnote-label"
          },
          children: [{ type: "text", value: t.footnoteLabel }]
        },
        { type: "text", value: `
` },
        {
          type: "element",
          tagName: "ol",
          properties: {},
          children: t.wrap(e, !0)
        },
        { type: "text", value: `
` }
      ]
    };
}
function KS(t, e) {
  const n = use(t, e), i = n.one(t, null), r = yse(n);
  return r && i.children.push({ type: "text", value: `
` }, r), Array.isArray(i) ? { type: "root", children: i } : i;
}
const vse = (
  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */
  function(t, e) {
    return t && "run" in t ? bse(t, e) : kse(t || e);
  }
);
function bse(t, e) {
  return (n, i, r) => {
    t.run(KS(n, e), i, (o) => {
      r(o);
    });
  };
}
function kse(t) {
  return (e) => KS(e, t);
}
const wse = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  all: Ep,
  default: vse,
  defaultHandlers: GS,
  one: Xb
}, Symbol.toStringTag, { value: "Module" })), YS = (
  // Note: overloads in JSDoc can’t yet use different `@template`s.
  /**
   * @type {(
   *   (<Condition extends TestFunction>(test: Condition) => (element: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & Predicate<Condition, Element>) &
   *   (<Condition extends string>(test: Condition) => (element: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & {tagName: Condition}) &
   *   ((test?: null | undefined) => (element?: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element) &
   *   ((test?: Test) => Check)
   * )}
   */
  /**
   * @param {Test | null | undefined} [test]
   * @returns {Check}
   */
  function(t) {
    if (t == null)
      return Tse;
    if (typeof t == "string")
      return Ese(t);
    if (typeof t == "object")
      return _se(t);
    if (typeof t == "function")
      return Qb(t);
    throw new Error("Expected function, string, or array as `test`");
  }
);
function _se(t) {
  const e = [];
  let n = -1;
  for (; ++n < t.length; )
    e[n] = YS(t[n]);
  return Qb(i);
  function i(...r) {
    let o = -1;
    for (; ++o < e.length; )
      if (e[o].apply(this, r)) return !0;
    return !1;
  }
}
function Ese(t) {
  return Qb(e);
  function e(n) {
    return n.tagName === t;
  }
}
function Qb(t) {
  return e;
  function e(n, i, r) {
    return !!(Cse(n) && t.call(
      this,
      n,
      typeof i == "number" ? i : void 0,
      r || void 0
    ));
  }
}
function Tse(t) {
  return !!(t && typeof t == "object" && "type" in t && t.type === "element" && "tagName" in t && typeof t.tagName == "string");
}
function Cse(t) {
  return t !== null && typeof t == "object" && "type" in t && "tagName" in t;
}
const Zb = YS(
  /**
   * @param element
   * @returns {element is {tagName: 'audio' | 'canvas' | 'embed' | 'iframe' | 'img' | 'math' | 'object' | 'picture' | 'svg' | 'video'}}
   */
  function(t) {
    return t.tagName === "audio" || t.tagName === "canvas" || t.tagName === "embed" || t.tagName === "iframe" || t.tagName === "img" || t.tagName === "math" || t.tagName === "object" || t.tagName === "picture" || t.tagName === "svg" || t.tagName === "video";
  }
), ek = (
  // Note: overloads in JSDoc can’t yet use different `@template`s.
  /**
   * @type {(
   *   (<Condition extends TestFunction>(element: unknown, test: Condition, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & Predicate<Condition, Element>) &
   *   (<Condition extends string>(element: unknown, test: Condition, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & {tagName: Condition}) &
   *   ((element?: null | undefined) => false) &
   *   ((element: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element) &
   *   ((element: unknown, test?: Test, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => boolean)
   * )}
   */
  /**
   * @param {unknown} [element]
   * @param {Test | undefined} [test]
   * @param {number | null | undefined} [index]
   * @param {Parents | null | undefined} [parent]
   * @param {unknown} [context]
   * @returns {boolean}
   */
  // eslint-disable-next-line max-params
  function(t, e, n, i, r) {
    const o = JS(e);
    return XS(t) ? o.call(r, t, n, i) : !1;
  }
), JS = (
  // Note: overloads in JSDoc can’t yet use different `@template`s.
  /**
   * @type {(
   *   (<Condition extends TestFunction>(test: Condition) => (element: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & Predicate<Condition, Element>) &
   *   (<Condition extends string>(test: Condition) => (element: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & {tagName: Condition}) &
   *   ((test?: null | undefined) => (element?: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element) &
   *   ((test?: Test) => Check)
   * )}
   */
  /**
   * @param {Test | null | undefined} [test]
   * @returns {Check}
   */
  function(t) {
    if (t == null)
      return Ase;
    if (typeof t == "string")
      return xse(t);
    if (typeof t == "object")
      return Sse(t);
    if (typeof t == "function")
      return tk(t);
    throw new Error("Expected function, string, or array as `test`");
  }
);
function Sse(t) {
  const e = [];
  let n = -1;
  for (; ++n < t.length; )
    e[n] = JS(t[n]);
  return tk(i);
  function i(...r) {
    let o = -1;
    for (; ++o < e.length; )
      if (e[o].apply(this, r)) return !0;
    return !1;
  }
}
function xse(t) {
  return tk(e);
  function e(n) {
    return n.tagName === t;
  }
}
function tk(t) {
  return e;
  function e(n, i, r) {
    return !!(XS(n) && t.call(
      this,
      n,
      typeof i == "number" ? i : void 0,
      r || void 0
    ));
  }
}
function Ase(t) {
  return !!(t && typeof t == "object" && "type" in t && t.type === "element" && "tagName" in t && typeof t.tagName == "string");
}
function XS(t) {
  return t !== null && typeof t == "object" && "type" in t && "tagName" in t;
}
const Mse = /[ \t\n\f\r]/g;
function wu(t) {
  return typeof t == "object" ? t.type === "text" ? s3(t.value) : !1 : s3(t);
}
function s3(t) {
  return t.replace(Mse, "") === "";
}
const QS = (
  // Note: overloads in JSDoc can’t yet use different `@template`s.
  /**
   * @type {(
   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &
   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &
   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &
   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &
   *   ((test?: Test) => Check)
   * )}
   */
  /**
   * @param {Test} [test]
   * @returns {Check}
   */
  function(t) {
    if (t == null)
      return Ise;
    if (typeof t == "function")
      return Tp(t);
    if (typeof t == "object")
      return Array.isArray(t) ? Nse(t) : Ose(t);
    if (typeof t == "string")
      return Rse(t);
    throw new Error("Expected function, string, or object as test");
  }
);
function Nse(t) {
  const e = [];
  let n = -1;
  for (; ++n < t.length; )
    e[n] = QS(t[n]);
  return Tp(i);
  function i(...r) {
    let o = -1;
    for (; ++o < e.length; )
      if (e[o].apply(this, r)) return !0;
    return !1;
  }
}
function Ose(t) {
  const e = (
    /** @type {Record<string, unknown>} */
    t
  );
  return Tp(n);
  function n(i) {
    const r = (
      /** @type {Record<string, unknown>} */
      /** @type {unknown} */
      i
    );
    let o;
    for (o in t)
      if (r[o] !== e[o]) return !1;
    return !0;
  }
}
function Rse(t) {
  return Tp(e);
  function e(n) {
    return n && n.type === t;
  }
}
function Tp(t) {
  return e;
  function e(n, i, r) {
    return !!(Lse(n) && t.call(
      this,
      n,
      typeof i == "number" ? i : void 0,
      r || void 0
    ));
  }
}
function Ise() {
  return !0;
}
function Lse(t) {
  return t !== null && typeof t == "object" && "type" in t;
}
const Dse = [
  "address",
  // Flow content.
  "article",
  // Sections and headings.
  "aside",
  // Sections and headings.
  "blockquote",
  // Flow content.
  "body",
  // Page.
  "br",
  // Contribute whitespace intrinsically.
  "caption",
  // Similar to block.
  "center",
  // Flow content, legacy.
  "col",
  // Similar to block.
  "colgroup",
  // Similar to block.
  "dd",
  // Lists.
  "dialog",
  // Flow content.
  "dir",
  // Lists, legacy.
  "div",
  // Flow content.
  "dl",
  // Lists.
  "dt",
  // Lists.
  "figcaption",
  // Flow content.
  "figure",
  // Flow content.
  "footer",
  // Flow content.
  "form",
  // Flow content.
  "h1",
  // Sections and headings.
  "h2",
  // Sections and headings.
  "h3",
  // Sections and headings.
  "h4",
  // Sections and headings.
  "h5",
  // Sections and headings.
  "h6",
  // Sections and headings.
  "head",
  // Page.
  "header",
  // Flow content.
  "hgroup",
  // Sections and headings.
  "hr",
  // Flow content.
  "html",
  // Page.
  "legend",
  // Flow content.
  "li",
  // Block-like.
  "li",
  // Similar to block.
  "listing",
  // Flow content, legacy
  "main",
  // Flow content.
  "menu",
  // Lists.
  "nav",
  // Sections and headings.
  "ol",
  // Lists.
  "optgroup",
  // Similar to block.
  "option",
  // Similar to block.
  "p",
  // Flow content.
  "plaintext",
  // Flow content, legacy
  "pre",
  // Flow content.
  "section",
  // Sections and headings.
  "summary",
  // Similar to block.
  "table",
  // Similar to block.
  "tbody",
  // Similar to block.
  "td",
  // Block-like.
  "td",
  // Similar to block.
  "tfoot",
  // Similar to block.
  "th",
  // Block-like.
  "th",
  // Similar to block.
  "thead",
  // Similar to block.
  "tr",
  // Similar to block.
  "ul",
  // Lists.
  "wbr",
  // Contribute whitespace intrinsically.
  "xmp"
  // Flow content, legacy
], Pse = [
  // Form.
  "button",
  "input",
  "select",
  "textarea"
], Fse = [
  "area",
  "base",
  "basefont",
  "dialog",
  "datalist",
  "head",
  "link",
  "meta",
  "noembed",
  "noframes",
  "param",
  "rp",
  "script",
  "source",
  "style",
  "template",
  "track",
  "title"
], Bse = {}, nk = QS(["comment", "doctype"]);
function Hse(t, e) {
  ZS(t, {
    collapse: qse(
      (e || Bse).newlines ? Vse : Wse
    ),
    whitespace: "normal"
  });
}
function ZS(t, e) {
  if ("children" in t) {
    const n = { ...e };
    return (t.type === "root" || nx(t)) && (n.before = !0, n.after = !0), n.whitespace = Gse(t, e), jse(t, n);
  }
  if (t.type === "text") {
    if (e.whitespace === "normal")
      return $se(t, e);
    e.whitespace === "nowrap" && (t.value = e.collapse(t.value));
  }
  return { ignore: nk(t), stripAtStart: !1, remove: !1 };
}
function $se(t, e) {
  const n = e.collapse(t.value), i = { ignore: !1, stripAtStart: !1, remove: !1 };
  let r = 0, o = n.length;
  return e.before && a3(n.charAt(0)) && r++, r !== o && a3(n.charAt(o - 1)) && (e.after ? o-- : i.stripAtStart = !0), r === o ? i.remove = !0 : t.value = n.slice(r, o), i;
}
function jse(t, e) {
  let n = e.before;
  const i = e.after, r = t.children;
  let o = r.length, s = -1;
  for (; ++s < o; ) {
    const a = ZS(r[s], {
      ...e,
      after: ex(r, s, i),
      before: n
    });
    a.remove ? (r.splice(s, 1), s--, o--) : a.ignore || (n = a.stripAtStart), tx(r[s]) && (n = !1);
  }
  return { ignore: !1, stripAtStart: !!(n || i), remove: !1 };
}
function ex(t, e, n) {
  for (; ++e < t.length; ) {
    const i = t[e];
    let r = zse(i);
    if (r === void 0 && "children" in i && !Use(i) && (r = ex(i.children, -1)), typeof r == "boolean")
      return r;
  }
  return n;
}
function zse(t) {
  if (t.type === "element") {
    if (tx(t))
      return !1;
    if (nx(t))
      return !0;
  } else if (t.type === "text") {
    if (!wu(t))
      return !1;
  } else if (!nk(t))
    return !1;
}
function tx(t) {
  return Zb(t) || ek(t, Pse);
}
function nx(t) {
  return ek(t, Dse);
}
function Use(t) {
  return !!(t.type === "element" && t.properties.hidden) || nk(t) || ek(t, Fse);
}
function a3(t) {
  return t === " " || t === `
`;
}
function Vse(t) {
  const e = /\r?\n|\r/.exec(t);
  return e ? e[0] : " ";
}
function Wse() {
  return " ";
}
function qse(t) {
  return e;
  function e(n) {
    return String(n).replace(/[\t\n\v\f\r ]+/g, t);
  }
}
function Gse(t, e) {
  if ("tagName" in t && t.properties)
    switch (t.tagName) {
      case "listing":
      case "plaintext":
      case "script":
      case "style":
      case "xmp":
        return "pre";
      case "nobr":
        return "nowrap";
      case "pre":
        return t.properties.wrap ? "pre-wrap" : "pre";
      case "td":
      case "th":
        return t.properties.noWrap ? "nowrap" : e.whitespace;
      case "textarea":
        return "pre-wrap";
    }
  return e.whitespace;
}
const Kse = {}.hasOwnProperty;
function Yse(t, e) {
  const n = t.type === "element" && Kse.call(t.properties, e) && t.properties[e];
  return n != null && n !== !1;
}
const Jse = /* @__PURE__ */ new Set(["pingback", "prefetch", "stylesheet"]);
function Xse(t) {
  if (t.type !== "element" || t.tagName !== "link")
    return !1;
  if (t.properties.itemProp)
    return !0;
  const e = t.properties.rel;
  let n = -1;
  if (!Array.isArray(e) || e.length === 0)
    return !1;
  for (; ++n < e.length; )
    if (!Jse.has(String(e[n])))
      return !1;
  return !0;
}
const ik = (
  // Note: overloads in JSDoc can’t yet use different `@template`s.
  /**
   * @type {(
   *   (<Condition extends TestFunction>(test: Condition) => (element: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & Predicate<Condition, Element>) &
   *   (<Condition extends string>(test: Condition) => (element: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & {tagName: Condition}) &
   *   ((test?: null | undefined) => (element?: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element) &
   *   ((test?: Test) => Check)
   * )}
   */
  /**
   * @param {Test | null | undefined} [test]
   * @returns {Check}
   */
  function(t) {
    if (t == null)
      return eae;
    if (typeof t == "string")
      return Zse(t);
    if (typeof t == "object")
      return Qse(t);
    if (typeof t == "function")
      return rk(t);
    throw new Error("Expected function, string, or array as `test`");
  }
);
function Qse(t) {
  const e = [];
  let n = -1;
  for (; ++n < t.length; )
    e[n] = ik(t[n]);
  return rk(i);
  function i(...r) {
    let o = -1;
    for (; ++o < e.length; )
      if (e[o].apply(this, r)) return !0;
    return !1;
  }
}
function Zse(t) {
  return rk(e);
  function e(n) {
    return n.tagName === t;
  }
}
function rk(t) {
  return e;
  function e(n, i, r) {
    return !!(tae(n) && t.call(
      this,
      n,
      typeof i == "number" ? i : void 0,
      r || void 0
    ));
  }
}
function eae(t) {
  return !!(t && typeof t == "object" && "type" in t && t.type === "element" && "tagName" in t && typeof t.tagName == "string");
}
function tae(t) {
  return t !== null && typeof t == "object" && "type" in t && "tagName" in t;
}
const nae = ik([
  "a",
  "abbr",
  // `area` is in fact only phrasing if it is inside a `map` element.
  // However, since `area`s are required to be inside a `map` element, and it’s
  // a rather involved check, it’s ignored here for now.
  "area",
  "b",
  "bdi",
  "bdo",
  "br",
  "button",
  "cite",
  "code",
  "data",
  "datalist",
  "del",
  "dfn",
  "em",
  "i",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "map",
  "mark",
  "meter",
  "noscript",
  "output",
  "progress",
  "q",
  "ruby",
  "s",
  "samp",
  "script",
  "select",
  "small",
  "span",
  "strong",
  "sub",
  "sup",
  "template",
  "textarea",
  "time",
  "u",
  "var",
  "wbr"
]), iae = ik("meta");
function rae(t) {
  return !!(t.type === "text" || nae(t) || Zb(t) || Xse(t) || iae(t) && Yse(t, "itemProp"));
}
const oae = [
  "pre",
  "script",
  "style",
  "textarea"
], ix = (
  // Note: overloads in JSDoc can’t yet use different `@template`s.
  /**
   * @type {(
   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &
   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &
   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &
   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &
   *   ((test?: Test) => Check)
   * )}
   */
  /**
   * @param {Test} [test]
   * @returns {Check}
   */
  function(t) {
    if (t == null)
      return cae;
    if (typeof t == "function")
      return Cp(t);
    if (typeof t == "object")
      return Array.isArray(t) ? sae(t) : aae(t);
    if (typeof t == "string")
      return lae(t);
    throw new Error("Expected function, string, or object as test");
  }
);
function sae(t) {
  const e = [];
  let n = -1;
  for (; ++n < t.length; )
    e[n] = ix(t[n]);
  return Cp(i);
  function i(...r) {
    let o = -1;
    for (; ++o < e.length; )
      if (e[o].apply(this, r)) return !0;
    return !1;
  }
}
function aae(t) {
  const e = (
    /** @type {Record<string, unknown>} */
    t
  );
  return Cp(n);
  function n(i) {
    const r = (
      /** @type {Record<string, unknown>} */
      /** @type {unknown} */
      i
    );
    let o;
    for (o in t)
      if (r[o] !== e[o]) return !1;
    return !0;
  }
}
function lae(t) {
  return Cp(e);
  function e(n) {
    return n && n.type === t;
  }
}
function Cp(t) {
  return e;
  function e(n, i, r) {
    return !!(fae(n) && t.call(
      this,
      n,
      typeof i == "number" ? i : void 0,
      r || void 0
    ));
  }
}
function cae() {
  return !0;
}
function fae(t) {
  return t !== null && typeof t == "object" && "type" in t;
}
const rx = [], dae = !0, l3 = !1, ox = "skip";
function uae(t, e, n, i) {
  let r;
  typeof e == "function" && typeof n != "function" ? (i = n, n = e) : r = e;
  const o = ix(r), s = i ? -1 : 1;
  a(t, void 0, [])();
  function a(l, c, f) {
    const d = (
      /** @type {Record<string, unknown>} */
      l && typeof l == "object" ? l : {}
    );
    if (typeof d.type == "string") {
      const h = (
        // `hast`
        typeof d.tagName == "string" ? d.tagName : (
          // `xast`
          typeof d.name == "string" ? d.name : void 0
        )
      );
      Object.defineProperty(u, "name", {
        value: "node (" + (l.type + (h ? "<" + h + ">" : "")) + ")"
      });
    }
    return u;
    function u() {
      let h = rx, p, m, v;
      if ((!e || o(l, c, f[f.length - 1] || void 0)) && (h = hae(n(l, f)), h[0] === l3))
        return h;
      if ("children" in l && l.children) {
        const y = (
          /** @type {UnistParent} */
          l
        );
        if (y.children && h[0] !== ox)
          for (m = (i ? y.children.length : -1) + s, v = f.concat(y); m > -1 && m < y.children.length; ) {
            const C = y.children[m];
            if (p = a(C, m, v)(), p[0] === l3)
              return p;
            m = typeof p[1] == "number" ? p[1] : m + s;
          }
      }
      return h;
    }
  }
}
function hae(t) {
  return Array.isArray(t) ? t : typeof t == "number" ? [dae, t] : t == null ? rx : [t];
}
const pae = {};
function mae(t, e) {
  const n = e || pae, i = {
    blanks: n.blanks || [],
    head: !1,
    indentInitial: n.indentInitial !== !1,
    indent: typeof n.indent == "number" ? " ".repeat(n.indent) : typeof n.indent == "string" ? n.indent : "  "
  };
  Hse(t, { newlines: !0 }), uae(t, r);
  function r(s, a) {
    if (!("children" in s))
      return;
    if (s.type === "element" && s.tagName === "head" && (i.head = !0), i.head && s.type === "element" && s.tagName === "body" && (i.head = !1), s.type === "element" && oae.includes(s.tagName))
      return ox;
    if (s.children.length === 0 || !m0(i, s))
      return;
    let l = a.length;
    i.indentInitial || l--;
    let c = !1;
    for (const u of s.children)
      (u.type === "comment" || u.type === "text") && (u.value.includes(`
`) && (c = !0), u.value = u.value.replace(
        / *\n/g,
        "$&" + i.indent.repeat(l)
      ));
    const f = [];
    let d;
    for (const u of s.children)
      (m0(i, u) || c && !d) && (o(f, l, u), c = !0), d = u, f.push(u);
    d && (c || m0(i, d)) && (wu(d) && (f.pop(), d = f[f.length - 1]), o(f, l - 1)), s.children = f;
  }
  function o(s, a, l) {
    const c = s[s.length - 1], f = c && wu(c) ? s[s.length - 2] : c, d = (c3(i, f) && c3(i, l) ? `

` : `
`) + i.indent.repeat(Math.max(a, 0));
    c && c.type === "text" ? c.value = wu(c) ? d : c.value + d : s.push({ type: "text", value: d });
  }
}
function c3(t, e) {
  return !!(e && e.type === "element" && t.blanks.length > 0 && t.blanks.includes(e.tagName));
}
function m0(t, e) {
  return e.type === "root" || (e.type === "element" ? t.head || e.tagName === "script" || Zb(e) || !rae(e) : !1);
}
function gae(t) {
  return function(e) {
    mae(e, t);
  };
}
const yae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: gae
}, Symbol.toStringTag, { value: "Module" })), sx = [
  {
    id: "people",
    emojis: [
      "grinning",
      "smiley",
      "smile",
      "grin",
      "laughing",
      "sweat_smile",
      "rolling_on_the_floor_laughing",
      "joy",
      "slightly_smiling_face",
      "upside_down_face",
      "melting_face",
      "wink",
      "blush",
      "innocent",
      "smiling_face_with_3_hearts",
      "heart_eyes",
      "star-struck",
      "kissing_heart",
      "kissing",
      "relaxed",
      "kissing_closed_eyes",
      "kissing_smiling_eyes",
      "smiling_face_with_tear",
      "yum",
      "stuck_out_tongue",
      "stuck_out_tongue_winking_eye",
      "zany_face",
      "stuck_out_tongue_closed_eyes",
      "money_mouth_face",
      "hugging_face",
      "face_with_hand_over_mouth",
      "face_with_open_eyes_and_hand_over_mouth",
      "face_with_peeking_eye",
      "shushing_face",
      "thinking_face",
      "saluting_face",
      "zipper_mouth_face",
      "face_with_raised_eyebrow",
      "neutral_face",
      "expressionless",
      "no_mouth",
      "dotted_line_face",
      "face_in_clouds",
      "smirk",
      "unamused",
      "face_with_rolling_eyes",
      "grimacing",
      "face_exhaling",
      "lying_face",
      "shaking_face",
      "relieved",
      "pensive",
      "sleepy",
      "drooling_face",
      "sleeping",
      "mask",
      "face_with_thermometer",
      "face_with_head_bandage",
      "nauseated_face",
      "face_vomiting",
      "sneezing_face",
      "hot_face",
      "cold_face",
      "woozy_face",
      "dizzy_face",
      "face_with_spiral_eyes",
      "exploding_head",
      "face_with_cowboy_hat",
      "partying_face",
      "disguised_face",
      "sunglasses",
      "nerd_face",
      "face_with_monocle",
      "confused",
      "face_with_diagonal_mouth",
      "worried",
      "slightly_frowning_face",
      "white_frowning_face",
      "open_mouth",
      "hushed",
      "astonished",
      "flushed",
      "pleading_face",
      "face_holding_back_tears",
      "frowning",
      "anguished",
      "fearful",
      "cold_sweat",
      "disappointed_relieved",
      "cry",
      "sob",
      "scream",
      "confounded",
      "persevere",
      "disappointed",
      "sweat",
      "weary",
      "tired_face",
      "yawning_face",
      "triumph",
      "rage",
      "angry",
      "face_with_symbols_on_mouth",
      "smiling_imp",
      "imp",
      "skull",
      "skull_and_crossbones",
      "hankey",
      "clown_face",
      "japanese_ogre",
      "japanese_goblin",
      "ghost",
      "alien",
      "space_invader",
      "wave",
      "raised_back_of_hand",
      "raised_hand_with_fingers_splayed",
      "hand",
      "spock-hand",
      "rightwards_hand",
      "leftwards_hand",
      "palm_down_hand",
      "palm_up_hand",
      "leftwards_pushing_hand",
      "rightwards_pushing_hand",
      "ok_hand",
      "pinched_fingers",
      "pinching_hand",
      "v",
      "crossed_fingers",
      "hand_with_index_finger_and_thumb_crossed",
      "i_love_you_hand_sign",
      "the_horns",
      "call_me_hand",
      "point_left",
      "point_right",
      "point_up_2",
      "middle_finger",
      "point_down",
      "point_up",
      "index_pointing_at_the_viewer",
      "+1",
      "-1",
      "fist",
      "facepunch",
      "left-facing_fist",
      "right-facing_fist",
      "clap",
      "raised_hands",
      "heart_hands",
      "open_hands",
      "palms_up_together",
      "handshake",
      "pray",
      "writing_hand",
      "nail_care",
      "selfie",
      "muscle",
      "mechanical_arm",
      "mechanical_leg",
      "leg",
      "foot",
      "ear",
      "ear_with_hearing_aid",
      "nose",
      "brain",
      "anatomical_heart",
      "lungs",
      "tooth",
      "bone",
      "eyes",
      "eye",
      "tongue",
      "lips",
      "biting_lip",
      "baby",
      "child",
      "boy",
      "girl",
      "adult",
      "person_with_blond_hair",
      "man",
      "bearded_person",
      "man_with_beard",
      "woman_with_beard",
      "red_haired_man",
      "curly_haired_man",
      "white_haired_man",
      "bald_man",
      "woman",
      "red_haired_woman",
      "red_haired_person",
      "curly_haired_woman",
      "curly_haired_person",
      "white_haired_woman",
      "white_haired_person",
      "bald_woman",
      "bald_person",
      "blond-haired-woman",
      "blond-haired-man",
      "older_adult",
      "older_man",
      "older_woman",
      "person_frowning",
      "man-frowning",
      "woman-frowning",
      "person_with_pouting_face",
      "man-pouting",
      "woman-pouting",
      "no_good",
      "man-gesturing-no",
      "woman-gesturing-no",
      "ok_woman",
      "man-gesturing-ok",
      "woman-gesturing-ok",
      "information_desk_person",
      "man-tipping-hand",
      "woman-tipping-hand",
      "raising_hand",
      "man-raising-hand",
      "woman-raising-hand",
      "deaf_person",
      "deaf_man",
      "deaf_woman",
      "bow",
      "man-bowing",
      "woman-bowing",
      "face_palm",
      "man-facepalming",
      "woman-facepalming",
      "shrug",
      "man-shrugging",
      "woman-shrugging",
      "health_worker",
      "male-doctor",
      "female-doctor",
      "student",
      "male-student",
      "female-student",
      "teacher",
      "male-teacher",
      "female-teacher",
      "judge",
      "male-judge",
      "female-judge",
      "farmer",
      "male-farmer",
      "female-farmer",
      "cook",
      "male-cook",
      "female-cook",
      "mechanic",
      "male-mechanic",
      "female-mechanic",
      "factory_worker",
      "male-factory-worker",
      "female-factory-worker",
      "office_worker",
      "male-office-worker",
      "female-office-worker",
      "scientist",
      "male-scientist",
      "female-scientist",
      "technologist",
      "male-technologist",
      "female-technologist",
      "singer",
      "male-singer",
      "female-singer",
      "artist",
      "male-artist",
      "female-artist",
      "pilot",
      "male-pilot",
      "female-pilot",
      "astronaut",
      "male-astronaut",
      "female-astronaut",
      "firefighter",
      "male-firefighter",
      "female-firefighter",
      "cop",
      "male-police-officer",
      "female-police-officer",
      "sleuth_or_spy",
      "male-detective",
      "female-detective",
      "guardsman",
      "male-guard",
      "female-guard",
      "ninja",
      "construction_worker",
      "male-construction-worker",
      "female-construction-worker",
      "person_with_crown",
      "prince",
      "princess",
      "man_with_turban",
      "man-wearing-turban",
      "woman-wearing-turban",
      "man_with_gua_pi_mao",
      "person_with_headscarf",
      "person_in_tuxedo",
      "man_in_tuxedo",
      "woman_in_tuxedo",
      "bride_with_veil",
      "man_with_veil",
      "woman_with_veil",
      "pregnant_woman",
      "pregnant_man",
      "pregnant_person",
      "breast-feeding",
      "woman_feeding_baby",
      "man_feeding_baby",
      "person_feeding_baby",
      "angel",
      "santa",
      "mrs_claus",
      "mx_claus",
      "superhero",
      "male_superhero",
      "female_superhero",
      "supervillain",
      "male_supervillain",
      "female_supervillain",
      "mage",
      "male_mage",
      "female_mage",
      "fairy",
      "male_fairy",
      "female_fairy",
      "vampire",
      "male_vampire",
      "female_vampire",
      "merperson",
      "merman",
      "mermaid",
      "elf",
      "male_elf",
      "female_elf",
      "genie",
      "male_genie",
      "female_genie",
      "zombie",
      "male_zombie",
      "female_zombie",
      "troll",
      "massage",
      "man-getting-massage",
      "woman-getting-massage",
      "haircut",
      "man-getting-haircut",
      "woman-getting-haircut",
      "walking",
      "man-walking",
      "woman-walking",
      "standing_person",
      "man_standing",
      "woman_standing",
      "kneeling_person",
      "man_kneeling",
      "woman_kneeling",
      "person_with_probing_cane",
      "man_with_probing_cane",
      "woman_with_probing_cane",
      "person_in_motorized_wheelchair",
      "man_in_motorized_wheelchair",
      "woman_in_motorized_wheelchair",
      "person_in_manual_wheelchair",
      "man_in_manual_wheelchair",
      "woman_in_manual_wheelchair",
      "runner",
      "man-running",
      "woman-running",
      "dancer",
      "man_dancing",
      "man_in_business_suit_levitating",
      "dancers",
      "men-with-bunny-ears-partying",
      "women-with-bunny-ears-partying",
      "person_in_steamy_room",
      "man_in_steamy_room",
      "woman_in_steamy_room",
      "person_climbing",
      "man_climbing",
      "woman_climbing",
      "fencer",
      "horse_racing",
      "skier",
      "snowboarder",
      "golfer",
      "man-golfing",
      "woman-golfing",
      "surfer",
      "man-surfing",
      "woman-surfing",
      "rowboat",
      "man-rowing-boat",
      "woman-rowing-boat",
      "swimmer",
      "man-swimming",
      "woman-swimming",
      "person_with_ball",
      "man-bouncing-ball",
      "woman-bouncing-ball",
      "weight_lifter",
      "man-lifting-weights",
      "woman-lifting-weights",
      "bicyclist",
      "man-biking",
      "woman-biking",
      "mountain_bicyclist",
      "man-mountain-biking",
      "woman-mountain-biking",
      "person_doing_cartwheel",
      "man-cartwheeling",
      "woman-cartwheeling",
      "wrestlers",
      "man-wrestling",
      "woman-wrestling",
      "water_polo",
      "man-playing-water-polo",
      "woman-playing-water-polo",
      "handball",
      "man-playing-handball",
      "woman-playing-handball",
      "juggling",
      "man-juggling",
      "woman-juggling",
      "person_in_lotus_position",
      "man_in_lotus_position",
      "woman_in_lotus_position",
      "bath",
      "sleeping_accommodation",
      "people_holding_hands",
      "two_women_holding_hands",
      "man_and_woman_holding_hands",
      "two_men_holding_hands",
      "couplekiss",
      "woman-kiss-man",
      "man-kiss-man",
      "woman-kiss-woman",
      "couple_with_heart",
      "woman-heart-man",
      "man-heart-man",
      "woman-heart-woman",
      "family",
      "man-woman-boy",
      "man-woman-girl",
      "man-woman-girl-boy",
      "man-woman-boy-boy",
      "man-woman-girl-girl",
      "man-man-boy",
      "man-man-girl",
      "man-man-girl-boy",
      "man-man-boy-boy",
      "man-man-girl-girl",
      "woman-woman-boy",
      "woman-woman-girl",
      "woman-woman-girl-boy",
      "woman-woman-boy-boy",
      "woman-woman-girl-girl",
      "man-boy",
      "man-boy-boy",
      "man-girl",
      "man-girl-boy",
      "man-girl-girl",
      "woman-boy",
      "woman-boy-boy",
      "woman-girl",
      "woman-girl-boy",
      "woman-girl-girl",
      "speaking_head_in_silhouette",
      "bust_in_silhouette",
      "busts_in_silhouette",
      "people_hugging",
      "footprints",
      "robot_face",
      "smiley_cat",
      "smile_cat",
      "joy_cat",
      "heart_eyes_cat",
      "smirk_cat",
      "kissing_cat",
      "scream_cat",
      "crying_cat_face",
      "pouting_cat",
      "see_no_evil",
      "hear_no_evil",
      "speak_no_evil",
      "love_letter",
      "cupid",
      "gift_heart",
      "sparkling_heart",
      "heartpulse",
      "heartbeat",
      "revolving_hearts",
      "two_hearts",
      "heart_decoration",
      "heavy_heart_exclamation_mark_ornament",
      "broken_heart",
      "heart_on_fire",
      "mending_heart",
      "heart",
      "pink_heart",
      "orange_heart",
      "yellow_heart",
      "green_heart",
      "blue_heart",
      "light_blue_heart",
      "purple_heart",
      "brown_heart",
      "black_heart",
      "grey_heart",
      "white_heart",
      "kiss",
      "100",
      "anger",
      "boom",
      "dizzy",
      "sweat_drops",
      "dash",
      "hole",
      "speech_balloon",
      "eye-in-speech-bubble",
      "left_speech_bubble",
      "right_anger_bubble",
      "thought_balloon",
      "zzz"
    ]
  },
  {
    id: "nature",
    emojis: [
      "monkey_face",
      "monkey",
      "gorilla",
      "orangutan",
      "dog",
      "dog2",
      "guide_dog",
      "service_dog",
      "poodle",
      "wolf",
      "fox_face",
      "raccoon",
      "cat",
      "cat2",
      "black_cat",
      "lion_face",
      "tiger",
      "tiger2",
      "leopard",
      "horse",
      "moose",
      "donkey",
      "racehorse",
      "unicorn_face",
      "zebra_face",
      "deer",
      "bison",
      "cow",
      "ox",
      "water_buffalo",
      "cow2",
      "pig",
      "pig2",
      "boar",
      "pig_nose",
      "ram",
      "sheep",
      "goat",
      "dromedary_camel",
      "camel",
      "llama",
      "giraffe_face",
      "elephant",
      "mammoth",
      "rhinoceros",
      "hippopotamus",
      "mouse",
      "mouse2",
      "rat",
      "hamster",
      "rabbit",
      "rabbit2",
      "chipmunk",
      "beaver",
      "hedgehog",
      "bat",
      "bear",
      "polar_bear",
      "koala",
      "panda_face",
      "sloth",
      "otter",
      "skunk",
      "kangaroo",
      "badger",
      "feet",
      "turkey",
      "chicken",
      "rooster",
      "hatching_chick",
      "baby_chick",
      "hatched_chick",
      "bird",
      "penguin",
      "dove_of_peace",
      "eagle",
      "duck",
      "swan",
      "owl",
      "dodo",
      "feather",
      "flamingo",
      "peacock",
      "parrot",
      "wing",
      "black_bird",
      "goose",
      "frog",
      "crocodile",
      "turtle",
      "lizard",
      "snake",
      "dragon_face",
      "dragon",
      "sauropod",
      "t-rex",
      "whale",
      "whale2",
      "dolphin",
      "seal",
      "fish",
      "tropical_fish",
      "blowfish",
      "shark",
      "octopus",
      "shell",
      "coral",
      "jellyfish",
      "snail",
      "butterfly",
      "bug",
      "ant",
      "bee",
      "beetle",
      "ladybug",
      "cricket",
      "cockroach",
      "spider",
      "spider_web",
      "scorpion",
      "mosquito",
      "fly",
      "worm",
      "microbe",
      "bouquet",
      "cherry_blossom",
      "white_flower",
      "lotus",
      "rosette",
      "rose",
      "wilted_flower",
      "hibiscus",
      "sunflower",
      "blossom",
      "tulip",
      "hyacinth",
      "seedling",
      "potted_plant",
      "evergreen_tree",
      "deciduous_tree",
      "palm_tree",
      "cactus",
      "ear_of_rice",
      "herb",
      "shamrock",
      "four_leaf_clover",
      "maple_leaf",
      "fallen_leaf",
      "leaves",
      "empty_nest",
      "nest_with_eggs",
      "mushroom"
    ]
  },
  {
    id: "foods",
    emojis: [
      "grapes",
      "melon",
      "watermelon",
      "tangerine",
      "lemon",
      "banana",
      "pineapple",
      "mango",
      "apple",
      "green_apple",
      "pear",
      "peach",
      "cherries",
      "strawberry",
      "blueberries",
      "kiwifruit",
      "tomato",
      "olive",
      "coconut",
      "avocado",
      "eggplant",
      "potato",
      "carrot",
      "corn",
      "hot_pepper",
      "bell_pepper",
      "cucumber",
      "leafy_green",
      "broccoli",
      "garlic",
      "onion",
      "peanuts",
      "beans",
      "chestnut",
      "ginger_root",
      "pea_pod",
      "bread",
      "croissant",
      "baguette_bread",
      "flatbread",
      "pretzel",
      "bagel",
      "pancakes",
      "waffle",
      "cheese_wedge",
      "meat_on_bone",
      "poultry_leg",
      "cut_of_meat",
      "bacon",
      "hamburger",
      "fries",
      "pizza",
      "hotdog",
      "sandwich",
      "taco",
      "burrito",
      "tamale",
      "stuffed_flatbread",
      "falafel",
      "egg",
      "fried_egg",
      "shallow_pan_of_food",
      "stew",
      "fondue",
      "bowl_with_spoon",
      "green_salad",
      "popcorn",
      "butter",
      "salt",
      "canned_food",
      "bento",
      "rice_cracker",
      "rice_ball",
      "rice",
      "curry",
      "ramen",
      "spaghetti",
      "sweet_potato",
      "oden",
      "sushi",
      "fried_shrimp",
      "fish_cake",
      "moon_cake",
      "dango",
      "dumpling",
      "fortune_cookie",
      "takeout_box",
      "crab",
      "lobster",
      "shrimp",
      "squid",
      "oyster",
      "icecream",
      "shaved_ice",
      "ice_cream",
      "doughnut",
      "cookie",
      "birthday",
      "cake",
      "cupcake",
      "pie",
      "chocolate_bar",
      "candy",
      "lollipop",
      "custard",
      "honey_pot",
      "baby_bottle",
      "glass_of_milk",
      "coffee",
      "teapot",
      "tea",
      "sake",
      "champagne",
      "wine_glass",
      "cocktail",
      "tropical_drink",
      "beer",
      "beers",
      "clinking_glasses",
      "tumbler_glass",
      "pouring_liquid",
      "cup_with_straw",
      "bubble_tea",
      "beverage_box",
      "mate_drink",
      "ice_cube",
      "chopsticks",
      "knife_fork_plate",
      "fork_and_knife",
      "spoon",
      "hocho",
      "jar",
      "amphora"
    ]
  },
  {
    id: "activity",
    emojis: [
      "jack_o_lantern",
      "christmas_tree",
      "fireworks",
      "sparkler",
      "firecracker",
      "sparkles",
      "balloon",
      "tada",
      "confetti_ball",
      "tanabata_tree",
      "bamboo",
      "dolls",
      "flags",
      "wind_chime",
      "rice_scene",
      "red_envelope",
      "ribbon",
      "gift",
      "reminder_ribbon",
      "admission_tickets",
      "ticket",
      "medal",
      "trophy",
      "sports_medal",
      "first_place_medal",
      "second_place_medal",
      "third_place_medal",
      "soccer",
      "baseball",
      "softball",
      "basketball",
      "volleyball",
      "football",
      "rugby_football",
      "tennis",
      "flying_disc",
      "bowling",
      "cricket_bat_and_ball",
      "field_hockey_stick_and_ball",
      "ice_hockey_stick_and_puck",
      "lacrosse",
      "table_tennis_paddle_and_ball",
      "badminton_racquet_and_shuttlecock",
      "boxing_glove",
      "martial_arts_uniform",
      "goal_net",
      "golf",
      "ice_skate",
      "fishing_pole_and_fish",
      "diving_mask",
      "running_shirt_with_sash",
      "ski",
      "sled",
      "curling_stone",
      "dart",
      "yo-yo",
      "kite",
      "gun",
      "8ball",
      "crystal_ball",
      "magic_wand",
      "video_game",
      "joystick",
      "slot_machine",
      "game_die",
      "jigsaw",
      "teddy_bear",
      "pinata",
      "mirror_ball",
      "nesting_dolls",
      "spades",
      "hearts",
      "diamonds",
      "clubs",
      "chess_pawn",
      "black_joker",
      "mahjong",
      "flower_playing_cards",
      "performing_arts",
      "frame_with_picture",
      "art",
      "thread",
      "sewing_needle",
      "yarn",
      "knot"
    ]
  },
  {
    id: "places",
    emojis: [
      "earth_africa",
      "earth_americas",
      "earth_asia",
      "globe_with_meridians",
      "world_map",
      "japan",
      "compass",
      "snow_capped_mountain",
      "mountain",
      "volcano",
      "mount_fuji",
      "camping",
      "beach_with_umbrella",
      "desert",
      "desert_island",
      "national_park",
      "stadium",
      "classical_building",
      "building_construction",
      "bricks",
      "rock",
      "wood",
      "hut",
      "house_buildings",
      "derelict_house_building",
      "house",
      "house_with_garden",
      "office",
      "post_office",
      "european_post_office",
      "hospital",
      "bank",
      "hotel",
      "love_hotel",
      "convenience_store",
      "school",
      "department_store",
      "factory",
      "japanese_castle",
      "european_castle",
      "wedding",
      "tokyo_tower",
      "statue_of_liberty",
      "church",
      "mosque",
      "hindu_temple",
      "synagogue",
      "shinto_shrine",
      "kaaba",
      "fountain",
      "tent",
      "foggy",
      "night_with_stars",
      "cityscape",
      "sunrise_over_mountains",
      "sunrise",
      "city_sunset",
      "city_sunrise",
      "bridge_at_night",
      "hotsprings",
      "carousel_horse",
      "playground_slide",
      "ferris_wheel",
      "roller_coaster",
      "barber",
      "circus_tent",
      "steam_locomotive",
      "railway_car",
      "bullettrain_side",
      "bullettrain_front",
      "train2",
      "metro",
      "light_rail",
      "station",
      "tram",
      "monorail",
      "mountain_railway",
      "train",
      "bus",
      "oncoming_bus",
      "trolleybus",
      "minibus",
      "ambulance",
      "fire_engine",
      "police_car",
      "oncoming_police_car",
      "taxi",
      "oncoming_taxi",
      "car",
      "oncoming_automobile",
      "blue_car",
      "pickup_truck",
      "truck",
      "articulated_lorry",
      "tractor",
      "racing_car",
      "racing_motorcycle",
      "motor_scooter",
      "manual_wheelchair",
      "motorized_wheelchair",
      "auto_rickshaw",
      "bike",
      "scooter",
      "skateboard",
      "roller_skate",
      "busstop",
      "motorway",
      "railway_track",
      "oil_drum",
      "fuelpump",
      "wheel",
      "rotating_light",
      "traffic_light",
      "vertical_traffic_light",
      "octagonal_sign",
      "construction",
      "anchor",
      "ring_buoy",
      "boat",
      "canoe",
      "speedboat",
      "passenger_ship",
      "ferry",
      "motor_boat",
      "ship",
      "airplane",
      "small_airplane",
      "airplane_departure",
      "airplane_arriving",
      "parachute",
      "seat",
      "helicopter",
      "suspension_railway",
      "mountain_cableway",
      "aerial_tramway",
      "satellite",
      "rocket",
      "flying_saucer",
      "bellhop_bell",
      "luggage",
      "hourglass",
      "hourglass_flowing_sand",
      "watch",
      "alarm_clock",
      "stopwatch",
      "timer_clock",
      "mantelpiece_clock",
      "clock12",
      "clock1230",
      "clock1",
      "clock130",
      "clock2",
      "clock230",
      "clock3",
      "clock330",
      "clock4",
      "clock430",
      "clock5",
      "clock530",
      "clock6",
      "clock630",
      "clock7",
      "clock730",
      "clock8",
      "clock830",
      "clock9",
      "clock930",
      "clock10",
      "clock1030",
      "clock11",
      "clock1130",
      "new_moon",
      "waxing_crescent_moon",
      "first_quarter_moon",
      "moon",
      "full_moon",
      "waning_gibbous_moon",
      "last_quarter_moon",
      "waning_crescent_moon",
      "crescent_moon",
      "new_moon_with_face",
      "first_quarter_moon_with_face",
      "last_quarter_moon_with_face",
      "thermometer",
      "sunny",
      "full_moon_with_face",
      "sun_with_face",
      "ringed_planet",
      "star",
      "star2",
      "stars",
      "milky_way",
      "cloud",
      "partly_sunny",
      "thunder_cloud_and_rain",
      "mostly_sunny",
      "barely_sunny",
      "partly_sunny_rain",
      "rain_cloud",
      "snow_cloud",
      "lightning",
      "tornado",
      "fog",
      "wind_blowing_face",
      "cyclone",
      "rainbow",
      "closed_umbrella",
      "umbrella",
      "umbrella_with_rain_drops",
      "umbrella_on_ground",
      "zap",
      "snowflake",
      "snowman",
      "snowman_without_snow",
      "comet",
      "fire",
      "droplet",
      "ocean"
    ]
  },
  {
    id: "objects",
    emojis: [
      "eyeglasses",
      "dark_sunglasses",
      "goggles",
      "lab_coat",
      "safety_vest",
      "necktie",
      "shirt",
      "jeans",
      "scarf",
      "gloves",
      "coat",
      "socks",
      "dress",
      "kimono",
      "sari",
      "one-piece_swimsuit",
      "briefs",
      "shorts",
      "bikini",
      "womans_clothes",
      "folding_hand_fan",
      "purse",
      "handbag",
      "pouch",
      "shopping_bags",
      "school_satchel",
      "thong_sandal",
      "mans_shoe",
      "athletic_shoe",
      "hiking_boot",
      "womans_flat_shoe",
      "high_heel",
      "sandal",
      "ballet_shoes",
      "boot",
      "hair_pick",
      "crown",
      "womans_hat",
      "tophat",
      "mortar_board",
      "billed_cap",
      "military_helmet",
      "helmet_with_white_cross",
      "prayer_beads",
      "lipstick",
      "ring",
      "gem",
      "mute",
      "speaker",
      "sound",
      "loud_sound",
      "loudspeaker",
      "mega",
      "postal_horn",
      "bell",
      "no_bell",
      "musical_score",
      "musical_note",
      "notes",
      "studio_microphone",
      "level_slider",
      "control_knobs",
      "microphone",
      "headphones",
      "radio",
      "saxophone",
      "accordion",
      "guitar",
      "musical_keyboard",
      "trumpet",
      "violin",
      "banjo",
      "drum_with_drumsticks",
      "long_drum",
      "maracas",
      "flute",
      "iphone",
      "calling",
      "phone",
      "telephone_receiver",
      "pager",
      "fax",
      "battery",
      "low_battery",
      "electric_plug",
      "computer",
      "desktop_computer",
      "printer",
      "keyboard",
      "three_button_mouse",
      "trackball",
      "minidisc",
      "floppy_disk",
      "cd",
      "dvd",
      "abacus",
      "movie_camera",
      "film_frames",
      "film_projector",
      "clapper",
      "tv",
      "camera",
      "camera_with_flash",
      "video_camera",
      "vhs",
      "mag",
      "mag_right",
      "candle",
      "bulb",
      "flashlight",
      "izakaya_lantern",
      "diya_lamp",
      "notebook_with_decorative_cover",
      "closed_book",
      "book",
      "green_book",
      "blue_book",
      "orange_book",
      "books",
      "notebook",
      "ledger",
      "page_with_curl",
      "scroll",
      "page_facing_up",
      "newspaper",
      "rolled_up_newspaper",
      "bookmark_tabs",
      "bookmark",
      "label",
      "moneybag",
      "coin",
      "yen",
      "dollar",
      "euro",
      "pound",
      "money_with_wings",
      "credit_card",
      "receipt",
      "chart",
      "email",
      "e-mail",
      "incoming_envelope",
      "envelope_with_arrow",
      "outbox_tray",
      "inbox_tray",
      "package",
      "mailbox",
      "mailbox_closed",
      "mailbox_with_mail",
      "mailbox_with_no_mail",
      "postbox",
      "ballot_box_with_ballot",
      "pencil2",
      "black_nib",
      "lower_left_fountain_pen",
      "lower_left_ballpoint_pen",
      "lower_left_paintbrush",
      "lower_left_crayon",
      "memo",
      "briefcase",
      "file_folder",
      "open_file_folder",
      "card_index_dividers",
      "date",
      "calendar",
      "spiral_note_pad",
      "spiral_calendar_pad",
      "card_index",
      "chart_with_upwards_trend",
      "chart_with_downwards_trend",
      "bar_chart",
      "clipboard",
      "pushpin",
      "round_pushpin",
      "paperclip",
      "linked_paperclips",
      "straight_ruler",
      "triangular_ruler",
      "scissors",
      "card_file_box",
      "file_cabinet",
      "wastebasket",
      "lock",
      "unlock",
      "lock_with_ink_pen",
      "closed_lock_with_key",
      "key",
      "old_key",
      "hammer",
      "axe",
      "pick",
      "hammer_and_pick",
      "hammer_and_wrench",
      "dagger_knife",
      "crossed_swords",
      "bomb",
      "boomerang",
      "bow_and_arrow",
      "shield",
      "carpentry_saw",
      "wrench",
      "screwdriver",
      "nut_and_bolt",
      "gear",
      "compression",
      "scales",
      "probing_cane",
      "link",
      "chains",
      "hook",
      "toolbox",
      "magnet",
      "ladder",
      "alembic",
      "test_tube",
      "petri_dish",
      "dna",
      "microscope",
      "telescope",
      "satellite_antenna",
      "syringe",
      "drop_of_blood",
      "pill",
      "adhesive_bandage",
      "crutch",
      "stethoscope",
      "x-ray",
      "door",
      "elevator",
      "mirror",
      "window",
      "bed",
      "couch_and_lamp",
      "chair",
      "toilet",
      "plunger",
      "shower",
      "bathtub",
      "mouse_trap",
      "razor",
      "lotion_bottle",
      "safety_pin",
      "broom",
      "basket",
      "roll_of_paper",
      "bucket",
      "soap",
      "bubbles",
      "toothbrush",
      "sponge",
      "fire_extinguisher",
      "shopping_trolley",
      "smoking",
      "coffin",
      "headstone",
      "funeral_urn",
      "nazar_amulet",
      "hamsa",
      "moyai",
      "placard",
      "identification_card"
    ]
  },
  {
    id: "symbols",
    emojis: [
      "atm",
      "put_litter_in_its_place",
      "potable_water",
      "wheelchair",
      "mens",
      "womens",
      "restroom",
      "baby_symbol",
      "wc",
      "passport_control",
      "customs",
      "baggage_claim",
      "left_luggage",
      "warning",
      "children_crossing",
      "no_entry",
      "no_entry_sign",
      "no_bicycles",
      "no_smoking",
      "do_not_litter",
      "non-potable_water",
      "no_pedestrians",
      "no_mobile_phones",
      "underage",
      "radioactive_sign",
      "biohazard_sign",
      "arrow_up",
      "arrow_upper_right",
      "arrow_right",
      "arrow_lower_right",
      "arrow_down",
      "arrow_lower_left",
      "arrow_left",
      "arrow_upper_left",
      "arrow_up_down",
      "left_right_arrow",
      "leftwards_arrow_with_hook",
      "arrow_right_hook",
      "arrow_heading_up",
      "arrow_heading_down",
      "arrows_clockwise",
      "arrows_counterclockwise",
      "back",
      "end",
      "on",
      "soon",
      "top",
      "place_of_worship",
      "atom_symbol",
      "om_symbol",
      "star_of_david",
      "wheel_of_dharma",
      "yin_yang",
      "latin_cross",
      "orthodox_cross",
      "star_and_crescent",
      "peace_symbol",
      "menorah_with_nine_branches",
      "six_pointed_star",
      "khanda",
      "aries",
      "taurus",
      "gemini",
      "cancer",
      "leo",
      "virgo",
      "libra",
      "scorpius",
      "sagittarius",
      "capricorn",
      "aquarius",
      "pisces",
      "ophiuchus",
      "twisted_rightwards_arrows",
      "repeat",
      "repeat_one",
      "arrow_forward",
      "fast_forward",
      "black_right_pointing_double_triangle_with_vertical_bar",
      "black_right_pointing_triangle_with_double_vertical_bar",
      "arrow_backward",
      "rewind",
      "black_left_pointing_double_triangle_with_vertical_bar",
      "arrow_up_small",
      "arrow_double_up",
      "arrow_down_small",
      "arrow_double_down",
      "double_vertical_bar",
      "black_square_for_stop",
      "black_circle_for_record",
      "eject",
      "cinema",
      "low_brightness",
      "high_brightness",
      "signal_strength",
      "wireless",
      "vibration_mode",
      "mobile_phone_off",
      "female_sign",
      "male_sign",
      "transgender_symbol",
      "heavy_multiplication_x",
      "heavy_plus_sign",
      "heavy_minus_sign",
      "heavy_division_sign",
      "heavy_equals_sign",
      "infinity",
      "bangbang",
      "interrobang",
      "question",
      "grey_question",
      "grey_exclamation",
      "exclamation",
      "wavy_dash",
      "currency_exchange",
      "heavy_dollar_sign",
      "medical_symbol",
      "recycle",
      "fleur_de_lis",
      "trident",
      "name_badge",
      "beginner",
      "o",
      "white_check_mark",
      "ballot_box_with_check",
      "heavy_check_mark",
      "x",
      "negative_squared_cross_mark",
      "curly_loop",
      "loop",
      "part_alternation_mark",
      "eight_spoked_asterisk",
      "eight_pointed_black_star",
      "sparkle",
      "copyright",
      "registered",
      "tm",
      "hash",
      "keycap_star",
      "zero",
      "one",
      "two",
      "three",
      "four",
      "five",
      "six",
      "seven",
      "eight",
      "nine",
      "keycap_ten",
      "capital_abcd",
      "abcd",
      "1234",
      "symbols",
      "abc",
      "a",
      "ab",
      "b",
      "cl",
      "cool",
      "free",
      "information_source",
      "id",
      "m",
      "new",
      "ng",
      "o2",
      "ok",
      "parking",
      "sos",
      "up",
      "vs",
      "koko",
      "sa",
      "u6708",
      "u6709",
      "u6307",
      "ideograph_advantage",
      "u5272",
      "u7121",
      "u7981",
      "accept",
      "u7533",
      "u5408",
      "u7a7a",
      "congratulations",
      "secret",
      "u55b6",
      "u6e80",
      "red_circle",
      "large_orange_circle",
      "large_yellow_circle",
      "large_green_circle",
      "large_blue_circle",
      "large_purple_circle",
      "large_brown_circle",
      "black_circle",
      "white_circle",
      "large_red_square",
      "large_orange_square",
      "large_yellow_square",
      "large_green_square",
      "large_blue_square",
      "large_purple_square",
      "large_brown_square",
      "black_large_square",
      "white_large_square",
      "black_medium_square",
      "white_medium_square",
      "black_medium_small_square",
      "white_medium_small_square",
      "black_small_square",
      "white_small_square",
      "large_orange_diamond",
      "large_blue_diamond",
      "small_orange_diamond",
      "small_blue_diamond",
      "small_red_triangle",
      "small_red_triangle_down",
      "diamond_shape_with_a_dot_inside",
      "radio_button",
      "white_square_button",
      "black_square_button"
    ]
  },
  {
    id: "flags",
    emojis: [
      "checkered_flag",
      "cn",
      "crossed_flags",
      "de",
      "es",
      "flag-ac",
      "flag-ad",
      "flag-ae",
      "flag-af",
      "flag-ag",
      "flag-ai",
      "flag-al",
      "flag-am",
      "flag-ao",
      "flag-aq",
      "flag-ar",
      "flag-as",
      "flag-at",
      "flag-au",
      "flag-aw",
      "flag-ax",
      "flag-az",
      "flag-ba",
      "flag-bb",
      "flag-bd",
      "flag-be",
      "flag-bf",
      "flag-bg",
      "flag-bh",
      "flag-bi",
      "flag-bj",
      "flag-bl",
      "flag-bm",
      "flag-bn",
      "flag-bo",
      "flag-bq",
      "flag-br",
      "flag-bs",
      "flag-bt",
      "flag-bv",
      "flag-bw",
      "flag-by",
      "flag-bz",
      "flag-ca",
      "flag-cc",
      "flag-cd",
      "flag-cf",
      "flag-cg",
      "flag-ch",
      "flag-ci",
      "flag-ck",
      "flag-cl",
      "flag-cm",
      "flag-co",
      "flag-cp",
      "flag-cr",
      "flag-cu",
      "flag-cv",
      "flag-cw",
      "flag-cx",
      "flag-cy",
      "flag-cz",
      "flag-dg",
      "flag-dj",
      "flag-dk",
      "flag-dm",
      "flag-do",
      "flag-dz",
      "flag-ea",
      "flag-ec",
      "flag-ee",
      "flag-eg",
      "flag-eh",
      "flag-england",
      "flag-er",
      "flag-et",
      "flag-eu",
      "flag-fi",
      "flag-fj",
      "flag-fk",
      "flag-fm",
      "flag-fo",
      "flag-ga",
      "flag-gd",
      "flag-ge",
      "flag-gf",
      "flag-gg",
      "flag-gh",
      "flag-gi",
      "flag-gl",
      "flag-gm",
      "flag-gn",
      "flag-gp",
      "flag-gq",
      "flag-gr",
      "flag-gs",
      "flag-gt",
      "flag-gu",
      "flag-gw",
      "flag-gy",
      "flag-hk",
      "flag-hm",
      "flag-hn",
      "flag-hr",
      "flag-ht",
      "flag-hu",
      "flag-ic",
      "flag-id",
      "flag-ie",
      "flag-il",
      "flag-im",
      "flag-in",
      "flag-io",
      "flag-iq",
      "flag-ir",
      "flag-is",
      "flag-je",
      "flag-jm",
      "flag-jo",
      "flag-ke",
      "flag-kg",
      "flag-kh",
      "flag-ki",
      "flag-km",
      "flag-kn",
      "flag-kp",
      "flag-kw",
      "flag-ky",
      "flag-kz",
      "flag-la",
      "flag-lb",
      "flag-lc",
      "flag-li",
      "flag-lk",
      "flag-lr",
      "flag-ls",
      "flag-lt",
      "flag-lu",
      "flag-lv",
      "flag-ly",
      "flag-ma",
      "flag-mc",
      "flag-md",
      "flag-me",
      "flag-mf",
      "flag-mg",
      "flag-mh",
      "flag-mk",
      "flag-ml",
      "flag-mm",
      "flag-mn",
      "flag-mo",
      "flag-mp",
      "flag-mq",
      "flag-mr",
      "flag-ms",
      "flag-mt",
      "flag-mu",
      "flag-mv",
      "flag-mw",
      "flag-mx",
      "flag-my",
      "flag-mz",
      "flag-na",
      "flag-nc",
      "flag-ne",
      "flag-nf",
      "flag-ng",
      "flag-ni",
      "flag-nl",
      "flag-no",
      "flag-np",
      "flag-nr",
      "flag-nu",
      "flag-nz",
      "flag-om",
      "flag-pa",
      "flag-pe",
      "flag-pf",
      "flag-pg",
      "flag-ph",
      "flag-pk",
      "flag-pl",
      "flag-pm",
      "flag-pn",
      "flag-pr",
      "flag-ps",
      "flag-pt",
      "flag-pw",
      "flag-py",
      "flag-qa",
      "flag-re",
      "flag-ro",
      "flag-rs",
      "flag-rw",
      "flag-sa",
      "flag-sb",
      "flag-sc",
      "flag-scotland",
      "flag-sd",
      "flag-se",
      "flag-sg",
      "flag-sh",
      "flag-si",
      "flag-sj",
      "flag-sk",
      "flag-sl",
      "flag-sm",
      "flag-sn",
      "flag-so",
      "flag-sr",
      "flag-ss",
      "flag-st",
      "flag-sv",
      "flag-sx",
      "flag-sy",
      "flag-sz",
      "flag-ta",
      "flag-tc",
      "flag-td",
      "flag-tf",
      "flag-tg",
      "flag-th",
      "flag-tj",
      "flag-tk",
      "flag-tl",
      "flag-tm",
      "flag-tn",
      "flag-to",
      "flag-tr",
      "flag-tt",
      "flag-tv",
      "flag-tw",
      "flag-tz",
      "flag-ua",
      "flag-ug",
      "flag-um",
      "flag-un",
      "flag-uy",
      "flag-uz",
      "flag-va",
      "flag-vc",
      "flag-ve",
      "flag-vg",
      "flag-vi",
      "flag-vn",
      "flag-vu",
      "flag-wales",
      "flag-wf",
      "flag-ws",
      "flag-xk",
      "flag-ye",
      "flag-yt",
      "flag-za",
      "flag-zm",
      "flag-zw",
      "fr",
      "gb",
      "it",
      "jp",
      "kr",
      "pirate_flag",
      "rainbow-flag",
      "ru",
      "transgender_flag",
      "triangular_flag_on_post",
      "us",
      "waving_black_flag",
      "waving_white_flag"
    ]
  }
], ax = {
  100: {
    id: "100",
    name: "Hundred Points",
    keywords: [
      "100",
      "score",
      "perfect",
      "numbers",
      "century",
      "exam",
      "quiz",
      "test",
      "pass"
    ],
    skins: [
      {
        unified: "1f4af",
        native: "💯"
      }
    ],
    version: 1
  },
  1234: {
    id: "1234",
    name: "Input Numbers",
    keywords: [
      "1234",
      "blue",
      "square",
      "1",
      "2",
      "3",
      "4"
    ],
    skins: [
      {
        unified: "1f522",
        native: "🔢"
      }
    ],
    version: 1
  },
  grinning: {
    id: "grinning",
    name: "Grinning Face",
    emoticons: [
      ":D"
    ],
    keywords: [
      "smile",
      "happy",
      "joy",
      ":D",
      "grin"
    ],
    skins: [
      {
        unified: "1f600",
        native: "😀"
      }
    ],
    version: 1
  },
  smiley: {
    id: "smiley",
    name: "Grinning Face with Big Eyes",
    emoticons: [
      ":)",
      "=)",
      "=-)"
    ],
    keywords: [
      "smiley",
      "happy",
      "joy",
      "haha",
      ":D",
      ":)",
      "smile",
      "funny"
    ],
    skins: [
      {
        unified: "1f603",
        native: "😃"
      }
    ],
    version: 1
  },
  smile: {
    id: "smile",
    name: "Grinning Face with Smiling Eyes",
    emoticons: [
      ":)",
      "C:",
      "c:",
      ":D",
      ":-D"
    ],
    keywords: [
      "smile",
      "happy",
      "joy",
      "funny",
      "haha",
      "laugh",
      "like",
      ":D",
      ":)"
    ],
    skins: [
      {
        unified: "1f604",
        native: "😄"
      }
    ],
    version: 1
  },
  grin: {
    id: "grin",
    name: "Beaming Face with Smiling Eyes",
    keywords: [
      "grin",
      "happy",
      "smile",
      "joy",
      "kawaii"
    ],
    skins: [
      {
        unified: "1f601",
        native: "😁"
      }
    ],
    version: 1
  },
  laughing: {
    id: "laughing",
    name: "Grinning Squinting Face",
    emoticons: [
      ":>",
      ":->"
    ],
    keywords: [
      "laughing",
      "satisfied",
      "happy",
      "joy",
      "lol",
      "haha",
      "glad",
      "XD",
      "laugh"
    ],
    skins: [
      {
        unified: "1f606",
        native: "😆"
      }
    ],
    version: 1
  },
  sweat_smile: {
    id: "sweat_smile",
    name: "Grinning Face with Sweat",
    keywords: [
      "smile",
      "hot",
      "happy",
      "laugh",
      "relief"
    ],
    skins: [
      {
        unified: "1f605",
        native: "😅"
      }
    ],
    version: 1
  },
  rolling_on_the_floor_laughing: {
    id: "rolling_on_the_floor_laughing",
    name: "Rolling on the Floor Laughing",
    keywords: [
      "face",
      "lol",
      "haha",
      "rofl"
    ],
    skins: [
      {
        unified: "1f923",
        native: "🤣"
      }
    ],
    version: 3
  },
  joy: {
    id: "joy",
    name: "Face with Tears of Joy",
    keywords: [
      "cry",
      "weep",
      "happy",
      "happytears",
      "haha"
    ],
    skins: [
      {
        unified: "1f602",
        native: "😂"
      }
    ],
    version: 1
  },
  slightly_smiling_face: {
    id: "slightly_smiling_face",
    name: "Slightly Smiling Face",
    emoticons: [
      ":)",
      "(:",
      ":-)"
    ],
    keywords: [
      "smile"
    ],
    skins: [
      {
        unified: "1f642",
        native: "🙂"
      }
    ],
    version: 1
  },
  upside_down_face: {
    id: "upside_down_face",
    name: "Upside-Down Face",
    keywords: [
      "upside",
      "down",
      "flipped",
      "silly",
      "smile"
    ],
    skins: [
      {
        unified: "1f643",
        native: "🙃"
      }
    ],
    version: 1
  },
  melting_face: {
    id: "melting_face",
    name: "Melting Face",
    keywords: [
      "hot",
      "heat"
    ],
    skins: [
      {
        unified: "1fae0",
        native: "🫠"
      }
    ],
    version: 14
  },
  wink: {
    id: "wink",
    name: "Winking Face",
    emoticons: [
      ";)",
      ";-)"
    ],
    keywords: [
      "wink",
      "happy",
      "mischievous",
      "secret",
      ";)",
      "smile",
      "eye"
    ],
    skins: [
      {
        unified: "1f609",
        native: "😉"
      }
    ],
    version: 1
  },
  blush: {
    id: "blush",
    name: "Smiling Face with Smiling Eyes",
    emoticons: [
      ":)"
    ],
    keywords: [
      "blush",
      "smile",
      "happy",
      "flushed",
      "crush",
      "embarrassed",
      "shy",
      "joy"
    ],
    skins: [
      {
        unified: "1f60a",
        native: "😊"
      }
    ],
    version: 1
  },
  innocent: {
    id: "innocent",
    name: "Smiling Face with Halo",
    keywords: [
      "innocent",
      "angel",
      "heaven"
    ],
    skins: [
      {
        unified: "1f607",
        native: "😇"
      }
    ],
    version: 1
  },
  smiling_face_with_3_hearts: {
    id: "smiling_face_with_3_hearts",
    name: "Smiling Face with Hearts",
    keywords: [
      "3",
      "love",
      "like",
      "affection",
      "valentines",
      "infatuation",
      "crush",
      "adore"
    ],
    skins: [
      {
        unified: "1f970",
        native: "🥰"
      }
    ],
    version: 11
  },
  heart_eyes: {
    id: "heart_eyes",
    name: "Smiling Face with Heart-Eyes",
    keywords: [
      "heart",
      "eyes",
      "love",
      "like",
      "affection",
      "valentines",
      "infatuation",
      "crush"
    ],
    skins: [
      {
        unified: "1f60d",
        native: "😍"
      }
    ],
    version: 1
  },
  "star-struck": {
    id: "star-struck",
    name: "Star-Struck",
    keywords: [
      "star",
      "struck",
      "grinning",
      "face",
      "with",
      "eyes",
      "smile",
      "starry"
    ],
    skins: [
      {
        unified: "1f929",
        native: "🤩"
      }
    ],
    version: 5
  },
  kissing_heart: {
    id: "kissing_heart",
    name: "Face Blowing a Kiss",
    emoticons: [
      ":*",
      ":-*"
    ],
    keywords: [
      "kissing",
      "heart",
      "love",
      "like",
      "affection",
      "valentines",
      "infatuation"
    ],
    skins: [
      {
        unified: "1f618",
        native: "😘"
      }
    ],
    version: 1
  },
  kissing: {
    id: "kissing",
    name: "Kissing Face",
    keywords: [
      "love",
      "like",
      "3",
      "valentines",
      "infatuation",
      "kiss"
    ],
    skins: [
      {
        unified: "1f617",
        native: "😗"
      }
    ],
    version: 1
  },
  relaxed: {
    id: "relaxed",
    name: "Smiling Face",
    keywords: [
      "relaxed",
      "blush",
      "massage",
      "happiness"
    ],
    skins: [
      {
        unified: "263a-fe0f",
        native: "☺️"
      }
    ],
    version: 1
  },
  kissing_closed_eyes: {
    id: "kissing_closed_eyes",
    name: "Kissing Face with Closed Eyes",
    keywords: [
      "love",
      "like",
      "affection",
      "valentines",
      "infatuation",
      "kiss"
    ],
    skins: [
      {
        unified: "1f61a",
        native: "😚"
      }
    ],
    version: 1
  },
  kissing_smiling_eyes: {
    id: "kissing_smiling_eyes",
    name: "Kissing Face with Smiling Eyes",
    keywords: [
      "affection",
      "valentines",
      "infatuation",
      "kiss"
    ],
    skins: [
      {
        unified: "1f619",
        native: "😙"
      }
    ],
    version: 1
  },
  smiling_face_with_tear: {
    id: "smiling_face_with_tear",
    name: "Smiling Face with Tear",
    keywords: [
      "sad",
      "cry",
      "pretend"
    ],
    skins: [
      {
        unified: "1f972",
        native: "🥲"
      }
    ],
    version: 13
  },
  yum: {
    id: "yum",
    name: "Face Savoring Food",
    keywords: [
      "yum",
      "happy",
      "joy",
      "tongue",
      "smile",
      "silly",
      "yummy",
      "nom",
      "delicious",
      "savouring"
    ],
    skins: [
      {
        unified: "1f60b",
        native: "😋"
      }
    ],
    version: 1
  },
  stuck_out_tongue: {
    id: "stuck_out_tongue",
    name: "Face with Tongue",
    emoticons: [
      ":p",
      ":-p",
      ":P",
      ":-P",
      ":b",
      ":-b"
    ],
    keywords: [
      "stuck",
      "out",
      "prank",
      "childish",
      "playful",
      "mischievous",
      "smile"
    ],
    skins: [
      {
        unified: "1f61b",
        native: "😛"
      }
    ],
    version: 1
  },
  stuck_out_tongue_winking_eye: {
    id: "stuck_out_tongue_winking_eye",
    name: "Winking Face with Tongue",
    emoticons: [
      ";p",
      ";-p",
      ";b",
      ";-b",
      ";P",
      ";-P"
    ],
    keywords: [
      "stuck",
      "out",
      "eye",
      "prank",
      "childish",
      "playful",
      "mischievous",
      "smile",
      "wink"
    ],
    skins: [
      {
        unified: "1f61c",
        native: "😜"
      }
    ],
    version: 1
  },
  zany_face: {
    id: "zany_face",
    name: "Zany Face",
    keywords: [
      "grinning",
      "with",
      "one",
      "large",
      "and",
      "small",
      "eye",
      "goofy",
      "crazy"
    ],
    skins: [
      {
        unified: "1f92a",
        native: "🤪"
      }
    ],
    version: 5
  },
  stuck_out_tongue_closed_eyes: {
    id: "stuck_out_tongue_closed_eyes",
    name: "Squinting Face with Tongue",
    keywords: [
      "stuck",
      "out",
      "closed",
      "eyes",
      "prank",
      "playful",
      "mischievous",
      "smile"
    ],
    skins: [
      {
        unified: "1f61d",
        native: "😝"
      }
    ],
    version: 1
  },
  money_mouth_face: {
    id: "money_mouth_face",
    name: "Money-Mouth Face",
    keywords: [
      "money",
      "mouth",
      "rich",
      "dollar"
    ],
    skins: [
      {
        unified: "1f911",
        native: "🤑"
      }
    ],
    version: 1
  },
  hugging_face: {
    id: "hugging_face",
    name: "Hugging Face",
    keywords: [
      "smile",
      "hug"
    ],
    skins: [
      {
        unified: "1f917",
        native: "🤗"
      }
    ],
    version: 1
  },
  face_with_hand_over_mouth: {
    id: "face_with_hand_over_mouth",
    name: "Face with Hand over Mouth",
    keywords: [
      "smiling",
      "eyes",
      "and",
      "covering",
      "whoops",
      "shock",
      "surprise"
    ],
    skins: [
      {
        unified: "1f92d",
        native: "🤭"
      }
    ],
    version: 5
  },
  face_with_open_eyes_and_hand_over_mouth: {
    id: "face_with_open_eyes_and_hand_over_mouth",
    name: "Face with Open Eyes and Hand over Mouth",
    keywords: [
      "silence",
      "secret",
      "shock",
      "surprise"
    ],
    skins: [
      {
        unified: "1fae2",
        native: "🫢"
      }
    ],
    version: 14
  },
  face_with_peeking_eye: {
    id: "face_with_peeking_eye",
    name: "Face with Peeking Eye",
    keywords: [
      "scared",
      "frightening",
      "embarrassing",
      "shy"
    ],
    skins: [
      {
        unified: "1fae3",
        native: "🫣"
      }
    ],
    version: 14
  },
  shushing_face: {
    id: "shushing_face",
    name: "Shushing Face",
    keywords: [
      "with",
      "finger",
      "covering",
      "closed",
      "lips",
      "quiet",
      "shhh"
    ],
    skins: [
      {
        unified: "1f92b",
        native: "🤫"
      }
    ],
    version: 5
  },
  thinking_face: {
    id: "thinking_face",
    name: "Thinking Face",
    keywords: [
      "hmmm",
      "think",
      "consider"
    ],
    skins: [
      {
        unified: "1f914",
        native: "🤔"
      }
    ],
    version: 1
  },
  saluting_face: {
    id: "saluting_face",
    name: "Saluting Face",
    keywords: [
      "respect",
      "salute"
    ],
    skins: [
      {
        unified: "1fae1",
        native: "🫡"
      }
    ],
    version: 14
  },
  zipper_mouth_face: {
    id: "zipper_mouth_face",
    name: "Zipper-Mouth Face",
    keywords: [
      "zipper",
      "mouth",
      "sealed",
      "secret"
    ],
    skins: [
      {
        unified: "1f910",
        native: "🤐"
      }
    ],
    version: 1
  },
  face_with_raised_eyebrow: {
    id: "face_with_raised_eyebrow",
    name: "Face with Raised Eyebrow",
    keywords: [
      "one",
      "distrust",
      "scepticism",
      "disapproval",
      "disbelief",
      "surprise"
    ],
    skins: [
      {
        unified: "1f928",
        native: "🤨"
      }
    ],
    version: 5
  },
  neutral_face: {
    id: "neutral_face",
    name: "Neutral Face",
    emoticons: [
      ":|",
      ":-|"
    ],
    keywords: [
      "indifference",
      "meh",
      ":",
      ""
    ],
    skins: [
      {
        unified: "1f610",
        native: "😐"
      }
    ],
    version: 1
  },
  expressionless: {
    id: "expressionless",
    name: "Expressionless Face",
    emoticons: [
      "-_-"
    ],
    keywords: [
      "indifferent",
      "-",
      "",
      "meh",
      "deadpan"
    ],
    skins: [
      {
        unified: "1f611",
        native: "😑"
      }
    ],
    version: 1
  },
  no_mouth: {
    id: "no_mouth",
    name: "Face Without Mouth",
    keywords: [
      "no",
      "hellokitty"
    ],
    skins: [
      {
        unified: "1f636",
        native: "😶"
      }
    ],
    version: 1
  },
  dotted_line_face: {
    id: "dotted_line_face",
    name: "Dotted Line Face",
    keywords: [
      "invisible",
      "lonely",
      "isolation",
      "depression"
    ],
    skins: [
      {
        unified: "1fae5",
        native: "🫥"
      }
    ],
    version: 14
  },
  face_in_clouds: {
    id: "face_in_clouds",
    name: "Face in Clouds",
    keywords: [
      "shower",
      "steam",
      "dream"
    ],
    skins: [
      {
        unified: "1f636-200d-1f32b-fe0f",
        native: "😶‍🌫️"
      }
    ],
    version: 13.1
  },
  smirk: {
    id: "smirk",
    name: "Smirking Face",
    keywords: [
      "smirk",
      "smile",
      "mean",
      "prank",
      "smug",
      "sarcasm"
    ],
    skins: [
      {
        unified: "1f60f",
        native: "😏"
      }
    ],
    version: 1
  },
  unamused: {
    id: "unamused",
    name: "Unamused Face",
    emoticons: [
      ":("
    ],
    keywords: [
      "indifference",
      "bored",
      "straight",
      "serious",
      "sarcasm",
      "unimpressed",
      "skeptical",
      "dubious",
      "side",
      "eye"
    ],
    skins: [
      {
        unified: "1f612",
        native: "😒"
      }
    ],
    version: 1
  },
  face_with_rolling_eyes: {
    id: "face_with_rolling_eyes",
    name: "Face with Rolling Eyes",
    keywords: [
      "eyeroll",
      "frustrated"
    ],
    skins: [
      {
        unified: "1f644",
        native: "🙄"
      }
    ],
    version: 1
  },
  grimacing: {
    id: "grimacing",
    name: "Grimacing Face",
    keywords: [
      "grimace",
      "teeth"
    ],
    skins: [
      {
        unified: "1f62c",
        native: "😬"
      }
    ],
    version: 1
  },
  face_exhaling: {
    id: "face_exhaling",
    name: "Face Exhaling",
    keywords: [
      "relieve",
      "relief",
      "tired",
      "sigh"
    ],
    skins: [
      {
        unified: "1f62e-200d-1f4a8",
        native: "😮‍💨"
      }
    ],
    version: 13.1
  },
  lying_face: {
    id: "lying_face",
    name: "Lying Face",
    keywords: [
      "lie",
      "pinocchio"
    ],
    skins: [
      {
        unified: "1f925",
        native: "🤥"
      }
    ],
    version: 3
  },
  shaking_face: {
    id: "shaking_face",
    name: "Shaking Face",
    keywords: [
      "dizzy",
      "shock",
      "blurry",
      "earthquake"
    ],
    skins: [
      {
        unified: "1fae8",
        native: "🫨"
      }
    ],
    version: 15
  },
  relieved: {
    id: "relieved",
    name: "Relieved Face",
    keywords: [
      "relaxed",
      "phew",
      "massage",
      "happiness"
    ],
    skins: [
      {
        unified: "1f60c",
        native: "😌"
      }
    ],
    version: 1
  },
  pensive: {
    id: "pensive",
    name: "Pensive Face",
    keywords: [
      "sad",
      "depressed",
      "upset"
    ],
    skins: [
      {
        unified: "1f614",
        native: "😔"
      }
    ],
    version: 1
  },
  sleepy: {
    id: "sleepy",
    name: "Sleepy Face",
    keywords: [
      "tired",
      "rest",
      "nap"
    ],
    skins: [
      {
        unified: "1f62a",
        native: "😪"
      }
    ],
    version: 1
  },
  drooling_face: {
    id: "drooling_face",
    name: "Drooling Face",
    keywords: [],
    skins: [
      {
        unified: "1f924",
        native: "🤤"
      }
    ],
    version: 3
  },
  sleeping: {
    id: "sleeping",
    name: "Sleeping Face",
    keywords: [
      "tired",
      "sleepy",
      "night",
      "zzz"
    ],
    skins: [
      {
        unified: "1f634",
        native: "😴"
      }
    ],
    version: 1
  },
  mask: {
    id: "mask",
    name: "Face with Medical Mask",
    keywords: [
      "sick",
      "ill",
      "disease",
      "covid"
    ],
    skins: [
      {
        unified: "1f637",
        native: "😷"
      }
    ],
    version: 1
  },
  face_with_thermometer: {
    id: "face_with_thermometer",
    name: "Face with Thermometer",
    keywords: [
      "sick",
      "temperature",
      "cold",
      "fever",
      "covid"
    ],
    skins: [
      {
        unified: "1f912",
        native: "🤒"
      }
    ],
    version: 1
  },
  face_with_head_bandage: {
    id: "face_with_head_bandage",
    name: "Face with Head-Bandage",
    keywords: [
      "head",
      "bandage",
      "injured",
      "clumsy",
      "hurt"
    ],
    skins: [
      {
        unified: "1f915",
        native: "🤕"
      }
    ],
    version: 1
  },
  nauseated_face: {
    id: "nauseated_face",
    name: "Nauseated Face",
    keywords: [
      "vomit",
      "gross",
      "green",
      "sick",
      "throw",
      "up",
      "ill"
    ],
    skins: [
      {
        unified: "1f922",
        native: "🤢"
      }
    ],
    version: 3
  },
  face_vomiting: {
    id: "face_vomiting",
    name: "Face Vomiting",
    keywords: [
      "with",
      "open",
      "mouth",
      "sick"
    ],
    skins: [
      {
        unified: "1f92e",
        native: "🤮"
      }
    ],
    version: 5
  },
  sneezing_face: {
    id: "sneezing_face",
    name: "Sneezing Face",
    keywords: [
      "gesundheit",
      "sneeze",
      "sick",
      "allergy"
    ],
    skins: [
      {
        unified: "1f927",
        native: "🤧"
      }
    ],
    version: 3
  },
  hot_face: {
    id: "hot_face",
    name: "Hot Face",
    keywords: [
      "feverish",
      "heat",
      "red",
      "sweating"
    ],
    skins: [
      {
        unified: "1f975",
        native: "🥵"
      }
    ],
    version: 11
  },
  cold_face: {
    id: "cold_face",
    name: "Cold Face",
    keywords: [
      "blue",
      "freezing",
      "frozen",
      "frostbite",
      "icicles"
    ],
    skins: [
      {
        unified: "1f976",
        native: "🥶"
      }
    ],
    version: 11
  },
  woozy_face: {
    id: "woozy_face",
    name: "Woozy Face",
    keywords: [
      "dizzy",
      "intoxicated",
      "tipsy",
      "wavy"
    ],
    skins: [
      {
        unified: "1f974",
        native: "🥴"
      }
    ],
    version: 11
  },
  dizzy_face: {
    id: "dizzy_face",
    name: "Dizzy Face",
    keywords: [
      "spent",
      "unconscious",
      "xox"
    ],
    skins: [
      {
        unified: "1f635",
        native: "😵"
      }
    ],
    version: 1
  },
  face_with_spiral_eyes: {
    id: "face_with_spiral_eyes",
    name: "Face with Spiral Eyes",
    keywords: [
      "sick",
      "ill",
      "confused",
      "nauseous",
      "nausea"
    ],
    skins: [
      {
        unified: "1f635-200d-1f4ab",
        native: "😵‍💫"
      }
    ],
    version: 13.1
  },
  exploding_head: {
    id: "exploding_head",
    name: "Exploding Head",
    keywords: [
      "shocked",
      "face",
      "with",
      "mind",
      "blown"
    ],
    skins: [
      {
        unified: "1f92f",
        native: "🤯"
      }
    ],
    version: 5
  },
  face_with_cowboy_hat: {
    id: "face_with_cowboy_hat",
    name: "Cowboy Hat Face",
    keywords: [
      "with",
      "cowgirl"
    ],
    skins: [
      {
        unified: "1f920",
        native: "🤠"
      }
    ],
    version: 3
  },
  partying_face: {
    id: "partying_face",
    name: "Partying Face",
    keywords: [
      "celebration",
      "woohoo"
    ],
    skins: [
      {
        unified: "1f973",
        native: "🥳"
      }
    ],
    version: 11
  },
  disguised_face: {
    id: "disguised_face",
    name: "Disguised Face",
    keywords: [
      "pretent",
      "brows",
      "glasses",
      "moustache"
    ],
    skins: [
      {
        unified: "1f978",
        native: "🥸"
      }
    ],
    version: 13
  },
  sunglasses: {
    id: "sunglasses",
    name: "Smiling Face with Sunglasses",
    emoticons: [
      "8)"
    ],
    keywords: [
      "cool",
      "smile",
      "summer",
      "beach",
      "sunglass"
    ],
    skins: [
      {
        unified: "1f60e",
        native: "😎"
      }
    ],
    version: 1
  },
  nerd_face: {
    id: "nerd_face",
    name: "Nerd Face",
    keywords: [
      "nerdy",
      "geek",
      "dork"
    ],
    skins: [
      {
        unified: "1f913",
        native: "🤓"
      }
    ],
    version: 1
  },
  face_with_monocle: {
    id: "face_with_monocle",
    name: "Face with Monocle",
    keywords: [
      "stuffy",
      "wealthy"
    ],
    skins: [
      {
        unified: "1f9d0",
        native: "🧐"
      }
    ],
    version: 5
  },
  confused: {
    id: "confused",
    name: "Confused Face",
    emoticons: [
      ":\\",
      ":-\\",
      ":/",
      ":-/"
    ],
    keywords: [
      "indifference",
      "huh",
      "weird",
      "hmmm",
      ":/"
    ],
    skins: [
      {
        unified: "1f615",
        native: "😕"
      }
    ],
    version: 1
  },
  face_with_diagonal_mouth: {
    id: "face_with_diagonal_mouth",
    name: "Face with Diagonal Mouth",
    keywords: [
      "skeptic",
      "confuse",
      "frustrated",
      "indifferent"
    ],
    skins: [
      {
        unified: "1fae4",
        native: "🫤"
      }
    ],
    version: 14
  },
  worried: {
    id: "worried",
    name: "Worried Face",
    keywords: [
      "concern",
      "nervous",
      ":("
    ],
    skins: [
      {
        unified: "1f61f",
        native: "😟"
      }
    ],
    version: 1
  },
  slightly_frowning_face: {
    id: "slightly_frowning_face",
    name: "Slightly Frowning Face",
    keywords: [
      "disappointed",
      "sad",
      "upset"
    ],
    skins: [
      {
        unified: "1f641",
        native: "🙁"
      }
    ],
    version: 1
  },
  white_frowning_face: {
    id: "white_frowning_face",
    name: "Frowning Face",
    keywords: [
      "white",
      "sad",
      "upset",
      "frown"
    ],
    skins: [
      {
        unified: "2639-fe0f",
        native: "☹️"
      }
    ],
    version: 1
  },
  open_mouth: {
    id: "open_mouth",
    name: "Face with Open Mouth",
    emoticons: [
      ":o",
      ":-o",
      ":O",
      ":-O"
    ],
    keywords: [
      "surprise",
      "impressed",
      "wow",
      "whoa",
      ":O"
    ],
    skins: [
      {
        unified: "1f62e",
        native: "😮"
      }
    ],
    version: 1
  },
  hushed: {
    id: "hushed",
    name: "Hushed Face",
    keywords: [
      "woo",
      "shh"
    ],
    skins: [
      {
        unified: "1f62f",
        native: "😯"
      }
    ],
    version: 1
  },
  astonished: {
    id: "astonished",
    name: "Astonished Face",
    keywords: [
      "xox",
      "surprised",
      "poisoned"
    ],
    skins: [
      {
        unified: "1f632",
        native: "😲"
      }
    ],
    version: 1
  },
  flushed: {
    id: "flushed",
    name: "Flushed Face",
    keywords: [
      "blush",
      "shy",
      "flattered"
    ],
    skins: [
      {
        unified: "1f633",
        native: "😳"
      }
    ],
    version: 1
  },
  pleading_face: {
    id: "pleading_face",
    name: "Pleading Face",
    keywords: [
      "begging",
      "mercy",
      "cry",
      "tears",
      "sad",
      "grievance"
    ],
    skins: [
      {
        unified: "1f97a",
        native: "🥺"
      }
    ],
    version: 11
  },
  face_holding_back_tears: {
    id: "face_holding_back_tears",
    name: "Face Holding Back Tears",
    keywords: [
      "touched",
      "gratitude",
      "cry"
    ],
    skins: [
      {
        unified: "1f979",
        native: "🥹"
      }
    ],
    version: 14
  },
  frowning: {
    id: "frowning",
    name: "Frowning Face with Open Mouth",
    keywords: [
      "aw",
      "what"
    ],
    skins: [
      {
        unified: "1f626",
        native: "😦"
      }
    ],
    version: 1
  },
  anguished: {
    id: "anguished",
    name: "Anguished Face",
    emoticons: [
      "D:"
    ],
    keywords: [
      "stunned",
      "nervous"
    ],
    skins: [
      {
        unified: "1f627",
        native: "😧"
      }
    ],
    version: 1
  },
  fearful: {
    id: "fearful",
    name: "Fearful Face",
    keywords: [
      "scared",
      "terrified",
      "nervous"
    ],
    skins: [
      {
        unified: "1f628",
        native: "😨"
      }
    ],
    version: 1
  },
  cold_sweat: {
    id: "cold_sweat",
    name: "Anxious Face with Sweat",
    keywords: [
      "cold",
      "nervous"
    ],
    skins: [
      {
        unified: "1f630",
        native: "😰"
      }
    ],
    version: 1
  },
  disappointed_relieved: {
    id: "disappointed_relieved",
    name: "Sad but Relieved Face",
    keywords: [
      "disappointed",
      "phew",
      "sweat",
      "nervous"
    ],
    skins: [
      {
        unified: "1f625",
        native: "😥"
      }
    ],
    version: 1
  },
  cry: {
    id: "cry",
    name: "Crying Face",
    emoticons: [
      ":'("
    ],
    keywords: [
      "cry",
      "tears",
      "sad",
      "depressed",
      "upset",
      ":'("
    ],
    skins: [
      {
        unified: "1f622",
        native: "😢"
      }
    ],
    version: 1
  },
  sob: {
    id: "sob",
    name: "Loudly Crying Face",
    emoticons: [
      ":'("
    ],
    keywords: [
      "sob",
      "cry",
      "tears",
      "sad",
      "upset",
      "depressed"
    ],
    skins: [
      {
        unified: "1f62d",
        native: "😭"
      }
    ],
    version: 1
  },
  scream: {
    id: "scream",
    name: "Face Screaming in Fear",
    keywords: [
      "scream",
      "munch",
      "scared",
      "omg"
    ],
    skins: [
      {
        unified: "1f631",
        native: "😱"
      }
    ],
    version: 1
  },
  confounded: {
    id: "confounded",
    name: "Confounded Face",
    keywords: [
      "confused",
      "sick",
      "unwell",
      "oops",
      ":S"
    ],
    skins: [
      {
        unified: "1f616",
        native: "😖"
      }
    ],
    version: 1
  },
  persevere: {
    id: "persevere",
    name: "Persevering Face",
    keywords: [
      "persevere",
      "sick",
      "no",
      "upset",
      "oops"
    ],
    skins: [
      {
        unified: "1f623",
        native: "😣"
      }
    ],
    version: 1
  },
  disappointed: {
    id: "disappointed",
    name: "Disappointed Face",
    emoticons: [
      "):",
      ":(",
      ":-("
    ],
    keywords: [
      "sad",
      "upset",
      "depressed",
      ":("
    ],
    skins: [
      {
        unified: "1f61e",
        native: "😞"
      }
    ],
    version: 1
  },
  sweat: {
    id: "sweat",
    name: "Face with Cold Sweat",
    keywords: [
      "downcast",
      "hot",
      "sad",
      "tired",
      "exercise"
    ],
    skins: [
      {
        unified: "1f613",
        native: "😓"
      }
    ],
    version: 1
  },
  weary: {
    id: "weary",
    name: "Weary Face",
    keywords: [
      "tired",
      "sleepy",
      "sad",
      "frustrated",
      "upset"
    ],
    skins: [
      {
        unified: "1f629",
        native: "😩"
      }
    ],
    version: 1
  },
  tired_face: {
    id: "tired_face",
    name: "Tired Face",
    keywords: [
      "sick",
      "whine",
      "upset",
      "frustrated"
    ],
    skins: [
      {
        unified: "1f62b",
        native: "😫"
      }
    ],
    version: 1
  },
  yawning_face: {
    id: "yawning_face",
    name: "Yawning Face",
    keywords: [
      "tired",
      "sleepy"
    ],
    skins: [
      {
        unified: "1f971",
        native: "🥱"
      }
    ],
    version: 12
  },
  triumph: {
    id: "triumph",
    name: "Face with Look of Triumph",
    keywords: [
      "steam",
      "from",
      "nose",
      "gas",
      "phew",
      "proud",
      "pride"
    ],
    skins: [
      {
        unified: "1f624",
        native: "😤"
      }
    ],
    version: 1
  },
  rage: {
    id: "rage",
    name: "Pouting Face",
    keywords: [
      "rage",
      "angry",
      "mad",
      "hate",
      "despise"
    ],
    skins: [
      {
        unified: "1f621",
        native: "😡"
      }
    ],
    version: 1
  },
  angry: {
    id: "angry",
    name: "Angry Face",
    emoticons: [
      ">:(",
      ">:-("
    ],
    keywords: [
      "mad",
      "annoyed",
      "frustrated"
    ],
    skins: [
      {
        unified: "1f620",
        native: "😠"
      }
    ],
    version: 1
  },
  face_with_symbols_on_mouth: {
    id: "face_with_symbols_on_mouth",
    name: "Face with Symbols on Mouth",
    keywords: [
      "serious",
      "covering",
      "swearing",
      "cursing",
      "cussing",
      "profanity",
      "expletive"
    ],
    skins: [
      {
        unified: "1f92c",
        native: "🤬"
      }
    ],
    version: 5
  },
  smiling_imp: {
    id: "smiling_imp",
    name: "Smiling Face with Horns",
    keywords: [
      "imp",
      "devil"
    ],
    skins: [
      {
        unified: "1f608",
        native: "😈"
      }
    ],
    version: 1
  },
  imp: {
    id: "imp",
    name: "Imp",
    keywords: [
      "angry",
      "face",
      "with",
      "horns",
      "devil"
    ],
    skins: [
      {
        unified: "1f47f",
        native: "👿"
      }
    ],
    version: 1
  },
  skull: {
    id: "skull",
    name: "Skull",
    keywords: [
      "dead",
      "skeleton",
      "creepy",
      "death"
    ],
    skins: [
      {
        unified: "1f480",
        native: "💀"
      }
    ],
    version: 1
  },
  skull_and_crossbones: {
    id: "skull_and_crossbones",
    name: "Skull and Crossbones",
    keywords: [
      "poison",
      "danger",
      "deadly",
      "scary",
      "death",
      "pirate",
      "evil"
    ],
    skins: [
      {
        unified: "2620-fe0f",
        native: "☠️"
      }
    ],
    version: 1
  },
  hankey: {
    id: "hankey",
    name: "Pile of Poo",
    keywords: [
      "hankey",
      "poop",
      "shit",
      "shitface",
      "fail",
      "turd"
    ],
    skins: [
      {
        unified: "1f4a9",
        native: "💩"
      }
    ],
    version: 1
  },
  clown_face: {
    id: "clown_face",
    name: "Clown Face",
    keywords: [],
    skins: [
      {
        unified: "1f921",
        native: "🤡"
      }
    ],
    version: 3
  },
  japanese_ogre: {
    id: "japanese_ogre",
    name: "Ogre",
    keywords: [
      "japanese",
      "monster",
      "red",
      "mask",
      "halloween",
      "scary",
      "creepy",
      "devil",
      "demon"
    ],
    skins: [
      {
        unified: "1f479",
        native: "👹"
      }
    ],
    version: 1
  },
  japanese_goblin: {
    id: "japanese_goblin",
    name: "Goblin",
    keywords: [
      "japanese",
      "red",
      "evil",
      "mask",
      "monster",
      "scary",
      "creepy"
    ],
    skins: [
      {
        unified: "1f47a",
        native: "👺"
      }
    ],
    version: 1
  },
  ghost: {
    id: "ghost",
    name: "Ghost",
    keywords: [
      "halloween",
      "spooky",
      "scary"
    ],
    skins: [
      {
        unified: "1f47b",
        native: "👻"
      }
    ],
    version: 1
  },
  alien: {
    id: "alien",
    name: "Alien",
    keywords: [
      "UFO",
      "paul",
      "weird",
      "outer",
      "space"
    ],
    skins: [
      {
        unified: "1f47d",
        native: "👽"
      }
    ],
    version: 1
  },
  space_invader: {
    id: "space_invader",
    name: "Alien Monster",
    keywords: [
      "space",
      "invader",
      "game",
      "arcade",
      "play"
    ],
    skins: [
      {
        unified: "1f47e",
        native: "👾"
      }
    ],
    version: 1
  },
  robot_face: {
    id: "robot_face",
    name: "Robot",
    keywords: [
      "face",
      "computer",
      "machine",
      "bot"
    ],
    skins: [
      {
        unified: "1f916",
        native: "🤖"
      }
    ],
    version: 1
  },
  smiley_cat: {
    id: "smiley_cat",
    name: "Grinning Cat",
    keywords: [
      "smiley",
      "animal",
      "cats",
      "happy",
      "smile"
    ],
    skins: [
      {
        unified: "1f63a",
        native: "😺"
      }
    ],
    version: 1
  },
  smile_cat: {
    id: "smile_cat",
    name: "Grinning Cat with Smiling Eyes",
    keywords: [
      "smile",
      "animal",
      "cats"
    ],
    skins: [
      {
        unified: "1f638",
        native: "😸"
      }
    ],
    version: 1
  },
  joy_cat: {
    id: "joy_cat",
    name: "Cat with Tears of Joy",
    keywords: [
      "animal",
      "cats",
      "haha",
      "happy"
    ],
    skins: [
      {
        unified: "1f639",
        native: "😹"
      }
    ],
    version: 1
  },
  heart_eyes_cat: {
    id: "heart_eyes_cat",
    name: "Smiling Cat with Heart-Eyes",
    keywords: [
      "heart",
      "eyes",
      "animal",
      "love",
      "like",
      "affection",
      "cats",
      "valentines"
    ],
    skins: [
      {
        unified: "1f63b",
        native: "😻"
      }
    ],
    version: 1
  },
  smirk_cat: {
    id: "smirk_cat",
    name: "Cat with Wry Smile",
    keywords: [
      "smirk",
      "animal",
      "cats"
    ],
    skins: [
      {
        unified: "1f63c",
        native: "😼"
      }
    ],
    version: 1
  },
  kissing_cat: {
    id: "kissing_cat",
    name: "Kissing Cat",
    keywords: [
      "animal",
      "cats",
      "kiss"
    ],
    skins: [
      {
        unified: "1f63d",
        native: "😽"
      }
    ],
    version: 1
  },
  scream_cat: {
    id: "scream_cat",
    name: "Weary Cat",
    keywords: [
      "scream",
      "animal",
      "cats",
      "munch",
      "scared"
    ],
    skins: [
      {
        unified: "1f640",
        native: "🙀"
      }
    ],
    version: 1
  },
  crying_cat_face: {
    id: "crying_cat_face",
    name: "Crying Cat",
    keywords: [
      "face",
      "animal",
      "tears",
      "weep",
      "sad",
      "cats",
      "upset",
      "cry"
    ],
    skins: [
      {
        unified: "1f63f",
        native: "😿"
      }
    ],
    version: 1
  },
  pouting_cat: {
    id: "pouting_cat",
    name: "Pouting Cat",
    keywords: [
      "animal",
      "cats"
    ],
    skins: [
      {
        unified: "1f63e",
        native: "😾"
      }
    ],
    version: 1
  },
  see_no_evil: {
    id: "see_no_evil",
    name: "See-No-Evil Monkey",
    keywords: [
      "see",
      "no",
      "evil",
      "animal",
      "nature",
      "haha"
    ],
    skins: [
      {
        unified: "1f648",
        native: "🙈"
      }
    ],
    version: 1
  },
  hear_no_evil: {
    id: "hear_no_evil",
    name: "Hear-No-Evil Monkey",
    keywords: [
      "hear",
      "no",
      "evil",
      "animal",
      "nature"
    ],
    skins: [
      {
        unified: "1f649",
        native: "🙉"
      }
    ],
    version: 1
  },
  speak_no_evil: {
    id: "speak_no_evil",
    name: "Speak-No-Evil Monkey",
    keywords: [
      "speak",
      "no",
      "evil",
      "animal",
      "nature",
      "omg"
    ],
    skins: [
      {
        unified: "1f64a",
        native: "🙊"
      }
    ],
    version: 1
  },
  love_letter: {
    id: "love_letter",
    name: "Love Letter",
    keywords: [
      "email",
      "like",
      "affection",
      "envelope",
      "valentines"
    ],
    skins: [
      {
        unified: "1f48c",
        native: "💌"
      }
    ],
    version: 1
  },
  cupid: {
    id: "cupid",
    name: "Heart with Arrow",
    keywords: [
      "cupid",
      "love",
      "like",
      "affection",
      "valentines"
    ],
    skins: [
      {
        unified: "1f498",
        native: "💘"
      }
    ],
    version: 1
  },
  gift_heart: {
    id: "gift_heart",
    name: "Heart with Ribbon",
    keywords: [
      "gift",
      "love",
      "valentines"
    ],
    skins: [
      {
        unified: "1f49d",
        native: "💝"
      }
    ],
    version: 1
  },
  sparkling_heart: {
    id: "sparkling_heart",
    name: "Sparkling Heart",
    keywords: [
      "love",
      "like",
      "affection",
      "valentines"
    ],
    skins: [
      {
        unified: "1f496",
        native: "💖"
      }
    ],
    version: 1
  },
  heartpulse: {
    id: "heartpulse",
    name: "Growing Heart",
    keywords: [
      "heartpulse",
      "like",
      "love",
      "affection",
      "valentines",
      "pink"
    ],
    skins: [
      {
        unified: "1f497",
        native: "💗"
      }
    ],
    version: 1
  },
  heartbeat: {
    id: "heartbeat",
    name: "Beating Heart",
    keywords: [
      "heartbeat",
      "love",
      "like",
      "affection",
      "valentines",
      "pink"
    ],
    skins: [
      {
        unified: "1f493",
        native: "💓"
      }
    ],
    version: 1
  },
  revolving_hearts: {
    id: "revolving_hearts",
    name: "Revolving Hearts",
    keywords: [
      "love",
      "like",
      "affection",
      "valentines"
    ],
    skins: [
      {
        unified: "1f49e",
        native: "💞"
      }
    ],
    version: 1
  },
  two_hearts: {
    id: "two_hearts",
    name: "Two Hearts",
    keywords: [
      "love",
      "like",
      "affection",
      "valentines",
      "heart"
    ],
    skins: [
      {
        unified: "1f495",
        native: "💕"
      }
    ],
    version: 1
  },
  heart_decoration: {
    id: "heart_decoration",
    name: "Heart Decoration",
    keywords: [
      "purple",
      "square",
      "love",
      "like"
    ],
    skins: [
      {
        unified: "1f49f",
        native: "💟"
      }
    ],
    version: 1
  },
  heavy_heart_exclamation_mark_ornament: {
    id: "heavy_heart_exclamation_mark_ornament",
    name: "Heart Exclamation",
    keywords: [
      "heavy",
      "mark",
      "ornament",
      "decoration",
      "love"
    ],
    skins: [
      {
        unified: "2763-fe0f",
        native: "❣️"
      }
    ],
    version: 1
  },
  broken_heart: {
    id: "broken_heart",
    name: "Broken Heart",
    emoticons: [
      "</3"
    ],
    keywords: [
      "sad",
      "sorry",
      "break",
      "heartbreak"
    ],
    skins: [
      {
        unified: "1f494",
        native: "💔"
      }
    ],
    version: 1
  },
  heart_on_fire: {
    id: "heart_on_fire",
    name: "Heart on Fire",
    keywords: [
      "passionate",
      "enthusiastic"
    ],
    skins: [
      {
        unified: "2764-fe0f-200d-1f525",
        native: "❤️‍🔥"
      }
    ],
    version: 13.1
  },
  mending_heart: {
    id: "mending_heart",
    name: "Mending Heart",
    keywords: [
      "broken",
      "bandage",
      "wounded"
    ],
    skins: [
      {
        unified: "2764-fe0f-200d-1fa79",
        native: "❤️‍🩹"
      }
    ],
    version: 13.1
  },
  heart: {
    id: "heart",
    name: "Red Heart",
    emoticons: [
      "<3"
    ],
    keywords: [
      "love",
      "like",
      "valentines"
    ],
    skins: [
      {
        unified: "2764-fe0f",
        native: "❤️"
      }
    ],
    version: 1
  },
  pink_heart: {
    id: "pink_heart",
    name: "Pink Heart",
    keywords: [
      "valentines"
    ],
    skins: [
      {
        unified: "1fa77",
        native: "🩷"
      }
    ],
    version: 15
  },
  orange_heart: {
    id: "orange_heart",
    name: "Orange Heart",
    keywords: [
      "love",
      "like",
      "affection",
      "valentines"
    ],
    skins: [
      {
        unified: "1f9e1",
        native: "🧡"
      }
    ],
    version: 5
  },
  yellow_heart: {
    id: "yellow_heart",
    name: "Yellow Heart",
    emoticons: [
      "<3"
    ],
    keywords: [
      "love",
      "like",
      "affection",
      "valentines"
    ],
    skins: [
      {
        unified: "1f49b",
        native: "💛"
      }
    ],
    version: 1
  },
  green_heart: {
    id: "green_heart",
    name: "Green Heart",
    emoticons: [
      "<3"
    ],
    keywords: [
      "love",
      "like",
      "affection",
      "valentines"
    ],
    skins: [
      {
        unified: "1f49a",
        native: "💚"
      }
    ],
    version: 1
  },
  blue_heart: {
    id: "blue_heart",
    name: "Blue Heart",
    emoticons: [
      "<3"
    ],
    keywords: [
      "love",
      "like",
      "affection",
      "valentines"
    ],
    skins: [
      {
        unified: "1f499",
        native: "💙"
      }
    ],
    version: 1
  },
  light_blue_heart: {
    id: "light_blue_heart",
    name: "Light Blue Heart",
    keywords: [
      "ice",
      "baby"
    ],
    skins: [
      {
        unified: "1fa75",
        native: "🩵"
      }
    ],
    version: 15
  },
  purple_heart: {
    id: "purple_heart",
    name: "Purple Heart",
    emoticons: [
      "<3"
    ],
    keywords: [
      "love",
      "like",
      "affection",
      "valentines"
    ],
    skins: [
      {
        unified: "1f49c",
        native: "💜"
      }
    ],
    version: 1
  },
  brown_heart: {
    id: "brown_heart",
    name: "Brown Heart",
    keywords: [
      "coffee"
    ],
    skins: [
      {
        unified: "1f90e",
        native: "🤎"
      }
    ],
    version: 12
  },
  black_heart: {
    id: "black_heart",
    name: "Black Heart",
    keywords: [
      "evil"
    ],
    skins: [
      {
        unified: "1f5a4",
        native: "🖤"
      }
    ],
    version: 3
  },
  grey_heart: {
    id: "grey_heart",
    name: "Grey Heart",
    keywords: [
      "silver",
      "monochrome"
    ],
    skins: [
      {
        unified: "1fa76",
        native: "🩶"
      }
    ],
    version: 15
  },
  white_heart: {
    id: "white_heart",
    name: "White Heart",
    keywords: [
      "pure"
    ],
    skins: [
      {
        unified: "1f90d",
        native: "🤍"
      }
    ],
    version: 12
  },
  kiss: {
    id: "kiss",
    name: "Kiss Mark",
    keywords: [
      "face",
      "lips",
      "love",
      "like",
      "affection",
      "valentines"
    ],
    skins: [
      {
        unified: "1f48b",
        native: "💋"
      }
    ],
    version: 1
  },
  anger: {
    id: "anger",
    name: "Anger Symbol",
    keywords: [
      "angry",
      "mad"
    ],
    skins: [
      {
        unified: "1f4a2",
        native: "💢"
      }
    ],
    version: 1
  },
  boom: {
    id: "boom",
    name: "Collision",
    keywords: [
      "boom",
      "bomb",
      "explode",
      "explosion",
      "blown"
    ],
    skins: [
      {
        unified: "1f4a5",
        native: "💥"
      }
    ],
    version: 1
  },
  dizzy: {
    id: "dizzy",
    name: "Dizzy",
    keywords: [
      "star",
      "sparkle",
      "shoot",
      "magic"
    ],
    skins: [
      {
        unified: "1f4ab",
        native: "💫"
      }
    ],
    version: 1
  },
  sweat_drops: {
    id: "sweat_drops",
    name: "Sweat Droplets",
    keywords: [
      "drops",
      "water",
      "drip",
      "oops"
    ],
    skins: [
      {
        unified: "1f4a6",
        native: "💦"
      }
    ],
    version: 1
  },
  dash: {
    id: "dash",
    name: "Dash Symbol",
    keywords: [
      "dashing",
      "away",
      "wind",
      "air",
      "fast",
      "shoo",
      "fart",
      "smoke",
      "puff"
    ],
    skins: [
      {
        unified: "1f4a8",
        native: "💨"
      }
    ],
    version: 1
  },
  hole: {
    id: "hole",
    name: "Hole",
    keywords: [
      "embarrassing"
    ],
    skins: [
      {
        unified: "1f573-fe0f",
        native: "🕳️"
      }
    ],
    version: 1
  },
  speech_balloon: {
    id: "speech_balloon",
    name: "Speech Balloon",
    keywords: [
      "bubble",
      "words",
      "message",
      "talk",
      "chatting"
    ],
    skins: [
      {
        unified: "1f4ac",
        native: "💬"
      }
    ],
    version: 1
  },
  "eye-in-speech-bubble": {
    id: "eye-in-speech-bubble",
    name: "Eye in Speech Bubble",
    keywords: [
      "in-speech-bubble",
      "info"
    ],
    skins: [
      {
        unified: "1f441-fe0f-200d-1f5e8-fe0f",
        native: "👁️‍🗨️"
      }
    ],
    version: 2
  },
  left_speech_bubble: {
    id: "left_speech_bubble",
    name: "Left Speech Bubble",
    keywords: [
      "words",
      "message",
      "talk",
      "chatting"
    ],
    skins: [
      {
        unified: "1f5e8-fe0f",
        native: "🗨️"
      }
    ],
    version: 2
  },
  right_anger_bubble: {
    id: "right_anger_bubble",
    name: "Right Anger Bubble",
    keywords: [
      "caption",
      "speech",
      "thinking",
      "mad"
    ],
    skins: [
      {
        unified: "1f5ef-fe0f",
        native: "🗯️"
      }
    ],
    version: 1
  },
  thought_balloon: {
    id: "thought_balloon",
    name: "Thought Balloon",
    keywords: [
      "bubble",
      "cloud",
      "speech",
      "thinking",
      "dream"
    ],
    skins: [
      {
        unified: "1f4ad",
        native: "💭"
      }
    ],
    version: 1
  },
  zzz: {
    id: "zzz",
    name: "Zzz",
    keywords: [
      "sleepy",
      "tired",
      "dream"
    ],
    skins: [
      {
        unified: "1f4a4",
        native: "💤"
      }
    ],
    version: 1
  },
  wave: {
    id: "wave",
    name: "Waving Hand",
    keywords: [
      "wave",
      "hands",
      "gesture",
      "goodbye",
      "solong",
      "farewell",
      "hello",
      "hi",
      "palm"
    ],
    skins: [
      {
        unified: "1f44b",
        native: "👋"
      },
      {
        unified: "1f44b-1f3fb",
        native: "👋🏻"
      },
      {
        unified: "1f44b-1f3fc",
        native: "👋🏼"
      },
      {
        unified: "1f44b-1f3fd",
        native: "👋🏽"
      },
      {
        unified: "1f44b-1f3fe",
        native: "👋🏾"
      },
      {
        unified: "1f44b-1f3ff",
        native: "👋🏿"
      }
    ],
    version: 1
  },
  raised_back_of_hand: {
    id: "raised_back_of_hand",
    name: "Raised Back of Hand",
    keywords: [
      "fingers",
      "backhand"
    ],
    skins: [
      {
        unified: "1f91a",
        native: "🤚"
      },
      {
        unified: "1f91a-1f3fb",
        native: "🤚🏻"
      },
      {
        unified: "1f91a-1f3fc",
        native: "🤚🏼"
      },
      {
        unified: "1f91a-1f3fd",
        native: "🤚🏽"
      },
      {
        unified: "1f91a-1f3fe",
        native: "🤚🏾"
      },
      {
        unified: "1f91a-1f3ff",
        native: "🤚🏿"
      }
    ],
    version: 3
  },
  raised_hand_with_fingers_splayed: {
    id: "raised_hand_with_fingers_splayed",
    name: "Hand with Fingers Splayed",
    keywords: [
      "raised",
      "palm"
    ],
    skins: [
      {
        unified: "1f590-fe0f",
        native: "🖐️"
      },
      {
        unified: "1f590-1f3fb",
        native: "🖐🏻"
      },
      {
        unified: "1f590-1f3fc",
        native: "🖐🏼"
      },
      {
        unified: "1f590-1f3fd",
        native: "🖐🏽"
      },
      {
        unified: "1f590-1f3fe",
        native: "🖐🏾"
      },
      {
        unified: "1f590-1f3ff",
        native: "🖐🏿"
      }
    ],
    version: 1
  },
  hand: {
    id: "hand",
    name: "Raised Hand",
    keywords: [
      "fingers",
      "stop",
      "highfive",
      "high",
      "five",
      "palm",
      "ban"
    ],
    skins: [
      {
        unified: "270b",
        native: "✋"
      },
      {
        unified: "270b-1f3fb",
        native: "✋🏻"
      },
      {
        unified: "270b-1f3fc",
        native: "✋🏼"
      },
      {
        unified: "270b-1f3fd",
        native: "✋🏽"
      },
      {
        unified: "270b-1f3fe",
        native: "✋🏾"
      },
      {
        unified: "270b-1f3ff",
        native: "✋🏿"
      }
    ],
    version: 1
  },
  "spock-hand": {
    id: "spock-hand",
    name: "Vulcan Salute",
    keywords: [
      "spock",
      "hand",
      "fingers",
      "star",
      "trek"
    ],
    skins: [
      {
        unified: "1f596",
        native: "🖖"
      },
      {
        unified: "1f596-1f3fb",
        native: "🖖🏻"
      },
      {
        unified: "1f596-1f3fc",
        native: "🖖🏼"
      },
      {
        unified: "1f596-1f3fd",
        native: "🖖🏽"
      },
      {
        unified: "1f596-1f3fe",
        native: "🖖🏾"
      },
      {
        unified: "1f596-1f3ff",
        native: "🖖🏿"
      }
    ],
    version: 1
  },
  rightwards_hand: {
    id: "rightwards_hand",
    name: "Rightwards Hand",
    keywords: [
      "palm",
      "offer"
    ],
    skins: [
      {
        unified: "1faf1",
        native: "🫱"
      },
      {
        unified: "1faf1-1f3fb",
        native: "🫱🏻"
      },
      {
        unified: "1faf1-1f3fc",
        native: "🫱🏼"
      },
      {
        unified: "1faf1-1f3fd",
        native: "🫱🏽"
      },
      {
        unified: "1faf1-1f3fe",
        native: "🫱🏾"
      },
      {
        unified: "1faf1-1f3ff",
        native: "🫱🏿"
      }
    ],
    version: 14
  },
  leftwards_hand: {
    id: "leftwards_hand",
    name: "Leftwards Hand",
    keywords: [
      "palm",
      "offer"
    ],
    skins: [
      {
        unified: "1faf2",
        native: "🫲"
      },
      {
        unified: "1faf2-1f3fb",
        native: "🫲🏻"
      },
      {
        unified: "1faf2-1f3fc",
        native: "🫲🏼"
      },
      {
        unified: "1faf2-1f3fd",
        native: "🫲🏽"
      },
      {
        unified: "1faf2-1f3fe",
        native: "🫲🏾"
      },
      {
        unified: "1faf2-1f3ff",
        native: "🫲🏿"
      }
    ],
    version: 14
  },
  palm_down_hand: {
    id: "palm_down_hand",
    name: "Palm Down Hand",
    keywords: [
      "drop"
    ],
    skins: [
      {
        unified: "1faf3",
        native: "🫳"
      },
      {
        unified: "1faf3-1f3fb",
        native: "🫳🏻"
      },
      {
        unified: "1faf3-1f3fc",
        native: "🫳🏼"
      },
      {
        unified: "1faf3-1f3fd",
        native: "🫳🏽"
      },
      {
        unified: "1faf3-1f3fe",
        native: "🫳🏾"
      },
      {
        unified: "1faf3-1f3ff",
        native: "🫳🏿"
      }
    ],
    version: 14
  },
  palm_up_hand: {
    id: "palm_up_hand",
    name: "Palm Up Hand",
    keywords: [
      "lift",
      "offer",
      "demand"
    ],
    skins: [
      {
        unified: "1faf4",
        native: "🫴"
      },
      {
        unified: "1faf4-1f3fb",
        native: "🫴🏻"
      },
      {
        unified: "1faf4-1f3fc",
        native: "🫴🏼"
      },
      {
        unified: "1faf4-1f3fd",
        native: "🫴🏽"
      },
      {
        unified: "1faf4-1f3fe",
        native: "🫴🏾"
      },
      {
        unified: "1faf4-1f3ff",
        native: "🫴🏿"
      }
    ],
    version: 14
  },
  leftwards_pushing_hand: {
    id: "leftwards_pushing_hand",
    name: "Leftwards Pushing Hand",
    keywords: [
      "highfive",
      "high",
      "five",
      "pressing",
      "stop"
    ],
    skins: [
      {
        unified: "1faf7",
        native: "🫷"
      },
      {
        unified: "1faf7-1f3fb",
        native: "🫷🏻"
      },
      {
        unified: "1faf7-1f3fc",
        native: "🫷🏼"
      },
      {
        unified: "1faf7-1f3fd",
        native: "🫷🏽"
      },
      {
        unified: "1faf7-1f3fe",
        native: "🫷🏾"
      },
      {
        unified: "1faf7-1f3ff",
        native: "🫷🏿"
      }
    ],
    version: 15
  },
  rightwards_pushing_hand: {
    id: "rightwards_pushing_hand",
    name: "Rightwards Pushing Hand",
    keywords: [
      "highfive",
      "high",
      "five",
      "pressing",
      "stop"
    ],
    skins: [
      {
        unified: "1faf8",
        native: "🫸"
      },
      {
        unified: "1faf8-1f3fb",
        native: "🫸🏻"
      },
      {
        unified: "1faf8-1f3fc",
        native: "🫸🏼"
      },
      {
        unified: "1faf8-1f3fd",
        native: "🫸🏽"
      },
      {
        unified: "1faf8-1f3fe",
        native: "🫸🏾"
      },
      {
        unified: "1faf8-1f3ff",
        native: "🫸🏿"
      }
    ],
    version: 15
  },
  ok_hand: {
    id: "ok_hand",
    name: "Ok Hand",
    keywords: [
      "fingers",
      "limbs",
      "perfect",
      "okay"
    ],
    skins: [
      {
        unified: "1f44c",
        native: "👌"
      },
      {
        unified: "1f44c-1f3fb",
        native: "👌🏻"
      },
      {
        unified: "1f44c-1f3fc",
        native: "👌🏼"
      },
      {
        unified: "1f44c-1f3fd",
        native: "👌🏽"
      },
      {
        unified: "1f44c-1f3fe",
        native: "👌🏾"
      },
      {
        unified: "1f44c-1f3ff",
        native: "👌🏿"
      }
    ],
    version: 1
  },
  pinched_fingers: {
    id: "pinched_fingers",
    name: "Pinched Fingers",
    keywords: [
      "size",
      "tiny",
      "small"
    ],
    skins: [
      {
        unified: "1f90c",
        native: "🤌"
      },
      {
        unified: "1f90c-1f3fb",
        native: "🤌🏻"
      },
      {
        unified: "1f90c-1f3fc",
        native: "🤌🏼"
      },
      {
        unified: "1f90c-1f3fd",
        native: "🤌🏽"
      },
      {
        unified: "1f90c-1f3fe",
        native: "🤌🏾"
      },
      {
        unified: "1f90c-1f3ff",
        native: "🤌🏿"
      }
    ],
    version: 13
  },
  pinching_hand: {
    id: "pinching_hand",
    name: "Pinching Hand",
    keywords: [
      "tiny",
      "small",
      "size"
    ],
    skins: [
      {
        unified: "1f90f",
        native: "🤏"
      },
      {
        unified: "1f90f-1f3fb",
        native: "🤏🏻"
      },
      {
        unified: "1f90f-1f3fc",
        native: "🤏🏼"
      },
      {
        unified: "1f90f-1f3fd",
        native: "🤏🏽"
      },
      {
        unified: "1f90f-1f3fe",
        native: "🤏🏾"
      },
      {
        unified: "1f90f-1f3ff",
        native: "🤏🏿"
      }
    ],
    version: 12
  },
  v: {
    id: "v",
    name: "Victory Hand",
    keywords: [
      "v",
      "fingers",
      "ohyeah",
      "peace",
      "two"
    ],
    skins: [
      {
        unified: "270c-fe0f",
        native: "✌️"
      },
      {
        unified: "270c-1f3fb",
        native: "✌🏻"
      },
      {
        unified: "270c-1f3fc",
        native: "✌🏼"
      },
      {
        unified: "270c-1f3fd",
        native: "✌🏽"
      },
      {
        unified: "270c-1f3fe",
        native: "✌🏾"
      },
      {
        unified: "270c-1f3ff",
        native: "✌🏿"
      }
    ],
    version: 1
  },
  crossed_fingers: {
    id: "crossed_fingers",
    name: "Crossed Fingers",
    keywords: [
      "hand",
      "with",
      "index",
      "and",
      "middle",
      "good",
      "lucky"
    ],
    skins: [
      {
        unified: "1f91e",
        native: "🤞"
      },
      {
        unified: "1f91e-1f3fb",
        native: "🤞🏻"
      },
      {
        unified: "1f91e-1f3fc",
        native: "🤞🏼"
      },
      {
        unified: "1f91e-1f3fd",
        native: "🤞🏽"
      },
      {
        unified: "1f91e-1f3fe",
        native: "🤞🏾"
      },
      {
        unified: "1f91e-1f3ff",
        native: "🤞🏿"
      }
    ],
    version: 3
  },
  hand_with_index_finger_and_thumb_crossed: {
    id: "hand_with_index_finger_and_thumb_crossed",
    name: "Hand with Index Finger and Thumb Crossed",
    keywords: [
      "heart",
      "love",
      "money",
      "expensive"
    ],
    skins: [
      {
        unified: "1faf0",
        native: "🫰"
      },
      {
        unified: "1faf0-1f3fb",
        native: "🫰🏻"
      },
      {
        unified: "1faf0-1f3fc",
        native: "🫰🏼"
      },
      {
        unified: "1faf0-1f3fd",
        native: "🫰🏽"
      },
      {
        unified: "1faf0-1f3fe",
        native: "🫰🏾"
      },
      {
        unified: "1faf0-1f3ff",
        native: "🫰🏿"
      }
    ],
    version: 14
  },
  i_love_you_hand_sign: {
    id: "i_love_you_hand_sign",
    name: "Love-You Gesture",
    keywords: [
      "i",
      "love",
      "you",
      "hand",
      "sign",
      "fingers"
    ],
    skins: [
      {
        unified: "1f91f",
        native: "🤟"
      },
      {
        unified: "1f91f-1f3fb",
        native: "🤟🏻"
      },
      {
        unified: "1f91f-1f3fc",
        native: "🤟🏼"
      },
      {
        unified: "1f91f-1f3fd",
        native: "🤟🏽"
      },
      {
        unified: "1f91f-1f3fe",
        native: "🤟🏾"
      },
      {
        unified: "1f91f-1f3ff",
        native: "🤟🏿"
      }
    ],
    version: 5
  },
  the_horns: {
    id: "the_horns",
    name: "Sign of the Horns",
    keywords: [
      "hand",
      "fingers",
      "evil",
      "eye",
      "rock",
      "on"
    ],
    skins: [
      {
        unified: "1f918",
        native: "🤘"
      },
      {
        unified: "1f918-1f3fb",
        native: "🤘🏻"
      },
      {
        unified: "1f918-1f3fc",
        native: "🤘🏼"
      },
      {
        unified: "1f918-1f3fd",
        native: "🤘🏽"
      },
      {
        unified: "1f918-1f3fe",
        native: "🤘🏾"
      },
      {
        unified: "1f918-1f3ff",
        native: "🤘🏿"
      }
    ],
    version: 1
  },
  call_me_hand: {
    id: "call_me_hand",
    name: "Call Me Hand",
    keywords: [
      "hands",
      "gesture",
      "shaka"
    ],
    skins: [
      {
        unified: "1f919",
        native: "🤙"
      },
      {
        unified: "1f919-1f3fb",
        native: "🤙🏻"
      },
      {
        unified: "1f919-1f3fc",
        native: "🤙🏼"
      },
      {
        unified: "1f919-1f3fd",
        native: "🤙🏽"
      },
      {
        unified: "1f919-1f3fe",
        native: "🤙🏾"
      },
      {
        unified: "1f919-1f3ff",
        native: "🤙🏿"
      }
    ],
    version: 3
  },
  point_left: {
    id: "point_left",
    name: "Backhand Index Pointing Left",
    keywords: [
      "point",
      "direction",
      "fingers",
      "hand"
    ],
    skins: [
      {
        unified: "1f448",
        native: "👈"
      },
      {
        unified: "1f448-1f3fb",
        native: "👈🏻"
      },
      {
        unified: "1f448-1f3fc",
        native: "👈🏼"
      },
      {
        unified: "1f448-1f3fd",
        native: "👈🏽"
      },
      {
        unified: "1f448-1f3fe",
        native: "👈🏾"
      },
      {
        unified: "1f448-1f3ff",
        native: "👈🏿"
      }
    ],
    version: 1
  },
  point_right: {
    id: "point_right",
    name: "Backhand Index Pointing Right",
    keywords: [
      "point",
      "fingers",
      "hand",
      "direction"
    ],
    skins: [
      {
        unified: "1f449",
        native: "👉"
      },
      {
        unified: "1f449-1f3fb",
        native: "👉🏻"
      },
      {
        unified: "1f449-1f3fc",
        native: "👉🏼"
      },
      {
        unified: "1f449-1f3fd",
        native: "👉🏽"
      },
      {
        unified: "1f449-1f3fe",
        native: "👉🏾"
      },
      {
        unified: "1f449-1f3ff",
        native: "👉🏿"
      }
    ],
    version: 1
  },
  point_up_2: {
    id: "point_up_2",
    name: "Backhand Index Pointing Up",
    keywords: [
      "point",
      "2",
      "fingers",
      "hand",
      "direction"
    ],
    skins: [
      {
        unified: "1f446",
        native: "👆"
      },
      {
        unified: "1f446-1f3fb",
        native: "👆🏻"
      },
      {
        unified: "1f446-1f3fc",
        native: "👆🏼"
      },
      {
        unified: "1f446-1f3fd",
        native: "👆🏽"
      },
      {
        unified: "1f446-1f3fe",
        native: "👆🏾"
      },
      {
        unified: "1f446-1f3ff",
        native: "👆🏿"
      }
    ],
    version: 1
  },
  middle_finger: {
    id: "middle_finger",
    name: "Middle Finger",
    keywords: [
      "reversed",
      "hand",
      "with",
      "extended",
      "fingers",
      "rude",
      "flipping"
    ],
    skins: [
      {
        unified: "1f595",
        native: "🖕"
      },
      {
        unified: "1f595-1f3fb",
        native: "🖕🏻"
      },
      {
        unified: "1f595-1f3fc",
        native: "🖕🏼"
      },
      {
        unified: "1f595-1f3fd",
        native: "🖕🏽"
      },
      {
        unified: "1f595-1f3fe",
        native: "🖕🏾"
      },
      {
        unified: "1f595-1f3ff",
        native: "🖕🏿"
      }
    ],
    version: 1
  },
  point_down: {
    id: "point_down",
    name: "Backhand Index Pointing Down",
    keywords: [
      "point",
      "fingers",
      "hand",
      "direction"
    ],
    skins: [
      {
        unified: "1f447",
        native: "👇"
      },
      {
        unified: "1f447-1f3fb",
        native: "👇🏻"
      },
      {
        unified: "1f447-1f3fc",
        native: "👇🏼"
      },
      {
        unified: "1f447-1f3fd",
        native: "👇🏽"
      },
      {
        unified: "1f447-1f3fe",
        native: "👇🏾"
      },
      {
        unified: "1f447-1f3ff",
        native: "👇🏿"
      }
    ],
    version: 1
  },
  point_up: {
    id: "point_up",
    name: "Index Pointing Up",
    keywords: [
      "point",
      "hand",
      "fingers",
      "direction"
    ],
    skins: [
      {
        unified: "261d-fe0f",
        native: "☝️"
      },
      {
        unified: "261d-1f3fb",
        native: "☝🏻"
      },
      {
        unified: "261d-1f3fc",
        native: "☝🏼"
      },
      {
        unified: "261d-1f3fd",
        native: "☝🏽"
      },
      {
        unified: "261d-1f3fe",
        native: "☝🏾"
      },
      {
        unified: "261d-1f3ff",
        native: "☝🏿"
      }
    ],
    version: 1
  },
  index_pointing_at_the_viewer: {
    id: "index_pointing_at_the_viewer",
    name: "Index Pointing at the Viewer",
    keywords: [
      "you",
      "recruit"
    ],
    skins: [
      {
        unified: "1faf5",
        native: "🫵"
      },
      {
        unified: "1faf5-1f3fb",
        native: "🫵🏻"
      },
      {
        unified: "1faf5-1f3fc",
        native: "🫵🏼"
      },
      {
        unified: "1faf5-1f3fd",
        native: "🫵🏽"
      },
      {
        unified: "1faf5-1f3fe",
        native: "🫵🏾"
      },
      {
        unified: "1faf5-1f3ff",
        native: "🫵🏿"
      }
    ],
    version: 14
  },
  "+1": {
    id: "+1",
    name: "Thumbs Up",
    keywords: [
      "+1",
      "thumbsup",
      "yes",
      "awesome",
      "good",
      "agree",
      "accept",
      "cool",
      "hand",
      "like"
    ],
    skins: [
      {
        unified: "1f44d",
        native: "👍"
      },
      {
        unified: "1f44d-1f3fb",
        native: "👍🏻"
      },
      {
        unified: "1f44d-1f3fc",
        native: "👍🏼"
      },
      {
        unified: "1f44d-1f3fd",
        native: "👍🏽"
      },
      {
        unified: "1f44d-1f3fe",
        native: "👍🏾"
      },
      {
        unified: "1f44d-1f3ff",
        native: "👍🏿"
      }
    ],
    version: 1
  },
  "-1": {
    id: "-1",
    name: "Thumbs Down",
    keywords: [
      "-1",
      "thumbsdown",
      "no",
      "dislike",
      "hand"
    ],
    skins: [
      {
        unified: "1f44e",
        native: "👎"
      },
      {
        unified: "1f44e-1f3fb",
        native: "👎🏻"
      },
      {
        unified: "1f44e-1f3fc",
        native: "👎🏼"
      },
      {
        unified: "1f44e-1f3fd",
        native: "👎🏽"
      },
      {
        unified: "1f44e-1f3fe",
        native: "👎🏾"
      },
      {
        unified: "1f44e-1f3ff",
        native: "👎🏿"
      }
    ],
    version: 1
  },
  fist: {
    id: "fist",
    name: "Raised Fist",
    keywords: [
      "fingers",
      "hand",
      "grasp"
    ],
    skins: [
      {
        unified: "270a",
        native: "✊"
      },
      {
        unified: "270a-1f3fb",
        native: "✊🏻"
      },
      {
        unified: "270a-1f3fc",
        native: "✊🏼"
      },
      {
        unified: "270a-1f3fd",
        native: "✊🏽"
      },
      {
        unified: "270a-1f3fe",
        native: "✊🏾"
      },
      {
        unified: "270a-1f3ff",
        native: "✊🏿"
      }
    ],
    version: 1
  },
  facepunch: {
    id: "facepunch",
    name: "Oncoming Fist",
    keywords: [
      "facepunch",
      "punch",
      "angry",
      "violence",
      "hit",
      "attack",
      "hand"
    ],
    skins: [
      {
        unified: "1f44a",
        native: "👊"
      },
      {
        unified: "1f44a-1f3fb",
        native: "👊🏻"
      },
      {
        unified: "1f44a-1f3fc",
        native: "👊🏼"
      },
      {
        unified: "1f44a-1f3fd",
        native: "👊🏽"
      },
      {
        unified: "1f44a-1f3fe",
        native: "👊🏾"
      },
      {
        unified: "1f44a-1f3ff",
        native: "👊🏿"
      }
    ],
    version: 1
  },
  "left-facing_fist": {
    id: "left-facing_fist",
    name: "Left-Facing Fist",
    keywords: [
      "left",
      "facing",
      "hand",
      "fistbump"
    ],
    skins: [
      {
        unified: "1f91b",
        native: "🤛"
      },
      {
        unified: "1f91b-1f3fb",
        native: "🤛🏻"
      },
      {
        unified: "1f91b-1f3fc",
        native: "🤛🏼"
      },
      {
        unified: "1f91b-1f3fd",
        native: "🤛🏽"
      },
      {
        unified: "1f91b-1f3fe",
        native: "🤛🏾"
      },
      {
        unified: "1f91b-1f3ff",
        native: "🤛🏿"
      }
    ],
    version: 3
  },
  "right-facing_fist": {
    id: "right-facing_fist",
    name: "Right-Facing Fist",
    keywords: [
      "right",
      "facing",
      "hand",
      "fistbump"
    ],
    skins: [
      {
        unified: "1f91c",
        native: "🤜"
      },
      {
        unified: "1f91c-1f3fb",
        native: "🤜🏻"
      },
      {
        unified: "1f91c-1f3fc",
        native: "🤜🏼"
      },
      {
        unified: "1f91c-1f3fd",
        native: "🤜🏽"
      },
      {
        unified: "1f91c-1f3fe",
        native: "🤜🏾"
      },
      {
        unified: "1f91c-1f3ff",
        native: "🤜🏿"
      }
    ],
    version: 3
  },
  clap: {
    id: "clap",
    name: "Clapping Hands",
    keywords: [
      "clap",
      "praise",
      "applause",
      "congrats",
      "yay"
    ],
    skins: [
      {
        unified: "1f44f",
        native: "👏"
      },
      {
        unified: "1f44f-1f3fb",
        native: "👏🏻"
      },
      {
        unified: "1f44f-1f3fc",
        native: "👏🏼"
      },
      {
        unified: "1f44f-1f3fd",
        native: "👏🏽"
      },
      {
        unified: "1f44f-1f3fe",
        native: "👏🏾"
      },
      {
        unified: "1f44f-1f3ff",
        native: "👏🏿"
      }
    ],
    version: 1
  },
  raised_hands: {
    id: "raised_hands",
    name: "Raising Hands",
    keywords: [
      "raised",
      "gesture",
      "hooray",
      "yea",
      "celebration"
    ],
    skins: [
      {
        unified: "1f64c",
        native: "🙌"
      },
      {
        unified: "1f64c-1f3fb",
        native: "🙌🏻"
      },
      {
        unified: "1f64c-1f3fc",
        native: "🙌🏼"
      },
      {
        unified: "1f64c-1f3fd",
        native: "🙌🏽"
      },
      {
        unified: "1f64c-1f3fe",
        native: "🙌🏾"
      },
      {
        unified: "1f64c-1f3ff",
        native: "🙌🏿"
      }
    ],
    version: 1
  },
  heart_hands: {
    id: "heart_hands",
    name: "Heart Hands",
    keywords: [
      "love",
      "appreciation",
      "support"
    ],
    skins: [
      {
        unified: "1faf6",
        native: "🫶"
      },
      {
        unified: "1faf6-1f3fb",
        native: "🫶🏻"
      },
      {
        unified: "1faf6-1f3fc",
        native: "🫶🏼"
      },
      {
        unified: "1faf6-1f3fd",
        native: "🫶🏽"
      },
      {
        unified: "1faf6-1f3fe",
        native: "🫶🏾"
      },
      {
        unified: "1faf6-1f3ff",
        native: "🫶🏿"
      }
    ],
    version: 14
  },
  open_hands: {
    id: "open_hands",
    name: "Open Hands",
    keywords: [
      "fingers",
      "butterfly"
    ],
    skins: [
      {
        unified: "1f450",
        native: "👐"
      },
      {
        unified: "1f450-1f3fb",
        native: "👐🏻"
      },
      {
        unified: "1f450-1f3fc",
        native: "👐🏼"
      },
      {
        unified: "1f450-1f3fd",
        native: "👐🏽"
      },
      {
        unified: "1f450-1f3fe",
        native: "👐🏾"
      },
      {
        unified: "1f450-1f3ff",
        native: "👐🏿"
      }
    ],
    version: 1
  },
  palms_up_together: {
    id: "palms_up_together",
    name: "Palms Up Together",
    keywords: [
      "hands",
      "gesture",
      "cupped",
      "prayer"
    ],
    skins: [
      {
        unified: "1f932",
        native: "🤲"
      },
      {
        unified: "1f932-1f3fb",
        native: "🤲🏻"
      },
      {
        unified: "1f932-1f3fc",
        native: "🤲🏼"
      },
      {
        unified: "1f932-1f3fd",
        native: "🤲🏽"
      },
      {
        unified: "1f932-1f3fe",
        native: "🤲🏾"
      },
      {
        unified: "1f932-1f3ff",
        native: "🤲🏿"
      }
    ],
    version: 5
  },
  handshake: {
    id: "handshake",
    name: "Handshake",
    keywords: [
      "agreement",
      "shake"
    ],
    skins: [
      {
        unified: "1f91d",
        native: "🤝"
      },
      {
        unified: "1f91d-1f3fb",
        native: "🤝🏻"
      },
      {
        unified: "1f91d-1f3fc",
        native: "🤝🏼"
      },
      {
        unified: "1f91d-1f3fd",
        native: "🤝🏽"
      },
      {
        unified: "1f91d-1f3fe",
        native: "🤝🏾"
      },
      {
        unified: "1f91d-1f3ff",
        native: "🤝🏿"
      }
    ],
    version: 3
  },
  pray: {
    id: "pray",
    name: "Folded Hands",
    keywords: [
      "pray",
      "please",
      "hope",
      "wish",
      "namaste",
      "highfive",
      "high",
      "five",
      "thank",
      "you",
      "thanks",
      "appreciate"
    ],
    skins: [
      {
        unified: "1f64f",
        native: "🙏"
      },
      {
        unified: "1f64f-1f3fb",
        native: "🙏🏻"
      },
      {
        unified: "1f64f-1f3fc",
        native: "🙏🏼"
      },
      {
        unified: "1f64f-1f3fd",
        native: "🙏🏽"
      },
      {
        unified: "1f64f-1f3fe",
        native: "🙏🏾"
      },
      {
        unified: "1f64f-1f3ff",
        native: "🙏🏿"
      }
    ],
    version: 1
  },
  writing_hand: {
    id: "writing_hand",
    name: "Writing Hand",
    keywords: [
      "lower",
      "left",
      "ballpoint",
      "pen",
      "stationery",
      "write",
      "compose"
    ],
    skins: [
      {
        unified: "270d-fe0f",
        native: "✍️"
      },
      {
        unified: "270d-1f3fb",
        native: "✍🏻"
      },
      {
        unified: "270d-1f3fc",
        native: "✍🏼"
      },
      {
        unified: "270d-1f3fd",
        native: "✍🏽"
      },
      {
        unified: "270d-1f3fe",
        native: "✍🏾"
      },
      {
        unified: "270d-1f3ff",
        native: "✍🏿"
      }
    ],
    version: 1
  },
  nail_care: {
    id: "nail_care",
    name: "Nail Polish",
    keywords: [
      "care",
      "beauty",
      "manicure",
      "finger",
      "fashion"
    ],
    skins: [
      {
        unified: "1f485",
        native: "💅"
      },
      {
        unified: "1f485-1f3fb",
        native: "💅🏻"
      },
      {
        unified: "1f485-1f3fc",
        native: "💅🏼"
      },
      {
        unified: "1f485-1f3fd",
        native: "💅🏽"
      },
      {
        unified: "1f485-1f3fe",
        native: "💅🏾"
      },
      {
        unified: "1f485-1f3ff",
        native: "💅🏿"
      }
    ],
    version: 1
  },
  selfie: {
    id: "selfie",
    name: "Selfie",
    keywords: [
      "camera",
      "phone"
    ],
    skins: [
      {
        unified: "1f933",
        native: "🤳"
      },
      {
        unified: "1f933-1f3fb",
        native: "🤳🏻"
      },
      {
        unified: "1f933-1f3fc",
        native: "🤳🏼"
      },
      {
        unified: "1f933-1f3fd",
        native: "🤳🏽"
      },
      {
        unified: "1f933-1f3fe",
        native: "🤳🏾"
      },
      {
        unified: "1f933-1f3ff",
        native: "🤳🏿"
      }
    ],
    version: 3
  },
  muscle: {
    id: "muscle",
    name: "Flexed Biceps",
    keywords: [
      "muscle",
      "arm",
      "flex",
      "hand",
      "summer",
      "strong"
    ],
    skins: [
      {
        unified: "1f4aa",
        native: "💪"
      },
      {
        unified: "1f4aa-1f3fb",
        native: "💪🏻"
      },
      {
        unified: "1f4aa-1f3fc",
        native: "💪🏼"
      },
      {
        unified: "1f4aa-1f3fd",
        native: "💪🏽"
      },
      {
        unified: "1f4aa-1f3fe",
        native: "💪🏾"
      },
      {
        unified: "1f4aa-1f3ff",
        native: "💪🏿"
      }
    ],
    version: 1
  },
  mechanical_arm: {
    id: "mechanical_arm",
    name: "Mechanical Arm",
    keywords: [
      "accessibility"
    ],
    skins: [
      {
        unified: "1f9be",
        native: "🦾"
      }
    ],
    version: 12
  },
  mechanical_leg: {
    id: "mechanical_leg",
    name: "Mechanical Leg",
    keywords: [
      "accessibility"
    ],
    skins: [
      {
        unified: "1f9bf",
        native: "🦿"
      }
    ],
    version: 12
  },
  leg: {
    id: "leg",
    name: "Leg",
    keywords: [
      "kick",
      "limb"
    ],
    skins: [
      {
        unified: "1f9b5",
        native: "🦵"
      },
      {
        unified: "1f9b5-1f3fb",
        native: "🦵🏻"
      },
      {
        unified: "1f9b5-1f3fc",
        native: "🦵🏼"
      },
      {
        unified: "1f9b5-1f3fd",
        native: "🦵🏽"
      },
      {
        unified: "1f9b5-1f3fe",
        native: "🦵🏾"
      },
      {
        unified: "1f9b5-1f3ff",
        native: "🦵🏿"
      }
    ],
    version: 11
  },
  foot: {
    id: "foot",
    name: "Foot",
    keywords: [
      "kick",
      "stomp"
    ],
    skins: [
      {
        unified: "1f9b6",
        native: "🦶"
      },
      {
        unified: "1f9b6-1f3fb",
        native: "🦶🏻"
      },
      {
        unified: "1f9b6-1f3fc",
        native: "🦶🏼"
      },
      {
        unified: "1f9b6-1f3fd",
        native: "🦶🏽"
      },
      {
        unified: "1f9b6-1f3fe",
        native: "🦶🏾"
      },
      {
        unified: "1f9b6-1f3ff",
        native: "🦶🏿"
      }
    ],
    version: 11
  },
  ear: {
    id: "ear",
    name: "Ear",
    keywords: [
      "face",
      "hear",
      "sound",
      "listen"
    ],
    skins: [
      {
        unified: "1f442",
        native: "👂"
      },
      {
        unified: "1f442-1f3fb",
        native: "👂🏻"
      },
      {
        unified: "1f442-1f3fc",
        native: "👂🏼"
      },
      {
        unified: "1f442-1f3fd",
        native: "👂🏽"
      },
      {
        unified: "1f442-1f3fe",
        native: "👂🏾"
      },
      {
        unified: "1f442-1f3ff",
        native: "👂🏿"
      }
    ],
    version: 1
  },
  ear_with_hearing_aid: {
    id: "ear_with_hearing_aid",
    name: "Ear with Hearing Aid",
    keywords: [
      "accessibility"
    ],
    skins: [
      {
        unified: "1f9bb",
        native: "🦻"
      },
      {
        unified: "1f9bb-1f3fb",
        native: "🦻🏻"
      },
      {
        unified: "1f9bb-1f3fc",
        native: "🦻🏼"
      },
      {
        unified: "1f9bb-1f3fd",
        native: "🦻🏽"
      },
      {
        unified: "1f9bb-1f3fe",
        native: "🦻🏾"
      },
      {
        unified: "1f9bb-1f3ff",
        native: "🦻🏿"
      }
    ],
    version: 12
  },
  nose: {
    id: "nose",
    name: "Nose",
    keywords: [
      "smell",
      "sniff"
    ],
    skins: [
      {
        unified: "1f443",
        native: "👃"
      },
      {
        unified: "1f443-1f3fb",
        native: "👃🏻"
      },
      {
        unified: "1f443-1f3fc",
        native: "👃🏼"
      },
      {
        unified: "1f443-1f3fd",
        native: "👃🏽"
      },
      {
        unified: "1f443-1f3fe",
        native: "👃🏾"
      },
      {
        unified: "1f443-1f3ff",
        native: "👃🏿"
      }
    ],
    version: 1
  },
  brain: {
    id: "brain",
    name: "Brain",
    keywords: [
      "smart",
      "intelligent"
    ],
    skins: [
      {
        unified: "1f9e0",
        native: "🧠"
      }
    ],
    version: 5
  },
  anatomical_heart: {
    id: "anatomical_heart",
    name: "Anatomical Heart",
    keywords: [
      "health",
      "heartbeat"
    ],
    skins: [
      {
        unified: "1fac0",
        native: "🫀"
      }
    ],
    version: 13
  },
  lungs: {
    id: "lungs",
    name: "Lungs",
    keywords: [
      "breathe"
    ],
    skins: [
      {
        unified: "1fac1",
        native: "🫁"
      }
    ],
    version: 13
  },
  tooth: {
    id: "tooth",
    name: "Tooth",
    keywords: [
      "teeth",
      "dentist"
    ],
    skins: [
      {
        unified: "1f9b7",
        native: "🦷"
      }
    ],
    version: 11
  },
  bone: {
    id: "bone",
    name: "Bone",
    keywords: [
      "skeleton"
    ],
    skins: [
      {
        unified: "1f9b4",
        native: "🦴"
      }
    ],
    version: 11
  },
  eyes: {
    id: "eyes",
    name: "Eyes",
    keywords: [
      "look",
      "watch",
      "stalk",
      "peek",
      "see"
    ],
    skins: [
      {
        unified: "1f440",
        native: "👀"
      }
    ],
    version: 1
  },
  eye: {
    id: "eye",
    name: "Eye",
    keywords: [
      "face",
      "look",
      "see",
      "watch",
      "stare"
    ],
    skins: [
      {
        unified: "1f441-fe0f",
        native: "👁️"
      }
    ],
    version: 1
  },
  tongue: {
    id: "tongue",
    name: "Tongue",
    keywords: [
      "mouth",
      "playful"
    ],
    skins: [
      {
        unified: "1f445",
        native: "👅"
      }
    ],
    version: 1
  },
  lips: {
    id: "lips",
    name: "Mouth",
    keywords: [
      "lips",
      "kiss"
    ],
    skins: [
      {
        unified: "1f444",
        native: "👄"
      }
    ],
    version: 1
  },
  biting_lip: {
    id: "biting_lip",
    name: "Biting Lip",
    keywords: [
      "flirt",
      "sexy",
      "pain",
      "worry"
    ],
    skins: [
      {
        unified: "1fae6",
        native: "🫦"
      }
    ],
    version: 14
  },
  baby: {
    id: "baby",
    name: "Baby",
    keywords: [
      "child",
      "boy",
      "girl",
      "toddler"
    ],
    skins: [
      {
        unified: "1f476",
        native: "👶"
      },
      {
        unified: "1f476-1f3fb",
        native: "👶🏻"
      },
      {
        unified: "1f476-1f3fc",
        native: "👶🏼"
      },
      {
        unified: "1f476-1f3fd",
        native: "👶🏽"
      },
      {
        unified: "1f476-1f3fe",
        native: "👶🏾"
      },
      {
        unified: "1f476-1f3ff",
        native: "👶🏿"
      }
    ],
    version: 1
  },
  child: {
    id: "child",
    name: "Child",
    keywords: [
      "gender",
      "neutral",
      "young"
    ],
    skins: [
      {
        unified: "1f9d2",
        native: "🧒"
      },
      {
        unified: "1f9d2-1f3fb",
        native: "🧒🏻"
      },
      {
        unified: "1f9d2-1f3fc",
        native: "🧒🏼"
      },
      {
        unified: "1f9d2-1f3fd",
        native: "🧒🏽"
      },
      {
        unified: "1f9d2-1f3fe",
        native: "🧒🏾"
      },
      {
        unified: "1f9d2-1f3ff",
        native: "🧒🏿"
      }
    ],
    version: 5
  },
  boy: {
    id: "boy",
    name: "Boy",
    keywords: [
      "man",
      "male",
      "guy",
      "teenager"
    ],
    skins: [
      {
        unified: "1f466",
        native: "👦"
      },
      {
        unified: "1f466-1f3fb",
        native: "👦🏻"
      },
      {
        unified: "1f466-1f3fc",
        native: "👦🏼"
      },
      {
        unified: "1f466-1f3fd",
        native: "👦🏽"
      },
      {
        unified: "1f466-1f3fe",
        native: "👦🏾"
      },
      {
        unified: "1f466-1f3ff",
        native: "👦🏿"
      }
    ],
    version: 1
  },
  girl: {
    id: "girl",
    name: "Girl",
    keywords: [
      "female",
      "woman",
      "teenager"
    ],
    skins: [
      {
        unified: "1f467",
        native: "👧"
      },
      {
        unified: "1f467-1f3fb",
        native: "👧🏻"
      },
      {
        unified: "1f467-1f3fc",
        native: "👧🏼"
      },
      {
        unified: "1f467-1f3fd",
        native: "👧🏽"
      },
      {
        unified: "1f467-1f3fe",
        native: "👧🏾"
      },
      {
        unified: "1f467-1f3ff",
        native: "👧🏿"
      }
    ],
    version: 1
  },
  adult: {
    id: "adult",
    name: "Adult",
    keywords: [
      "person",
      "gender",
      "neutral"
    ],
    skins: [
      {
        unified: "1f9d1",
        native: "🧑"
      },
      {
        unified: "1f9d1-1f3fb",
        native: "🧑🏻"
      },
      {
        unified: "1f9d1-1f3fc",
        native: "🧑🏼"
      },
      {
        unified: "1f9d1-1f3fd",
        native: "🧑🏽"
      },
      {
        unified: "1f9d1-1f3fe",
        native: "🧑🏾"
      },
      {
        unified: "1f9d1-1f3ff",
        native: "🧑🏿"
      }
    ],
    version: 5
  },
  person_with_blond_hair: {
    id: "person_with_blond_hair",
    name: "Person Blond Hair",
    keywords: [
      "with",
      "hairstyle"
    ],
    skins: [
      {
        unified: "1f471",
        native: "👱"
      },
      {
        unified: "1f471-1f3fb",
        native: "👱🏻"
      },
      {
        unified: "1f471-1f3fc",
        native: "👱🏼"
      },
      {
        unified: "1f471-1f3fd",
        native: "👱🏽"
      },
      {
        unified: "1f471-1f3fe",
        native: "👱🏾"
      },
      {
        unified: "1f471-1f3ff",
        native: "👱🏿"
      }
    ],
    version: 1
  },
  man: {
    id: "man",
    name: "Man",
    keywords: [
      "mustache",
      "father",
      "dad",
      "guy",
      "classy",
      "sir",
      "moustache"
    ],
    skins: [
      {
        unified: "1f468",
        native: "👨"
      },
      {
        unified: "1f468-1f3fb",
        native: "👨🏻"
      },
      {
        unified: "1f468-1f3fc",
        native: "👨🏼"
      },
      {
        unified: "1f468-1f3fd",
        native: "👨🏽"
      },
      {
        unified: "1f468-1f3fe",
        native: "👨🏾"
      },
      {
        unified: "1f468-1f3ff",
        native: "👨🏿"
      }
    ],
    version: 1
  },
  bearded_person: {
    id: "bearded_person",
    name: "Person Beard",
    keywords: [
      "bearded",
      "man",
      "bewhiskered"
    ],
    skins: [
      {
        unified: "1f9d4",
        native: "🧔"
      },
      {
        unified: "1f9d4-1f3fb",
        native: "🧔🏻"
      },
      {
        unified: "1f9d4-1f3fc",
        native: "🧔🏼"
      },
      {
        unified: "1f9d4-1f3fd",
        native: "🧔🏽"
      },
      {
        unified: "1f9d4-1f3fe",
        native: "🧔🏾"
      },
      {
        unified: "1f9d4-1f3ff",
        native: "🧔🏿"
      }
    ],
    version: 5
  },
  man_with_beard: {
    id: "man_with_beard",
    name: "Man: Beard",
    keywords: [
      "man",
      "with",
      "facial",
      "hair"
    ],
    skins: [
      {
        unified: "1f9d4-200d-2642-fe0f",
        native: "🧔‍♂️"
      },
      {
        unified: "1f9d4-1f3fb-200d-2642-fe0f",
        native: "🧔🏻‍♂️"
      },
      {
        unified: "1f9d4-1f3fc-200d-2642-fe0f",
        native: "🧔🏼‍♂️"
      },
      {
        unified: "1f9d4-1f3fd-200d-2642-fe0f",
        native: "🧔🏽‍♂️"
      },
      {
        unified: "1f9d4-1f3fe-200d-2642-fe0f",
        native: "🧔🏾‍♂️"
      },
      {
        unified: "1f9d4-1f3ff-200d-2642-fe0f",
        native: "🧔🏿‍♂️"
      }
    ],
    version: 13.1
  },
  woman_with_beard: {
    id: "woman_with_beard",
    name: "Woman: Beard",
    keywords: [
      "woman",
      "with",
      "facial",
      "hair"
    ],
    skins: [
      {
        unified: "1f9d4-200d-2640-fe0f",
        native: "🧔‍♀️"
      },
      {
        unified: "1f9d4-1f3fb-200d-2640-fe0f",
        native: "🧔🏻‍♀️"
      },
      {
        unified: "1f9d4-1f3fc-200d-2640-fe0f",
        native: "🧔🏼‍♀️"
      },
      {
        unified: "1f9d4-1f3fd-200d-2640-fe0f",
        native: "🧔🏽‍♀️"
      },
      {
        unified: "1f9d4-1f3fe-200d-2640-fe0f",
        native: "🧔🏾‍♀️"
      },
      {
        unified: "1f9d4-1f3ff-200d-2640-fe0f",
        native: "🧔🏿‍♀️"
      }
    ],
    version: 13.1
  },
  red_haired_man: {
    id: "red_haired_man",
    name: "Man: Red Hair",
    keywords: [
      "haired",
      "man",
      "hairstyle"
    ],
    skins: [
      {
        unified: "1f468-200d-1f9b0",
        native: "👨‍🦰"
      },
      {
        unified: "1f468-1f3fb-200d-1f9b0",
        native: "👨🏻‍🦰"
      },
      {
        unified: "1f468-1f3fc-200d-1f9b0",
        native: "👨🏼‍🦰"
      },
      {
        unified: "1f468-1f3fd-200d-1f9b0",
        native: "👨🏽‍🦰"
      },
      {
        unified: "1f468-1f3fe-200d-1f9b0",
        native: "👨🏾‍🦰"
      },
      {
        unified: "1f468-1f3ff-200d-1f9b0",
        native: "👨🏿‍🦰"
      }
    ],
    version: 11
  },
  curly_haired_man: {
    id: "curly_haired_man",
    name: "Man: Curly Hair",
    keywords: [
      "haired",
      "man",
      "hairstyle"
    ],
    skins: [
      {
        unified: "1f468-200d-1f9b1",
        native: "👨‍🦱"
      },
      {
        unified: "1f468-1f3fb-200d-1f9b1",
        native: "👨🏻‍🦱"
      },
      {
        unified: "1f468-1f3fc-200d-1f9b1",
        native: "👨🏼‍🦱"
      },
      {
        unified: "1f468-1f3fd-200d-1f9b1",
        native: "👨🏽‍🦱"
      },
      {
        unified: "1f468-1f3fe-200d-1f9b1",
        native: "👨🏾‍🦱"
      },
      {
        unified: "1f468-1f3ff-200d-1f9b1",
        native: "👨🏿‍🦱"
      }
    ],
    version: 11
  },
  white_haired_man: {
    id: "white_haired_man",
    name: "Man: White Hair",
    keywords: [
      "haired",
      "man",
      "old",
      "elder"
    ],
    skins: [
      {
        unified: "1f468-200d-1f9b3",
        native: "👨‍🦳"
      },
      {
        unified: "1f468-1f3fb-200d-1f9b3",
        native: "👨🏻‍🦳"
      },
      {
        unified: "1f468-1f3fc-200d-1f9b3",
        native: "👨🏼‍🦳"
      },
      {
        unified: "1f468-1f3fd-200d-1f9b3",
        native: "👨🏽‍🦳"
      },
      {
        unified: "1f468-1f3fe-200d-1f9b3",
        native: "👨🏾‍🦳"
      },
      {
        unified: "1f468-1f3ff-200d-1f9b3",
        native: "👨🏿‍🦳"
      }
    ],
    version: 11
  },
  bald_man: {
    id: "bald_man",
    name: "Man: Bald",
    keywords: [
      "man",
      "hairless"
    ],
    skins: [
      {
        unified: "1f468-200d-1f9b2",
        native: "👨‍🦲"
      },
      {
        unified: "1f468-1f3fb-200d-1f9b2",
        native: "👨🏻‍🦲"
      },
      {
        unified: "1f468-1f3fc-200d-1f9b2",
        native: "👨🏼‍🦲"
      },
      {
        unified: "1f468-1f3fd-200d-1f9b2",
        native: "👨🏽‍🦲"
      },
      {
        unified: "1f468-1f3fe-200d-1f9b2",
        native: "👨🏾‍🦲"
      },
      {
        unified: "1f468-1f3ff-200d-1f9b2",
        native: "👨🏿‍🦲"
      }
    ],
    version: 11
  },
  woman: {
    id: "woman",
    name: "Woman",
    keywords: [
      "female",
      "girls",
      "lady"
    ],
    skins: [
      {
        unified: "1f469",
        native: "👩"
      },
      {
        unified: "1f469-1f3fb",
        native: "👩🏻"
      },
      {
        unified: "1f469-1f3fc",
        native: "👩🏼"
      },
      {
        unified: "1f469-1f3fd",
        native: "👩🏽"
      },
      {
        unified: "1f469-1f3fe",
        native: "👩🏾"
      },
      {
        unified: "1f469-1f3ff",
        native: "👩🏿"
      }
    ],
    version: 1
  },
  red_haired_woman: {
    id: "red_haired_woman",
    name: "Woman: Red Hair",
    keywords: [
      "haired",
      "woman",
      "hairstyle"
    ],
    skins: [
      {
        unified: "1f469-200d-1f9b0",
        native: "👩‍🦰"
      },
      {
        unified: "1f469-1f3fb-200d-1f9b0",
        native: "👩🏻‍🦰"
      },
      {
        unified: "1f469-1f3fc-200d-1f9b0",
        native: "👩🏼‍🦰"
      },
      {
        unified: "1f469-1f3fd-200d-1f9b0",
        native: "👩🏽‍🦰"
      },
      {
        unified: "1f469-1f3fe-200d-1f9b0",
        native: "👩🏾‍🦰"
      },
      {
        unified: "1f469-1f3ff-200d-1f9b0",
        native: "👩🏿‍🦰"
      }
    ],
    version: 11
  },
  red_haired_person: {
    id: "red_haired_person",
    name: "Person: Red Hair",
    keywords: [
      "haired",
      "person",
      "hairstyle"
    ],
    skins: [
      {
        unified: "1f9d1-200d-1f9b0",
        native: "🧑‍🦰"
      },
      {
        unified: "1f9d1-1f3fb-200d-1f9b0",
        native: "🧑🏻‍🦰"
      },
      {
        unified: "1f9d1-1f3fc-200d-1f9b0",
        native: "🧑🏼‍🦰"
      },
      {
        unified: "1f9d1-1f3fd-200d-1f9b0",
        native: "🧑🏽‍🦰"
      },
      {
        unified: "1f9d1-1f3fe-200d-1f9b0",
        native: "🧑🏾‍🦰"
      },
      {
        unified: "1f9d1-1f3ff-200d-1f9b0",
        native: "🧑🏿‍🦰"
      }
    ],
    version: 12.1
  },
  curly_haired_woman: {
    id: "curly_haired_woman",
    name: "Woman: Curly Hair",
    keywords: [
      "haired",
      "woman",
      "hairstyle"
    ],
    skins: [
      {
        unified: "1f469-200d-1f9b1",
        native: "👩‍🦱"
      },
      {
        unified: "1f469-1f3fb-200d-1f9b1",
        native: "👩🏻‍🦱"
      },
      {
        unified: "1f469-1f3fc-200d-1f9b1",
        native: "👩🏼‍🦱"
      },
      {
        unified: "1f469-1f3fd-200d-1f9b1",
        native: "👩🏽‍🦱"
      },
      {
        unified: "1f469-1f3fe-200d-1f9b1",
        native: "👩🏾‍🦱"
      },
      {
        unified: "1f469-1f3ff-200d-1f9b1",
        native: "👩🏿‍🦱"
      }
    ],
    version: 11
  },
  curly_haired_person: {
    id: "curly_haired_person",
    name: "Person: Curly Hair",
    keywords: [
      "haired",
      "person",
      "hairstyle"
    ],
    skins: [
      {
        unified: "1f9d1-200d-1f9b1",
        native: "🧑‍🦱"
      },
      {
        unified: "1f9d1-1f3fb-200d-1f9b1",
        native: "🧑🏻‍🦱"
      },
      {
        unified: "1f9d1-1f3fc-200d-1f9b1",
        native: "🧑🏼‍🦱"
      },
      {
        unified: "1f9d1-1f3fd-200d-1f9b1",
        native: "🧑🏽‍🦱"
      },
      {
        unified: "1f9d1-1f3fe-200d-1f9b1",
        native: "🧑🏾‍🦱"
      },
      {
        unified: "1f9d1-1f3ff-200d-1f9b1",
        native: "🧑🏿‍🦱"
      }
    ],
    version: 12.1
  },
  white_haired_woman: {
    id: "white_haired_woman",
    name: "Woman: White Hair",
    keywords: [
      "haired",
      "woman",
      "old",
      "elder"
    ],
    skins: [
      {
        unified: "1f469-200d-1f9b3",
        native: "👩‍🦳"
      },
      {
        unified: "1f469-1f3fb-200d-1f9b3",
        native: "👩🏻‍🦳"
      },
      {
        unified: "1f469-1f3fc-200d-1f9b3",
        native: "👩🏼‍🦳"
      },
      {
        unified: "1f469-1f3fd-200d-1f9b3",
        native: "👩🏽‍🦳"
      },
      {
        unified: "1f469-1f3fe-200d-1f9b3",
        native: "👩🏾‍🦳"
      },
      {
        unified: "1f469-1f3ff-200d-1f9b3",
        native: "👩🏿‍🦳"
      }
    ],
    version: 11
  },
  white_haired_person: {
    id: "white_haired_person",
    name: "Person: White Hair",
    keywords: [
      "haired",
      "person",
      "elder",
      "old"
    ],
    skins: [
      {
        unified: "1f9d1-200d-1f9b3",
        native: "🧑‍🦳"
      },
      {
        unified: "1f9d1-1f3fb-200d-1f9b3",
        native: "🧑🏻‍🦳"
      },
      {
        unified: "1f9d1-1f3fc-200d-1f9b3",
        native: "🧑🏼‍🦳"
      },
      {
        unified: "1f9d1-1f3fd-200d-1f9b3",
        native: "🧑🏽‍🦳"
      },
      {
        unified: "1f9d1-1f3fe-200d-1f9b3",
        native: "🧑🏾‍🦳"
      },
      {
        unified: "1f9d1-1f3ff-200d-1f9b3",
        native: "🧑🏿‍🦳"
      }
    ],
    version: 12.1
  },
  bald_woman: {
    id: "bald_woman",
    name: "Woman: Bald",
    keywords: [
      "woman",
      "hairless"
    ],
    skins: [
      {
        unified: "1f469-200d-1f9b2",
        native: "👩‍🦲"
      },
      {
        unified: "1f469-1f3fb-200d-1f9b2",
        native: "👩🏻‍🦲"
      },
      {
        unified: "1f469-1f3fc-200d-1f9b2",
        native: "👩🏼‍🦲"
      },
      {
        unified: "1f469-1f3fd-200d-1f9b2",
        native: "👩🏽‍🦲"
      },
      {
        unified: "1f469-1f3fe-200d-1f9b2",
        native: "👩🏾‍🦲"
      },
      {
        unified: "1f469-1f3ff-200d-1f9b2",
        native: "👩🏿‍🦲"
      }
    ],
    version: 11
  },
  bald_person: {
    id: "bald_person",
    name: "Person: Bald",
    keywords: [
      "person",
      "hairless"
    ],
    skins: [
      {
        unified: "1f9d1-200d-1f9b2",
        native: "🧑‍🦲"
      },
      {
        unified: "1f9d1-1f3fb-200d-1f9b2",
        native: "🧑🏻‍🦲"
      },
      {
        unified: "1f9d1-1f3fc-200d-1f9b2",
        native: "🧑🏼‍🦲"
      },
      {
        unified: "1f9d1-1f3fd-200d-1f9b2",
        native: "🧑🏽‍🦲"
      },
      {
        unified: "1f9d1-1f3fe-200d-1f9b2",
        native: "🧑🏾‍🦲"
      },
      {
        unified: "1f9d1-1f3ff-200d-1f9b2",
        native: "🧑🏿‍🦲"
      }
    ],
    version: 12.1
  },
  "blond-haired-woman": {
    id: "blond-haired-woman",
    name: "Woman: Blond Hair",
    keywords: [
      "haired-woman",
      "woman",
      "female",
      "girl",
      "blonde",
      "person"
    ],
    skins: [
      {
        unified: "1f471-200d-2640-fe0f",
        native: "👱‍♀️"
      },
      {
        unified: "1f471-1f3fb-200d-2640-fe0f",
        native: "👱🏻‍♀️"
      },
      {
        unified: "1f471-1f3fc-200d-2640-fe0f",
        native: "👱🏼‍♀️"
      },
      {
        unified: "1f471-1f3fd-200d-2640-fe0f",
        native: "👱🏽‍♀️"
      },
      {
        unified: "1f471-1f3fe-200d-2640-fe0f",
        native: "👱🏾‍♀️"
      },
      {
        unified: "1f471-1f3ff-200d-2640-fe0f",
        native: "👱🏿‍♀️"
      }
    ],
    version: 4
  },
  "blond-haired-man": {
    id: "blond-haired-man",
    name: "Man: Blond Hair",
    keywords: [
      "haired-man",
      "man",
      "male",
      "boy",
      "blonde",
      "guy",
      "person"
    ],
    skins: [
      {
        unified: "1f471-200d-2642-fe0f",
        native: "👱‍♂️"
      },
      {
        unified: "1f471-1f3fb-200d-2642-fe0f",
        native: "👱🏻‍♂️"
      },
      {
        unified: "1f471-1f3fc-200d-2642-fe0f",
        native: "👱🏼‍♂️"
      },
      {
        unified: "1f471-1f3fd-200d-2642-fe0f",
        native: "👱🏽‍♂️"
      },
      {
        unified: "1f471-1f3fe-200d-2642-fe0f",
        native: "👱🏾‍♂️"
      },
      {
        unified: "1f471-1f3ff-200d-2642-fe0f",
        native: "👱🏿‍♂️"
      }
    ],
    version: 4
  },
  older_adult: {
    id: "older_adult",
    name: "Older Adult",
    keywords: [
      "person",
      "human",
      "elder",
      "senior",
      "gender",
      "neutral"
    ],
    skins: [
      {
        unified: "1f9d3",
        native: "🧓"
      },
      {
        unified: "1f9d3-1f3fb",
        native: "🧓🏻"
      },
      {
        unified: "1f9d3-1f3fc",
        native: "🧓🏼"
      },
      {
        unified: "1f9d3-1f3fd",
        native: "🧓🏽"
      },
      {
        unified: "1f9d3-1f3fe",
        native: "🧓🏾"
      },
      {
        unified: "1f9d3-1f3ff",
        native: "🧓🏿"
      }
    ],
    version: 5
  },
  older_man: {
    id: "older_man",
    name: "Old Man",
    keywords: [
      "older",
      "human",
      "male",
      "men",
      "elder",
      "senior"
    ],
    skins: [
      {
        unified: "1f474",
        native: "👴"
      },
      {
        unified: "1f474-1f3fb",
        native: "👴🏻"
      },
      {
        unified: "1f474-1f3fc",
        native: "👴🏼"
      },
      {
        unified: "1f474-1f3fd",
        native: "👴🏽"
      },
      {
        unified: "1f474-1f3fe",
        native: "👴🏾"
      },
      {
        unified: "1f474-1f3ff",
        native: "👴🏿"
      }
    ],
    version: 1
  },
  older_woman: {
    id: "older_woman",
    name: "Old Woman",
    keywords: [
      "older",
      "human",
      "female",
      "women",
      "lady",
      "elder",
      "senior"
    ],
    skins: [
      {
        unified: "1f475",
        native: "👵"
      },
      {
        unified: "1f475-1f3fb",
        native: "👵🏻"
      },
      {
        unified: "1f475-1f3fc",
        native: "👵🏼"
      },
      {
        unified: "1f475-1f3fd",
        native: "👵🏽"
      },
      {
        unified: "1f475-1f3fe",
        native: "👵🏾"
      },
      {
        unified: "1f475-1f3ff",
        native: "👵🏿"
      }
    ],
    version: 1
  },
  person_frowning: {
    id: "person_frowning",
    name: "Person Frowning",
    keywords: [
      "worried"
    ],
    skins: [
      {
        unified: "1f64d",
        native: "🙍"
      },
      {
        unified: "1f64d-1f3fb",
        native: "🙍🏻"
      },
      {
        unified: "1f64d-1f3fc",
        native: "🙍🏼"
      },
      {
        unified: "1f64d-1f3fd",
        native: "🙍🏽"
      },
      {
        unified: "1f64d-1f3fe",
        native: "🙍🏾"
      },
      {
        unified: "1f64d-1f3ff",
        native: "🙍🏿"
      }
    ],
    version: 1
  },
  "man-frowning": {
    id: "man-frowning",
    name: "Man Frowning",
    keywords: [
      "male",
      "boy",
      "sad",
      "depressed",
      "discouraged",
      "unhappy"
    ],
    skins: [
      {
        unified: "1f64d-200d-2642-fe0f",
        native: "🙍‍♂️"
      },
      {
        unified: "1f64d-1f3fb-200d-2642-fe0f",
        native: "🙍🏻‍♂️"
      },
      {
        unified: "1f64d-1f3fc-200d-2642-fe0f",
        native: "🙍🏼‍♂️"
      },
      {
        unified: "1f64d-1f3fd-200d-2642-fe0f",
        native: "🙍🏽‍♂️"
      },
      {
        unified: "1f64d-1f3fe-200d-2642-fe0f",
        native: "🙍🏾‍♂️"
      },
      {
        unified: "1f64d-1f3ff-200d-2642-fe0f",
        native: "🙍🏿‍♂️"
      }
    ],
    version: 4
  },
  "woman-frowning": {
    id: "woman-frowning",
    name: "Woman Frowning",
    keywords: [
      "female",
      "girl",
      "sad",
      "depressed",
      "discouraged",
      "unhappy"
    ],
    skins: [
      {
        unified: "1f64d-200d-2640-fe0f",
        native: "🙍‍♀️"
      },
      {
        unified: "1f64d-1f3fb-200d-2640-fe0f",
        native: "🙍🏻‍♀️"
      },
      {
        unified: "1f64d-1f3fc-200d-2640-fe0f",
        native: "🙍🏼‍♀️"
      },
      {
        unified: "1f64d-1f3fd-200d-2640-fe0f",
        native: "🙍🏽‍♀️"
      },
      {
        unified: "1f64d-1f3fe-200d-2640-fe0f",
        native: "🙍🏾‍♀️"
      },
      {
        unified: "1f64d-1f3ff-200d-2640-fe0f",
        native: "🙍🏿‍♀️"
      }
    ],
    version: 4
  },
  person_with_pouting_face: {
    id: "person_with_pouting_face",
    name: "Person Pouting",
    keywords: [
      "with",
      "face",
      "upset"
    ],
    skins: [
      {
        unified: "1f64e",
        native: "🙎"
      },
      {
        unified: "1f64e-1f3fb",
        native: "🙎🏻"
      },
      {
        unified: "1f64e-1f3fc",
        native: "🙎🏼"
      },
      {
        unified: "1f64e-1f3fd",
        native: "🙎🏽"
      },
      {
        unified: "1f64e-1f3fe",
        native: "🙎🏾"
      },
      {
        unified: "1f64e-1f3ff",
        native: "🙎🏿"
      }
    ],
    version: 1
  },
  "man-pouting": {
    id: "man-pouting",
    name: "Man Pouting",
    keywords: [
      "male",
      "boy"
    ],
    skins: [
      {
        unified: "1f64e-200d-2642-fe0f",
        native: "🙎‍♂️"
      },
      {
        unified: "1f64e-1f3fb-200d-2642-fe0f",
        native: "🙎🏻‍♂️"
      },
      {
        unified: "1f64e-1f3fc-200d-2642-fe0f",
        native: "🙎🏼‍♂️"
      },
      {
        unified: "1f64e-1f3fd-200d-2642-fe0f",
        native: "🙎🏽‍♂️"
      },
      {
        unified: "1f64e-1f3fe-200d-2642-fe0f",
        native: "🙎🏾‍♂️"
      },
      {
        unified: "1f64e-1f3ff-200d-2642-fe0f",
        native: "🙎🏿‍♂️"
      }
    ],
    version: 4
  },
  "woman-pouting": {
    id: "woman-pouting",
    name: "Woman Pouting",
    keywords: [
      "female",
      "girl"
    ],
    skins: [
      {
        unified: "1f64e-200d-2640-fe0f",
        native: "🙎‍♀️"
      },
      {
        unified: "1f64e-1f3fb-200d-2640-fe0f",
        native: "🙎🏻‍♀️"
      },
      {
        unified: "1f64e-1f3fc-200d-2640-fe0f",
        native: "🙎🏼‍♀️"
      },
      {
        unified: "1f64e-1f3fd-200d-2640-fe0f",
        native: "🙎🏽‍♀️"
      },
      {
        unified: "1f64e-1f3fe-200d-2640-fe0f",
        native: "🙎🏾‍♀️"
      },
      {
        unified: "1f64e-1f3ff-200d-2640-fe0f",
        native: "🙎🏿‍♀️"
      }
    ],
    version: 4
  },
  no_good: {
    id: "no_good",
    name: "Person Gesturing No",
    keywords: [
      "good",
      "decline"
    ],
    skins: [
      {
        unified: "1f645",
        native: "🙅"
      },
      {
        unified: "1f645-1f3fb",
        native: "🙅🏻"
      },
      {
        unified: "1f645-1f3fc",
        native: "🙅🏼"
      },
      {
        unified: "1f645-1f3fd",
        native: "🙅🏽"
      },
      {
        unified: "1f645-1f3fe",
        native: "🙅🏾"
      },
      {
        unified: "1f645-1f3ff",
        native: "🙅🏿"
      }
    ],
    version: 1
  },
  "man-gesturing-no": {
    id: "man-gesturing-no",
    name: "Man Gesturing No",
    keywords: [
      "gesturing-no",
      "male",
      "boy",
      "nope"
    ],
    skins: [
      {
        unified: "1f645-200d-2642-fe0f",
        native: "🙅‍♂️"
      },
      {
        unified: "1f645-1f3fb-200d-2642-fe0f",
        native: "🙅🏻‍♂️"
      },
      {
        unified: "1f645-1f3fc-200d-2642-fe0f",
        native: "🙅🏼‍♂️"
      },
      {
        unified: "1f645-1f3fd-200d-2642-fe0f",
        native: "🙅🏽‍♂️"
      },
      {
        unified: "1f645-1f3fe-200d-2642-fe0f",
        native: "🙅🏾‍♂️"
      },
      {
        unified: "1f645-1f3ff-200d-2642-fe0f",
        native: "🙅🏿‍♂️"
      }
    ],
    version: 4
  },
  "woman-gesturing-no": {
    id: "woman-gesturing-no",
    name: "Woman Gesturing No",
    keywords: [
      "gesturing-no",
      "female",
      "girl",
      "nope"
    ],
    skins: [
      {
        unified: "1f645-200d-2640-fe0f",
        native: "🙅‍♀️"
      },
      {
        unified: "1f645-1f3fb-200d-2640-fe0f",
        native: "🙅🏻‍♀️"
      },
      {
        unified: "1f645-1f3fc-200d-2640-fe0f",
        native: "🙅🏼‍♀️"
      },
      {
        unified: "1f645-1f3fd-200d-2640-fe0f",
        native: "🙅🏽‍♀️"
      },
      {
        unified: "1f645-1f3fe-200d-2640-fe0f",
        native: "🙅🏾‍♀️"
      },
      {
        unified: "1f645-1f3ff-200d-2640-fe0f",
        native: "🙅🏿‍♀️"
      }
    ],
    version: 4
  },
  ok_woman: {
    id: "ok_woman",
    name: "Person Gesturing Ok",
    keywords: [
      "woman",
      "agree"
    ],
    skins: [
      {
        unified: "1f646",
        native: "🙆"
      },
      {
        unified: "1f646-1f3fb",
        native: "🙆🏻"
      },
      {
        unified: "1f646-1f3fc",
        native: "🙆🏼"
      },
      {
        unified: "1f646-1f3fd",
        native: "🙆🏽"
      },
      {
        unified: "1f646-1f3fe",
        native: "🙆🏾"
      },
      {
        unified: "1f646-1f3ff",
        native: "🙆🏿"
      }
    ],
    version: 1
  },
  "man-gesturing-ok": {
    id: "man-gesturing-ok",
    name: "Man Gesturing Ok",
    keywords: [
      "gesturing-ok",
      "men",
      "boy",
      "male",
      "blue",
      "human"
    ],
    skins: [
      {
        unified: "1f646-200d-2642-fe0f",
        native: "🙆‍♂️"
      },
      {
        unified: "1f646-1f3fb-200d-2642-fe0f",
        native: "🙆🏻‍♂️"
      },
      {
        unified: "1f646-1f3fc-200d-2642-fe0f",
        native: "🙆🏼‍♂️"
      },
      {
        unified: "1f646-1f3fd-200d-2642-fe0f",
        native: "🙆🏽‍♂️"
      },
      {
        unified: "1f646-1f3fe-200d-2642-fe0f",
        native: "🙆🏾‍♂️"
      },
      {
        unified: "1f646-1f3ff-200d-2642-fe0f",
        native: "🙆🏿‍♂️"
      }
    ],
    version: 4
  },
  "woman-gesturing-ok": {
    id: "woman-gesturing-ok",
    name: "Woman Gesturing Ok",
    keywords: [
      "gesturing-ok",
      "women",
      "girl",
      "female",
      "pink",
      "human"
    ],
    skins: [
      {
        unified: "1f646-200d-2640-fe0f",
        native: "🙆‍♀️"
      },
      {
        unified: "1f646-1f3fb-200d-2640-fe0f",
        native: "🙆🏻‍♀️"
      },
      {
        unified: "1f646-1f3fc-200d-2640-fe0f",
        native: "🙆🏼‍♀️"
      },
      {
        unified: "1f646-1f3fd-200d-2640-fe0f",
        native: "🙆🏽‍♀️"
      },
      {
        unified: "1f646-1f3fe-200d-2640-fe0f",
        native: "🙆🏾‍♀️"
      },
      {
        unified: "1f646-1f3ff-200d-2640-fe0f",
        native: "🙆🏿‍♀️"
      }
    ],
    version: 4
  },
  information_desk_person: {
    id: "information_desk_person",
    name: "Person Tipping Hand",
    keywords: [
      "information",
      "desk"
    ],
    skins: [
      {
        unified: "1f481",
        native: "💁"
      },
      {
        unified: "1f481-1f3fb",
        native: "💁🏻"
      },
      {
        unified: "1f481-1f3fc",
        native: "💁🏼"
      },
      {
        unified: "1f481-1f3fd",
        native: "💁🏽"
      },
      {
        unified: "1f481-1f3fe",
        native: "💁🏾"
      },
      {
        unified: "1f481-1f3ff",
        native: "💁🏿"
      }
    ],
    version: 1
  },
  "man-tipping-hand": {
    id: "man-tipping-hand",
    name: "Man Tipping Hand",
    keywords: [
      "tipping-hand",
      "male",
      "boy",
      "human",
      "information"
    ],
    skins: [
      {
        unified: "1f481-200d-2642-fe0f",
        native: "💁‍♂️"
      },
      {
        unified: "1f481-1f3fb-200d-2642-fe0f",
        native: "💁🏻‍♂️"
      },
      {
        unified: "1f481-1f3fc-200d-2642-fe0f",
        native: "💁🏼‍♂️"
      },
      {
        unified: "1f481-1f3fd-200d-2642-fe0f",
        native: "💁🏽‍♂️"
      },
      {
        unified: "1f481-1f3fe-200d-2642-fe0f",
        native: "💁🏾‍♂️"
      },
      {
        unified: "1f481-1f3ff-200d-2642-fe0f",
        native: "💁🏿‍♂️"
      }
    ],
    version: 4
  },
  "woman-tipping-hand": {
    id: "woman-tipping-hand",
    name: "Woman Tipping Hand",
    keywords: [
      "tipping-hand",
      "female",
      "girl",
      "human",
      "information"
    ],
    skins: [
      {
        unified: "1f481-200d-2640-fe0f",
        native: "💁‍♀️"
      },
      {
        unified: "1f481-1f3fb-200d-2640-fe0f",
        native: "💁🏻‍♀️"
      },
      {
        unified: "1f481-1f3fc-200d-2640-fe0f",
        native: "💁🏼‍♀️"
      },
      {
        unified: "1f481-1f3fd-200d-2640-fe0f",
        native: "💁🏽‍♀️"
      },
      {
        unified: "1f481-1f3fe-200d-2640-fe0f",
        native: "💁🏾‍♀️"
      },
      {
        unified: "1f481-1f3ff-200d-2640-fe0f",
        native: "💁🏿‍♀️"
      }
    ],
    version: 4
  },
  raising_hand: {
    id: "raising_hand",
    name: "Person Raising Hand",
    keywords: [
      "question"
    ],
    skins: [
      {
        unified: "1f64b",
        native: "🙋"
      },
      {
        unified: "1f64b-1f3fb",
        native: "🙋🏻"
      },
      {
        unified: "1f64b-1f3fc",
        native: "🙋🏼"
      },
      {
        unified: "1f64b-1f3fd",
        native: "🙋🏽"
      },
      {
        unified: "1f64b-1f3fe",
        native: "🙋🏾"
      },
      {
        unified: "1f64b-1f3ff",
        native: "🙋🏿"
      }
    ],
    version: 1
  },
  "man-raising-hand": {
    id: "man-raising-hand",
    name: "Man Raising Hand",
    keywords: [
      "raising-hand",
      "male",
      "boy"
    ],
    skins: [
      {
        unified: "1f64b-200d-2642-fe0f",
        native: "🙋‍♂️"
      },
      {
        unified: "1f64b-1f3fb-200d-2642-fe0f",
        native: "🙋🏻‍♂️"
      },
      {
        unified: "1f64b-1f3fc-200d-2642-fe0f",
        native: "🙋🏼‍♂️"
      },
      {
        unified: "1f64b-1f3fd-200d-2642-fe0f",
        native: "🙋🏽‍♂️"
      },
      {
        unified: "1f64b-1f3fe-200d-2642-fe0f",
        native: "🙋🏾‍♂️"
      },
      {
        unified: "1f64b-1f3ff-200d-2642-fe0f",
        native: "🙋🏿‍♂️"
      }
    ],
    version: 4
  },
  "woman-raising-hand": {
    id: "woman-raising-hand",
    name: "Woman Raising Hand",
    keywords: [
      "raising-hand",
      "female",
      "girl"
    ],
    skins: [
      {
        unified: "1f64b-200d-2640-fe0f",
        native: "🙋‍♀️"
      },
      {
        unified: "1f64b-1f3fb-200d-2640-fe0f",
        native: "🙋🏻‍♀️"
      },
      {
        unified: "1f64b-1f3fc-200d-2640-fe0f",
        native: "🙋🏼‍♀️"
      },
      {
        unified: "1f64b-1f3fd-200d-2640-fe0f",
        native: "🙋🏽‍♀️"
      },
      {
        unified: "1f64b-1f3fe-200d-2640-fe0f",
        native: "🙋🏾‍♀️"
      },
      {
        unified: "1f64b-1f3ff-200d-2640-fe0f",
        native: "🙋🏿‍♀️"
      }
    ],
    version: 4
  },
  deaf_person: {
    id: "deaf_person",
    name: "Deaf Person",
    keywords: [
      "accessibility"
    ],
    skins: [
      {
        unified: "1f9cf",
        native: "🧏"
      },
      {
        unified: "1f9cf-1f3fb",
        native: "🧏🏻"
      },
      {
        unified: "1f9cf-1f3fc",
        native: "🧏🏼"
      },
      {
        unified: "1f9cf-1f3fd",
        native: "🧏🏽"
      },
      {
        unified: "1f9cf-1f3fe",
        native: "🧏🏾"
      },
      {
        unified: "1f9cf-1f3ff",
        native: "🧏🏿"
      }
    ],
    version: 12
  },
  deaf_man: {
    id: "deaf_man",
    name: "Deaf Man",
    keywords: [
      "accessibility"
    ],
    skins: [
      {
        unified: "1f9cf-200d-2642-fe0f",
        native: "🧏‍♂️"
      },
      {
        unified: "1f9cf-1f3fb-200d-2642-fe0f",
        native: "🧏🏻‍♂️"
      },
      {
        unified: "1f9cf-1f3fc-200d-2642-fe0f",
        native: "🧏🏼‍♂️"
      },
      {
        unified: "1f9cf-1f3fd-200d-2642-fe0f",
        native: "🧏🏽‍♂️"
      },
      {
        unified: "1f9cf-1f3fe-200d-2642-fe0f",
        native: "🧏🏾‍♂️"
      },
      {
        unified: "1f9cf-1f3ff-200d-2642-fe0f",
        native: "🧏🏿‍♂️"
      }
    ],
    version: 12
  },
  deaf_woman: {
    id: "deaf_woman",
    name: "Deaf Woman",
    keywords: [
      "accessibility"
    ],
    skins: [
      {
        unified: "1f9cf-200d-2640-fe0f",
        native: "🧏‍♀️"
      },
      {
        unified: "1f9cf-1f3fb-200d-2640-fe0f",
        native: "🧏🏻‍♀️"
      },
      {
        unified: "1f9cf-1f3fc-200d-2640-fe0f",
        native: "🧏🏼‍♀️"
      },
      {
        unified: "1f9cf-1f3fd-200d-2640-fe0f",
        native: "🧏🏽‍♀️"
      },
      {
        unified: "1f9cf-1f3fe-200d-2640-fe0f",
        native: "🧏🏾‍♀️"
      },
      {
        unified: "1f9cf-1f3ff-200d-2640-fe0f",
        native: "🧏🏿‍♀️"
      }
    ],
    version: 12
  },
  bow: {
    id: "bow",
    name: "Person Bowing",
    keywords: [
      "bow",
      "respectiful"
    ],
    skins: [
      {
        unified: "1f647",
        native: "🙇"
      },
      {
        unified: "1f647-1f3fb",
        native: "🙇🏻"
      },
      {
        unified: "1f647-1f3fc",
        native: "🙇🏼"
      },
      {
        unified: "1f647-1f3fd",
        native: "🙇🏽"
      },
      {
        unified: "1f647-1f3fe",
        native: "🙇🏾"
      },
      {
        unified: "1f647-1f3ff",
        native: "🙇🏿"
      }
    ],
    version: 1
  },
  "man-bowing": {
    id: "man-bowing",
    name: "Man Bowing",
    keywords: [
      "male",
      "boy"
    ],
    skins: [
      {
        unified: "1f647-200d-2642-fe0f",
        native: "🙇‍♂️"
      },
      {
        unified: "1f647-1f3fb-200d-2642-fe0f",
        native: "🙇🏻‍♂️"
      },
      {
        unified: "1f647-1f3fc-200d-2642-fe0f",
        native: "🙇🏼‍♂️"
      },
      {
        unified: "1f647-1f3fd-200d-2642-fe0f",
        native: "🙇🏽‍♂️"
      },
      {
        unified: "1f647-1f3fe-200d-2642-fe0f",
        native: "🙇🏾‍♂️"
      },
      {
        unified: "1f647-1f3ff-200d-2642-fe0f",
        native: "🙇🏿‍♂️"
      }
    ],
    version: 4
  },
  "woman-bowing": {
    id: "woman-bowing",
    name: "Woman Bowing",
    keywords: [
      "female",
      "girl"
    ],
    skins: [
      {
        unified: "1f647-200d-2640-fe0f",
        native: "🙇‍♀️"
      },
      {
        unified: "1f647-1f3fb-200d-2640-fe0f",
        native: "🙇🏻‍♀️"
      },
      {
        unified: "1f647-1f3fc-200d-2640-fe0f",
        native: "🙇🏼‍♀️"
      },
      {
        unified: "1f647-1f3fd-200d-2640-fe0f",
        native: "🙇🏽‍♀️"
      },
      {
        unified: "1f647-1f3fe-200d-2640-fe0f",
        native: "🙇🏾‍♀️"
      },
      {
        unified: "1f647-1f3ff-200d-2640-fe0f",
        native: "🙇🏿‍♀️"
      }
    ],
    version: 4
  },
  face_palm: {
    id: "face_palm",
    name: "Face Palm",
    keywords: [
      "person",
      "facepalming",
      "disappointed"
    ],
    skins: [
      {
        unified: "1f926",
        native: "🤦"
      },
      {
        unified: "1f926-1f3fb",
        native: "🤦🏻"
      },
      {
        unified: "1f926-1f3fc",
        native: "🤦🏼"
      },
      {
        unified: "1f926-1f3fd",
        native: "🤦🏽"
      },
      {
        unified: "1f926-1f3fe",
        native: "🤦🏾"
      },
      {
        unified: "1f926-1f3ff",
        native: "🤦🏿"
      }
    ],
    version: 3
  },
  "man-facepalming": {
    id: "man-facepalming",
    name: "Man Facepalming",
    keywords: [
      "male",
      "boy",
      "disbelief"
    ],
    skins: [
      {
        unified: "1f926-200d-2642-fe0f",
        native: "🤦‍♂️"
      },
      {
        unified: "1f926-1f3fb-200d-2642-fe0f",
        native: "🤦🏻‍♂️"
      },
      {
        unified: "1f926-1f3fc-200d-2642-fe0f",
        native: "🤦🏼‍♂️"
      },
      {
        unified: "1f926-1f3fd-200d-2642-fe0f",
        native: "🤦🏽‍♂️"
      },
      {
        unified: "1f926-1f3fe-200d-2642-fe0f",
        native: "🤦🏾‍♂️"
      },
      {
        unified: "1f926-1f3ff-200d-2642-fe0f",
        native: "🤦🏿‍♂️"
      }
    ],
    version: 4
  },
  "woman-facepalming": {
    id: "woman-facepalming",
    name: "Woman Facepalming",
    keywords: [
      "female",
      "girl",
      "disbelief"
    ],
    skins: [
      {
        unified: "1f926-200d-2640-fe0f",
        native: "🤦‍♀️"
      },
      {
        unified: "1f926-1f3fb-200d-2640-fe0f",
        native: "🤦🏻‍♀️"
      },
      {
        unified: "1f926-1f3fc-200d-2640-fe0f",
        native: "🤦🏼‍♀️"
      },
      {
        unified: "1f926-1f3fd-200d-2640-fe0f",
        native: "🤦🏽‍♀️"
      },
      {
        unified: "1f926-1f3fe-200d-2640-fe0f",
        native: "🤦🏾‍♀️"
      },
      {
        unified: "1f926-1f3ff-200d-2640-fe0f",
        native: "🤦🏿‍♀️"
      }
    ],
    version: 4
  },
  shrug: {
    id: "shrug",
    name: "Shrug",
    keywords: [
      "person",
      "shrugging",
      "regardless"
    ],
    skins: [
      {
        unified: "1f937",
        native: "🤷"
      },
      {
        unified: "1f937-1f3fb",
        native: "🤷🏻"
      },
      {
        unified: "1f937-1f3fc",
        native: "🤷🏼"
      },
      {
        unified: "1f937-1f3fd",
        native: "🤷🏽"
      },
      {
        unified: "1f937-1f3fe",
        native: "🤷🏾"
      },
      {
        unified: "1f937-1f3ff",
        native: "🤷🏿"
      }
    ],
    version: 3
  },
  "man-shrugging": {
    id: "man-shrugging",
    name: "Man Shrugging",
    keywords: [
      "male",
      "boy",
      "confused",
      "indifferent",
      "doubt"
    ],
    skins: [
      {
        unified: "1f937-200d-2642-fe0f",
        native: "🤷‍♂️"
      },
      {
        unified: "1f937-1f3fb-200d-2642-fe0f",
        native: "🤷🏻‍♂️"
      },
      {
        unified: "1f937-1f3fc-200d-2642-fe0f",
        native: "🤷🏼‍♂️"
      },
      {
        unified: "1f937-1f3fd-200d-2642-fe0f",
        native: "🤷🏽‍♂️"
      },
      {
        unified: "1f937-1f3fe-200d-2642-fe0f",
        native: "🤷🏾‍♂️"
      },
      {
        unified: "1f937-1f3ff-200d-2642-fe0f",
        native: "🤷🏿‍♂️"
      }
    ],
    version: 4
  },
  "woman-shrugging": {
    id: "woman-shrugging",
    name: "Woman Shrugging",
    keywords: [
      "female",
      "girl",
      "confused",
      "indifferent",
      "doubt"
    ],
    skins: [
      {
        unified: "1f937-200d-2640-fe0f",
        native: "🤷‍♀️"
      },
      {
        unified: "1f937-1f3fb-200d-2640-fe0f",
        native: "🤷🏻‍♀️"
      },
      {
        unified: "1f937-1f3fc-200d-2640-fe0f",
        native: "🤷🏼‍♀️"
      },
      {
        unified: "1f937-1f3fd-200d-2640-fe0f",
        native: "🤷🏽‍♀️"
      },
      {
        unified: "1f937-1f3fe-200d-2640-fe0f",
        native: "🤷🏾‍♀️"
      },
      {
        unified: "1f937-1f3ff-200d-2640-fe0f",
        native: "🤷🏿‍♀️"
      }
    ],
    version: 4
  },
  health_worker: {
    id: "health_worker",
    name: "Health Worker",
    keywords: [
      "hospital"
    ],
    skins: [
      {
        unified: "1f9d1-200d-2695-fe0f",
        native: "🧑‍⚕️"
      },
      {
        unified: "1f9d1-1f3fb-200d-2695-fe0f",
        native: "🧑🏻‍⚕️"
      },
      {
        unified: "1f9d1-1f3fc-200d-2695-fe0f",
        native: "🧑🏼‍⚕️"
      },
      {
        unified: "1f9d1-1f3fd-200d-2695-fe0f",
        native: "🧑🏽‍⚕️"
      },
      {
        unified: "1f9d1-1f3fe-200d-2695-fe0f",
        native: "🧑🏾‍⚕️"
      },
      {
        unified: "1f9d1-1f3ff-200d-2695-fe0f",
        native: "🧑🏿‍⚕️"
      }
    ],
    version: 12.1
  },
  "male-doctor": {
    id: "male-doctor",
    name: "Man Health Worker",
    keywords: [
      "male",
      "doctor",
      "nurse",
      "therapist",
      "healthcare",
      "human"
    ],
    skins: [
      {
        unified: "1f468-200d-2695-fe0f",
        native: "👨‍⚕️"
      },
      {
        unified: "1f468-1f3fb-200d-2695-fe0f",
        native: "👨🏻‍⚕️"
      },
      {
        unified: "1f468-1f3fc-200d-2695-fe0f",
        native: "👨🏼‍⚕️"
      },
      {
        unified: "1f468-1f3fd-200d-2695-fe0f",
        native: "👨🏽‍⚕️"
      },
      {
        unified: "1f468-1f3fe-200d-2695-fe0f",
        native: "👨🏾‍⚕️"
      },
      {
        unified: "1f468-1f3ff-200d-2695-fe0f",
        native: "👨🏿‍⚕️"
      }
    ],
    version: 4
  },
  "female-doctor": {
    id: "female-doctor",
    name: "Woman Health Worker",
    keywords: [
      "female",
      "doctor",
      "nurse",
      "therapist",
      "healthcare",
      "human"
    ],
    skins: [
      {
        unified: "1f469-200d-2695-fe0f",
        native: "👩‍⚕️"
      },
      {
        unified: "1f469-1f3fb-200d-2695-fe0f",
        native: "👩🏻‍⚕️"
      },
      {
        unified: "1f469-1f3fc-200d-2695-fe0f",
        native: "👩🏼‍⚕️"
      },
      {
        unified: "1f469-1f3fd-200d-2695-fe0f",
        native: "👩🏽‍⚕️"
      },
      {
        unified: "1f469-1f3fe-200d-2695-fe0f",
        native: "👩🏾‍⚕️"
      },
      {
        unified: "1f469-1f3ff-200d-2695-fe0f",
        native: "👩🏿‍⚕️"
      }
    ],
    version: 4
  },
  student: {
    id: "student",
    name: "Student",
    keywords: [
      "learn"
    ],
    skins: [
      {
        unified: "1f9d1-200d-1f393",
        native: "🧑‍🎓"
      },
      {
        unified: "1f9d1-1f3fb-200d-1f393",
        native: "🧑🏻‍🎓"
      },
      {
        unified: "1f9d1-1f3fc-200d-1f393",
        native: "🧑🏼‍🎓"
      },
      {
        unified: "1f9d1-1f3fd-200d-1f393",
        native: "🧑🏽‍🎓"
      },
      {
        unified: "1f9d1-1f3fe-200d-1f393",
        native: "🧑🏾‍🎓"
      },
      {
        unified: "1f9d1-1f3ff-200d-1f393",
        native: "🧑🏿‍🎓"
      }
    ],
    version: 12.1
  },
  "male-student": {
    id: "male-student",
    name: "Man Student",
    keywords: [
      "male",
      "graduate",
      "human"
    ],
    skins: [
      {
        unified: "1f468-200d-1f393",
        native: "👨‍🎓"
      },
      {
        unified: "1f468-1f3fb-200d-1f393",
        native: "👨🏻‍🎓"
      },
      {
        unified: "1f468-1f3fc-200d-1f393",
        native: "👨🏼‍🎓"
      },
      {
        unified: "1f468-1f3fd-200d-1f393",
        native: "👨🏽‍🎓"
      },
      {
        unified: "1f468-1f3fe-200d-1f393",
        native: "👨🏾‍🎓"
      },
      {
        unified: "1f468-1f3ff-200d-1f393",
        native: "👨🏿‍🎓"
      }
    ],
    version: 4
  },
  "female-student": {
    id: "female-student",
    name: "Woman Student",
    keywords: [
      "female",
      "graduate",
      "human"
    ],
    skins: [
      {
        unified: "1f469-200d-1f393",
        native: "👩‍🎓"
      },
      {
        unified: "1f469-1f3fb-200d-1f393",
        native: "👩🏻‍🎓"
      },
      {
        unified: "1f469-1f3fc-200d-1f393",
        native: "👩🏼‍🎓"
      },
      {
        unified: "1f469-1f3fd-200d-1f393",
        native: "👩🏽‍🎓"
      },
      {
        unified: "1f469-1f3fe-200d-1f393",
        native: "👩🏾‍🎓"
      },
      {
        unified: "1f469-1f3ff-200d-1f393",
        native: "👩🏿‍🎓"
      }
    ],
    version: 4
  },
  teacher: {
    id: "teacher",
    name: "Teacher",
    keywords: [
      "professor"
    ],
    skins: [
      {
        unified: "1f9d1-200d-1f3eb",
        native: "🧑‍🏫"
      },
      {
        unified: "1f9d1-1f3fb-200d-1f3eb",
        native: "🧑🏻‍🏫"
      },
      {
        unified: "1f9d1-1f3fc-200d-1f3eb",
        native: "🧑🏼‍🏫"
      },
      {
        unified: "1f9d1-1f3fd-200d-1f3eb",
        native: "🧑🏽‍🏫"
      },
      {
        unified: "1f9d1-1f3fe-200d-1f3eb",
        native: "🧑🏾‍🏫"
      },
      {
        unified: "1f9d1-1f3ff-200d-1f3eb",
        native: "🧑🏿‍🏫"
      }
    ],
    version: 12.1
  },
  "male-teacher": {
    id: "male-teacher",
    name: "Man Teacher",
    keywords: [
      "male",
      "instructor",
      "professor",
      "human"
    ],
    skins: [
      {
        unified: "1f468-200d-1f3eb",
        native: "👨‍🏫"
      },
      {
        unified: "1f468-1f3fb-200d-1f3eb",
        native: "👨🏻‍🏫"
      },
      {
        unified: "1f468-1f3fc-200d-1f3eb",
        native: "👨🏼‍🏫"
      },
      {
        unified: "1f468-1f3fd-200d-1f3eb",
        native: "👨🏽‍🏫"
      },
      {
        unified: "1f468-1f3fe-200d-1f3eb",
        native: "👨🏾‍🏫"
      },
      {
        unified: "1f468-1f3ff-200d-1f3eb",
        native: "👨🏿‍🏫"
      }
    ],
    version: 4
  },
  "female-teacher": {
    id: "female-teacher",
    name: "Woman Teacher",
    keywords: [
      "female",
      "instructor",
      "professor",
      "human"
    ],
    skins: [
      {
        unified: "1f469-200d-1f3eb",
        native: "👩‍🏫"
      },
      {
        unified: "1f469-1f3fb-200d-1f3eb",
        native: "👩🏻‍🏫"
      },
      {
        unified: "1f469-1f3fc-200d-1f3eb",
        native: "👩🏼‍🏫"
      },
      {
        unified: "1f469-1f3fd-200d-1f3eb",
        native: "👩🏽‍🏫"
      },
      {
        unified: "1f469-1f3fe-200d-1f3eb",
        native: "👩🏾‍🏫"
      },
      {
        unified: "1f469-1f3ff-200d-1f3eb",
        native: "👩🏿‍🏫"
      }
    ],
    version: 4
  },
  judge: {
    id: "judge",
    name: "Judge",
    keywords: [
      "law"
    ],
    skins: [
      {
        unified: "1f9d1-200d-2696-fe0f",
        native: "🧑‍⚖️"
      },
      {
        unified: "1f9d1-1f3fb-200d-2696-fe0f",
        native: "🧑🏻‍⚖️"
      },
      {
        unified: "1f9d1-1f3fc-200d-2696-fe0f",
        native: "🧑🏼‍⚖️"
      },
      {
        unified: "1f9d1-1f3fd-200d-2696-fe0f",
        native: "🧑🏽‍⚖️"
      },
      {
        unified: "1f9d1-1f3fe-200d-2696-fe0f",
        native: "🧑🏾‍⚖️"
      },
      {
        unified: "1f9d1-1f3ff-200d-2696-fe0f",
        native: "🧑🏿‍⚖️"
      }
    ],
    version: 12.1
  },
  "male-judge": {
    id: "male-judge",
    name: "Man Judge",
    keywords: [
      "male",
      "justice",
      "court",
      "human"
    ],
    skins: [
      {
        unified: "1f468-200d-2696-fe0f",
        native: "👨‍⚖️"
      },
      {
        unified: "1f468-1f3fb-200d-2696-fe0f",
        native: "👨🏻‍⚖️"
      },
      {
        unified: "1f468-1f3fc-200d-2696-fe0f",
        native: "👨🏼‍⚖️"
      },
      {
        unified: "1f468-1f3fd-200d-2696-fe0f",
        native: "👨🏽‍⚖️"
      },
      {
        unified: "1f468-1f3fe-200d-2696-fe0f",
        native: "👨🏾‍⚖️"
      },
      {
        unified: "1f468-1f3ff-200d-2696-fe0f",
        native: "👨🏿‍⚖️"
      }
    ],
    version: 4
  },
  "female-judge": {
    id: "female-judge",
    name: "Woman Judge",
    keywords: [
      "female",
      "justice",
      "court",
      "human"
    ],
    skins: [
      {
        unified: "1f469-200d-2696-fe0f",
        native: "👩‍⚖️"
      },
      {
        unified: "1f469-1f3fb-200d-2696-fe0f",
        native: "👩🏻‍⚖️"
      },
      {
        unified: "1f469-1f3fc-200d-2696-fe0f",
        native: "👩🏼‍⚖️"
      },
      {
        unified: "1f469-1f3fd-200d-2696-fe0f",
        native: "👩🏽‍⚖️"
      },
      {
        unified: "1f469-1f3fe-200d-2696-fe0f",
        native: "👩🏾‍⚖️"
      },
      {
        unified: "1f469-1f3ff-200d-2696-fe0f",
        native: "👩🏿‍⚖️"
      }
    ],
    version: 4
  },
  farmer: {
    id: "farmer",
    name: "Farmer",
    keywords: [
      "crops"
    ],
    skins: [
      {
        unified: "1f9d1-200d-1f33e",
        native: "🧑‍🌾"
      },
      {
        unified: "1f9d1-1f3fb-200d-1f33e",
        native: "🧑🏻‍🌾"
      },
      {
        unified: "1f9d1-1f3fc-200d-1f33e",
        native: "🧑🏼‍🌾"
      },
      {
        unified: "1f9d1-1f3fd-200d-1f33e",
        native: "🧑🏽‍🌾"
      },
      {
        unified: "1f9d1-1f3fe-200d-1f33e",
        native: "🧑🏾‍🌾"
      },
      {
        unified: "1f9d1-1f3ff-200d-1f33e",
        native: "🧑🏿‍🌾"
      }
    ],
    version: 12.1
  },
  "male-farmer": {
    id: "male-farmer",
    name: "Man Farmer",
    keywords: [
      "male",
      "rancher",
      "gardener",
      "human"
    ],
    skins: [
      {
        unified: "1f468-200d-1f33e",
        native: "👨‍🌾"
      },
      {
        unified: "1f468-1f3fb-200d-1f33e",
        native: "👨🏻‍🌾"
      },
      {
        unified: "1f468-1f3fc-200d-1f33e",
        native: "👨🏼‍🌾"
      },
      {
        unified: "1f468-1f3fd-200d-1f33e",
        native: "👨🏽‍🌾"
      },
      {
        unified: "1f468-1f3fe-200d-1f33e",
        native: "👨🏾‍🌾"
      },
      {
        unified: "1f468-1f3ff-200d-1f33e",
        native: "👨🏿‍🌾"
      }
    ],
    version: 4
  },
  "female-farmer": {
    id: "female-farmer",
    name: "Woman Farmer",
    keywords: [
      "female",
      "rancher",
      "gardener",
      "human"
    ],
    skins: [
      {
        unified: "1f469-200d-1f33e",
        native: "👩‍🌾"
      },
      {
        unified: "1f469-1f3fb-200d-1f33e",
        native: "👩🏻‍🌾"
      },
      {
        unified: "1f469-1f3fc-200d-1f33e",
        native: "👩🏼‍🌾"
      },
      {
        unified: "1f469-1f3fd-200d-1f33e",
        native: "👩🏽‍🌾"
      },
      {
        unified: "1f469-1f3fe-200d-1f33e",
        native: "👩🏾‍🌾"
      },
      {
        unified: "1f469-1f3ff-200d-1f33e",
        native: "👩🏿‍🌾"
      }
    ],
    version: 4
  },
  cook: {
    id: "cook",
    name: "Cook",
    keywords: [
      "food",
      "kitchen",
      "culinary"
    ],
    skins: [
      {
        unified: "1f9d1-200d-1f373",
        native: "🧑‍🍳"
      },
      {
        unified: "1f9d1-1f3fb-200d-1f373",
        native: "🧑🏻‍🍳"
      },
      {
        unified: "1f9d1-1f3fc-200d-1f373",
        native: "🧑🏼‍🍳"
      },
      {
        unified: "1f9d1-1f3fd-200d-1f373",
        native: "🧑🏽‍🍳"
      },
      {
        unified: "1f9d1-1f3fe-200d-1f373",
        native: "🧑🏾‍🍳"
      },
      {
        unified: "1f9d1-1f3ff-200d-1f373",
        native: "🧑🏿‍🍳"
      }
    ],
    version: 12.1
  },
  "male-cook": {
    id: "male-cook",
    name: "Man Cook",
    keywords: [
      "male",
      "chef",
      "human"
    ],
    skins: [
      {
        unified: "1f468-200d-1f373",
        native: "👨‍🍳"
      },
      {
        unified: "1f468-1f3fb-200d-1f373",
        native: "👨🏻‍🍳"
      },
      {
        unified: "1f468-1f3fc-200d-1f373",
        native: "👨🏼‍🍳"
      },
      {
        unified: "1f468-1f3fd-200d-1f373",
        native: "👨🏽‍🍳"
      },
      {
        unified: "1f468-1f3fe-200d-1f373",
        native: "👨🏾‍🍳"
      },
      {
        unified: "1f468-1f3ff-200d-1f373",
        native: "👨🏿‍🍳"
      }
    ],
    version: 4
  },
  "female-cook": {
    id: "female-cook",
    name: "Woman Cook",
    keywords: [
      "female",
      "chef",
      "human"
    ],
    skins: [
      {
        unified: "1f469-200d-1f373",
        native: "👩‍🍳"
      },
      {
        unified: "1f469-1f3fb-200d-1f373",
        native: "👩🏻‍🍳"
      },
      {
        unified: "1f469-1f3fc-200d-1f373",
        native: "👩🏼‍🍳"
      },
      {
        unified: "1f469-1f3fd-200d-1f373",
        native: "👩🏽‍🍳"
      },
      {
        unified: "1f469-1f3fe-200d-1f373",
        native: "👩🏾‍🍳"
      },
      {
        unified: "1f469-1f3ff-200d-1f373",
        native: "👩🏿‍🍳"
      }
    ],
    version: 4
  },
  mechanic: {
    id: "mechanic",
    name: "Mechanic",
    keywords: [
      "worker",
      "technician"
    ],
    skins: [
      {
        unified: "1f9d1-200d-1f527",
        native: "🧑‍🔧"
      },
      {
        unified: "1f9d1-1f3fb-200d-1f527",
        native: "🧑🏻‍🔧"
      },
      {
        unified: "1f9d1-1f3fc-200d-1f527",
        native: "🧑🏼‍🔧"
      },
      {
        unified: "1f9d1-1f3fd-200d-1f527",
        native: "🧑🏽‍🔧"
      },
      {
        unified: "1f9d1-1f3fe-200d-1f527",
        native: "🧑🏾‍🔧"
      },
      {
        unified: "1f9d1-1f3ff-200d-1f527",
        native: "🧑🏿‍🔧"
      }
    ],
    version: 12.1
  },
  "male-mechanic": {
    id: "male-mechanic",
    name: "Man Mechanic",
    keywords: [
      "male",
      "plumber",
      "human",
      "wrench"
    ],
    skins: [
      {
        unified: "1f468-200d-1f527",
        native: "👨‍🔧"
      },
      {
        unified: "1f468-1f3fb-200d-1f527",
        native: "👨🏻‍🔧"
      },
      {
        unified: "1f468-1f3fc-200d-1f527",
        native: "👨🏼‍🔧"
      },
      {
        unified: "1f468-1f3fd-200d-1f527",
        native: "👨🏽‍🔧"
      },
      {
        unified: "1f468-1f3fe-200d-1f527",
        native: "👨🏾‍🔧"
      },
      {
        unified: "1f468-1f3ff-200d-1f527",
        native: "👨🏿‍🔧"
      }
    ],
    version: 4
  },
  "female-mechanic": {
    id: "female-mechanic",
    name: "Woman Mechanic",
    keywords: [
      "female",
      "plumber",
      "human",
      "wrench"
    ],
    skins: [
      {
        unified: "1f469-200d-1f527",
        native: "👩‍🔧"
      },
      {
        unified: "1f469-1f3fb-200d-1f527",
        native: "👩🏻‍🔧"
      },
      {
        unified: "1f469-1f3fc-200d-1f527",
        native: "👩🏼‍🔧"
      },
      {
        unified: "1f469-1f3fd-200d-1f527",
        native: "👩🏽‍🔧"
      },
      {
        unified: "1f469-1f3fe-200d-1f527",
        native: "👩🏾‍🔧"
      },
      {
        unified: "1f469-1f3ff-200d-1f527",
        native: "👩🏿‍🔧"
      }
    ],
    version: 4
  },
  factory_worker: {
    id: "factory_worker",
    name: "Factory Worker",
    keywords: [
      "labor"
    ],
    skins: [
      {
        unified: "1f9d1-200d-1f3ed",
        native: "🧑‍🏭"
      },
      {
        unified: "1f9d1-1f3fb-200d-1f3ed",
        native: "🧑🏻‍🏭"
      },
      {
        unified: "1f9d1-1f3fc-200d-1f3ed",
        native: "🧑🏼‍🏭"
      },
      {
        unified: "1f9d1-1f3fd-200d-1f3ed",
        native: "🧑🏽‍🏭"
      },
      {
        unified: "1f9d1-1f3fe-200d-1f3ed",
        native: "🧑🏾‍🏭"
      },
      {
        unified: "1f9d1-1f3ff-200d-1f3ed",
        native: "🧑🏿‍🏭"
      }
    ],
    version: 12.1
  },
  "male-factory-worker": {
    id: "male-factory-worker",
    name: "Man Factory Worker",
    keywords: [
      "male",
      "factory-worker",
      "assembly",
      "industrial",
      "human"
    ],
    skins: [
      {
        unified: "1f468-200d-1f3ed",
        native: "👨‍🏭"
      },
      {
        unified: "1f468-1f3fb-200d-1f3ed",
        native: "👨🏻‍🏭"
      },
      {
        unified: "1f468-1f3fc-200d-1f3ed",
        native: "👨🏼‍🏭"
      },
      {
        unified: "1f468-1f3fd-200d-1f3ed",
        native: "👨🏽‍🏭"
      },
      {
        unified: "1f468-1f3fe-200d-1f3ed",
        native: "👨🏾‍🏭"
      },
      {
        unified: "1f468-1f3ff-200d-1f3ed",
        native: "👨🏿‍🏭"
      }
    ],
    version: 4
  },
  "female-factory-worker": {
    id: "female-factory-worker",
    name: "Woman Factory Worker",
    keywords: [
      "female",
      "factory-worker",
      "assembly",
      "industrial",
      "human"
    ],
    skins: [
      {
        unified: "1f469-200d-1f3ed",
        native: "👩‍🏭"
      },
      {
        unified: "1f469-1f3fb-200d-1f3ed",
        native: "👩🏻‍🏭"
      },
      {
        unified: "1f469-1f3fc-200d-1f3ed",
        native: "👩🏼‍🏭"
      },
      {
        unified: "1f469-1f3fd-200d-1f3ed",
        native: "👩🏽‍🏭"
      },
      {
        unified: "1f469-1f3fe-200d-1f3ed",
        native: "👩🏾‍🏭"
      },
      {
        unified: "1f469-1f3ff-200d-1f3ed",
        native: "👩🏿‍🏭"
      }
    ],
    version: 4
  },
  office_worker: {
    id: "office_worker",
    name: "Office Worker",
    keywords: [
      "business"
    ],
    skins: [
      {
        unified: "1f9d1-200d-1f4bc",
        native: "🧑‍💼"
      },
      {
        unified: "1f9d1-1f3fb-200d-1f4bc",
        native: "🧑🏻‍💼"
      },
      {
        unified: "1f9d1-1f3fc-200d-1f4bc",
        native: "🧑🏼‍💼"
      },
      {
        unified: "1f9d1-1f3fd-200d-1f4bc",
        native: "🧑🏽‍💼"
      },
      {
        unified: "1f9d1-1f3fe-200d-1f4bc",
        native: "🧑🏾‍💼"
      },
      {
        unified: "1f9d1-1f3ff-200d-1f4bc",
        native: "🧑🏿‍💼"
      }
    ],
    version: 12.1
  },
  "male-office-worker": {
    id: "male-office-worker",
    name: "Man Office Worker",
    keywords: [
      "male",
      "office-worker",
      "business",
      "manager",
      "human"
    ],
    skins: [
      {
        unified: "1f468-200d-1f4bc",
        native: "👨‍💼"
      },
      {
        unified: "1f468-1f3fb-200d-1f4bc",
        native: "👨🏻‍💼"
      },
      {
        unified: "1f468-1f3fc-200d-1f4bc",
        native: "👨🏼‍💼"
      },
      {
        unified: "1f468-1f3fd-200d-1f4bc",
        native: "👨🏽‍💼"
      },
      {
        unified: "1f468-1f3fe-200d-1f4bc",
        native: "👨🏾‍💼"
      },
      {
        unified: "1f468-1f3ff-200d-1f4bc",
        native: "👨🏿‍💼"
      }
    ],
    version: 4
  },
  "female-office-worker": {
    id: "female-office-worker",
    name: "Woman Office Worker",
    keywords: [
      "female",
      "office-worker",
      "business",
      "manager",
      "human"
    ],
    skins: [
      {
        unified: "1f469-200d-1f4bc",
        native: "👩‍💼"
      },
      {
        unified: "1f469-1f3fb-200d-1f4bc",
        native: "👩🏻‍💼"
      },
      {
        unified: "1f469-1f3fc-200d-1f4bc",
        native: "👩🏼‍💼"
      },
      {
        unified: "1f469-1f3fd-200d-1f4bc",
        native: "👩🏽‍💼"
      },
      {
        unified: "1f469-1f3fe-200d-1f4bc",
        native: "👩🏾‍💼"
      },
      {
        unified: "1f469-1f3ff-200d-1f4bc",
        native: "👩🏿‍💼"
      }
    ],
    version: 4
  },
  scientist: {
    id: "scientist",
    name: "Scientist",
    keywords: [
      "chemistry"
    ],
    skins: [
      {
        unified: "1f9d1-200d-1f52c",
        native: "🧑‍🔬"
      },
      {
        unified: "1f9d1-1f3fb-200d-1f52c",
        native: "🧑🏻‍🔬"
      },
      {
        unified: "1f9d1-1f3fc-200d-1f52c",
        native: "🧑🏼‍🔬"
      },
      {
        unified: "1f9d1-1f3fd-200d-1f52c",
        native: "🧑🏽‍🔬"
      },
      {
        unified: "1f9d1-1f3fe-200d-1f52c",
        native: "🧑🏾‍🔬"
      },
      {
        unified: "1f9d1-1f3ff-200d-1f52c",
        native: "🧑🏿‍🔬"
      }
    ],
    version: 12.1
  },
  "male-scientist": {
    id: "male-scientist",
    name: "Man Scientist",
    keywords: [
      "male",
      "biologist",
      "chemist",
      "engineer",
      "physicist",
      "human"
    ],
    skins: [
      {
        unified: "1f468-200d-1f52c",
        native: "👨‍🔬"
      },
      {
        unified: "1f468-1f3fb-200d-1f52c",
        native: "👨🏻‍🔬"
      },
      {
        unified: "1f468-1f3fc-200d-1f52c",
        native: "👨🏼‍🔬"
      },
      {
        unified: "1f468-1f3fd-200d-1f52c",
        native: "👨🏽‍🔬"
      },
      {
        unified: "1f468-1f3fe-200d-1f52c",
        native: "👨🏾‍🔬"
      },
      {
        unified: "1f468-1f3ff-200d-1f52c",
        native: "👨🏿‍🔬"
      }
    ],
    version: 4
  },
  "female-scientist": {
    id: "female-scientist",
    name: "Woman Scientist",
    keywords: [
      "female",
      "biologist",
      "chemist",
      "engineer",
      "physicist",
      "human"
    ],
    skins: [
      {
        unified: "1f469-200d-1f52c",
        native: "👩‍🔬"
      },
      {
        unified: "1f469-1f3fb-200d-1f52c",
        native: "👩🏻‍🔬"
      },
      {
        unified: "1f469-1f3fc-200d-1f52c",
        native: "👩🏼‍🔬"
      },
      {
        unified: "1f469-1f3fd-200d-1f52c",
        native: "👩🏽‍🔬"
      },
      {
        unified: "1f469-1f3fe-200d-1f52c",
        native: "👩🏾‍🔬"
      },
      {
        unified: "1f469-1f3ff-200d-1f52c",
        native: "👩🏿‍🔬"
      }
    ],
    version: 4
  },
  technologist: {
    id: "technologist",
    name: "Technologist",
    keywords: [
      "computer"
    ],
    skins: [
      {
        unified: "1f9d1-200d-1f4bb",
        native: "🧑‍💻"
      },
      {
        unified: "1f9d1-1f3fb-200d-1f4bb",
        native: "🧑🏻‍💻"
      },
      {
        unified: "1f9d1-1f3fc-200d-1f4bb",
        native: "🧑🏼‍💻"
      },
      {
        unified: "1f9d1-1f3fd-200d-1f4bb",
        native: "🧑🏽‍💻"
      },
      {
        unified: "1f9d1-1f3fe-200d-1f4bb",
        native: "🧑🏾‍💻"
      },
      {
        unified: "1f9d1-1f3ff-200d-1f4bb",
        native: "🧑🏿‍💻"
      }
    ],
    version: 12.1
  },
  "male-technologist": {
    id: "male-technologist",
    name: "Man Technologist",
    keywords: [
      "male",
      "coder",
      "developer",
      "engineer",
      "programmer",
      "software",
      "human",
      "laptop",
      "computer"
    ],
    skins: [
      {
        unified: "1f468-200d-1f4bb",
        native: "👨‍💻"
      },
      {
        unified: "1f468-1f3fb-200d-1f4bb",
        native: "👨🏻‍💻"
      },
      {
        unified: "1f468-1f3fc-200d-1f4bb",
        native: "👨🏼‍💻"
      },
      {
        unified: "1f468-1f3fd-200d-1f4bb",
        native: "👨🏽‍💻"
      },
      {
        unified: "1f468-1f3fe-200d-1f4bb",
        native: "👨🏾‍💻"
      },
      {
        unified: "1f468-1f3ff-200d-1f4bb",
        native: "👨🏿‍💻"
      }
    ],
    version: 4
  },
  "female-technologist": {
    id: "female-technologist",
    name: "Woman Technologist",
    keywords: [
      "female",
      "coder",
      "developer",
      "engineer",
      "programmer",
      "software",
      "human",
      "laptop",
      "computer"
    ],
    skins: [
      {
        unified: "1f469-200d-1f4bb",
        native: "👩‍💻"
      },
      {
        unified: "1f469-1f3fb-200d-1f4bb",
        native: "👩🏻‍💻"
      },
      {
        unified: "1f469-1f3fc-200d-1f4bb",
        native: "👩🏼‍💻"
      },
      {
        unified: "1f469-1f3fd-200d-1f4bb",
        native: "👩🏽‍💻"
      },
      {
        unified: "1f469-1f3fe-200d-1f4bb",
        native: "👩🏾‍💻"
      },
      {
        unified: "1f469-1f3ff-200d-1f4bb",
        native: "👩🏿‍💻"
      }
    ],
    version: 4
  },
  singer: {
    id: "singer",
    name: "Singer",
    keywords: [
      "song",
      "artist",
      "performer"
    ],
    skins: [
      {
        unified: "1f9d1-200d-1f3a4",
        native: "🧑‍🎤"
      },
      {
        unified: "1f9d1-1f3fb-200d-1f3a4",
        native: "🧑🏻‍🎤"
      },
      {
        unified: "1f9d1-1f3fc-200d-1f3a4",
        native: "🧑🏼‍🎤"
      },
      {
        unified: "1f9d1-1f3fd-200d-1f3a4",
        native: "🧑🏽‍🎤"
      },
      {
        unified: "1f9d1-1f3fe-200d-1f3a4",
        native: "🧑🏾‍🎤"
      },
      {
        unified: "1f9d1-1f3ff-200d-1f3a4",
        native: "🧑🏿‍🎤"
      }
    ],
    version: 12.1
  },
  "male-singer": {
    id: "male-singer",
    name: "Man Singer",
    keywords: [
      "male",
      "rockstar",
      "entertainer",
      "human"
    ],
    skins: [
      {
        unified: "1f468-200d-1f3a4",
        native: "👨‍🎤"
      },
      {
        unified: "1f468-1f3fb-200d-1f3a4",
        native: "👨🏻‍🎤"
      },
      {
        unified: "1f468-1f3fc-200d-1f3a4",
        native: "👨🏼‍🎤"
      },
      {
        unified: "1f468-1f3fd-200d-1f3a4",
        native: "👨🏽‍🎤"
      },
      {
        unified: "1f468-1f3fe-200d-1f3a4",
        native: "👨🏾‍🎤"
      },
      {
        unified: "1f468-1f3ff-200d-1f3a4",
        native: "👨🏿‍🎤"
      }
    ],
    version: 4
  },
  "female-singer": {
    id: "female-singer",
    name: "Woman Singer",
    keywords: [
      "female",
      "rockstar",
      "entertainer",
      "human"
    ],
    skins: [
      {
        unified: "1f469-200d-1f3a4",
        native: "👩‍🎤"
      },
      {
        unified: "1f469-1f3fb-200d-1f3a4",
        native: "👩🏻‍🎤"
      },
      {
        unified: "1f469-1f3fc-200d-1f3a4",
        native: "👩🏼‍🎤"
      },
      {
        unified: "1f469-1f3fd-200d-1f3a4",
        native: "👩🏽‍🎤"
      },
      {
        unified: "1f469-1f3fe-200d-1f3a4",
        native: "👩🏾‍🎤"
      },
      {
        unified: "1f469-1f3ff-200d-1f3a4",
        native: "👩🏿‍🎤"
      }
    ],
    version: 4
  },
  artist: {
    id: "artist",
    name: "Artist",
    keywords: [
      "painting",
      "draw",
      "creativity"
    ],
    skins: [
      {
        unified: "1f9d1-200d-1f3a8",
        native: "🧑‍🎨"
      },
      {
        unified: "1f9d1-1f3fb-200d-1f3a8",
        native: "🧑🏻‍🎨"
      },
      {
        unified: "1f9d1-1f3fc-200d-1f3a8",
        native: "🧑🏼‍🎨"
      },
      {
        unified: "1f9d1-1f3fd-200d-1f3a8",
        native: "🧑🏽‍🎨"
      },
      {
        unified: "1f9d1-1f3fe-200d-1f3a8",
        native: "🧑🏾‍🎨"
      },
      {
        unified: "1f9d1-1f3ff-200d-1f3a8",
        native: "🧑🏿‍🎨"
      }
    ],
    version: 12.1
  },
  "male-artist": {
    id: "male-artist",
    name: "Man Artist",
    keywords: [
      "male",
      "painter",
      "human"
    ],
    skins: [
      {
        unified: "1f468-200d-1f3a8",
        native: "👨‍🎨"
      },
      {
        unified: "1f468-1f3fb-200d-1f3a8",
        native: "👨🏻‍🎨"
      },
      {
        unified: "1f468-1f3fc-200d-1f3a8",
        native: "👨🏼‍🎨"
      },
      {
        unified: "1f468-1f3fd-200d-1f3a8",
        native: "👨🏽‍🎨"
      },
      {
        unified: "1f468-1f3fe-200d-1f3a8",
        native: "👨🏾‍🎨"
      },
      {
        unified: "1f468-1f3ff-200d-1f3a8",
        native: "👨🏿‍🎨"
      }
    ],
    version: 4
  },
  "female-artist": {
    id: "female-artist",
    name: "Woman Artist",
    keywords: [
      "female",
      "painter",
      "human"
    ],
    skins: [
      {
        unified: "1f469-200d-1f3a8",
        native: "👩‍🎨"
      },
      {
        unified: "1f469-1f3fb-200d-1f3a8",
        native: "👩🏻‍🎨"
      },
      {
        unified: "1f469-1f3fc-200d-1f3a8",
        native: "👩🏼‍🎨"
      },
      {
        unified: "1f469-1f3fd-200d-1f3a8",
        native: "👩🏽‍🎨"
      },
      {
        unified: "1f469-1f3fe-200d-1f3a8",
        native: "👩🏾‍🎨"
      },
      {
        unified: "1f469-1f3ff-200d-1f3a8",
        native: "👩🏿‍🎨"
      }
    ],
    version: 4
  },
  pilot: {
    id: "pilot",
    name: "Pilot",
    keywords: [
      "fly",
      "plane",
      "airplane"
    ],
    skins: [
      {
        unified: "1f9d1-200d-2708-fe0f",
        native: "🧑‍✈️"
      },
      {
        unified: "1f9d1-1f3fb-200d-2708-fe0f",
        native: "🧑🏻‍✈️"
      },
      {
        unified: "1f9d1-1f3fc-200d-2708-fe0f",
        native: "🧑🏼‍✈️"
      },
      {
        unified: "1f9d1-1f3fd-200d-2708-fe0f",
        native: "🧑🏽‍✈️"
      },
      {
        unified: "1f9d1-1f3fe-200d-2708-fe0f",
        native: "🧑🏾‍✈️"
      },
      {
        unified: "1f9d1-1f3ff-200d-2708-fe0f",
        native: "🧑🏿‍✈️"
      }
    ],
    version: 12.1
  },
  "male-pilot": {
    id: "male-pilot",
    name: "Man Pilot",
    keywords: [
      "male",
      "aviator",
      "plane",
      "human"
    ],
    skins: [
      {
        unified: "1f468-200d-2708-fe0f",
        native: "👨‍✈️"
      },
      {
        unified: "1f468-1f3fb-200d-2708-fe0f",
        native: "👨🏻‍✈️"
      },
      {
        unified: "1f468-1f3fc-200d-2708-fe0f",
        native: "👨🏼‍✈️"
      },
      {
        unified: "1f468-1f3fd-200d-2708-fe0f",
        native: "👨🏽‍✈️"
      },
      {
        unified: "1f468-1f3fe-200d-2708-fe0f",
        native: "👨🏾‍✈️"
      },
      {
        unified: "1f468-1f3ff-200d-2708-fe0f",
        native: "👨🏿‍✈️"
      }
    ],
    version: 4
  },
  "female-pilot": {
    id: "female-pilot",
    name: "Woman Pilot",
    keywords: [
      "female",
      "aviator",
      "plane",
      "human"
    ],
    skins: [
      {
        unified: "1f469-200d-2708-fe0f",
        native: "👩‍✈️"
      },
      {
        unified: "1f469-1f3fb-200d-2708-fe0f",
        native: "👩🏻‍✈️"
      },
      {
        unified: "1f469-1f3fc-200d-2708-fe0f",
        native: "👩🏼‍✈️"
      },
      {
        unified: "1f469-1f3fd-200d-2708-fe0f",
        native: "👩🏽‍✈️"
      },
      {
        unified: "1f469-1f3fe-200d-2708-fe0f",
        native: "👩🏾‍✈️"
      },
      {
        unified: "1f469-1f3ff-200d-2708-fe0f",
        native: "👩🏿‍✈️"
      }
    ],
    version: 4
  },
  astronaut: {
    id: "astronaut",
    name: "Astronaut",
    keywords: [
      "outerspace"
    ],
    skins: [
      {
        unified: "1f9d1-200d-1f680",
        native: "🧑‍🚀"
      },
      {
        unified: "1f9d1-1f3fb-200d-1f680",
        native: "🧑🏻‍🚀"
      },
      {
        unified: "1f9d1-1f3fc-200d-1f680",
        native: "🧑🏼‍🚀"
      },
      {
        unified: "1f9d1-1f3fd-200d-1f680",
        native: "🧑🏽‍🚀"
      },
      {
        unified: "1f9d1-1f3fe-200d-1f680",
        native: "🧑🏾‍🚀"
      },
      {
        unified: "1f9d1-1f3ff-200d-1f680",
        native: "🧑🏿‍🚀"
      }
    ],
    version: 12.1
  },
  "male-astronaut": {
    id: "male-astronaut",
    name: "Man Astronaut",
    keywords: [
      "male",
      "space",
      "rocket",
      "human"
    ],
    skins: [
      {
        unified: "1f468-200d-1f680",
        native: "👨‍🚀"
      },
      {
        unified: "1f468-1f3fb-200d-1f680",
        native: "👨🏻‍🚀"
      },
      {
        unified: "1f468-1f3fc-200d-1f680",
        native: "👨🏼‍🚀"
      },
      {
        unified: "1f468-1f3fd-200d-1f680",
        native: "👨🏽‍🚀"
      },
      {
        unified: "1f468-1f3fe-200d-1f680",
        native: "👨🏾‍🚀"
      },
      {
        unified: "1f468-1f3ff-200d-1f680",
        native: "👨🏿‍🚀"
      }
    ],
    version: 4
  },
  "female-astronaut": {
    id: "female-astronaut",
    name: "Woman Astronaut",
    keywords: [
      "female",
      "space",
      "rocket",
      "human"
    ],
    skins: [
      {
        unified: "1f469-200d-1f680",
        native: "👩‍🚀"
      },
      {
        unified: "1f469-1f3fb-200d-1f680",
        native: "👩🏻‍🚀"
      },
      {
        unified: "1f469-1f3fc-200d-1f680",
        native: "👩🏼‍🚀"
      },
      {
        unified: "1f469-1f3fd-200d-1f680",
        native: "👩🏽‍🚀"
      },
      {
        unified: "1f469-1f3fe-200d-1f680",
        native: "👩🏾‍🚀"
      },
      {
        unified: "1f469-1f3ff-200d-1f680",
        native: "👩🏿‍🚀"
      }
    ],
    version: 4
  },
  firefighter: {
    id: "firefighter",
    name: "Firefighter",
    keywords: [
      "fire"
    ],
    skins: [
      {
        unified: "1f9d1-200d-1f692",
        native: "🧑‍🚒"
      },
      {
        unified: "1f9d1-1f3fb-200d-1f692",
        native: "🧑🏻‍🚒"
      },
      {
        unified: "1f9d1-1f3fc-200d-1f692",
        native: "🧑🏼‍🚒"
      },
      {
        unified: "1f9d1-1f3fd-200d-1f692",
        native: "🧑🏽‍🚒"
      },
      {
        unified: "1f9d1-1f3fe-200d-1f692",
        native: "🧑🏾‍🚒"
      },
      {
        unified: "1f9d1-1f3ff-200d-1f692",
        native: "🧑🏿‍🚒"
      }
    ],
    version: 12.1
  },
  "male-firefighter": {
    id: "male-firefighter",
    name: "Man Firefighter",
    keywords: [
      "male",
      "fireman",
      "human"
    ],
    skins: [
      {
        unified: "1f468-200d-1f692",
        native: "👨‍🚒"
      },
      {
        unified: "1f468-1f3fb-200d-1f692",
        native: "👨🏻‍🚒"
      },
      {
        unified: "1f468-1f3fc-200d-1f692",
        native: "👨🏼‍🚒"
      },
      {
        unified: "1f468-1f3fd-200d-1f692",
        native: "👨🏽‍🚒"
      },
      {
        unified: "1f468-1f3fe-200d-1f692",
        native: "👨🏾‍🚒"
      },
      {
        unified: "1f468-1f3ff-200d-1f692",
        native: "👨🏿‍🚒"
      }
    ],
    version: 4
  },
  "female-firefighter": {
    id: "female-firefighter",
    name: "Woman Firefighter",
    keywords: [
      "female",
      "fireman",
      "human"
    ],
    skins: [
      {
        unified: "1f469-200d-1f692",
        native: "👩‍🚒"
      },
      {
        unified: "1f469-1f3fb-200d-1f692",
        native: "👩🏻‍🚒"
      },
      {
        unified: "1f469-1f3fc-200d-1f692",
        native: "👩🏼‍🚒"
      },
      {
        unified: "1f469-1f3fd-200d-1f692",
        native: "👩🏽‍🚒"
      },
      {
        unified: "1f469-1f3fe-200d-1f692",
        native: "👩🏾‍🚒"
      },
      {
        unified: "1f469-1f3ff-200d-1f692",
        native: "👩🏿‍🚒"
      }
    ],
    version: 4
  },
  cop: {
    id: "cop",
    name: "Police Officer",
    keywords: [
      "cop"
    ],
    skins: [
      {
        unified: "1f46e",
        native: "👮"
      },
      {
        unified: "1f46e-1f3fb",
        native: "👮🏻"
      },
      {
        unified: "1f46e-1f3fc",
        native: "👮🏼"
      },
      {
        unified: "1f46e-1f3fd",
        native: "👮🏽"
      },
      {
        unified: "1f46e-1f3fe",
        native: "👮🏾"
      },
      {
        unified: "1f46e-1f3ff",
        native: "👮🏿"
      }
    ],
    version: 1
  },
  "male-police-officer": {
    id: "male-police-officer",
    name: "Man Police Officer",
    keywords: [
      "male",
      "police-officer",
      "law",
      "legal",
      "enforcement",
      "arrest",
      "911"
    ],
    skins: [
      {
        unified: "1f46e-200d-2642-fe0f",
        native: "👮‍♂️"
      },
      {
        unified: "1f46e-1f3fb-200d-2642-fe0f",
        native: "👮🏻‍♂️"
      },
      {
        unified: "1f46e-1f3fc-200d-2642-fe0f",
        native: "👮🏼‍♂️"
      },
      {
        unified: "1f46e-1f3fd-200d-2642-fe0f",
        native: "👮🏽‍♂️"
      },
      {
        unified: "1f46e-1f3fe-200d-2642-fe0f",
        native: "👮🏾‍♂️"
      },
      {
        unified: "1f46e-1f3ff-200d-2642-fe0f",
        native: "👮🏿‍♂️"
      }
    ],
    version: 4
  },
  "female-police-officer": {
    id: "female-police-officer",
    name: "Woman Police Officer",
    keywords: [
      "female",
      "police-officer",
      "law",
      "legal",
      "enforcement",
      "arrest",
      "911"
    ],
    skins: [
      {
        unified: "1f46e-200d-2640-fe0f",
        native: "👮‍♀️"
      },
      {
        unified: "1f46e-1f3fb-200d-2640-fe0f",
        native: "👮🏻‍♀️"
      },
      {
        unified: "1f46e-1f3fc-200d-2640-fe0f",
        native: "👮🏼‍♀️"
      },
      {
        unified: "1f46e-1f3fd-200d-2640-fe0f",
        native: "👮🏽‍♀️"
      },
      {
        unified: "1f46e-1f3fe-200d-2640-fe0f",
        native: "👮🏾‍♀️"
      },
      {
        unified: "1f46e-1f3ff-200d-2640-fe0f",
        native: "👮🏿‍♀️"
      }
    ],
    version: 4
  },
  sleuth_or_spy: {
    id: "sleuth_or_spy",
    name: "Detective",
    keywords: [
      "sleuth",
      "or",
      "spy",
      "human"
    ],
    skins: [
      {
        unified: "1f575-fe0f",
        native: "🕵️"
      },
      {
        unified: "1f575-1f3fb",
        native: "🕵🏻"
      },
      {
        unified: "1f575-1f3fc",
        native: "🕵🏼"
      },
      {
        unified: "1f575-1f3fd",
        native: "🕵🏽"
      },
      {
        unified: "1f575-1f3fe",
        native: "🕵🏾"
      },
      {
        unified: "1f575-1f3ff",
        native: "🕵🏿"
      }
    ],
    version: 1
  },
  "male-detective": {
    id: "male-detective",
    name: "Man Detective",
    keywords: [
      "male",
      "crime"
    ],
    skins: [
      {
        unified: "1f575-fe0f-200d-2642-fe0f",
        native: "🕵️‍♂️"
      },
      {
        unified: "1f575-1f3fb-200d-2642-fe0f",
        native: "🕵🏻‍♂️"
      },
      {
        unified: "1f575-1f3fc-200d-2642-fe0f",
        native: "🕵🏼‍♂️"
      },
      {
        unified: "1f575-1f3fd-200d-2642-fe0f",
        native: "🕵🏽‍♂️"
      },
      {
        unified: "1f575-1f3fe-200d-2642-fe0f",
        native: "🕵🏾‍♂️"
      },
      {
        unified: "1f575-1f3ff-200d-2642-fe0f",
        native: "🕵🏿‍♂️"
      }
    ],
    version: 4
  },
  "female-detective": {
    id: "female-detective",
    name: "Woman Detective",
    keywords: [
      "female",
      "human",
      "spy"
    ],
    skins: [
      {
        unified: "1f575-fe0f-200d-2640-fe0f",
        native: "🕵️‍♀️"
      },
      {
        unified: "1f575-1f3fb-200d-2640-fe0f",
        native: "🕵🏻‍♀️"
      },
      {
        unified: "1f575-1f3fc-200d-2640-fe0f",
        native: "🕵🏼‍♀️"
      },
      {
        unified: "1f575-1f3fd-200d-2640-fe0f",
        native: "🕵🏽‍♀️"
      },
      {
        unified: "1f575-1f3fe-200d-2640-fe0f",
        native: "🕵🏾‍♀️"
      },
      {
        unified: "1f575-1f3ff-200d-2640-fe0f",
        native: "🕵🏿‍♀️"
      }
    ],
    version: 4
  },
  guardsman: {
    id: "guardsman",
    name: "Guard",
    keywords: [
      "guardsman",
      "protect"
    ],
    skins: [
      {
        unified: "1f482",
        native: "💂"
      },
      {
        unified: "1f482-1f3fb",
        native: "💂🏻"
      },
      {
        unified: "1f482-1f3fc",
        native: "💂🏼"
      },
      {
        unified: "1f482-1f3fd",
        native: "💂🏽"
      },
      {
        unified: "1f482-1f3fe",
        native: "💂🏾"
      },
      {
        unified: "1f482-1f3ff",
        native: "💂🏿"
      }
    ],
    version: 1
  },
  "male-guard": {
    id: "male-guard",
    name: "Man Guard",
    keywords: [
      "male",
      "uk",
      "gb",
      "british",
      "guy",
      "royal"
    ],
    skins: [
      {
        unified: "1f482-200d-2642-fe0f",
        native: "💂‍♂️"
      },
      {
        unified: "1f482-1f3fb-200d-2642-fe0f",
        native: "💂🏻‍♂️"
      },
      {
        unified: "1f482-1f3fc-200d-2642-fe0f",
        native: "💂🏼‍♂️"
      },
      {
        unified: "1f482-1f3fd-200d-2642-fe0f",
        native: "💂🏽‍♂️"
      },
      {
        unified: "1f482-1f3fe-200d-2642-fe0f",
        native: "💂🏾‍♂️"
      },
      {
        unified: "1f482-1f3ff-200d-2642-fe0f",
        native: "💂🏿‍♂️"
      }
    ],
    version: 4
  },
  "female-guard": {
    id: "female-guard",
    name: "Woman Guard",
    keywords: [
      "female",
      "uk",
      "gb",
      "british",
      "royal"
    ],
    skins: [
      {
        unified: "1f482-200d-2640-fe0f",
        native: "💂‍♀️"
      },
      {
        unified: "1f482-1f3fb-200d-2640-fe0f",
        native: "💂🏻‍♀️"
      },
      {
        unified: "1f482-1f3fc-200d-2640-fe0f",
        native: "💂🏼‍♀️"
      },
      {
        unified: "1f482-1f3fd-200d-2640-fe0f",
        native: "💂🏽‍♀️"
      },
      {
        unified: "1f482-1f3fe-200d-2640-fe0f",
        native: "💂🏾‍♀️"
      },
      {
        unified: "1f482-1f3ff-200d-2640-fe0f",
        native: "💂🏿‍♀️"
      }
    ],
    version: 4
  },
  ninja: {
    id: "ninja",
    name: "Ninja",
    keywords: [
      "ninjutsu",
      "skills",
      "japanese"
    ],
    skins: [
      {
        unified: "1f977",
        native: "🥷"
      },
      {
        unified: "1f977-1f3fb",
        native: "🥷🏻"
      },
      {
        unified: "1f977-1f3fc",
        native: "🥷🏼"
      },
      {
        unified: "1f977-1f3fd",
        native: "🥷🏽"
      },
      {
        unified: "1f977-1f3fe",
        native: "🥷🏾"
      },
      {
        unified: "1f977-1f3ff",
        native: "🥷🏿"
      }
    ],
    version: 13
  },
  construction_worker: {
    id: "construction_worker",
    name: "Construction Worker",
    keywords: [
      "labor",
      "build"
    ],
    skins: [
      {
        unified: "1f477",
        native: "👷"
      },
      {
        unified: "1f477-1f3fb",
        native: "👷🏻"
      },
      {
        unified: "1f477-1f3fc",
        native: "👷🏼"
      },
      {
        unified: "1f477-1f3fd",
        native: "👷🏽"
      },
      {
        unified: "1f477-1f3fe",
        native: "👷🏾"
      },
      {
        unified: "1f477-1f3ff",
        native: "👷🏿"
      }
    ],
    version: 1
  },
  "male-construction-worker": {
    id: "male-construction-worker",
    name: "Man Construction Worker",
    keywords: [
      "male",
      "construction-worker",
      "human",
      "wip",
      "guy",
      "build",
      "labor"
    ],
    skins: [
      {
        unified: "1f477-200d-2642-fe0f",
        native: "👷‍♂️"
      },
      {
        unified: "1f477-1f3fb-200d-2642-fe0f",
        native: "👷🏻‍♂️"
      },
      {
        unified: "1f477-1f3fc-200d-2642-fe0f",
        native: "👷🏼‍♂️"
      },
      {
        unified: "1f477-1f3fd-200d-2642-fe0f",
        native: "👷🏽‍♂️"
      },
      {
        unified: "1f477-1f3fe-200d-2642-fe0f",
        native: "👷🏾‍♂️"
      },
      {
        unified: "1f477-1f3ff-200d-2642-fe0f",
        native: "👷🏿‍♂️"
      }
    ],
    version: 4
  },
  "female-construction-worker": {
    id: "female-construction-worker",
    name: "Woman Construction Worker",
    keywords: [
      "female",
      "construction-worker",
      "human",
      "wip",
      "build",
      "labor"
    ],
    skins: [
      {
        unified: "1f477-200d-2640-fe0f",
        native: "👷‍♀️"
      },
      {
        unified: "1f477-1f3fb-200d-2640-fe0f",
        native: "👷🏻‍♀️"
      },
      {
        unified: "1f477-1f3fc-200d-2640-fe0f",
        native: "👷🏼‍♀️"
      },
      {
        unified: "1f477-1f3fd-200d-2640-fe0f",
        native: "👷🏽‍♀️"
      },
      {
        unified: "1f477-1f3fe-200d-2640-fe0f",
        native: "👷🏾‍♀️"
      },
      {
        unified: "1f477-1f3ff-200d-2640-fe0f",
        native: "👷🏿‍♀️"
      }
    ],
    version: 4
  },
  person_with_crown: {
    id: "person_with_crown",
    name: "Person with Crown",
    keywords: [
      "royalty",
      "power"
    ],
    skins: [
      {
        unified: "1fac5",
        native: "🫅"
      },
      {
        unified: "1fac5-1f3fb",
        native: "🫅🏻"
      },
      {
        unified: "1fac5-1f3fc",
        native: "🫅🏼"
      },
      {
        unified: "1fac5-1f3fd",
        native: "🫅🏽"
      },
      {
        unified: "1fac5-1f3fe",
        native: "🫅🏾"
      },
      {
        unified: "1fac5-1f3ff",
        native: "🫅🏿"
      }
    ],
    version: 14
  },
  prince: {
    id: "prince",
    name: "Prince",
    keywords: [
      "boy",
      "man",
      "male",
      "crown",
      "royal",
      "king"
    ],
    skins: [
      {
        unified: "1f934",
        native: "🤴"
      },
      {
        unified: "1f934-1f3fb",
        native: "🤴🏻"
      },
      {
        unified: "1f934-1f3fc",
        native: "🤴🏼"
      },
      {
        unified: "1f934-1f3fd",
        native: "🤴🏽"
      },
      {
        unified: "1f934-1f3fe",
        native: "🤴🏾"
      },
      {
        unified: "1f934-1f3ff",
        native: "🤴🏿"
      }
    ],
    version: 3
  },
  princess: {
    id: "princess",
    name: "Princess",
    keywords: [
      "girl",
      "woman",
      "female",
      "blond",
      "crown",
      "royal",
      "queen"
    ],
    skins: [
      {
        unified: "1f478",
        native: "👸"
      },
      {
        unified: "1f478-1f3fb",
        native: "👸🏻"
      },
      {
        unified: "1f478-1f3fc",
        native: "👸🏼"
      },
      {
        unified: "1f478-1f3fd",
        native: "👸🏽"
      },
      {
        unified: "1f478-1f3fe",
        native: "👸🏾"
      },
      {
        unified: "1f478-1f3ff",
        native: "👸🏿"
      }
    ],
    version: 1
  },
  man_with_turban: {
    id: "man_with_turban",
    name: "Man with Turban",
    keywords: [
      "person",
      "wearing",
      "headdress"
    ],
    skins: [
      {
        unified: "1f473",
        native: "👳"
      },
      {
        unified: "1f473-1f3fb",
        native: "👳🏻"
      },
      {
        unified: "1f473-1f3fc",
        native: "👳🏼"
      },
      {
        unified: "1f473-1f3fd",
        native: "👳🏽"
      },
      {
        unified: "1f473-1f3fe",
        native: "👳🏾"
      },
      {
        unified: "1f473-1f3ff",
        native: "👳🏿"
      }
    ],
    version: 1
  },
  "man-wearing-turban": {
    id: "man-wearing-turban",
    name: "Man Wearing Turban",
    keywords: [
      "wearing-turban",
      "male",
      "indian",
      "hinduism",
      "arabs"
    ],
    skins: [
      {
        unified: "1f473-200d-2642-fe0f",
        native: "👳‍♂️"
      },
      {
        unified: "1f473-1f3fb-200d-2642-fe0f",
        native: "👳🏻‍♂️"
      },
      {
        unified: "1f473-1f3fc-200d-2642-fe0f",
        native: "👳🏼‍♂️"
      },
      {
        unified: "1f473-1f3fd-200d-2642-fe0f",
        native: "👳🏽‍♂️"
      },
      {
        unified: "1f473-1f3fe-200d-2642-fe0f",
        native: "👳🏾‍♂️"
      },
      {
        unified: "1f473-1f3ff-200d-2642-fe0f",
        native: "👳🏿‍♂️"
      }
    ],
    version: 4
  },
  "woman-wearing-turban": {
    id: "woman-wearing-turban",
    name: "Woman Wearing Turban",
    keywords: [
      "wearing-turban",
      "female",
      "indian",
      "hinduism",
      "arabs"
    ],
    skins: [
      {
        unified: "1f473-200d-2640-fe0f",
        native: "👳‍♀️"
      },
      {
        unified: "1f473-1f3fb-200d-2640-fe0f",
        native: "👳🏻‍♀️"
      },
      {
        unified: "1f473-1f3fc-200d-2640-fe0f",
        native: "👳🏼‍♀️"
      },
      {
        unified: "1f473-1f3fd-200d-2640-fe0f",
        native: "👳🏽‍♀️"
      },
      {
        unified: "1f473-1f3fe-200d-2640-fe0f",
        native: "👳🏾‍♀️"
      },
      {
        unified: "1f473-1f3ff-200d-2640-fe0f",
        native: "👳🏿‍♀️"
      }
    ],
    version: 4
  },
  man_with_gua_pi_mao: {
    id: "man_with_gua_pi_mao",
    name: "Man with Gua Pi Mao",
    keywords: [
      "skullcap",
      "male",
      "boy",
      "chinese"
    ],
    skins: [
      {
        unified: "1f472",
        native: "👲"
      },
      {
        unified: "1f472-1f3fb",
        native: "👲🏻"
      },
      {
        unified: "1f472-1f3fc",
        native: "👲🏼"
      },
      {
        unified: "1f472-1f3fd",
        native: "👲🏽"
      },
      {
        unified: "1f472-1f3fe",
        native: "👲🏾"
      },
      {
        unified: "1f472-1f3ff",
        native: "👲🏿"
      }
    ],
    version: 1
  },
  person_with_headscarf: {
    id: "person_with_headscarf",
    name: "Woman with Headscarf",
    keywords: [
      "person",
      "female",
      "hijab",
      "mantilla",
      "tichel"
    ],
    skins: [
      {
        unified: "1f9d5",
        native: "🧕"
      },
      {
        unified: "1f9d5-1f3fb",
        native: "🧕🏻"
      },
      {
        unified: "1f9d5-1f3fc",
        native: "🧕🏼"
      },
      {
        unified: "1f9d5-1f3fd",
        native: "🧕🏽"
      },
      {
        unified: "1f9d5-1f3fe",
        native: "🧕🏾"
      },
      {
        unified: "1f9d5-1f3ff",
        native: "🧕🏿"
      }
    ],
    version: 5
  },
  person_in_tuxedo: {
    id: "person_in_tuxedo",
    name: "Man in Tuxedo",
    keywords: [
      "person",
      "couple",
      "marriage",
      "wedding",
      "groom"
    ],
    skins: [
      {
        unified: "1f935",
        native: "🤵"
      },
      {
        unified: "1f935-1f3fb",
        native: "🤵🏻"
      },
      {
        unified: "1f935-1f3fc",
        native: "🤵🏼"
      },
      {
        unified: "1f935-1f3fd",
        native: "🤵🏽"
      },
      {
        unified: "1f935-1f3fe",
        native: "🤵🏾"
      },
      {
        unified: "1f935-1f3ff",
        native: "🤵🏿"
      }
    ],
    version: 3
  },
  man_in_tuxedo: {
    id: "man_in_tuxedo",
    name: "Man in Tuxedo",
    keywords: [
      "formal",
      "fashion"
    ],
    skins: [
      {
        unified: "1f935-200d-2642-fe0f",
        native: "🤵‍♂️"
      },
      {
        unified: "1f935-1f3fb-200d-2642-fe0f",
        native: "🤵🏻‍♂️"
      },
      {
        unified: "1f935-1f3fc-200d-2642-fe0f",
        native: "🤵🏼‍♂️"
      },
      {
        unified: "1f935-1f3fd-200d-2642-fe0f",
        native: "🤵🏽‍♂️"
      },
      {
        unified: "1f935-1f3fe-200d-2642-fe0f",
        native: "🤵🏾‍♂️"
      },
      {
        unified: "1f935-1f3ff-200d-2642-fe0f",
        native: "🤵🏿‍♂️"
      }
    ],
    version: 13
  },
  woman_in_tuxedo: {
    id: "woman_in_tuxedo",
    name: "Woman in Tuxedo",
    keywords: [
      "formal",
      "fashion"
    ],
    skins: [
      {
        unified: "1f935-200d-2640-fe0f",
        native: "🤵‍♀️"
      },
      {
        unified: "1f935-1f3fb-200d-2640-fe0f",
        native: "🤵🏻‍♀️"
      },
      {
        unified: "1f935-1f3fc-200d-2640-fe0f",
        native: "🤵🏼‍♀️"
      },
      {
        unified: "1f935-1f3fd-200d-2640-fe0f",
        native: "🤵🏽‍♀️"
      },
      {
        unified: "1f935-1f3fe-200d-2640-fe0f",
        native: "🤵🏾‍♀️"
      },
      {
        unified: "1f935-1f3ff-200d-2640-fe0f",
        native: "🤵🏿‍♀️"
      }
    ],
    version: 13
  },
  bride_with_veil: {
    id: "bride_with_veil",
    name: "Bride with Veil",
    keywords: [
      "couple",
      "marriage",
      "wedding",
      "woman"
    ],
    skins: [
      {
        unified: "1f470",
        native: "👰"
      },
      {
        unified: "1f470-1f3fb",
        native: "👰🏻"
      },
      {
        unified: "1f470-1f3fc",
        native: "👰🏼"
      },
      {
        unified: "1f470-1f3fd",
        native: "👰🏽"
      },
      {
        unified: "1f470-1f3fe",
        native: "👰🏾"
      },
      {
        unified: "1f470-1f3ff",
        native: "👰🏿"
      }
    ],
    version: 1
  },
  man_with_veil: {
    id: "man_with_veil",
    name: "Man with Veil",
    keywords: [
      "wedding",
      "marriage"
    ],
    skins: [
      {
        unified: "1f470-200d-2642-fe0f",
        native: "👰‍♂️"
      },
      {
        unified: "1f470-1f3fb-200d-2642-fe0f",
        native: "👰🏻‍♂️"
      },
      {
        unified: "1f470-1f3fc-200d-2642-fe0f",
        native: "👰🏼‍♂️"
      },
      {
        unified: "1f470-1f3fd-200d-2642-fe0f",
        native: "👰🏽‍♂️"
      },
      {
        unified: "1f470-1f3fe-200d-2642-fe0f",
        native: "👰🏾‍♂️"
      },
      {
        unified: "1f470-1f3ff-200d-2642-fe0f",
        native: "👰🏿‍♂️"
      }
    ],
    version: 13
  },
  woman_with_veil: {
    id: "woman_with_veil",
    name: "Woman with Veil",
    keywords: [
      "wedding",
      "marriage"
    ],
    skins: [
      {
        unified: "1f470-200d-2640-fe0f",
        native: "👰‍♀️"
      },
      {
        unified: "1f470-1f3fb-200d-2640-fe0f",
        native: "👰🏻‍♀️"
      },
      {
        unified: "1f470-1f3fc-200d-2640-fe0f",
        native: "👰🏼‍♀️"
      },
      {
        unified: "1f470-1f3fd-200d-2640-fe0f",
        native: "👰🏽‍♀️"
      },
      {
        unified: "1f470-1f3fe-200d-2640-fe0f",
        native: "👰🏾‍♀️"
      },
      {
        unified: "1f470-1f3ff-200d-2640-fe0f",
        native: "👰🏿‍♀️"
      }
    ],
    version: 13
  },
  pregnant_woman: {
    id: "pregnant_woman",
    name: "Pregnant Woman",
    keywords: [
      "baby"
    ],
    skins: [
      {
        unified: "1f930",
        native: "🤰"
      },
      {
        unified: "1f930-1f3fb",
        native: "🤰🏻"
      },
      {
        unified: "1f930-1f3fc",
        native: "🤰🏼"
      },
      {
        unified: "1f930-1f3fd",
        native: "🤰🏽"
      },
      {
        unified: "1f930-1f3fe",
        native: "🤰🏾"
      },
      {
        unified: "1f930-1f3ff",
        native: "🤰🏿"
      }
    ],
    version: 3
  },
  pregnant_man: {
    id: "pregnant_man",
    name: "Pregnant Man",
    keywords: [
      "baby",
      "belly"
    ],
    skins: [
      {
        unified: "1fac3",
        native: "🫃"
      },
      {
        unified: "1fac3-1f3fb",
        native: "🫃🏻"
      },
      {
        unified: "1fac3-1f3fc",
        native: "🫃🏼"
      },
      {
        unified: "1fac3-1f3fd",
        native: "🫃🏽"
      },
      {
        unified: "1fac3-1f3fe",
        native: "🫃🏾"
      },
      {
        unified: "1fac3-1f3ff",
        native: "🫃🏿"
      }
    ],
    version: 14
  },
  pregnant_person: {
    id: "pregnant_person",
    name: "Pregnant Person",
    keywords: [
      "baby",
      "belly"
    ],
    skins: [
      {
        unified: "1fac4",
        native: "🫄"
      },
      {
        unified: "1fac4-1f3fb",
        native: "🫄🏻"
      },
      {
        unified: "1fac4-1f3fc",
        native: "🫄🏼"
      },
      {
        unified: "1fac4-1f3fd",
        native: "🫄🏽"
      },
      {
        unified: "1fac4-1f3fe",
        native: "🫄🏾"
      },
      {
        unified: "1fac4-1f3ff",
        native: "🫄🏿"
      }
    ],
    version: 14
  },
  "breast-feeding": {
    id: "breast-feeding",
    name: "Breast-Feeding",
    keywords: [
      "breast",
      "feeding",
      "nursing",
      "baby"
    ],
    skins: [
      {
        unified: "1f931",
        native: "🤱"
      },
      {
        unified: "1f931-1f3fb",
        native: "🤱🏻"
      },
      {
        unified: "1f931-1f3fc",
        native: "🤱🏼"
      },
      {
        unified: "1f931-1f3fd",
        native: "🤱🏽"
      },
      {
        unified: "1f931-1f3fe",
        native: "🤱🏾"
      },
      {
        unified: "1f931-1f3ff",
        native: "🤱🏿"
      }
    ],
    version: 5
  },
  woman_feeding_baby: {
    id: "woman_feeding_baby",
    name: "Woman Feeding Baby",
    keywords: [
      "birth",
      "food"
    ],
    skins: [
      {
        unified: "1f469-200d-1f37c",
        native: "👩‍🍼"
      },
      {
        unified: "1f469-1f3fb-200d-1f37c",
        native: "👩🏻‍🍼"
      },
      {
        unified: "1f469-1f3fc-200d-1f37c",
        native: "👩🏼‍🍼"
      },
      {
        unified: "1f469-1f3fd-200d-1f37c",
        native: "👩🏽‍🍼"
      },
      {
        unified: "1f469-1f3fe-200d-1f37c",
        native: "👩🏾‍🍼"
      },
      {
        unified: "1f469-1f3ff-200d-1f37c",
        native: "👩🏿‍🍼"
      }
    ],
    version: 13
  },
  man_feeding_baby: {
    id: "man_feeding_baby",
    name: "Man Feeding Baby",
    keywords: [
      "birth",
      "food"
    ],
    skins: [
      {
        unified: "1f468-200d-1f37c",
        native: "👨‍🍼"
      },
      {
        unified: "1f468-1f3fb-200d-1f37c",
        native: "👨🏻‍🍼"
      },
      {
        unified: "1f468-1f3fc-200d-1f37c",
        native: "👨🏼‍🍼"
      },
      {
        unified: "1f468-1f3fd-200d-1f37c",
        native: "👨🏽‍🍼"
      },
      {
        unified: "1f468-1f3fe-200d-1f37c",
        native: "👨🏾‍🍼"
      },
      {
        unified: "1f468-1f3ff-200d-1f37c",
        native: "👨🏿‍🍼"
      }
    ],
    version: 13
  },
  person_feeding_baby: {
    id: "person_feeding_baby",
    name: "Person Feeding Baby",
    keywords: [
      "birth",
      "food"
    ],
    skins: [
      {
        unified: "1f9d1-200d-1f37c",
        native: "🧑‍🍼"
      },
      {
        unified: "1f9d1-1f3fb-200d-1f37c",
        native: "🧑🏻‍🍼"
      },
      {
        unified: "1f9d1-1f3fc-200d-1f37c",
        native: "🧑🏼‍🍼"
      },
      {
        unified: "1f9d1-1f3fd-200d-1f37c",
        native: "🧑🏽‍🍼"
      },
      {
        unified: "1f9d1-1f3fe-200d-1f37c",
        native: "🧑🏾‍🍼"
      },
      {
        unified: "1f9d1-1f3ff-200d-1f37c",
        native: "🧑🏿‍🍼"
      }
    ],
    version: 13
  },
  angel: {
    id: "angel",
    name: "Baby Angel",
    keywords: [
      "heaven",
      "wings",
      "halo"
    ],
    skins: [
      {
        unified: "1f47c",
        native: "👼"
      },
      {
        unified: "1f47c-1f3fb",
        native: "👼🏻"
      },
      {
        unified: "1f47c-1f3fc",
        native: "👼🏼"
      },
      {
        unified: "1f47c-1f3fd",
        native: "👼🏽"
      },
      {
        unified: "1f47c-1f3fe",
        native: "👼🏾"
      },
      {
        unified: "1f47c-1f3ff",
        native: "👼🏿"
      }
    ],
    version: 1
  },
  santa: {
    id: "santa",
    name: "Santa Claus",
    keywords: [
      "festival",
      "man",
      "male",
      "xmas",
      "father",
      "christmas"
    ],
    skins: [
      {
        unified: "1f385",
        native: "🎅"
      },
      {
        unified: "1f385-1f3fb",
        native: "🎅🏻"
      },
      {
        unified: "1f385-1f3fc",
        native: "🎅🏼"
      },
      {
        unified: "1f385-1f3fd",
        native: "🎅🏽"
      },
      {
        unified: "1f385-1f3fe",
        native: "🎅🏾"
      },
      {
        unified: "1f385-1f3ff",
        native: "🎅🏿"
      }
    ],
    version: 1
  },
  mrs_claus: {
    id: "mrs_claus",
    name: "Mrs. Claus",
    keywords: [
      "mrs",
      "mother",
      "christmas",
      "woman",
      "female",
      "xmas"
    ],
    skins: [
      {
        unified: "1f936",
        native: "🤶"
      },
      {
        unified: "1f936-1f3fb",
        native: "🤶🏻"
      },
      {
        unified: "1f936-1f3fc",
        native: "🤶🏼"
      },
      {
        unified: "1f936-1f3fd",
        native: "🤶🏽"
      },
      {
        unified: "1f936-1f3fe",
        native: "🤶🏾"
      },
      {
        unified: "1f936-1f3ff",
        native: "🤶🏿"
      }
    ],
    version: 3
  },
  mx_claus: {
    id: "mx_claus",
    name: "Mx Claus",
    keywords: [
      "christmas"
    ],
    skins: [
      {
        unified: "1f9d1-200d-1f384",
        native: "🧑‍🎄"
      },
      {
        unified: "1f9d1-1f3fb-200d-1f384",
        native: "🧑🏻‍🎄"
      },
      {
        unified: "1f9d1-1f3fc-200d-1f384",
        native: "🧑🏼‍🎄"
      },
      {
        unified: "1f9d1-1f3fd-200d-1f384",
        native: "🧑🏽‍🎄"
      },
      {
        unified: "1f9d1-1f3fe-200d-1f384",
        native: "🧑🏾‍🎄"
      },
      {
        unified: "1f9d1-1f3ff-200d-1f384",
        native: "🧑🏿‍🎄"
      }
    ],
    version: 13
  },
  superhero: {
    id: "superhero",
    name: "Superhero",
    keywords: [
      "marvel"
    ],
    skins: [
      {
        unified: "1f9b8",
        native: "🦸"
      },
      {
        unified: "1f9b8-1f3fb",
        native: "🦸🏻"
      },
      {
        unified: "1f9b8-1f3fc",
        native: "🦸🏼"
      },
      {
        unified: "1f9b8-1f3fd",
        native: "🦸🏽"
      },
      {
        unified: "1f9b8-1f3fe",
        native: "🦸🏾"
      },
      {
        unified: "1f9b8-1f3ff",
        native: "🦸🏿"
      }
    ],
    version: 11
  },
  male_superhero: {
    id: "male_superhero",
    name: "Man Superhero",
    keywords: [
      "male",
      "good",
      "hero",
      "superpowers"
    ],
    skins: [
      {
        unified: "1f9b8-200d-2642-fe0f",
        native: "🦸‍♂️"
      },
      {
        unified: "1f9b8-1f3fb-200d-2642-fe0f",
        native: "🦸🏻‍♂️"
      },
      {
        unified: "1f9b8-1f3fc-200d-2642-fe0f",
        native: "🦸🏼‍♂️"
      },
      {
        unified: "1f9b8-1f3fd-200d-2642-fe0f",
        native: "🦸🏽‍♂️"
      },
      {
        unified: "1f9b8-1f3fe-200d-2642-fe0f",
        native: "🦸🏾‍♂️"
      },
      {
        unified: "1f9b8-1f3ff-200d-2642-fe0f",
        native: "🦸🏿‍♂️"
      }
    ],
    version: 11
  },
  female_superhero: {
    id: "female_superhero",
    name: "Woman Superhero",
    keywords: [
      "female",
      "good",
      "heroine",
      "superpowers"
    ],
    skins: [
      {
        unified: "1f9b8-200d-2640-fe0f",
        native: "🦸‍♀️"
      },
      {
        unified: "1f9b8-1f3fb-200d-2640-fe0f",
        native: "🦸🏻‍♀️"
      },
      {
        unified: "1f9b8-1f3fc-200d-2640-fe0f",
        native: "🦸🏼‍♀️"
      },
      {
        unified: "1f9b8-1f3fd-200d-2640-fe0f",
        native: "🦸🏽‍♀️"
      },
      {
        unified: "1f9b8-1f3fe-200d-2640-fe0f",
        native: "🦸🏾‍♀️"
      },
      {
        unified: "1f9b8-1f3ff-200d-2640-fe0f",
        native: "🦸🏿‍♀️"
      }
    ],
    version: 11
  },
  supervillain: {
    id: "supervillain",
    name: "Supervillain",
    keywords: [
      "marvel"
    ],
    skins: [
      {
        unified: "1f9b9",
        native: "🦹"
      },
      {
        unified: "1f9b9-1f3fb",
        native: "🦹🏻"
      },
      {
        unified: "1f9b9-1f3fc",
        native: "🦹🏼"
      },
      {
        unified: "1f9b9-1f3fd",
        native: "🦹🏽"
      },
      {
        unified: "1f9b9-1f3fe",
        native: "🦹🏾"
      },
      {
        unified: "1f9b9-1f3ff",
        native: "🦹🏿"
      }
    ],
    version: 11
  },
  male_supervillain: {
    id: "male_supervillain",
    name: "Man Supervillain",
    keywords: [
      "male",
      "evil",
      "bad",
      "criminal",
      "hero",
      "superpowers"
    ],
    skins: [
      {
        unified: "1f9b9-200d-2642-fe0f",
        native: "🦹‍♂️"
      },
      {
        unified: "1f9b9-1f3fb-200d-2642-fe0f",
        native: "🦹🏻‍♂️"
      },
      {
        unified: "1f9b9-1f3fc-200d-2642-fe0f",
        native: "🦹🏼‍♂️"
      },
      {
        unified: "1f9b9-1f3fd-200d-2642-fe0f",
        native: "🦹🏽‍♂️"
      },
      {
        unified: "1f9b9-1f3fe-200d-2642-fe0f",
        native: "🦹🏾‍♂️"
      },
      {
        unified: "1f9b9-1f3ff-200d-2642-fe0f",
        native: "🦹🏿‍♂️"
      }
    ],
    version: 11
  },
  female_supervillain: {
    id: "female_supervillain",
    name: "Woman Supervillain",
    keywords: [
      "female",
      "evil",
      "bad",
      "criminal",
      "heroine",
      "superpowers"
    ],
    skins: [
      {
        unified: "1f9b9-200d-2640-fe0f",
        native: "🦹‍♀️"
      },
      {
        unified: "1f9b9-1f3fb-200d-2640-fe0f",
        native: "🦹🏻‍♀️"
      },
      {
        unified: "1f9b9-1f3fc-200d-2640-fe0f",
        native: "🦹🏼‍♀️"
      },
      {
        unified: "1f9b9-1f3fd-200d-2640-fe0f",
        native: "🦹🏽‍♀️"
      },
      {
        unified: "1f9b9-1f3fe-200d-2640-fe0f",
        native: "🦹🏾‍♀️"
      },
      {
        unified: "1f9b9-1f3ff-200d-2640-fe0f",
        native: "🦹🏿‍♀️"
      }
    ],
    version: 11
  },
  mage: {
    id: "mage",
    name: "Mage",
    keywords: [
      "magic"
    ],
    skins: [
      {
        unified: "1f9d9",
        native: "🧙"
      },
      {
        unified: "1f9d9-1f3fb",
        native: "🧙🏻"
      },
      {
        unified: "1f9d9-1f3fc",
        native: "🧙🏼"
      },
      {
        unified: "1f9d9-1f3fd",
        native: "🧙🏽"
      },
      {
        unified: "1f9d9-1f3fe",
        native: "🧙🏾"
      },
      {
        unified: "1f9d9-1f3ff",
        native: "🧙🏿"
      }
    ],
    version: 5
  },
  male_mage: {
    id: "male_mage",
    name: "Man Mage",
    keywords: [
      "male",
      "sorcerer"
    ],
    skins: [
      {
        unified: "1f9d9-200d-2642-fe0f",
        native: "🧙‍♂️"
      },
      {
        unified: "1f9d9-1f3fb-200d-2642-fe0f",
        native: "🧙🏻‍♂️"
      },
      {
        unified: "1f9d9-1f3fc-200d-2642-fe0f",
        native: "🧙🏼‍♂️"
      },
      {
        unified: "1f9d9-1f3fd-200d-2642-fe0f",
        native: "🧙🏽‍♂️"
      },
      {
        unified: "1f9d9-1f3fe-200d-2642-fe0f",
        native: "🧙🏾‍♂️"
      },
      {
        unified: "1f9d9-1f3ff-200d-2642-fe0f",
        native: "🧙🏿‍♂️"
      }
    ],
    version: 5
  },
  female_mage: {
    id: "female_mage",
    name: "Woman Mage",
    keywords: [
      "female",
      "witch"
    ],
    skins: [
      {
        unified: "1f9d9-200d-2640-fe0f",
        native: "🧙‍♀️"
      },
      {
        unified: "1f9d9-1f3fb-200d-2640-fe0f",
        native: "🧙🏻‍♀️"
      },
      {
        unified: "1f9d9-1f3fc-200d-2640-fe0f",
        native: "🧙🏼‍♀️"
      },
      {
        unified: "1f9d9-1f3fd-200d-2640-fe0f",
        native: "🧙🏽‍♀️"
      },
      {
        unified: "1f9d9-1f3fe-200d-2640-fe0f",
        native: "🧙🏾‍♀️"
      },
      {
        unified: "1f9d9-1f3ff-200d-2640-fe0f",
        native: "🧙🏿‍♀️"
      }
    ],
    version: 5
  },
  fairy: {
    id: "fairy",
    name: "Fairy",
    keywords: [
      "wings",
      "magical"
    ],
    skins: [
      {
        unified: "1f9da",
        native: "🧚"
      },
      {
        unified: "1f9da-1f3fb",
        native: "🧚🏻"
      },
      {
        unified: "1f9da-1f3fc",
        native: "🧚🏼"
      },
      {
        unified: "1f9da-1f3fd",
        native: "🧚🏽"
      },
      {
        unified: "1f9da-1f3fe",
        native: "🧚🏾"
      },
      {
        unified: "1f9da-1f3ff",
        native: "🧚🏿"
      }
    ],
    version: 5
  },
  male_fairy: {
    id: "male_fairy",
    name: "Man Fairy",
    keywords: [
      "male"
    ],
    skins: [
      {
        unified: "1f9da-200d-2642-fe0f",
        native: "🧚‍♂️"
      },
      {
        unified: "1f9da-1f3fb-200d-2642-fe0f",
        native: "🧚🏻‍♂️"
      },
      {
        unified: "1f9da-1f3fc-200d-2642-fe0f",
        native: "🧚🏼‍♂️"
      },
      {
        unified: "1f9da-1f3fd-200d-2642-fe0f",
        native: "🧚🏽‍♂️"
      },
      {
        unified: "1f9da-1f3fe-200d-2642-fe0f",
        native: "🧚🏾‍♂️"
      },
      {
        unified: "1f9da-1f3ff-200d-2642-fe0f",
        native: "🧚🏿‍♂️"
      }
    ],
    version: 5
  },
  female_fairy: {
    id: "female_fairy",
    name: "Woman Fairy",
    keywords: [
      "female"
    ],
    skins: [
      {
        unified: "1f9da-200d-2640-fe0f",
        native: "🧚‍♀️"
      },
      {
        unified: "1f9da-1f3fb-200d-2640-fe0f",
        native: "🧚🏻‍♀️"
      },
      {
        unified: "1f9da-1f3fc-200d-2640-fe0f",
        native: "🧚🏼‍♀️"
      },
      {
        unified: "1f9da-1f3fd-200d-2640-fe0f",
        native: "🧚🏽‍♀️"
      },
      {
        unified: "1f9da-1f3fe-200d-2640-fe0f",
        native: "🧚🏾‍♀️"
      },
      {
        unified: "1f9da-1f3ff-200d-2640-fe0f",
        native: "🧚🏿‍♀️"
      }
    ],
    version: 5
  },
  vampire: {
    id: "vampire",
    name: "Vampire",
    keywords: [
      "blood",
      "twilight"
    ],
    skins: [
      {
        unified: "1f9db",
        native: "🧛"
      },
      {
        unified: "1f9db-1f3fb",
        native: "🧛🏻"
      },
      {
        unified: "1f9db-1f3fc",
        native: "🧛🏼"
      },
      {
        unified: "1f9db-1f3fd",
        native: "🧛🏽"
      },
      {
        unified: "1f9db-1f3fe",
        native: "🧛🏾"
      },
      {
        unified: "1f9db-1f3ff",
        native: "🧛🏿"
      }
    ],
    version: 5
  },
  male_vampire: {
    id: "male_vampire",
    name: "Man Vampire",
    keywords: [
      "male",
      "dracula"
    ],
    skins: [
      {
        unified: "1f9db-200d-2642-fe0f",
        native: "🧛‍♂️"
      },
      {
        unified: "1f9db-1f3fb-200d-2642-fe0f",
        native: "🧛🏻‍♂️"
      },
      {
        unified: "1f9db-1f3fc-200d-2642-fe0f",
        native: "🧛🏼‍♂️"
      },
      {
        unified: "1f9db-1f3fd-200d-2642-fe0f",
        native: "🧛🏽‍♂️"
      },
      {
        unified: "1f9db-1f3fe-200d-2642-fe0f",
        native: "🧛🏾‍♂️"
      },
      {
        unified: "1f9db-1f3ff-200d-2642-fe0f",
        native: "🧛🏿‍♂️"
      }
    ],
    version: 5
  },
  female_vampire: {
    id: "female_vampire",
    name: "Woman Vampire",
    keywords: [
      "female"
    ],
    skins: [
      {
        unified: "1f9db-200d-2640-fe0f",
        native: "🧛‍♀️"
      },
      {
        unified: "1f9db-1f3fb-200d-2640-fe0f",
        native: "🧛🏻‍♀️"
      },
      {
        unified: "1f9db-1f3fc-200d-2640-fe0f",
        native: "🧛🏼‍♀️"
      },
      {
        unified: "1f9db-1f3fd-200d-2640-fe0f",
        native: "🧛🏽‍♀️"
      },
      {
        unified: "1f9db-1f3fe-200d-2640-fe0f",
        native: "🧛🏾‍♀️"
      },
      {
        unified: "1f9db-1f3ff-200d-2640-fe0f",
        native: "🧛🏿‍♀️"
      }
    ],
    version: 5
  },
  merperson: {
    id: "merperson",
    name: "Merperson",
    keywords: [
      "sea"
    ],
    skins: [
      {
        unified: "1f9dc",
        native: "🧜"
      },
      {
        unified: "1f9dc-1f3fb",
        native: "🧜🏻"
      },
      {
        unified: "1f9dc-1f3fc",
        native: "🧜🏼"
      },
      {
        unified: "1f9dc-1f3fd",
        native: "🧜🏽"
      },
      {
        unified: "1f9dc-1f3fe",
        native: "🧜🏾"
      },
      {
        unified: "1f9dc-1f3ff",
        native: "🧜🏿"
      }
    ],
    version: 5
  },
  merman: {
    id: "merman",
    name: "Merman",
    keywords: [
      "man",
      "male",
      "triton"
    ],
    skins: [
      {
        unified: "1f9dc-200d-2642-fe0f",
        native: "🧜‍♂️"
      },
      {
        unified: "1f9dc-1f3fb-200d-2642-fe0f",
        native: "🧜🏻‍♂️"
      },
      {
        unified: "1f9dc-1f3fc-200d-2642-fe0f",
        native: "🧜🏼‍♂️"
      },
      {
        unified: "1f9dc-1f3fd-200d-2642-fe0f",
        native: "🧜🏽‍♂️"
      },
      {
        unified: "1f9dc-1f3fe-200d-2642-fe0f",
        native: "🧜🏾‍♂️"
      },
      {
        unified: "1f9dc-1f3ff-200d-2642-fe0f",
        native: "🧜🏿‍♂️"
      }
    ],
    version: 5
  },
  mermaid: {
    id: "mermaid",
    name: "Mermaid",
    keywords: [
      "woman",
      "female",
      "merwoman",
      "ariel"
    ],
    skins: [
      {
        unified: "1f9dc-200d-2640-fe0f",
        native: "🧜‍♀️"
      },
      {
        unified: "1f9dc-1f3fb-200d-2640-fe0f",
        native: "🧜🏻‍♀️"
      },
      {
        unified: "1f9dc-1f3fc-200d-2640-fe0f",
        native: "🧜🏼‍♀️"
      },
      {
        unified: "1f9dc-1f3fd-200d-2640-fe0f",
        native: "🧜🏽‍♀️"
      },
      {
        unified: "1f9dc-1f3fe-200d-2640-fe0f",
        native: "🧜🏾‍♀️"
      },
      {
        unified: "1f9dc-1f3ff-200d-2640-fe0f",
        native: "🧜🏿‍♀️"
      }
    ],
    version: 5
  },
  elf: {
    id: "elf",
    name: "Elf",
    keywords: [
      "magical"
    ],
    skins: [
      {
        unified: "1f9dd",
        native: "🧝"
      },
      {
        unified: "1f9dd-1f3fb",
        native: "🧝🏻"
      },
      {
        unified: "1f9dd-1f3fc",
        native: "🧝🏼"
      },
      {
        unified: "1f9dd-1f3fd",
        native: "🧝🏽"
      },
      {
        unified: "1f9dd-1f3fe",
        native: "🧝🏾"
      },
      {
        unified: "1f9dd-1f3ff",
        native: "🧝🏿"
      }
    ],
    version: 5
  },
  male_elf: {
    id: "male_elf",
    name: "Man Elf",
    keywords: [
      "male"
    ],
    skins: [
      {
        unified: "1f9dd-200d-2642-fe0f",
        native: "🧝‍♂️"
      },
      {
        unified: "1f9dd-1f3fb-200d-2642-fe0f",
        native: "🧝🏻‍♂️"
      },
      {
        unified: "1f9dd-1f3fc-200d-2642-fe0f",
        native: "🧝🏼‍♂️"
      },
      {
        unified: "1f9dd-1f3fd-200d-2642-fe0f",
        native: "🧝🏽‍♂️"
      },
      {
        unified: "1f9dd-1f3fe-200d-2642-fe0f",
        native: "🧝🏾‍♂️"
      },
      {
        unified: "1f9dd-1f3ff-200d-2642-fe0f",
        native: "🧝🏿‍♂️"
      }
    ],
    version: 5
  },
  female_elf: {
    id: "female_elf",
    name: "Woman Elf",
    keywords: [
      "female"
    ],
    skins: [
      {
        unified: "1f9dd-200d-2640-fe0f",
        native: "🧝‍♀️"
      },
      {
        unified: "1f9dd-1f3fb-200d-2640-fe0f",
        native: "🧝🏻‍♀️"
      },
      {
        unified: "1f9dd-1f3fc-200d-2640-fe0f",
        native: "🧝🏼‍♀️"
      },
      {
        unified: "1f9dd-1f3fd-200d-2640-fe0f",
        native: "🧝🏽‍♀️"
      },
      {
        unified: "1f9dd-1f3fe-200d-2640-fe0f",
        native: "🧝🏾‍♀️"
      },
      {
        unified: "1f9dd-1f3ff-200d-2640-fe0f",
        native: "🧝🏿‍♀️"
      }
    ],
    version: 5
  },
  genie: {
    id: "genie",
    name: "Genie",
    keywords: [
      "magical",
      "wishes"
    ],
    skins: [
      {
        unified: "1f9de",
        native: "🧞"
      }
    ],
    version: 5
  },
  male_genie: {
    id: "male_genie",
    name: "Man Genie",
    keywords: [
      "male"
    ],
    skins: [
      {
        unified: "1f9de-200d-2642-fe0f",
        native: "🧞‍♂️"
      }
    ],
    version: 5
  },
  female_genie: {
    id: "female_genie",
    name: "Woman Genie",
    keywords: [
      "female"
    ],
    skins: [
      {
        unified: "1f9de-200d-2640-fe0f",
        native: "🧞‍♀️"
      }
    ],
    version: 5
  },
  zombie: {
    id: "zombie",
    name: "Zombie",
    keywords: [
      "dead"
    ],
    skins: [
      {
        unified: "1f9df",
        native: "🧟"
      }
    ],
    version: 5
  },
  male_zombie: {
    id: "male_zombie",
    name: "Man Zombie",
    keywords: [
      "male",
      "dracula",
      "undead",
      "walking",
      "dead"
    ],
    skins: [
      {
        unified: "1f9df-200d-2642-fe0f",
        native: "🧟‍♂️"
      }
    ],
    version: 5
  },
  female_zombie: {
    id: "female_zombie",
    name: "Woman Zombie",
    keywords: [
      "female",
      "undead",
      "walking",
      "dead"
    ],
    skins: [
      {
        unified: "1f9df-200d-2640-fe0f",
        native: "🧟‍♀️"
      }
    ],
    version: 5
  },
  troll: {
    id: "troll",
    name: "Troll",
    keywords: [
      "mystical",
      "monster"
    ],
    skins: [
      {
        unified: "1f9cc",
        native: "🧌"
      }
    ],
    version: 14
  },
  massage: {
    id: "massage",
    name: "Face Massage",
    keywords: [
      "person",
      "getting",
      "relax"
    ],
    skins: [
      {
        unified: "1f486",
        native: "💆"
      },
      {
        unified: "1f486-1f3fb",
        native: "💆🏻"
      },
      {
        unified: "1f486-1f3fc",
        native: "💆🏼"
      },
      {
        unified: "1f486-1f3fd",
        native: "💆🏽"
      },
      {
        unified: "1f486-1f3fe",
        native: "💆🏾"
      },
      {
        unified: "1f486-1f3ff",
        native: "💆🏿"
      }
    ],
    version: 1
  },
  "man-getting-massage": {
    id: "man-getting-massage",
    name: "Man Getting Massage",
    keywords: [
      "getting-massage",
      "male",
      "boy",
      "head"
    ],
    skins: [
      {
        unified: "1f486-200d-2642-fe0f",
        native: "💆‍♂️"
      },
      {
        unified: "1f486-1f3fb-200d-2642-fe0f",
        native: "💆🏻‍♂️"
      },
      {
        unified: "1f486-1f3fc-200d-2642-fe0f",
        native: "💆🏼‍♂️"
      },
      {
        unified: "1f486-1f3fd-200d-2642-fe0f",
        native: "💆🏽‍♂️"
      },
      {
        unified: "1f486-1f3fe-200d-2642-fe0f",
        native: "💆🏾‍♂️"
      },
      {
        unified: "1f486-1f3ff-200d-2642-fe0f",
        native: "💆🏿‍♂️"
      }
    ],
    version: 4
  },
  "woman-getting-massage": {
    id: "woman-getting-massage",
    name: "Woman Getting Massage",
    keywords: [
      "getting-massage",
      "female",
      "girl",
      "head"
    ],
    skins: [
      {
        unified: "1f486-200d-2640-fe0f",
        native: "💆‍♀️"
      },
      {
        unified: "1f486-1f3fb-200d-2640-fe0f",
        native: "💆🏻‍♀️"
      },
      {
        unified: "1f486-1f3fc-200d-2640-fe0f",
        native: "💆🏼‍♀️"
      },
      {
        unified: "1f486-1f3fd-200d-2640-fe0f",
        native: "💆🏽‍♀️"
      },
      {
        unified: "1f486-1f3fe-200d-2640-fe0f",
        native: "💆🏾‍♀️"
      },
      {
        unified: "1f486-1f3ff-200d-2640-fe0f",
        native: "💆🏿‍♀️"
      }
    ],
    version: 4
  },
  haircut: {
    id: "haircut",
    name: "Haircut",
    keywords: [
      "person",
      "getting",
      "hairstyle"
    ],
    skins: [
      {
        unified: "1f487",
        native: "💇"
      },
      {
        unified: "1f487-1f3fb",
        native: "💇🏻"
      },
      {
        unified: "1f487-1f3fc",
        native: "💇🏼"
      },
      {
        unified: "1f487-1f3fd",
        native: "💇🏽"
      },
      {
        unified: "1f487-1f3fe",
        native: "💇🏾"
      },
      {
        unified: "1f487-1f3ff",
        native: "💇🏿"
      }
    ],
    version: 1
  },
  "man-getting-haircut": {
    id: "man-getting-haircut",
    name: "Man Getting Haircut",
    keywords: [
      "getting-haircut",
      "male",
      "boy"
    ],
    skins: [
      {
        unified: "1f487-200d-2642-fe0f",
        native: "💇‍♂️"
      },
      {
        unified: "1f487-1f3fb-200d-2642-fe0f",
        native: "💇🏻‍♂️"
      },
      {
        unified: "1f487-1f3fc-200d-2642-fe0f",
        native: "💇🏼‍♂️"
      },
      {
        unified: "1f487-1f3fd-200d-2642-fe0f",
        native: "💇🏽‍♂️"
      },
      {
        unified: "1f487-1f3fe-200d-2642-fe0f",
        native: "💇🏾‍♂️"
      },
      {
        unified: "1f487-1f3ff-200d-2642-fe0f",
        native: "💇🏿‍♂️"
      }
    ],
    version: 4
  },
  "woman-getting-haircut": {
    id: "woman-getting-haircut",
    name: "Woman Getting Haircut",
    keywords: [
      "getting-haircut",
      "female",
      "girl"
    ],
    skins: [
      {
        unified: "1f487-200d-2640-fe0f",
        native: "💇‍♀️"
      },
      {
        unified: "1f487-1f3fb-200d-2640-fe0f",
        native: "💇🏻‍♀️"
      },
      {
        unified: "1f487-1f3fc-200d-2640-fe0f",
        native: "💇🏼‍♀️"
      },
      {
        unified: "1f487-1f3fd-200d-2640-fe0f",
        native: "💇🏽‍♀️"
      },
      {
        unified: "1f487-1f3fe-200d-2640-fe0f",
        native: "💇🏾‍♀️"
      },
      {
        unified: "1f487-1f3ff-200d-2640-fe0f",
        native: "💇🏿‍♀️"
      }
    ],
    version: 4
  },
  walking: {
    id: "walking",
    name: "Pedestrian",
    keywords: [
      "walking",
      "person",
      "move"
    ],
    skins: [
      {
        unified: "1f6b6",
        native: "🚶"
      },
      {
        unified: "1f6b6-1f3fb",
        native: "🚶🏻"
      },
      {
        unified: "1f6b6-1f3fc",
        native: "🚶🏼"
      },
      {
        unified: "1f6b6-1f3fd",
        native: "🚶🏽"
      },
      {
        unified: "1f6b6-1f3fe",
        native: "🚶🏾"
      },
      {
        unified: "1f6b6-1f3ff",
        native: "🚶🏿"
      }
    ],
    version: 1
  },
  "man-walking": {
    id: "man-walking",
    name: "Man Walking",
    keywords: [
      "human",
      "feet",
      "steps"
    ],
    skins: [
      {
        unified: "1f6b6-200d-2642-fe0f",
        native: "🚶‍♂️"
      },
      {
        unified: "1f6b6-1f3fb-200d-2642-fe0f",
        native: "🚶🏻‍♂️"
      },
      {
        unified: "1f6b6-1f3fc-200d-2642-fe0f",
        native: "🚶🏼‍♂️"
      },
      {
        unified: "1f6b6-1f3fd-200d-2642-fe0f",
        native: "🚶🏽‍♂️"
      },
      {
        unified: "1f6b6-1f3fe-200d-2642-fe0f",
        native: "🚶🏾‍♂️"
      },
      {
        unified: "1f6b6-1f3ff-200d-2642-fe0f",
        native: "🚶🏿‍♂️"
      }
    ],
    version: 4
  },
  "woman-walking": {
    id: "woman-walking",
    name: "Woman Walking",
    keywords: [
      "human",
      "feet",
      "steps",
      "female"
    ],
    skins: [
      {
        unified: "1f6b6-200d-2640-fe0f",
        native: "🚶‍♀️"
      },
      {
        unified: "1f6b6-1f3fb-200d-2640-fe0f",
        native: "🚶🏻‍♀️"
      },
      {
        unified: "1f6b6-1f3fc-200d-2640-fe0f",
        native: "🚶🏼‍♀️"
      },
      {
        unified: "1f6b6-1f3fd-200d-2640-fe0f",
        native: "🚶🏽‍♀️"
      },
      {
        unified: "1f6b6-1f3fe-200d-2640-fe0f",
        native: "🚶🏾‍♀️"
      },
      {
        unified: "1f6b6-1f3ff-200d-2640-fe0f",
        native: "🚶🏿‍♀️"
      }
    ],
    version: 4
  },
  standing_person: {
    id: "standing_person",
    name: "Standing Person",
    keywords: [
      "still"
    ],
    skins: [
      {
        unified: "1f9cd",
        native: "🧍"
      },
      {
        unified: "1f9cd-1f3fb",
        native: "🧍🏻"
      },
      {
        unified: "1f9cd-1f3fc",
        native: "🧍🏼"
      },
      {
        unified: "1f9cd-1f3fd",
        native: "🧍🏽"
      },
      {
        unified: "1f9cd-1f3fe",
        native: "🧍🏾"
      },
      {
        unified: "1f9cd-1f3ff",
        native: "🧍🏿"
      }
    ],
    version: 12
  },
  man_standing: {
    id: "man_standing",
    name: "Man Standing",
    keywords: [
      "still"
    ],
    skins: [
      {
        unified: "1f9cd-200d-2642-fe0f",
        native: "🧍‍♂️"
      },
      {
        unified: "1f9cd-1f3fb-200d-2642-fe0f",
        native: "🧍🏻‍♂️"
      },
      {
        unified: "1f9cd-1f3fc-200d-2642-fe0f",
        native: "🧍🏼‍♂️"
      },
      {
        unified: "1f9cd-1f3fd-200d-2642-fe0f",
        native: "🧍🏽‍♂️"
      },
      {
        unified: "1f9cd-1f3fe-200d-2642-fe0f",
        native: "🧍🏾‍♂️"
      },
      {
        unified: "1f9cd-1f3ff-200d-2642-fe0f",
        native: "🧍🏿‍♂️"
      }
    ],
    version: 12
  },
  woman_standing: {
    id: "woman_standing",
    name: "Woman Standing",
    keywords: [
      "still"
    ],
    skins: [
      {
        unified: "1f9cd-200d-2640-fe0f",
        native: "🧍‍♀️"
      },
      {
        unified: "1f9cd-1f3fb-200d-2640-fe0f",
        native: "🧍🏻‍♀️"
      },
      {
        unified: "1f9cd-1f3fc-200d-2640-fe0f",
        native: "🧍🏼‍♀️"
      },
      {
        unified: "1f9cd-1f3fd-200d-2640-fe0f",
        native: "🧍🏽‍♀️"
      },
      {
        unified: "1f9cd-1f3fe-200d-2640-fe0f",
        native: "🧍🏾‍♀️"
      },
      {
        unified: "1f9cd-1f3ff-200d-2640-fe0f",
        native: "🧍🏿‍♀️"
      }
    ],
    version: 12
  },
  kneeling_person: {
    id: "kneeling_person",
    name: "Kneeling Person",
    keywords: [
      "pray",
      "respectful"
    ],
    skins: [
      {
        unified: "1f9ce",
        native: "🧎"
      },
      {
        unified: "1f9ce-1f3fb",
        native: "🧎🏻"
      },
      {
        unified: "1f9ce-1f3fc",
        native: "🧎🏼"
      },
      {
        unified: "1f9ce-1f3fd",
        native: "🧎🏽"
      },
      {
        unified: "1f9ce-1f3fe",
        native: "🧎🏾"
      },
      {
        unified: "1f9ce-1f3ff",
        native: "🧎🏿"
      }
    ],
    version: 12
  },
  man_kneeling: {
    id: "man_kneeling",
    name: "Man Kneeling",
    keywords: [
      "pray",
      "respectful"
    ],
    skins: [
      {
        unified: "1f9ce-200d-2642-fe0f",
        native: "🧎‍♂️"
      },
      {
        unified: "1f9ce-1f3fb-200d-2642-fe0f",
        native: "🧎🏻‍♂️"
      },
      {
        unified: "1f9ce-1f3fc-200d-2642-fe0f",
        native: "🧎🏼‍♂️"
      },
      {
        unified: "1f9ce-1f3fd-200d-2642-fe0f",
        native: "🧎🏽‍♂️"
      },
      {
        unified: "1f9ce-1f3fe-200d-2642-fe0f",
        native: "🧎🏾‍♂️"
      },
      {
        unified: "1f9ce-1f3ff-200d-2642-fe0f",
        native: "🧎🏿‍♂️"
      }
    ],
    version: 12
  },
  woman_kneeling: {
    id: "woman_kneeling",
    name: "Woman Kneeling",
    keywords: [
      "respectful",
      "pray"
    ],
    skins: [
      {
        unified: "1f9ce-200d-2640-fe0f",
        native: "🧎‍♀️"
      },
      {
        unified: "1f9ce-1f3fb-200d-2640-fe0f",
        native: "🧎🏻‍♀️"
      },
      {
        unified: "1f9ce-1f3fc-200d-2640-fe0f",
        native: "🧎🏼‍♀️"
      },
      {
        unified: "1f9ce-1f3fd-200d-2640-fe0f",
        native: "🧎🏽‍♀️"
      },
      {
        unified: "1f9ce-1f3fe-200d-2640-fe0f",
        native: "🧎🏾‍♀️"
      },
      {
        unified: "1f9ce-1f3ff-200d-2640-fe0f",
        native: "🧎🏿‍♀️"
      }
    ],
    version: 12
  },
  person_with_probing_cane: {
    id: "person_with_probing_cane",
    name: "Person with White Cane",
    keywords: [
      "probing",
      "blind"
    ],
    skins: [
      {
        unified: "1f9d1-200d-1f9af",
        native: "🧑‍🦯"
      },
      {
        unified: "1f9d1-1f3fb-200d-1f9af",
        native: "🧑🏻‍🦯"
      },
      {
        unified: "1f9d1-1f3fc-200d-1f9af",
        native: "🧑🏼‍🦯"
      },
      {
        unified: "1f9d1-1f3fd-200d-1f9af",
        native: "🧑🏽‍🦯"
      },
      {
        unified: "1f9d1-1f3fe-200d-1f9af",
        native: "🧑🏾‍🦯"
      },
      {
        unified: "1f9d1-1f3ff-200d-1f9af",
        native: "🧑🏿‍🦯"
      }
    ],
    version: 12.1
  },
  man_with_probing_cane: {
    id: "man_with_probing_cane",
    name: "Man with White Cane",
    keywords: [
      "probing",
      "blind"
    ],
    skins: [
      {
        unified: "1f468-200d-1f9af",
        native: "👨‍🦯"
      },
      {
        unified: "1f468-1f3fb-200d-1f9af",
        native: "👨🏻‍🦯"
      },
      {
        unified: "1f468-1f3fc-200d-1f9af",
        native: "👨🏼‍🦯"
      },
      {
        unified: "1f468-1f3fd-200d-1f9af",
        native: "👨🏽‍🦯"
      },
      {
        unified: "1f468-1f3fe-200d-1f9af",
        native: "👨🏾‍🦯"
      },
      {
        unified: "1f468-1f3ff-200d-1f9af",
        native: "👨🏿‍🦯"
      }
    ],
    version: 12
  },
  woman_with_probing_cane: {
    id: "woman_with_probing_cane",
    name: "Woman with White Cane",
    keywords: [
      "probing",
      "blind"
    ],
    skins: [
      {
        unified: "1f469-200d-1f9af",
        native: "👩‍🦯"
      },
      {
        unified: "1f469-1f3fb-200d-1f9af",
        native: "👩🏻‍🦯"
      },
      {
        unified: "1f469-1f3fc-200d-1f9af",
        native: "👩🏼‍🦯"
      },
      {
        unified: "1f469-1f3fd-200d-1f9af",
        native: "👩🏽‍🦯"
      },
      {
        unified: "1f469-1f3fe-200d-1f9af",
        native: "👩🏾‍🦯"
      },
      {
        unified: "1f469-1f3ff-200d-1f9af",
        native: "👩🏿‍🦯"
      }
    ],
    version: 12
  },
  person_in_motorized_wheelchair: {
    id: "person_in_motorized_wheelchair",
    name: "Person in Motorized Wheelchair",
    keywords: [
      "disability",
      "accessibility"
    ],
    skins: [
      {
        unified: "1f9d1-200d-1f9bc",
        native: "🧑‍🦼"
      },
      {
        unified: "1f9d1-1f3fb-200d-1f9bc",
        native: "🧑🏻‍🦼"
      },
      {
        unified: "1f9d1-1f3fc-200d-1f9bc",
        native: "🧑🏼‍🦼"
      },
      {
        unified: "1f9d1-1f3fd-200d-1f9bc",
        native: "🧑🏽‍🦼"
      },
      {
        unified: "1f9d1-1f3fe-200d-1f9bc",
        native: "🧑🏾‍🦼"
      },
      {
        unified: "1f9d1-1f3ff-200d-1f9bc",
        native: "🧑🏿‍🦼"
      }
    ],
    version: 12.1
  },
  man_in_motorized_wheelchair: {
    id: "man_in_motorized_wheelchair",
    name: "Man in Motorized Wheelchair",
    keywords: [
      "disability",
      "accessibility"
    ],
    skins: [
      {
        unified: "1f468-200d-1f9bc",
        native: "👨‍🦼"
      },
      {
        unified: "1f468-1f3fb-200d-1f9bc",
        native: "👨🏻‍🦼"
      },
      {
        unified: "1f468-1f3fc-200d-1f9bc",
        native: "👨🏼‍🦼"
      },
      {
        unified: "1f468-1f3fd-200d-1f9bc",
        native: "👨🏽‍🦼"
      },
      {
        unified: "1f468-1f3fe-200d-1f9bc",
        native: "👨🏾‍🦼"
      },
      {
        unified: "1f468-1f3ff-200d-1f9bc",
        native: "👨🏿‍🦼"
      }
    ],
    version: 12
  },
  woman_in_motorized_wheelchair: {
    id: "woman_in_motorized_wheelchair",
    name: "Woman in Motorized Wheelchair",
    keywords: [
      "disability",
      "accessibility"
    ],
    skins: [
      {
        unified: "1f469-200d-1f9bc",
        native: "👩‍🦼"
      },
      {
        unified: "1f469-1f3fb-200d-1f9bc",
        native: "👩🏻‍🦼"
      },
      {
        unified: "1f469-1f3fc-200d-1f9bc",
        native: "👩🏼‍🦼"
      },
      {
        unified: "1f469-1f3fd-200d-1f9bc",
        native: "👩🏽‍🦼"
      },
      {
        unified: "1f469-1f3fe-200d-1f9bc",
        native: "👩🏾‍🦼"
      },
      {
        unified: "1f469-1f3ff-200d-1f9bc",
        native: "👩🏿‍🦼"
      }
    ],
    version: 12
  },
  person_in_manual_wheelchair: {
    id: "person_in_manual_wheelchair",
    name: "Person in Manual Wheelchair",
    keywords: [
      "disability",
      "accessibility"
    ],
    skins: [
      {
        unified: "1f9d1-200d-1f9bd",
        native: "🧑‍🦽"
      },
      {
        unified: "1f9d1-1f3fb-200d-1f9bd",
        native: "🧑🏻‍🦽"
      },
      {
        unified: "1f9d1-1f3fc-200d-1f9bd",
        native: "🧑🏼‍🦽"
      },
      {
        unified: "1f9d1-1f3fd-200d-1f9bd",
        native: "🧑🏽‍🦽"
      },
      {
        unified: "1f9d1-1f3fe-200d-1f9bd",
        native: "🧑🏾‍🦽"
      },
      {
        unified: "1f9d1-1f3ff-200d-1f9bd",
        native: "🧑🏿‍🦽"
      }
    ],
    version: 12.1
  },
  man_in_manual_wheelchair: {
    id: "man_in_manual_wheelchair",
    name: "Man in Manual Wheelchair",
    keywords: [
      "disability",
      "accessibility"
    ],
    skins: [
      {
        unified: "1f468-200d-1f9bd",
        native: "👨‍🦽"
      },
      {
        unified: "1f468-1f3fb-200d-1f9bd",
        native: "👨🏻‍🦽"
      },
      {
        unified: "1f468-1f3fc-200d-1f9bd",
        native: "👨🏼‍🦽"
      },
      {
        unified: "1f468-1f3fd-200d-1f9bd",
        native: "👨🏽‍🦽"
      },
      {
        unified: "1f468-1f3fe-200d-1f9bd",
        native: "👨🏾‍🦽"
      },
      {
        unified: "1f468-1f3ff-200d-1f9bd",
        native: "👨🏿‍🦽"
      }
    ],
    version: 12
  },
  woman_in_manual_wheelchair: {
    id: "woman_in_manual_wheelchair",
    name: "Woman in Manual Wheelchair",
    keywords: [
      "disability",
      "accessibility"
    ],
    skins: [
      {
        unified: "1f469-200d-1f9bd",
        native: "👩‍🦽"
      },
      {
        unified: "1f469-1f3fb-200d-1f9bd",
        native: "👩🏻‍🦽"
      },
      {
        unified: "1f469-1f3fc-200d-1f9bd",
        native: "👩🏼‍🦽"
      },
      {
        unified: "1f469-1f3fd-200d-1f9bd",
        native: "👩🏽‍🦽"
      },
      {
        unified: "1f469-1f3fe-200d-1f9bd",
        native: "👩🏾‍🦽"
      },
      {
        unified: "1f469-1f3ff-200d-1f9bd",
        native: "👩🏿‍🦽"
      }
    ],
    version: 12
  },
  runner: {
    id: "runner",
    name: "Runner",
    keywords: [
      "running",
      "person",
      "move"
    ],
    skins: [
      {
        unified: "1f3c3",
        native: "🏃"
      },
      {
        unified: "1f3c3-1f3fb",
        native: "🏃🏻"
      },
      {
        unified: "1f3c3-1f3fc",
        native: "🏃🏼"
      },
      {
        unified: "1f3c3-1f3fd",
        native: "🏃🏽"
      },
      {
        unified: "1f3c3-1f3fe",
        native: "🏃🏾"
      },
      {
        unified: "1f3c3-1f3ff",
        native: "🏃🏿"
      }
    ],
    version: 1
  },
  "man-running": {
    id: "man-running",
    name: "Man Running",
    keywords: [
      "walking",
      "exercise",
      "race"
    ],
    skins: [
      {
        unified: "1f3c3-200d-2642-fe0f",
        native: "🏃‍♂️"
      },
      {
        unified: "1f3c3-1f3fb-200d-2642-fe0f",
        native: "🏃🏻‍♂️"
      },
      {
        unified: "1f3c3-1f3fc-200d-2642-fe0f",
        native: "🏃🏼‍♂️"
      },
      {
        unified: "1f3c3-1f3fd-200d-2642-fe0f",
        native: "🏃🏽‍♂️"
      },
      {
        unified: "1f3c3-1f3fe-200d-2642-fe0f",
        native: "🏃🏾‍♂️"
      },
      {
        unified: "1f3c3-1f3ff-200d-2642-fe0f",
        native: "🏃🏿‍♂️"
      }
    ],
    version: 4
  },
  "woman-running": {
    id: "woman-running",
    name: "Woman Running",
    keywords: [
      "walking",
      "exercise",
      "race",
      "female"
    ],
    skins: [
      {
        unified: "1f3c3-200d-2640-fe0f",
        native: "🏃‍♀️"
      },
      {
        unified: "1f3c3-1f3fb-200d-2640-fe0f",
        native: "🏃🏻‍♀️"
      },
      {
        unified: "1f3c3-1f3fc-200d-2640-fe0f",
        native: "🏃🏼‍♀️"
      },
      {
        unified: "1f3c3-1f3fd-200d-2640-fe0f",
        native: "🏃🏽‍♀️"
      },
      {
        unified: "1f3c3-1f3fe-200d-2640-fe0f",
        native: "🏃🏾‍♀️"
      },
      {
        unified: "1f3c3-1f3ff-200d-2640-fe0f",
        native: "🏃🏿‍♀️"
      }
    ],
    version: 4
  },
  dancer: {
    id: "dancer",
    name: "Dancer",
    keywords: [
      "woman",
      "dancing",
      "female",
      "girl",
      "fun"
    ],
    skins: [
      {
        unified: "1f483",
        native: "💃"
      },
      {
        unified: "1f483-1f3fb",
        native: "💃🏻"
      },
      {
        unified: "1f483-1f3fc",
        native: "💃🏼"
      },
      {
        unified: "1f483-1f3fd",
        native: "💃🏽"
      },
      {
        unified: "1f483-1f3fe",
        native: "💃🏾"
      },
      {
        unified: "1f483-1f3ff",
        native: "💃🏿"
      }
    ],
    version: 1
  },
  man_dancing: {
    id: "man_dancing",
    name: "Man Dancing",
    keywords: [
      "male",
      "boy",
      "fun",
      "dancer"
    ],
    skins: [
      {
        unified: "1f57a",
        native: "🕺"
      },
      {
        unified: "1f57a-1f3fb",
        native: "🕺🏻"
      },
      {
        unified: "1f57a-1f3fc",
        native: "🕺🏼"
      },
      {
        unified: "1f57a-1f3fd",
        native: "🕺🏽"
      },
      {
        unified: "1f57a-1f3fe",
        native: "🕺🏾"
      },
      {
        unified: "1f57a-1f3ff",
        native: "🕺🏿"
      }
    ],
    version: 3
  },
  man_in_business_suit_levitating: {
    id: "man_in_business_suit_levitating",
    name: "Person in Suit Levitating",
    keywords: [
      "man",
      "business",
      "levitate",
      "hover",
      "jump"
    ],
    skins: [
      {
        unified: "1f574-fe0f",
        native: "🕴️"
      },
      {
        unified: "1f574-1f3fb",
        native: "🕴🏻"
      },
      {
        unified: "1f574-1f3fc",
        native: "🕴🏼"
      },
      {
        unified: "1f574-1f3fd",
        native: "🕴🏽"
      },
      {
        unified: "1f574-1f3fe",
        native: "🕴🏾"
      },
      {
        unified: "1f574-1f3ff",
        native: "🕴🏿"
      }
    ],
    version: 1
  },
  dancers: {
    id: "dancers",
    name: "Woman with Bunny Ears",
    keywords: [
      "dancers",
      "people",
      "perform",
      "costume"
    ],
    skins: [
      {
        unified: "1f46f",
        native: "👯"
      }
    ],
    version: 1
  },
  "men-with-bunny-ears-partying": {
    id: "men-with-bunny-ears-partying",
    name: "Men with Bunny Ears",
    keywords: [
      "with-bunny-ears-partying",
      "man",
      "male",
      "boys"
    ],
    skins: [
      {
        unified: "1f46f-200d-2642-fe0f",
        native: "👯‍♂️"
      }
    ],
    version: 4
  },
  "women-with-bunny-ears-partying": {
    id: "women-with-bunny-ears-partying",
    name: "Women with Bunny Ears",
    keywords: [
      "with-bunny-ears-partying",
      "woman",
      "female",
      "girls"
    ],
    skins: [
      {
        unified: "1f46f-200d-2640-fe0f",
        native: "👯‍♀️"
      }
    ],
    version: 4
  },
  person_in_steamy_room: {
    id: "person_in_steamy_room",
    name: "Person in Steamy Room",
    keywords: [
      "relax",
      "spa"
    ],
    skins: [
      {
        unified: "1f9d6",
        native: "🧖"
      },
      {
        unified: "1f9d6-1f3fb",
        native: "🧖🏻"
      },
      {
        unified: "1f9d6-1f3fc",
        native: "🧖🏼"
      },
      {
        unified: "1f9d6-1f3fd",
        native: "🧖🏽"
      },
      {
        unified: "1f9d6-1f3fe",
        native: "🧖🏾"
      },
      {
        unified: "1f9d6-1f3ff",
        native: "🧖🏿"
      }
    ],
    version: 5
  },
  man_in_steamy_room: {
    id: "man_in_steamy_room",
    name: "Man in Steamy Room",
    keywords: [
      "male",
      "spa",
      "steamroom",
      "sauna"
    ],
    skins: [
      {
        unified: "1f9d6-200d-2642-fe0f",
        native: "🧖‍♂️"
      },
      {
        unified: "1f9d6-1f3fb-200d-2642-fe0f",
        native: "🧖🏻‍♂️"
      },
      {
        unified: "1f9d6-1f3fc-200d-2642-fe0f",
        native: "🧖🏼‍♂️"
      },
      {
        unified: "1f9d6-1f3fd-200d-2642-fe0f",
        native: "🧖🏽‍♂️"
      },
      {
        unified: "1f9d6-1f3fe-200d-2642-fe0f",
        native: "🧖🏾‍♂️"
      },
      {
        unified: "1f9d6-1f3ff-200d-2642-fe0f",
        native: "🧖🏿‍♂️"
      }
    ],
    version: 5
  },
  woman_in_steamy_room: {
    id: "woman_in_steamy_room",
    name: "Woman in Steamy Room",
    keywords: [
      "female",
      "spa",
      "steamroom",
      "sauna"
    ],
    skins: [
      {
        unified: "1f9d6-200d-2640-fe0f",
        native: "🧖‍♀️"
      },
      {
        unified: "1f9d6-1f3fb-200d-2640-fe0f",
        native: "🧖🏻‍♀️"
      },
      {
        unified: "1f9d6-1f3fc-200d-2640-fe0f",
        native: "🧖🏼‍♀️"
      },
      {
        unified: "1f9d6-1f3fd-200d-2640-fe0f",
        native: "🧖🏽‍♀️"
      },
      {
        unified: "1f9d6-1f3fe-200d-2640-fe0f",
        native: "🧖🏾‍♀️"
      },
      {
        unified: "1f9d6-1f3ff-200d-2640-fe0f",
        native: "🧖🏿‍♀️"
      }
    ],
    version: 5
  },
  person_climbing: {
    id: "person_climbing",
    name: "Person Climbing",
    keywords: [
      "sport"
    ],
    skins: [
      {
        unified: "1f9d7",
        native: "🧗"
      },
      {
        unified: "1f9d7-1f3fb",
        native: "🧗🏻"
      },
      {
        unified: "1f9d7-1f3fc",
        native: "🧗🏼"
      },
      {
        unified: "1f9d7-1f3fd",
        native: "🧗🏽"
      },
      {
        unified: "1f9d7-1f3fe",
        native: "🧗🏾"
      },
      {
        unified: "1f9d7-1f3ff",
        native: "🧗🏿"
      }
    ],
    version: 5
  },
  man_climbing: {
    id: "man_climbing",
    name: "Man Climbing",
    keywords: [
      "sports",
      "hobby",
      "male",
      "rock"
    ],
    skins: [
      {
        unified: "1f9d7-200d-2642-fe0f",
        native: "🧗‍♂️"
      },
      {
        unified: "1f9d7-1f3fb-200d-2642-fe0f",
        native: "🧗🏻‍♂️"
      },
      {
        unified: "1f9d7-1f3fc-200d-2642-fe0f",
        native: "🧗🏼‍♂️"
      },
      {
        unified: "1f9d7-1f3fd-200d-2642-fe0f",
        native: "🧗🏽‍♂️"
      },
      {
        unified: "1f9d7-1f3fe-200d-2642-fe0f",
        native: "🧗🏾‍♂️"
      },
      {
        unified: "1f9d7-1f3ff-200d-2642-fe0f",
        native: "🧗🏿‍♂️"
      }
    ],
    version: 5
  },
  woman_climbing: {
    id: "woman_climbing",
    name: "Woman Climbing",
    keywords: [
      "sports",
      "hobby",
      "female",
      "rock"
    ],
    skins: [
      {
        unified: "1f9d7-200d-2640-fe0f",
        native: "🧗‍♀️"
      },
      {
        unified: "1f9d7-1f3fb-200d-2640-fe0f",
        native: "🧗🏻‍♀️"
      },
      {
        unified: "1f9d7-1f3fc-200d-2640-fe0f",
        native: "🧗🏼‍♀️"
      },
      {
        unified: "1f9d7-1f3fd-200d-2640-fe0f",
        native: "🧗🏽‍♀️"
      },
      {
        unified: "1f9d7-1f3fe-200d-2640-fe0f",
        native: "🧗🏾‍♀️"
      },
      {
        unified: "1f9d7-1f3ff-200d-2640-fe0f",
        native: "🧗🏿‍♀️"
      }
    ],
    version: 5
  },
  fencer: {
    id: "fencer",
    name: "Fencer",
    keywords: [
      "person",
      "fencing",
      "sports",
      "sword"
    ],
    skins: [
      {
        unified: "1f93a",
        native: "🤺"
      }
    ],
    version: 3
  },
  horse_racing: {
    id: "horse_racing",
    name: "Horse Racing",
    keywords: [
      "animal",
      "betting",
      "competition",
      "gambling",
      "luck"
    ],
    skins: [
      {
        unified: "1f3c7",
        native: "🏇"
      },
      {
        unified: "1f3c7-1f3fb",
        native: "🏇🏻"
      },
      {
        unified: "1f3c7-1f3fc",
        native: "🏇🏼"
      },
      {
        unified: "1f3c7-1f3fd",
        native: "🏇🏽"
      },
      {
        unified: "1f3c7-1f3fe",
        native: "🏇🏾"
      },
      {
        unified: "1f3c7-1f3ff",
        native: "🏇🏿"
      }
    ],
    version: 1
  },
  skier: {
    id: "skier",
    name: "Skier",
    keywords: [
      "sports",
      "winter",
      "snow"
    ],
    skins: [
      {
        unified: "26f7-fe0f",
        native: "⛷️"
      }
    ],
    version: 1
  },
  snowboarder: {
    id: "snowboarder",
    name: "Snowboarder",
    keywords: [
      "sports",
      "winter"
    ],
    skins: [
      {
        unified: "1f3c2",
        native: "🏂"
      },
      {
        unified: "1f3c2-1f3fb",
        native: "🏂🏻"
      },
      {
        unified: "1f3c2-1f3fc",
        native: "🏂🏼"
      },
      {
        unified: "1f3c2-1f3fd",
        native: "🏂🏽"
      },
      {
        unified: "1f3c2-1f3fe",
        native: "🏂🏾"
      },
      {
        unified: "1f3c2-1f3ff",
        native: "🏂🏿"
      }
    ],
    version: 1
  },
  golfer: {
    id: "golfer",
    name: "Person Golfing",
    keywords: [
      "golfer",
      "sports",
      "business"
    ],
    skins: [
      {
        unified: "1f3cc-fe0f",
        native: "🏌️"
      },
      {
        unified: "1f3cc-1f3fb",
        native: "🏌🏻"
      },
      {
        unified: "1f3cc-1f3fc",
        native: "🏌🏼"
      },
      {
        unified: "1f3cc-1f3fd",
        native: "🏌🏽"
      },
      {
        unified: "1f3cc-1f3fe",
        native: "🏌🏾"
      },
      {
        unified: "1f3cc-1f3ff",
        native: "🏌🏿"
      }
    ],
    version: 1
  },
  "man-golfing": {
    id: "man-golfing",
    name: "Man Golfing",
    keywords: [
      "sport"
    ],
    skins: [
      {
        unified: "1f3cc-fe0f-200d-2642-fe0f",
        native: "🏌️‍♂️"
      },
      {
        unified: "1f3cc-1f3fb-200d-2642-fe0f",
        native: "🏌🏻‍♂️"
      },
      {
        unified: "1f3cc-1f3fc-200d-2642-fe0f",
        native: "🏌🏼‍♂️"
      },
      {
        unified: "1f3cc-1f3fd-200d-2642-fe0f",
        native: "🏌🏽‍♂️"
      },
      {
        unified: "1f3cc-1f3fe-200d-2642-fe0f",
        native: "🏌🏾‍♂️"
      },
      {
        unified: "1f3cc-1f3ff-200d-2642-fe0f",
        native: "🏌🏿‍♂️"
      }
    ],
    version: 4
  },
  "woman-golfing": {
    id: "woman-golfing",
    name: "Woman Golfing",
    keywords: [
      "sports",
      "business",
      "female"
    ],
    skins: [
      {
        unified: "1f3cc-fe0f-200d-2640-fe0f",
        native: "🏌️‍♀️"
      },
      {
        unified: "1f3cc-1f3fb-200d-2640-fe0f",
        native: "🏌🏻‍♀️"
      },
      {
        unified: "1f3cc-1f3fc-200d-2640-fe0f",
        native: "🏌🏼‍♀️"
      },
      {
        unified: "1f3cc-1f3fd-200d-2640-fe0f",
        native: "🏌🏽‍♀️"
      },
      {
        unified: "1f3cc-1f3fe-200d-2640-fe0f",
        native: "🏌🏾‍♀️"
      },
      {
        unified: "1f3cc-1f3ff-200d-2640-fe0f",
        native: "🏌🏿‍♀️"
      }
    ],
    version: 4
  },
  surfer: {
    id: "surfer",
    name: "Surfer",
    keywords: [
      "person",
      "surfing",
      "sport",
      "sea"
    ],
    skins: [
      {
        unified: "1f3c4",
        native: "🏄"
      },
      {
        unified: "1f3c4-1f3fb",
        native: "🏄🏻"
      },
      {
        unified: "1f3c4-1f3fc",
        native: "🏄🏼"
      },
      {
        unified: "1f3c4-1f3fd",
        native: "🏄🏽"
      },
      {
        unified: "1f3c4-1f3fe",
        native: "🏄🏾"
      },
      {
        unified: "1f3c4-1f3ff",
        native: "🏄🏿"
      }
    ],
    version: 1
  },
  "man-surfing": {
    id: "man-surfing",
    name: "Man Surfing",
    keywords: [
      "sports",
      "ocean",
      "sea",
      "summer",
      "beach"
    ],
    skins: [
      {
        unified: "1f3c4-200d-2642-fe0f",
        native: "🏄‍♂️"
      },
      {
        unified: "1f3c4-1f3fb-200d-2642-fe0f",
        native: "🏄🏻‍♂️"
      },
      {
        unified: "1f3c4-1f3fc-200d-2642-fe0f",
        native: "🏄🏼‍♂️"
      },
      {
        unified: "1f3c4-1f3fd-200d-2642-fe0f",
        native: "🏄🏽‍♂️"
      },
      {
        unified: "1f3c4-1f3fe-200d-2642-fe0f",
        native: "🏄🏾‍♂️"
      },
      {
        unified: "1f3c4-1f3ff-200d-2642-fe0f",
        native: "🏄🏿‍♂️"
      }
    ],
    version: 4
  },
  "woman-surfing": {
    id: "woman-surfing",
    name: "Woman Surfing",
    keywords: [
      "sports",
      "ocean",
      "sea",
      "summer",
      "beach",
      "female"
    ],
    skins: [
      {
        unified: "1f3c4-200d-2640-fe0f",
        native: "🏄‍♀️"
      },
      {
        unified: "1f3c4-1f3fb-200d-2640-fe0f",
        native: "🏄🏻‍♀️"
      },
      {
        unified: "1f3c4-1f3fc-200d-2640-fe0f",
        native: "🏄🏼‍♀️"
      },
      {
        unified: "1f3c4-1f3fd-200d-2640-fe0f",
        native: "🏄🏽‍♀️"
      },
      {
        unified: "1f3c4-1f3fe-200d-2640-fe0f",
        native: "🏄🏾‍♀️"
      },
      {
        unified: "1f3c4-1f3ff-200d-2640-fe0f",
        native: "🏄🏿‍♀️"
      }
    ],
    version: 4
  },
  rowboat: {
    id: "rowboat",
    name: "Rowboat",
    keywords: [
      "person",
      "rowing",
      "boat",
      "sport",
      "move"
    ],
    skins: [
      {
        unified: "1f6a3",
        native: "🚣"
      },
      {
        unified: "1f6a3-1f3fb",
        native: "🚣🏻"
      },
      {
        unified: "1f6a3-1f3fc",
        native: "🚣🏼"
      },
      {
        unified: "1f6a3-1f3fd",
        native: "🚣🏽"
      },
      {
        unified: "1f6a3-1f3fe",
        native: "🚣🏾"
      },
      {
        unified: "1f6a3-1f3ff",
        native: "🚣🏿"
      }
    ],
    version: 1
  },
  "man-rowing-boat": {
    id: "man-rowing-boat",
    name: "Man Rowing Boat",
    keywords: [
      "rowing-boat",
      "sports",
      "hobby",
      "water",
      "ship"
    ],
    skins: [
      {
        unified: "1f6a3-200d-2642-fe0f",
        native: "🚣‍♂️"
      },
      {
        unified: "1f6a3-1f3fb-200d-2642-fe0f",
        native: "🚣🏻‍♂️"
      },
      {
        unified: "1f6a3-1f3fc-200d-2642-fe0f",
        native: "🚣🏼‍♂️"
      },
      {
        unified: "1f6a3-1f3fd-200d-2642-fe0f",
        native: "🚣🏽‍♂️"
      },
      {
        unified: "1f6a3-1f3fe-200d-2642-fe0f",
        native: "🚣🏾‍♂️"
      },
      {
        unified: "1f6a3-1f3ff-200d-2642-fe0f",
        native: "🚣🏿‍♂️"
      }
    ],
    version: 4
  },
  "woman-rowing-boat": {
    id: "woman-rowing-boat",
    name: "Woman Rowing Boat",
    keywords: [
      "rowing-boat",
      "sports",
      "hobby",
      "water",
      "ship",
      "female"
    ],
    skins: [
      {
        unified: "1f6a3-200d-2640-fe0f",
        native: "🚣‍♀️"
      },
      {
        unified: "1f6a3-1f3fb-200d-2640-fe0f",
        native: "🚣🏻‍♀️"
      },
      {
        unified: "1f6a3-1f3fc-200d-2640-fe0f",
        native: "🚣🏼‍♀️"
      },
      {
        unified: "1f6a3-1f3fd-200d-2640-fe0f",
        native: "🚣🏽‍♀️"
      },
      {
        unified: "1f6a3-1f3fe-200d-2640-fe0f",
        native: "🚣🏾‍♀️"
      },
      {
        unified: "1f6a3-1f3ff-200d-2640-fe0f",
        native: "🚣🏿‍♀️"
      }
    ],
    version: 4
  },
  swimmer: {
    id: "swimmer",
    name: "Swimmer",
    keywords: [
      "person",
      "swimming",
      "sport",
      "pool"
    ],
    skins: [
      {
        unified: "1f3ca",
        native: "🏊"
      },
      {
        unified: "1f3ca-1f3fb",
        native: "🏊🏻"
      },
      {
        unified: "1f3ca-1f3fc",
        native: "🏊🏼"
      },
      {
        unified: "1f3ca-1f3fd",
        native: "🏊🏽"
      },
      {
        unified: "1f3ca-1f3fe",
        native: "🏊🏾"
      },
      {
        unified: "1f3ca-1f3ff",
        native: "🏊🏿"
      }
    ],
    version: 1
  },
  "man-swimming": {
    id: "man-swimming",
    name: "Man Swimming",
    keywords: [
      "sports",
      "exercise",
      "human",
      "athlete",
      "water",
      "summer"
    ],
    skins: [
      {
        unified: "1f3ca-200d-2642-fe0f",
        native: "🏊‍♂️"
      },
      {
        unified: "1f3ca-1f3fb-200d-2642-fe0f",
        native: "🏊🏻‍♂️"
      },
      {
        unified: "1f3ca-1f3fc-200d-2642-fe0f",
        native: "🏊🏼‍♂️"
      },
      {
        unified: "1f3ca-1f3fd-200d-2642-fe0f",
        native: "🏊🏽‍♂️"
      },
      {
        unified: "1f3ca-1f3fe-200d-2642-fe0f",
        native: "🏊🏾‍♂️"
      },
      {
        unified: "1f3ca-1f3ff-200d-2642-fe0f",
        native: "🏊🏿‍♂️"
      }
    ],
    version: 4
  },
  "woman-swimming": {
    id: "woman-swimming",
    name: "Woman Swimming",
    keywords: [
      "sports",
      "exercise",
      "human",
      "athlete",
      "water",
      "summer",
      "female"
    ],
    skins: [
      {
        unified: "1f3ca-200d-2640-fe0f",
        native: "🏊‍♀️"
      },
      {
        unified: "1f3ca-1f3fb-200d-2640-fe0f",
        native: "🏊🏻‍♀️"
      },
      {
        unified: "1f3ca-1f3fc-200d-2640-fe0f",
        native: "🏊🏼‍♀️"
      },
      {
        unified: "1f3ca-1f3fd-200d-2640-fe0f",
        native: "🏊🏽‍♀️"
      },
      {
        unified: "1f3ca-1f3fe-200d-2640-fe0f",
        native: "🏊🏾‍♀️"
      },
      {
        unified: "1f3ca-1f3ff-200d-2640-fe0f",
        native: "🏊🏿‍♀️"
      }
    ],
    version: 4
  },
  person_with_ball: {
    id: "person_with_ball",
    name: "Person Bouncing Ball",
    keywords: [
      "with",
      "sports",
      "human"
    ],
    skins: [
      {
        unified: "26f9-fe0f",
        native: "⛹️"
      },
      {
        unified: "26f9-1f3fb",
        native: "⛹🏻"
      },
      {
        unified: "26f9-1f3fc",
        native: "⛹🏼"
      },
      {
        unified: "26f9-1f3fd",
        native: "⛹🏽"
      },
      {
        unified: "26f9-1f3fe",
        native: "⛹🏾"
      },
      {
        unified: "26f9-1f3ff",
        native: "⛹🏿"
      }
    ],
    version: 1
  },
  "man-bouncing-ball": {
    id: "man-bouncing-ball",
    name: "Man Bouncing Ball",
    keywords: [
      "bouncing-ball",
      "sport"
    ],
    skins: [
      {
        unified: "26f9-fe0f-200d-2642-fe0f",
        native: "⛹️‍♂️"
      },
      {
        unified: "26f9-1f3fb-200d-2642-fe0f",
        native: "⛹🏻‍♂️"
      },
      {
        unified: "26f9-1f3fc-200d-2642-fe0f",
        native: "⛹🏼‍♂️"
      },
      {
        unified: "26f9-1f3fd-200d-2642-fe0f",
        native: "⛹🏽‍♂️"
      },
      {
        unified: "26f9-1f3fe-200d-2642-fe0f",
        native: "⛹🏾‍♂️"
      },
      {
        unified: "26f9-1f3ff-200d-2642-fe0f",
        native: "⛹🏿‍♂️"
      }
    ],
    version: 4
  },
  "woman-bouncing-ball": {
    id: "woman-bouncing-ball",
    name: "Woman Bouncing Ball",
    keywords: [
      "bouncing-ball",
      "sports",
      "human",
      "female"
    ],
    skins: [
      {
        unified: "26f9-fe0f-200d-2640-fe0f",
        native: "⛹️‍♀️"
      },
      {
        unified: "26f9-1f3fb-200d-2640-fe0f",
        native: "⛹🏻‍♀️"
      },
      {
        unified: "26f9-1f3fc-200d-2640-fe0f",
        native: "⛹🏼‍♀️"
      },
      {
        unified: "26f9-1f3fd-200d-2640-fe0f",
        native: "⛹🏽‍♀️"
      },
      {
        unified: "26f9-1f3fe-200d-2640-fe0f",
        native: "⛹🏾‍♀️"
      },
      {
        unified: "26f9-1f3ff-200d-2640-fe0f",
        native: "⛹🏿‍♀️"
      }
    ],
    version: 4
  },
  weight_lifter: {
    id: "weight_lifter",
    name: "Person Lifting Weights",
    keywords: [
      "weight",
      "lifter",
      "sports",
      "training",
      "exercise"
    ],
    skins: [
      {
        unified: "1f3cb-fe0f",
        native: "🏋️"
      },
      {
        unified: "1f3cb-1f3fb",
        native: "🏋🏻"
      },
      {
        unified: "1f3cb-1f3fc",
        native: "🏋🏼"
      },
      {
        unified: "1f3cb-1f3fd",
        native: "🏋🏽"
      },
      {
        unified: "1f3cb-1f3fe",
        native: "🏋🏾"
      },
      {
        unified: "1f3cb-1f3ff",
        native: "🏋🏿"
      }
    ],
    version: 1
  },
  "man-lifting-weights": {
    id: "man-lifting-weights",
    name: "Man Lifting Weights",
    keywords: [
      "lifting-weights",
      "sport"
    ],
    skins: [
      {
        unified: "1f3cb-fe0f-200d-2642-fe0f",
        native: "🏋️‍♂️"
      },
      {
        unified: "1f3cb-1f3fb-200d-2642-fe0f",
        native: "🏋🏻‍♂️"
      },
      {
        unified: "1f3cb-1f3fc-200d-2642-fe0f",
        native: "🏋🏼‍♂️"
      },
      {
        unified: "1f3cb-1f3fd-200d-2642-fe0f",
        native: "🏋🏽‍♂️"
      },
      {
        unified: "1f3cb-1f3fe-200d-2642-fe0f",
        native: "🏋🏾‍♂️"
      },
      {
        unified: "1f3cb-1f3ff-200d-2642-fe0f",
        native: "🏋🏿‍♂️"
      }
    ],
    version: 4
  },
  "woman-lifting-weights": {
    id: "woman-lifting-weights",
    name: "Woman Lifting Weights",
    keywords: [
      "lifting-weights",
      "sports",
      "training",
      "exercise",
      "female"
    ],
    skins: [
      {
        unified: "1f3cb-fe0f-200d-2640-fe0f",
        native: "🏋️‍♀️"
      },
      {
        unified: "1f3cb-1f3fb-200d-2640-fe0f",
        native: "🏋🏻‍♀️"
      },
      {
        unified: "1f3cb-1f3fc-200d-2640-fe0f",
        native: "🏋🏼‍♀️"
      },
      {
        unified: "1f3cb-1f3fd-200d-2640-fe0f",
        native: "🏋🏽‍♀️"
      },
      {
        unified: "1f3cb-1f3fe-200d-2640-fe0f",
        native: "🏋🏾‍♀️"
      },
      {
        unified: "1f3cb-1f3ff-200d-2640-fe0f",
        native: "🏋🏿‍♀️"
      }
    ],
    version: 4
  },
  bicyclist: {
    id: "bicyclist",
    name: "Bicyclist",
    keywords: [
      "person",
      "biking",
      "sport",
      "move"
    ],
    skins: [
      {
        unified: "1f6b4",
        native: "🚴"
      },
      {
        unified: "1f6b4-1f3fb",
        native: "🚴🏻"
      },
      {
        unified: "1f6b4-1f3fc",
        native: "🚴🏼"
      },
      {
        unified: "1f6b4-1f3fd",
        native: "🚴🏽"
      },
      {
        unified: "1f6b4-1f3fe",
        native: "🚴🏾"
      },
      {
        unified: "1f6b4-1f3ff",
        native: "🚴🏿"
      }
    ],
    version: 1
  },
  "man-biking": {
    id: "man-biking",
    name: "Man Biking",
    keywords: [
      "sports",
      "bike",
      "exercise",
      "hipster"
    ],
    skins: [
      {
        unified: "1f6b4-200d-2642-fe0f",
        native: "🚴‍♂️"
      },
      {
        unified: "1f6b4-1f3fb-200d-2642-fe0f",
        native: "🚴🏻‍♂️"
      },
      {
        unified: "1f6b4-1f3fc-200d-2642-fe0f",
        native: "🚴🏼‍♂️"
      },
      {
        unified: "1f6b4-1f3fd-200d-2642-fe0f",
        native: "🚴🏽‍♂️"
      },
      {
        unified: "1f6b4-1f3fe-200d-2642-fe0f",
        native: "🚴🏾‍♂️"
      },
      {
        unified: "1f6b4-1f3ff-200d-2642-fe0f",
        native: "🚴🏿‍♂️"
      }
    ],
    version: 4
  },
  "woman-biking": {
    id: "woman-biking",
    name: "Woman Biking",
    keywords: [
      "sports",
      "bike",
      "exercise",
      "hipster",
      "female"
    ],
    skins: [
      {
        unified: "1f6b4-200d-2640-fe0f",
        native: "🚴‍♀️"
      },
      {
        unified: "1f6b4-1f3fb-200d-2640-fe0f",
        native: "🚴🏻‍♀️"
      },
      {
        unified: "1f6b4-1f3fc-200d-2640-fe0f",
        native: "🚴🏼‍♀️"
      },
      {
        unified: "1f6b4-1f3fd-200d-2640-fe0f",
        native: "🚴🏽‍♀️"
      },
      {
        unified: "1f6b4-1f3fe-200d-2640-fe0f",
        native: "🚴🏾‍♀️"
      },
      {
        unified: "1f6b4-1f3ff-200d-2640-fe0f",
        native: "🚴🏿‍♀️"
      }
    ],
    version: 4
  },
  mountain_bicyclist: {
    id: "mountain_bicyclist",
    name: "Mountain Bicyclist",
    keywords: [
      "person",
      "biking",
      "sport",
      "move"
    ],
    skins: [
      {
        unified: "1f6b5",
        native: "🚵"
      },
      {
        unified: "1f6b5-1f3fb",
        native: "🚵🏻"
      },
      {
        unified: "1f6b5-1f3fc",
        native: "🚵🏼"
      },
      {
        unified: "1f6b5-1f3fd",
        native: "🚵🏽"
      },
      {
        unified: "1f6b5-1f3fe",
        native: "🚵🏾"
      },
      {
        unified: "1f6b5-1f3ff",
        native: "🚵🏿"
      }
    ],
    version: 1
  },
  "man-mountain-biking": {
    id: "man-mountain-biking",
    name: "Man Mountain Biking",
    keywords: [
      "mountain-biking",
      "transportation",
      "sports",
      "human",
      "race",
      "bike"
    ],
    skins: [
      {
        unified: "1f6b5-200d-2642-fe0f",
        native: "🚵‍♂️"
      },
      {
        unified: "1f6b5-1f3fb-200d-2642-fe0f",
        native: "🚵🏻‍♂️"
      },
      {
        unified: "1f6b5-1f3fc-200d-2642-fe0f",
        native: "🚵🏼‍♂️"
      },
      {
        unified: "1f6b5-1f3fd-200d-2642-fe0f",
        native: "🚵🏽‍♂️"
      },
      {
        unified: "1f6b5-1f3fe-200d-2642-fe0f",
        native: "🚵🏾‍♂️"
      },
      {
        unified: "1f6b5-1f3ff-200d-2642-fe0f",
        native: "🚵🏿‍♂️"
      }
    ],
    version: 4
  },
  "woman-mountain-biking": {
    id: "woman-mountain-biking",
    name: "Woman Mountain Biking",
    keywords: [
      "mountain-biking",
      "transportation",
      "sports",
      "human",
      "race",
      "bike",
      "female"
    ],
    skins: [
      {
        unified: "1f6b5-200d-2640-fe0f",
        native: "🚵‍♀️"
      },
      {
        unified: "1f6b5-1f3fb-200d-2640-fe0f",
        native: "🚵🏻‍♀️"
      },
      {
        unified: "1f6b5-1f3fc-200d-2640-fe0f",
        native: "🚵🏼‍♀️"
      },
      {
        unified: "1f6b5-1f3fd-200d-2640-fe0f",
        native: "🚵🏽‍♀️"
      },
      {
        unified: "1f6b5-1f3fe-200d-2640-fe0f",
        native: "🚵🏾‍♀️"
      },
      {
        unified: "1f6b5-1f3ff-200d-2640-fe0f",
        native: "🚵🏿‍♀️"
      }
    ],
    version: 4
  },
  person_doing_cartwheel: {
    id: "person_doing_cartwheel",
    name: "Person Cartwheeling",
    keywords: [
      "doing",
      "cartwheel",
      "sport",
      "gymnastic"
    ],
    skins: [
      {
        unified: "1f938",
        native: "🤸"
      },
      {
        unified: "1f938-1f3fb",
        native: "🤸🏻"
      },
      {
        unified: "1f938-1f3fc",
        native: "🤸🏼"
      },
      {
        unified: "1f938-1f3fd",
        native: "🤸🏽"
      },
      {
        unified: "1f938-1f3fe",
        native: "🤸🏾"
      },
      {
        unified: "1f938-1f3ff",
        native: "🤸🏿"
      }
    ],
    version: 3
  },
  "man-cartwheeling": {
    id: "man-cartwheeling",
    name: "Man Cartwheeling",
    keywords: [
      "gymnastics"
    ],
    skins: [
      {
        unified: "1f938-200d-2642-fe0f",
        native: "🤸‍♂️"
      },
      {
        unified: "1f938-1f3fb-200d-2642-fe0f",
        native: "🤸🏻‍♂️"
      },
      {
        unified: "1f938-1f3fc-200d-2642-fe0f",
        native: "🤸🏼‍♂️"
      },
      {
        unified: "1f938-1f3fd-200d-2642-fe0f",
        native: "🤸🏽‍♂️"
      },
      {
        unified: "1f938-1f3fe-200d-2642-fe0f",
        native: "🤸🏾‍♂️"
      },
      {
        unified: "1f938-1f3ff-200d-2642-fe0f",
        native: "🤸🏿‍♂️"
      }
    ],
    version: 4
  },
  "woman-cartwheeling": {
    id: "woman-cartwheeling",
    name: "Woman Cartwheeling",
    keywords: [
      "gymnastics"
    ],
    skins: [
      {
        unified: "1f938-200d-2640-fe0f",
        native: "🤸‍♀️"
      },
      {
        unified: "1f938-1f3fb-200d-2640-fe0f",
        native: "🤸🏻‍♀️"
      },
      {
        unified: "1f938-1f3fc-200d-2640-fe0f",
        native: "🤸🏼‍♀️"
      },
      {
        unified: "1f938-1f3fd-200d-2640-fe0f",
        native: "🤸🏽‍♀️"
      },
      {
        unified: "1f938-1f3fe-200d-2640-fe0f",
        native: "🤸🏾‍♀️"
      },
      {
        unified: "1f938-1f3ff-200d-2640-fe0f",
        native: "🤸🏿‍♀️"
      }
    ],
    version: 4
  },
  wrestlers: {
    id: "wrestlers",
    name: "Wrestlers",
    keywords: [
      "people",
      "wrestling",
      "sport"
    ],
    skins: [
      {
        unified: "1f93c",
        native: "🤼"
      }
    ],
    version: 3
  },
  "man-wrestling": {
    id: "man-wrestling",
    name: "Men Wrestling",
    keywords: [
      "man",
      "sports",
      "wrestlers"
    ],
    skins: [
      {
        unified: "1f93c-200d-2642-fe0f",
        native: "🤼‍♂️"
      }
    ],
    version: 4
  },
  "woman-wrestling": {
    id: "woman-wrestling",
    name: "Women Wrestling",
    keywords: [
      "woman",
      "sports",
      "wrestlers"
    ],
    skins: [
      {
        unified: "1f93c-200d-2640-fe0f",
        native: "🤼‍♀️"
      }
    ],
    version: 4
  },
  water_polo: {
    id: "water_polo",
    name: "Water Polo",
    keywords: [
      "person",
      "playing",
      "sport"
    ],
    skins: [
      {
        unified: "1f93d",
        native: "🤽"
      },
      {
        unified: "1f93d-1f3fb",
        native: "🤽🏻"
      },
      {
        unified: "1f93d-1f3fc",
        native: "🤽🏼"
      },
      {
        unified: "1f93d-1f3fd",
        native: "🤽🏽"
      },
      {
        unified: "1f93d-1f3fe",
        native: "🤽🏾"
      },
      {
        unified: "1f93d-1f3ff",
        native: "🤽🏿"
      }
    ],
    version: 3
  },
  "man-playing-water-polo": {
    id: "man-playing-water-polo",
    name: "Man Playing Water Polo",
    keywords: [
      "playing-water-polo",
      "sports",
      "pool"
    ],
    skins: [
      {
        unified: "1f93d-200d-2642-fe0f",
        native: "🤽‍♂️"
      },
      {
        unified: "1f93d-1f3fb-200d-2642-fe0f",
        native: "🤽🏻‍♂️"
      },
      {
        unified: "1f93d-1f3fc-200d-2642-fe0f",
        native: "🤽🏼‍♂️"
      },
      {
        unified: "1f93d-1f3fd-200d-2642-fe0f",
        native: "🤽🏽‍♂️"
      },
      {
        unified: "1f93d-1f3fe-200d-2642-fe0f",
        native: "🤽🏾‍♂️"
      },
      {
        unified: "1f93d-1f3ff-200d-2642-fe0f",
        native: "🤽🏿‍♂️"
      }
    ],
    version: 4
  },
  "woman-playing-water-polo": {
    id: "woman-playing-water-polo",
    name: "Woman Playing Water Polo",
    keywords: [
      "playing-water-polo",
      "sports",
      "pool"
    ],
    skins: [
      {
        unified: "1f93d-200d-2640-fe0f",
        native: "🤽‍♀️"
      },
      {
        unified: "1f93d-1f3fb-200d-2640-fe0f",
        native: "🤽🏻‍♀️"
      },
      {
        unified: "1f93d-1f3fc-200d-2640-fe0f",
        native: "🤽🏼‍♀️"
      },
      {
        unified: "1f93d-1f3fd-200d-2640-fe0f",
        native: "🤽🏽‍♀️"
      },
      {
        unified: "1f93d-1f3fe-200d-2640-fe0f",
        native: "🤽🏾‍♀️"
      },
      {
        unified: "1f93d-1f3ff-200d-2640-fe0f",
        native: "🤽🏿‍♀️"
      }
    ],
    version: 4
  },
  handball: {
    id: "handball",
    name: "Handball",
    keywords: [
      "person",
      "playing",
      "sport"
    ],
    skins: [
      {
        unified: "1f93e",
        native: "🤾"
      },
      {
        unified: "1f93e-1f3fb",
        native: "🤾🏻"
      },
      {
        unified: "1f93e-1f3fc",
        native: "🤾🏼"
      },
      {
        unified: "1f93e-1f3fd",
        native: "🤾🏽"
      },
      {
        unified: "1f93e-1f3fe",
        native: "🤾🏾"
      },
      {
        unified: "1f93e-1f3ff",
        native: "🤾🏿"
      }
    ],
    version: 3
  },
  "man-playing-handball": {
    id: "man-playing-handball",
    name: "Man Playing Handball",
    keywords: [
      "playing-handball",
      "sports"
    ],
    skins: [
      {
        unified: "1f93e-200d-2642-fe0f",
        native: "🤾‍♂️"
      },
      {
        unified: "1f93e-1f3fb-200d-2642-fe0f",
        native: "🤾🏻‍♂️"
      },
      {
        unified: "1f93e-1f3fc-200d-2642-fe0f",
        native: "🤾🏼‍♂️"
      },
      {
        unified: "1f93e-1f3fd-200d-2642-fe0f",
        native: "🤾🏽‍♂️"
      },
      {
        unified: "1f93e-1f3fe-200d-2642-fe0f",
        native: "🤾🏾‍♂️"
      },
      {
        unified: "1f93e-1f3ff-200d-2642-fe0f",
        native: "🤾🏿‍♂️"
      }
    ],
    version: 4
  },
  "woman-playing-handball": {
    id: "woman-playing-handball",
    name: "Woman Playing Handball",
    keywords: [
      "playing-handball",
      "sports"
    ],
    skins: [
      {
        unified: "1f93e-200d-2640-fe0f",
        native: "🤾‍♀️"
      },
      {
        unified: "1f93e-1f3fb-200d-2640-fe0f",
        native: "🤾🏻‍♀️"
      },
      {
        unified: "1f93e-1f3fc-200d-2640-fe0f",
        native: "🤾🏼‍♀️"
      },
      {
        unified: "1f93e-1f3fd-200d-2640-fe0f",
        native: "🤾🏽‍♀️"
      },
      {
        unified: "1f93e-1f3fe-200d-2640-fe0f",
        native: "🤾🏾‍♀️"
      },
      {
        unified: "1f93e-1f3ff-200d-2640-fe0f",
        native: "🤾🏿‍♀️"
      }
    ],
    version: 4
  },
  juggling: {
    id: "juggling",
    name: "Juggling",
    keywords: [
      "person",
      "performance",
      "balance"
    ],
    skins: [
      {
        unified: "1f939",
        native: "🤹"
      },
      {
        unified: "1f939-1f3fb",
        native: "🤹🏻"
      },
      {
        unified: "1f939-1f3fc",
        native: "🤹🏼"
      },
      {
        unified: "1f939-1f3fd",
        native: "🤹🏽"
      },
      {
        unified: "1f939-1f3fe",
        native: "🤹🏾"
      },
      {
        unified: "1f939-1f3ff",
        native: "🤹🏿"
      }
    ],
    version: 3
  },
  "man-juggling": {
    id: "man-juggling",
    name: "Man Juggling",
    keywords: [
      "juggle",
      "balance",
      "skill",
      "multitask"
    ],
    skins: [
      {
        unified: "1f939-200d-2642-fe0f",
        native: "🤹‍♂️"
      },
      {
        unified: "1f939-1f3fb-200d-2642-fe0f",
        native: "🤹🏻‍♂️"
      },
      {
        unified: "1f939-1f3fc-200d-2642-fe0f",
        native: "🤹🏼‍♂️"
      },
      {
        unified: "1f939-1f3fd-200d-2642-fe0f",
        native: "🤹🏽‍♂️"
      },
      {
        unified: "1f939-1f3fe-200d-2642-fe0f",
        native: "🤹🏾‍♂️"
      },
      {
        unified: "1f939-1f3ff-200d-2642-fe0f",
        native: "🤹🏿‍♂️"
      }
    ],
    version: 4
  },
  "woman-juggling": {
    id: "woman-juggling",
    name: "Woman Juggling",
    keywords: [
      "juggle",
      "balance",
      "skill",
      "multitask"
    ],
    skins: [
      {
        unified: "1f939-200d-2640-fe0f",
        native: "🤹‍♀️"
      },
      {
        unified: "1f939-1f3fb-200d-2640-fe0f",
        native: "🤹🏻‍♀️"
      },
      {
        unified: "1f939-1f3fc-200d-2640-fe0f",
        native: "🤹🏼‍♀️"
      },
      {
        unified: "1f939-1f3fd-200d-2640-fe0f",
        native: "🤹🏽‍♀️"
      },
      {
        unified: "1f939-1f3fe-200d-2640-fe0f",
        native: "🤹🏾‍♀️"
      },
      {
        unified: "1f939-1f3ff-200d-2640-fe0f",
        native: "🤹🏿‍♀️"
      }
    ],
    version: 4
  },
  person_in_lotus_position: {
    id: "person_in_lotus_position",
    name: "Person in Lotus Position",
    keywords: [
      "meditate"
    ],
    skins: [
      {
        unified: "1f9d8",
        native: "🧘"
      },
      {
        unified: "1f9d8-1f3fb",
        native: "🧘🏻"
      },
      {
        unified: "1f9d8-1f3fc",
        native: "🧘🏼"
      },
      {
        unified: "1f9d8-1f3fd",
        native: "🧘🏽"
      },
      {
        unified: "1f9d8-1f3fe",
        native: "🧘🏾"
      },
      {
        unified: "1f9d8-1f3ff",
        native: "🧘🏿"
      }
    ],
    version: 5
  },
  man_in_lotus_position: {
    id: "man_in_lotus_position",
    name: "Man in Lotus Position",
    keywords: [
      "male",
      "meditation",
      "yoga",
      "serenity",
      "zen",
      "mindfulness"
    ],
    skins: [
      {
        unified: "1f9d8-200d-2642-fe0f",
        native: "🧘‍♂️"
      },
      {
        unified: "1f9d8-1f3fb-200d-2642-fe0f",
        native: "🧘🏻‍♂️"
      },
      {
        unified: "1f9d8-1f3fc-200d-2642-fe0f",
        native: "🧘🏼‍♂️"
      },
      {
        unified: "1f9d8-1f3fd-200d-2642-fe0f",
        native: "🧘🏽‍♂️"
      },
      {
        unified: "1f9d8-1f3fe-200d-2642-fe0f",
        native: "🧘🏾‍♂️"
      },
      {
        unified: "1f9d8-1f3ff-200d-2642-fe0f",
        native: "🧘🏿‍♂️"
      }
    ],
    version: 5
  },
  woman_in_lotus_position: {
    id: "woman_in_lotus_position",
    name: "Woman in Lotus Position",
    keywords: [
      "female",
      "meditation",
      "yoga",
      "serenity",
      "zen",
      "mindfulness"
    ],
    skins: [
      {
        unified: "1f9d8-200d-2640-fe0f",
        native: "🧘‍♀️"
      },
      {
        unified: "1f9d8-1f3fb-200d-2640-fe0f",
        native: "🧘🏻‍♀️"
      },
      {
        unified: "1f9d8-1f3fc-200d-2640-fe0f",
        native: "🧘🏼‍♀️"
      },
      {
        unified: "1f9d8-1f3fd-200d-2640-fe0f",
        native: "🧘🏽‍♀️"
      },
      {
        unified: "1f9d8-1f3fe-200d-2640-fe0f",
        native: "🧘🏾‍♀️"
      },
      {
        unified: "1f9d8-1f3ff-200d-2640-fe0f",
        native: "🧘🏿‍♀️"
      }
    ],
    version: 5
  },
  bath: {
    id: "bath",
    name: "Bath",
    keywords: [
      "person",
      "taking",
      "clean",
      "shower",
      "bathroom"
    ],
    skins: [
      {
        unified: "1f6c0",
        native: "🛀"
      },
      {
        unified: "1f6c0-1f3fb",
        native: "🛀🏻"
      },
      {
        unified: "1f6c0-1f3fc",
        native: "🛀🏼"
      },
      {
        unified: "1f6c0-1f3fd",
        native: "🛀🏽"
      },
      {
        unified: "1f6c0-1f3fe",
        native: "🛀🏾"
      },
      {
        unified: "1f6c0-1f3ff",
        native: "🛀🏿"
      }
    ],
    version: 1
  },
  sleeping_accommodation: {
    id: "sleeping_accommodation",
    name: "Person in Bed",
    keywords: [
      "sleeping",
      "accommodation",
      "rest"
    ],
    skins: [
      {
        unified: "1f6cc",
        native: "🛌"
      },
      {
        unified: "1f6cc-1f3fb",
        native: "🛌🏻"
      },
      {
        unified: "1f6cc-1f3fc",
        native: "🛌🏼"
      },
      {
        unified: "1f6cc-1f3fd",
        native: "🛌🏽"
      },
      {
        unified: "1f6cc-1f3fe",
        native: "🛌🏾"
      },
      {
        unified: "1f6cc-1f3ff",
        native: "🛌🏿"
      }
    ],
    version: 1
  },
  people_holding_hands: {
    id: "people_holding_hands",
    name: "People Holding Hands",
    keywords: [
      "friendship"
    ],
    skins: [
      {
        unified: "1f9d1-200d-1f91d-200d-1f9d1",
        native: "🧑‍🤝‍🧑"
      },
      {
        unified: "1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fb",
        native: "🧑🏻‍🤝‍🧑🏻"
      },
      {
        unified: "1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fc",
        native: "🧑🏼‍🤝‍🧑🏼"
      },
      {
        unified: "1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fd",
        native: "🧑🏽‍🤝‍🧑🏽"
      },
      {
        unified: "1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fe",
        native: "🧑🏾‍🤝‍🧑🏾"
      },
      {
        unified: "1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3ff",
        native: "🧑🏿‍🤝‍🧑🏿"
      }
    ],
    version: 12
  },
  two_women_holding_hands: {
    id: "two_women_holding_hands",
    name: "Women Holding Hands",
    keywords: [
      "two",
      "pair",
      "friendship",
      "couple",
      "love",
      "like",
      "female",
      "people",
      "human"
    ],
    skins: [
      {
        unified: "1f46d",
        native: "👭"
      },
      {
        unified: "1f46d-1f3fb",
        native: "👭🏻"
      },
      {
        unified: "1f46d-1f3fc",
        native: "👭🏼"
      },
      {
        unified: "1f46d-1f3fd",
        native: "👭🏽"
      },
      {
        unified: "1f46d-1f3fe",
        native: "👭🏾"
      },
      {
        unified: "1f46d-1f3ff",
        native: "👭🏿"
      }
    ],
    version: 1
  },
  man_and_woman_holding_hands: {
    id: "man_and_woman_holding_hands",
    name: "Man and Woman Holding Hands",
    keywords: [
      "couple",
      "pair",
      "people",
      "human",
      "love",
      "date",
      "dating",
      "like",
      "affection",
      "valentines",
      "marriage"
    ],
    skins: [
      {
        unified: "1f46b",
        native: "👫"
      },
      {
        unified: "1f46b-1f3fb",
        native: "👫🏻"
      },
      {
        unified: "1f46b-1f3fc",
        native: "👫🏼"
      },
      {
        unified: "1f46b-1f3fd",
        native: "👫🏽"
      },
      {
        unified: "1f46b-1f3fe",
        native: "👫🏾"
      },
      {
        unified: "1f46b-1f3ff",
        native: "👫🏿"
      }
    ],
    version: 1
  },
  two_men_holding_hands: {
    id: "two_men_holding_hands",
    name: "Men Holding Hands",
    keywords: [
      "two",
      "pair",
      "couple",
      "love",
      "like",
      "bromance",
      "friendship",
      "people",
      "human"
    ],
    skins: [
      {
        unified: "1f46c",
        native: "👬"
      },
      {
        unified: "1f46c-1f3fb",
        native: "👬🏻"
      },
      {
        unified: "1f46c-1f3fc",
        native: "👬🏼"
      },
      {
        unified: "1f46c-1f3fd",
        native: "👬🏽"
      },
      {
        unified: "1f46c-1f3fe",
        native: "👬🏾"
      },
      {
        unified: "1f46c-1f3ff",
        native: "👬🏿"
      }
    ],
    version: 1
  },
  couplekiss: {
    id: "couplekiss",
    name: "Kiss",
    keywords: [
      "couplekiss",
      "pair",
      "valentines",
      "love",
      "like",
      "dating",
      "marriage"
    ],
    skins: [
      {
        unified: "1f48f",
        native: "💏"
      },
      {
        unified: "1f48f-1f3fb",
        native: "💏🏻"
      },
      {
        unified: "1f48f-1f3fc",
        native: "💏🏼"
      },
      {
        unified: "1f48f-1f3fd",
        native: "💏🏽"
      },
      {
        unified: "1f48f-1f3fe",
        native: "💏🏾"
      },
      {
        unified: "1f48f-1f3ff",
        native: "💏🏿"
      }
    ],
    version: 1
  },
  "woman-kiss-man": {
    id: "woman-kiss-man",
    name: "Kiss: Woman, Man",
    keywords: [
      "woman",
      "kiss-man",
      "kiss",
      "love"
    ],
    skins: [
      {
        unified: "1f469-200d-2764-fe0f-200d-1f48b-200d-1f468",
        native: "👩‍❤️‍💋‍👨"
      },
      {
        unified: "1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb",
        native: "👩🏻‍❤️‍💋‍👨🏻"
      },
      {
        unified: "1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc",
        native: "👩🏼‍❤️‍💋‍👨🏼"
      },
      {
        unified: "1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd",
        native: "👩🏽‍❤️‍💋‍👨🏽"
      },
      {
        unified: "1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe",
        native: "👩🏾‍❤️‍💋‍👨🏾"
      },
      {
        unified: "1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff",
        native: "👩🏿‍❤️‍💋‍👨🏿"
      }
    ],
    version: 2
  },
  "man-kiss-man": {
    id: "man-kiss-man",
    name: "Kiss: Man, Man",
    keywords: [
      "kiss-man",
      "kiss",
      "pair",
      "valentines",
      "love",
      "like",
      "dating",
      "marriage"
    ],
    skins: [
      {
        unified: "1f468-200d-2764-fe0f-200d-1f48b-200d-1f468",
        native: "👨‍❤️‍💋‍👨"
      },
      {
        unified: "1f468-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb",
        native: "👨🏻‍❤️‍💋‍👨🏻"
      },
      {
        unified: "1f468-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc",
        native: "👨🏼‍❤️‍💋‍👨🏼"
      },
      {
        unified: "1f468-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd",
        native: "👨🏽‍❤️‍💋‍👨🏽"
      },
      {
        unified: "1f468-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe",
        native: "👨🏾‍❤️‍💋‍👨🏾"
      },
      {
        unified: "1f468-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff",
        native: "👨🏿‍❤️‍💋‍👨🏿"
      }
    ],
    version: 2
  },
  "woman-kiss-woman": {
    id: "woman-kiss-woman",
    name: "Kiss: Woman, Woman",
    keywords: [
      "kiss-woman",
      "kiss",
      "pair",
      "valentines",
      "love",
      "like",
      "dating",
      "marriage"
    ],
    skins: [
      {
        unified: "1f469-200d-2764-fe0f-200d-1f48b-200d-1f469",
        native: "👩‍❤️‍💋‍👩"
      },
      {
        unified: "1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fb",
        native: "👩🏻‍❤️‍💋‍👩🏻"
      },
      {
        unified: "1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fc",
        native: "👩🏼‍❤️‍💋‍👩🏼"
      },
      {
        unified: "1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fd",
        native: "👩🏽‍❤️‍💋‍👩🏽"
      },
      {
        unified: "1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fe",
        native: "👩🏾‍❤️‍💋‍👩🏾"
      },
      {
        unified: "1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3ff",
        native: "👩🏿‍❤️‍💋‍👩🏿"
      }
    ],
    version: 2
  },
  couple_with_heart: {
    id: "couple_with_heart",
    name: "Couple with Heart",
    keywords: [
      "pair",
      "love",
      "like",
      "affection",
      "human",
      "dating",
      "valentines",
      "marriage"
    ],
    skins: [
      {
        unified: "1f491",
        native: "💑"
      },
      {
        unified: "1f491-1f3fb",
        native: "💑🏻"
      },
      {
        unified: "1f491-1f3fc",
        native: "💑🏼"
      },
      {
        unified: "1f491-1f3fd",
        native: "💑🏽"
      },
      {
        unified: "1f491-1f3fe",
        native: "💑🏾"
      },
      {
        unified: "1f491-1f3ff",
        native: "💑🏿"
      }
    ],
    version: 1
  },
  "woman-heart-man": {
    id: "woman-heart-man",
    name: "Couple with Heart: Woman, Man",
    keywords: [
      "woman",
      "heart-man",
      "heart",
      "love"
    ],
    skins: [
      {
        unified: "1f469-200d-2764-fe0f-200d-1f468",
        native: "👩‍❤️‍👨"
      },
      {
        unified: "1f469-1f3fb-200d-2764-fe0f-200d-1f468-1f3fb",
        native: "👩🏻‍❤️‍👨🏻"
      },
      {
        unified: "1f469-1f3fc-200d-2764-fe0f-200d-1f468-1f3fc",
        native: "👩🏼‍❤️‍👨🏼"
      },
      {
        unified: "1f469-1f3fd-200d-2764-fe0f-200d-1f468-1f3fd",
        native: "👩🏽‍❤️‍👨🏽"
      },
      {
        unified: "1f469-1f3fe-200d-2764-fe0f-200d-1f468-1f3fe",
        native: "👩🏾‍❤️‍👨🏾"
      },
      {
        unified: "1f469-1f3ff-200d-2764-fe0f-200d-1f468-1f3ff",
        native: "👩🏿‍❤️‍👨🏿"
      }
    ],
    version: 2
  },
  "man-heart-man": {
    id: "man-heart-man",
    name: "Couple with Heart: Man, Man",
    keywords: [
      "heart-man",
      "heart",
      "pair",
      "love",
      "like",
      "affection",
      "human",
      "dating",
      "valentines",
      "marriage"
    ],
    skins: [
      {
        unified: "1f468-200d-2764-fe0f-200d-1f468",
        native: "👨‍❤️‍👨"
      },
      {
        unified: "1f468-1f3fb-200d-2764-fe0f-200d-1f468-1f3fb",
        native: "👨🏻‍❤️‍👨🏻"
      },
      {
        unified: "1f468-1f3fc-200d-2764-fe0f-200d-1f468-1f3fc",
        native: "👨🏼‍❤️‍👨🏼"
      },
      {
        unified: "1f468-1f3fd-200d-2764-fe0f-200d-1f468-1f3fd",
        native: "👨🏽‍❤️‍👨🏽"
      },
      {
        unified: "1f468-1f3fe-200d-2764-fe0f-200d-1f468-1f3fe",
        native: "👨🏾‍❤️‍👨🏾"
      },
      {
        unified: "1f468-1f3ff-200d-2764-fe0f-200d-1f468-1f3ff",
        native: "👨🏿‍❤️‍👨🏿"
      }
    ],
    version: 2
  },
  "woman-heart-woman": {
    id: "woman-heart-woman",
    name: "Couple with Heart: Woman, Woman",
    keywords: [
      "heart-woman",
      "heart",
      "pair",
      "love",
      "like",
      "affection",
      "human",
      "dating",
      "valentines",
      "marriage"
    ],
    skins: [
      {
        unified: "1f469-200d-2764-fe0f-200d-1f469",
        native: "👩‍❤️‍👩"
      },
      {
        unified: "1f469-1f3fb-200d-2764-fe0f-200d-1f469-1f3fb",
        native: "👩🏻‍❤️‍👩🏻"
      },
      {
        unified: "1f469-1f3fc-200d-2764-fe0f-200d-1f469-1f3fc",
        native: "👩🏼‍❤️‍👩🏼"
      },
      {
        unified: "1f469-1f3fd-200d-2764-fe0f-200d-1f469-1f3fd",
        native: "👩🏽‍❤️‍👩🏽"
      },
      {
        unified: "1f469-1f3fe-200d-2764-fe0f-200d-1f469-1f3fe",
        native: "👩🏾‍❤️‍👩🏾"
      },
      {
        unified: "1f469-1f3ff-200d-2764-fe0f-200d-1f469-1f3ff",
        native: "👩🏿‍❤️‍👩🏿"
      }
    ],
    version: 2
  },
  family: {
    id: "family",
    name: "Family",
    keywords: [
      "home",
      "parents",
      "child",
      "mom",
      "dad",
      "father",
      "mother",
      "people",
      "human"
    ],
    skins: [
      {
        unified: "1f46a",
        native: "👪"
      }
    ],
    version: 1
  },
  "man-woman-boy": {
    id: "man-woman-boy",
    name: "Family: Man, Woman, Boy",
    keywords: [
      "man",
      "woman-boy",
      "family",
      "woman",
      "love"
    ],
    skins: [
      {
        unified: "1f468-200d-1f469-200d-1f466",
        native: "👨‍👩‍👦"
      }
    ],
    version: 2
  },
  "man-woman-girl": {
    id: "man-woman-girl",
    name: "Family: Man, Woman, Girl",
    keywords: [
      "man",
      "woman-girl",
      "family",
      "woman",
      "home",
      "parents",
      "people",
      "human",
      "child"
    ],
    skins: [
      {
        unified: "1f468-200d-1f469-200d-1f467",
        native: "👨‍👩‍👧"
      }
    ],
    version: 2
  },
  "man-woman-girl-boy": {
    id: "man-woman-girl-boy",
    name: "Family: Man, Woman, Girl, Boy",
    keywords: [
      "man",
      "woman-girl-boy",
      "family",
      "woman",
      "girl",
      "home",
      "parents",
      "people",
      "human",
      "children"
    ],
    skins: [
      {
        unified: "1f468-200d-1f469-200d-1f467-200d-1f466",
        native: "👨‍👩‍👧‍👦"
      }
    ],
    version: 2
  },
  "man-woman-boy-boy": {
    id: "man-woman-boy-boy",
    name: "Family: Man, Woman, Boy, Boy",
    keywords: [
      "man",
      "woman-boy-boy",
      "family",
      "woman",
      "home",
      "parents",
      "people",
      "human",
      "children"
    ],
    skins: [
      {
        unified: "1f468-200d-1f469-200d-1f466-200d-1f466",
        native: "👨‍👩‍👦‍👦"
      }
    ],
    version: 2
  },
  "man-woman-girl-girl": {
    id: "man-woman-girl-girl",
    name: "Family: Man, Woman, Girl, Girl",
    keywords: [
      "man",
      "woman-girl-girl",
      "family",
      "woman",
      "home",
      "parents",
      "people",
      "human",
      "children"
    ],
    skins: [
      {
        unified: "1f468-200d-1f469-200d-1f467-200d-1f467",
        native: "👨‍👩‍👧‍👧"
      }
    ],
    version: 2
  },
  "man-man-boy": {
    id: "man-man-boy",
    name: "Family: Man, Man, Boy",
    keywords: [
      "man",
      "man-boy",
      "family",
      "home",
      "parents",
      "people",
      "human",
      "children"
    ],
    skins: [
      {
        unified: "1f468-200d-1f468-200d-1f466",
        native: "👨‍👨‍👦"
      }
    ],
    version: 2
  },
  "man-man-girl": {
    id: "man-man-girl",
    name: "Family: Man, Man, Girl",
    keywords: [
      "man",
      "man-girl",
      "family",
      "home",
      "parents",
      "people",
      "human",
      "children"
    ],
    skins: [
      {
        unified: "1f468-200d-1f468-200d-1f467",
        native: "👨‍👨‍👧"
      }
    ],
    version: 2
  },
  "man-man-girl-boy": {
    id: "man-man-girl-boy",
    name: "Family: Man, Man, Girl, Boy",
    keywords: [
      "man",
      "man-girl-boy",
      "family",
      "girl",
      "home",
      "parents",
      "people",
      "human",
      "children"
    ],
    skins: [
      {
        unified: "1f468-200d-1f468-200d-1f467-200d-1f466",
        native: "👨‍👨‍👧‍👦"
      }
    ],
    version: 2
  },
  "man-man-boy-boy": {
    id: "man-man-boy-boy",
    name: "Family: Man, Man, Boy, Boy",
    keywords: [
      "man",
      "man-boy-boy",
      "family",
      "home",
      "parents",
      "people",
      "human",
      "children"
    ],
    skins: [
      {
        unified: "1f468-200d-1f468-200d-1f466-200d-1f466",
        native: "👨‍👨‍👦‍👦"
      }
    ],
    version: 2
  },
  "man-man-girl-girl": {
    id: "man-man-girl-girl",
    name: "Family: Man, Man, Girl, Girl",
    keywords: [
      "man",
      "man-girl-girl",
      "family",
      "home",
      "parents",
      "people",
      "human",
      "children"
    ],
    skins: [
      {
        unified: "1f468-200d-1f468-200d-1f467-200d-1f467",
        native: "👨‍👨‍👧‍👧"
      }
    ],
    version: 2
  },
  "woman-woman-boy": {
    id: "woman-woman-boy",
    name: "Family: Woman, Woman, Boy",
    keywords: [
      "woman",
      "woman-boy",
      "family",
      "home",
      "parents",
      "people",
      "human",
      "children"
    ],
    skins: [
      {
        unified: "1f469-200d-1f469-200d-1f466",
        native: "👩‍👩‍👦"
      }
    ],
    version: 2
  },
  "woman-woman-girl": {
    id: "woman-woman-girl",
    name: "Family: Woman, Woman, Girl",
    keywords: [
      "woman",
      "woman-girl",
      "family",
      "home",
      "parents",
      "people",
      "human",
      "children"
    ],
    skins: [
      {
        unified: "1f469-200d-1f469-200d-1f467",
        native: "👩‍👩‍👧"
      }
    ],
    version: 2
  },
  "woman-woman-girl-boy": {
    id: "woman-woman-girl-boy",
    name: "Family: Woman, Woman, Girl, Boy",
    keywords: [
      "woman",
      "woman-girl-boy",
      "family",
      "girl",
      "home",
      "parents",
      "people",
      "human",
      "children"
    ],
    skins: [
      {
        unified: "1f469-200d-1f469-200d-1f467-200d-1f466",
        native: "👩‍👩‍👧‍👦"
      }
    ],
    version: 2
  },
  "woman-woman-boy-boy": {
    id: "woman-woman-boy-boy",
    name: "Family: Woman, Woman, Boy, Boy",
    keywords: [
      "woman",
      "woman-boy-boy",
      "family",
      "home",
      "parents",
      "people",
      "human",
      "children"
    ],
    skins: [
      {
        unified: "1f469-200d-1f469-200d-1f466-200d-1f466",
        native: "👩‍👩‍👦‍👦"
      }
    ],
    version: 2
  },
  "woman-woman-girl-girl": {
    id: "woman-woman-girl-girl",
    name: "Family: Woman, Woman, Girl, Girl",
    keywords: [
      "woman",
      "woman-girl-girl",
      "family",
      "home",
      "parents",
      "people",
      "human",
      "children"
    ],
    skins: [
      {
        unified: "1f469-200d-1f469-200d-1f467-200d-1f467",
        native: "👩‍👩‍👧‍👧"
      }
    ],
    version: 2
  },
  "man-boy": {
    id: "man-boy",
    name: "Family: Man, Boy",
    keywords: [
      "man",
      "family",
      "home",
      "parent",
      "people",
      "human",
      "child"
    ],
    skins: [
      {
        unified: "1f468-200d-1f466",
        native: "👨‍👦"
      }
    ],
    version: 4
  },
  "man-boy-boy": {
    id: "man-boy-boy",
    name: "Family: Man, Boy, Boy",
    keywords: [
      "man",
      "boy-boy",
      "family",
      "home",
      "parent",
      "people",
      "human",
      "children"
    ],
    skins: [
      {
        unified: "1f468-200d-1f466-200d-1f466",
        native: "👨‍👦‍👦"
      }
    ],
    version: 4
  },
  "man-girl": {
    id: "man-girl",
    name: "Family: Man, Girl",
    keywords: [
      "man",
      "family",
      "home",
      "parent",
      "people",
      "human",
      "child"
    ],
    skins: [
      {
        unified: "1f468-200d-1f467",
        native: "👨‍👧"
      }
    ],
    version: 4
  },
  "man-girl-boy": {
    id: "man-girl-boy",
    name: "Family: Man, Girl, Boy",
    keywords: [
      "man",
      "girl-boy",
      "family",
      "girl",
      "home",
      "parent",
      "people",
      "human",
      "children"
    ],
    skins: [
      {
        unified: "1f468-200d-1f467-200d-1f466",
        native: "👨‍👧‍👦"
      }
    ],
    version: 4
  },
  "man-girl-girl": {
    id: "man-girl-girl",
    name: "Family: Man, Girl, Girl",
    keywords: [
      "man",
      "girl-girl",
      "family",
      "home",
      "parent",
      "people",
      "human",
      "children"
    ],
    skins: [
      {
        unified: "1f468-200d-1f467-200d-1f467",
        native: "👨‍👧‍👧"
      }
    ],
    version: 4
  },
  "woman-boy": {
    id: "woman-boy",
    name: "Family: Woman, Boy",
    keywords: [
      "woman",
      "family",
      "home",
      "parent",
      "people",
      "human",
      "child"
    ],
    skins: [
      {
        unified: "1f469-200d-1f466",
        native: "👩‍👦"
      }
    ],
    version: 4
  },
  "woman-boy-boy": {
    id: "woman-boy-boy",
    name: "Family: Woman, Boy, Boy",
    keywords: [
      "woman",
      "boy-boy",
      "family",
      "home",
      "parent",
      "people",
      "human",
      "children"
    ],
    skins: [
      {
        unified: "1f469-200d-1f466-200d-1f466",
        native: "👩‍👦‍👦"
      }
    ],
    version: 4
  },
  "woman-girl": {
    id: "woman-girl",
    name: "Family: Woman, Girl",
    keywords: [
      "woman",
      "family",
      "home",
      "parent",
      "people",
      "human",
      "child"
    ],
    skins: [
      {
        unified: "1f469-200d-1f467",
        native: "👩‍👧"
      }
    ],
    version: 4
  },
  "woman-girl-boy": {
    id: "woman-girl-boy",
    name: "Family: Woman, Girl, Boy",
    keywords: [
      "woman",
      "girl-boy",
      "family",
      "girl",
      "home",
      "parent",
      "people",
      "human",
      "children"
    ],
    skins: [
      {
        unified: "1f469-200d-1f467-200d-1f466",
        native: "👩‍👧‍👦"
      }
    ],
    version: 4
  },
  "woman-girl-girl": {
    id: "woman-girl-girl",
    name: "Family: Woman, Girl, Girl",
    keywords: [
      "woman",
      "girl-girl",
      "family",
      "home",
      "parent",
      "people",
      "human",
      "children"
    ],
    skins: [
      {
        unified: "1f469-200d-1f467-200d-1f467",
        native: "👩‍👧‍👧"
      }
    ],
    version: 4
  },
  speaking_head_in_silhouette: {
    id: "speaking_head_in_silhouette",
    name: "Speaking Head",
    keywords: [
      "in",
      "silhouette",
      "user",
      "person",
      "human",
      "sing",
      "say",
      "talk"
    ],
    skins: [
      {
        unified: "1f5e3-fe0f",
        native: "🗣️"
      }
    ],
    version: 1
  },
  bust_in_silhouette: {
    id: "bust_in_silhouette",
    name: "Bust in Silhouette",
    keywords: [
      "user",
      "person",
      "human"
    ],
    skins: [
      {
        unified: "1f464",
        native: "👤"
      }
    ],
    version: 1
  },
  busts_in_silhouette: {
    id: "busts_in_silhouette",
    name: "Busts in Silhouette",
    keywords: [
      "user",
      "person",
      "human",
      "group",
      "team"
    ],
    skins: [
      {
        unified: "1f465",
        native: "👥"
      }
    ],
    version: 1
  },
  people_hugging: {
    id: "people_hugging",
    name: "People Hugging",
    keywords: [
      "care"
    ],
    skins: [
      {
        unified: "1fac2",
        native: "🫂"
      }
    ],
    version: 13
  },
  footprints: {
    id: "footprints",
    name: "Footprints",
    keywords: [
      "feet",
      "tracking",
      "walking",
      "beach"
    ],
    skins: [
      {
        unified: "1f463",
        native: "👣"
      }
    ],
    version: 1
  },
  monkey_face: {
    id: "monkey_face",
    name: "Monkey Face",
    emoticons: [
      ":o)"
    ],
    keywords: [
      "animal",
      "nature",
      "circus"
    ],
    skins: [
      {
        unified: "1f435",
        native: "🐵"
      }
    ],
    version: 1
  },
  monkey: {
    id: "monkey",
    name: "Monkey",
    keywords: [
      "animal",
      "nature",
      "banana",
      "circus"
    ],
    skins: [
      {
        unified: "1f412",
        native: "🐒"
      }
    ],
    version: 1
  },
  gorilla: {
    id: "gorilla",
    name: "Gorilla",
    keywords: [
      "animal",
      "nature",
      "circus"
    ],
    skins: [
      {
        unified: "1f98d",
        native: "🦍"
      }
    ],
    version: 3
  },
  orangutan: {
    id: "orangutan",
    name: "Orangutan",
    keywords: [
      "animal"
    ],
    skins: [
      {
        unified: "1f9a7",
        native: "🦧"
      }
    ],
    version: 12
  },
  dog: {
    id: "dog",
    name: "Dog Face",
    keywords: [
      "animal",
      "friend",
      "nature",
      "woof",
      "puppy",
      "pet",
      "faithful"
    ],
    skins: [
      {
        unified: "1f436",
        native: "🐶"
      }
    ],
    version: 1
  },
  dog2: {
    id: "dog2",
    name: "Dog",
    keywords: [
      "dog2",
      "animal",
      "nature",
      "friend",
      "doge",
      "pet",
      "faithful"
    ],
    skins: [
      {
        unified: "1f415",
        native: "🐕"
      }
    ],
    version: 1
  },
  guide_dog: {
    id: "guide_dog",
    name: "Guide Dog",
    keywords: [
      "animal",
      "blind"
    ],
    skins: [
      {
        unified: "1f9ae",
        native: "🦮"
      }
    ],
    version: 12
  },
  service_dog: {
    id: "service_dog",
    name: "Service Dog",
    keywords: [
      "blind",
      "animal"
    ],
    skins: [
      {
        unified: "1f415-200d-1f9ba",
        native: "🐕‍🦺"
      }
    ],
    version: 12
  },
  poodle: {
    id: "poodle",
    name: "Poodle",
    keywords: [
      "dog",
      "animal",
      "101",
      "nature",
      "pet"
    ],
    skins: [
      {
        unified: "1f429",
        native: "🐩"
      }
    ],
    version: 1
  },
  wolf: {
    id: "wolf",
    name: "Wolf",
    keywords: [
      "animal",
      "nature",
      "wild"
    ],
    skins: [
      {
        unified: "1f43a",
        native: "🐺"
      }
    ],
    version: 1
  },
  fox_face: {
    id: "fox_face",
    name: "Fox",
    keywords: [
      "face",
      "animal",
      "nature"
    ],
    skins: [
      {
        unified: "1f98a",
        native: "🦊"
      }
    ],
    version: 3
  },
  raccoon: {
    id: "raccoon",
    name: "Raccoon",
    keywords: [
      "animal",
      "nature"
    ],
    skins: [
      {
        unified: "1f99d",
        native: "🦝"
      }
    ],
    version: 11
  },
  cat: {
    id: "cat",
    name: "Cat Face",
    keywords: [
      "animal",
      "meow",
      "nature",
      "pet",
      "kitten"
    ],
    skins: [
      {
        unified: "1f431",
        native: "🐱"
      }
    ],
    version: 1
  },
  cat2: {
    id: "cat2",
    name: "Cat",
    keywords: [
      "cat2",
      "animal",
      "meow",
      "pet",
      "cats"
    ],
    skins: [
      {
        unified: "1f408",
        native: "🐈"
      }
    ],
    version: 1
  },
  black_cat: {
    id: "black_cat",
    name: "Black Cat",
    keywords: [
      "superstition",
      "luck"
    ],
    skins: [
      {
        unified: "1f408-200d-2b1b",
        native: "🐈‍⬛"
      }
    ],
    version: 13
  },
  lion_face: {
    id: "lion_face",
    name: "Lion",
    keywords: [
      "face",
      "animal",
      "nature"
    ],
    skins: [
      {
        unified: "1f981",
        native: "🦁"
      }
    ],
    version: 1
  },
  tiger: {
    id: "tiger",
    name: "Tiger Face",
    keywords: [
      "animal",
      "cat",
      "danger",
      "wild",
      "nature",
      "roar"
    ],
    skins: [
      {
        unified: "1f42f",
        native: "🐯"
      }
    ],
    version: 1
  },
  tiger2: {
    id: "tiger2",
    name: "Tiger",
    keywords: [
      "tiger2",
      "animal",
      "nature",
      "roar"
    ],
    skins: [
      {
        unified: "1f405",
        native: "🐅"
      }
    ],
    version: 1
  },
  leopard: {
    id: "leopard",
    name: "Leopard",
    keywords: [
      "animal",
      "nature"
    ],
    skins: [
      {
        unified: "1f406",
        native: "🐆"
      }
    ],
    version: 1
  },
  horse: {
    id: "horse",
    name: "Horse Face",
    keywords: [
      "animal",
      "brown",
      "nature"
    ],
    skins: [
      {
        unified: "1f434",
        native: "🐴"
      }
    ],
    version: 1
  },
  moose: {
    id: "moose",
    name: "Moose",
    keywords: [
      "shrek",
      "canada",
      "sweden",
      "sven",
      "cool"
    ],
    skins: [
      {
        unified: "1face",
        native: "🫎"
      }
    ],
    version: 15
  },
  donkey: {
    id: "donkey",
    name: "Donkey",
    keywords: [
      "eeyore",
      "mule"
    ],
    skins: [
      {
        unified: "1facf",
        native: "🫏"
      }
    ],
    version: 15
  },
  racehorse: {
    id: "racehorse",
    name: "Horse",
    keywords: [
      "racehorse",
      "animal",
      "gamble",
      "luck"
    ],
    skins: [
      {
        unified: "1f40e",
        native: "🐎"
      }
    ],
    version: 1
  },
  unicorn_face: {
    id: "unicorn_face",
    name: "Unicorn",
    keywords: [
      "face",
      "animal",
      "nature",
      "mystical"
    ],
    skins: [
      {
        unified: "1f984",
        native: "🦄"
      }
    ],
    version: 1
  },
  zebra_face: {
    id: "zebra_face",
    name: "Zebra",
    keywords: [
      "face",
      "animal",
      "nature",
      "stripes",
      "safari"
    ],
    skins: [
      {
        unified: "1f993",
        native: "🦓"
      }
    ],
    version: 5
  },
  deer: {
    id: "deer",
    name: "Deer",
    keywords: [
      "animal",
      "nature",
      "horns",
      "venison"
    ],
    skins: [
      {
        unified: "1f98c",
        native: "🦌"
      }
    ],
    version: 3
  },
  bison: {
    id: "bison",
    name: "Bison",
    keywords: [
      "ox"
    ],
    skins: [
      {
        unified: "1f9ac",
        native: "🦬"
      }
    ],
    version: 13
  },
  cow: {
    id: "cow",
    name: "Cow Face",
    keywords: [
      "beef",
      "ox",
      "animal",
      "nature",
      "moo",
      "milk"
    ],
    skins: [
      {
        unified: "1f42e",
        native: "🐮"
      }
    ],
    version: 1
  },
  ox: {
    id: "ox",
    name: "Ox",
    keywords: [
      "animal",
      "cow",
      "beef"
    ],
    skins: [
      {
        unified: "1f402",
        native: "🐂"
      }
    ],
    version: 1
  },
  water_buffalo: {
    id: "water_buffalo",
    name: "Water Buffalo",
    keywords: [
      "animal",
      "nature",
      "ox",
      "cow"
    ],
    skins: [
      {
        unified: "1f403",
        native: "🐃"
      }
    ],
    version: 1
  },
  cow2: {
    id: "cow2",
    name: "Cow",
    keywords: [
      "cow2",
      "beef",
      "ox",
      "animal",
      "nature",
      "moo",
      "milk"
    ],
    skins: [
      {
        unified: "1f404",
        native: "🐄"
      }
    ],
    version: 1
  },
  pig: {
    id: "pig",
    name: "Pig Face",
    keywords: [
      "animal",
      "oink",
      "nature"
    ],
    skins: [
      {
        unified: "1f437",
        native: "🐷"
      }
    ],
    version: 1
  },
  pig2: {
    id: "pig2",
    name: "Pig",
    keywords: [
      "pig2",
      "animal",
      "nature"
    ],
    skins: [
      {
        unified: "1f416",
        native: "🐖"
      }
    ],
    version: 1
  },
  boar: {
    id: "boar",
    name: "Boar",
    keywords: [
      "animal",
      "nature"
    ],
    skins: [
      {
        unified: "1f417",
        native: "🐗"
      }
    ],
    version: 1
  },
  pig_nose: {
    id: "pig_nose",
    name: "Pig Nose",
    keywords: [
      "animal",
      "oink"
    ],
    skins: [
      {
        unified: "1f43d",
        native: "🐽"
      }
    ],
    version: 1
  },
  ram: {
    id: "ram",
    name: "Ram",
    keywords: [
      "animal",
      "sheep",
      "nature"
    ],
    skins: [
      {
        unified: "1f40f",
        native: "🐏"
      }
    ],
    version: 1
  },
  sheep: {
    id: "sheep",
    name: "Ewe",
    keywords: [
      "sheep",
      "animal",
      "nature",
      "wool",
      "shipit"
    ],
    skins: [
      {
        unified: "1f411",
        native: "🐑"
      }
    ],
    version: 1
  },
  goat: {
    id: "goat",
    name: "Goat",
    keywords: [
      "animal",
      "nature"
    ],
    skins: [
      {
        unified: "1f410",
        native: "🐐"
      }
    ],
    version: 1
  },
  dromedary_camel: {
    id: "dromedary_camel",
    name: "Camel",
    keywords: [
      "dromedary",
      "animal",
      "hot",
      "desert",
      "hump"
    ],
    skins: [
      {
        unified: "1f42a",
        native: "🐪"
      }
    ],
    version: 1
  },
  camel: {
    id: "camel",
    name: "Bactrian Camel",
    keywords: [
      "two",
      "hump",
      "animal",
      "nature",
      "hot",
      "desert"
    ],
    skins: [
      {
        unified: "1f42b",
        native: "🐫"
      }
    ],
    version: 1
  },
  llama: {
    id: "llama",
    name: "Llama",
    keywords: [
      "animal",
      "nature",
      "alpaca"
    ],
    skins: [
      {
        unified: "1f999",
        native: "🦙"
      }
    ],
    version: 11
  },
  giraffe_face: {
    id: "giraffe_face",
    name: "Giraffe",
    keywords: [
      "face",
      "animal",
      "nature",
      "spots",
      "safari"
    ],
    skins: [
      {
        unified: "1f992",
        native: "🦒"
      }
    ],
    version: 5
  },
  elephant: {
    id: "elephant",
    name: "Elephant",
    keywords: [
      "animal",
      "nature",
      "nose",
      "th",
      "circus"
    ],
    skins: [
      {
        unified: "1f418",
        native: "🐘"
      }
    ],
    version: 1
  },
  mammoth: {
    id: "mammoth",
    name: "Mammoth",
    keywords: [
      "elephant",
      "tusks"
    ],
    skins: [
      {
        unified: "1f9a3",
        native: "🦣"
      }
    ],
    version: 13
  },
  rhinoceros: {
    id: "rhinoceros",
    name: "Rhinoceros",
    keywords: [
      "animal",
      "nature",
      "horn"
    ],
    skins: [
      {
        unified: "1f98f",
        native: "🦏"
      }
    ],
    version: 3
  },
  hippopotamus: {
    id: "hippopotamus",
    name: "Hippopotamus",
    keywords: [
      "animal",
      "nature"
    ],
    skins: [
      {
        unified: "1f99b",
        native: "🦛"
      }
    ],
    version: 11
  },
  mouse: {
    id: "mouse",
    name: "Mouse Face",
    keywords: [
      "animal",
      "nature",
      "cheese",
      "wedge",
      "rodent"
    ],
    skins: [
      {
        unified: "1f42d",
        native: "🐭"
      }
    ],
    version: 1
  },
  mouse2: {
    id: "mouse2",
    name: "Mouse",
    keywords: [
      "mouse2",
      "animal",
      "nature",
      "rodent"
    ],
    skins: [
      {
        unified: "1f401",
        native: "🐁"
      }
    ],
    version: 1
  },
  rat: {
    id: "rat",
    name: "Rat",
    keywords: [
      "animal",
      "mouse",
      "rodent"
    ],
    skins: [
      {
        unified: "1f400",
        native: "🐀"
      }
    ],
    version: 1
  },
  hamster: {
    id: "hamster",
    name: "Hamster",
    keywords: [
      "animal",
      "nature"
    ],
    skins: [
      {
        unified: "1f439",
        native: "🐹"
      }
    ],
    version: 1
  },
  rabbit: {
    id: "rabbit",
    name: "Rabbit Face",
    keywords: [
      "animal",
      "nature",
      "pet",
      "spring",
      "magic",
      "bunny"
    ],
    skins: [
      {
        unified: "1f430",
        native: "🐰"
      }
    ],
    version: 1
  },
  rabbit2: {
    id: "rabbit2",
    name: "Rabbit",
    keywords: [
      "rabbit2",
      "animal",
      "nature",
      "pet",
      "magic",
      "spring"
    ],
    skins: [
      {
        unified: "1f407",
        native: "🐇"
      }
    ],
    version: 1
  },
  chipmunk: {
    id: "chipmunk",
    name: "Chipmunk",
    keywords: [
      "animal",
      "nature",
      "rodent",
      "squirrel"
    ],
    skins: [
      {
        unified: "1f43f-fe0f",
        native: "🐿️"
      }
    ],
    version: 1
  },
  beaver: {
    id: "beaver",
    name: "Beaver",
    keywords: [
      "animal",
      "rodent"
    ],
    skins: [
      {
        unified: "1f9ab",
        native: "🦫"
      }
    ],
    version: 13
  },
  hedgehog: {
    id: "hedgehog",
    name: "Hedgehog",
    keywords: [
      "animal",
      "nature",
      "spiny"
    ],
    skins: [
      {
        unified: "1f994",
        native: "🦔"
      }
    ],
    version: 5
  },
  bat: {
    id: "bat",
    name: "Bat",
    keywords: [
      "animal",
      "nature",
      "blind",
      "vampire"
    ],
    skins: [
      {
        unified: "1f987",
        native: "🦇"
      }
    ],
    version: 3
  },
  bear: {
    id: "bear",
    name: "Bear",
    keywords: [
      "animal",
      "nature",
      "wild"
    ],
    skins: [
      {
        unified: "1f43b",
        native: "🐻"
      }
    ],
    version: 1
  },
  polar_bear: {
    id: "polar_bear",
    name: "Polar Bear",
    keywords: [
      "animal",
      "arctic"
    ],
    skins: [
      {
        unified: "1f43b-200d-2744-fe0f",
        native: "🐻‍❄️"
      }
    ],
    version: 13
  },
  koala: {
    id: "koala",
    name: "Koala",
    keywords: [
      "animal",
      "nature"
    ],
    skins: [
      {
        unified: "1f428",
        native: "🐨"
      }
    ],
    version: 1
  },
  panda_face: {
    id: "panda_face",
    name: "Panda",
    keywords: [
      "face",
      "animal",
      "nature"
    ],
    skins: [
      {
        unified: "1f43c",
        native: "🐼"
      }
    ],
    version: 1
  },
  sloth: {
    id: "sloth",
    name: "Sloth",
    keywords: [
      "animal"
    ],
    skins: [
      {
        unified: "1f9a5",
        native: "🦥"
      }
    ],
    version: 12
  },
  otter: {
    id: "otter",
    name: "Otter",
    keywords: [
      "animal"
    ],
    skins: [
      {
        unified: "1f9a6",
        native: "🦦"
      }
    ],
    version: 12
  },
  skunk: {
    id: "skunk",
    name: "Skunk",
    keywords: [
      "animal"
    ],
    skins: [
      {
        unified: "1f9a8",
        native: "🦨"
      }
    ],
    version: 12
  },
  kangaroo: {
    id: "kangaroo",
    name: "Kangaroo",
    keywords: [
      "animal",
      "nature",
      "australia",
      "joey",
      "hop",
      "marsupial"
    ],
    skins: [
      {
        unified: "1f998",
        native: "🦘"
      }
    ],
    version: 11
  },
  badger: {
    id: "badger",
    name: "Badger",
    keywords: [
      "animal",
      "nature",
      "honey"
    ],
    skins: [
      {
        unified: "1f9a1",
        native: "🦡"
      }
    ],
    version: 11
  },
  feet: {
    id: "feet",
    name: "Paw Prints",
    keywords: [
      "feet",
      "animal",
      "tracking",
      "footprints",
      "dog",
      "cat",
      "pet"
    ],
    skins: [
      {
        unified: "1f43e",
        native: "🐾"
      }
    ],
    version: 1
  },
  turkey: {
    id: "turkey",
    name: "Turkey",
    keywords: [
      "animal",
      "bird"
    ],
    skins: [
      {
        unified: "1f983",
        native: "🦃"
      }
    ],
    version: 1
  },
  chicken: {
    id: "chicken",
    name: "Chicken",
    keywords: [
      "animal",
      "cluck",
      "nature",
      "bird"
    ],
    skins: [
      {
        unified: "1f414",
        native: "🐔"
      }
    ],
    version: 1
  },
  rooster: {
    id: "rooster",
    name: "Rooster",
    keywords: [
      "animal",
      "nature",
      "chicken"
    ],
    skins: [
      {
        unified: "1f413",
        native: "🐓"
      }
    ],
    version: 1
  },
  hatching_chick: {
    id: "hatching_chick",
    name: "Hatching Chick",
    keywords: [
      "animal",
      "chicken",
      "egg",
      "born",
      "baby",
      "bird"
    ],
    skins: [
      {
        unified: "1f423",
        native: "🐣"
      }
    ],
    version: 1
  },
  baby_chick: {
    id: "baby_chick",
    name: "Baby Chick",
    keywords: [
      "animal",
      "chicken",
      "bird"
    ],
    skins: [
      {
        unified: "1f424",
        native: "🐤"
      }
    ],
    version: 1
  },
  hatched_chick: {
    id: "hatched_chick",
    name: "Front-Facing Baby Chick",
    keywords: [
      "hatched",
      "front",
      "facing",
      "animal",
      "chicken",
      "bird"
    ],
    skins: [
      {
        unified: "1f425",
        native: "🐥"
      }
    ],
    version: 1
  },
  bird: {
    id: "bird",
    name: "Bird",
    keywords: [
      "animal",
      "nature",
      "fly",
      "tweet",
      "spring"
    ],
    skins: [
      {
        unified: "1f426",
        native: "🐦"
      }
    ],
    version: 1
  },
  penguin: {
    id: "penguin",
    name: "Penguin",
    keywords: [
      "animal",
      "nature"
    ],
    skins: [
      {
        unified: "1f427",
        native: "🐧"
      }
    ],
    version: 1
  },
  dove_of_peace: {
    id: "dove_of_peace",
    name: "Dove",
    keywords: [
      "of",
      "peace",
      "animal",
      "bird"
    ],
    skins: [
      {
        unified: "1f54a-fe0f",
        native: "🕊️"
      }
    ],
    version: 1
  },
  eagle: {
    id: "eagle",
    name: "Eagle",
    keywords: [
      "animal",
      "nature",
      "bird"
    ],
    skins: [
      {
        unified: "1f985",
        native: "🦅"
      }
    ],
    version: 3
  },
  duck: {
    id: "duck",
    name: "Duck",
    keywords: [
      "animal",
      "nature",
      "bird",
      "mallard"
    ],
    skins: [
      {
        unified: "1f986",
        native: "🦆"
      }
    ],
    version: 3
  },
  swan: {
    id: "swan",
    name: "Swan",
    keywords: [
      "animal",
      "nature",
      "bird"
    ],
    skins: [
      {
        unified: "1f9a2",
        native: "🦢"
      }
    ],
    version: 11
  },
  owl: {
    id: "owl",
    name: "Owl",
    keywords: [
      "animal",
      "nature",
      "bird",
      "hoot"
    ],
    skins: [
      {
        unified: "1f989",
        native: "🦉"
      }
    ],
    version: 3
  },
  dodo: {
    id: "dodo",
    name: "Dodo",
    keywords: [
      "animal",
      "bird"
    ],
    skins: [
      {
        unified: "1f9a4",
        native: "🦤"
      }
    ],
    version: 13
  },
  feather: {
    id: "feather",
    name: "Feather",
    keywords: [
      "bird",
      "fly"
    ],
    skins: [
      {
        unified: "1fab6",
        native: "🪶"
      }
    ],
    version: 13
  },
  flamingo: {
    id: "flamingo",
    name: "Flamingo",
    keywords: [
      "animal"
    ],
    skins: [
      {
        unified: "1f9a9",
        native: "🦩"
      }
    ],
    version: 12
  },
  peacock: {
    id: "peacock",
    name: "Peacock",
    keywords: [
      "animal",
      "nature",
      "peahen",
      "bird"
    ],
    skins: [
      {
        unified: "1f99a",
        native: "🦚"
      }
    ],
    version: 11
  },
  parrot: {
    id: "parrot",
    name: "Parrot",
    keywords: [
      "animal",
      "nature",
      "bird",
      "pirate",
      "talk"
    ],
    skins: [
      {
        unified: "1f99c",
        native: "🦜"
      }
    ],
    version: 11
  },
  wing: {
    id: "wing",
    name: "Wing",
    keywords: [
      "angel",
      "birds",
      "flying"
    ],
    skins: [
      {
        unified: "1fabd",
        native: "🪽"
      }
    ],
    version: 15
  },
  black_bird: {
    id: "black_bird",
    name: "Black Bird",
    keywords: [
      "crow"
    ],
    skins: [
      {
        unified: "1f426-200d-2b1b",
        native: "🐦‍⬛"
      }
    ],
    version: 15
  },
  goose: {
    id: "goose",
    name: "Goose",
    keywords: [
      "silly",
      "jemima",
      "goosebumps"
    ],
    skins: [
      {
        unified: "1fabf",
        native: "🪿"
      }
    ],
    version: 15
  },
  frog: {
    id: "frog",
    name: "Frog",
    keywords: [
      "animal",
      "nature",
      "croak",
      "toad"
    ],
    skins: [
      {
        unified: "1f438",
        native: "🐸"
      }
    ],
    version: 1
  },
  crocodile: {
    id: "crocodile",
    name: "Crocodile",
    keywords: [
      "animal",
      "nature",
      "reptile",
      "lizard",
      "alligator"
    ],
    skins: [
      {
        unified: "1f40a",
        native: "🐊"
      }
    ],
    version: 1
  },
  turtle: {
    id: "turtle",
    name: "Turtle",
    keywords: [
      "animal",
      "slow",
      "nature",
      "tortoise"
    ],
    skins: [
      {
        unified: "1f422",
        native: "🐢"
      }
    ],
    version: 1
  },
  lizard: {
    id: "lizard",
    name: "Lizard",
    keywords: [
      "animal",
      "nature",
      "reptile"
    ],
    skins: [
      {
        unified: "1f98e",
        native: "🦎"
      }
    ],
    version: 3
  },
  snake: {
    id: "snake",
    name: "Snake",
    keywords: [
      "animal",
      "evil",
      "nature",
      "hiss",
      "python"
    ],
    skins: [
      {
        unified: "1f40d",
        native: "🐍"
      }
    ],
    version: 1
  },
  dragon_face: {
    id: "dragon_face",
    name: "Dragon Face",
    keywords: [
      "animal",
      "myth",
      "nature",
      "chinese",
      "green"
    ],
    skins: [
      {
        unified: "1f432",
        native: "🐲"
      }
    ],
    version: 1
  },
  dragon: {
    id: "dragon",
    name: "Dragon",
    keywords: [
      "animal",
      "myth",
      "nature",
      "chinese",
      "green"
    ],
    skins: [
      {
        unified: "1f409",
        native: "🐉"
      }
    ],
    version: 1
  },
  sauropod: {
    id: "sauropod",
    name: "Sauropod",
    keywords: [
      "animal",
      "nature",
      "dinosaur",
      "brachiosaurus",
      "brontosaurus",
      "diplodocus",
      "extinct"
    ],
    skins: [
      {
        unified: "1f995",
        native: "🦕"
      }
    ],
    version: 5
  },
  "t-rex": {
    id: "t-rex",
    name: "T-Rex",
    keywords: [
      "t",
      "rex",
      "animal",
      "nature",
      "dinosaur",
      "tyrannosaurus",
      "extinct"
    ],
    skins: [
      {
        unified: "1f996",
        native: "🦖"
      }
    ],
    version: 5
  },
  whale: {
    id: "whale",
    name: "Spouting Whale",
    keywords: [
      "animal",
      "nature",
      "sea",
      "ocean"
    ],
    skins: [
      {
        unified: "1f433",
        native: "🐳"
      }
    ],
    version: 1
  },
  whale2: {
    id: "whale2",
    name: "Whale",
    keywords: [
      "whale2",
      "animal",
      "nature",
      "sea",
      "ocean"
    ],
    skins: [
      {
        unified: "1f40b",
        native: "🐋"
      }
    ],
    version: 1
  },
  dolphin: {
    id: "dolphin",
    name: "Dolphin",
    keywords: [
      "flipper",
      "animal",
      "nature",
      "fish",
      "sea",
      "ocean",
      "fins",
      "beach"
    ],
    skins: [
      {
        unified: "1f42c",
        native: "🐬"
      }
    ],
    version: 1
  },
  seal: {
    id: "seal",
    name: "Seal",
    keywords: [
      "animal",
      "creature",
      "sea"
    ],
    skins: [
      {
        unified: "1f9ad",
        native: "🦭"
      }
    ],
    version: 13
  },
  fish: {
    id: "fish",
    name: "Fish",
    keywords: [
      "animal",
      "food",
      "nature"
    ],
    skins: [
      {
        unified: "1f41f",
        native: "🐟"
      }
    ],
    version: 1
  },
  tropical_fish: {
    id: "tropical_fish",
    name: "Tropical Fish",
    keywords: [
      "animal",
      "swim",
      "ocean",
      "beach",
      "nemo"
    ],
    skins: [
      {
        unified: "1f420",
        native: "🐠"
      }
    ],
    version: 1
  },
  blowfish: {
    id: "blowfish",
    name: "Blowfish",
    keywords: [
      "animal",
      "nature",
      "food",
      "sea",
      "ocean"
    ],
    skins: [
      {
        unified: "1f421",
        native: "🐡"
      }
    ],
    version: 1
  },
  shark: {
    id: "shark",
    name: "Shark",
    keywords: [
      "animal",
      "nature",
      "fish",
      "sea",
      "ocean",
      "jaws",
      "fins",
      "beach"
    ],
    skins: [
      {
        unified: "1f988",
        native: "🦈"
      }
    ],
    version: 3
  },
  octopus: {
    id: "octopus",
    name: "Octopus",
    keywords: [
      "animal",
      "creature",
      "ocean",
      "sea",
      "nature",
      "beach"
    ],
    skins: [
      {
        unified: "1f419",
        native: "🐙"
      }
    ],
    version: 1
  },
  shell: {
    id: "shell",
    name: "Spiral Shell",
    keywords: [
      "nature",
      "sea",
      "beach"
    ],
    skins: [
      {
        unified: "1f41a",
        native: "🐚"
      }
    ],
    version: 1
  },
  coral: {
    id: "coral",
    name: "Coral",
    keywords: [
      "ocean",
      "sea",
      "reef"
    ],
    skins: [
      {
        unified: "1fab8",
        native: "🪸"
      }
    ],
    version: 14
  },
  jellyfish: {
    id: "jellyfish",
    name: "Jellyfish",
    keywords: [
      "sting",
      "tentacles"
    ],
    skins: [
      {
        unified: "1fabc",
        native: "🪼"
      }
    ],
    version: 15
  },
  snail: {
    id: "snail",
    name: "Snail",
    keywords: [
      "slow",
      "animal",
      "shell"
    ],
    skins: [
      {
        unified: "1f40c",
        native: "🐌"
      }
    ],
    version: 1
  },
  butterfly: {
    id: "butterfly",
    name: "Butterfly",
    keywords: [
      "animal",
      "insect",
      "nature",
      "caterpillar"
    ],
    skins: [
      {
        unified: "1f98b",
        native: "🦋"
      }
    ],
    version: 3
  },
  bug: {
    id: "bug",
    name: "Bug",
    keywords: [
      "animal",
      "insect",
      "nature",
      "worm"
    ],
    skins: [
      {
        unified: "1f41b",
        native: "🐛"
      }
    ],
    version: 1
  },
  ant: {
    id: "ant",
    name: "Ant",
    keywords: [
      "animal",
      "insect",
      "nature",
      "bug"
    ],
    skins: [
      {
        unified: "1f41c",
        native: "🐜"
      }
    ],
    version: 1
  },
  bee: {
    id: "bee",
    name: "Honeybee",
    keywords: [
      "bee",
      "animal",
      "insect",
      "nature",
      "bug",
      "spring",
      "honey"
    ],
    skins: [
      {
        unified: "1f41d",
        native: "🐝"
      }
    ],
    version: 1
  },
  beetle: {
    id: "beetle",
    name: "Beetle",
    keywords: [
      "insect"
    ],
    skins: [
      {
        unified: "1fab2",
        native: "🪲"
      }
    ],
    version: 13
  },
  ladybug: {
    id: "ladybug",
    name: "Lady Beetle",
    keywords: [
      "ladybug",
      "animal",
      "insect",
      "nature"
    ],
    skins: [
      {
        unified: "1f41e",
        native: "🐞"
      }
    ],
    version: 1
  },
  cricket: {
    id: "cricket",
    name: "Cricket",
    keywords: [
      "animal",
      "chirp"
    ],
    skins: [
      {
        unified: "1f997",
        native: "🦗"
      }
    ],
    version: 5
  },
  cockroach: {
    id: "cockroach",
    name: "Cockroach",
    keywords: [
      "insect",
      "pests"
    ],
    skins: [
      {
        unified: "1fab3",
        native: "🪳"
      }
    ],
    version: 13
  },
  spider: {
    id: "spider",
    name: "Spider",
    keywords: [
      "animal",
      "arachnid"
    ],
    skins: [
      {
        unified: "1f577-fe0f",
        native: "🕷️"
      }
    ],
    version: 1
  },
  spider_web: {
    id: "spider_web",
    name: "Spider Web",
    keywords: [
      "animal",
      "insect",
      "arachnid",
      "silk"
    ],
    skins: [
      {
        unified: "1f578-fe0f",
        native: "🕸️"
      }
    ],
    version: 1
  },
  scorpion: {
    id: "scorpion",
    name: "Scorpion",
    keywords: [
      "animal",
      "arachnid"
    ],
    skins: [
      {
        unified: "1f982",
        native: "🦂"
      }
    ],
    version: 1
  },
  mosquito: {
    id: "mosquito",
    name: "Mosquito",
    keywords: [
      "animal",
      "nature",
      "insect",
      "malaria"
    ],
    skins: [
      {
        unified: "1f99f",
        native: "🦟"
      }
    ],
    version: 11
  },
  fly: {
    id: "fly",
    name: "Fly",
    keywords: [
      "insect"
    ],
    skins: [
      {
        unified: "1fab0",
        native: "🪰"
      }
    ],
    version: 13
  },
  worm: {
    id: "worm",
    name: "Worm",
    keywords: [
      "animal"
    ],
    skins: [
      {
        unified: "1fab1",
        native: "🪱"
      }
    ],
    version: 13
  },
  microbe: {
    id: "microbe",
    name: "Microbe",
    keywords: [
      "amoeba",
      "bacteria",
      "germs",
      "virus",
      "covid"
    ],
    skins: [
      {
        unified: "1f9a0",
        native: "🦠"
      }
    ],
    version: 11
  },
  bouquet: {
    id: "bouquet",
    name: "Bouquet",
    keywords: [
      "flowers",
      "nature",
      "spring"
    ],
    skins: [
      {
        unified: "1f490",
        native: "💐"
      }
    ],
    version: 1
  },
  cherry_blossom: {
    id: "cherry_blossom",
    name: "Cherry Blossom",
    keywords: [
      "nature",
      "plant",
      "spring",
      "flower"
    ],
    skins: [
      {
        unified: "1f338",
        native: "🌸"
      }
    ],
    version: 1
  },
  white_flower: {
    id: "white_flower",
    name: "White Flower",
    keywords: [
      "japanese",
      "spring"
    ],
    skins: [
      {
        unified: "1f4ae",
        native: "💮"
      }
    ],
    version: 1
  },
  lotus: {
    id: "lotus",
    name: "Lotus",
    keywords: [
      "flower",
      "calm",
      "meditation"
    ],
    skins: [
      {
        unified: "1fab7",
        native: "🪷"
      }
    ],
    version: 14
  },
  rosette: {
    id: "rosette",
    name: "Rosette",
    keywords: [
      "flower",
      "decoration",
      "military"
    ],
    skins: [
      {
        unified: "1f3f5-fe0f",
        native: "🏵️"
      }
    ],
    version: 1
  },
  rose: {
    id: "rose",
    name: "Rose",
    keywords: [
      "flowers",
      "valentines",
      "love",
      "spring"
    ],
    skins: [
      {
        unified: "1f339",
        native: "🌹"
      }
    ],
    version: 1
  },
  wilted_flower: {
    id: "wilted_flower",
    name: "Wilted Flower",
    keywords: [
      "plant",
      "nature",
      "rose"
    ],
    skins: [
      {
        unified: "1f940",
        native: "🥀"
      }
    ],
    version: 3
  },
  hibiscus: {
    id: "hibiscus",
    name: "Hibiscus",
    keywords: [
      "plant",
      "vegetable",
      "flowers",
      "beach"
    ],
    skins: [
      {
        unified: "1f33a",
        native: "🌺"
      }
    ],
    version: 1
  },
  sunflower: {
    id: "sunflower",
    name: "Sunflower",
    keywords: [
      "nature",
      "plant",
      "fall"
    ],
    skins: [
      {
        unified: "1f33b",
        native: "🌻"
      }
    ],
    version: 1
  },
  blossom: {
    id: "blossom",
    name: "Blossom",
    keywords: [
      "nature",
      "flowers",
      "yellow"
    ],
    skins: [
      {
        unified: "1f33c",
        native: "🌼"
      }
    ],
    version: 1
  },
  tulip: {
    id: "tulip",
    name: "Tulip",
    keywords: [
      "flowers",
      "plant",
      "nature",
      "summer",
      "spring"
    ],
    skins: [
      {
        unified: "1f337",
        native: "🌷"
      }
    ],
    version: 1
  },
  hyacinth: {
    id: "hyacinth",
    name: "Hyacinth",
    keywords: [
      "flower",
      "lavender"
    ],
    skins: [
      {
        unified: "1fabb",
        native: "🪻"
      }
    ],
    version: 15
  },
  seedling: {
    id: "seedling",
    name: "Seedling",
    keywords: [
      "plant",
      "nature",
      "grass",
      "lawn",
      "spring"
    ],
    skins: [
      {
        unified: "1f331",
        native: "🌱"
      }
    ],
    version: 1
  },
  potted_plant: {
    id: "potted_plant",
    name: "Potted Plant",
    keywords: [
      "greenery",
      "house"
    ],
    skins: [
      {
        unified: "1fab4",
        native: "🪴"
      }
    ],
    version: 13
  },
  evergreen_tree: {
    id: "evergreen_tree",
    name: "Evergreen Tree",
    keywords: [
      "plant",
      "nature"
    ],
    skins: [
      {
        unified: "1f332",
        native: "🌲"
      }
    ],
    version: 1
  },
  deciduous_tree: {
    id: "deciduous_tree",
    name: "Deciduous Tree",
    keywords: [
      "plant",
      "nature"
    ],
    skins: [
      {
        unified: "1f333",
        native: "🌳"
      }
    ],
    version: 1
  },
  palm_tree: {
    id: "palm_tree",
    name: "Palm Tree",
    keywords: [
      "plant",
      "vegetable",
      "nature",
      "summer",
      "beach",
      "mojito",
      "tropical"
    ],
    skins: [
      {
        unified: "1f334",
        native: "🌴"
      }
    ],
    version: 1
  },
  cactus: {
    id: "cactus",
    name: "Cactus",
    keywords: [
      "vegetable",
      "plant",
      "nature"
    ],
    skins: [
      {
        unified: "1f335",
        native: "🌵"
      }
    ],
    version: 1
  },
  ear_of_rice: {
    id: "ear_of_rice",
    name: "Ear of Rice",
    keywords: [
      "sheaf",
      "nature",
      "plant"
    ],
    skins: [
      {
        unified: "1f33e",
        native: "🌾"
      }
    ],
    version: 1
  },
  herb: {
    id: "herb",
    name: "Herb",
    keywords: [
      "vegetable",
      "plant",
      "medicine",
      "weed",
      "grass",
      "lawn"
    ],
    skins: [
      {
        unified: "1f33f",
        native: "🌿"
      }
    ],
    version: 1
  },
  shamrock: {
    id: "shamrock",
    name: "Shamrock",
    keywords: [
      "vegetable",
      "plant",
      "nature",
      "irish",
      "clover"
    ],
    skins: [
      {
        unified: "2618-fe0f",
        native: "☘️"
      }
    ],
    version: 1
  },
  four_leaf_clover: {
    id: "four_leaf_clover",
    name: "Four Leaf Clover",
    keywords: [
      "vegetable",
      "plant",
      "nature",
      "lucky",
      "irish"
    ],
    skins: [
      {
        unified: "1f340",
        native: "🍀"
      }
    ],
    version: 1
  },
  maple_leaf: {
    id: "maple_leaf",
    name: "Maple Leaf",
    keywords: [
      "nature",
      "plant",
      "vegetable",
      "ca",
      "fall"
    ],
    skins: [
      {
        unified: "1f341",
        native: "🍁"
      }
    ],
    version: 1
  },
  fallen_leaf: {
    id: "fallen_leaf",
    name: "Fallen Leaf",
    keywords: [
      "nature",
      "plant",
      "vegetable",
      "leaves"
    ],
    skins: [
      {
        unified: "1f342",
        native: "🍂"
      }
    ],
    version: 1
  },
  leaves: {
    id: "leaves",
    name: "Leaf Fluttering in Wind",
    keywords: [
      "leaves",
      "nature",
      "plant",
      "tree",
      "vegetable",
      "grass",
      "lawn",
      "spring"
    ],
    skins: [
      {
        unified: "1f343",
        native: "🍃"
      }
    ],
    version: 1
  },
  empty_nest: {
    id: "empty_nest",
    name: "Empty Nest",
    keywords: [
      "bird"
    ],
    skins: [
      {
        unified: "1fab9",
        native: "🪹"
      }
    ],
    version: 14
  },
  nest_with_eggs: {
    id: "nest_with_eggs",
    name: "Nest with Eggs",
    keywords: [
      "bird"
    ],
    skins: [
      {
        unified: "1faba",
        native: "🪺"
      }
    ],
    version: 14
  },
  mushroom: {
    id: "mushroom",
    name: "Mushroom",
    keywords: [
      "plant",
      "vegetable"
    ],
    skins: [
      {
        unified: "1f344",
        native: "🍄"
      }
    ],
    version: 1
  },
  grapes: {
    id: "grapes",
    name: "Grapes",
    keywords: [
      "fruit",
      "food",
      "wine"
    ],
    skins: [
      {
        unified: "1f347",
        native: "🍇"
      }
    ],
    version: 1
  },
  melon: {
    id: "melon",
    name: "Melon",
    keywords: [
      "fruit",
      "nature",
      "food"
    ],
    skins: [
      {
        unified: "1f348",
        native: "🍈"
      }
    ],
    version: 1
  },
  watermelon: {
    id: "watermelon",
    name: "Watermelon",
    keywords: [
      "fruit",
      "food",
      "picnic",
      "summer"
    ],
    skins: [
      {
        unified: "1f349",
        native: "🍉"
      }
    ],
    version: 1
  },
  tangerine: {
    id: "tangerine",
    name: "Tangerine",
    keywords: [
      "food",
      "fruit",
      "nature",
      "orange"
    ],
    skins: [
      {
        unified: "1f34a",
        native: "🍊"
      }
    ],
    version: 1
  },
  lemon: {
    id: "lemon",
    name: "Lemon",
    keywords: [
      "fruit",
      "nature"
    ],
    skins: [
      {
        unified: "1f34b",
        native: "🍋"
      }
    ],
    version: 1
  },
  banana: {
    id: "banana",
    name: "Banana",
    keywords: [
      "fruit",
      "food",
      "monkey"
    ],
    skins: [
      {
        unified: "1f34c",
        native: "🍌"
      }
    ],
    version: 1
  },
  pineapple: {
    id: "pineapple",
    name: "Pineapple",
    keywords: [
      "fruit",
      "nature",
      "food"
    ],
    skins: [
      {
        unified: "1f34d",
        native: "🍍"
      }
    ],
    version: 1
  },
  mango: {
    id: "mango",
    name: "Mango",
    keywords: [
      "fruit",
      "food",
      "tropical"
    ],
    skins: [
      {
        unified: "1f96d",
        native: "🥭"
      }
    ],
    version: 11
  },
  apple: {
    id: "apple",
    name: "Red Apple",
    keywords: [
      "fruit",
      "mac",
      "school"
    ],
    skins: [
      {
        unified: "1f34e",
        native: "🍎"
      }
    ],
    version: 1
  },
  green_apple: {
    id: "green_apple",
    name: "Green Apple",
    keywords: [
      "fruit",
      "nature"
    ],
    skins: [
      {
        unified: "1f34f",
        native: "🍏"
      }
    ],
    version: 1
  },
  pear: {
    id: "pear",
    name: "Pear",
    keywords: [
      "fruit",
      "nature",
      "food"
    ],
    skins: [
      {
        unified: "1f350",
        native: "🍐"
      }
    ],
    version: 1
  },
  peach: {
    id: "peach",
    name: "Peach",
    keywords: [
      "fruit",
      "nature",
      "food"
    ],
    skins: [
      {
        unified: "1f351",
        native: "🍑"
      }
    ],
    version: 1
  },
  cherries: {
    id: "cherries",
    name: "Cherries",
    keywords: [
      "food",
      "fruit"
    ],
    skins: [
      {
        unified: "1f352",
        native: "🍒"
      }
    ],
    version: 1
  },
  strawberry: {
    id: "strawberry",
    name: "Strawberry",
    keywords: [
      "fruit",
      "food",
      "nature"
    ],
    skins: [
      {
        unified: "1f353",
        native: "🍓"
      }
    ],
    version: 1
  },
  blueberries: {
    id: "blueberries",
    name: "Blueberries",
    keywords: [
      "fruit"
    ],
    skins: [
      {
        unified: "1fad0",
        native: "🫐"
      }
    ],
    version: 13
  },
  kiwifruit: {
    id: "kiwifruit",
    name: "Kiwifruit",
    keywords: [
      "kiwi",
      "fruit",
      "food"
    ],
    skins: [
      {
        unified: "1f95d",
        native: "🥝"
      }
    ],
    version: 3
  },
  tomato: {
    id: "tomato",
    name: "Tomato",
    keywords: [
      "fruit",
      "vegetable",
      "nature",
      "food"
    ],
    skins: [
      {
        unified: "1f345",
        native: "🍅"
      }
    ],
    version: 1
  },
  olive: {
    id: "olive",
    name: "Olive",
    keywords: [
      "fruit"
    ],
    skins: [
      {
        unified: "1fad2",
        native: "🫒"
      }
    ],
    version: 13
  },
  coconut: {
    id: "coconut",
    name: "Coconut",
    keywords: [
      "fruit",
      "nature",
      "food",
      "palm"
    ],
    skins: [
      {
        unified: "1f965",
        native: "🥥"
      }
    ],
    version: 5
  },
  avocado: {
    id: "avocado",
    name: "Avocado",
    keywords: [
      "fruit",
      "food"
    ],
    skins: [
      {
        unified: "1f951",
        native: "🥑"
      }
    ],
    version: 3
  },
  eggplant: {
    id: "eggplant",
    name: "Eggplant",
    keywords: [
      "vegetable",
      "nature",
      "food",
      "aubergine"
    ],
    skins: [
      {
        unified: "1f346",
        native: "🍆"
      }
    ],
    version: 1
  },
  potato: {
    id: "potato",
    name: "Potato",
    keywords: [
      "food",
      "tuber",
      "vegatable",
      "starch"
    ],
    skins: [
      {
        unified: "1f954",
        native: "🥔"
      }
    ],
    version: 3
  },
  carrot: {
    id: "carrot",
    name: "Carrot",
    keywords: [
      "vegetable",
      "food",
      "orange"
    ],
    skins: [
      {
        unified: "1f955",
        native: "🥕"
      }
    ],
    version: 3
  },
  corn: {
    id: "corn",
    name: "Ear of Corn",
    keywords: [
      "food",
      "vegetable",
      "plant"
    ],
    skins: [
      {
        unified: "1f33d",
        native: "🌽"
      }
    ],
    version: 1
  },
  hot_pepper: {
    id: "hot_pepper",
    name: "Hot Pepper",
    keywords: [
      "food",
      "spicy",
      "chilli",
      "chili"
    ],
    skins: [
      {
        unified: "1f336-fe0f",
        native: "🌶️"
      }
    ],
    version: 1
  },
  bell_pepper: {
    id: "bell_pepper",
    name: "Bell Pepper",
    keywords: [
      "fruit",
      "plant"
    ],
    skins: [
      {
        unified: "1fad1",
        native: "🫑"
      }
    ],
    version: 13
  },
  cucumber: {
    id: "cucumber",
    name: "Cucumber",
    keywords: [
      "fruit",
      "food",
      "pickle"
    ],
    skins: [
      {
        unified: "1f952",
        native: "🥒"
      }
    ],
    version: 3
  },
  leafy_green: {
    id: "leafy_green",
    name: "Leafy Green",
    keywords: [
      "food",
      "vegetable",
      "plant",
      "bok",
      "choy",
      "cabbage",
      "kale",
      "lettuce"
    ],
    skins: [
      {
        unified: "1f96c",
        native: "🥬"
      }
    ],
    version: 11
  },
  broccoli: {
    id: "broccoli",
    name: "Broccoli",
    keywords: [
      "fruit",
      "food",
      "vegetable"
    ],
    skins: [
      {
        unified: "1f966",
        native: "🥦"
      }
    ],
    version: 5
  },
  garlic: {
    id: "garlic",
    name: "Garlic",
    keywords: [
      "food",
      "spice",
      "cook"
    ],
    skins: [
      {
        unified: "1f9c4",
        native: "🧄"
      }
    ],
    version: 12
  },
  onion: {
    id: "onion",
    name: "Onion",
    keywords: [
      "cook",
      "food",
      "spice"
    ],
    skins: [
      {
        unified: "1f9c5",
        native: "🧅"
      }
    ],
    version: 12
  },
  peanuts: {
    id: "peanuts",
    name: "Peanuts",
    keywords: [
      "food",
      "nut"
    ],
    skins: [
      {
        unified: "1f95c",
        native: "🥜"
      }
    ],
    version: 3
  },
  beans: {
    id: "beans",
    name: "Beans",
    keywords: [
      "food"
    ],
    skins: [
      {
        unified: "1fad8",
        native: "🫘"
      }
    ],
    version: 14
  },
  chestnut: {
    id: "chestnut",
    name: "Chestnut",
    keywords: [
      "food",
      "squirrel"
    ],
    skins: [
      {
        unified: "1f330",
        native: "🌰"
      }
    ],
    version: 1
  },
  ginger_root: {
    id: "ginger_root",
    name: "Ginger Root",
    keywords: [
      "spice",
      "yellow",
      "cooking",
      "gingerbread"
    ],
    skins: [
      {
        unified: "1fada",
        native: "🫚"
      }
    ],
    version: 15
  },
  pea_pod: {
    id: "pea_pod",
    name: "Pea Pod",
    keywords: [
      "cozy",
      "green"
    ],
    skins: [
      {
        unified: "1fadb",
        native: "🫛"
      }
    ],
    version: 15
  },
  bread: {
    id: "bread",
    name: "Bread",
    keywords: [
      "food",
      "wheat",
      "breakfast",
      "toast"
    ],
    skins: [
      {
        unified: "1f35e",
        native: "🍞"
      }
    ],
    version: 1
  },
  croissant: {
    id: "croissant",
    name: "Croissant",
    keywords: [
      "food",
      "bread",
      "french"
    ],
    skins: [
      {
        unified: "1f950",
        native: "🥐"
      }
    ],
    version: 3
  },
  baguette_bread: {
    id: "baguette_bread",
    name: "Baguette Bread",
    keywords: [
      "food",
      "french",
      "france",
      "bakery"
    ],
    skins: [
      {
        unified: "1f956",
        native: "🥖"
      }
    ],
    version: 3
  },
  flatbread: {
    id: "flatbread",
    name: "Flatbread",
    keywords: [
      "flour",
      "food",
      "bakery"
    ],
    skins: [
      {
        unified: "1fad3",
        native: "🫓"
      }
    ],
    version: 13
  },
  pretzel: {
    id: "pretzel",
    name: "Pretzel",
    keywords: [
      "food",
      "bread",
      "twisted",
      "germany",
      "bakery"
    ],
    skins: [
      {
        unified: "1f968",
        native: "🥨"
      }
    ],
    version: 5
  },
  bagel: {
    id: "bagel",
    name: "Bagel",
    keywords: [
      "food",
      "bread",
      "bakery",
      "schmear",
      "jewish"
    ],
    skins: [
      {
        unified: "1f96f",
        native: "🥯"
      }
    ],
    version: 11
  },
  pancakes: {
    id: "pancakes",
    name: "Pancakes",
    keywords: [
      "food",
      "breakfast",
      "flapjacks",
      "hotcakes",
      "brunch"
    ],
    skins: [
      {
        unified: "1f95e",
        native: "🥞"
      }
    ],
    version: 3
  },
  waffle: {
    id: "waffle",
    name: "Waffle",
    keywords: [
      "food",
      "breakfast",
      "brunch"
    ],
    skins: [
      {
        unified: "1f9c7",
        native: "🧇"
      }
    ],
    version: 12
  },
  cheese_wedge: {
    id: "cheese_wedge",
    name: "Cheese Wedge",
    keywords: [
      "food",
      "chadder",
      "swiss"
    ],
    skins: [
      {
        unified: "1f9c0",
        native: "🧀"
      }
    ],
    version: 1
  },
  meat_on_bone: {
    id: "meat_on_bone",
    name: "Meat on Bone",
    keywords: [
      "good",
      "food",
      "drumstick"
    ],
    skins: [
      {
        unified: "1f356",
        native: "🍖"
      }
    ],
    version: 1
  },
  poultry_leg: {
    id: "poultry_leg",
    name: "Poultry Leg",
    keywords: [
      "food",
      "meat",
      "drumstick",
      "bird",
      "chicken",
      "turkey"
    ],
    skins: [
      {
        unified: "1f357",
        native: "🍗"
      }
    ],
    version: 1
  },
  cut_of_meat: {
    id: "cut_of_meat",
    name: "Cut of Meat",
    keywords: [
      "food",
      "cow",
      "chop",
      "lambchop",
      "porkchop"
    ],
    skins: [
      {
        unified: "1f969",
        native: "🥩"
      }
    ],
    version: 5
  },
  bacon: {
    id: "bacon",
    name: "Bacon",
    keywords: [
      "food",
      "breakfast",
      "pork",
      "pig",
      "meat",
      "brunch"
    ],
    skins: [
      {
        unified: "1f953",
        native: "🥓"
      }
    ],
    version: 3
  },
  hamburger: {
    id: "hamburger",
    name: "Hamburger",
    keywords: [
      "meat",
      "fast",
      "food",
      "beef",
      "cheeseburger",
      "mcdonalds",
      "burger",
      "king"
    ],
    skins: [
      {
        unified: "1f354",
        native: "🍔"
      }
    ],
    version: 1
  },
  fries: {
    id: "fries",
    name: "French Fries",
    keywords: [
      "chips",
      "snack",
      "fast",
      "food",
      "potato"
    ],
    skins: [
      {
        unified: "1f35f",
        native: "🍟"
      }
    ],
    version: 1
  },
  pizza: {
    id: "pizza",
    name: "Pizza",
    keywords: [
      "food",
      "party",
      "italy"
    ],
    skins: [
      {
        unified: "1f355",
        native: "🍕"
      }
    ],
    version: 1
  },
  hotdog: {
    id: "hotdog",
    name: "Hot Dog",
    keywords: [
      "hotdog",
      "food",
      "frankfurter",
      "america"
    ],
    skins: [
      {
        unified: "1f32d",
        native: "🌭"
      }
    ],
    version: 1
  },
  sandwich: {
    id: "sandwich",
    name: "Sandwich",
    keywords: [
      "food",
      "lunch",
      "bread",
      "toast",
      "bakery"
    ],
    skins: [
      {
        unified: "1f96a",
        native: "🥪"
      }
    ],
    version: 5
  },
  taco: {
    id: "taco",
    name: "Taco",
    keywords: [
      "food",
      "mexican"
    ],
    skins: [
      {
        unified: "1f32e",
        native: "🌮"
      }
    ],
    version: 1
  },
  burrito: {
    id: "burrito",
    name: "Burrito",
    keywords: [
      "food",
      "mexican"
    ],
    skins: [
      {
        unified: "1f32f",
        native: "🌯"
      }
    ],
    version: 1
  },
  tamale: {
    id: "tamale",
    name: "Tamale",
    keywords: [
      "food",
      "masa"
    ],
    skins: [
      {
        unified: "1fad4",
        native: "🫔"
      }
    ],
    version: 13
  },
  stuffed_flatbread: {
    id: "stuffed_flatbread",
    name: "Stuffed Flatbread",
    keywords: [
      "food",
      "gyro",
      "mediterranean"
    ],
    skins: [
      {
        unified: "1f959",
        native: "🥙"
      }
    ],
    version: 3
  },
  falafel: {
    id: "falafel",
    name: "Falafel",
    keywords: [
      "food",
      "mediterranean"
    ],
    skins: [
      {
        unified: "1f9c6",
        native: "🧆"
      }
    ],
    version: 12
  },
  egg: {
    id: "egg",
    name: "Egg",
    keywords: [
      "food",
      "chicken",
      "breakfast"
    ],
    skins: [
      {
        unified: "1f95a",
        native: "🥚"
      }
    ],
    version: 3
  },
  fried_egg: {
    id: "fried_egg",
    name: "Cooking",
    keywords: [
      "fried",
      "egg",
      "food",
      "breakfast",
      "kitchen",
      "skillet"
    ],
    skins: [
      {
        unified: "1f373",
        native: "🍳"
      }
    ],
    version: 1
  },
  shallow_pan_of_food: {
    id: "shallow_pan_of_food",
    name: "Shallow Pan of Food",
    keywords: [
      "cooking",
      "casserole",
      "paella",
      "skillet"
    ],
    skins: [
      {
        unified: "1f958",
        native: "🥘"
      }
    ],
    version: 3
  },
  stew: {
    id: "stew",
    name: "Pot of Food",
    keywords: [
      "stew",
      "meat",
      "soup",
      "hot"
    ],
    skins: [
      {
        unified: "1f372",
        native: "🍲"
      }
    ],
    version: 1
  },
  fondue: {
    id: "fondue",
    name: "Fondue",
    keywords: [
      "cheese",
      "pot",
      "food"
    ],
    skins: [
      {
        unified: "1fad5",
        native: "🫕"
      }
    ],
    version: 13
  },
  bowl_with_spoon: {
    id: "bowl_with_spoon",
    name: "Bowl with Spoon",
    keywords: [
      "food",
      "breakfast",
      "cereal",
      "oatmeal",
      "porridge"
    ],
    skins: [
      {
        unified: "1f963",
        native: "🥣"
      }
    ],
    version: 5
  },
  green_salad: {
    id: "green_salad",
    name: "Green Salad",
    keywords: [
      "food",
      "healthy",
      "lettuce",
      "vegetable"
    ],
    skins: [
      {
        unified: "1f957",
        native: "🥗"
      }
    ],
    version: 3
  },
  popcorn: {
    id: "popcorn",
    name: "Popcorn",
    keywords: [
      "food",
      "movie",
      "theater",
      "films",
      "snack",
      "drama"
    ],
    skins: [
      {
        unified: "1f37f",
        native: "🍿"
      }
    ],
    version: 1
  },
  butter: {
    id: "butter",
    name: "Butter",
    keywords: [
      "food",
      "cook"
    ],
    skins: [
      {
        unified: "1f9c8",
        native: "🧈"
      }
    ],
    version: 12
  },
  salt: {
    id: "salt",
    name: "Salt",
    keywords: [
      "condiment",
      "shaker"
    ],
    skins: [
      {
        unified: "1f9c2",
        native: "🧂"
      }
    ],
    version: 11
  },
  canned_food: {
    id: "canned_food",
    name: "Canned Food",
    keywords: [
      "soup",
      "tomatoes"
    ],
    skins: [
      {
        unified: "1f96b",
        native: "🥫"
      }
    ],
    version: 5
  },
  bento: {
    id: "bento",
    name: "Bento Box",
    keywords: [
      "food",
      "japanese",
      "lunch"
    ],
    skins: [
      {
        unified: "1f371",
        native: "🍱"
      }
    ],
    version: 1
  },
  rice_cracker: {
    id: "rice_cracker",
    name: "Rice Cracker",
    keywords: [
      "food",
      "japanese",
      "snack"
    ],
    skins: [
      {
        unified: "1f358",
        native: "🍘"
      }
    ],
    version: 1
  },
  rice_ball: {
    id: "rice_ball",
    name: "Rice Ball",
    keywords: [
      "food",
      "japanese"
    ],
    skins: [
      {
        unified: "1f359",
        native: "🍙"
      }
    ],
    version: 1
  },
  rice: {
    id: "rice",
    name: "Cooked Rice",
    keywords: [
      "food",
      "asian"
    ],
    skins: [
      {
        unified: "1f35a",
        native: "🍚"
      }
    ],
    version: 1
  },
  curry: {
    id: "curry",
    name: "Curry Rice",
    keywords: [
      "food",
      "spicy",
      "hot",
      "indian"
    ],
    skins: [
      {
        unified: "1f35b",
        native: "🍛"
      }
    ],
    version: 1
  },
  ramen: {
    id: "ramen",
    name: "Steaming Bowl",
    keywords: [
      "ramen",
      "food",
      "japanese",
      "noodle",
      "chopsticks"
    ],
    skins: [
      {
        unified: "1f35c",
        native: "🍜"
      }
    ],
    version: 1
  },
  spaghetti: {
    id: "spaghetti",
    name: "Spaghetti",
    keywords: [
      "food",
      "italian",
      "pasta",
      "noodle"
    ],
    skins: [
      {
        unified: "1f35d",
        native: "🍝"
      }
    ],
    version: 1
  },
  sweet_potato: {
    id: "sweet_potato",
    name: "Roasted Sweet Potato",
    keywords: [
      "food",
      "nature",
      "plant"
    ],
    skins: [
      {
        unified: "1f360",
        native: "🍠"
      }
    ],
    version: 1
  },
  oden: {
    id: "oden",
    name: "Oden",
    keywords: [
      "food",
      "japanese"
    ],
    skins: [
      {
        unified: "1f362",
        native: "🍢"
      }
    ],
    version: 1
  },
  sushi: {
    id: "sushi",
    name: "Sushi",
    keywords: [
      "food",
      "fish",
      "japanese",
      "rice"
    ],
    skins: [
      {
        unified: "1f363",
        native: "🍣"
      }
    ],
    version: 1
  },
  fried_shrimp: {
    id: "fried_shrimp",
    name: "Fried Shrimp",
    keywords: [
      "food",
      "animal",
      "appetizer",
      "summer"
    ],
    skins: [
      {
        unified: "1f364",
        native: "🍤"
      }
    ],
    version: 1
  },
  fish_cake: {
    id: "fish_cake",
    name: "Fish Cake with Swirl",
    keywords: [
      "food",
      "japan",
      "sea",
      "beach",
      "narutomaki",
      "pink",
      "kamaboko",
      "surimi",
      "ramen"
    ],
    skins: [
      {
        unified: "1f365",
        native: "🍥"
      }
    ],
    version: 1
  },
  moon_cake: {
    id: "moon_cake",
    name: "Moon Cake",
    keywords: [
      "food",
      "autumn",
      "dessert"
    ],
    skins: [
      {
        unified: "1f96e",
        native: "🥮"
      }
    ],
    version: 11
  },
  dango: {
    id: "dango",
    name: "Dango",
    keywords: [
      "food",
      "dessert",
      "sweet",
      "japanese",
      "barbecue",
      "meat"
    ],
    skins: [
      {
        unified: "1f361",
        native: "🍡"
      }
    ],
    version: 1
  },
  dumpling: {
    id: "dumpling",
    name: "Dumpling",
    keywords: [
      "food",
      "empanada",
      "pierogi",
      "potsticker",
      "gyoza"
    ],
    skins: [
      {
        unified: "1f95f",
        native: "🥟"
      }
    ],
    version: 5
  },
  fortune_cookie: {
    id: "fortune_cookie",
    name: "Fortune Cookie",
    keywords: [
      "food",
      "prophecy",
      "dessert"
    ],
    skins: [
      {
        unified: "1f960",
        native: "🥠"
      }
    ],
    version: 5
  },
  takeout_box: {
    id: "takeout_box",
    name: "Takeout Box",
    keywords: [
      "food",
      "leftovers"
    ],
    skins: [
      {
        unified: "1f961",
        native: "🥡"
      }
    ],
    version: 5
  },
  crab: {
    id: "crab",
    name: "Crab",
    keywords: [
      "animal",
      "crustacean"
    ],
    skins: [
      {
        unified: "1f980",
        native: "🦀"
      }
    ],
    version: 1
  },
  lobster: {
    id: "lobster",
    name: "Lobster",
    keywords: [
      "animal",
      "nature",
      "bisque",
      "claws",
      "seafood"
    ],
    skins: [
      {
        unified: "1f99e",
        native: "🦞"
      }
    ],
    version: 11
  },
  shrimp: {
    id: "shrimp",
    name: "Shrimp",
    keywords: [
      "animal",
      "ocean",
      "nature",
      "seafood"
    ],
    skins: [
      {
        unified: "1f990",
        native: "🦐"
      }
    ],
    version: 3
  },
  squid: {
    id: "squid",
    name: "Squid",
    keywords: [
      "animal",
      "nature",
      "ocean",
      "sea"
    ],
    skins: [
      {
        unified: "1f991",
        native: "🦑"
      }
    ],
    version: 3
  },
  oyster: {
    id: "oyster",
    name: "Oyster",
    keywords: [
      "food"
    ],
    skins: [
      {
        unified: "1f9aa",
        native: "🦪"
      }
    ],
    version: 12
  },
  icecream: {
    id: "icecream",
    name: "Soft Ice Cream",
    keywords: [
      "icecream",
      "food",
      "hot",
      "dessert",
      "summer"
    ],
    skins: [
      {
        unified: "1f366",
        native: "🍦"
      }
    ],
    version: 1
  },
  shaved_ice: {
    id: "shaved_ice",
    name: "Shaved Ice",
    keywords: [
      "hot",
      "dessert",
      "summer"
    ],
    skins: [
      {
        unified: "1f367",
        native: "🍧"
      }
    ],
    version: 1
  },
  ice_cream: {
    id: "ice_cream",
    name: "Ice Cream",
    keywords: [
      "food",
      "hot",
      "dessert"
    ],
    skins: [
      {
        unified: "1f368",
        native: "🍨"
      }
    ],
    version: 1
  },
  doughnut: {
    id: "doughnut",
    name: "Doughnut",
    keywords: [
      "food",
      "dessert",
      "snack",
      "sweet",
      "donut"
    ],
    skins: [
      {
        unified: "1f369",
        native: "🍩"
      }
    ],
    version: 1
  },
  cookie: {
    id: "cookie",
    name: "Cookie",
    keywords: [
      "food",
      "snack",
      "oreo",
      "chocolate",
      "sweet",
      "dessert"
    ],
    skins: [
      {
        unified: "1f36a",
        native: "🍪"
      }
    ],
    version: 1
  },
  birthday: {
    id: "birthday",
    name: "Birthday Cake",
    keywords: [
      "food",
      "dessert"
    ],
    skins: [
      {
        unified: "1f382",
        native: "🎂"
      }
    ],
    version: 1
  },
  cake: {
    id: "cake",
    name: "Shortcake",
    keywords: [
      "cake",
      "food",
      "dessert"
    ],
    skins: [
      {
        unified: "1f370",
        native: "🍰"
      }
    ],
    version: 1
  },
  cupcake: {
    id: "cupcake",
    name: "Cupcake",
    keywords: [
      "food",
      "dessert",
      "bakery",
      "sweet"
    ],
    skins: [
      {
        unified: "1f9c1",
        native: "🧁"
      }
    ],
    version: 11
  },
  pie: {
    id: "pie",
    name: "Pie",
    keywords: [
      "food",
      "dessert",
      "pastry"
    ],
    skins: [
      {
        unified: "1f967",
        native: "🥧"
      }
    ],
    version: 5
  },
  chocolate_bar: {
    id: "chocolate_bar",
    name: "Chocolate Bar",
    keywords: [
      "food",
      "snack",
      "dessert",
      "sweet"
    ],
    skins: [
      {
        unified: "1f36b",
        native: "🍫"
      }
    ],
    version: 1
  },
  candy: {
    id: "candy",
    name: "Candy",
    keywords: [
      "snack",
      "dessert",
      "sweet",
      "lolly"
    ],
    skins: [
      {
        unified: "1f36c",
        native: "🍬"
      }
    ],
    version: 1
  },
  lollipop: {
    id: "lollipop",
    name: "Lollipop",
    keywords: [
      "food",
      "snack",
      "candy",
      "sweet"
    ],
    skins: [
      {
        unified: "1f36d",
        native: "🍭"
      }
    ],
    version: 1
  },
  custard: {
    id: "custard",
    name: "Custard",
    keywords: [
      "dessert",
      "food"
    ],
    skins: [
      {
        unified: "1f36e",
        native: "🍮"
      }
    ],
    version: 1
  },
  honey_pot: {
    id: "honey_pot",
    name: "Honey Pot",
    keywords: [
      "bees",
      "sweet",
      "kitchen"
    ],
    skins: [
      {
        unified: "1f36f",
        native: "🍯"
      }
    ],
    version: 1
  },
  baby_bottle: {
    id: "baby_bottle",
    name: "Baby Bottle",
    keywords: [
      "food",
      "container",
      "milk"
    ],
    skins: [
      {
        unified: "1f37c",
        native: "🍼"
      }
    ],
    version: 1
  },
  glass_of_milk: {
    id: "glass_of_milk",
    name: "Glass of Milk",
    keywords: [
      "beverage",
      "drink",
      "cow"
    ],
    skins: [
      {
        unified: "1f95b",
        native: "🥛"
      }
    ],
    version: 3
  },
  coffee: {
    id: "coffee",
    name: "Hot Beverage",
    keywords: [
      "coffee",
      "caffeine",
      "latte",
      "espresso",
      "mug"
    ],
    skins: [
      {
        unified: "2615",
        native: "☕"
      }
    ],
    version: 1
  },
  teapot: {
    id: "teapot",
    name: "Teapot",
    keywords: [
      "drink",
      "hot"
    ],
    skins: [
      {
        unified: "1fad6",
        native: "🫖"
      }
    ],
    version: 13
  },
  tea: {
    id: "tea",
    name: "Teacup Without Handle",
    keywords: [
      "tea",
      "drink",
      "bowl",
      "breakfast",
      "green",
      "british"
    ],
    skins: [
      {
        unified: "1f375",
        native: "🍵"
      }
    ],
    version: 1
  },
  sake: {
    id: "sake",
    name: "Sake",
    keywords: [
      "wine",
      "drink",
      "drunk",
      "beverage",
      "japanese",
      "alcohol",
      "booze"
    ],
    skins: [
      {
        unified: "1f376",
        native: "🍶"
      }
    ],
    version: 1
  },
  champagne: {
    id: "champagne",
    name: "Bottle with Popping Cork",
    keywords: [
      "champagne",
      "drink",
      "wine",
      "celebration"
    ],
    skins: [
      {
        unified: "1f37e",
        native: "🍾"
      }
    ],
    version: 1
  },
  wine_glass: {
    id: "wine_glass",
    name: "Wine Glass",
    keywords: [
      "drink",
      "beverage",
      "drunk",
      "alcohol",
      "booze"
    ],
    skins: [
      {
        unified: "1f377",
        native: "🍷"
      }
    ],
    version: 1
  },
  cocktail: {
    id: "cocktail",
    name: "Cocktail Glass",
    keywords: [
      "drink",
      "drunk",
      "alcohol",
      "beverage",
      "booze",
      "mojito"
    ],
    skins: [
      {
        unified: "1f378",
        native: "🍸"
      }
    ],
    version: 1
  },
  tropical_drink: {
    id: "tropical_drink",
    name: "Tropical Drink",
    keywords: [
      "beverage",
      "cocktail",
      "summer",
      "beach",
      "alcohol",
      "booze",
      "mojito"
    ],
    skins: [
      {
        unified: "1f379",
        native: "🍹"
      }
    ],
    version: 1
  },
  beer: {
    id: "beer",
    name: "Beer Mug",
    keywords: [
      "relax",
      "beverage",
      "drink",
      "drunk",
      "party",
      "pub",
      "summer",
      "alcohol",
      "booze"
    ],
    skins: [
      {
        unified: "1f37a",
        native: "🍺"
      }
    ],
    version: 1
  },
  beers: {
    id: "beers",
    name: "Clinking Beer Mugs",
    keywords: [
      "beers",
      "relax",
      "beverage",
      "drink",
      "drunk",
      "party",
      "pub",
      "summer",
      "alcohol",
      "booze"
    ],
    skins: [
      {
        unified: "1f37b",
        native: "🍻"
      }
    ],
    version: 1
  },
  clinking_glasses: {
    id: "clinking_glasses",
    name: "Clinking Glasses",
    keywords: [
      "beverage",
      "drink",
      "party",
      "alcohol",
      "celebrate",
      "cheers",
      "wine",
      "champagne",
      "toast"
    ],
    skins: [
      {
        unified: "1f942",
        native: "🥂"
      }
    ],
    version: 3
  },
  tumbler_glass: {
    id: "tumbler_glass",
    name: "Tumbler Glass",
    keywords: [
      "drink",
      "beverage",
      "drunk",
      "alcohol",
      "liquor",
      "booze",
      "bourbon",
      "scotch",
      "whisky",
      "shot"
    ],
    skins: [
      {
        unified: "1f943",
        native: "🥃"
      }
    ],
    version: 3
  },
  pouring_liquid: {
    id: "pouring_liquid",
    name: "Pouring Liquid",
    keywords: [
      "cup",
      "water"
    ],
    skins: [
      {
        unified: "1fad7",
        native: "🫗"
      }
    ],
    version: 14
  },
  cup_with_straw: {
    id: "cup_with_straw",
    name: "Cup with Straw",
    keywords: [
      "drink",
      "soda"
    ],
    skins: [
      {
        unified: "1f964",
        native: "🥤"
      }
    ],
    version: 5
  },
  bubble_tea: {
    id: "bubble_tea",
    name: "Bubble Tea",
    keywords: [
      "taiwan",
      "boba",
      "milk",
      "straw"
    ],
    skins: [
      {
        unified: "1f9cb",
        native: "🧋"
      }
    ],
    version: 13
  },
  beverage_box: {
    id: "beverage_box",
    name: "Beverage Box",
    keywords: [
      "drink"
    ],
    skins: [
      {
        unified: "1f9c3",
        native: "🧃"
      }
    ],
    version: 12
  },
  mate_drink: {
    id: "mate_drink",
    name: "Mate",
    keywords: [
      "drink",
      "tea",
      "beverage"
    ],
    skins: [
      {
        unified: "1f9c9",
        native: "🧉"
      }
    ],
    version: 12
  },
  ice_cube: {
    id: "ice_cube",
    name: "Ice",
    keywords: [
      "cube",
      "water",
      "cold"
    ],
    skins: [
      {
        unified: "1f9ca",
        native: "🧊"
      }
    ],
    version: 12
  },
  chopsticks: {
    id: "chopsticks",
    name: "Chopsticks",
    keywords: [
      "food"
    ],
    skins: [
      {
        unified: "1f962",
        native: "🥢"
      }
    ],
    version: 5
  },
  knife_fork_plate: {
    id: "knife_fork_plate",
    name: "Fork and Knife with Plate",
    keywords: [
      "food",
      "eat",
      "meal",
      "lunch",
      "dinner",
      "restaurant"
    ],
    skins: [
      {
        unified: "1f37d-fe0f",
        native: "🍽️"
      }
    ],
    version: 1
  },
  fork_and_knife: {
    id: "fork_and_knife",
    name: "Fork and Knife",
    keywords: [
      "cutlery",
      "kitchen"
    ],
    skins: [
      {
        unified: "1f374",
        native: "🍴"
      }
    ],
    version: 1
  },
  spoon: {
    id: "spoon",
    name: "Spoon",
    keywords: [
      "cutlery",
      "kitchen",
      "tableware"
    ],
    skins: [
      {
        unified: "1f944",
        native: "🥄"
      }
    ],
    version: 3
  },
  hocho: {
    id: "hocho",
    name: "Hocho",
    keywords: [
      "knife",
      "kitchen",
      "blade",
      "cutlery",
      "weapon"
    ],
    skins: [
      {
        unified: "1f52a",
        native: "🔪"
      }
    ],
    version: 1
  },
  jar: {
    id: "jar",
    name: "Jar",
    keywords: [
      "container",
      "sauce"
    ],
    skins: [
      {
        unified: "1fad9",
        native: "🫙"
      }
    ],
    version: 14
  },
  amphora: {
    id: "amphora",
    name: "Amphora",
    keywords: [
      "vase",
      "jar"
    ],
    skins: [
      {
        unified: "1f3fa",
        native: "🏺"
      }
    ],
    version: 1
  },
  earth_africa: {
    id: "earth_africa",
    name: "Earth Globe Europe-Africa",
    keywords: [
      "africa",
      "showing",
      "europe",
      "world",
      "international"
    ],
    skins: [
      {
        unified: "1f30d",
        native: "🌍"
      }
    ],
    version: 1
  },
  earth_americas: {
    id: "earth_americas",
    name: "Earth Globe Americas",
    keywords: [
      "showing",
      "world",
      "USA",
      "international"
    ],
    skins: [
      {
        unified: "1f30e",
        native: "🌎"
      }
    ],
    version: 1
  },
  earth_asia: {
    id: "earth_asia",
    name: "Earth Globe Asia-Australia",
    keywords: [
      "asia",
      "showing",
      "australia",
      "world",
      "east",
      "international"
    ],
    skins: [
      {
        unified: "1f30f",
        native: "🌏"
      }
    ],
    version: 1
  },
  globe_with_meridians: {
    id: "globe_with_meridians",
    name: "Globe with Meridians",
    keywords: [
      "earth",
      "international",
      "world",
      "internet",
      "interweb",
      "i18n"
    ],
    skins: [
      {
        unified: "1f310",
        native: "🌐"
      }
    ],
    version: 1
  },
  world_map: {
    id: "world_map",
    name: "World Map",
    keywords: [
      "location",
      "direction"
    ],
    skins: [
      {
        unified: "1f5fa-fe0f",
        native: "🗺️"
      }
    ],
    version: 1
  },
  japan: {
    id: "japan",
    name: "Map of Japan",
    keywords: [
      "nation",
      "country",
      "japanese",
      "asia"
    ],
    skins: [
      {
        unified: "1f5fe",
        native: "🗾"
      }
    ],
    version: 1
  },
  compass: {
    id: "compass",
    name: "Compass",
    keywords: [
      "magnetic",
      "navigation",
      "orienteering"
    ],
    skins: [
      {
        unified: "1f9ed",
        native: "🧭"
      }
    ],
    version: 11
  },
  snow_capped_mountain: {
    id: "snow_capped_mountain",
    name: "Snow-Capped Mountain",
    keywords: [
      "snow",
      "capped",
      "photo",
      "nature",
      "environment",
      "winter",
      "cold"
    ],
    skins: [
      {
        unified: "1f3d4-fe0f",
        native: "🏔️"
      }
    ],
    version: 1
  },
  mountain: {
    id: "mountain",
    name: "Mountain",
    keywords: [
      "photo",
      "nature",
      "environment"
    ],
    skins: [
      {
        unified: "26f0-fe0f",
        native: "⛰️"
      }
    ],
    version: 1
  },
  volcano: {
    id: "volcano",
    name: "Volcano",
    keywords: [
      "photo",
      "nature",
      "disaster"
    ],
    skins: [
      {
        unified: "1f30b",
        native: "🌋"
      }
    ],
    version: 1
  },
  mount_fuji: {
    id: "mount_fuji",
    name: "Mount Fuji",
    keywords: [
      "photo",
      "mountain",
      "nature",
      "japanese"
    ],
    skins: [
      {
        unified: "1f5fb",
        native: "🗻"
      }
    ],
    version: 1
  },
  camping: {
    id: "camping",
    name: "Camping",
    keywords: [
      "photo",
      "outdoors",
      "tent"
    ],
    skins: [
      {
        unified: "1f3d5-fe0f",
        native: "🏕️"
      }
    ],
    version: 1
  },
  beach_with_umbrella: {
    id: "beach_with_umbrella",
    name: "Beach with Umbrella",
    keywords: [
      "weather",
      "summer",
      "sunny",
      "sand",
      "mojito"
    ],
    skins: [
      {
        unified: "1f3d6-fe0f",
        native: "🏖️"
      }
    ],
    version: 1
  },
  desert: {
    id: "desert",
    name: "Desert",
    keywords: [
      "photo",
      "warm",
      "saharah"
    ],
    skins: [
      {
        unified: "1f3dc-fe0f",
        native: "🏜️"
      }
    ],
    version: 1
  },
  desert_island: {
    id: "desert_island",
    name: "Desert Island",
    keywords: [
      "photo",
      "tropical",
      "mojito"
    ],
    skins: [
      {
        unified: "1f3dd-fe0f",
        native: "🏝️"
      }
    ],
    version: 1
  },
  national_park: {
    id: "national_park",
    name: "National Park",
    keywords: [
      "photo",
      "environment",
      "nature"
    ],
    skins: [
      {
        unified: "1f3de-fe0f",
        native: "🏞️"
      }
    ],
    version: 1
  },
  stadium: {
    id: "stadium",
    name: "Stadium",
    keywords: [
      "photo",
      "place",
      "sports",
      "concert",
      "venue"
    ],
    skins: [
      {
        unified: "1f3df-fe0f",
        native: "🏟️"
      }
    ],
    version: 1
  },
  classical_building: {
    id: "classical_building",
    name: "Classical Building",
    keywords: [
      "art",
      "culture",
      "history"
    ],
    skins: [
      {
        unified: "1f3db-fe0f",
        native: "🏛️"
      }
    ],
    version: 1
  },
  building_construction: {
    id: "building_construction",
    name: "Building Construction",
    keywords: [
      "wip",
      "working",
      "progress"
    ],
    skins: [
      {
        unified: "1f3d7-fe0f",
        native: "🏗️"
      }
    ],
    version: 1
  },
  bricks: {
    id: "bricks",
    name: "Brick",
    keywords: [
      "bricks"
    ],
    skins: [
      {
        unified: "1f9f1",
        native: "🧱"
      }
    ],
    version: 11
  },
  rock: {
    id: "rock",
    name: "Rock",
    keywords: [
      "stone"
    ],
    skins: [
      {
        unified: "1faa8",
        native: "🪨"
      }
    ],
    version: 13
  },
  wood: {
    id: "wood",
    name: "Wood",
    keywords: [
      "nature",
      "timber",
      "trunk"
    ],
    skins: [
      {
        unified: "1fab5",
        native: "🪵"
      }
    ],
    version: 13
  },
  hut: {
    id: "hut",
    name: "Hut",
    keywords: [
      "house",
      "structure"
    ],
    skins: [
      {
        unified: "1f6d6",
        native: "🛖"
      }
    ],
    version: 13
  },
  house_buildings: {
    id: "house_buildings",
    name: "Houses",
    keywords: [
      "house",
      "buildings",
      "photo"
    ],
    skins: [
      {
        unified: "1f3d8-fe0f",
        native: "🏘️"
      }
    ],
    version: 1
  },
  derelict_house_building: {
    id: "derelict_house_building",
    name: "Derelict House",
    keywords: [
      "building",
      "abandon",
      "evict",
      "broken"
    ],
    skins: [
      {
        unified: "1f3da-fe0f",
        native: "🏚️"
      }
    ],
    version: 1
  },
  house: {
    id: "house",
    name: "House",
    keywords: [
      "building",
      "home"
    ],
    skins: [
      {
        unified: "1f3e0",
        native: "🏠"
      }
    ],
    version: 1
  },
  house_with_garden: {
    id: "house_with_garden",
    name: "House with Garden",
    keywords: [
      "home",
      "plant",
      "nature"
    ],
    skins: [
      {
        unified: "1f3e1",
        native: "🏡"
      }
    ],
    version: 1
  },
  office: {
    id: "office",
    name: "Office Building",
    keywords: [
      "bureau",
      "work"
    ],
    skins: [
      {
        unified: "1f3e2",
        native: "🏢"
      }
    ],
    version: 1
  },
  post_office: {
    id: "post_office",
    name: "Japanese Post Office",
    keywords: [
      "building",
      "envelope",
      "communication"
    ],
    skins: [
      {
        unified: "1f3e3",
        native: "🏣"
      }
    ],
    version: 1
  },
  european_post_office: {
    id: "european_post_office",
    name: "Post Office",
    keywords: [
      "european",
      "building",
      "email"
    ],
    skins: [
      {
        unified: "1f3e4",
        native: "🏤"
      }
    ],
    version: 1
  },
  hospital: {
    id: "hospital",
    name: "Hospital",
    keywords: [
      "building",
      "health",
      "surgery",
      "doctor"
    ],
    skins: [
      {
        unified: "1f3e5",
        native: "🏥"
      }
    ],
    version: 1
  },
  bank: {
    id: "bank",
    name: "Bank",
    keywords: [
      "building",
      "money",
      "sales",
      "cash",
      "business",
      "enterprise"
    ],
    skins: [
      {
        unified: "1f3e6",
        native: "🏦"
      }
    ],
    version: 1
  },
  hotel: {
    id: "hotel",
    name: "Hotel",
    keywords: [
      "building",
      "accomodation",
      "checkin"
    ],
    skins: [
      {
        unified: "1f3e8",
        native: "🏨"
      }
    ],
    version: 1
  },
  love_hotel: {
    id: "love_hotel",
    name: "Love Hotel",
    keywords: [
      "like",
      "affection",
      "dating"
    ],
    skins: [
      {
        unified: "1f3e9",
        native: "🏩"
      }
    ],
    version: 1
  },
  convenience_store: {
    id: "convenience_store",
    name: "Convenience Store",
    keywords: [
      "building",
      "shopping",
      "groceries"
    ],
    skins: [
      {
        unified: "1f3ea",
        native: "🏪"
      }
    ],
    version: 1
  },
  school: {
    id: "school",
    name: "School",
    keywords: [
      "building",
      "student",
      "education",
      "learn",
      "teach"
    ],
    skins: [
      {
        unified: "1f3eb",
        native: "🏫"
      }
    ],
    version: 1
  },
  department_store: {
    id: "department_store",
    name: "Department Store",
    keywords: [
      "building",
      "shopping",
      "mall"
    ],
    skins: [
      {
        unified: "1f3ec",
        native: "🏬"
      }
    ],
    version: 1
  },
  factory: {
    id: "factory",
    name: "Factory",
    keywords: [
      "building",
      "industry",
      "pollution",
      "smoke"
    ],
    skins: [
      {
        unified: "1f3ed",
        native: "🏭"
      }
    ],
    version: 1
  },
  japanese_castle: {
    id: "japanese_castle",
    name: "Japanese Castle",
    keywords: [
      "photo",
      "building"
    ],
    skins: [
      {
        unified: "1f3ef",
        native: "🏯"
      }
    ],
    version: 1
  },
  european_castle: {
    id: "european_castle",
    name: "Castle",
    keywords: [
      "european",
      "building",
      "royalty",
      "history"
    ],
    skins: [
      {
        unified: "1f3f0",
        native: "🏰"
      }
    ],
    version: 1
  },
  wedding: {
    id: "wedding",
    name: "Wedding",
    keywords: [
      "love",
      "like",
      "affection",
      "couple",
      "marriage",
      "bride",
      "groom"
    ],
    skins: [
      {
        unified: "1f492",
        native: "💒"
      }
    ],
    version: 1
  },
  tokyo_tower: {
    id: "tokyo_tower",
    name: "Tokyo Tower",
    keywords: [
      "photo",
      "japanese"
    ],
    skins: [
      {
        unified: "1f5fc",
        native: "🗼"
      }
    ],
    version: 1
  },
  statue_of_liberty: {
    id: "statue_of_liberty",
    name: "Statue of Liberty",
    keywords: [
      "american",
      "newyork"
    ],
    skins: [
      {
        unified: "1f5fd",
        native: "🗽"
      }
    ],
    version: 1
  },
  church: {
    id: "church",
    name: "Church",
    keywords: [
      "building",
      "religion",
      "christ"
    ],
    skins: [
      {
        unified: "26ea",
        native: "⛪"
      }
    ],
    version: 1
  },
  mosque: {
    id: "mosque",
    name: "Mosque",
    keywords: [
      "islam",
      "worship",
      "minaret"
    ],
    skins: [
      {
        unified: "1f54c",
        native: "🕌"
      }
    ],
    version: 1
  },
  hindu_temple: {
    id: "hindu_temple",
    name: "Hindu Temple",
    keywords: [
      "religion"
    ],
    skins: [
      {
        unified: "1f6d5",
        native: "🛕"
      }
    ],
    version: 12
  },
  synagogue: {
    id: "synagogue",
    name: "Synagogue",
    keywords: [
      "judaism",
      "worship",
      "temple",
      "jewish"
    ],
    skins: [
      {
        unified: "1f54d",
        native: "🕍"
      }
    ],
    version: 1
  },
  shinto_shrine: {
    id: "shinto_shrine",
    name: "Shinto Shrine",
    keywords: [
      "temple",
      "japan",
      "kyoto"
    ],
    skins: [
      {
        unified: "26e9-fe0f",
        native: "⛩️"
      }
    ],
    version: 1
  },
  kaaba: {
    id: "kaaba",
    name: "Kaaba",
    keywords: [
      "mecca",
      "mosque",
      "islam"
    ],
    skins: [
      {
        unified: "1f54b",
        native: "🕋"
      }
    ],
    version: 1
  },
  fountain: {
    id: "fountain",
    name: "Fountain",
    keywords: [
      "photo",
      "summer",
      "water",
      "fresh"
    ],
    skins: [
      {
        unified: "26f2",
        native: "⛲"
      }
    ],
    version: 1
  },
  tent: {
    id: "tent",
    name: "Tent",
    keywords: [
      "photo",
      "camping",
      "outdoors"
    ],
    skins: [
      {
        unified: "26fa",
        native: "⛺"
      }
    ],
    version: 1
  },
  foggy: {
    id: "foggy",
    name: "Foggy",
    keywords: [
      "photo",
      "mountain"
    ],
    skins: [
      {
        unified: "1f301",
        native: "🌁"
      }
    ],
    version: 1
  },
  night_with_stars: {
    id: "night_with_stars",
    name: "Night with Stars",
    keywords: [
      "evening",
      "city",
      "downtown"
    ],
    skins: [
      {
        unified: "1f303",
        native: "🌃"
      }
    ],
    version: 1
  },
  cityscape: {
    id: "cityscape",
    name: "Cityscape",
    keywords: [
      "photo",
      "night",
      "life",
      "urban"
    ],
    skins: [
      {
        unified: "1f3d9-fe0f",
        native: "🏙️"
      }
    ],
    version: 1
  },
  sunrise_over_mountains: {
    id: "sunrise_over_mountains",
    name: "Sunrise over Mountains",
    keywords: [
      "view",
      "vacation",
      "photo"
    ],
    skins: [
      {
        unified: "1f304",
        native: "🌄"
      }
    ],
    version: 1
  },
  sunrise: {
    id: "sunrise",
    name: "Sunrise",
    keywords: [
      "morning",
      "view",
      "vacation",
      "photo"
    ],
    skins: [
      {
        unified: "1f305",
        native: "🌅"
      }
    ],
    version: 1
  },
  city_sunset: {
    id: "city_sunset",
    name: "Cityscape at Dusk",
    keywords: [
      "city",
      "sunset",
      "photo",
      "evening",
      "sky",
      "buildings"
    ],
    skins: [
      {
        unified: "1f306",
        native: "🌆"
      }
    ],
    version: 1
  },
  city_sunrise: {
    id: "city_sunrise",
    name: "Sunset",
    keywords: [
      "city",
      "sunrise",
      "photo",
      "good",
      "morning",
      "dawn"
    ],
    skins: [
      {
        unified: "1f307",
        native: "🌇"
      }
    ],
    version: 1
  },
  bridge_at_night: {
    id: "bridge_at_night",
    name: "Bridge at Night",
    keywords: [
      "photo",
      "sanfrancisco"
    ],
    skins: [
      {
        unified: "1f309",
        native: "🌉"
      }
    ],
    version: 1
  },
  hotsprings: {
    id: "hotsprings",
    name: "Hot Springs",
    keywords: [
      "hotsprings",
      "bath",
      "warm",
      "relax"
    ],
    skins: [
      {
        unified: "2668-fe0f",
        native: "♨️"
      }
    ],
    version: 1
  },
  carousel_horse: {
    id: "carousel_horse",
    name: "Carousel Horse",
    keywords: [
      "photo",
      "carnival"
    ],
    skins: [
      {
        unified: "1f3a0",
        native: "🎠"
      }
    ],
    version: 1
  },
  playground_slide: {
    id: "playground_slide",
    name: "Playground Slide",
    keywords: [
      "fun",
      "park"
    ],
    skins: [
      {
        unified: "1f6dd",
        native: "🛝"
      }
    ],
    version: 14
  },
  ferris_wheel: {
    id: "ferris_wheel",
    name: "Ferris Wheel",
    keywords: [
      "photo",
      "carnival",
      "londoneye"
    ],
    skins: [
      {
        unified: "1f3a1",
        native: "🎡"
      }
    ],
    version: 1
  },
  roller_coaster: {
    id: "roller_coaster",
    name: "Roller Coaster",
    keywords: [
      "carnival",
      "playground",
      "photo",
      "fun"
    ],
    skins: [
      {
        unified: "1f3a2",
        native: "🎢"
      }
    ],
    version: 1
  },
  barber: {
    id: "barber",
    name: "Barber Pole",
    keywords: [
      "hair",
      "salon",
      "style"
    ],
    skins: [
      {
        unified: "1f488",
        native: "💈"
      }
    ],
    version: 1
  },
  circus_tent: {
    id: "circus_tent",
    name: "Circus Tent",
    keywords: [
      "festival",
      "carnival",
      "party"
    ],
    skins: [
      {
        unified: "1f3aa",
        native: "🎪"
      }
    ],
    version: 1
  },
  steam_locomotive: {
    id: "steam_locomotive",
    name: "Locomotive",
    keywords: [
      "steam",
      "transportation",
      "vehicle",
      "train"
    ],
    skins: [
      {
        unified: "1f682",
        native: "🚂"
      }
    ],
    version: 1
  },
  railway_car: {
    id: "railway_car",
    name: "Railway Car",
    keywords: [
      "transportation",
      "vehicle"
    ],
    skins: [
      {
        unified: "1f683",
        native: "🚃"
      }
    ],
    version: 1
  },
  bullettrain_side: {
    id: "bullettrain_side",
    name: "High-Speed Train",
    keywords: [
      "bullettrain",
      "side",
      "high",
      "speed",
      "transportation",
      "vehicle"
    ],
    skins: [
      {
        unified: "1f684",
        native: "🚄"
      }
    ],
    version: 1
  },
  bullettrain_front: {
    id: "bullettrain_front",
    name: "Bullet Train",
    keywords: [
      "bullettrain",
      "front",
      "transportation",
      "vehicle",
      "speed",
      "fast",
      "public",
      "travel"
    ],
    skins: [
      {
        unified: "1f685",
        native: "🚅"
      }
    ],
    version: 1
  },
  train2: {
    id: "train2",
    name: "Train",
    keywords: [
      "train2",
      "transportation",
      "vehicle"
    ],
    skins: [
      {
        unified: "1f686",
        native: "🚆"
      }
    ],
    version: 1
  },
  metro: {
    id: "metro",
    name: "Metro",
    keywords: [
      "transportation",
      "blue",
      "square",
      "mrt",
      "underground",
      "tube"
    ],
    skins: [
      {
        unified: "1f687",
        native: "🚇"
      }
    ],
    version: 1
  },
  light_rail: {
    id: "light_rail",
    name: "Light Rail",
    keywords: [
      "transportation",
      "vehicle"
    ],
    skins: [
      {
        unified: "1f688",
        native: "🚈"
      }
    ],
    version: 1
  },
  station: {
    id: "station",
    name: "Station",
    keywords: [
      "transportation",
      "vehicle",
      "public"
    ],
    skins: [
      {
        unified: "1f689",
        native: "🚉"
      }
    ],
    version: 1
  },
  tram: {
    id: "tram",
    name: "Tram",
    keywords: [
      "transportation",
      "vehicle"
    ],
    skins: [
      {
        unified: "1f68a",
        native: "🚊"
      }
    ],
    version: 1
  },
  monorail: {
    id: "monorail",
    name: "Monorail",
    keywords: [
      "transportation",
      "vehicle"
    ],
    skins: [
      {
        unified: "1f69d",
        native: "🚝"
      }
    ],
    version: 1
  },
  mountain_railway: {
    id: "mountain_railway",
    name: "Mountain Railway",
    keywords: [
      "transportation",
      "vehicle"
    ],
    skins: [
      {
        unified: "1f69e",
        native: "🚞"
      }
    ],
    version: 1
  },
  train: {
    id: "train",
    name: "Tram Car",
    keywords: [
      "train",
      "transportation",
      "vehicle",
      "carriage",
      "public",
      "travel"
    ],
    skins: [
      {
        unified: "1f68b",
        native: "🚋"
      }
    ],
    version: 1
  },
  bus: {
    id: "bus",
    name: "Bus",
    keywords: [
      "car",
      "vehicle",
      "transportation"
    ],
    skins: [
      {
        unified: "1f68c",
        native: "🚌"
      }
    ],
    version: 1
  },
  oncoming_bus: {
    id: "oncoming_bus",
    name: "Oncoming Bus",
    keywords: [
      "vehicle",
      "transportation"
    ],
    skins: [
      {
        unified: "1f68d",
        native: "🚍"
      }
    ],
    version: 1
  },
  trolleybus: {
    id: "trolleybus",
    name: "Trolleybus",
    keywords: [
      "bart",
      "transportation",
      "vehicle"
    ],
    skins: [
      {
        unified: "1f68e",
        native: "🚎"
      }
    ],
    version: 1
  },
  minibus: {
    id: "minibus",
    name: "Minibus",
    keywords: [
      "vehicle",
      "car",
      "transportation"
    ],
    skins: [
      {
        unified: "1f690",
        native: "🚐"
      }
    ],
    version: 1
  },
  ambulance: {
    id: "ambulance",
    name: "Ambulance",
    keywords: [
      "health",
      "911",
      "hospital"
    ],
    skins: [
      {
        unified: "1f691",
        native: "🚑"
      }
    ],
    version: 1
  },
  fire_engine: {
    id: "fire_engine",
    name: "Fire Engine",
    keywords: [
      "transportation",
      "cars",
      "vehicle"
    ],
    skins: [
      {
        unified: "1f692",
        native: "🚒"
      }
    ],
    version: 1
  },
  police_car: {
    id: "police_car",
    name: "Police Car",
    keywords: [
      "vehicle",
      "cars",
      "transportation",
      "law",
      "legal",
      "enforcement"
    ],
    skins: [
      {
        unified: "1f693",
        native: "🚓"
      }
    ],
    version: 1
  },
  oncoming_police_car: {
    id: "oncoming_police_car",
    name: "Oncoming Police Car",
    keywords: [
      "vehicle",
      "law",
      "legal",
      "enforcement",
      "911"
    ],
    skins: [
      {
        unified: "1f694",
        native: "🚔"
      }
    ],
    version: 1
  },
  taxi: {
    id: "taxi",
    name: "Taxi",
    keywords: [
      "uber",
      "vehicle",
      "cars",
      "transportation"
    ],
    skins: [
      {
        unified: "1f695",
        native: "🚕"
      }
    ],
    version: 1
  },
  oncoming_taxi: {
    id: "oncoming_taxi",
    name: "Oncoming Taxi",
    keywords: [
      "vehicle",
      "cars",
      "uber"
    ],
    skins: [
      {
        unified: "1f696",
        native: "🚖"
      }
    ],
    version: 1
  },
  car: {
    id: "car",
    name: "Automobile",
    keywords: [
      "car",
      "red",
      "transportation",
      "vehicle"
    ],
    skins: [
      {
        unified: "1f697",
        native: "🚗"
      }
    ],
    version: 1
  },
  oncoming_automobile: {
    id: "oncoming_automobile",
    name: "Oncoming Automobile",
    keywords: [
      "car",
      "vehicle",
      "transportation"
    ],
    skins: [
      {
        unified: "1f698",
        native: "🚘"
      }
    ],
    version: 1
  },
  blue_car: {
    id: "blue_car",
    name: "Recreational Vehicle",
    keywords: [
      "blue",
      "car",
      "sport",
      "utility",
      "transportation"
    ],
    skins: [
      {
        unified: "1f699",
        native: "🚙"
      }
    ],
    version: 1
  },
  pickup_truck: {
    id: "pickup_truck",
    name: "Pickup Truck",
    keywords: [
      "car",
      "transportation"
    ],
    skins: [
      {
        unified: "1f6fb",
        native: "🛻"
      }
    ],
    version: 13
  },
  truck: {
    id: "truck",
    name: "Delivery Truck",
    keywords: [
      "cars",
      "transportation"
    ],
    skins: [
      {
        unified: "1f69a",
        native: "🚚"
      }
    ],
    version: 1
  },
  articulated_lorry: {
    id: "articulated_lorry",
    name: "Articulated Lorry",
    keywords: [
      "vehicle",
      "cars",
      "transportation",
      "express"
    ],
    skins: [
      {
        unified: "1f69b",
        native: "🚛"
      }
    ],
    version: 1
  },
  tractor: {
    id: "tractor",
    name: "Tractor",
    keywords: [
      "vehicle",
      "car",
      "farming",
      "agriculture"
    ],
    skins: [
      {
        unified: "1f69c",
        native: "🚜"
      }
    ],
    version: 1
  },
  racing_car: {
    id: "racing_car",
    name: "Racing Car",
    keywords: [
      "sports",
      "race",
      "fast",
      "formula",
      "f1"
    ],
    skins: [
      {
        unified: "1f3ce-fe0f",
        native: "🏎️"
      }
    ],
    version: 1
  },
  racing_motorcycle: {
    id: "racing_motorcycle",
    name: "Motorcycle",
    keywords: [
      "racing",
      "race",
      "sports",
      "fast"
    ],
    skins: [
      {
        unified: "1f3cd-fe0f",
        native: "🏍️"
      }
    ],
    version: 1
  },
  motor_scooter: {
    id: "motor_scooter",
    name: "Motor Scooter",
    keywords: [
      "vehicle",
      "vespa",
      "sasha"
    ],
    skins: [
      {
        unified: "1f6f5",
        native: "🛵"
      }
    ],
    version: 3
  },
  manual_wheelchair: {
    id: "manual_wheelchair",
    name: "Manual Wheelchair",
    keywords: [
      "accessibility"
    ],
    skins: [
      {
        unified: "1f9bd",
        native: "🦽"
      }
    ],
    version: 12
  },
  motorized_wheelchair: {
    id: "motorized_wheelchair",
    name: "Motorized Wheelchair",
    keywords: [
      "accessibility"
    ],
    skins: [
      {
        unified: "1f9bc",
        native: "🦼"
      }
    ],
    version: 12
  },
  auto_rickshaw: {
    id: "auto_rickshaw",
    name: "Auto Rickshaw",
    keywords: [
      "move",
      "transportation"
    ],
    skins: [
      {
        unified: "1f6fa",
        native: "🛺"
      }
    ],
    version: 12
  },
  bike: {
    id: "bike",
    name: "Bicycle",
    keywords: [
      "bike",
      "sports",
      "exercise",
      "hipster"
    ],
    skins: [
      {
        unified: "1f6b2",
        native: "🚲"
      }
    ],
    version: 1
  },
  scooter: {
    id: "scooter",
    name: "Scooter",
    keywords: [
      "kick",
      "vehicle",
      "razor"
    ],
    skins: [
      {
        unified: "1f6f4",
        native: "🛴"
      }
    ],
    version: 3
  },
  skateboard: {
    id: "skateboard",
    name: "Skateboard",
    keywords: [
      "board"
    ],
    skins: [
      {
        unified: "1f6f9",
        native: "🛹"
      }
    ],
    version: 11
  },
  roller_skate: {
    id: "roller_skate",
    name: "Roller Skate",
    keywords: [
      "footwear",
      "sports"
    ],
    skins: [
      {
        unified: "1f6fc",
        native: "🛼"
      }
    ],
    version: 13
  },
  busstop: {
    id: "busstop",
    name: "Bus Stop",
    keywords: [
      "busstop",
      "transportation",
      "wait"
    ],
    skins: [
      {
        unified: "1f68f",
        native: "🚏"
      }
    ],
    version: 1
  },
  motorway: {
    id: "motorway",
    name: "Motorway",
    keywords: [
      "road",
      "cupertino",
      "interstate",
      "highway"
    ],
    skins: [
      {
        unified: "1f6e3-fe0f",
        native: "🛣️"
      }
    ],
    version: 1
  },
  railway_track: {
    id: "railway_track",
    name: "Railway Track",
    keywords: [
      "train",
      "transportation"
    ],
    skins: [
      {
        unified: "1f6e4-fe0f",
        native: "🛤️"
      }
    ],
    version: 1
  },
  oil_drum: {
    id: "oil_drum",
    name: "Oil Drum",
    keywords: [
      "barrell"
    ],
    skins: [
      {
        unified: "1f6e2-fe0f",
        native: "🛢️"
      }
    ],
    version: 1
  },
  fuelpump: {
    id: "fuelpump",
    name: "Fuel Pump",
    keywords: [
      "fuelpump",
      "gas",
      "station",
      "petroleum"
    ],
    skins: [
      {
        unified: "26fd",
        native: "⛽"
      }
    ],
    version: 1
  },
  wheel: {
    id: "wheel",
    name: "Wheel",
    keywords: [
      "car",
      "transport"
    ],
    skins: [
      {
        unified: "1f6de",
        native: "🛞"
      }
    ],
    version: 14
  },
  rotating_light: {
    id: "rotating_light",
    name: "Police Car Light",
    keywords: [
      "rotating",
      "ambulance",
      "911",
      "emergency",
      "alert",
      "error",
      "pinged",
      "law",
      "legal"
    ],
    skins: [
      {
        unified: "1f6a8",
        native: "🚨"
      }
    ],
    version: 1
  },
  traffic_light: {
    id: "traffic_light",
    name: "Horizontal Traffic Light",
    keywords: [
      "transportation",
      "signal"
    ],
    skins: [
      {
        unified: "1f6a5",
        native: "🚥"
      }
    ],
    version: 1
  },
  vertical_traffic_light: {
    id: "vertical_traffic_light",
    name: "Vertical Traffic Light",
    keywords: [
      "transportation",
      "driving"
    ],
    skins: [
      {
        unified: "1f6a6",
        native: "🚦"
      }
    ],
    version: 1
  },
  octagonal_sign: {
    id: "octagonal_sign",
    name: "Stop Sign",
    keywords: [
      "octagonal"
    ],
    skins: [
      {
        unified: "1f6d1",
        native: "🛑"
      }
    ],
    version: 3
  },
  construction: {
    id: "construction",
    name: "Construction",
    keywords: [
      "wip",
      "progress",
      "caution",
      "warning"
    ],
    skins: [
      {
        unified: "1f6a7",
        native: "🚧"
      }
    ],
    version: 1
  },
  anchor: {
    id: "anchor",
    name: "Anchor",
    keywords: [
      "ship",
      "ferry",
      "sea",
      "boat"
    ],
    skins: [
      {
        unified: "2693",
        native: "⚓"
      }
    ],
    version: 1
  },
  ring_buoy: {
    id: "ring_buoy",
    name: "Ring Buoy",
    keywords: [
      "life",
      "saver",
      "preserver"
    ],
    skins: [
      {
        unified: "1f6df",
        native: "🛟"
      }
    ],
    version: 14
  },
  boat: {
    id: "boat",
    name: "Sailboat",
    keywords: [
      "boat",
      "ship",
      "summer",
      "transportation",
      "water",
      "sailing"
    ],
    skins: [
      {
        unified: "26f5",
        native: "⛵"
      }
    ],
    version: 1
  },
  canoe: {
    id: "canoe",
    name: "Canoe",
    keywords: [
      "boat",
      "paddle",
      "water",
      "ship"
    ],
    skins: [
      {
        unified: "1f6f6",
        native: "🛶"
      }
    ],
    version: 3
  },
  speedboat: {
    id: "speedboat",
    name: "Speedboat",
    keywords: [
      "ship",
      "transportation",
      "vehicle",
      "summer"
    ],
    skins: [
      {
        unified: "1f6a4",
        native: "🚤"
      }
    ],
    version: 1
  },
  passenger_ship: {
    id: "passenger_ship",
    name: "Passenger Ship",
    keywords: [
      "yacht",
      "cruise",
      "ferry"
    ],
    skins: [
      {
        unified: "1f6f3-fe0f",
        native: "🛳️"
      }
    ],
    version: 1
  },
  ferry: {
    id: "ferry",
    name: "Ferry",
    keywords: [
      "boat",
      "ship",
      "yacht"
    ],
    skins: [
      {
        unified: "26f4-fe0f",
        native: "⛴️"
      }
    ],
    version: 1
  },
  motor_boat: {
    id: "motor_boat",
    name: "Motor Boat",
    keywords: [
      "ship"
    ],
    skins: [
      {
        unified: "1f6e5-fe0f",
        native: "🛥️"
      }
    ],
    version: 1
  },
  ship: {
    id: "ship",
    name: "Ship",
    keywords: [
      "transportation",
      "titanic",
      "deploy"
    ],
    skins: [
      {
        unified: "1f6a2",
        native: "🚢"
      }
    ],
    version: 1
  },
  airplane: {
    id: "airplane",
    name: "Airplane",
    keywords: [
      "vehicle",
      "transportation",
      "flight",
      "fly"
    ],
    skins: [
      {
        unified: "2708-fe0f",
        native: "✈️"
      }
    ],
    version: 1
  },
  small_airplane: {
    id: "small_airplane",
    name: "Small Airplane",
    keywords: [
      "flight",
      "transportation",
      "fly",
      "vehicle"
    ],
    skins: [
      {
        unified: "1f6e9-fe0f",
        native: "🛩️"
      }
    ],
    version: 1
  },
  airplane_departure: {
    id: "airplane_departure",
    name: "Airplane Departure",
    keywords: [
      "airport",
      "flight",
      "landing"
    ],
    skins: [
      {
        unified: "1f6eb",
        native: "🛫"
      }
    ],
    version: 1
  },
  airplane_arriving: {
    id: "airplane_arriving",
    name: "Airplane Arrival",
    keywords: [
      "arriving",
      "airport",
      "flight",
      "boarding"
    ],
    skins: [
      {
        unified: "1f6ec",
        native: "🛬"
      }
    ],
    version: 1
  },
  parachute: {
    id: "parachute",
    name: "Parachute",
    keywords: [
      "fly",
      "glide"
    ],
    skins: [
      {
        unified: "1fa82",
        native: "🪂"
      }
    ],
    version: 12
  },
  seat: {
    id: "seat",
    name: "Seat",
    keywords: [
      "sit",
      "airplane",
      "transport",
      "bus",
      "flight",
      "fly"
    ],
    skins: [
      {
        unified: "1f4ba",
        native: "💺"
      }
    ],
    version: 1
  },
  helicopter: {
    id: "helicopter",
    name: "Helicopter",
    keywords: [
      "transportation",
      "vehicle",
      "fly"
    ],
    skins: [
      {
        unified: "1f681",
        native: "🚁"
      }
    ],
    version: 1
  },
  suspension_railway: {
    id: "suspension_railway",
    name: "Suspension Railway",
    keywords: [
      "vehicle",
      "transportation"
    ],
    skins: [
      {
        unified: "1f69f",
        native: "🚟"
      }
    ],
    version: 1
  },
  mountain_cableway: {
    id: "mountain_cableway",
    name: "Mountain Cableway",
    keywords: [
      "transportation",
      "vehicle",
      "ski"
    ],
    skins: [
      {
        unified: "1f6a0",
        native: "🚠"
      }
    ],
    version: 1
  },
  aerial_tramway: {
    id: "aerial_tramway",
    name: "Aerial Tramway",
    keywords: [
      "transportation",
      "vehicle",
      "ski"
    ],
    skins: [
      {
        unified: "1f6a1",
        native: "🚡"
      }
    ],
    version: 1
  },
  satellite: {
    id: "satellite",
    name: "Satellite",
    keywords: [
      "communication",
      "gps",
      "orbit",
      "spaceflight",
      "NASA",
      "ISS"
    ],
    skins: [
      {
        unified: "1f6f0-fe0f",
        native: "🛰️"
      }
    ],
    version: 1
  },
  rocket: {
    id: "rocket",
    name: "Rocket",
    keywords: [
      "launch",
      "ship",
      "staffmode",
      "NASA",
      "outer",
      "space",
      "fly"
    ],
    skins: [
      {
        unified: "1f680",
        native: "🚀"
      }
    ],
    version: 1
  },
  flying_saucer: {
    id: "flying_saucer",
    name: "Flying Saucer",
    keywords: [
      "transportation",
      "vehicle",
      "ufo"
    ],
    skins: [
      {
        unified: "1f6f8",
        native: "🛸"
      }
    ],
    version: 5
  },
  bellhop_bell: {
    id: "bellhop_bell",
    name: "Bellhop Bell",
    keywords: [
      "service"
    ],
    skins: [
      {
        unified: "1f6ce-fe0f",
        native: "🛎️"
      }
    ],
    version: 1
  },
  luggage: {
    id: "luggage",
    name: "Luggage",
    keywords: [
      "packing",
      "travel"
    ],
    skins: [
      {
        unified: "1f9f3",
        native: "🧳"
      }
    ],
    version: 11
  },
  hourglass: {
    id: "hourglass",
    name: "Hourglass",
    keywords: [
      "done",
      "time",
      "clock",
      "oldschool",
      "limit",
      "exam",
      "quiz",
      "test"
    ],
    skins: [
      {
        unified: "231b",
        native: "⌛"
      }
    ],
    version: 1
  },
  hourglass_flowing_sand: {
    id: "hourglass_flowing_sand",
    name: "Hourglass Not Done",
    keywords: [
      "flowing",
      "sand",
      "oldschool",
      "time",
      "countdown"
    ],
    skins: [
      {
        unified: "23f3",
        native: "⏳"
      }
    ],
    version: 1
  },
  watch: {
    id: "watch",
    name: "Watch",
    keywords: [
      "time",
      "accessories"
    ],
    skins: [
      {
        unified: "231a",
        native: "⌚"
      }
    ],
    version: 1
  },
  alarm_clock: {
    id: "alarm_clock",
    name: "Alarm Clock",
    keywords: [
      "time",
      "wake"
    ],
    skins: [
      {
        unified: "23f0",
        native: "⏰"
      }
    ],
    version: 1
  },
  stopwatch: {
    id: "stopwatch",
    name: "Stopwatch",
    keywords: [
      "time",
      "deadline"
    ],
    skins: [
      {
        unified: "23f1-fe0f",
        native: "⏱️"
      }
    ],
    version: 1
  },
  timer_clock: {
    id: "timer_clock",
    name: "Timer Clock",
    keywords: [
      "alarm"
    ],
    skins: [
      {
        unified: "23f2-fe0f",
        native: "⏲️"
      }
    ],
    version: 1
  },
  mantelpiece_clock: {
    id: "mantelpiece_clock",
    name: "Mantelpiece Clock",
    keywords: [
      "time"
    ],
    skins: [
      {
        unified: "1f570-fe0f",
        native: "🕰️"
      }
    ],
    version: 1
  },
  clock12: {
    id: "clock12",
    name: "Twelve O’clock",
    keywords: [
      "clock12",
      "o",
      "clock",
      "12",
      "00:00",
      "0000",
      "12:00",
      "1200",
      "time",
      "noon",
      "midnight",
      "midday",
      "late",
      "early",
      "schedule"
    ],
    skins: [
      {
        unified: "1f55b",
        native: "🕛"
      }
    ],
    version: 1
  },
  clock1230: {
    id: "clock1230",
    name: "Twelve-Thirty",
    keywords: [
      "clock1230",
      "twelve",
      "thirty",
      "00:30",
      "0030",
      "12:30",
      "1230",
      "time",
      "late",
      "early",
      "schedule"
    ],
    skins: [
      {
        unified: "1f567",
        native: "🕧"
      }
    ],
    version: 1
  },
  clock1: {
    id: "clock1",
    name: "One O’clock",
    keywords: [
      "clock1",
      "o",
      "clock",
      "1",
      "1:00",
      "100",
      "13:00",
      "1300",
      "time",
      "late",
      "early",
      "schedule"
    ],
    skins: [
      {
        unified: "1f550",
        native: "🕐"
      }
    ],
    version: 1
  },
  clock130: {
    id: "clock130",
    name: "One-Thirty",
    keywords: [
      "clock130",
      "one",
      "thirty",
      "1:30",
      "130",
      "13:30",
      "1330",
      "time",
      "late",
      "early",
      "schedule"
    ],
    skins: [
      {
        unified: "1f55c",
        native: "🕜"
      }
    ],
    version: 1
  },
  clock2: {
    id: "clock2",
    name: "Two O’clock",
    keywords: [
      "clock2",
      "o",
      "clock",
      "2",
      "2:00",
      "200",
      "14:00",
      "1400",
      "time",
      "late",
      "early",
      "schedule"
    ],
    skins: [
      {
        unified: "1f551",
        native: "🕑"
      }
    ],
    version: 1
  },
  clock230: {
    id: "clock230",
    name: "Two-Thirty",
    keywords: [
      "clock230",
      "two",
      "thirty",
      "2:30",
      "230",
      "14:30",
      "1430",
      "time",
      "late",
      "early",
      "schedule"
    ],
    skins: [
      {
        unified: "1f55d",
        native: "🕝"
      }
    ],
    version: 1
  },
  clock3: {
    id: "clock3",
    name: "Three O’clock",
    keywords: [
      "clock3",
      "o",
      "clock",
      "3",
      "3:00",
      "300",
      "15:00",
      "1500",
      "time",
      "late",
      "early",
      "schedule"
    ],
    skins: [
      {
        unified: "1f552",
        native: "🕒"
      }
    ],
    version: 1
  },
  clock330: {
    id: "clock330",
    name: "Three-Thirty",
    keywords: [
      "clock330",
      "three",
      "thirty",
      "3:30",
      "330",
      "15:30",
      "1530",
      "time",
      "late",
      "early",
      "schedule"
    ],
    skins: [
      {
        unified: "1f55e",
        native: "🕞"
      }
    ],
    version: 1
  },
  clock4: {
    id: "clock4",
    name: "Four O’clock",
    keywords: [
      "clock4",
      "o",
      "clock",
      "4",
      "4:00",
      "400",
      "16:00",
      "1600",
      "time",
      "late",
      "early",
      "schedule"
    ],
    skins: [
      {
        unified: "1f553",
        native: "🕓"
      }
    ],
    version: 1
  },
  clock430: {
    id: "clock430",
    name: "Four-Thirty",
    keywords: [
      "clock430",
      "four",
      "thirty",
      "4:30",
      "430",
      "16:30",
      "1630",
      "time",
      "late",
      "early",
      "schedule"
    ],
    skins: [
      {
        unified: "1f55f",
        native: "🕟"
      }
    ],
    version: 1
  },
  clock5: {
    id: "clock5",
    name: "Five O’clock",
    keywords: [
      "clock5",
      "o",
      "clock",
      "5",
      "5:00",
      "500",
      "17:00",
      "1700",
      "time",
      "late",
      "early",
      "schedule"
    ],
    skins: [
      {
        unified: "1f554",
        native: "🕔"
      }
    ],
    version: 1
  },
  clock530: {
    id: "clock530",
    name: "Five-Thirty",
    keywords: [
      "clock530",
      "five",
      "thirty",
      "5:30",
      "530",
      "17:30",
      "1730",
      "time",
      "late",
      "early",
      "schedule"
    ],
    skins: [
      {
        unified: "1f560",
        native: "🕠"
      }
    ],
    version: 1
  },
  clock6: {
    id: "clock6",
    name: "Six O’clock",
    keywords: [
      "clock6",
      "o",
      "clock",
      "6",
      "6:00",
      "600",
      "18:00",
      "1800",
      "time",
      "late",
      "early",
      "schedule",
      "dawn",
      "dusk"
    ],
    skins: [
      {
        unified: "1f555",
        native: "🕕"
      }
    ],
    version: 1
  },
  clock630: {
    id: "clock630",
    name: "Six-Thirty",
    keywords: [
      "clock630",
      "six",
      "thirty",
      "6:30",
      "630",
      "18:30",
      "1830",
      "time",
      "late",
      "early",
      "schedule"
    ],
    skins: [
      {
        unified: "1f561",
        native: "🕡"
      }
    ],
    version: 1
  },
  clock7: {
    id: "clock7",
    name: "Seven O’clock",
    keywords: [
      "clock7",
      "o",
      "clock",
      "7",
      "7:00",
      "700",
      "19:00",
      "1900",
      "time",
      "late",
      "early",
      "schedule"
    ],
    skins: [
      {
        unified: "1f556",
        native: "🕖"
      }
    ],
    version: 1
  },
  clock730: {
    id: "clock730",
    name: "Seven-Thirty",
    keywords: [
      "clock730",
      "seven",
      "thirty",
      "7:30",
      "730",
      "19:30",
      "1930",
      "time",
      "late",
      "early",
      "schedule"
    ],
    skins: [
      {
        unified: "1f562",
        native: "🕢"
      }
    ],
    version: 1
  },
  clock8: {
    id: "clock8",
    name: "Eight O’clock",
    keywords: [
      "clock8",
      "o",
      "clock",
      "8",
      "8:00",
      "800",
      "20:00",
      "2000",
      "time",
      "late",
      "early",
      "schedule"
    ],
    skins: [
      {
        unified: "1f557",
        native: "🕗"
      }
    ],
    version: 1
  },
  clock830: {
    id: "clock830",
    name: "Eight-Thirty",
    keywords: [
      "clock830",
      "eight",
      "thirty",
      "8:30",
      "830",
      "20:30",
      "2030",
      "time",
      "late",
      "early",
      "schedule"
    ],
    skins: [
      {
        unified: "1f563",
        native: "🕣"
      }
    ],
    version: 1
  },
  clock9: {
    id: "clock9",
    name: "Nine O’clock",
    keywords: [
      "clock9",
      "o",
      "clock",
      "9",
      "9:00",
      "900",
      "21:00",
      "2100",
      "time",
      "late",
      "early",
      "schedule"
    ],
    skins: [
      {
        unified: "1f558",
        native: "🕘"
      }
    ],
    version: 1
  },
  clock930: {
    id: "clock930",
    name: "Nine-Thirty",
    keywords: [
      "clock930",
      "nine",
      "thirty",
      "9:30",
      "930",
      "21:30",
      "2130",
      "time",
      "late",
      "early",
      "schedule"
    ],
    skins: [
      {
        unified: "1f564",
        native: "🕤"
      }
    ],
    version: 1
  },
  clock10: {
    id: "clock10",
    name: "Ten O’clock",
    keywords: [
      "clock10",
      "o",
      "clock",
      "10",
      "10:00",
      "1000",
      "22:00",
      "2200",
      "time",
      "late",
      "early",
      "schedule"
    ],
    skins: [
      {
        unified: "1f559",
        native: "🕙"
      }
    ],
    version: 1
  },
  clock1030: {
    id: "clock1030",
    name: "Ten-Thirty",
    keywords: [
      "clock1030",
      "ten",
      "thirty",
      "10:30",
      "1030",
      "22:30",
      "2230",
      "time",
      "late",
      "early",
      "schedule"
    ],
    skins: [
      {
        unified: "1f565",
        native: "🕥"
      }
    ],
    version: 1
  },
  clock11: {
    id: "clock11",
    name: "Eleven O’clock",
    keywords: [
      "clock11",
      "o",
      "clock",
      "11",
      "11:00",
      "1100",
      "23:00",
      "2300",
      "time",
      "late",
      "early",
      "schedule"
    ],
    skins: [
      {
        unified: "1f55a",
        native: "🕚"
      }
    ],
    version: 1
  },
  clock1130: {
    id: "clock1130",
    name: "Eleven-Thirty",
    keywords: [
      "clock1130",
      "eleven",
      "thirty",
      "11:30",
      "1130",
      "23:30",
      "2330",
      "time",
      "late",
      "early",
      "schedule"
    ],
    skins: [
      {
        unified: "1f566",
        native: "🕦"
      }
    ],
    version: 1
  },
  new_moon: {
    id: "new_moon",
    name: "New Moon",
    keywords: [
      "nature",
      "twilight",
      "planet",
      "space",
      "night",
      "evening",
      "sleep"
    ],
    skins: [
      {
        unified: "1f311",
        native: "🌑"
      }
    ],
    version: 1
  },
  waxing_crescent_moon: {
    id: "waxing_crescent_moon",
    name: "Waxing Crescent Moon",
    keywords: [
      "nature",
      "twilight",
      "planet",
      "space",
      "night",
      "evening",
      "sleep"
    ],
    skins: [
      {
        unified: "1f312",
        native: "🌒"
      }
    ],
    version: 1
  },
  first_quarter_moon: {
    id: "first_quarter_moon",
    name: "First Quarter Moon",
    keywords: [
      "nature",
      "twilight",
      "planet",
      "space",
      "night",
      "evening",
      "sleep"
    ],
    skins: [
      {
        unified: "1f313",
        native: "🌓"
      }
    ],
    version: 1
  },
  moon: {
    id: "moon",
    name: "Waxing Gibbous Moon",
    keywords: [
      "nature",
      "night",
      "sky",
      "gray",
      "twilight",
      "planet",
      "space",
      "evening",
      "sleep"
    ],
    skins: [
      {
        unified: "1f314",
        native: "🌔"
      }
    ],
    version: 1
  },
  full_moon: {
    id: "full_moon",
    name: "Full Moon",
    keywords: [
      "nature",
      "yellow",
      "twilight",
      "planet",
      "space",
      "night",
      "evening",
      "sleep"
    ],
    skins: [
      {
        unified: "1f315",
        native: "🌕"
      }
    ],
    version: 1
  },
  waning_gibbous_moon: {
    id: "waning_gibbous_moon",
    name: "Waning Gibbous Moon",
    keywords: [
      "nature",
      "twilight",
      "planet",
      "space",
      "night",
      "evening",
      "sleep",
      "waxing"
    ],
    skins: [
      {
        unified: "1f316",
        native: "🌖"
      }
    ],
    version: 1
  },
  last_quarter_moon: {
    id: "last_quarter_moon",
    name: "Last Quarter Moon",
    keywords: [
      "nature",
      "twilight",
      "planet",
      "space",
      "night",
      "evening",
      "sleep"
    ],
    skins: [
      {
        unified: "1f317",
        native: "🌗"
      }
    ],
    version: 1
  },
  waning_crescent_moon: {
    id: "waning_crescent_moon",
    name: "Waning Crescent Moon",
    keywords: [
      "nature",
      "twilight",
      "planet",
      "space",
      "night",
      "evening",
      "sleep"
    ],
    skins: [
      {
        unified: "1f318",
        native: "🌘"
      }
    ],
    version: 1
  },
  crescent_moon: {
    id: "crescent_moon",
    name: "Crescent Moon",
    keywords: [
      "night",
      "sleep",
      "sky",
      "evening",
      "magic"
    ],
    skins: [
      {
        unified: "1f319",
        native: "🌙"
      }
    ],
    version: 1
  },
  new_moon_with_face: {
    id: "new_moon_with_face",
    name: "New Moon Face",
    keywords: [
      "with",
      "nature",
      "twilight",
      "planet",
      "space",
      "night",
      "evening",
      "sleep"
    ],
    skins: [
      {
        unified: "1f31a",
        native: "🌚"
      }
    ],
    version: 1
  },
  first_quarter_moon_with_face: {
    id: "first_quarter_moon_with_face",
    name: "First Quarter Moon Face",
    keywords: [
      "with",
      "nature",
      "twilight",
      "planet",
      "space",
      "night",
      "evening",
      "sleep"
    ],
    skins: [
      {
        unified: "1f31b",
        native: "🌛"
      }
    ],
    version: 1
  },
  last_quarter_moon_with_face: {
    id: "last_quarter_moon_with_face",
    name: "Last Quarter Moon Face",
    keywords: [
      "with",
      "nature",
      "twilight",
      "planet",
      "space",
      "night",
      "evening",
      "sleep"
    ],
    skins: [
      {
        unified: "1f31c",
        native: "🌜"
      }
    ],
    version: 1
  },
  thermometer: {
    id: "thermometer",
    name: "Thermometer",
    keywords: [
      "weather",
      "temperature",
      "hot",
      "cold"
    ],
    skins: [
      {
        unified: "1f321-fe0f",
        native: "🌡️"
      }
    ],
    version: 1
  },
  sunny: {
    id: "sunny",
    name: "Sun",
    keywords: [
      "sunny",
      "weather",
      "nature",
      "brightness",
      "summer",
      "beach",
      "spring"
    ],
    skins: [
      {
        unified: "2600-fe0f",
        native: "☀️"
      }
    ],
    version: 1
  },
  full_moon_with_face: {
    id: "full_moon_with_face",
    name: "Full Moon Face",
    keywords: [
      "with",
      "nature",
      "twilight",
      "planet",
      "space",
      "night",
      "evening",
      "sleep"
    ],
    skins: [
      {
        unified: "1f31d",
        native: "🌝"
      }
    ],
    version: 1
  },
  sun_with_face: {
    id: "sun_with_face",
    name: "Sun with Face",
    keywords: [
      "nature",
      "morning",
      "sky"
    ],
    skins: [
      {
        unified: "1f31e",
        native: "🌞"
      }
    ],
    version: 1
  },
  ringed_planet: {
    id: "ringed_planet",
    name: "Ringed Planet",
    keywords: [
      "outerspace"
    ],
    skins: [
      {
        unified: "1fa90",
        native: "🪐"
      }
    ],
    version: 12
  },
  star: {
    id: "star",
    name: "Star",
    keywords: [
      "night",
      "yellow"
    ],
    skins: [
      {
        unified: "2b50",
        native: "⭐"
      }
    ],
    version: 1
  },
  star2: {
    id: "star2",
    name: "Glowing Star",
    keywords: [
      "star2",
      "night",
      "sparkle",
      "awesome",
      "good",
      "magic"
    ],
    skins: [
      {
        unified: "1f31f",
        native: "🌟"
      }
    ],
    version: 1
  },
  stars: {
    id: "stars",
    name: "Shooting Star",
    keywords: [
      "stars",
      "night",
      "photo"
    ],
    skins: [
      {
        unified: "1f320",
        native: "🌠"
      }
    ],
    version: 1
  },
  milky_way: {
    id: "milky_way",
    name: "Milky Way",
    keywords: [
      "photo",
      "space",
      "stars"
    ],
    skins: [
      {
        unified: "1f30c",
        native: "🌌"
      }
    ],
    version: 1
  },
  cloud: {
    id: "cloud",
    name: "Cloud",
    keywords: [
      "weather",
      "sky"
    ],
    skins: [
      {
        unified: "2601-fe0f",
        native: "☁️"
      }
    ],
    version: 1
  },
  partly_sunny: {
    id: "partly_sunny",
    name: "Sun Behind Cloud",
    keywords: [
      "partly",
      "sunny",
      "weather",
      "nature",
      "cloudy",
      "morning",
      "fall",
      "spring"
    ],
    skins: [
      {
        unified: "26c5",
        native: "⛅"
      }
    ],
    version: 1
  },
  thunder_cloud_and_rain: {
    id: "thunder_cloud_and_rain",
    name: "Cloud with Lightning and Rain",
    keywords: [
      "thunder",
      "weather"
    ],
    skins: [
      {
        unified: "26c8-fe0f",
        native: "⛈️"
      }
    ],
    version: 1
  },
  mostly_sunny: {
    id: "mostly_sunny",
    name: "Sun Behind Small Cloud",
    keywords: [
      "mostly",
      "sunny",
      "weather"
    ],
    skins: [
      {
        unified: "1f324-fe0f",
        native: "🌤️"
      }
    ],
    version: 1
  },
  barely_sunny: {
    id: "barely_sunny",
    name: "Sun Behind Large Cloud",
    keywords: [
      "barely",
      "sunny",
      "weather"
    ],
    skins: [
      {
        unified: "1f325-fe0f",
        native: "🌥️"
      }
    ],
    version: 1
  },
  partly_sunny_rain: {
    id: "partly_sunny_rain",
    name: "Sun Behind Rain Cloud",
    keywords: [
      "partly",
      "sunny",
      "weather"
    ],
    skins: [
      {
        unified: "1f326-fe0f",
        native: "🌦️"
      }
    ],
    version: 1
  },
  rain_cloud: {
    id: "rain_cloud",
    name: "Cloud with Rain",
    keywords: [
      "weather"
    ],
    skins: [
      {
        unified: "1f327-fe0f",
        native: "🌧️"
      }
    ],
    version: 1
  },
  snow_cloud: {
    id: "snow_cloud",
    name: "Cloud with Snow",
    keywords: [
      "weather"
    ],
    skins: [
      {
        unified: "1f328-fe0f",
        native: "🌨️"
      }
    ],
    version: 1
  },
  lightning: {
    id: "lightning",
    name: "Cloud with Lightning",
    keywords: [
      "weather",
      "thunder"
    ],
    skins: [
      {
        unified: "1f329-fe0f",
        native: "🌩️"
      }
    ],
    version: 1
  },
  tornado: {
    id: "tornado",
    name: "Tornado",
    keywords: [
      "cloud",
      "weather",
      "cyclone",
      "twister"
    ],
    skins: [
      {
        unified: "1f32a-fe0f",
        native: "🌪️"
      }
    ],
    version: 1
  },
  fog: {
    id: "fog",
    name: "Fog",
    keywords: [
      "weather"
    ],
    skins: [
      {
        unified: "1f32b-fe0f",
        native: "🌫️"
      }
    ],
    version: 1
  },
  wind_blowing_face: {
    id: "wind_blowing_face",
    name: "Wind Face",
    keywords: [
      "blowing",
      "gust",
      "air"
    ],
    skins: [
      {
        unified: "1f32c-fe0f",
        native: "🌬️"
      }
    ],
    version: 1
  },
  cyclone: {
    id: "cyclone",
    name: "Cyclone",
    keywords: [
      "weather",
      "swirl",
      "blue",
      "cloud",
      "vortex",
      "spiral",
      "whirlpool",
      "spin",
      "tornado",
      "hurricane",
      "typhoon"
    ],
    skins: [
      {
        unified: "1f300",
        native: "🌀"
      }
    ],
    version: 1
  },
  rainbow: {
    id: "rainbow",
    name: "Rainbow",
    keywords: [
      "nature",
      "happy",
      "unicorn",
      "face",
      "photo",
      "sky",
      "spring"
    ],
    skins: [
      {
        unified: "1f308",
        native: "🌈"
      }
    ],
    version: 1
  },
  closed_umbrella: {
    id: "closed_umbrella",
    name: "Closed Umbrella",
    keywords: [
      "weather",
      "rain",
      "drizzle"
    ],
    skins: [
      {
        unified: "1f302",
        native: "🌂"
      }
    ],
    version: 1
  },
  umbrella: {
    id: "umbrella",
    name: "Umbrella",
    keywords: [
      "weather",
      "spring"
    ],
    skins: [
      {
        unified: "2602-fe0f",
        native: "☂️"
      }
    ],
    version: 1
  },
  umbrella_with_rain_drops: {
    id: "umbrella_with_rain_drops",
    name: "Umbrella with Rain Drops",
    keywords: [
      "rainy",
      "weather",
      "spring"
    ],
    skins: [
      {
        unified: "2614",
        native: "☔"
      }
    ],
    version: 1
  },
  umbrella_on_ground: {
    id: "umbrella_on_ground",
    name: "Umbrella on Ground",
    keywords: [
      "weather",
      "summer"
    ],
    skins: [
      {
        unified: "26f1-fe0f",
        native: "⛱️"
      }
    ],
    version: 1
  },
  zap: {
    id: "zap",
    name: "High Voltage",
    keywords: [
      "zap",
      "thunder",
      "weather",
      "lightning",
      "bolt",
      "fast"
    ],
    skins: [
      {
        unified: "26a1",
        native: "⚡"
      }
    ],
    version: 1
  },
  snowflake: {
    id: "snowflake",
    name: "Snowflake",
    keywords: [
      "winter",
      "season",
      "cold",
      "weather",
      "christmas",
      "xmas"
    ],
    skins: [
      {
        unified: "2744-fe0f",
        native: "❄️"
      }
    ],
    version: 1
  },
  snowman: {
    id: "snowman",
    name: "Snowman",
    keywords: [
      "winter",
      "season",
      "cold",
      "weather",
      "christmas",
      "xmas",
      "frozen"
    ],
    skins: [
      {
        unified: "2603-fe0f",
        native: "☃️"
      }
    ],
    version: 1
  },
  snowman_without_snow: {
    id: "snowman_without_snow",
    name: "Snowman Without Snow",
    keywords: [
      "winter",
      "season",
      "cold",
      "weather",
      "christmas",
      "xmas",
      "frozen"
    ],
    skins: [
      {
        unified: "26c4",
        native: "⛄"
      }
    ],
    version: 1
  },
  comet: {
    id: "comet",
    name: "Comet",
    keywords: [
      "space"
    ],
    skins: [
      {
        unified: "2604-fe0f",
        native: "☄️"
      }
    ],
    version: 1
  },
  fire: {
    id: "fire",
    name: "Fire",
    keywords: [
      "hot",
      "cook",
      "flame"
    ],
    skins: [
      {
        unified: "1f525",
        native: "🔥"
      }
    ],
    version: 1
  },
  droplet: {
    id: "droplet",
    name: "Droplet",
    keywords: [
      "water",
      "drip",
      "faucet",
      "spring"
    ],
    skins: [
      {
        unified: "1f4a7",
        native: "💧"
      }
    ],
    version: 1
  },
  ocean: {
    id: "ocean",
    name: "Water Wave",
    keywords: [
      "ocean",
      "sea",
      "nature",
      "tsunami",
      "disaster"
    ],
    skins: [
      {
        unified: "1f30a",
        native: "🌊"
      }
    ],
    version: 1
  },
  jack_o_lantern: {
    id: "jack_o_lantern",
    name: "Jack-O-Lantern",
    keywords: [
      "jack",
      "o",
      "lantern",
      "halloween",
      "light",
      "pumpkin",
      "creepy",
      "fall"
    ],
    skins: [
      {
        unified: "1f383",
        native: "🎃"
      }
    ],
    version: 1
  },
  christmas_tree: {
    id: "christmas_tree",
    name: "Christmas Tree",
    keywords: [
      "festival",
      "vacation",
      "december",
      "xmas",
      "celebration"
    ],
    skins: [
      {
        unified: "1f384",
        native: "🎄"
      }
    ],
    version: 1
  },
  fireworks: {
    id: "fireworks",
    name: "Fireworks",
    keywords: [
      "photo",
      "festival",
      "carnival",
      "congratulations"
    ],
    skins: [
      {
        unified: "1f386",
        native: "🎆"
      }
    ],
    version: 1
  },
  sparkler: {
    id: "sparkler",
    name: "Sparkler",
    keywords: [
      "stars",
      "night",
      "shine"
    ],
    skins: [
      {
        unified: "1f387",
        native: "🎇"
      }
    ],
    version: 1
  },
  firecracker: {
    id: "firecracker",
    name: "Firecracker",
    keywords: [
      "dynamite",
      "boom",
      "explode",
      "explosion",
      "explosive"
    ],
    skins: [
      {
        unified: "1f9e8",
        native: "🧨"
      }
    ],
    version: 11
  },
  sparkles: {
    id: "sparkles",
    name: "Sparkles",
    keywords: [
      "stars",
      "shine",
      "shiny",
      "cool",
      "awesome",
      "good",
      "magic"
    ],
    skins: [
      {
        unified: "2728",
        native: "✨"
      }
    ],
    version: 1
  },
  balloon: {
    id: "balloon",
    name: "Balloon",
    keywords: [
      "party",
      "celebration",
      "birthday",
      "circus"
    ],
    skins: [
      {
        unified: "1f388",
        native: "🎈"
      }
    ],
    version: 1
  },
  tada: {
    id: "tada",
    name: "Party Popper",
    keywords: [
      "tada",
      "congratulations",
      "birthday",
      "magic",
      "circus",
      "celebration"
    ],
    skins: [
      {
        unified: "1f389",
        native: "🎉"
      }
    ],
    version: 1
  },
  confetti_ball: {
    id: "confetti_ball",
    name: "Confetti Ball",
    keywords: [
      "festival",
      "party",
      "birthday",
      "circus"
    ],
    skins: [
      {
        unified: "1f38a",
        native: "🎊"
      }
    ],
    version: 1
  },
  tanabata_tree: {
    id: "tanabata_tree",
    name: "Tanabata Tree",
    keywords: [
      "plant",
      "nature",
      "branch",
      "summer",
      "bamboo",
      "wish",
      "star",
      "festival",
      "tanzaku"
    ],
    skins: [
      {
        unified: "1f38b",
        native: "🎋"
      }
    ],
    version: 1
  },
  bamboo: {
    id: "bamboo",
    name: "Pine Decoration",
    keywords: [
      "bamboo",
      "japanese",
      "plant",
      "nature",
      "vegetable",
      "panda",
      "new",
      "years"
    ],
    skins: [
      {
        unified: "1f38d",
        native: "🎍"
      }
    ],
    version: 1
  },
  dolls: {
    id: "dolls",
    name: "Japanese Dolls",
    keywords: [
      "toy",
      "kimono"
    ],
    skins: [
      {
        unified: "1f38e",
        native: "🎎"
      }
    ],
    version: 1
  },
  flags: {
    id: "flags",
    name: "Carp Streamer",
    keywords: [
      "flags",
      "fish",
      "japanese",
      "koinobori",
      "banner"
    ],
    skins: [
      {
        unified: "1f38f",
        native: "🎏"
      }
    ],
    version: 1
  },
  wind_chime: {
    id: "wind_chime",
    name: "Wind Chime",
    keywords: [
      "nature",
      "ding",
      "spring",
      "bell"
    ],
    skins: [
      {
        unified: "1f390",
        native: "🎐"
      }
    ],
    version: 1
  },
  rice_scene: {
    id: "rice_scene",
    name: "Moon Viewing Ceremony",
    keywords: [
      "rice",
      "scene",
      "photo",
      "japan",
      "asia",
      "tsukimi"
    ],
    skins: [
      {
        unified: "1f391",
        native: "🎑"
      }
    ],
    version: 1
  },
  red_envelope: {
    id: "red_envelope",
    name: "Red Envelope",
    keywords: [
      "gift"
    ],
    skins: [
      {
        unified: "1f9e7",
        native: "🧧"
      }
    ],
    version: 11
  },
  ribbon: {
    id: "ribbon",
    name: "Ribbon",
    keywords: [
      "decoration",
      "pink",
      "girl",
      "bowtie"
    ],
    skins: [
      {
        unified: "1f380",
        native: "🎀"
      }
    ],
    version: 1
  },
  gift: {
    id: "gift",
    name: "Wrapped Gift",
    keywords: [
      "present",
      "birthday",
      "christmas",
      "xmas"
    ],
    skins: [
      {
        unified: "1f381",
        native: "🎁"
      }
    ],
    version: 1
  },
  reminder_ribbon: {
    id: "reminder_ribbon",
    name: "Reminder Ribbon",
    keywords: [
      "sports",
      "cause",
      "support",
      "awareness"
    ],
    skins: [
      {
        unified: "1f397-fe0f",
        native: "🎗️"
      }
    ],
    version: 1
  },
  admission_tickets: {
    id: "admission_tickets",
    name: "Admission Tickets",
    keywords: [
      "sports",
      "concert",
      "entrance"
    ],
    skins: [
      {
        unified: "1f39f-fe0f",
        native: "🎟️"
      }
    ],
    version: 1
  },
  ticket: {
    id: "ticket",
    name: "Ticket",
    keywords: [
      "event",
      "concert",
      "pass"
    ],
    skins: [
      {
        unified: "1f3ab",
        native: "🎫"
      }
    ],
    version: 1
  },
  medal: {
    id: "medal",
    name: "Military Medal",
    keywords: [
      "award",
      "winning",
      "army"
    ],
    skins: [
      {
        unified: "1f396-fe0f",
        native: "🎖️"
      }
    ],
    version: 1
  },
  trophy: {
    id: "trophy",
    name: "Trophy",
    keywords: [
      "win",
      "award",
      "contest",
      "place",
      "ftw",
      "ceremony"
    ],
    skins: [
      {
        unified: "1f3c6",
        native: "🏆"
      }
    ],
    version: 1
  },
  sports_medal: {
    id: "sports_medal",
    name: "Sports Medal",
    keywords: [
      "award",
      "winning"
    ],
    skins: [
      {
        unified: "1f3c5",
        native: "🏅"
      }
    ],
    version: 1
  },
  first_place_medal: {
    id: "first_place_medal",
    name: "1st Place Medal",
    keywords: [
      "first",
      "award",
      "winning"
    ],
    skins: [
      {
        unified: "1f947",
        native: "🥇"
      }
    ],
    version: 3
  },
  second_place_medal: {
    id: "second_place_medal",
    name: "2nd Place Medal",
    keywords: [
      "second",
      "award"
    ],
    skins: [
      {
        unified: "1f948",
        native: "🥈"
      }
    ],
    version: 3
  },
  third_place_medal: {
    id: "third_place_medal",
    name: "3rd Place Medal",
    keywords: [
      "third",
      "award"
    ],
    skins: [
      {
        unified: "1f949",
        native: "🥉"
      }
    ],
    version: 3
  },
  soccer: {
    id: "soccer",
    name: "Soccer Ball",
    keywords: [
      "sports",
      "football"
    ],
    skins: [
      {
        unified: "26bd",
        native: "⚽"
      }
    ],
    version: 1
  },
  baseball: {
    id: "baseball",
    name: "Baseball",
    keywords: [
      "sports",
      "balls"
    ],
    skins: [
      {
        unified: "26be",
        native: "⚾"
      }
    ],
    version: 1
  },
  softball: {
    id: "softball",
    name: "Softball",
    keywords: [
      "sports",
      "balls"
    ],
    skins: [
      {
        unified: "1f94e",
        native: "🥎"
      }
    ],
    version: 11
  },
  basketball: {
    id: "basketball",
    name: "Basketball",
    keywords: [
      "sports",
      "balls",
      "NBA"
    ],
    skins: [
      {
        unified: "1f3c0",
        native: "🏀"
      }
    ],
    version: 1
  },
  volleyball: {
    id: "volleyball",
    name: "Volleyball",
    keywords: [
      "sports",
      "balls"
    ],
    skins: [
      {
        unified: "1f3d0",
        native: "🏐"
      }
    ],
    version: 1
  },
  football: {
    id: "football",
    name: "American Football",
    keywords: [
      "sports",
      "balls",
      "NFL"
    ],
    skins: [
      {
        unified: "1f3c8",
        native: "🏈"
      }
    ],
    version: 1
  },
  rugby_football: {
    id: "rugby_football",
    name: "Rugby Football",
    keywords: [
      "sports",
      "team"
    ],
    skins: [
      {
        unified: "1f3c9",
        native: "🏉"
      }
    ],
    version: 1
  },
  tennis: {
    id: "tennis",
    name: "Tennis",
    keywords: [
      "sports",
      "balls",
      "green"
    ],
    skins: [
      {
        unified: "1f3be",
        native: "🎾"
      }
    ],
    version: 1
  },
  flying_disc: {
    id: "flying_disc",
    name: "Flying Disc",
    keywords: [
      "sports",
      "frisbee",
      "ultimate"
    ],
    skins: [
      {
        unified: "1f94f",
        native: "🥏"
      }
    ],
    version: 11
  },
  bowling: {
    id: "bowling",
    name: "Bowling",
    keywords: [
      "sports",
      "fun",
      "play"
    ],
    skins: [
      {
        unified: "1f3b3",
        native: "🎳"
      }
    ],
    version: 1
  },
  cricket_bat_and_ball: {
    id: "cricket_bat_and_ball",
    name: "Cricket Game",
    keywords: [
      "bat",
      "and",
      "ball",
      "sports"
    ],
    skins: [
      {
        unified: "1f3cf",
        native: "🏏"
      }
    ],
    version: 1
  },
  field_hockey_stick_and_ball: {
    id: "field_hockey_stick_and_ball",
    name: "Field Hockey",
    keywords: [
      "stick",
      "and",
      "ball",
      "sports"
    ],
    skins: [
      {
        unified: "1f3d1",
        native: "🏑"
      }
    ],
    version: 1
  },
  ice_hockey_stick_and_puck: {
    id: "ice_hockey_stick_and_puck",
    name: "Ice Hockey",
    keywords: [
      "stick",
      "and",
      "puck",
      "sports"
    ],
    skins: [
      {
        unified: "1f3d2",
        native: "🏒"
      }
    ],
    version: 1
  },
  lacrosse: {
    id: "lacrosse",
    name: "Lacrosse",
    keywords: [
      "sports",
      "ball",
      "stick"
    ],
    skins: [
      {
        unified: "1f94d",
        native: "🥍"
      }
    ],
    version: 11
  },
  table_tennis_paddle_and_ball: {
    id: "table_tennis_paddle_and_ball",
    name: "Ping Pong",
    keywords: [
      "table",
      "tennis",
      "paddle",
      "and",
      "ball",
      "sports",
      "pingpong"
    ],
    skins: [
      {
        unified: "1f3d3",
        native: "🏓"
      }
    ],
    version: 1
  },
  badminton_racquet_and_shuttlecock: {
    id: "badminton_racquet_and_shuttlecock",
    name: "Badminton",
    keywords: [
      "racquet",
      "and",
      "shuttlecock",
      "sports"
    ],
    skins: [
      {
        unified: "1f3f8",
        native: "🏸"
      }
    ],
    version: 1
  },
  boxing_glove: {
    id: "boxing_glove",
    name: "Boxing Glove",
    keywords: [
      "sports",
      "fighting"
    ],
    skins: [
      {
        unified: "1f94a",
        native: "🥊"
      }
    ],
    version: 3
  },
  martial_arts_uniform: {
    id: "martial_arts_uniform",
    name: "Martial Arts Uniform",
    keywords: [
      "judo",
      "karate",
      "taekwondo"
    ],
    skins: [
      {
        unified: "1f94b",
        native: "🥋"
      }
    ],
    version: 3
  },
  goal_net: {
    id: "goal_net",
    name: "Goal Net",
    keywords: [
      "sports"
    ],
    skins: [
      {
        unified: "1f945",
        native: "🥅"
      }
    ],
    version: 3
  },
  golf: {
    id: "golf",
    name: "Flag in Hole",
    keywords: [
      "golf",
      "sports",
      "business",
      "summer"
    ],
    skins: [
      {
        unified: "26f3",
        native: "⛳"
      }
    ],
    version: 1
  },
  ice_skate: {
    id: "ice_skate",
    name: "Ice Skate",
    keywords: [
      "sports"
    ],
    skins: [
      {
        unified: "26f8-fe0f",
        native: "⛸️"
      }
    ],
    version: 1
  },
  fishing_pole_and_fish: {
    id: "fishing_pole_and_fish",
    name: "Fishing Pole",
    keywords: [
      "and",
      "fish",
      "food",
      "hobby",
      "summer"
    ],
    skins: [
      {
        unified: "1f3a3",
        native: "🎣"
      }
    ],
    version: 1
  },
  diving_mask: {
    id: "diving_mask",
    name: "Diving Mask",
    keywords: [
      "sport",
      "ocean"
    ],
    skins: [
      {
        unified: "1f93f",
        native: "🤿"
      }
    ],
    version: 12
  },
  running_shirt_with_sash: {
    id: "running_shirt_with_sash",
    name: "Running Shirt",
    keywords: [
      "with",
      "sash",
      "play",
      "pageant"
    ],
    skins: [
      {
        unified: "1f3bd",
        native: "🎽"
      }
    ],
    version: 1
  },
  ski: {
    id: "ski",
    name: "Skis",
    keywords: [
      "ski",
      "sports",
      "winter",
      "cold",
      "snow"
    ],
    skins: [
      {
        unified: "1f3bf",
        native: "🎿"
      }
    ],
    version: 1
  },
  sled: {
    id: "sled",
    name: "Sled",
    keywords: [
      "sleigh",
      "luge",
      "toboggan"
    ],
    skins: [
      {
        unified: "1f6f7",
        native: "🛷"
      }
    ],
    version: 5
  },
  curling_stone: {
    id: "curling_stone",
    name: "Curling Stone",
    keywords: [
      "sports"
    ],
    skins: [
      {
        unified: "1f94c",
        native: "🥌"
      }
    ],
    version: 5
  },
  dart: {
    id: "dart",
    name: "Bullseye",
    keywords: [
      "dart",
      "direct",
      "hit",
      "game",
      "play",
      "bar",
      "target"
    ],
    skins: [
      {
        unified: "1f3af",
        native: "🎯"
      }
    ],
    version: 1
  },
  "yo-yo": {
    id: "yo-yo",
    name: "Yo-Yo",
    keywords: [
      "yo",
      "toy"
    ],
    skins: [
      {
        unified: "1fa80",
        native: "🪀"
      }
    ],
    version: 12
  },
  kite: {
    id: "kite",
    name: "Kite",
    keywords: [
      "wind",
      "fly"
    ],
    skins: [
      {
        unified: "1fa81",
        native: "🪁"
      }
    ],
    version: 12
  },
  gun: {
    id: "gun",
    name: "Pistol",
    keywords: [
      "gun",
      "violence",
      "weapon",
      "revolver"
    ],
    skins: [
      {
        unified: "1f52b",
        native: "🔫"
      }
    ],
    version: 1
  },
  "8ball": {
    id: "8ball",
    name: "Billiards",
    keywords: [
      "8ball",
      "pool",
      "8",
      "ball",
      "hobby",
      "game",
      "luck",
      "magic"
    ],
    skins: [
      {
        unified: "1f3b1",
        native: "🎱"
      }
    ],
    version: 1
  },
  crystal_ball: {
    id: "crystal_ball",
    name: "Crystal Ball",
    keywords: [
      "disco",
      "party",
      "magic",
      "circus",
      "fortune",
      "teller"
    ],
    skins: [
      {
        unified: "1f52e",
        native: "🔮"
      }
    ],
    version: 1
  },
  magic_wand: {
    id: "magic_wand",
    name: "Magic Wand",
    keywords: [
      "supernature",
      "power"
    ],
    skins: [
      {
        unified: "1fa84",
        native: "🪄"
      }
    ],
    version: 13
  },
  video_game: {
    id: "video_game",
    name: "Video Game",
    keywords: [
      "play",
      "console",
      "PS4",
      "controller"
    ],
    skins: [
      {
        unified: "1f3ae",
        native: "🎮"
      }
    ],
    version: 1
  },
  joystick: {
    id: "joystick",
    name: "Joystick",
    keywords: [
      "game",
      "play"
    ],
    skins: [
      {
        unified: "1f579-fe0f",
        native: "🕹️"
      }
    ],
    version: 1
  },
  slot_machine: {
    id: "slot_machine",
    name: "Slot Machine",
    keywords: [
      "bet",
      "gamble",
      "vegas",
      "fruit",
      "luck",
      "casino"
    ],
    skins: [
      {
        unified: "1f3b0",
        native: "🎰"
      }
    ],
    version: 1
  },
  game_die: {
    id: "game_die",
    name: "Game Die",
    keywords: [
      "dice",
      "random",
      "tabletop",
      "play",
      "luck"
    ],
    skins: [
      {
        unified: "1f3b2",
        native: "🎲"
      }
    ],
    version: 1
  },
  jigsaw: {
    id: "jigsaw",
    name: "Puzzle Piece",
    keywords: [
      "jigsaw",
      "interlocking"
    ],
    skins: [
      {
        unified: "1f9e9",
        native: "🧩"
      }
    ],
    version: 11
  },
  teddy_bear: {
    id: "teddy_bear",
    name: "Teddy Bear",
    keywords: [
      "plush",
      "stuffed"
    ],
    skins: [
      {
        unified: "1f9f8",
        native: "🧸"
      }
    ],
    version: 11
  },
  pinata: {
    id: "pinata",
    name: "Pinata",
    keywords: [
      "mexico",
      "candy",
      "celebration"
    ],
    skins: [
      {
        unified: "1fa85",
        native: "🪅"
      }
    ],
    version: 13
  },
  mirror_ball: {
    id: "mirror_ball",
    name: "Mirror Ball",
    keywords: [
      "disco",
      "dance",
      "party"
    ],
    skins: [
      {
        unified: "1faa9",
        native: "🪩"
      }
    ],
    version: 14
  },
  nesting_dolls: {
    id: "nesting_dolls",
    name: "Nesting Dolls",
    keywords: [
      "matryoshka",
      "toy"
    ],
    skins: [
      {
        unified: "1fa86",
        native: "🪆"
      }
    ],
    version: 13
  },
  spades: {
    id: "spades",
    name: "Spade Suit",
    keywords: [
      "spades",
      "poker",
      "cards",
      "suits",
      "magic"
    ],
    skins: [
      {
        unified: "2660-fe0f",
        native: "♠️"
      }
    ],
    version: 1
  },
  hearts: {
    id: "hearts",
    name: "Heart Suit",
    keywords: [
      "hearts",
      "poker",
      "cards",
      "magic",
      "suits"
    ],
    skins: [
      {
        unified: "2665-fe0f",
        native: "♥️"
      }
    ],
    version: 1
  },
  diamonds: {
    id: "diamonds",
    name: "Diamond Suit",
    keywords: [
      "diamonds",
      "poker",
      "cards",
      "magic",
      "suits"
    ],
    skins: [
      {
        unified: "2666-fe0f",
        native: "♦️"
      }
    ],
    version: 1
  },
  clubs: {
    id: "clubs",
    name: "Club Suit",
    keywords: [
      "clubs",
      "poker",
      "cards",
      "magic",
      "suits"
    ],
    skins: [
      {
        unified: "2663-fe0f",
        native: "♣️"
      }
    ],
    version: 1
  },
  chess_pawn: {
    id: "chess_pawn",
    name: "Chess Pawn",
    keywords: [
      "expendable"
    ],
    skins: [
      {
        unified: "265f-fe0f",
        native: "♟️"
      }
    ],
    version: 11
  },
  black_joker: {
    id: "black_joker",
    name: "Joker",
    keywords: [
      "black",
      "poker",
      "cards",
      "game",
      "play",
      "magic"
    ],
    skins: [
      {
        unified: "1f0cf",
        native: "🃏"
      }
    ],
    version: 1
  },
  mahjong: {
    id: "mahjong",
    name: "Mahjong Red Dragon",
    keywords: [
      "game",
      "play",
      "chinese",
      "kanji"
    ],
    skins: [
      {
        unified: "1f004",
        native: "🀄"
      }
    ],
    version: 1
  },
  flower_playing_cards: {
    id: "flower_playing_cards",
    name: "Flower Playing Cards",
    keywords: [
      "game",
      "sunset",
      "red"
    ],
    skins: [
      {
        unified: "1f3b4",
        native: "🎴"
      }
    ],
    version: 1
  },
  performing_arts: {
    id: "performing_arts",
    name: "Performing Arts",
    keywords: [
      "acting",
      "theater",
      "drama"
    ],
    skins: [
      {
        unified: "1f3ad",
        native: "🎭"
      }
    ],
    version: 1
  },
  frame_with_picture: {
    id: "frame_with_picture",
    name: "Framed Picture",
    keywords: [
      "frame",
      "with",
      "photography"
    ],
    skins: [
      {
        unified: "1f5bc-fe0f",
        native: "🖼️"
      }
    ],
    version: 1
  },
  art: {
    id: "art",
    name: "Artist Palette",
    keywords: [
      "art",
      "design",
      "paint",
      "draw",
      "colors"
    ],
    skins: [
      {
        unified: "1f3a8",
        native: "🎨"
      }
    ],
    version: 1
  },
  thread: {
    id: "thread",
    name: "Thread",
    keywords: [
      "needle",
      "sewing",
      "spool",
      "string"
    ],
    skins: [
      {
        unified: "1f9f5",
        native: "🧵"
      }
    ],
    version: 11
  },
  sewing_needle: {
    id: "sewing_needle",
    name: "Sewing Needle",
    keywords: [
      "stitches"
    ],
    skins: [
      {
        unified: "1faa1",
        native: "🪡"
      }
    ],
    version: 13
  },
  yarn: {
    id: "yarn",
    name: "Yarn",
    keywords: [
      "ball",
      "crochet",
      "knit"
    ],
    skins: [
      {
        unified: "1f9f6",
        native: "🧶"
      }
    ],
    version: 11
  },
  knot: {
    id: "knot",
    name: "Knot",
    keywords: [
      "rope",
      "scout"
    ],
    skins: [
      {
        unified: "1faa2",
        native: "🪢"
      }
    ],
    version: 13
  },
  eyeglasses: {
    id: "eyeglasses",
    name: "Glasses",
    keywords: [
      "eyeglasses",
      "fashion",
      "accessories",
      "eyesight",
      "nerdy",
      "dork",
      "geek"
    ],
    skins: [
      {
        unified: "1f453",
        native: "👓"
      }
    ],
    version: 1
  },
  dark_sunglasses: {
    id: "dark_sunglasses",
    name: "Sunglasses",
    keywords: [
      "dark",
      "face",
      "cool",
      "accessories"
    ],
    skins: [
      {
        unified: "1f576-fe0f",
        native: "🕶️"
      }
    ],
    version: 1
  },
  goggles: {
    id: "goggles",
    name: "Goggles",
    keywords: [
      "eyes",
      "protection",
      "safety"
    ],
    skins: [
      {
        unified: "1f97d",
        native: "🥽"
      }
    ],
    version: 11
  },
  lab_coat: {
    id: "lab_coat",
    name: "Lab Coat",
    keywords: [
      "doctor",
      "experiment",
      "scientist",
      "chemist"
    ],
    skins: [
      {
        unified: "1f97c",
        native: "🥼"
      }
    ],
    version: 11
  },
  safety_vest: {
    id: "safety_vest",
    name: "Safety Vest",
    keywords: [
      "protection"
    ],
    skins: [
      {
        unified: "1f9ba",
        native: "🦺"
      }
    ],
    version: 12
  },
  necktie: {
    id: "necktie",
    name: "Necktie",
    keywords: [
      "shirt",
      "suitup",
      "formal",
      "fashion",
      "cloth",
      "business"
    ],
    skins: [
      {
        unified: "1f454",
        native: "👔"
      }
    ],
    version: 1
  },
  shirt: {
    id: "shirt",
    name: "T-Shirt",
    keywords: [
      "shirt",
      "tshirt",
      "t",
      "fashion",
      "cloth",
      "casual",
      "tee"
    ],
    skins: [
      {
        unified: "1f455",
        native: "👕"
      }
    ],
    version: 1
  },
  jeans: {
    id: "jeans",
    name: "Jeans",
    keywords: [
      "fashion",
      "shopping"
    ],
    skins: [
      {
        unified: "1f456",
        native: "👖"
      }
    ],
    version: 1
  },
  scarf: {
    id: "scarf",
    name: "Scarf",
    keywords: [
      "neck",
      "winter",
      "clothes"
    ],
    skins: [
      {
        unified: "1f9e3",
        native: "🧣"
      }
    ],
    version: 5
  },
  gloves: {
    id: "gloves",
    name: "Gloves",
    keywords: [
      "hands",
      "winter",
      "clothes"
    ],
    skins: [
      {
        unified: "1f9e4",
        native: "🧤"
      }
    ],
    version: 5
  },
  coat: {
    id: "coat",
    name: "Coat",
    keywords: [
      "jacket"
    ],
    skins: [
      {
        unified: "1f9e5",
        native: "🧥"
      }
    ],
    version: 5
  },
  socks: {
    id: "socks",
    name: "Socks",
    keywords: [
      "stockings",
      "clothes"
    ],
    skins: [
      {
        unified: "1f9e6",
        native: "🧦"
      }
    ],
    version: 5
  },
  dress: {
    id: "dress",
    name: "Dress",
    keywords: [
      "clothes",
      "fashion",
      "shopping"
    ],
    skins: [
      {
        unified: "1f457",
        native: "👗"
      }
    ],
    version: 1
  },
  kimono: {
    id: "kimono",
    name: "Kimono",
    keywords: [
      "dress",
      "fashion",
      "women",
      "female",
      "japanese"
    ],
    skins: [
      {
        unified: "1f458",
        native: "👘"
      }
    ],
    version: 1
  },
  sari: {
    id: "sari",
    name: "Sari",
    keywords: [
      "dress"
    ],
    skins: [
      {
        unified: "1f97b",
        native: "🥻"
      }
    ],
    version: 12
  },
  "one-piece_swimsuit": {
    id: "one-piece_swimsuit",
    name: "One-Piece Swimsuit",
    keywords: [
      "one",
      "piece",
      "fashion"
    ],
    skins: [
      {
        unified: "1fa71",
        native: "🩱"
      }
    ],
    version: 12
  },
  briefs: {
    id: "briefs",
    name: "Briefs",
    keywords: [
      "clothing"
    ],
    skins: [
      {
        unified: "1fa72",
        native: "🩲"
      }
    ],
    version: 12
  },
  shorts: {
    id: "shorts",
    name: "Shorts",
    keywords: [
      "clothing"
    ],
    skins: [
      {
        unified: "1fa73",
        native: "🩳"
      }
    ],
    version: 12
  },
  bikini: {
    id: "bikini",
    name: "Bikini",
    keywords: [
      "swimming",
      "female",
      "woman",
      "girl",
      "fashion",
      "beach",
      "summer"
    ],
    skins: [
      {
        unified: "1f459",
        native: "👙"
      }
    ],
    version: 1
  },
  womans_clothes: {
    id: "womans_clothes",
    name: "Womans Clothes",
    keywords: [
      "woman",
      "s",
      "fashion",
      "shopping",
      "bags",
      "female"
    ],
    skins: [
      {
        unified: "1f45a",
        native: "👚"
      }
    ],
    version: 1
  },
  folding_hand_fan: {
    id: "folding_hand_fan",
    name: "Folding Hand Fan",
    keywords: [
      "flamenco",
      "hot"
    ],
    skins: [
      {
        unified: "1faad",
        native: "🪭"
      }
    ],
    version: 15
  },
  purse: {
    id: "purse",
    name: "Purse",
    keywords: [
      "fashion",
      "accessories",
      "money",
      "sales",
      "shopping"
    ],
    skins: [
      {
        unified: "1f45b",
        native: "👛"
      }
    ],
    version: 1
  },
  handbag: {
    id: "handbag",
    name: "Handbag",
    keywords: [
      "fashion",
      "accessory",
      "accessories",
      "shopping"
    ],
    skins: [
      {
        unified: "1f45c",
        native: "👜"
      }
    ],
    version: 1
  },
  pouch: {
    id: "pouch",
    name: "Pouch",
    keywords: [
      "clutch",
      "bag",
      "accessories",
      "shopping"
    ],
    skins: [
      {
        unified: "1f45d",
        native: "👝"
      }
    ],
    version: 1
  },
  shopping_bags: {
    id: "shopping_bags",
    name: "Shopping Bags",
    keywords: [
      "mall",
      "buy",
      "purchase"
    ],
    skins: [
      {
        unified: "1f6cd-fe0f",
        native: "🛍️"
      }
    ],
    version: 1
  },
  school_satchel: {
    id: "school_satchel",
    name: "Backpack",
    keywords: [
      "school",
      "satchel",
      "student",
      "education",
      "bag"
    ],
    skins: [
      {
        unified: "1f392",
        native: "🎒"
      }
    ],
    version: 1
  },
  thong_sandal: {
    id: "thong_sandal",
    name: "Thong Sandal",
    keywords: [
      "footwear",
      "summer"
    ],
    skins: [
      {
        unified: "1fa74",
        native: "🩴"
      }
    ],
    version: 13
  },
  mans_shoe: {
    id: "mans_shoe",
    name: "Mans Shoe",
    keywords: [
      "man",
      "s",
      "fashion",
      "male"
    ],
    skins: [
      {
        unified: "1f45e",
        native: "👞"
      }
    ],
    version: 1
  },
  athletic_shoe: {
    id: "athletic_shoe",
    name: "Running Shoe",
    keywords: [
      "athletic",
      "shoes",
      "sports",
      "sneakers"
    ],
    skins: [
      {
        unified: "1f45f",
        native: "👟"
      }
    ],
    version: 1
  },
  hiking_boot: {
    id: "hiking_boot",
    name: "Hiking Boot",
    keywords: [
      "backpacking",
      "camping"
    ],
    skins: [
      {
        unified: "1f97e",
        native: "🥾"
      }
    ],
    version: 11
  },
  womans_flat_shoe: {
    id: "womans_flat_shoe",
    name: "Flat Shoe",
    keywords: [
      "womans",
      "ballet",
      "slip",
      "on",
      "slipper"
    ],
    skins: [
      {
        unified: "1f97f",
        native: "🥿"
      }
    ],
    version: 11
  },
  high_heel: {
    id: "high_heel",
    name: "High-Heeled Shoe",
    keywords: [
      "high",
      "heel",
      "heeled",
      "fashion",
      "shoes",
      "female",
      "pumps",
      "stiletto"
    ],
    skins: [
      {
        unified: "1f460",
        native: "👠"
      }
    ],
    version: 1
  },
  sandal: {
    id: "sandal",
    name: "Womans Sandal",
    keywords: [
      "woman",
      "s",
      "shoes",
      "fashion",
      "flip",
      "flops"
    ],
    skins: [
      {
        unified: "1f461",
        native: "👡"
      }
    ],
    version: 1
  },
  ballet_shoes: {
    id: "ballet_shoes",
    name: "Ballet Shoes",
    keywords: [
      "dance"
    ],
    skins: [
      {
        unified: "1fa70",
        native: "🩰"
      }
    ],
    version: 12
  },
  boot: {
    id: "boot",
    name: "Womans Boots",
    keywords: [
      "boot",
      "woman",
      "s",
      "shoes",
      "fashion"
    ],
    skins: [
      {
        unified: "1f462",
        native: "👢"
      }
    ],
    version: 1
  },
  hair_pick: {
    id: "hair_pick",
    name: "Hair Pick",
    keywords: [
      "afro",
      "comb"
    ],
    skins: [
      {
        unified: "1faae",
        native: "🪮"
      }
    ],
    version: 15
  },
  crown: {
    id: "crown",
    name: "Crown",
    keywords: [
      "king",
      "kod",
      "leader",
      "royalty",
      "lord"
    ],
    skins: [
      {
        unified: "1f451",
        native: "👑"
      }
    ],
    version: 1
  },
  womans_hat: {
    id: "womans_hat",
    name: "Womans Hat",
    keywords: [
      "woman",
      "s",
      "fashion",
      "accessories",
      "female",
      "lady",
      "spring"
    ],
    skins: [
      {
        unified: "1f452",
        native: "👒"
      }
    ],
    version: 1
  },
  tophat: {
    id: "tophat",
    name: "Top Hat",
    keywords: [
      "tophat",
      "magic",
      "gentleman",
      "classy",
      "circus"
    ],
    skins: [
      {
        unified: "1f3a9",
        native: "🎩"
      }
    ],
    version: 1
  },
  mortar_board: {
    id: "mortar_board",
    name: "Graduation Cap",
    keywords: [
      "mortar",
      "board",
      "school",
      "college",
      "degree",
      "university",
      "hat",
      "legal",
      "learn",
      "education"
    ],
    skins: [
      {
        unified: "1f393",
        native: "🎓"
      }
    ],
    version: 1
  },
  billed_cap: {
    id: "billed_cap",
    name: "Billed Cap",
    keywords: [
      "baseball"
    ],
    skins: [
      {
        unified: "1f9e2",
        native: "🧢"
      }
    ],
    version: 5
  },
  military_helmet: {
    id: "military_helmet",
    name: "Military Helmet",
    keywords: [
      "army",
      "protection"
    ],
    skins: [
      {
        unified: "1fa96",
        native: "🪖"
      }
    ],
    version: 13
  },
  helmet_with_white_cross: {
    id: "helmet_with_white_cross",
    name: "Rescue Worker’s Helmet",
    keywords: [
      "with",
      "white",
      "cross",
      "worker",
      "s",
      "construction",
      "build"
    ],
    skins: [
      {
        unified: "26d1-fe0f",
        native: "⛑️"
      }
    ],
    version: 1
  },
  prayer_beads: {
    id: "prayer_beads",
    name: "Prayer Beads",
    keywords: [
      "dhikr",
      "religious"
    ],
    skins: [
      {
        unified: "1f4ff",
        native: "📿"
      }
    ],
    version: 1
  },
  lipstick: {
    id: "lipstick",
    name: "Lipstick",
    keywords: [
      "female",
      "girl",
      "fashion",
      "woman"
    ],
    skins: [
      {
        unified: "1f484",
        native: "💄"
      }
    ],
    version: 1
  },
  ring: {
    id: "ring",
    name: "Ring",
    keywords: [
      "wedding",
      "propose",
      "marriage",
      "valentines",
      "diamond",
      "fashion",
      "jewelry",
      "gem",
      "engagement"
    ],
    skins: [
      {
        unified: "1f48d",
        native: "💍"
      }
    ],
    version: 1
  },
  gem: {
    id: "gem",
    name: "Gem Stone",
    keywords: [
      "blue",
      "ruby",
      "diamond",
      "jewelry"
    ],
    skins: [
      {
        unified: "1f48e",
        native: "💎"
      }
    ],
    version: 1
  },
  mute: {
    id: "mute",
    name: "Muted Speaker",
    keywords: [
      "mute",
      "sound",
      "volume",
      "silence",
      "quiet"
    ],
    skins: [
      {
        unified: "1f507",
        native: "🔇"
      }
    ],
    version: 1
  },
  speaker: {
    id: "speaker",
    name: "Speaker",
    keywords: [
      "low",
      "volume",
      "sound",
      "silence",
      "broadcast"
    ],
    skins: [
      {
        unified: "1f508",
        native: "🔈"
      }
    ],
    version: 1
  },
  sound: {
    id: "sound",
    name: "Speaker Medium Volume",
    keywords: [
      "sound",
      "broadcast"
    ],
    skins: [
      {
        unified: "1f509",
        native: "🔉"
      }
    ],
    version: 1
  },
  loud_sound: {
    id: "loud_sound",
    name: "Speaker High Volume",
    keywords: [
      "loud",
      "sound",
      "noise",
      "noisy",
      "broadcast"
    ],
    skins: [
      {
        unified: "1f50a",
        native: "🔊"
      }
    ],
    version: 1
  },
  loudspeaker: {
    id: "loudspeaker",
    name: "Loudspeaker",
    keywords: [
      "volume",
      "sound"
    ],
    skins: [
      {
        unified: "1f4e2",
        native: "📢"
      }
    ],
    version: 1
  },
  mega: {
    id: "mega",
    name: "Megaphone",
    keywords: [
      "mega",
      "sound",
      "speaker",
      "volume"
    ],
    skins: [
      {
        unified: "1f4e3",
        native: "📣"
      }
    ],
    version: 1
  },
  postal_horn: {
    id: "postal_horn",
    name: "Postal Horn",
    keywords: [
      "instrument",
      "music"
    ],
    skins: [
      {
        unified: "1f4ef",
        native: "📯"
      }
    ],
    version: 1
  },
  bell: {
    id: "bell",
    name: "Bell",
    keywords: [
      "sound",
      "notification",
      "christmas",
      "xmas",
      "chime"
    ],
    skins: [
      {
        unified: "1f514",
        native: "🔔"
      }
    ],
    version: 1
  },
  no_bell: {
    id: "no_bell",
    name: "Bell with Slash",
    keywords: [
      "no",
      "sound",
      "volume",
      "mute",
      "quiet",
      "silent"
    ],
    skins: [
      {
        unified: "1f515",
        native: "🔕"
      }
    ],
    version: 1
  },
  musical_score: {
    id: "musical_score",
    name: "Musical Score",
    keywords: [
      "treble",
      "clef",
      "compose"
    ],
    skins: [
      {
        unified: "1f3bc",
        native: "🎼"
      }
    ],
    version: 1
  },
  musical_note: {
    id: "musical_note",
    name: "Musical Note",
    keywords: [
      "score",
      "tone",
      "sound"
    ],
    skins: [
      {
        unified: "1f3b5",
        native: "🎵"
      }
    ],
    version: 1
  },
  notes: {
    id: "notes",
    name: "Musical Notes",
    keywords: [
      "music",
      "score"
    ],
    skins: [
      {
        unified: "1f3b6",
        native: "🎶"
      }
    ],
    version: 1
  },
  studio_microphone: {
    id: "studio_microphone",
    name: "Studio Microphone",
    keywords: [
      "sing",
      "recording",
      "artist",
      "talkshow"
    ],
    skins: [
      {
        unified: "1f399-fe0f",
        native: "🎙️"
      }
    ],
    version: 1
  },
  level_slider: {
    id: "level_slider",
    name: "Level Slider",
    keywords: [
      "scale"
    ],
    skins: [
      {
        unified: "1f39a-fe0f",
        native: "🎚️"
      }
    ],
    version: 1
  },
  control_knobs: {
    id: "control_knobs",
    name: "Control Knobs",
    keywords: [
      "dial"
    ],
    skins: [
      {
        unified: "1f39b-fe0f",
        native: "🎛️"
      }
    ],
    version: 1
  },
  microphone: {
    id: "microphone",
    name: "Microphone",
    keywords: [
      "sound",
      "music",
      "PA",
      "sing",
      "talkshow"
    ],
    skins: [
      {
        unified: "1f3a4",
        native: "🎤"
      }
    ],
    version: 1
  },
  headphones: {
    id: "headphones",
    name: "Headphone",
    keywords: [
      "headphones",
      "music",
      "score",
      "gadgets"
    ],
    skins: [
      {
        unified: "1f3a7",
        native: "🎧"
      }
    ],
    version: 1
  },
  radio: {
    id: "radio",
    name: "Radio",
    keywords: [
      "communication",
      "music",
      "podcast",
      "program"
    ],
    skins: [
      {
        unified: "1f4fb",
        native: "📻"
      }
    ],
    version: 1
  },
  saxophone: {
    id: "saxophone",
    name: "Saxophone",
    keywords: [
      "music",
      "instrument",
      "jazz",
      "blues"
    ],
    skins: [
      {
        unified: "1f3b7",
        native: "🎷"
      }
    ],
    version: 1
  },
  accordion: {
    id: "accordion",
    name: "Accordion",
    keywords: [
      "music"
    ],
    skins: [
      {
        unified: "1fa97",
        native: "🪗"
      }
    ],
    version: 13
  },
  guitar: {
    id: "guitar",
    name: "Guitar",
    keywords: [
      "music",
      "instrument"
    ],
    skins: [
      {
        unified: "1f3b8",
        native: "🎸"
      }
    ],
    version: 1
  },
  musical_keyboard: {
    id: "musical_keyboard",
    name: "Musical Keyboard",
    keywords: [
      "piano",
      "instrument",
      "compose"
    ],
    skins: [
      {
        unified: "1f3b9",
        native: "🎹"
      }
    ],
    version: 1
  },
  trumpet: {
    id: "trumpet",
    name: "Trumpet",
    keywords: [
      "music",
      "brass"
    ],
    skins: [
      {
        unified: "1f3ba",
        native: "🎺"
      }
    ],
    version: 1
  },
  violin: {
    id: "violin",
    name: "Violin",
    keywords: [
      "music",
      "instrument",
      "orchestra",
      "symphony"
    ],
    skins: [
      {
        unified: "1f3bb",
        native: "🎻"
      }
    ],
    version: 1
  },
  banjo: {
    id: "banjo",
    name: "Banjo",
    keywords: [
      "music",
      "instructment"
    ],
    skins: [
      {
        unified: "1fa95",
        native: "🪕"
      }
    ],
    version: 12
  },
  drum_with_drumsticks: {
    id: "drum_with_drumsticks",
    name: "Drum",
    keywords: [
      "with",
      "drumsticks",
      "music",
      "instrument",
      "snare"
    ],
    skins: [
      {
        unified: "1f941",
        native: "🥁"
      }
    ],
    version: 3
  },
  long_drum: {
    id: "long_drum",
    name: "Long Drum",
    keywords: [
      "music"
    ],
    skins: [
      {
        unified: "1fa98",
        native: "🪘"
      }
    ],
    version: 13
  },
  maracas: {
    id: "maracas",
    name: "Maracas",
    keywords: [
      "music",
      "instrument",
      "percussion"
    ],
    skins: [
      {
        unified: "1fa87",
        native: "🪇"
      }
    ],
    version: 15
  },
  flute: {
    id: "flute",
    name: "Flute",
    keywords: [
      "bamboo",
      "music",
      "instrument",
      "pied",
      "piper"
    ],
    skins: [
      {
        unified: "1fa88",
        native: "🪈"
      }
    ],
    version: 15
  },
  iphone: {
    id: "iphone",
    name: "Mobile Phone",
    keywords: [
      "iphone",
      "technology",
      "apple",
      "gadgets",
      "dial"
    ],
    skins: [
      {
        unified: "1f4f1",
        native: "📱"
      }
    ],
    version: 1
  },
  calling: {
    id: "calling",
    name: "Mobile Phone with Arrow",
    keywords: [
      "calling",
      "iphone",
      "incoming"
    ],
    skins: [
      {
        unified: "1f4f2",
        native: "📲"
      }
    ],
    version: 1
  },
  phone: {
    id: "phone",
    name: "Telephone",
    keywords: [
      "phone",
      "technology",
      "communication",
      "dial"
    ],
    skins: [
      {
        unified: "260e-fe0f",
        native: "☎️"
      }
    ],
    version: 1
  },
  telephone_receiver: {
    id: "telephone_receiver",
    name: "Telephone Receiver",
    keywords: [
      "technology",
      "communication",
      "dial"
    ],
    skins: [
      {
        unified: "1f4de",
        native: "📞"
      }
    ],
    version: 1
  },
  pager: {
    id: "pager",
    name: "Pager",
    keywords: [
      "bbcall",
      "oldschool",
      "90s"
    ],
    skins: [
      {
        unified: "1f4df",
        native: "📟"
      }
    ],
    version: 1
  },
  fax: {
    id: "fax",
    name: "Fax Machine",
    keywords: [
      "communication",
      "technology"
    ],
    skins: [
      {
        unified: "1f4e0",
        native: "📠"
      }
    ],
    version: 1
  },
  battery: {
    id: "battery",
    name: "Battery",
    keywords: [
      "power",
      "energy",
      "sustain"
    ],
    skins: [
      {
        unified: "1f50b",
        native: "🔋"
      }
    ],
    version: 1
  },
  low_battery: {
    id: "low_battery",
    name: "Low Battery",
    keywords: [
      "drained",
      "dead"
    ],
    skins: [
      {
        unified: "1faab",
        native: "🪫"
      }
    ],
    version: 14
  },
  electric_plug: {
    id: "electric_plug",
    name: "Electric Plug",
    keywords: [
      "charger",
      "power"
    ],
    skins: [
      {
        unified: "1f50c",
        native: "🔌"
      }
    ],
    version: 1
  },
  computer: {
    id: "computer",
    name: "Laptop",
    keywords: [
      "computer",
      "technology",
      "screen",
      "display",
      "monitor"
    ],
    skins: [
      {
        unified: "1f4bb",
        native: "💻"
      }
    ],
    version: 1
  },
  desktop_computer: {
    id: "desktop_computer",
    name: "Desktop Computer",
    keywords: [
      "technology",
      "computing",
      "screen"
    ],
    skins: [
      {
        unified: "1f5a5-fe0f",
        native: "🖥️"
      }
    ],
    version: 1
  },
  printer: {
    id: "printer",
    name: "Printer",
    keywords: [
      "paper",
      "ink"
    ],
    skins: [
      {
        unified: "1f5a8-fe0f",
        native: "🖨️"
      }
    ],
    version: 1
  },
  keyboard: {
    id: "keyboard",
    name: "Keyboard",
    keywords: [
      "technology",
      "computer",
      "type",
      "input",
      "text"
    ],
    skins: [
      {
        unified: "2328-fe0f",
        native: "⌨️"
      }
    ],
    version: 1
  },
  three_button_mouse: {
    id: "three_button_mouse",
    name: "Computer Mouse",
    keywords: [
      "three",
      "button",
      "click"
    ],
    skins: [
      {
        unified: "1f5b1-fe0f",
        native: "🖱️"
      }
    ],
    version: 1
  },
  trackball: {
    id: "trackball",
    name: "Trackball",
    keywords: [
      "technology",
      "trackpad"
    ],
    skins: [
      {
        unified: "1f5b2-fe0f",
        native: "🖲️"
      }
    ],
    version: 1
  },
  minidisc: {
    id: "minidisc",
    name: "Minidisc",
    keywords: [
      "computer",
      "disk",
      "technology",
      "record",
      "data",
      "90s"
    ],
    skins: [
      {
        unified: "1f4bd",
        native: "💽"
      }
    ],
    version: 1
  },
  floppy_disk: {
    id: "floppy_disk",
    name: "Floppy Disk",
    keywords: [
      "oldschool",
      "technology",
      "save",
      "90s",
      "80s"
    ],
    skins: [
      {
        unified: "1f4be",
        native: "💾"
      }
    ],
    version: 1
  },
  cd: {
    id: "cd",
    name: "Optical Disc",
    keywords: [
      "cd",
      "disk",
      "technology",
      "dvd",
      "90s"
    ],
    skins: [
      {
        unified: "1f4bf",
        native: "💿"
      }
    ],
    version: 1
  },
  dvd: {
    id: "dvd",
    name: "Dvd",
    keywords: [
      "cd",
      "disk",
      "disc"
    ],
    skins: [
      {
        unified: "1f4c0",
        native: "📀"
      }
    ],
    version: 1
  },
  abacus: {
    id: "abacus",
    name: "Abacus",
    keywords: [
      "calculation"
    ],
    skins: [
      {
        unified: "1f9ee",
        native: "🧮"
      }
    ],
    version: 11
  },
  movie_camera: {
    id: "movie_camera",
    name: "Movie Camera",
    keywords: [
      "film",
      "record"
    ],
    skins: [
      {
        unified: "1f3a5",
        native: "🎥"
      }
    ],
    version: 1
  },
  film_frames: {
    id: "film_frames",
    name: "Film Frames",
    keywords: [
      "movie"
    ],
    skins: [
      {
        unified: "1f39e-fe0f",
        native: "🎞️"
      }
    ],
    version: 1
  },
  film_projector: {
    id: "film_projector",
    name: "Film Projector",
    keywords: [
      "video",
      "tape",
      "record",
      "movie"
    ],
    skins: [
      {
        unified: "1f4fd-fe0f",
        native: "📽️"
      }
    ],
    version: 1
  },
  clapper: {
    id: "clapper",
    name: "Clapper Board",
    keywords: [
      "movie",
      "film",
      "record"
    ],
    skins: [
      {
        unified: "1f3ac",
        native: "🎬"
      }
    ],
    version: 1
  },
  tv: {
    id: "tv",
    name: "Television",
    keywords: [
      "tv",
      "technology",
      "program",
      "oldschool",
      "show"
    ],
    skins: [
      {
        unified: "1f4fa",
        native: "📺"
      }
    ],
    version: 1
  },
  camera: {
    id: "camera",
    name: "Camera",
    keywords: [
      "gadgets",
      "photography"
    ],
    skins: [
      {
        unified: "1f4f7",
        native: "📷"
      }
    ],
    version: 1
  },
  camera_with_flash: {
    id: "camera_with_flash",
    name: "Camera with Flash",
    keywords: [
      "photography",
      "gadgets"
    ],
    skins: [
      {
        unified: "1f4f8",
        native: "📸"
      }
    ],
    version: 1
  },
  video_camera: {
    id: "video_camera",
    name: "Video Camera",
    keywords: [
      "film",
      "record"
    ],
    skins: [
      {
        unified: "1f4f9",
        native: "📹"
      }
    ],
    version: 1
  },
  vhs: {
    id: "vhs",
    name: "Videocassette",
    keywords: [
      "vhs",
      "record",
      "video",
      "oldschool",
      "90s",
      "80s"
    ],
    skins: [
      {
        unified: "1f4fc",
        native: "📼"
      }
    ],
    version: 1
  },
  mag: {
    id: "mag",
    name: "Magnifying Glass Tilted Left",
    keywords: [
      "mag",
      "search",
      "zoom",
      "find",
      "detective"
    ],
    skins: [
      {
        unified: "1f50d",
        native: "🔍"
      }
    ],
    version: 1
  },
  mag_right: {
    id: "mag_right",
    name: "Magnifying Glass Tilted Right",
    keywords: [
      "mag",
      "search",
      "zoom",
      "find",
      "detective"
    ],
    skins: [
      {
        unified: "1f50e",
        native: "🔎"
      }
    ],
    version: 1
  },
  candle: {
    id: "candle",
    name: "Candle",
    keywords: [
      "fire",
      "wax"
    ],
    skins: [
      {
        unified: "1f56f-fe0f",
        native: "🕯️"
      }
    ],
    version: 1
  },
  bulb: {
    id: "bulb",
    name: "Light Bulb",
    keywords: [
      "electricity",
      "idea"
    ],
    skins: [
      {
        unified: "1f4a1",
        native: "💡"
      }
    ],
    version: 1
  },
  flashlight: {
    id: "flashlight",
    name: "Flashlight",
    keywords: [
      "dark",
      "camping",
      "sight",
      "night"
    ],
    skins: [
      {
        unified: "1f526",
        native: "🔦"
      }
    ],
    version: 1
  },
  izakaya_lantern: {
    id: "izakaya_lantern",
    name: "Izakaya Lantern",
    keywords: [
      "red",
      "paper",
      "light",
      "halloween",
      "spooky"
    ],
    skins: [
      {
        unified: "1f3ee",
        native: "🏮"
      }
    ],
    version: 1
  },
  diya_lamp: {
    id: "diya_lamp",
    name: "Diya Lamp",
    keywords: [
      "lighting"
    ],
    skins: [
      {
        unified: "1fa94",
        native: "🪔"
      }
    ],
    version: 12
  },
  notebook_with_decorative_cover: {
    id: "notebook_with_decorative_cover",
    name: "Notebook with Decorative Cover",
    keywords: [
      "classroom",
      "notes",
      "record",
      "paper",
      "study"
    ],
    skins: [
      {
        unified: "1f4d4",
        native: "📔"
      }
    ],
    version: 1
  },
  closed_book: {
    id: "closed_book",
    name: "Closed Book",
    keywords: [
      "read",
      "library",
      "knowledge",
      "textbook",
      "learn"
    ],
    skins: [
      {
        unified: "1f4d5",
        native: "📕"
      }
    ],
    version: 1
  },
  book: {
    id: "book",
    name: "Open Book",
    keywords: [
      "read",
      "library",
      "knowledge",
      "literature",
      "learn",
      "study"
    ],
    skins: [
      {
        unified: "1f4d6",
        native: "📖"
      }
    ],
    version: 1
  },
  green_book: {
    id: "green_book",
    name: "Green Book",
    keywords: [
      "read",
      "library",
      "knowledge",
      "study"
    ],
    skins: [
      {
        unified: "1f4d7",
        native: "📗"
      }
    ],
    version: 1
  },
  blue_book: {
    id: "blue_book",
    name: "Blue Book",
    keywords: [
      "read",
      "library",
      "knowledge",
      "learn",
      "study"
    ],
    skins: [
      {
        unified: "1f4d8",
        native: "📘"
      }
    ],
    version: 1
  },
  orange_book: {
    id: "orange_book",
    name: "Orange Book",
    keywords: [
      "read",
      "library",
      "knowledge",
      "textbook",
      "study"
    ],
    skins: [
      {
        unified: "1f4d9",
        native: "📙"
      }
    ],
    version: 1
  },
  books: {
    id: "books",
    name: "Books",
    keywords: [
      "literature",
      "library",
      "study"
    ],
    skins: [
      {
        unified: "1f4da",
        native: "📚"
      }
    ],
    version: 1
  },
  notebook: {
    id: "notebook",
    name: "Notebook",
    keywords: [
      "stationery",
      "record",
      "notes",
      "paper",
      "study"
    ],
    skins: [
      {
        unified: "1f4d3",
        native: "📓"
      }
    ],
    version: 1
  },
  ledger: {
    id: "ledger",
    name: "Ledger",
    keywords: [
      "notes",
      "paper"
    ],
    skins: [
      {
        unified: "1f4d2",
        native: "📒"
      }
    ],
    version: 1
  },
  page_with_curl: {
    id: "page_with_curl",
    name: "Page with Curl",
    keywords: [
      "documents",
      "office",
      "paper"
    ],
    skins: [
      {
        unified: "1f4c3",
        native: "📃"
      }
    ],
    version: 1
  },
  scroll: {
    id: "scroll",
    name: "Scroll",
    keywords: [
      "documents",
      "ancient",
      "history",
      "paper"
    ],
    skins: [
      {
        unified: "1f4dc",
        native: "📜"
      }
    ],
    version: 1
  },
  page_facing_up: {
    id: "page_facing_up",
    name: "Page Facing Up",
    keywords: [
      "documents",
      "office",
      "paper",
      "information"
    ],
    skins: [
      {
        unified: "1f4c4",
        native: "📄"
      }
    ],
    version: 1
  },
  newspaper: {
    id: "newspaper",
    name: "Newspaper",
    keywords: [
      "press",
      "headline"
    ],
    skins: [
      {
        unified: "1f4f0",
        native: "📰"
      }
    ],
    version: 1
  },
  rolled_up_newspaper: {
    id: "rolled_up_newspaper",
    name: "Rolled-Up Newspaper",
    keywords: [
      "rolled",
      "up",
      "press",
      "headline"
    ],
    skins: [
      {
        unified: "1f5de-fe0f",
        native: "🗞️"
      }
    ],
    version: 1
  },
  bookmark_tabs: {
    id: "bookmark_tabs",
    name: "Bookmark Tabs",
    keywords: [
      "favorite",
      "save",
      "order",
      "tidy"
    ],
    skins: [
      {
        unified: "1f4d1",
        native: "📑"
      }
    ],
    version: 1
  },
  bookmark: {
    id: "bookmark",
    name: "Bookmark",
    keywords: [
      "favorite",
      "label",
      "save"
    ],
    skins: [
      {
        unified: "1f516",
        native: "🔖"
      }
    ],
    version: 1
  },
  label: {
    id: "label",
    name: "Label",
    keywords: [
      "sale",
      "tag"
    ],
    skins: [
      {
        unified: "1f3f7-fe0f",
        native: "🏷️"
      }
    ],
    version: 1
  },
  moneybag: {
    id: "moneybag",
    name: "Money Bag",
    keywords: [
      "moneybag",
      "dollar",
      "payment",
      "coins",
      "sale"
    ],
    skins: [
      {
        unified: "1f4b0",
        native: "💰"
      }
    ],
    version: 1
  },
  coin: {
    id: "coin",
    name: "Coin",
    keywords: [
      "money",
      "currency"
    ],
    skins: [
      {
        unified: "1fa99",
        native: "🪙"
      }
    ],
    version: 13
  },
  yen: {
    id: "yen",
    name: "Yen Banknote",
    keywords: [
      "money",
      "sales",
      "japanese",
      "dollar",
      "currency"
    ],
    skins: [
      {
        unified: "1f4b4",
        native: "💴"
      }
    ],
    version: 1
  },
  dollar: {
    id: "dollar",
    name: "Dollar Banknote",
    keywords: [
      "money",
      "sales",
      "bill",
      "currency"
    ],
    skins: [
      {
        unified: "1f4b5",
        native: "💵"
      }
    ],
    version: 1
  },
  euro: {
    id: "euro",
    name: "Euro Banknote",
    keywords: [
      "money",
      "sales",
      "dollar",
      "currency"
    ],
    skins: [
      {
        unified: "1f4b6",
        native: "💶"
      }
    ],
    version: 1
  },
  pound: {
    id: "pound",
    name: "Pound Banknote",
    keywords: [
      "british",
      "sterling",
      "money",
      "sales",
      "bills",
      "uk",
      "england",
      "currency"
    ],
    skins: [
      {
        unified: "1f4b7",
        native: "💷"
      }
    ],
    version: 1
  },
  money_with_wings: {
    id: "money_with_wings",
    name: "Money with Wings",
    keywords: [
      "dollar",
      "bills",
      "payment",
      "sale"
    ],
    skins: [
      {
        unified: "1f4b8",
        native: "💸"
      }
    ],
    version: 1
  },
  credit_card: {
    id: "credit_card",
    name: "Credit Card",
    keywords: [
      "money",
      "sales",
      "dollar",
      "bill",
      "payment",
      "shopping"
    ],
    skins: [
      {
        unified: "1f4b3",
        native: "💳"
      }
    ],
    version: 1
  },
  receipt: {
    id: "receipt",
    name: "Receipt",
    keywords: [
      "accounting",
      "expenses"
    ],
    skins: [
      {
        unified: "1f9fe",
        native: "🧾"
      }
    ],
    version: 11
  },
  chart: {
    id: "chart",
    name: "Chart Increasing with Yen",
    keywords: [
      "green",
      "square",
      "graph",
      "presentation",
      "stats"
    ],
    skins: [
      {
        unified: "1f4b9",
        native: "💹"
      }
    ],
    version: 1
  },
  email: {
    id: "email",
    name: "Envelope",
    keywords: [
      "email",
      "letter",
      "postal",
      "inbox",
      "communication"
    ],
    skins: [
      {
        unified: "2709-fe0f",
        native: "✉️"
      }
    ],
    version: 1
  },
  "e-mail": {
    id: "e-mail",
    name: "E-Mail",
    keywords: [
      "e",
      "mail",
      "communication",
      "inbox"
    ],
    skins: [
      {
        unified: "1f4e7",
        native: "📧"
      }
    ],
    version: 1
  },
  incoming_envelope: {
    id: "incoming_envelope",
    name: "Incoming Envelope",
    keywords: [
      "email",
      "inbox"
    ],
    skins: [
      {
        unified: "1f4e8",
        native: "📨"
      }
    ],
    version: 1
  },
  envelope_with_arrow: {
    id: "envelope_with_arrow",
    name: "Envelope with Arrow",
    keywords: [
      "email",
      "communication"
    ],
    skins: [
      {
        unified: "1f4e9",
        native: "📩"
      }
    ],
    version: 1
  },
  outbox_tray: {
    id: "outbox_tray",
    name: "Outbox Tray",
    keywords: [
      "inbox",
      "email"
    ],
    skins: [
      {
        unified: "1f4e4",
        native: "📤"
      }
    ],
    version: 1
  },
  inbox_tray: {
    id: "inbox_tray",
    name: "Inbox Tray",
    keywords: [
      "email",
      "documents"
    ],
    skins: [
      {
        unified: "1f4e5",
        native: "📥"
      }
    ],
    version: 1
  },
  package: {
    id: "package",
    name: "Package",
    keywords: [
      "mail",
      "gift",
      "cardboard",
      "box",
      "moving"
    ],
    skins: [
      {
        unified: "1f4e6",
        native: "📦"
      }
    ],
    version: 1
  },
  mailbox: {
    id: "mailbox",
    name: "Closed Mailbox with Raised Flag",
    keywords: [
      "email",
      "inbox",
      "communication"
    ],
    skins: [
      {
        unified: "1f4eb",
        native: "📫"
      }
    ],
    version: 1
  },
  mailbox_closed: {
    id: "mailbox_closed",
    name: "Closed Mailbox with Lowered Flag",
    keywords: [
      "email",
      "communication",
      "inbox"
    ],
    skins: [
      {
        unified: "1f4ea",
        native: "📪"
      }
    ],
    version: 1
  },
  mailbox_with_mail: {
    id: "mailbox_with_mail",
    name: "Open Mailbox with Raised Flag",
    keywords: [
      "mail",
      "email",
      "inbox",
      "communication"
    ],
    skins: [
      {
        unified: "1f4ec",
        native: "📬"
      }
    ],
    version: 1
  },
  mailbox_with_no_mail: {
    id: "mailbox_with_no_mail",
    name: "Open Mailbox with Lowered Flag",
    keywords: [
      "no",
      "mail",
      "email",
      "inbox"
    ],
    skins: [
      {
        unified: "1f4ed",
        native: "📭"
      }
    ],
    version: 1
  },
  postbox: {
    id: "postbox",
    name: "Postbox",
    keywords: [
      "email",
      "letter",
      "envelope"
    ],
    skins: [
      {
        unified: "1f4ee",
        native: "📮"
      }
    ],
    version: 1
  },
  ballot_box_with_ballot: {
    id: "ballot_box_with_ballot",
    name: "Ballot Box with Ballot",
    keywords: [
      "election",
      "vote"
    ],
    skins: [
      {
        unified: "1f5f3-fe0f",
        native: "🗳️"
      }
    ],
    version: 1
  },
  pencil2: {
    id: "pencil2",
    name: "Pencil",
    keywords: [
      "pencil2",
      "stationery",
      "write",
      "paper",
      "writing",
      "school",
      "study"
    ],
    skins: [
      {
        unified: "270f-fe0f",
        native: "✏️"
      }
    ],
    version: 1
  },
  black_nib: {
    id: "black_nib",
    name: "Black Nib",
    keywords: [
      "pen",
      "stationery",
      "writing",
      "write"
    ],
    skins: [
      {
        unified: "2712-fe0f",
        native: "✒️"
      }
    ],
    version: 1
  },
  lower_left_fountain_pen: {
    id: "lower_left_fountain_pen",
    name: "Fountain Pen",
    keywords: [
      "lower",
      "left",
      "stationery",
      "writing",
      "write"
    ],
    skins: [
      {
        unified: "1f58b-fe0f",
        native: "🖋️"
      }
    ],
    version: 1
  },
  lower_left_ballpoint_pen: {
    id: "lower_left_ballpoint_pen",
    name: "Pen",
    keywords: [
      "lower",
      "left",
      "ballpoint",
      "stationery",
      "writing",
      "write"
    ],
    skins: [
      {
        unified: "1f58a-fe0f",
        native: "🖊️"
      }
    ],
    version: 1
  },
  lower_left_paintbrush: {
    id: "lower_left_paintbrush",
    name: "Paintbrush",
    keywords: [
      "lower",
      "left",
      "drawing",
      "creativity",
      "art"
    ],
    skins: [
      {
        unified: "1f58c-fe0f",
        native: "🖌️"
      }
    ],
    version: 1
  },
  lower_left_crayon: {
    id: "lower_left_crayon",
    name: "Crayon",
    keywords: [
      "lower",
      "left",
      "drawing",
      "creativity"
    ],
    skins: [
      {
        unified: "1f58d-fe0f",
        native: "🖍️"
      }
    ],
    version: 1
  },
  memo: {
    id: "memo",
    name: "Memo",
    keywords: [
      "pencil",
      "write",
      "documents",
      "stationery",
      "paper",
      "writing",
      "legal",
      "exam",
      "quiz",
      "test",
      "study",
      "compose"
    ],
    skins: [
      {
        unified: "1f4dd",
        native: "📝"
      }
    ],
    version: 1
  },
  briefcase: {
    id: "briefcase",
    name: "Briefcase",
    keywords: [
      "business",
      "documents",
      "work",
      "law",
      "legal",
      "job",
      "career"
    ],
    skins: [
      {
        unified: "1f4bc",
        native: "💼"
      }
    ],
    version: 1
  },
  file_folder: {
    id: "file_folder",
    name: "File Folder",
    keywords: [
      "documents",
      "business",
      "office"
    ],
    skins: [
      {
        unified: "1f4c1",
        native: "📁"
      }
    ],
    version: 1
  },
  open_file_folder: {
    id: "open_file_folder",
    name: "Open File Folder",
    keywords: [
      "documents",
      "load"
    ],
    skins: [
      {
        unified: "1f4c2",
        native: "📂"
      }
    ],
    version: 1
  },
  card_index_dividers: {
    id: "card_index_dividers",
    name: "Card Index Dividers",
    keywords: [
      "organizing",
      "business",
      "stationery"
    ],
    skins: [
      {
        unified: "1f5c2-fe0f",
        native: "🗂️"
      }
    ],
    version: 1
  },
  date: {
    id: "date",
    name: "Calendar",
    keywords: [
      "date",
      "schedule"
    ],
    skins: [
      {
        unified: "1f4c5",
        native: "📅"
      }
    ],
    version: 1
  },
  calendar: {
    id: "calendar",
    name: "Tear-off Calendar",
    keywords: [
      "tear",
      "off",
      "schedule",
      "date",
      "planning"
    ],
    skins: [
      {
        unified: "1f4c6",
        native: "📆"
      }
    ],
    version: 1
  },
  spiral_note_pad: {
    id: "spiral_note_pad",
    name: "Spiral Notepad",
    keywords: [
      "note",
      "pad",
      "memo",
      "stationery"
    ],
    skins: [
      {
        unified: "1f5d2-fe0f",
        native: "🗒️"
      }
    ],
    version: 1
  },
  spiral_calendar_pad: {
    id: "spiral_calendar_pad",
    name: "Spiral Calendar",
    keywords: [
      "pad",
      "date",
      "schedule",
      "planning"
    ],
    skins: [
      {
        unified: "1f5d3-fe0f",
        native: "🗓️"
      }
    ],
    version: 1
  },
  card_index: {
    id: "card_index",
    name: "Card Index",
    keywords: [
      "business",
      "stationery"
    ],
    skins: [
      {
        unified: "1f4c7",
        native: "📇"
      }
    ],
    version: 1
  },
  chart_with_upwards_trend: {
    id: "chart_with_upwards_trend",
    name: "Chart Increasing",
    keywords: [
      "with",
      "upwards",
      "trend",
      "graph",
      "presentation",
      "stats",
      "recovery",
      "business",
      "economics",
      "money",
      "sales",
      "good",
      "success"
    ],
    skins: [
      {
        unified: "1f4c8",
        native: "📈"
      }
    ],
    version: 1
  },
  chart_with_downwards_trend: {
    id: "chart_with_downwards_trend",
    name: "Chart Decreasing",
    keywords: [
      "with",
      "downwards",
      "trend",
      "graph",
      "presentation",
      "stats",
      "recession",
      "business",
      "economics",
      "money",
      "sales",
      "bad",
      "failure"
    ],
    skins: [
      {
        unified: "1f4c9",
        native: "📉"
      }
    ],
    version: 1
  },
  bar_chart: {
    id: "bar_chart",
    name: "Bar Chart",
    keywords: [
      "graph",
      "presentation",
      "stats"
    ],
    skins: [
      {
        unified: "1f4ca",
        native: "📊"
      }
    ],
    version: 1
  },
  clipboard: {
    id: "clipboard",
    name: "Clipboard",
    keywords: [
      "stationery",
      "documents"
    ],
    skins: [
      {
        unified: "1f4cb",
        native: "📋"
      }
    ],
    version: 1
  },
  pushpin: {
    id: "pushpin",
    name: "Pushpin",
    keywords: [
      "stationery",
      "mark",
      "here"
    ],
    skins: [
      {
        unified: "1f4cc",
        native: "📌"
      }
    ],
    version: 1
  },
  round_pushpin: {
    id: "round_pushpin",
    name: "Round Pushpin",
    keywords: [
      "stationery",
      "location",
      "map",
      "here"
    ],
    skins: [
      {
        unified: "1f4cd",
        native: "📍"
      }
    ],
    version: 1
  },
  paperclip: {
    id: "paperclip",
    name: "Paperclip",
    keywords: [
      "documents",
      "stationery"
    ],
    skins: [
      {
        unified: "1f4ce",
        native: "📎"
      }
    ],
    version: 1
  },
  linked_paperclips: {
    id: "linked_paperclips",
    name: "Linked Paperclips",
    keywords: [
      "documents",
      "stationery"
    ],
    skins: [
      {
        unified: "1f587-fe0f",
        native: "🖇️"
      }
    ],
    version: 1
  },
  straight_ruler: {
    id: "straight_ruler",
    name: "Straight Ruler",
    keywords: [
      "stationery",
      "calculate",
      "length",
      "math",
      "school",
      "drawing",
      "architect",
      "sketch"
    ],
    skins: [
      {
        unified: "1f4cf",
        native: "📏"
      }
    ],
    version: 1
  },
  triangular_ruler: {
    id: "triangular_ruler",
    name: "Triangular Ruler",
    keywords: [
      "stationery",
      "math",
      "architect",
      "sketch"
    ],
    skins: [
      {
        unified: "1f4d0",
        native: "📐"
      }
    ],
    version: 1
  },
  scissors: {
    id: "scissors",
    name: "Scissors",
    keywords: [
      "stationery",
      "cut"
    ],
    skins: [
      {
        unified: "2702-fe0f",
        native: "✂️"
      }
    ],
    version: 1
  },
  card_file_box: {
    id: "card_file_box",
    name: "Card File Box",
    keywords: [
      "business",
      "stationery"
    ],
    skins: [
      {
        unified: "1f5c3-fe0f",
        native: "🗃️"
      }
    ],
    version: 1
  },
  file_cabinet: {
    id: "file_cabinet",
    name: "File Cabinet",
    keywords: [
      "filing",
      "organizing"
    ],
    skins: [
      {
        unified: "1f5c4-fe0f",
        native: "🗄️"
      }
    ],
    version: 1
  },
  wastebasket: {
    id: "wastebasket",
    name: "Wastebasket",
    keywords: [
      "bin",
      "trash",
      "rubbish",
      "garbage",
      "toss"
    ],
    skins: [
      {
        unified: "1f5d1-fe0f",
        native: "🗑️"
      }
    ],
    version: 1
  },
  lock: {
    id: "lock",
    name: "Lock",
    keywords: [
      "locked",
      "security",
      "password",
      "padlock"
    ],
    skins: [
      {
        unified: "1f512",
        native: "🔒"
      }
    ],
    version: 1
  },
  unlock: {
    id: "unlock",
    name: "Unlocked",
    keywords: [
      "unlock",
      "privacy",
      "security"
    ],
    skins: [
      {
        unified: "1f513",
        native: "🔓"
      }
    ],
    version: 1
  },
  lock_with_ink_pen: {
    id: "lock_with_ink_pen",
    name: "Locked with Pen",
    keywords: [
      "lock",
      "ink",
      "security",
      "secret"
    ],
    skins: [
      {
        unified: "1f50f",
        native: "🔏"
      }
    ],
    version: 1
  },
  closed_lock_with_key: {
    id: "closed_lock_with_key",
    name: "Locked with Key",
    keywords: [
      "closed",
      "lock",
      "security",
      "privacy"
    ],
    skins: [
      {
        unified: "1f510",
        native: "🔐"
      }
    ],
    version: 1
  },
  key: {
    id: "key",
    name: "Key",
    keywords: [
      "lock",
      "door",
      "password"
    ],
    skins: [
      {
        unified: "1f511",
        native: "🔑"
      }
    ],
    version: 1
  },
  old_key: {
    id: "old_key",
    name: "Old Key",
    keywords: [
      "lock",
      "door",
      "password"
    ],
    skins: [
      {
        unified: "1f5dd-fe0f",
        native: "🗝️"
      }
    ],
    version: 1
  },
  hammer: {
    id: "hammer",
    name: "Hammer",
    keywords: [
      "tools",
      "build",
      "create"
    ],
    skins: [
      {
        unified: "1f528",
        native: "🔨"
      }
    ],
    version: 1
  },
  axe: {
    id: "axe",
    name: "Axe",
    keywords: [
      "tool",
      "chop",
      "cut"
    ],
    skins: [
      {
        unified: "1fa93",
        native: "🪓"
      }
    ],
    version: 12
  },
  pick: {
    id: "pick",
    name: "Pick",
    keywords: [
      "tools",
      "dig"
    ],
    skins: [
      {
        unified: "26cf-fe0f",
        native: "⛏️"
      }
    ],
    version: 1
  },
  hammer_and_pick: {
    id: "hammer_and_pick",
    name: "Hammer and Pick",
    keywords: [
      "tools",
      "build",
      "create"
    ],
    skins: [
      {
        unified: "2692-fe0f",
        native: "⚒️"
      }
    ],
    version: 1
  },
  hammer_and_wrench: {
    id: "hammer_and_wrench",
    name: "Hammer and Wrench",
    keywords: [
      "tools",
      "build",
      "create"
    ],
    skins: [
      {
        unified: "1f6e0-fe0f",
        native: "🛠️"
      }
    ],
    version: 1
  },
  dagger_knife: {
    id: "dagger_knife",
    name: "Dagger",
    keywords: [
      "knife",
      "weapon"
    ],
    skins: [
      {
        unified: "1f5e1-fe0f",
        native: "🗡️"
      }
    ],
    version: 1
  },
  crossed_swords: {
    id: "crossed_swords",
    name: "Crossed Swords",
    keywords: [
      "weapon"
    ],
    skins: [
      {
        unified: "2694-fe0f",
        native: "⚔️"
      }
    ],
    version: 1
  },
  bomb: {
    id: "bomb",
    name: "Bomb",
    keywords: [
      "boom",
      "explode",
      "explosion",
      "terrorism"
    ],
    skins: [
      {
        unified: "1f4a3",
        native: "💣"
      }
    ],
    version: 1
  },
  boomerang: {
    id: "boomerang",
    name: "Boomerang",
    keywords: [
      "weapon"
    ],
    skins: [
      {
        unified: "1fa83",
        native: "🪃"
      }
    ],
    version: 13
  },
  bow_and_arrow: {
    id: "bow_and_arrow",
    name: "Bow and Arrow",
    keywords: [
      "sports"
    ],
    skins: [
      {
        unified: "1f3f9",
        native: "🏹"
      }
    ],
    version: 1
  },
  shield: {
    id: "shield",
    name: "Shield",
    keywords: [
      "protection",
      "security"
    ],
    skins: [
      {
        unified: "1f6e1-fe0f",
        native: "🛡️"
      }
    ],
    version: 1
  },
  carpentry_saw: {
    id: "carpentry_saw",
    name: "Carpentry Saw",
    keywords: [
      "cut",
      "chop"
    ],
    skins: [
      {
        unified: "1fa9a",
        native: "🪚"
      }
    ],
    version: 13
  },
  wrench: {
    id: "wrench",
    name: "Wrench",
    keywords: [
      "tools",
      "diy",
      "ikea",
      "fix",
      "maintainer"
    ],
    skins: [
      {
        unified: "1f527",
        native: "🔧"
      }
    ],
    version: 1
  },
  screwdriver: {
    id: "screwdriver",
    name: "Screwdriver",
    keywords: [
      "tools"
    ],
    skins: [
      {
        unified: "1fa9b",
        native: "🪛"
      }
    ],
    version: 13
  },
  nut_and_bolt: {
    id: "nut_and_bolt",
    name: "Nut and Bolt",
    keywords: [
      "handy",
      "tools",
      "fix"
    ],
    skins: [
      {
        unified: "1f529",
        native: "🔩"
      }
    ],
    version: 1
  },
  gear: {
    id: "gear",
    name: "Gear",
    keywords: [
      "cog"
    ],
    skins: [
      {
        unified: "2699-fe0f",
        native: "⚙️"
      }
    ],
    version: 1
  },
  compression: {
    id: "compression",
    name: "Clamp",
    keywords: [
      "compression",
      "tool"
    ],
    skins: [
      {
        unified: "1f5dc-fe0f",
        native: "🗜️"
      }
    ],
    version: 1
  },
  scales: {
    id: "scales",
    name: "Balance Scale",
    keywords: [
      "scales",
      "law",
      "fairness",
      "weight"
    ],
    skins: [
      {
        unified: "2696-fe0f",
        native: "⚖️"
      }
    ],
    version: 1
  },
  probing_cane: {
    id: "probing_cane",
    name: "White Cane",
    keywords: [
      "probing",
      "accessibility"
    ],
    skins: [
      {
        unified: "1f9af",
        native: "🦯"
      }
    ],
    version: 12
  },
  link: {
    id: "link",
    name: "Link",
    keywords: [
      "rings",
      "url"
    ],
    skins: [
      {
        unified: "1f517",
        native: "🔗"
      }
    ],
    version: 1
  },
  chains: {
    id: "chains",
    name: "Chains",
    keywords: [
      "lock",
      "arrest"
    ],
    skins: [
      {
        unified: "26d3-fe0f",
        native: "⛓️"
      }
    ],
    version: 1
  },
  hook: {
    id: "hook",
    name: "Hook",
    keywords: [
      "tools"
    ],
    skins: [
      {
        unified: "1fa9d",
        native: "🪝"
      }
    ],
    version: 13
  },
  toolbox: {
    id: "toolbox",
    name: "Toolbox",
    keywords: [
      "tools",
      "diy",
      "fix",
      "maintainer",
      "mechanic"
    ],
    skins: [
      {
        unified: "1f9f0",
        native: "🧰"
      }
    ],
    version: 11
  },
  magnet: {
    id: "magnet",
    name: "Magnet",
    keywords: [
      "attraction",
      "magnetic"
    ],
    skins: [
      {
        unified: "1f9f2",
        native: "🧲"
      }
    ],
    version: 11
  },
  ladder: {
    id: "ladder",
    name: "Ladder",
    keywords: [
      "tools"
    ],
    skins: [
      {
        unified: "1fa9c",
        native: "🪜"
      }
    ],
    version: 13
  },
  alembic: {
    id: "alembic",
    name: "Alembic",
    keywords: [
      "distilling",
      "science",
      "experiment",
      "chemistry"
    ],
    skins: [
      {
        unified: "2697-fe0f",
        native: "⚗️"
      }
    ],
    version: 1
  },
  test_tube: {
    id: "test_tube",
    name: "Test Tube",
    keywords: [
      "chemistry",
      "experiment",
      "lab",
      "science"
    ],
    skins: [
      {
        unified: "1f9ea",
        native: "🧪"
      }
    ],
    version: 11
  },
  petri_dish: {
    id: "petri_dish",
    name: "Petri Dish",
    keywords: [
      "bacteria",
      "biology",
      "culture",
      "lab"
    ],
    skins: [
      {
        unified: "1f9eb",
        native: "🧫"
      }
    ],
    version: 11
  },
  dna: {
    id: "dna",
    name: "Dna",
    keywords: [
      "biologist",
      "genetics",
      "life"
    ],
    skins: [
      {
        unified: "1f9ec",
        native: "🧬"
      }
    ],
    version: 11
  },
  microscope: {
    id: "microscope",
    name: "Microscope",
    keywords: [
      "laboratory",
      "experiment",
      "zoomin",
      "science",
      "study"
    ],
    skins: [
      {
        unified: "1f52c",
        native: "🔬"
      }
    ],
    version: 1
  },
  telescope: {
    id: "telescope",
    name: "Telescope",
    keywords: [
      "stars",
      "space",
      "zoom",
      "science",
      "astronomy"
    ],
    skins: [
      {
        unified: "1f52d",
        native: "🔭"
      }
    ],
    version: 1
  },
  satellite_antenna: {
    id: "satellite_antenna",
    name: "Satellite Antenna",
    keywords: [
      "communication",
      "future",
      "radio",
      "space"
    ],
    skins: [
      {
        unified: "1f4e1",
        native: "📡"
      }
    ],
    version: 1
  },
  syringe: {
    id: "syringe",
    name: "Syringe",
    keywords: [
      "health",
      "hospital",
      "drugs",
      "blood",
      "medicine",
      "needle",
      "doctor",
      "nurse"
    ],
    skins: [
      {
        unified: "1f489",
        native: "💉"
      }
    ],
    version: 1
  },
  drop_of_blood: {
    id: "drop_of_blood",
    name: "Drop of Blood",
    keywords: [
      "period",
      "hurt",
      "harm",
      "wound"
    ],
    skins: [
      {
        unified: "1fa78",
        native: "🩸"
      }
    ],
    version: 12
  },
  pill: {
    id: "pill",
    name: "Pill",
    keywords: [
      "health",
      "medicine",
      "doctor",
      "pharmacy",
      "drug"
    ],
    skins: [
      {
        unified: "1f48a",
        native: "💊"
      }
    ],
    version: 1
  },
  adhesive_bandage: {
    id: "adhesive_bandage",
    name: "Adhesive Bandage",
    keywords: [
      "heal"
    ],
    skins: [
      {
        unified: "1fa79",
        native: "🩹"
      }
    ],
    version: 12
  },
  crutch: {
    id: "crutch",
    name: "Crutch",
    keywords: [
      "accessibility",
      "assist"
    ],
    skins: [
      {
        unified: "1fa7c",
        native: "🩼"
      }
    ],
    version: 14
  },
  stethoscope: {
    id: "stethoscope",
    name: "Stethoscope",
    keywords: [
      "health"
    ],
    skins: [
      {
        unified: "1fa7a",
        native: "🩺"
      }
    ],
    version: 12
  },
  "x-ray": {
    id: "x-ray",
    name: "X-Ray",
    keywords: [
      "x",
      "ray",
      "skeleton",
      "medicine"
    ],
    skins: [
      {
        unified: "1fa7b",
        native: "🩻"
      }
    ],
    version: 14
  },
  door: {
    id: "door",
    name: "Door",
    keywords: [
      "house",
      "entry",
      "exit"
    ],
    skins: [
      {
        unified: "1f6aa",
        native: "🚪"
      }
    ],
    version: 1
  },
  elevator: {
    id: "elevator",
    name: "Elevator",
    keywords: [
      "lift"
    ],
    skins: [
      {
        unified: "1f6d7",
        native: "🛗"
      }
    ],
    version: 13
  },
  mirror: {
    id: "mirror",
    name: "Mirror",
    keywords: [
      "reflection"
    ],
    skins: [
      {
        unified: "1fa9e",
        native: "🪞"
      }
    ],
    version: 13
  },
  window: {
    id: "window",
    name: "Window",
    keywords: [
      "scenery"
    ],
    skins: [
      {
        unified: "1fa9f",
        native: "🪟"
      }
    ],
    version: 13
  },
  bed: {
    id: "bed",
    name: "Bed",
    keywords: [
      "sleep",
      "rest"
    ],
    skins: [
      {
        unified: "1f6cf-fe0f",
        native: "🛏️"
      }
    ],
    version: 1
  },
  couch_and_lamp: {
    id: "couch_and_lamp",
    name: "Couch and Lamp",
    keywords: [
      "read",
      "chill"
    ],
    skins: [
      {
        unified: "1f6cb-fe0f",
        native: "🛋️"
      }
    ],
    version: 1
  },
  chair: {
    id: "chair",
    name: "Chair",
    keywords: [
      "sit",
      "furniture"
    ],
    skins: [
      {
        unified: "1fa91",
        native: "🪑"
      }
    ],
    version: 12
  },
  toilet: {
    id: "toilet",
    name: "Toilet",
    keywords: [
      "restroom",
      "wc",
      "washroom",
      "bathroom",
      "potty"
    ],
    skins: [
      {
        unified: "1f6bd",
        native: "🚽"
      }
    ],
    version: 1
  },
  plunger: {
    id: "plunger",
    name: "Plunger",
    keywords: [
      "toilet"
    ],
    skins: [
      {
        unified: "1faa0",
        native: "🪠"
      }
    ],
    version: 13
  },
  shower: {
    id: "shower",
    name: "Shower",
    keywords: [
      "clean",
      "water",
      "bathroom"
    ],
    skins: [
      {
        unified: "1f6bf",
        native: "🚿"
      }
    ],
    version: 1
  },
  bathtub: {
    id: "bathtub",
    name: "Bathtub",
    keywords: [
      "clean",
      "shower",
      "bathroom"
    ],
    skins: [
      {
        unified: "1f6c1",
        native: "🛁"
      }
    ],
    version: 1
  },
  mouse_trap: {
    id: "mouse_trap",
    name: "Mouse Trap",
    keywords: [
      "cheese"
    ],
    skins: [
      {
        unified: "1faa4",
        native: "🪤"
      }
    ],
    version: 13
  },
  razor: {
    id: "razor",
    name: "Razor",
    keywords: [
      "cut"
    ],
    skins: [
      {
        unified: "1fa92",
        native: "🪒"
      }
    ],
    version: 12
  },
  lotion_bottle: {
    id: "lotion_bottle",
    name: "Lotion Bottle",
    keywords: [
      "moisturizer",
      "sunscreen"
    ],
    skins: [
      {
        unified: "1f9f4",
        native: "🧴"
      }
    ],
    version: 11
  },
  safety_pin: {
    id: "safety_pin",
    name: "Safety Pin",
    keywords: [
      "diaper"
    ],
    skins: [
      {
        unified: "1f9f7",
        native: "🧷"
      }
    ],
    version: 11
  },
  broom: {
    id: "broom",
    name: "Broom",
    keywords: [
      "cleaning",
      "sweeping",
      "witch"
    ],
    skins: [
      {
        unified: "1f9f9",
        native: "🧹"
      }
    ],
    version: 11
  },
  basket: {
    id: "basket",
    name: "Basket",
    keywords: [
      "laundry"
    ],
    skins: [
      {
        unified: "1f9fa",
        native: "🧺"
      }
    ],
    version: 11
  },
  roll_of_paper: {
    id: "roll_of_paper",
    name: "Roll of Paper",
    keywords: [],
    skins: [
      {
        unified: "1f9fb",
        native: "🧻"
      }
    ],
    version: 11
  },
  bucket: {
    id: "bucket",
    name: "Bucket",
    keywords: [
      "water",
      "container"
    ],
    skins: [
      {
        unified: "1faa3",
        native: "🪣"
      }
    ],
    version: 13
  },
  soap: {
    id: "soap",
    name: "Soap",
    keywords: [
      "bar",
      "bathing",
      "cleaning",
      "lather"
    ],
    skins: [
      {
        unified: "1f9fc",
        native: "🧼"
      }
    ],
    version: 11
  },
  bubbles: {
    id: "bubbles",
    name: "Bubbles",
    keywords: [
      "soap",
      "fun",
      "carbonation",
      "sparkling"
    ],
    skins: [
      {
        unified: "1fae7",
        native: "🫧"
      }
    ],
    version: 14
  },
  toothbrush: {
    id: "toothbrush",
    name: "Toothbrush",
    keywords: [
      "hygiene",
      "dental"
    ],
    skins: [
      {
        unified: "1faa5",
        native: "🪥"
      }
    ],
    version: 13
  },
  sponge: {
    id: "sponge",
    name: "Sponge",
    keywords: [
      "absorbing",
      "cleaning",
      "porous"
    ],
    skins: [
      {
        unified: "1f9fd",
        native: "🧽"
      }
    ],
    version: 11
  },
  fire_extinguisher: {
    id: "fire_extinguisher",
    name: "Fire Extinguisher",
    keywords: [
      "quench"
    ],
    skins: [
      {
        unified: "1f9ef",
        native: "🧯"
      }
    ],
    version: 11
  },
  shopping_trolley: {
    id: "shopping_trolley",
    name: "Shopping Cart",
    keywords: [
      "trolley"
    ],
    skins: [
      {
        unified: "1f6d2",
        native: "🛒"
      }
    ],
    version: 3
  },
  smoking: {
    id: "smoking",
    name: "Cigarette",
    keywords: [
      "smoking",
      "kills",
      "tobacco",
      "joint",
      "smoke"
    ],
    skins: [
      {
        unified: "1f6ac",
        native: "🚬"
      }
    ],
    version: 1
  },
  coffin: {
    id: "coffin",
    name: "Coffin",
    keywords: [
      "vampire",
      "dead",
      "die",
      "death",
      "rip",
      "graveyard",
      "cemetery",
      "casket",
      "funeral",
      "box"
    ],
    skins: [
      {
        unified: "26b0-fe0f",
        native: "⚰️"
      }
    ],
    version: 1
  },
  headstone: {
    id: "headstone",
    name: "Headstone",
    keywords: [
      "death",
      "rip",
      "grave"
    ],
    skins: [
      {
        unified: "1faa6",
        native: "🪦"
      }
    ],
    version: 13
  },
  funeral_urn: {
    id: "funeral_urn",
    name: "Funeral Urn",
    keywords: [
      "dead",
      "die",
      "death",
      "rip",
      "ashes"
    ],
    skins: [
      {
        unified: "26b1-fe0f",
        native: "⚱️"
      }
    ],
    version: 1
  },
  nazar_amulet: {
    id: "nazar_amulet",
    name: "Nazar Amulet",
    keywords: [
      "bead",
      "charm"
    ],
    skins: [
      {
        unified: "1f9ff",
        native: "🧿"
      }
    ],
    version: 11
  },
  hamsa: {
    id: "hamsa",
    name: "Hamsa",
    keywords: [
      "religion",
      "protection"
    ],
    skins: [
      {
        unified: "1faac",
        native: "🪬"
      }
    ],
    version: 14
  },
  moyai: {
    id: "moyai",
    name: "Moai",
    keywords: [
      "moyai",
      "rock",
      "easter",
      "island"
    ],
    skins: [
      {
        unified: "1f5ff",
        native: "🗿"
      }
    ],
    version: 1
  },
  placard: {
    id: "placard",
    name: "Placard",
    keywords: [
      "announcement"
    ],
    skins: [
      {
        unified: "1faa7",
        native: "🪧"
      }
    ],
    version: 13
  },
  identification_card: {
    id: "identification_card",
    name: "Identification Card",
    keywords: [
      "document"
    ],
    skins: [
      {
        unified: "1faaa",
        native: "🪪"
      }
    ],
    version: 14
  },
  atm: {
    id: "atm",
    name: "Atm Sign",
    keywords: [
      "money",
      "sales",
      "cash",
      "blue",
      "square",
      "payment",
      "bank"
    ],
    skins: [
      {
        unified: "1f3e7",
        native: "🏧"
      }
    ],
    version: 1
  },
  put_litter_in_its_place: {
    id: "put_litter_in_its_place",
    name: "Litter in Bin Sign",
    keywords: [
      "put",
      "its",
      "place",
      "blue",
      "square",
      "human",
      "info"
    ],
    skins: [
      {
        unified: "1f6ae",
        native: "🚮"
      }
    ],
    version: 1
  },
  potable_water: {
    id: "potable_water",
    name: "Potable Water",
    keywords: [
      "blue",
      "square",
      "liquid",
      "restroom",
      "cleaning",
      "faucet"
    ],
    skins: [
      {
        unified: "1f6b0",
        native: "🚰"
      }
    ],
    version: 1
  },
  wheelchair: {
    id: "wheelchair",
    name: "Wheelchair Symbol",
    keywords: [
      "blue",
      "square",
      "disabled",
      "accessibility"
    ],
    skins: [
      {
        unified: "267f",
        native: "♿"
      }
    ],
    version: 1
  },
  mens: {
    id: "mens",
    name: "Men’s Room",
    keywords: [
      "mens",
      "men",
      "s",
      "toilet",
      "restroom",
      "wc",
      "blue",
      "square",
      "gender",
      "male"
    ],
    skins: [
      {
        unified: "1f6b9",
        native: "🚹"
      }
    ],
    version: 1
  },
  womens: {
    id: "womens",
    name: "Women’s Room",
    keywords: [
      "womens",
      "women",
      "s",
      "purple",
      "square",
      "woman",
      "female",
      "toilet",
      "loo",
      "restroom",
      "gender"
    ],
    skins: [
      {
        unified: "1f6ba",
        native: "🚺"
      }
    ],
    version: 1
  },
  restroom: {
    id: "restroom",
    name: "Restroom",
    keywords: [
      "blue",
      "square",
      "toilet",
      "refresh",
      "wc",
      "gender"
    ],
    skins: [
      {
        unified: "1f6bb",
        native: "🚻"
      }
    ],
    version: 1
  },
  baby_symbol: {
    id: "baby_symbol",
    name: "Baby Symbol",
    keywords: [
      "orange",
      "square",
      "child"
    ],
    skins: [
      {
        unified: "1f6bc",
        native: "🚼"
      }
    ],
    version: 1
  },
  wc: {
    id: "wc",
    name: "Water Closet",
    keywords: [
      "wc",
      "toilet",
      "restroom",
      "blue",
      "square"
    ],
    skins: [
      {
        unified: "1f6be",
        native: "🚾"
      }
    ],
    version: 1
  },
  passport_control: {
    id: "passport_control",
    name: "Passport Control",
    keywords: [
      "custom",
      "blue",
      "square"
    ],
    skins: [
      {
        unified: "1f6c2",
        native: "🛂"
      }
    ],
    version: 1
  },
  customs: {
    id: "customs",
    name: "Customs",
    keywords: [
      "passport",
      "border",
      "blue",
      "square"
    ],
    skins: [
      {
        unified: "1f6c3",
        native: "🛃"
      }
    ],
    version: 1
  },
  baggage_claim: {
    id: "baggage_claim",
    name: "Baggage Claim",
    keywords: [
      "blue",
      "square",
      "airport",
      "transport"
    ],
    skins: [
      {
        unified: "1f6c4",
        native: "🛄"
      }
    ],
    version: 1
  },
  left_luggage: {
    id: "left_luggage",
    name: "Left Luggage",
    keywords: [
      "blue",
      "square",
      "travel"
    ],
    skins: [
      {
        unified: "1f6c5",
        native: "🛅"
      }
    ],
    version: 1
  },
  warning: {
    id: "warning",
    name: "Warning",
    keywords: [
      "exclamation",
      "wip",
      "alert",
      "error",
      "problem",
      "issue"
    ],
    skins: [
      {
        unified: "26a0-fe0f",
        native: "⚠️"
      }
    ],
    version: 1
  },
  children_crossing: {
    id: "children_crossing",
    name: "Children Crossing",
    keywords: [
      "school",
      "warning",
      "danger",
      "sign",
      "driving",
      "yellow",
      "diamond"
    ],
    skins: [
      {
        unified: "1f6b8",
        native: "🚸"
      }
    ],
    version: 1
  },
  no_entry: {
    id: "no_entry",
    name: "No Entry",
    keywords: [
      "limit",
      "security",
      "privacy",
      "bad",
      "denied",
      "stop",
      "circle"
    ],
    skins: [
      {
        unified: "26d4",
        native: "⛔"
      }
    ],
    version: 1
  },
  no_entry_sign: {
    id: "no_entry_sign",
    name: "Prohibited",
    keywords: [
      "no",
      "entry",
      "sign",
      "forbid",
      "stop",
      "limit",
      "denied",
      "disallow",
      "circle"
    ],
    skins: [
      {
        unified: "1f6ab",
        native: "🚫"
      }
    ],
    version: 1
  },
  no_bicycles: {
    id: "no_bicycles",
    name: "No Bicycles",
    keywords: [
      "cyclist",
      "prohibited",
      "circle"
    ],
    skins: [
      {
        unified: "1f6b3",
        native: "🚳"
      }
    ],
    version: 1
  },
  no_smoking: {
    id: "no_smoking",
    name: "No Smoking",
    keywords: [
      "cigarette",
      "blue",
      "square",
      "smell",
      "smoke"
    ],
    skins: [
      {
        unified: "1f6ad",
        native: "🚭"
      }
    ],
    version: 1
  },
  do_not_litter: {
    id: "do_not_litter",
    name: "No Littering",
    keywords: [
      "do",
      "not",
      "litter",
      "trash",
      "bin",
      "garbage",
      "circle"
    ],
    skins: [
      {
        unified: "1f6af",
        native: "🚯"
      }
    ],
    version: 1
  },
  "non-potable_water": {
    id: "non-potable_water",
    name: "Non-Potable Water",
    keywords: [
      "non",
      "potable",
      "drink",
      "faucet",
      "tap",
      "circle"
    ],
    skins: [
      {
        unified: "1f6b1",
        native: "🚱"
      }
    ],
    version: 1
  },
  no_pedestrians: {
    id: "no_pedestrians",
    name: "No Pedestrians",
    keywords: [
      "rules",
      "crossing",
      "walking",
      "circle"
    ],
    skins: [
      {
        unified: "1f6b7",
        native: "🚷"
      }
    ],
    version: 1
  },
  no_mobile_phones: {
    id: "no_mobile_phones",
    name: "No Mobile Phones",
    keywords: [
      "iphone",
      "mute",
      "circle"
    ],
    skins: [
      {
        unified: "1f4f5",
        native: "📵"
      }
    ],
    version: 1
  },
  underage: {
    id: "underage",
    name: "No One Under Eighteen",
    keywords: [
      "underage",
      "18",
      "drink",
      "pub",
      "night",
      "minor",
      "circle"
    ],
    skins: [
      {
        unified: "1f51e",
        native: "🔞"
      }
    ],
    version: 1
  },
  radioactive_sign: {
    id: "radioactive_sign",
    name: "Radioactive",
    keywords: [
      "sign",
      "nuclear",
      "danger"
    ],
    skins: [
      {
        unified: "2622-fe0f",
        native: "☢️"
      }
    ],
    version: 1
  },
  biohazard_sign: {
    id: "biohazard_sign",
    name: "Biohazard",
    keywords: [
      "sign",
      "danger"
    ],
    skins: [
      {
        unified: "2623-fe0f",
        native: "☣️"
      }
    ],
    version: 1
  },
  arrow_up: {
    id: "arrow_up",
    name: "Up Arrow",
    keywords: [
      "blue",
      "square",
      "continue",
      "top",
      "direction"
    ],
    skins: [
      {
        unified: "2b06-fe0f",
        native: "⬆️"
      }
    ],
    version: 1
  },
  arrow_upper_right: {
    id: "arrow_upper_right",
    name: "Up-Right Arrow",
    keywords: [
      "upper",
      "right",
      "up",
      "blue",
      "square",
      "point",
      "direction",
      "diagonal",
      "northeast"
    ],
    skins: [
      {
        unified: "2197-fe0f",
        native: "↗️"
      }
    ],
    version: 1
  },
  arrow_right: {
    id: "arrow_right",
    name: "Right Arrow",
    keywords: [
      "blue",
      "square",
      "next"
    ],
    skins: [
      {
        unified: "27a1-fe0f",
        native: "➡️"
      }
    ],
    version: 1
  },
  arrow_lower_right: {
    id: "arrow_lower_right",
    name: "South East Arrow",
    keywords: [
      "lower",
      "right",
      "down",
      "blue",
      "square",
      "direction",
      "diagonal",
      "southeast"
    ],
    skins: [
      {
        unified: "2198-fe0f",
        native: "↘️"
      }
    ],
    version: 1
  },
  arrow_down: {
    id: "arrow_down",
    name: "Down Arrow",
    keywords: [
      "blue",
      "square",
      "direction",
      "bottom"
    ],
    skins: [
      {
        unified: "2b07-fe0f",
        native: "⬇️"
      }
    ],
    version: 1
  },
  arrow_lower_left: {
    id: "arrow_lower_left",
    name: "Down-Left Arrow",
    keywords: [
      "lower",
      "left",
      "down",
      "blue",
      "square",
      "direction",
      "diagonal",
      "southwest"
    ],
    skins: [
      {
        unified: "2199-fe0f",
        native: "↙️"
      }
    ],
    version: 1
  },
  arrow_left: {
    id: "arrow_left",
    name: "Left Arrow",
    keywords: [
      "blue",
      "square",
      "previous",
      "back"
    ],
    skins: [
      {
        unified: "2b05-fe0f",
        native: "⬅️"
      }
    ],
    version: 1
  },
  arrow_upper_left: {
    id: "arrow_upper_left",
    name: "Up-Left Arrow",
    keywords: [
      "upper",
      "left",
      "up",
      "blue",
      "square",
      "point",
      "direction",
      "diagonal",
      "northwest"
    ],
    skins: [
      {
        unified: "2196-fe0f",
        native: "↖️"
      }
    ],
    version: 1
  },
  arrow_up_down: {
    id: "arrow_up_down",
    name: "Up Down Arrow",
    keywords: [
      "blue",
      "square",
      "direction",
      "way",
      "vertical"
    ],
    skins: [
      {
        unified: "2195-fe0f",
        native: "↕️"
      }
    ],
    version: 1
  },
  left_right_arrow: {
    id: "left_right_arrow",
    name: "Left Right Arrow",
    keywords: [
      "shape",
      "direction",
      "horizontal",
      "sideways"
    ],
    skins: [
      {
        unified: "2194-fe0f",
        native: "↔️"
      }
    ],
    version: 1
  },
  leftwards_arrow_with_hook: {
    id: "leftwards_arrow_with_hook",
    name: "Right Arrow Curving Left",
    keywords: [
      "leftwards",
      "with",
      "hook",
      "back",
      "return",
      "blue",
      "square",
      "undo",
      "enter"
    ],
    skins: [
      {
        unified: "21a9-fe0f",
        native: "↩️"
      }
    ],
    version: 1
  },
  arrow_right_hook: {
    id: "arrow_right_hook",
    name: "Left Arrow Curving Right",
    keywords: [
      "hook",
      "blue",
      "square",
      "return",
      "rotate",
      "direction"
    ],
    skins: [
      {
        unified: "21aa-fe0f",
        native: "↪️"
      }
    ],
    version: 1
  },
  arrow_heading_up: {
    id: "arrow_heading_up",
    name: "Right Arrow Curving Up",
    keywords: [
      "heading",
      "blue",
      "square",
      "direction",
      "top"
    ],
    skins: [
      {
        unified: "2934-fe0f",
        native: "⤴️"
      }
    ],
    version: 1
  },
  arrow_heading_down: {
    id: "arrow_heading_down",
    name: "Right Arrow Curving Down",
    keywords: [
      "heading",
      "blue",
      "square",
      "direction",
      "bottom"
    ],
    skins: [
      {
        unified: "2935-fe0f",
        native: "⤵️"
      }
    ],
    version: 1
  },
  arrows_clockwise: {
    id: "arrows_clockwise",
    name: "Clockwise Vertical Arrows",
    keywords: [
      "sync",
      "cycle",
      "round",
      "repeat"
    ],
    skins: [
      {
        unified: "1f503",
        native: "🔃"
      }
    ],
    version: 1
  },
  arrows_counterclockwise: {
    id: "arrows_counterclockwise",
    name: "Counterclockwise Arrows Button",
    keywords: [
      "blue",
      "square",
      "sync",
      "cycle"
    ],
    skins: [
      {
        unified: "1f504",
        native: "🔄"
      }
    ],
    version: 1
  },
  back: {
    id: "back",
    name: "Back Arrow",
    keywords: [
      "words",
      "return"
    ],
    skins: [
      {
        unified: "1f519",
        native: "🔙"
      }
    ],
    version: 1
  },
  end: {
    id: "end",
    name: "End Arrow",
    keywords: [
      "words"
    ],
    skins: [
      {
        unified: "1f51a",
        native: "🔚"
      }
    ],
    version: 1
  },
  on: {
    id: "on",
    name: "On! Arrow",
    keywords: [
      "on",
      "words"
    ],
    skins: [
      {
        unified: "1f51b",
        native: "🔛"
      }
    ],
    version: 1
  },
  soon: {
    id: "soon",
    name: "Soon Arrow",
    keywords: [
      "words"
    ],
    skins: [
      {
        unified: "1f51c",
        native: "🔜"
      }
    ],
    version: 1
  },
  top: {
    id: "top",
    name: "Top Arrow",
    keywords: [
      "words",
      "blue",
      "square"
    ],
    skins: [
      {
        unified: "1f51d",
        native: "🔝"
      }
    ],
    version: 1
  },
  place_of_worship: {
    id: "place_of_worship",
    name: "Place of Worship",
    keywords: [
      "religion",
      "church",
      "temple",
      "prayer"
    ],
    skins: [
      {
        unified: "1f6d0",
        native: "🛐"
      }
    ],
    version: 1
  },
  atom_symbol: {
    id: "atom_symbol",
    name: "Atom Symbol",
    keywords: [
      "science",
      "physics",
      "chemistry"
    ],
    skins: [
      {
        unified: "269b-fe0f",
        native: "⚛️"
      }
    ],
    version: 1
  },
  om_symbol: {
    id: "om_symbol",
    name: "Om",
    keywords: [
      "symbol",
      "hinduism",
      "buddhism",
      "sikhism",
      "jainism"
    ],
    skins: [
      {
        unified: "1f549-fe0f",
        native: "🕉️"
      }
    ],
    version: 1
  },
  star_of_david: {
    id: "star_of_david",
    name: "Star of David",
    keywords: [
      "judaism"
    ],
    skins: [
      {
        unified: "2721-fe0f",
        native: "✡️"
      }
    ],
    version: 1
  },
  wheel_of_dharma: {
    id: "wheel_of_dharma",
    name: "Wheel of Dharma",
    keywords: [
      "hinduism",
      "buddhism",
      "sikhism",
      "jainism"
    ],
    skins: [
      {
        unified: "2638-fe0f",
        native: "☸️"
      }
    ],
    version: 1
  },
  yin_yang: {
    id: "yin_yang",
    name: "Yin Yang",
    keywords: [
      "balance"
    ],
    skins: [
      {
        unified: "262f-fe0f",
        native: "☯️"
      }
    ],
    version: 1
  },
  latin_cross: {
    id: "latin_cross",
    name: "Latin Cross",
    keywords: [
      "christianity"
    ],
    skins: [
      {
        unified: "271d-fe0f",
        native: "✝️"
      }
    ],
    version: 1
  },
  orthodox_cross: {
    id: "orthodox_cross",
    name: "Orthodox Cross",
    keywords: [
      "suppedaneum",
      "religion"
    ],
    skins: [
      {
        unified: "2626-fe0f",
        native: "☦️"
      }
    ],
    version: 1
  },
  star_and_crescent: {
    id: "star_and_crescent",
    name: "Star and Crescent",
    keywords: [
      "islam"
    ],
    skins: [
      {
        unified: "262a-fe0f",
        native: "☪️"
      }
    ],
    version: 1
  },
  peace_symbol: {
    id: "peace_symbol",
    name: "Peace Symbol",
    keywords: [
      "hippie"
    ],
    skins: [
      {
        unified: "262e-fe0f",
        native: "☮️"
      }
    ],
    version: 1
  },
  menorah_with_nine_branches: {
    id: "menorah_with_nine_branches",
    name: "Menorah",
    keywords: [
      "with",
      "nine",
      "branches",
      "hanukkah",
      "candles",
      "jewish"
    ],
    skins: [
      {
        unified: "1f54e",
        native: "🕎"
      }
    ],
    version: 1
  },
  six_pointed_star: {
    id: "six_pointed_star",
    name: "Dotted Six-Pointed Star",
    keywords: [
      "six",
      "pointed",
      "purple",
      "square",
      "religion",
      "jewish",
      "hexagram"
    ],
    skins: [
      {
        unified: "1f52f",
        native: "🔯"
      }
    ],
    version: 1
  },
  khanda: {
    id: "khanda",
    name: "Khanda",
    keywords: [
      "Sikhism",
      "religion"
    ],
    skins: [
      {
        unified: "1faaf",
        native: "🪯"
      }
    ],
    version: 15
  },
  aries: {
    id: "aries",
    name: "Aries",
    keywords: [
      "sign",
      "purple",
      "square",
      "zodiac",
      "astrology"
    ],
    skins: [
      {
        unified: "2648",
        native: "♈"
      }
    ],
    version: 1
  },
  taurus: {
    id: "taurus",
    name: "Taurus",
    keywords: [
      "purple",
      "square",
      "sign",
      "zodiac",
      "astrology"
    ],
    skins: [
      {
        unified: "2649",
        native: "♉"
      }
    ],
    version: 1
  },
  gemini: {
    id: "gemini",
    name: "Gemini",
    keywords: [
      "sign",
      "zodiac",
      "purple",
      "square",
      "astrology"
    ],
    skins: [
      {
        unified: "264a",
        native: "♊"
      }
    ],
    version: 1
  },
  cancer: {
    id: "cancer",
    name: "Cancer",
    keywords: [
      "sign",
      "zodiac",
      "purple",
      "square",
      "astrology"
    ],
    skins: [
      {
        unified: "264b",
        native: "♋"
      }
    ],
    version: 1
  },
  leo: {
    id: "leo",
    name: "Leo",
    keywords: [
      "sign",
      "purple",
      "square",
      "zodiac",
      "astrology"
    ],
    skins: [
      {
        unified: "264c",
        native: "♌"
      }
    ],
    version: 1
  },
  virgo: {
    id: "virgo",
    name: "Virgo",
    keywords: [
      "sign",
      "zodiac",
      "purple",
      "square",
      "astrology"
    ],
    skins: [
      {
        unified: "264d",
        native: "♍"
      }
    ],
    version: 1
  },
  libra: {
    id: "libra",
    name: "Libra",
    keywords: [
      "sign",
      "purple",
      "square",
      "zodiac",
      "astrology"
    ],
    skins: [
      {
        unified: "264e",
        native: "♎"
      }
    ],
    version: 1
  },
  scorpius: {
    id: "scorpius",
    name: "Scorpio",
    keywords: [
      "scorpius",
      "sign",
      "zodiac",
      "purple",
      "square",
      "astrology"
    ],
    skins: [
      {
        unified: "264f",
        native: "♏"
      }
    ],
    version: 1
  },
  sagittarius: {
    id: "sagittarius",
    name: "Sagittarius",
    keywords: [
      "sign",
      "zodiac",
      "purple",
      "square",
      "astrology"
    ],
    skins: [
      {
        unified: "2650",
        native: "♐"
      }
    ],
    version: 1
  },
  capricorn: {
    id: "capricorn",
    name: "Capricorn",
    keywords: [
      "sign",
      "zodiac",
      "purple",
      "square",
      "astrology"
    ],
    skins: [
      {
        unified: "2651",
        native: "♑"
      }
    ],
    version: 1
  },
  aquarius: {
    id: "aquarius",
    name: "Aquarius",
    keywords: [
      "sign",
      "purple",
      "square",
      "zodiac",
      "astrology"
    ],
    skins: [
      {
        unified: "2652",
        native: "♒"
      }
    ],
    version: 1
  },
  pisces: {
    id: "pisces",
    name: "Pisces",
    keywords: [
      "purple",
      "square",
      "sign",
      "zodiac",
      "astrology"
    ],
    skins: [
      {
        unified: "2653",
        native: "♓"
      }
    ],
    version: 1
  },
  ophiuchus: {
    id: "ophiuchus",
    name: "Ophiuchus",
    keywords: [
      "sign",
      "purple",
      "square",
      "constellation",
      "astrology"
    ],
    skins: [
      {
        unified: "26ce",
        native: "⛎"
      }
    ],
    version: 1
  },
  twisted_rightwards_arrows: {
    id: "twisted_rightwards_arrows",
    name: "Shuffle Tracks Button",
    keywords: [
      "twisted",
      "rightwards",
      "arrows",
      "blue",
      "square",
      "music",
      "random"
    ],
    skins: [
      {
        unified: "1f500",
        native: "🔀"
      }
    ],
    version: 1
  },
  repeat: {
    id: "repeat",
    name: "Repeat Button",
    keywords: [
      "loop",
      "record"
    ],
    skins: [
      {
        unified: "1f501",
        native: "🔁"
      }
    ],
    version: 1
  },
  repeat_one: {
    id: "repeat_one",
    name: "Repeat Single Button",
    keywords: [
      "one",
      "blue",
      "square",
      "loop"
    ],
    skins: [
      {
        unified: "1f502",
        native: "🔂"
      }
    ],
    version: 1
  },
  arrow_forward: {
    id: "arrow_forward",
    name: "Play Button",
    keywords: [
      "arrow",
      "forward",
      "blue",
      "square",
      "right",
      "direction"
    ],
    skins: [
      {
        unified: "25b6-fe0f",
        native: "▶️"
      }
    ],
    version: 1
  },
  fast_forward: {
    id: "fast_forward",
    name: "Fast-Forward Button",
    keywords: [
      "fast",
      "forward",
      "blue",
      "square",
      "play",
      "speed",
      "continue"
    ],
    skins: [
      {
        unified: "23e9",
        native: "⏩"
      }
    ],
    version: 1
  },
  black_right_pointing_double_triangle_with_vertical_bar: {
    id: "black_right_pointing_double_triangle_with_vertical_bar",
    name: "Next Track Button",
    keywords: [
      "black",
      "right",
      "pointing",
      "double",
      "triangle",
      "with",
      "vertical",
      "bar",
      "forward",
      "blue",
      "square"
    ],
    skins: [
      {
        unified: "23ed-fe0f",
        native: "⏭️"
      }
    ],
    version: 1
  },
  black_right_pointing_triangle_with_double_vertical_bar: {
    id: "black_right_pointing_triangle_with_double_vertical_bar",
    name: "Play or Pause Button",
    keywords: [
      "black",
      "right",
      "pointing",
      "triangle",
      "with",
      "double",
      "vertical",
      "bar",
      "blue",
      "square"
    ],
    skins: [
      {
        unified: "23ef-fe0f",
        native: "⏯️"
      }
    ],
    version: 1
  },
  arrow_backward: {
    id: "arrow_backward",
    name: "Reverse Button",
    keywords: [
      "arrow",
      "backward",
      "blue",
      "square",
      "left",
      "direction"
    ],
    skins: [
      {
        unified: "25c0-fe0f",
        native: "◀️"
      }
    ],
    version: 1
  },
  rewind: {
    id: "rewind",
    name: "Fast Reverse Button",
    keywords: [
      "rewind",
      "play",
      "blue",
      "square"
    ],
    skins: [
      {
        unified: "23ea",
        native: "⏪"
      }
    ],
    version: 1
  },
  black_left_pointing_double_triangle_with_vertical_bar: {
    id: "black_left_pointing_double_triangle_with_vertical_bar",
    name: "Last Track Button",
    keywords: [
      "black",
      "left",
      "pointing",
      "double",
      "triangle",
      "with",
      "vertical",
      "bar",
      "backward"
    ],
    skins: [
      {
        unified: "23ee-fe0f",
        native: "⏮️"
      }
    ],
    version: 1
  },
  arrow_up_small: {
    id: "arrow_up_small",
    name: "Upwards Button",
    keywords: [
      "arrow",
      "up",
      "small",
      "blue",
      "square",
      "triangle",
      "direction",
      "point",
      "forward",
      "top"
    ],
    skins: [
      {
        unified: "1f53c",
        native: "🔼"
      }
    ],
    version: 1
  },
  arrow_double_up: {
    id: "arrow_double_up",
    name: "Fast Up Button",
    keywords: [
      "arrow",
      "double",
      "blue",
      "square",
      "direction",
      "top"
    ],
    skins: [
      {
        unified: "23eb",
        native: "⏫"
      }
    ],
    version: 1
  },
  arrow_down_small: {
    id: "arrow_down_small",
    name: "Downwards Button",
    keywords: [
      "arrow",
      "down",
      "small",
      "blue",
      "square",
      "direction",
      "bottom"
    ],
    skins: [
      {
        unified: "1f53d",
        native: "🔽"
      }
    ],
    version: 1
  },
  arrow_double_down: {
    id: "arrow_double_down",
    name: "Fast Down Button",
    keywords: [
      "arrow",
      "double",
      "blue",
      "square",
      "direction",
      "bottom"
    ],
    skins: [
      {
        unified: "23ec",
        native: "⏬"
      }
    ],
    version: 1
  },
  double_vertical_bar: {
    id: "double_vertical_bar",
    name: "Pause Button",
    keywords: [
      "double",
      "vertical",
      "bar",
      "blue",
      "square"
    ],
    skins: [
      {
        unified: "23f8-fe0f",
        native: "⏸️"
      }
    ],
    version: 1
  },
  black_square_for_stop: {
    id: "black_square_for_stop",
    name: "Stop Button",
    keywords: [
      "black",
      "square",
      "for",
      "blue"
    ],
    skins: [
      {
        unified: "23f9-fe0f",
        native: "⏹️"
      }
    ],
    version: 1
  },
  black_circle_for_record: {
    id: "black_circle_for_record",
    name: "Record Button",
    keywords: [
      "black",
      "circle",
      "for",
      "blue",
      "square"
    ],
    skins: [
      {
        unified: "23fa-fe0f",
        native: "⏺️"
      }
    ],
    version: 1
  },
  eject: {
    id: "eject",
    name: "Eject Button",
    keywords: [
      "blue",
      "square"
    ],
    skins: [
      {
        unified: "23cf-fe0f",
        native: "⏏️"
      }
    ],
    version: 1
  },
  cinema: {
    id: "cinema",
    name: "Cinema",
    keywords: [
      "blue",
      "square",
      "record",
      "film",
      "movie",
      "curtain",
      "stage",
      "theater"
    ],
    skins: [
      {
        unified: "1f3a6",
        native: "🎦"
      }
    ],
    version: 1
  },
  low_brightness: {
    id: "low_brightness",
    name: "Dim Button",
    keywords: [
      "low",
      "brightness",
      "sun",
      "afternoon",
      "warm",
      "summer"
    ],
    skins: [
      {
        unified: "1f505",
        native: "🔅"
      }
    ],
    version: 1
  },
  high_brightness: {
    id: "high_brightness",
    name: "Bright Button",
    keywords: [
      "high",
      "brightness",
      "sun",
      "light"
    ],
    skins: [
      {
        unified: "1f506",
        native: "🔆"
      }
    ],
    version: 1
  },
  signal_strength: {
    id: "signal_strength",
    name: "Antenna Bars",
    keywords: [
      "signal",
      "strength",
      "blue",
      "square",
      "reception",
      "phone",
      "internet",
      "connection",
      "wifi",
      "bluetooth"
    ],
    skins: [
      {
        unified: "1f4f6",
        native: "📶"
      }
    ],
    version: 1
  },
  wireless: {
    id: "wireless",
    name: "Wireless",
    keywords: [
      "wifi",
      "internet",
      "contactless",
      "signal"
    ],
    skins: [
      {
        unified: "1f6dc",
        native: "🛜"
      }
    ],
    version: 15
  },
  vibration_mode: {
    id: "vibration_mode",
    name: "Vibration Mode",
    keywords: [
      "orange",
      "square",
      "phone"
    ],
    skins: [
      {
        unified: "1f4f3",
        native: "📳"
      }
    ],
    version: 1
  },
  mobile_phone_off: {
    id: "mobile_phone_off",
    name: "Mobile Phone off",
    keywords: [
      "mute",
      "orange",
      "square",
      "silence",
      "quiet"
    ],
    skins: [
      {
        unified: "1f4f4",
        native: "📴"
      }
    ],
    version: 1
  },
  female_sign: {
    id: "female_sign",
    name: "Female Sign",
    keywords: [
      "woman",
      "women",
      "lady",
      "girl"
    ],
    skins: [
      {
        unified: "2640-fe0f",
        native: "♀️"
      }
    ],
    version: 4
  },
  male_sign: {
    id: "male_sign",
    name: "Male Sign",
    keywords: [
      "man",
      "boy",
      "men"
    ],
    skins: [
      {
        unified: "2642-fe0f",
        native: "♂️"
      }
    ],
    version: 4
  },
  transgender_symbol: {
    id: "transgender_symbol",
    name: "Transgender Symbol",
    keywords: [
      "lgbtq"
    ],
    skins: [
      {
        unified: "26a7-fe0f",
        native: "⚧️"
      }
    ],
    version: 13
  },
  heavy_multiplication_x: {
    id: "heavy_multiplication_x",
    name: "Multiply",
    keywords: [
      "heavy",
      "multiplication",
      "x",
      "sign",
      "math",
      "calculation"
    ],
    skins: [
      {
        unified: "2716-fe0f",
        native: "✖️"
      }
    ],
    version: 1
  },
  heavy_plus_sign: {
    id: "heavy_plus_sign",
    name: "Plus",
    keywords: [
      "heavy",
      "sign",
      "math",
      "calculation",
      "addition",
      "more",
      "increase"
    ],
    skins: [
      {
        unified: "2795",
        native: "➕"
      }
    ],
    version: 1
  },
  heavy_minus_sign: {
    id: "heavy_minus_sign",
    name: "Minus",
    keywords: [
      "heavy",
      "sign",
      "math",
      "calculation",
      "subtract",
      "less"
    ],
    skins: [
      {
        unified: "2796",
        native: "➖"
      }
    ],
    version: 1
  },
  heavy_division_sign: {
    id: "heavy_division_sign",
    name: "Divide",
    keywords: [
      "heavy",
      "division",
      "sign",
      "math",
      "calculation"
    ],
    skins: [
      {
        unified: "2797",
        native: "➗"
      }
    ],
    version: 1
  },
  heavy_equals_sign: {
    id: "heavy_equals_sign",
    name: "Heavy Equals Sign",
    keywords: [
      "math"
    ],
    skins: [
      {
        unified: "1f7f0",
        native: "🟰"
      }
    ],
    version: 14
  },
  infinity: {
    id: "infinity",
    name: "Infinity",
    keywords: [
      "forever"
    ],
    skins: [
      {
        unified: "267e-fe0f",
        native: "♾️"
      }
    ],
    version: 11
  },
  bangbang: {
    id: "bangbang",
    name: "Double Exclamation Mark",
    keywords: [
      "bangbang",
      "surprise"
    ],
    skins: [
      {
        unified: "203c-fe0f",
        native: "‼️"
      }
    ],
    version: 1
  },
  interrobang: {
    id: "interrobang",
    name: "Exclamation Question Mark",
    keywords: [
      "interrobang",
      "wat",
      "punctuation",
      "surprise"
    ],
    skins: [
      {
        unified: "2049-fe0f",
        native: "⁉️"
      }
    ],
    version: 1
  },
  question: {
    id: "question",
    name: "Red Question Mark",
    keywords: [
      "doubt",
      "confused"
    ],
    skins: [
      {
        unified: "2753",
        native: "❓"
      }
    ],
    version: 1
  },
  grey_question: {
    id: "grey_question",
    name: "White Question Mark",
    keywords: [
      "grey",
      "doubts",
      "gray",
      "huh",
      "confused"
    ],
    skins: [
      {
        unified: "2754",
        native: "❔"
      }
    ],
    version: 1
  },
  grey_exclamation: {
    id: "grey_exclamation",
    name: "White Exclamation Mark",
    keywords: [
      "grey",
      "surprise",
      "punctuation",
      "gray",
      "wow",
      "warning"
    ],
    skins: [
      {
        unified: "2755",
        native: "❕"
      }
    ],
    version: 1
  },
  exclamation: {
    id: "exclamation",
    name: "Red Exclamation Mark",
    keywords: [
      "heavy",
      "danger",
      "surprise",
      "punctuation",
      "wow",
      "warning"
    ],
    skins: [
      {
        unified: "2757",
        native: "❗"
      }
    ],
    version: 1
  },
  wavy_dash: {
    id: "wavy_dash",
    name: "Wavy Dash",
    keywords: [
      "draw",
      "line",
      "moustache",
      "mustache",
      "squiggle",
      "scribble"
    ],
    skins: [
      {
        unified: "3030-fe0f",
        native: "〰️"
      }
    ],
    version: 1
  },
  currency_exchange: {
    id: "currency_exchange",
    name: "Currency Exchange",
    keywords: [
      "money",
      "sales",
      "dollar",
      "travel"
    ],
    skins: [
      {
        unified: "1f4b1",
        native: "💱"
      }
    ],
    version: 1
  },
  heavy_dollar_sign: {
    id: "heavy_dollar_sign",
    name: "Heavy Dollar Sign",
    keywords: [
      "money",
      "sales",
      "payment",
      "currency",
      "buck"
    ],
    skins: [
      {
        unified: "1f4b2",
        native: "💲"
      }
    ],
    version: 1
  },
  medical_symbol: {
    id: "medical_symbol",
    name: "Medical Symbol",
    keywords: [
      "staff",
      "of",
      "aesculapius",
      "health",
      "hospital"
    ],
    skins: [
      {
        unified: "2695-fe0f",
        native: "⚕️"
      }
    ],
    version: 4
  },
  recycle: {
    id: "recycle",
    name: "Recycling Symbol",
    keywords: [
      "recycle",
      "arrow",
      "environment",
      "garbage",
      "trash"
    ],
    skins: [
      {
        unified: "267b-fe0f",
        native: "♻️"
      }
    ],
    version: 1
  },
  fleur_de_lis: {
    id: "fleur_de_lis",
    name: "Fleur-De-Lis",
    keywords: [
      "fleur",
      "de",
      "lis",
      "decorative",
      "scout"
    ],
    skins: [
      {
        unified: "269c-fe0f",
        native: "⚜️"
      }
    ],
    version: 1
  },
  trident: {
    id: "trident",
    name: "Trident Emblem",
    keywords: [
      "weapon",
      "spear"
    ],
    skins: [
      {
        unified: "1f531",
        native: "🔱"
      }
    ],
    version: 1
  },
  name_badge: {
    id: "name_badge",
    name: "Name Badge",
    keywords: [
      "fire",
      "forbid"
    ],
    skins: [
      {
        unified: "1f4db",
        native: "📛"
      }
    ],
    version: 1
  },
  beginner: {
    id: "beginner",
    name: "Japanese Symbol for Beginner",
    keywords: [
      "badge",
      "shield"
    ],
    skins: [
      {
        unified: "1f530",
        native: "🔰"
      }
    ],
    version: 1
  },
  o: {
    id: "o",
    name: "Hollow Red Circle",
    keywords: [
      "o",
      "round"
    ],
    skins: [
      {
        unified: "2b55",
        native: "⭕"
      }
    ],
    version: 1
  },
  white_check_mark: {
    id: "white_check_mark",
    name: "Check Mark Button",
    keywords: [
      "white",
      "green",
      "square",
      "ok",
      "agree",
      "vote",
      "election",
      "answer",
      "tick"
    ],
    skins: [
      {
        unified: "2705",
        native: "✅"
      }
    ],
    version: 1
  },
  ballot_box_with_check: {
    id: "ballot_box_with_check",
    name: "Check Box with Check",
    keywords: [
      "ballot",
      "ok",
      "agree",
      "confirm",
      "black",
      "square",
      "vote",
      "election",
      "yes",
      "tick"
    ],
    skins: [
      {
        unified: "2611-fe0f",
        native: "☑️"
      }
    ],
    version: 1
  },
  heavy_check_mark: {
    id: "heavy_check_mark",
    name: "Check Mark",
    keywords: [
      "heavy",
      "ok",
      "nike",
      "answer",
      "yes",
      "tick"
    ],
    skins: [
      {
        unified: "2714-fe0f",
        native: "✔️"
      }
    ],
    version: 1
  },
  x: {
    id: "x",
    name: "Cross Mark",
    keywords: [
      "x",
      "no",
      "delete",
      "remove",
      "cancel",
      "red"
    ],
    skins: [
      {
        unified: "274c",
        native: "❌"
      }
    ],
    version: 1
  },
  negative_squared_cross_mark: {
    id: "negative_squared_cross_mark",
    name: "Cross Mark Button",
    keywords: [
      "negative",
      "squared",
      "x",
      "green",
      "square",
      "no",
      "deny"
    ],
    skins: [
      {
        unified: "274e",
        native: "❎"
      }
    ],
    version: 1
  },
  curly_loop: {
    id: "curly_loop",
    name: "Curly Loop",
    keywords: [
      "scribble",
      "draw",
      "shape",
      "squiggle"
    ],
    skins: [
      {
        unified: "27b0",
        native: "➰"
      }
    ],
    version: 1
  },
  loop: {
    id: "loop",
    name: "Double Curly Loop",
    keywords: [
      "tape",
      "cassette"
    ],
    skins: [
      {
        unified: "27bf",
        native: "➿"
      }
    ],
    version: 1
  },
  part_alternation_mark: {
    id: "part_alternation_mark",
    name: "Part Alternation Mark",
    keywords: [
      "graph",
      "presentation",
      "stats",
      "business",
      "economics",
      "bad"
    ],
    skins: [
      {
        unified: "303d-fe0f",
        native: "〽️"
      }
    ],
    version: 1
  },
  eight_spoked_asterisk: {
    id: "eight_spoked_asterisk",
    name: "Eight Spoked Asterisk",
    keywords: [
      "star",
      "sparkle",
      "green",
      "square"
    ],
    skins: [
      {
        unified: "2733-fe0f",
        native: "✳️"
      }
    ],
    version: 1
  },
  eight_pointed_black_star: {
    id: "eight_pointed_black_star",
    name: "Eight-Pointed Star",
    keywords: [
      "eight",
      "pointed",
      "black",
      "orange",
      "square",
      "shape",
      "polygon"
    ],
    skins: [
      {
        unified: "2734-fe0f",
        native: "✴️"
      }
    ],
    version: 1
  },
  sparkle: {
    id: "sparkle",
    name: "Sparkle",
    keywords: [
      "stars",
      "green",
      "square",
      "awesome",
      "good",
      "fireworks"
    ],
    skins: [
      {
        unified: "2747-fe0f",
        native: "❇️"
      }
    ],
    version: 1
  },
  copyright: {
    id: "copyright",
    name: "Copyright",
    keywords: [
      "ip",
      "license",
      "circle",
      "law",
      "legal"
    ],
    skins: [
      {
        unified: "00a9-fe0f",
        native: "©️"
      }
    ],
    version: 1
  },
  registered: {
    id: "registered",
    name: "Registered",
    keywords: [
      "alphabet",
      "circle"
    ],
    skins: [
      {
        unified: "00ae-fe0f",
        native: "®️"
      }
    ],
    version: 1
  },
  tm: {
    id: "tm",
    name: "Trade Mark",
    keywords: [
      "tm",
      "trademark",
      "brand",
      "law",
      "legal"
    ],
    skins: [
      {
        unified: "2122-fe0f",
        native: "™️"
      }
    ],
    version: 1
  },
  hash: {
    id: "hash",
    name: "Hash Key",
    keywords: [
      "keycap",
      "",
      "symbol",
      "blue",
      "square",
      "twitter"
    ],
    skins: [
      {
        unified: "0023-fe0f-20e3",
        native: "#️⃣"
      }
    ],
    version: 1
  },
  keycap_star: {
    id: "keycap_star",
    name: "Keycap: *",
    keywords: [
      "keycap",
      "star",
      ""
    ],
    skins: [
      {
        unified: "002a-fe0f-20e3",
        native: "*️⃣"
      }
    ],
    version: 2
  },
  zero: {
    id: "zero",
    name: "Keycap 0",
    keywords: [
      "zero",
      "numbers",
      "blue",
      "square",
      "null"
    ],
    skins: [
      {
        unified: "0030-fe0f-20e3",
        native: "0️⃣"
      }
    ],
    version: 1
  },
  one: {
    id: "one",
    name: "Keycap 1",
    keywords: [
      "one",
      "blue",
      "square",
      "numbers"
    ],
    skins: [
      {
        unified: "0031-fe0f-20e3",
        native: "1️⃣"
      }
    ],
    version: 1
  },
  two: {
    id: "two",
    name: "Keycap 2",
    keywords: [
      "two",
      "numbers",
      "prime",
      "blue",
      "square"
    ],
    skins: [
      {
        unified: "0032-fe0f-20e3",
        native: "2️⃣"
      }
    ],
    version: 1
  },
  three: {
    id: "three",
    name: "Keycap 3",
    keywords: [
      "three",
      "numbers",
      "prime",
      "blue",
      "square"
    ],
    skins: [
      {
        unified: "0033-fe0f-20e3",
        native: "3️⃣"
      }
    ],
    version: 1
  },
  four: {
    id: "four",
    name: "Keycap 4",
    keywords: [
      "four",
      "numbers",
      "blue",
      "square"
    ],
    skins: [
      {
        unified: "0034-fe0f-20e3",
        native: "4️⃣"
      }
    ],
    version: 1
  },
  five: {
    id: "five",
    name: "Keycap 5",
    keywords: [
      "five",
      "numbers",
      "blue",
      "square",
      "prime"
    ],
    skins: [
      {
        unified: "0035-fe0f-20e3",
        native: "5️⃣"
      }
    ],
    version: 1
  },
  six: {
    id: "six",
    name: "Keycap 6",
    keywords: [
      "six",
      "numbers",
      "blue",
      "square"
    ],
    skins: [
      {
        unified: "0036-fe0f-20e3",
        native: "6️⃣"
      }
    ],
    version: 1
  },
  seven: {
    id: "seven",
    name: "Keycap 7",
    keywords: [
      "seven",
      "numbers",
      "blue",
      "square",
      "prime"
    ],
    skins: [
      {
        unified: "0037-fe0f-20e3",
        native: "7️⃣"
      }
    ],
    version: 1
  },
  eight: {
    id: "eight",
    name: "Keycap 8",
    keywords: [
      "eight",
      "blue",
      "square",
      "numbers"
    ],
    skins: [
      {
        unified: "0038-fe0f-20e3",
        native: "8️⃣"
      }
    ],
    version: 1
  },
  nine: {
    id: "nine",
    name: "Keycap 9",
    keywords: [
      "nine",
      "blue",
      "square",
      "numbers"
    ],
    skins: [
      {
        unified: "0039-fe0f-20e3",
        native: "9️⃣"
      }
    ],
    version: 1
  },
  keycap_ten: {
    id: "keycap_ten",
    name: "Keycap 10",
    keywords: [
      "ten",
      "numbers",
      "blue",
      "square"
    ],
    skins: [
      {
        unified: "1f51f",
        native: "🔟"
      }
    ],
    version: 1
  },
  capital_abcd: {
    id: "capital_abcd",
    name: "Input Latin Uppercase",
    keywords: [
      "capital",
      "abcd",
      "alphabet",
      "words",
      "blue",
      "square"
    ],
    skins: [
      {
        unified: "1f520",
        native: "🔠"
      }
    ],
    version: 1
  },
  abcd: {
    id: "abcd",
    name: "Input Latin Lowercase",
    keywords: [
      "abcd",
      "blue",
      "square",
      "alphabet"
    ],
    skins: [
      {
        unified: "1f521",
        native: "🔡"
      }
    ],
    version: 1
  },
  symbols: {
    id: "symbols",
    name: "Input Symbols",
    keywords: [
      "blue",
      "square",
      "music",
      "note",
      "ampersand",
      "percent",
      "glyphs",
      "characters"
    ],
    skins: [
      {
        unified: "1f523",
        native: "🔣"
      }
    ],
    version: 1
  },
  abc: {
    id: "abc",
    name: "Input Latin Letters",
    keywords: [
      "abc",
      "blue",
      "square",
      "alphabet"
    ],
    skins: [
      {
        unified: "1f524",
        native: "🔤"
      }
    ],
    version: 1
  },
  a: {
    id: "a",
    name: "A Button (blood Type)",
    keywords: [
      "red",
      "square",
      "alphabet",
      "letter"
    ],
    skins: [
      {
        unified: "1f170-fe0f",
        native: "🅰️"
      }
    ],
    version: 1
  },
  ab: {
    id: "ab",
    name: "Negative Squared Ab",
    keywords: [
      "button",
      "red",
      "square",
      "alphabet"
    ],
    skins: [
      {
        unified: "1f18e",
        native: "🆎"
      }
    ],
    version: 1
  },
  b: {
    id: "b",
    name: "B Button (blood Type)",
    keywords: [
      "red",
      "square",
      "alphabet",
      "letter"
    ],
    skins: [
      {
        unified: "1f171-fe0f",
        native: "🅱️"
      }
    ],
    version: 1
  },
  cl: {
    id: "cl",
    name: "Cl Button",
    keywords: [
      "alphabet",
      "words",
      "red",
      "square"
    ],
    skins: [
      {
        unified: "1f191",
        native: "🆑"
      }
    ],
    version: 1
  },
  cool: {
    id: "cool",
    name: "Cool Button",
    keywords: [
      "words",
      "blue",
      "square"
    ],
    skins: [
      {
        unified: "1f192",
        native: "🆒"
      }
    ],
    version: 1
  },
  free: {
    id: "free",
    name: "Free Button",
    keywords: [
      "blue",
      "square",
      "words"
    ],
    skins: [
      {
        unified: "1f193",
        native: "🆓"
      }
    ],
    version: 1
  },
  information_source: {
    id: "information_source",
    name: "Information",
    keywords: [
      "source",
      "blue",
      "square",
      "alphabet",
      "letter"
    ],
    skins: [
      {
        unified: "2139-fe0f",
        native: "ℹ️"
      }
    ],
    version: 1
  },
  id: {
    id: "id",
    name: "Id Button",
    keywords: [
      "purple",
      "square",
      "words"
    ],
    skins: [
      {
        unified: "1f194",
        native: "🆔"
      }
    ],
    version: 1
  },
  m: {
    id: "m",
    name: "Circled M",
    keywords: [
      "alphabet",
      "blue",
      "circle",
      "letter"
    ],
    skins: [
      {
        unified: "24c2-fe0f",
        native: "Ⓜ️"
      }
    ],
    version: 1
  },
  new: {
    id: "new",
    name: "New Button",
    keywords: [
      "blue",
      "square",
      "words",
      "start"
    ],
    skins: [
      {
        unified: "1f195",
        native: "🆕"
      }
    ],
    version: 1
  },
  ng: {
    id: "ng",
    name: "Ng Button",
    keywords: [
      "blue",
      "square",
      "words",
      "shape",
      "icon"
    ],
    skins: [
      {
        unified: "1f196",
        native: "🆖"
      }
    ],
    version: 1
  },
  o2: {
    id: "o2",
    name: "O Button (blood Type)",
    keywords: [
      "o2",
      "alphabet",
      "red",
      "square",
      "letter"
    ],
    skins: [
      {
        unified: "1f17e-fe0f",
        native: "🅾️"
      }
    ],
    version: 1
  },
  ok: {
    id: "ok",
    name: "Ok Button",
    keywords: [
      "good",
      "agree",
      "yes",
      "blue",
      "square"
    ],
    skins: [
      {
        unified: "1f197",
        native: "🆗"
      }
    ],
    version: 1
  },
  parking: {
    id: "parking",
    name: "P Button",
    keywords: [
      "parking",
      "cars",
      "blue",
      "square",
      "alphabet",
      "letter"
    ],
    skins: [
      {
        unified: "1f17f-fe0f",
        native: "🅿️"
      }
    ],
    version: 1
  },
  sos: {
    id: "sos",
    name: "Sos Button",
    keywords: [
      "help",
      "red",
      "square",
      "words",
      "emergency",
      "911"
    ],
    skins: [
      {
        unified: "1f198",
        native: "🆘"
      }
    ],
    version: 1
  },
  up: {
    id: "up",
    name: "Up! Button",
    keywords: [
      "up",
      "blue",
      "square",
      "above",
      "high"
    ],
    skins: [
      {
        unified: "1f199",
        native: "🆙"
      }
    ],
    version: 1
  },
  vs: {
    id: "vs",
    name: "Vs Button",
    keywords: [
      "words",
      "orange",
      "square"
    ],
    skins: [
      {
        unified: "1f19a",
        native: "🆚"
      }
    ],
    version: 1
  },
  koko: {
    id: "koko",
    name: "Squared Katakana Koko",
    keywords: [
      "japanese",
      "here",
      "button",
      "blue",
      "square",
      "destination"
    ],
    skins: [
      {
        unified: "1f201",
        native: "🈁"
      }
    ],
    version: 1
  },
  sa: {
    id: "sa",
    name: "Squared Katakana Sa",
    keywords: [
      "japanese",
      "service",
      "charge",
      "button",
      "blue",
      "square"
    ],
    skins: [
      {
        unified: "1f202-fe0f",
        native: "🈂️"
      }
    ],
    version: 1
  },
  u6708: {
    id: "u6708",
    name: "Japanese “monthly Amount” Button",
    keywords: [
      "u6708",
      "monthly",
      "amount",
      "chinese",
      "month",
      "moon",
      "orange",
      "square",
      "kanji"
    ],
    skins: [
      {
        unified: "1f237-fe0f",
        native: "🈷️"
      }
    ],
    version: 1
  },
  u6709: {
    id: "u6709",
    name: "Squared Cjk Unified Ideograph-6709",
    keywords: [
      "u6709",
      "japanese",
      "not",
      "free",
      "of",
      "charge",
      "button",
      "orange",
      "square",
      "chinese",
      "have",
      "kanji"
    ],
    skins: [
      {
        unified: "1f236",
        native: "🈶"
      }
    ],
    version: 1
  },
  u6307: {
    id: "u6307",
    name: "Japanese “reserved” Button",
    keywords: [
      "u6307",
      "reserved",
      "chinese",
      "point",
      "green",
      "square",
      "kanji"
    ],
    skins: [
      {
        unified: "1f22f",
        native: "🈯"
      }
    ],
    version: 1
  },
  ideograph_advantage: {
    id: "ideograph_advantage",
    name: "Japanese “bargain” Button",
    keywords: [
      "ideograph",
      "advantage",
      "bargain",
      "chinese",
      "kanji",
      "obtain",
      "get",
      "circle"
    ],
    skins: [
      {
        unified: "1f250",
        native: "🉐"
      }
    ],
    version: 1
  },
  u5272: {
    id: "u5272",
    name: "Japanese “discount” Button",
    keywords: [
      "u5272",
      "discount",
      "cut",
      "divide",
      "chinese",
      "kanji",
      "pink",
      "square"
    ],
    skins: [
      {
        unified: "1f239",
        native: "🈹"
      }
    ],
    version: 1
  },
  u7121: {
    id: "u7121",
    name: "Japanese “free of Charge” Button",
    keywords: [
      "u7121",
      "free",
      "charge",
      "nothing",
      "chinese",
      "kanji",
      "orange",
      "square"
    ],
    skins: [
      {
        unified: "1f21a",
        native: "🈚"
      }
    ],
    version: 1
  },
  u7981: {
    id: "u7981",
    name: "Japanese “prohibited” Button",
    keywords: [
      "u7981",
      "prohibited",
      "kanji",
      "chinese",
      "forbidden",
      "limit",
      "restricted",
      "red",
      "square"
    ],
    skins: [
      {
        unified: "1f232",
        native: "🈲"
      }
    ],
    version: 1
  },
  accept: {
    id: "accept",
    name: "Circled Ideograph Accept",
    keywords: [
      "japanese",
      "acceptable",
      "button",
      "ok",
      "good",
      "chinese",
      "kanji",
      "agree",
      "yes",
      "orange",
      "circle"
    ],
    skins: [
      {
        unified: "1f251",
        native: "🉑"
      }
    ],
    version: 1
  },
  u7533: {
    id: "u7533",
    name: "Japanese “application” Button",
    keywords: [
      "u7533",
      "application",
      "chinese",
      "kanji",
      "orange",
      "square"
    ],
    skins: [
      {
        unified: "1f238",
        native: "🈸"
      }
    ],
    version: 1
  },
  u5408: {
    id: "u5408",
    name: "Japanese “passing Grade” Button",
    keywords: [
      "u5408",
      "passing",
      "grade",
      "chinese",
      "join",
      "kanji",
      "red",
      "square"
    ],
    skins: [
      {
        unified: "1f234",
        native: "🈴"
      }
    ],
    version: 1
  },
  u7a7a: {
    id: "u7a7a",
    name: "Japanese “vacancy” Button",
    keywords: [
      "u7a7a",
      "vacancy",
      "kanji",
      "chinese",
      "empty",
      "sky",
      "blue",
      "square"
    ],
    skins: [
      {
        unified: "1f233",
        native: "🈳"
      }
    ],
    version: 1
  },
  congratulations: {
    id: "congratulations",
    name: "Circled Ideograph Congratulation",
    keywords: [
      "congratulations",
      "japanese",
      "button",
      "chinese",
      "kanji",
      "red",
      "circle"
    ],
    skins: [
      {
        unified: "3297-fe0f",
        native: "㊗️"
      }
    ],
    version: 1
  },
  secret: {
    id: "secret",
    name: "Circled Ideograph Secret",
    keywords: [
      "japanese",
      "button",
      "privacy",
      "chinese",
      "sshh",
      "kanji",
      "red",
      "circle"
    ],
    skins: [
      {
        unified: "3299-fe0f",
        native: "㊙️"
      }
    ],
    version: 1
  },
  u55b6: {
    id: "u55b6",
    name: "Squared Cjk Unified Ideograph-55b6",
    keywords: [
      "u55b6",
      "japanese",
      "open",
      "for",
      "business",
      "button",
      "opening",
      "hours",
      "orange",
      "square"
    ],
    skins: [
      {
        unified: "1f23a",
        native: "🈺"
      }
    ],
    version: 1
  },
  u6e80: {
    id: "u6e80",
    name: "Japanese “no Vacancy” Button",
    keywords: [
      "u6e80",
      "no",
      "vacancy",
      "full",
      "chinese",
      "red",
      "square",
      "kanji"
    ],
    skins: [
      {
        unified: "1f235",
        native: "🈵"
      }
    ],
    version: 1
  },
  red_circle: {
    id: "red_circle",
    name: "Red Circle",
    keywords: [
      "shape",
      "error",
      "danger"
    ],
    skins: [
      {
        unified: "1f534",
        native: "🔴"
      }
    ],
    version: 1
  },
  large_orange_circle: {
    id: "large_orange_circle",
    name: "Orange Circle",
    keywords: [
      "large",
      "round"
    ],
    skins: [
      {
        unified: "1f7e0",
        native: "🟠"
      }
    ],
    version: 12
  },
  large_yellow_circle: {
    id: "large_yellow_circle",
    name: "Yellow Circle",
    keywords: [
      "large",
      "round"
    ],
    skins: [
      {
        unified: "1f7e1",
        native: "🟡"
      }
    ],
    version: 12
  },
  large_green_circle: {
    id: "large_green_circle",
    name: "Green Circle",
    keywords: [
      "large",
      "round"
    ],
    skins: [
      {
        unified: "1f7e2",
        native: "🟢"
      }
    ],
    version: 12
  },
  large_blue_circle: {
    id: "large_blue_circle",
    name: "Blue Circle",
    keywords: [
      "large",
      "shape",
      "icon",
      "button"
    ],
    skins: [
      {
        unified: "1f535",
        native: "🔵"
      }
    ],
    version: 1
  },
  large_purple_circle: {
    id: "large_purple_circle",
    name: "Purple Circle",
    keywords: [
      "large",
      "round"
    ],
    skins: [
      {
        unified: "1f7e3",
        native: "🟣"
      }
    ],
    version: 12
  },
  large_brown_circle: {
    id: "large_brown_circle",
    name: "Brown Circle",
    keywords: [
      "large",
      "round"
    ],
    skins: [
      {
        unified: "1f7e4",
        native: "🟤"
      }
    ],
    version: 12
  },
  black_circle: {
    id: "black_circle",
    name: "Black Circle",
    keywords: [
      "shape",
      "button",
      "round"
    ],
    skins: [
      {
        unified: "26ab",
        native: "⚫"
      }
    ],
    version: 1
  },
  white_circle: {
    id: "white_circle",
    name: "White Circle",
    keywords: [
      "shape",
      "round"
    ],
    skins: [
      {
        unified: "26aa",
        native: "⚪"
      }
    ],
    version: 1
  },
  large_red_square: {
    id: "large_red_square",
    name: "Red Square",
    keywords: [
      "large"
    ],
    skins: [
      {
        unified: "1f7e5",
        native: "🟥"
      }
    ],
    version: 12
  },
  large_orange_square: {
    id: "large_orange_square",
    name: "Orange Square",
    keywords: [
      "large"
    ],
    skins: [
      {
        unified: "1f7e7",
        native: "🟧"
      }
    ],
    version: 12
  },
  large_yellow_square: {
    id: "large_yellow_square",
    name: "Yellow Square",
    keywords: [
      "large"
    ],
    skins: [
      {
        unified: "1f7e8",
        native: "🟨"
      }
    ],
    version: 12
  },
  large_green_square: {
    id: "large_green_square",
    name: "Green Square",
    keywords: [
      "large"
    ],
    skins: [
      {
        unified: "1f7e9",
        native: "🟩"
      }
    ],
    version: 12
  },
  large_blue_square: {
    id: "large_blue_square",
    name: "Blue Square",
    keywords: [
      "large"
    ],
    skins: [
      {
        unified: "1f7e6",
        native: "🟦"
      }
    ],
    version: 12
  },
  large_purple_square: {
    id: "large_purple_square",
    name: "Purple Square",
    keywords: [
      "large"
    ],
    skins: [
      {
        unified: "1f7ea",
        native: "🟪"
      }
    ],
    version: 12
  },
  large_brown_square: {
    id: "large_brown_square",
    name: "Brown Square",
    keywords: [
      "large"
    ],
    skins: [
      {
        unified: "1f7eb",
        native: "🟫"
      }
    ],
    version: 12
  },
  black_large_square: {
    id: "black_large_square",
    name: "Black Large Square",
    keywords: [
      "shape",
      "icon",
      "button"
    ],
    skins: [
      {
        unified: "2b1b",
        native: "⬛"
      }
    ],
    version: 1
  },
  white_large_square: {
    id: "white_large_square",
    name: "White Large Square",
    keywords: [
      "shape",
      "icon",
      "stone",
      "button"
    ],
    skins: [
      {
        unified: "2b1c",
        native: "⬜"
      }
    ],
    version: 1
  },
  black_medium_square: {
    id: "black_medium_square",
    name: "Black Medium Square",
    keywords: [
      "shape",
      "button",
      "icon"
    ],
    skins: [
      {
        unified: "25fc-fe0f",
        native: "◼️"
      }
    ],
    version: 1
  },
  white_medium_square: {
    id: "white_medium_square",
    name: "White Medium Square",
    keywords: [
      "shape",
      "stone",
      "icon"
    ],
    skins: [
      {
        unified: "25fb-fe0f",
        native: "◻️"
      }
    ],
    version: 1
  },
  black_medium_small_square: {
    id: "black_medium_small_square",
    name: "Black Medium Small Square",
    keywords: [
      "icon",
      "shape",
      "button"
    ],
    skins: [
      {
        unified: "25fe",
        native: "◾"
      }
    ],
    version: 1
  },
  white_medium_small_square: {
    id: "white_medium_small_square",
    name: "White Medium Small Square",
    keywords: [
      "shape",
      "stone",
      "icon",
      "button"
    ],
    skins: [
      {
        unified: "25fd",
        native: "◽"
      }
    ],
    version: 1
  },
  black_small_square: {
    id: "black_small_square",
    name: "Black Small Square",
    keywords: [
      "shape",
      "icon"
    ],
    skins: [
      {
        unified: "25aa-fe0f",
        native: "▪️"
      }
    ],
    version: 1
  },
  white_small_square: {
    id: "white_small_square",
    name: "White Small Square",
    keywords: [
      "shape",
      "icon"
    ],
    skins: [
      {
        unified: "25ab-fe0f",
        native: "▫️"
      }
    ],
    version: 1
  },
  large_orange_diamond: {
    id: "large_orange_diamond",
    name: "Large Orange Diamond",
    keywords: [
      "shape",
      "jewel",
      "gem"
    ],
    skins: [
      {
        unified: "1f536",
        native: "🔶"
      }
    ],
    version: 1
  },
  large_blue_diamond: {
    id: "large_blue_diamond",
    name: "Large Blue Diamond",
    keywords: [
      "shape",
      "jewel",
      "gem"
    ],
    skins: [
      {
        unified: "1f537",
        native: "🔷"
      }
    ],
    version: 1
  },
  small_orange_diamond: {
    id: "small_orange_diamond",
    name: "Small Orange Diamond",
    keywords: [
      "shape",
      "jewel",
      "gem"
    ],
    skins: [
      {
        unified: "1f538",
        native: "🔸"
      }
    ],
    version: 1
  },
  small_blue_diamond: {
    id: "small_blue_diamond",
    name: "Small Blue Diamond",
    keywords: [
      "shape",
      "jewel",
      "gem"
    ],
    skins: [
      {
        unified: "1f539",
        native: "🔹"
      }
    ],
    version: 1
  },
  small_red_triangle: {
    id: "small_red_triangle",
    name: "Red Triangle Pointed Up",
    keywords: [
      "small",
      "shape",
      "direction",
      "top"
    ],
    skins: [
      {
        unified: "1f53a",
        native: "🔺"
      }
    ],
    version: 1
  },
  small_red_triangle_down: {
    id: "small_red_triangle_down",
    name: "Red Triangle Pointed Down",
    keywords: [
      "small",
      "shape",
      "direction",
      "bottom"
    ],
    skins: [
      {
        unified: "1f53b",
        native: "🔻"
      }
    ],
    version: 1
  },
  diamond_shape_with_a_dot_inside: {
    id: "diamond_shape_with_a_dot_inside",
    name: "Diamond with a Dot",
    keywords: [
      "shape",
      "inside",
      "jewel",
      "blue",
      "gem",
      "crystal",
      "fancy"
    ],
    skins: [
      {
        unified: "1f4a0",
        native: "💠"
      }
    ],
    version: 1
  },
  radio_button: {
    id: "radio_button",
    name: "Radio Button",
    keywords: [
      "input",
      "old",
      "music",
      "circle"
    ],
    skins: [
      {
        unified: "1f518",
        native: "🔘"
      }
    ],
    version: 1
  },
  white_square_button: {
    id: "white_square_button",
    name: "White Square Button",
    keywords: [
      "shape",
      "input"
    ],
    skins: [
      {
        unified: "1f533",
        native: "🔳"
      }
    ],
    version: 1
  },
  black_square_button: {
    id: "black_square_button",
    name: "Black Square Button",
    keywords: [
      "shape",
      "input",
      "frame"
    ],
    skins: [
      {
        unified: "1f532",
        native: "🔲"
      }
    ],
    version: 1
  },
  checkered_flag: {
    id: "checkered_flag",
    name: "Chequered Flag",
    keywords: [
      "checkered",
      "contest",
      "finishline",
      "race",
      "gokart"
    ],
    skins: [
      {
        unified: "1f3c1",
        native: "🏁"
      }
    ],
    version: 1
  },
  triangular_flag_on_post: {
    id: "triangular_flag_on_post",
    name: "Triangular Flag",
    keywords: [
      "on",
      "post",
      "mark",
      "milestone",
      "place"
    ],
    skins: [
      {
        unified: "1f6a9",
        native: "🚩"
      }
    ],
    version: 1
  },
  crossed_flags: {
    id: "crossed_flags",
    name: "Crossed Flags",
    keywords: [
      "japanese",
      "nation",
      "country",
      "border"
    ],
    skins: [
      {
        unified: "1f38c",
        native: "🎌"
      }
    ],
    version: 1
  },
  waving_black_flag: {
    id: "waving_black_flag",
    name: "Black Flag",
    keywords: [
      "waving",
      "pirate"
    ],
    skins: [
      {
        unified: "1f3f4",
        native: "🏴"
      }
    ],
    version: 1
  },
  waving_white_flag: {
    id: "waving_white_flag",
    name: "White Flag",
    keywords: [
      "waving",
      "losing",
      "loser",
      "lost",
      "surrender",
      "give",
      "up",
      "fail"
    ],
    skins: [
      {
        unified: "1f3f3-fe0f",
        native: "🏳️"
      }
    ],
    version: 1
  },
  "rainbow-flag": {
    id: "rainbow-flag",
    name: "Rainbow Flag",
    keywords: [
      "pride",
      "gay",
      "lgbt",
      "glbt",
      "queer",
      "homosexual",
      "lesbian",
      "bisexual",
      "transgender"
    ],
    skins: [
      {
        unified: "1f3f3-fe0f-200d-1f308",
        native: "🏳️‍🌈"
      }
    ],
    version: 4
  },
  transgender_flag: {
    id: "transgender_flag",
    name: "Transgender Flag",
    keywords: [
      "lgbtq"
    ],
    skins: [
      {
        unified: "1f3f3-fe0f-200d-26a7-fe0f",
        native: "🏳️‍⚧️"
      }
    ],
    version: 13
  },
  pirate_flag: {
    id: "pirate_flag",
    name: "Pirate Flag",
    keywords: [
      "skull",
      "crossbones",
      "banner"
    ],
    skins: [
      {
        unified: "1f3f4-200d-2620-fe0f",
        native: "🏴‍☠️"
      }
    ],
    version: 11
  },
  "flag-ac": {
    id: "flag-ac",
    name: "Ascension Island Flag",
    keywords: [
      "ac"
    ],
    skins: [
      {
        unified: "1f1e6-1f1e8",
        native: "🇦🇨"
      }
    ],
    version: 2
  },
  "flag-ad": {
    id: "flag-ad",
    name: "Andorra Flag",
    keywords: [
      "ad",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e6-1f1e9",
        native: "🇦🇩"
      }
    ],
    version: 2
  },
  "flag-ae": {
    id: "flag-ae",
    name: "United Arab Emirates Flag",
    keywords: [
      "ae",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e6-1f1ea",
        native: "🇦🇪"
      }
    ],
    version: 2
  },
  "flag-af": {
    id: "flag-af",
    name: "Afghanistan Flag",
    keywords: [
      "af",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e6-1f1eb",
        native: "🇦🇫"
      }
    ],
    version: 2
  },
  "flag-ag": {
    id: "flag-ag",
    name: "Antigua & Barbuda Flag",
    keywords: [
      "ag",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e6-1f1ec",
        native: "🇦🇬"
      }
    ],
    version: 2
  },
  "flag-ai": {
    id: "flag-ai",
    name: "Anguilla Flag",
    keywords: [
      "ai",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e6-1f1ee",
        native: "🇦🇮"
      }
    ],
    version: 2
  },
  "flag-al": {
    id: "flag-al",
    name: "Albania Flag",
    keywords: [
      "al",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e6-1f1f1",
        native: "🇦🇱"
      }
    ],
    version: 2
  },
  "flag-am": {
    id: "flag-am",
    name: "Armenia Flag",
    keywords: [
      "am",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e6-1f1f2",
        native: "🇦🇲"
      }
    ],
    version: 2
  },
  "flag-ao": {
    id: "flag-ao",
    name: "Angola Flag",
    keywords: [
      "ao",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e6-1f1f4",
        native: "🇦🇴"
      }
    ],
    version: 2
  },
  "flag-aq": {
    id: "flag-aq",
    name: "Antarctica Flag",
    keywords: [
      "aq",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e6-1f1f6",
        native: "🇦🇶"
      }
    ],
    version: 2
  },
  "flag-ar": {
    id: "flag-ar",
    name: "Argentina Flag",
    keywords: [
      "ar",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e6-1f1f7",
        native: "🇦🇷"
      }
    ],
    version: 2
  },
  "flag-as": {
    id: "flag-as",
    name: "American Samoa Flag",
    keywords: [
      "as",
      "ws",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e6-1f1f8",
        native: "🇦🇸"
      }
    ],
    version: 2
  },
  "flag-at": {
    id: "flag-at",
    name: "Austria Flag",
    keywords: [
      "at",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e6-1f1f9",
        native: "🇦🇹"
      }
    ],
    version: 2
  },
  "flag-au": {
    id: "flag-au",
    name: "Australia Flag",
    keywords: [
      "au",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e6-1f1fa",
        native: "🇦🇺"
      }
    ],
    version: 2
  },
  "flag-aw": {
    id: "flag-aw",
    name: "Aruba Flag",
    keywords: [
      "aw",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e6-1f1fc",
        native: "🇦🇼"
      }
    ],
    version: 2
  },
  "flag-ax": {
    id: "flag-ax",
    name: "Åland Islands Flag",
    keywords: [
      "ax",
      "aland",
      "Aland",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e6-1f1fd",
        native: "🇦🇽"
      }
    ],
    version: 2
  },
  "flag-az": {
    id: "flag-az",
    name: "Azerbaijan Flag",
    keywords: [
      "az",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e6-1f1ff",
        native: "🇦🇿"
      }
    ],
    version: 2
  },
  "flag-ba": {
    id: "flag-ba",
    name: "Bosnia & Herzegovina Flag",
    keywords: [
      "ba",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e7-1f1e6",
        native: "🇧🇦"
      }
    ],
    version: 2
  },
  "flag-bb": {
    id: "flag-bb",
    name: "Barbados Flag",
    keywords: [
      "bb",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e7-1f1e7",
        native: "🇧🇧"
      }
    ],
    version: 2
  },
  "flag-bd": {
    id: "flag-bd",
    name: "Bangladesh Flag",
    keywords: [
      "bd",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e7-1f1e9",
        native: "🇧🇩"
      }
    ],
    version: 2
  },
  "flag-be": {
    id: "flag-be",
    name: "Belgium Flag",
    keywords: [
      "be",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e7-1f1ea",
        native: "🇧🇪"
      }
    ],
    version: 2
  },
  "flag-bf": {
    id: "flag-bf",
    name: "Burkina Faso Flag",
    keywords: [
      "bf",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e7-1f1eb",
        native: "🇧🇫"
      }
    ],
    version: 2
  },
  "flag-bg": {
    id: "flag-bg",
    name: "Bulgaria Flag",
    keywords: [
      "bg",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e7-1f1ec",
        native: "🇧🇬"
      }
    ],
    version: 2
  },
  "flag-bh": {
    id: "flag-bh",
    name: "Bahrain Flag",
    keywords: [
      "bh",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e7-1f1ed",
        native: "🇧🇭"
      }
    ],
    version: 2
  },
  "flag-bi": {
    id: "flag-bi",
    name: "Burundi Flag",
    keywords: [
      "bi",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e7-1f1ee",
        native: "🇧🇮"
      }
    ],
    version: 2
  },
  "flag-bj": {
    id: "flag-bj",
    name: "Benin Flag",
    keywords: [
      "bj",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e7-1f1ef",
        native: "🇧🇯"
      }
    ],
    version: 2
  },
  "flag-bl": {
    id: "flag-bl",
    name: "St. Barthélemy Flag",
    keywords: [
      "bl",
      "st",
      "barthelemy",
      "saint",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e7-1f1f1",
        native: "🇧🇱"
      }
    ],
    version: 2
  },
  "flag-bm": {
    id: "flag-bm",
    name: "Bermuda Flag",
    keywords: [
      "bm",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e7-1f1f2",
        native: "🇧🇲"
      }
    ],
    version: 2
  },
  "flag-bn": {
    id: "flag-bn",
    name: "Brunei Flag",
    keywords: [
      "bn",
      "darussalam",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e7-1f1f3",
        native: "🇧🇳"
      }
    ],
    version: 2
  },
  "flag-bo": {
    id: "flag-bo",
    name: "Bolivia Flag",
    keywords: [
      "bo",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e7-1f1f4",
        native: "🇧🇴"
      }
    ],
    version: 2
  },
  "flag-bq": {
    id: "flag-bq",
    name: "Caribbean Netherlands Flag",
    keywords: [
      "bq",
      "bonaire",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e7-1f1f6",
        native: "🇧🇶"
      }
    ],
    version: 2
  },
  "flag-br": {
    id: "flag-br",
    name: "Brazil Flag",
    keywords: [
      "br",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e7-1f1f7",
        native: "🇧🇷"
      }
    ],
    version: 2
  },
  "flag-bs": {
    id: "flag-bs",
    name: "Bahamas Flag",
    keywords: [
      "bs",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e7-1f1f8",
        native: "🇧🇸"
      }
    ],
    version: 2
  },
  "flag-bt": {
    id: "flag-bt",
    name: "Bhutan Flag",
    keywords: [
      "bt",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e7-1f1f9",
        native: "🇧🇹"
      }
    ],
    version: 2
  },
  "flag-bv": {
    id: "flag-bv",
    name: "Bouvet Island Flag",
    keywords: [
      "bv",
      "norway"
    ],
    skins: [
      {
        unified: "1f1e7-1f1fb",
        native: "🇧🇻"
      }
    ],
    version: 2
  },
  "flag-bw": {
    id: "flag-bw",
    name: "Botswana Flag",
    keywords: [
      "bw",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e7-1f1fc",
        native: "🇧🇼"
      }
    ],
    version: 2
  },
  "flag-by": {
    id: "flag-by",
    name: "Belarus Flag",
    keywords: [
      "by",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e7-1f1fe",
        native: "🇧🇾"
      }
    ],
    version: 2
  },
  "flag-bz": {
    id: "flag-bz",
    name: "Belize Flag",
    keywords: [
      "bz",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e7-1f1ff",
        native: "🇧🇿"
      }
    ],
    version: 2
  },
  "flag-ca": {
    id: "flag-ca",
    name: "Canada Flag",
    keywords: [
      "ca",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e8-1f1e6",
        native: "🇨🇦"
      }
    ],
    version: 2
  },
  "flag-cc": {
    id: "flag-cc",
    name: "Cocos (keeling) Islands Flag",
    keywords: [
      "cc",
      "keeling",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e8-1f1e8",
        native: "🇨🇨"
      }
    ],
    version: 2
  },
  "flag-cd": {
    id: "flag-cd",
    name: "Congo - Kinshasa Flag",
    keywords: [
      "cd",
      "democratic",
      "republic",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e8-1f1e9",
        native: "🇨🇩"
      }
    ],
    version: 2
  },
  "flag-cf": {
    id: "flag-cf",
    name: "Central African Republic Flag",
    keywords: [
      "cf",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e8-1f1eb",
        native: "🇨🇫"
      }
    ],
    version: 2
  },
  "flag-cg": {
    id: "flag-cg",
    name: "Congo - Brazzaville Flag",
    keywords: [
      "cg",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e8-1f1ec",
        native: "🇨🇬"
      }
    ],
    version: 2
  },
  "flag-ch": {
    id: "flag-ch",
    name: "Switzerland Flag",
    keywords: [
      "ch",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e8-1f1ed",
        native: "🇨🇭"
      }
    ],
    version: 2
  },
  "flag-ci": {
    id: "flag-ci",
    name: "Côte D’ivoire Flag",
    keywords: [
      "ci",
      "cote",
      "d",
      "ivoire",
      "ivory",
      "coast",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e8-1f1ee",
        native: "🇨🇮"
      }
    ],
    version: 2
  },
  "flag-ck": {
    id: "flag-ck",
    name: "Cook Islands Flag",
    keywords: [
      "ck",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e8-1f1f0",
        native: "🇨🇰"
      }
    ],
    version: 2
  },
  "flag-cl": {
    id: "flag-cl",
    name: "Chile Flag",
    keywords: [
      "cl",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e8-1f1f1",
        native: "🇨🇱"
      }
    ],
    version: 2
  },
  "flag-cm": {
    id: "flag-cm",
    name: "Cameroon Flag",
    keywords: [
      "cm",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e8-1f1f2",
        native: "🇨🇲"
      }
    ],
    version: 2
  },
  cn: {
    id: "cn",
    name: "China Flag",
    keywords: [
      "cn",
      "chinese",
      "prc",
      "country",
      "nation",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e8-1f1f3",
        native: "🇨🇳"
      }
    ],
    version: 1
  },
  "flag-co": {
    id: "flag-co",
    name: "Colombia Flag",
    keywords: [
      "co",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e8-1f1f4",
        native: "🇨🇴"
      }
    ],
    version: 2
  },
  "flag-cp": {
    id: "flag-cp",
    name: "Clipperton Island Flag",
    keywords: [
      "cp"
    ],
    skins: [
      {
        unified: "1f1e8-1f1f5",
        native: "🇨🇵"
      }
    ],
    version: 2
  },
  "flag-cr": {
    id: "flag-cr",
    name: "Costa Rica Flag",
    keywords: [
      "cr",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e8-1f1f7",
        native: "🇨🇷"
      }
    ],
    version: 2
  },
  "flag-cu": {
    id: "flag-cu",
    name: "Cuba Flag",
    keywords: [
      "cu",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e8-1f1fa",
        native: "🇨🇺"
      }
    ],
    version: 2
  },
  "flag-cv": {
    id: "flag-cv",
    name: "Cape Verde Flag",
    keywords: [
      "cv",
      "cabo",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e8-1f1fb",
        native: "🇨🇻"
      }
    ],
    version: 2
  },
  "flag-cw": {
    id: "flag-cw",
    name: "Curaçao Flag",
    keywords: [
      "cw",
      "curacao",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e8-1f1fc",
        native: "🇨🇼"
      }
    ],
    version: 2
  },
  "flag-cx": {
    id: "flag-cx",
    name: "Christmas Island Flag",
    keywords: [
      "cx",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e8-1f1fd",
        native: "🇨🇽"
      }
    ],
    version: 2
  },
  "flag-cy": {
    id: "flag-cy",
    name: "Cyprus Flag",
    keywords: [
      "cy",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e8-1f1fe",
        native: "🇨🇾"
      }
    ],
    version: 2
  },
  "flag-cz": {
    id: "flag-cz",
    name: "Czechia Flag",
    keywords: [
      "cz",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e8-1f1ff",
        native: "🇨🇿"
      }
    ],
    version: 2
  },
  de: {
    id: "de",
    name: "Germany Flag",
    keywords: [
      "de",
      "german",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e9-1f1ea",
        native: "🇩🇪"
      }
    ],
    version: 1
  },
  "flag-dg": {
    id: "flag-dg",
    name: "Diego Garcia Flag",
    keywords: [
      "dg"
    ],
    skins: [
      {
        unified: "1f1e9-1f1ec",
        native: "🇩🇬"
      }
    ],
    version: 2
  },
  "flag-dj": {
    id: "flag-dj",
    name: "Djibouti Flag",
    keywords: [
      "dj",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e9-1f1ef",
        native: "🇩🇯"
      }
    ],
    version: 2
  },
  "flag-dk": {
    id: "flag-dk",
    name: "Denmark Flag",
    keywords: [
      "dk",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e9-1f1f0",
        native: "🇩🇰"
      }
    ],
    version: 2
  },
  "flag-dm": {
    id: "flag-dm",
    name: "Dominica Flag",
    keywords: [
      "dm",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e9-1f1f2",
        native: "🇩🇲"
      }
    ],
    version: 2
  },
  "flag-do": {
    id: "flag-do",
    name: "Dominican Republic Flag",
    keywords: [
      "do",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e9-1f1f4",
        native: "🇩🇴"
      }
    ],
    version: 2
  },
  "flag-dz": {
    id: "flag-dz",
    name: "Algeria Flag",
    keywords: [
      "dz",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1e9-1f1ff",
        native: "🇩🇿"
      }
    ],
    version: 2
  },
  "flag-ea": {
    id: "flag-ea",
    name: "Ceuta & Melilla Flag",
    keywords: [
      "ea"
    ],
    skins: [
      {
        unified: "1f1ea-1f1e6",
        native: "🇪🇦"
      }
    ],
    version: 2
  },
  "flag-ec": {
    id: "flag-ec",
    name: "Ecuador Flag",
    keywords: [
      "ec",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ea-1f1e8",
        native: "🇪🇨"
      }
    ],
    version: 2
  },
  "flag-ee": {
    id: "flag-ee",
    name: "Estonia Flag",
    keywords: [
      "ee",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ea-1f1ea",
        native: "🇪🇪"
      }
    ],
    version: 2
  },
  "flag-eg": {
    id: "flag-eg",
    name: "Egypt Flag",
    keywords: [
      "eg",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ea-1f1ec",
        native: "🇪🇬"
      }
    ],
    version: 2
  },
  "flag-eh": {
    id: "flag-eh",
    name: "Western Sahara Flag",
    keywords: [
      "eh",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ea-1f1ed",
        native: "🇪🇭"
      }
    ],
    version: 2
  },
  "flag-er": {
    id: "flag-er",
    name: "Eritrea Flag",
    keywords: [
      "er",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ea-1f1f7",
        native: "🇪🇷"
      }
    ],
    version: 2
  },
  es: {
    id: "es",
    name: "Spain Flag",
    keywords: [
      "es",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ea-1f1f8",
        native: "🇪🇸"
      }
    ],
    version: 1
  },
  "flag-et": {
    id: "flag-et",
    name: "Ethiopia Flag",
    keywords: [
      "et",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ea-1f1f9",
        native: "🇪🇹"
      }
    ],
    version: 2
  },
  "flag-eu": {
    id: "flag-eu",
    name: "European Union Flag",
    keywords: [
      "eu",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ea-1f1fa",
        native: "🇪🇺"
      }
    ],
    version: 2
  },
  "flag-fi": {
    id: "flag-fi",
    name: "Finland Flag",
    keywords: [
      "fi",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1eb-1f1ee",
        native: "🇫🇮"
      }
    ],
    version: 2
  },
  "flag-fj": {
    id: "flag-fj",
    name: "Fiji Flag",
    keywords: [
      "fj",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1eb-1f1ef",
        native: "🇫🇯"
      }
    ],
    version: 2
  },
  "flag-fk": {
    id: "flag-fk",
    name: "Falkland Islands Flag",
    keywords: [
      "fk",
      "malvinas",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1eb-1f1f0",
        native: "🇫🇰"
      }
    ],
    version: 2
  },
  "flag-fm": {
    id: "flag-fm",
    name: "Micronesia Flag",
    keywords: [
      "fm",
      "federated",
      "states",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1eb-1f1f2",
        native: "🇫🇲"
      }
    ],
    version: 2
  },
  "flag-fo": {
    id: "flag-fo",
    name: "Faroe Islands Flag",
    keywords: [
      "fo",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1eb-1f1f4",
        native: "🇫🇴"
      }
    ],
    version: 2
  },
  fr: {
    id: "fr",
    name: "France Flag",
    keywords: [
      "fr",
      "banner",
      "nation",
      "french",
      "country"
    ],
    skins: [
      {
        unified: "1f1eb-1f1f7",
        native: "🇫🇷"
      }
    ],
    version: 1
  },
  "flag-ga": {
    id: "flag-ga",
    name: "Gabon Flag",
    keywords: [
      "ga",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ec-1f1e6",
        native: "🇬🇦"
      }
    ],
    version: 2
  },
  gb: {
    id: "gb",
    name: "United Kingdom Flag",
    keywords: [
      "gb",
      "uk",
      "great",
      "britain",
      "northern",
      "ireland",
      "nation",
      "country",
      "banner",
      "british",
      "UK",
      "english",
      "england",
      "union",
      "jack"
    ],
    skins: [
      {
        unified: "1f1ec-1f1e7",
        native: "🇬🇧"
      }
    ],
    version: 1
  },
  "flag-gd": {
    id: "flag-gd",
    name: "Grenada Flag",
    keywords: [
      "gd",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ec-1f1e9",
        native: "🇬🇩"
      }
    ],
    version: 2
  },
  "flag-ge": {
    id: "flag-ge",
    name: "Georgia Flag",
    keywords: [
      "ge",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ec-1f1ea",
        native: "🇬🇪"
      }
    ],
    version: 2
  },
  "flag-gf": {
    id: "flag-gf",
    name: "French Guiana Flag",
    keywords: [
      "gf",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ec-1f1eb",
        native: "🇬🇫"
      }
    ],
    version: 2
  },
  "flag-gg": {
    id: "flag-gg",
    name: "Guernsey Flag",
    keywords: [
      "gg",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ec-1f1ec",
        native: "🇬🇬"
      }
    ],
    version: 2
  },
  "flag-gh": {
    id: "flag-gh",
    name: "Ghana Flag",
    keywords: [
      "gh",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ec-1f1ed",
        native: "🇬🇭"
      }
    ],
    version: 2
  },
  "flag-gi": {
    id: "flag-gi",
    name: "Gibraltar Flag",
    keywords: [
      "gi",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ec-1f1ee",
        native: "🇬🇮"
      }
    ],
    version: 2
  },
  "flag-gl": {
    id: "flag-gl",
    name: "Greenland Flag",
    keywords: [
      "gl",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ec-1f1f1",
        native: "🇬🇱"
      }
    ],
    version: 2
  },
  "flag-gm": {
    id: "flag-gm",
    name: "Gambia Flag",
    keywords: [
      "gm",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ec-1f1f2",
        native: "🇬🇲"
      }
    ],
    version: 2
  },
  "flag-gn": {
    id: "flag-gn",
    name: "Guinea Flag",
    keywords: [
      "gn",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ec-1f1f3",
        native: "🇬🇳"
      }
    ],
    version: 2
  },
  "flag-gp": {
    id: "flag-gp",
    name: "Guadeloupe Flag",
    keywords: [
      "gp",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ec-1f1f5",
        native: "🇬🇵"
      }
    ],
    version: 2
  },
  "flag-gq": {
    id: "flag-gq",
    name: "Equatorial Guinea Flag",
    keywords: [
      "gq",
      "gn",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ec-1f1f6",
        native: "🇬🇶"
      }
    ],
    version: 2
  },
  "flag-gr": {
    id: "flag-gr",
    name: "Greece Flag",
    keywords: [
      "gr",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ec-1f1f7",
        native: "🇬🇷"
      }
    ],
    version: 2
  },
  "flag-gs": {
    id: "flag-gs",
    name: "South Georgia & South Sandwich Islands Flag",
    keywords: [
      "gs",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ec-1f1f8",
        native: "🇬🇸"
      }
    ],
    version: 2
  },
  "flag-gt": {
    id: "flag-gt",
    name: "Guatemala Flag",
    keywords: [
      "gt",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ec-1f1f9",
        native: "🇬🇹"
      }
    ],
    version: 2
  },
  "flag-gu": {
    id: "flag-gu",
    name: "Guam Flag",
    keywords: [
      "gu",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ec-1f1fa",
        native: "🇬🇺"
      }
    ],
    version: 2
  },
  "flag-gw": {
    id: "flag-gw",
    name: "Guinea-Bissau Flag",
    keywords: [
      "gw",
      "guinea",
      "bissau",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ec-1f1fc",
        native: "🇬🇼"
      }
    ],
    version: 2
  },
  "flag-gy": {
    id: "flag-gy",
    name: "Guyana Flag",
    keywords: [
      "gy",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ec-1f1fe",
        native: "🇬🇾"
      }
    ],
    version: 2
  },
  "flag-hk": {
    id: "flag-hk",
    name: "Hong Kong Sar China Flag",
    keywords: [
      "hk",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ed-1f1f0",
        native: "🇭🇰"
      }
    ],
    version: 2
  },
  "flag-hm": {
    id: "flag-hm",
    name: "Heard & Mcdonald Islands Flag",
    keywords: [
      "hm"
    ],
    skins: [
      {
        unified: "1f1ed-1f1f2",
        native: "🇭🇲"
      }
    ],
    version: 2
  },
  "flag-hn": {
    id: "flag-hn",
    name: "Honduras Flag",
    keywords: [
      "hn",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ed-1f1f3",
        native: "🇭🇳"
      }
    ],
    version: 2
  },
  "flag-hr": {
    id: "flag-hr",
    name: "Croatia Flag",
    keywords: [
      "hr",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ed-1f1f7",
        native: "🇭🇷"
      }
    ],
    version: 2
  },
  "flag-ht": {
    id: "flag-ht",
    name: "Haiti Flag",
    keywords: [
      "ht",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ed-1f1f9",
        native: "🇭🇹"
      }
    ],
    version: 2
  },
  "flag-hu": {
    id: "flag-hu",
    name: "Hungary Flag",
    keywords: [
      "hu",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ed-1f1fa",
        native: "🇭🇺"
      }
    ],
    version: 2
  },
  "flag-ic": {
    id: "flag-ic",
    name: "Canary Islands Flag",
    keywords: [
      "ic",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ee-1f1e8",
        native: "🇮🇨"
      }
    ],
    version: 2
  },
  "flag-id": {
    id: "flag-id",
    name: "Indonesia Flag",
    keywords: [
      "id",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ee-1f1e9",
        native: "🇮🇩"
      }
    ],
    version: 2
  },
  "flag-ie": {
    id: "flag-ie",
    name: "Ireland Flag",
    keywords: [
      "ie",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ee-1f1ea",
        native: "🇮🇪"
      }
    ],
    version: 2
  },
  "flag-il": {
    id: "flag-il",
    name: "Israel Flag",
    keywords: [
      "il",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ee-1f1f1",
        native: "🇮🇱"
      }
    ],
    version: 2
  },
  "flag-im": {
    id: "flag-im",
    name: "Isle of Man Flag",
    keywords: [
      "im",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ee-1f1f2",
        native: "🇮🇲"
      }
    ],
    version: 2
  },
  "flag-in": {
    id: "flag-in",
    name: "India Flag",
    keywords: [
      "in",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ee-1f1f3",
        native: "🇮🇳"
      }
    ],
    version: 2
  },
  "flag-io": {
    id: "flag-io",
    name: "British Indian Ocean Territory Flag",
    keywords: [
      "io",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ee-1f1f4",
        native: "🇮🇴"
      }
    ],
    version: 2
  },
  "flag-iq": {
    id: "flag-iq",
    name: "Iraq Flag",
    keywords: [
      "iq",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ee-1f1f6",
        native: "🇮🇶"
      }
    ],
    version: 2
  },
  "flag-ir": {
    id: "flag-ir",
    name: "Iran Flag",
    keywords: [
      "ir",
      "islamic",
      "republic",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ee-1f1f7",
        native: "🇮🇷"
      }
    ],
    version: 2
  },
  "flag-is": {
    id: "flag-is",
    name: "Iceland Flag",
    keywords: [
      "is",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ee-1f1f8",
        native: "🇮🇸"
      }
    ],
    version: 2
  },
  it: {
    id: "it",
    name: "Italy Flag",
    keywords: [
      "it",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ee-1f1f9",
        native: "🇮🇹"
      }
    ],
    version: 1
  },
  "flag-je": {
    id: "flag-je",
    name: "Jersey Flag",
    keywords: [
      "je",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ef-1f1ea",
        native: "🇯🇪"
      }
    ],
    version: 2
  },
  "flag-jm": {
    id: "flag-jm",
    name: "Jamaica Flag",
    keywords: [
      "jm",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ef-1f1f2",
        native: "🇯🇲"
      }
    ],
    version: 2
  },
  "flag-jo": {
    id: "flag-jo",
    name: "Jordan Flag",
    keywords: [
      "jo",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ef-1f1f4",
        native: "🇯🇴"
      }
    ],
    version: 2
  },
  jp: {
    id: "jp",
    name: "Japan Flag",
    keywords: [
      "jp",
      "japanese",
      "nation",
      "country",
      "banner",
      "ja"
    ],
    skins: [
      {
        unified: "1f1ef-1f1f5",
        native: "🇯🇵"
      }
    ],
    version: 1
  },
  "flag-ke": {
    id: "flag-ke",
    name: "Kenya Flag",
    keywords: [
      "ke",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f0-1f1ea",
        native: "🇰🇪"
      }
    ],
    version: 2
  },
  "flag-kg": {
    id: "flag-kg",
    name: "Kyrgyzstan Flag",
    keywords: [
      "kg",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f0-1f1ec",
        native: "🇰🇬"
      }
    ],
    version: 2
  },
  "flag-kh": {
    id: "flag-kh",
    name: "Cambodia Flag",
    keywords: [
      "kh",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f0-1f1ed",
        native: "🇰🇭"
      }
    ],
    version: 2
  },
  "flag-ki": {
    id: "flag-ki",
    name: "Kiribati Flag",
    keywords: [
      "ki",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f0-1f1ee",
        native: "🇰🇮"
      }
    ],
    version: 2
  },
  "flag-km": {
    id: "flag-km",
    name: "Comoros Flag",
    keywords: [
      "km",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f0-1f1f2",
        native: "🇰🇲"
      }
    ],
    version: 2
  },
  "flag-kn": {
    id: "flag-kn",
    name: "St. Kitts & Nevis Flag",
    keywords: [
      "kn",
      "st",
      "saint",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f0-1f1f3",
        native: "🇰🇳"
      }
    ],
    version: 2
  },
  "flag-kp": {
    id: "flag-kp",
    name: "North Korea Flag",
    keywords: [
      "kp",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f0-1f1f5",
        native: "🇰🇵"
      }
    ],
    version: 2
  },
  kr: {
    id: "kr",
    name: "South Korea Flag",
    keywords: [
      "kr",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f0-1f1f7",
        native: "🇰🇷"
      }
    ],
    version: 1
  },
  "flag-kw": {
    id: "flag-kw",
    name: "Kuwait Flag",
    keywords: [
      "kw",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f0-1f1fc",
        native: "🇰🇼"
      }
    ],
    version: 2
  },
  "flag-ky": {
    id: "flag-ky",
    name: "Cayman Islands Flag",
    keywords: [
      "ky",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f0-1f1fe",
        native: "🇰🇾"
      }
    ],
    version: 2
  },
  "flag-kz": {
    id: "flag-kz",
    name: "Kazakhstan Flag",
    keywords: [
      "kz",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f0-1f1ff",
        native: "🇰🇿"
      }
    ],
    version: 2
  },
  "flag-la": {
    id: "flag-la",
    name: "Laos Flag",
    keywords: [
      "la",
      "lao",
      "democratic",
      "republic",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f1-1f1e6",
        native: "🇱🇦"
      }
    ],
    version: 2
  },
  "flag-lb": {
    id: "flag-lb",
    name: "Lebanon Flag",
    keywords: [
      "lb",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f1-1f1e7",
        native: "🇱🇧"
      }
    ],
    version: 2
  },
  "flag-lc": {
    id: "flag-lc",
    name: "St. Lucia Flag",
    keywords: [
      "lc",
      "st",
      "saint",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f1-1f1e8",
        native: "🇱🇨"
      }
    ],
    version: 2
  },
  "flag-li": {
    id: "flag-li",
    name: "Liechtenstein Flag",
    keywords: [
      "li",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f1-1f1ee",
        native: "🇱🇮"
      }
    ],
    version: 2
  },
  "flag-lk": {
    id: "flag-lk",
    name: "Sri Lanka Flag",
    keywords: [
      "lk",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f1-1f1f0",
        native: "🇱🇰"
      }
    ],
    version: 2
  },
  "flag-lr": {
    id: "flag-lr",
    name: "Liberia Flag",
    keywords: [
      "lr",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f1-1f1f7",
        native: "🇱🇷"
      }
    ],
    version: 2
  },
  "flag-ls": {
    id: "flag-ls",
    name: "Lesotho Flag",
    keywords: [
      "ls",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f1-1f1f8",
        native: "🇱🇸"
      }
    ],
    version: 2
  },
  "flag-lt": {
    id: "flag-lt",
    name: "Lithuania Flag",
    keywords: [
      "lt",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f1-1f1f9",
        native: "🇱🇹"
      }
    ],
    version: 2
  },
  "flag-lu": {
    id: "flag-lu",
    name: "Luxembourg Flag",
    keywords: [
      "lu",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f1-1f1fa",
        native: "🇱🇺"
      }
    ],
    version: 2
  },
  "flag-lv": {
    id: "flag-lv",
    name: "Latvia Flag",
    keywords: [
      "lv",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f1-1f1fb",
        native: "🇱🇻"
      }
    ],
    version: 2
  },
  "flag-ly": {
    id: "flag-ly",
    name: "Libya Flag",
    keywords: [
      "ly",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f1-1f1fe",
        native: "🇱🇾"
      }
    ],
    version: 2
  },
  "flag-ma": {
    id: "flag-ma",
    name: "Morocco Flag",
    keywords: [
      "ma",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f2-1f1e6",
        native: "🇲🇦"
      }
    ],
    version: 2
  },
  "flag-mc": {
    id: "flag-mc",
    name: "Monaco Flag",
    keywords: [
      "mc",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f2-1f1e8",
        native: "🇲🇨"
      }
    ],
    version: 2
  },
  "flag-md": {
    id: "flag-md",
    name: "Moldova Flag",
    keywords: [
      "md",
      "republic",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f2-1f1e9",
        native: "🇲🇩"
      }
    ],
    version: 2
  },
  "flag-me": {
    id: "flag-me",
    name: "Montenegro Flag",
    keywords: [
      "me",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f2-1f1ea",
        native: "🇲🇪"
      }
    ],
    version: 2
  },
  "flag-mf": {
    id: "flag-mf",
    name: "St. Martin Flag",
    keywords: [
      "mf",
      "st"
    ],
    skins: [
      {
        unified: "1f1f2-1f1eb",
        native: "🇲🇫"
      }
    ],
    version: 2
  },
  "flag-mg": {
    id: "flag-mg",
    name: "Madagascar Flag",
    keywords: [
      "mg",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f2-1f1ec",
        native: "🇲🇬"
      }
    ],
    version: 2
  },
  "flag-mh": {
    id: "flag-mh",
    name: "Marshall Islands Flag",
    keywords: [
      "mh",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f2-1f1ed",
        native: "🇲🇭"
      }
    ],
    version: 2
  },
  "flag-mk": {
    id: "flag-mk",
    name: "North Macedonia Flag",
    keywords: [
      "mk",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f2-1f1f0",
        native: "🇲🇰"
      }
    ],
    version: 2
  },
  "flag-ml": {
    id: "flag-ml",
    name: "Mali Flag",
    keywords: [
      "ml",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f2-1f1f1",
        native: "🇲🇱"
      }
    ],
    version: 2
  },
  "flag-mm": {
    id: "flag-mm",
    name: "Myanmar (burma) Flag",
    keywords: [
      "mm",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f2-1f1f2",
        native: "🇲🇲"
      }
    ],
    version: 2
  },
  "flag-mn": {
    id: "flag-mn",
    name: "Mongolia Flag",
    keywords: [
      "mn",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f2-1f1f3",
        native: "🇲🇳"
      }
    ],
    version: 2
  },
  "flag-mo": {
    id: "flag-mo",
    name: "Macao Sar China Flag",
    keywords: [
      "mo",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f2-1f1f4",
        native: "🇲🇴"
      }
    ],
    version: 2
  },
  "flag-mp": {
    id: "flag-mp",
    name: "Northern Mariana Islands Flag",
    keywords: [
      "mp",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f2-1f1f5",
        native: "🇲🇵"
      }
    ],
    version: 2
  },
  "flag-mq": {
    id: "flag-mq",
    name: "Martinique Flag",
    keywords: [
      "mq",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f2-1f1f6",
        native: "🇲🇶"
      }
    ],
    version: 2
  },
  "flag-mr": {
    id: "flag-mr",
    name: "Mauritania Flag",
    keywords: [
      "mr",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f2-1f1f7",
        native: "🇲🇷"
      }
    ],
    version: 2
  },
  "flag-ms": {
    id: "flag-ms",
    name: "Montserrat Flag",
    keywords: [
      "ms",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f2-1f1f8",
        native: "🇲🇸"
      }
    ],
    version: 2
  },
  "flag-mt": {
    id: "flag-mt",
    name: "Malta Flag",
    keywords: [
      "mt",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f2-1f1f9",
        native: "🇲🇹"
      }
    ],
    version: 2
  },
  "flag-mu": {
    id: "flag-mu",
    name: "Mauritius Flag",
    keywords: [
      "mu",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f2-1f1fa",
        native: "🇲🇺"
      }
    ],
    version: 2
  },
  "flag-mv": {
    id: "flag-mv",
    name: "Maldives Flag",
    keywords: [
      "mv",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f2-1f1fb",
        native: "🇲🇻"
      }
    ],
    version: 2
  },
  "flag-mw": {
    id: "flag-mw",
    name: "Malawi Flag",
    keywords: [
      "mw",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f2-1f1fc",
        native: "🇲🇼"
      }
    ],
    version: 2
  },
  "flag-mx": {
    id: "flag-mx",
    name: "Mexico Flag",
    keywords: [
      "mx",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f2-1f1fd",
        native: "🇲🇽"
      }
    ],
    version: 2
  },
  "flag-my": {
    id: "flag-my",
    name: "Malaysia Flag",
    keywords: [
      "my",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f2-1f1fe",
        native: "🇲🇾"
      }
    ],
    version: 2
  },
  "flag-mz": {
    id: "flag-mz",
    name: "Mozambique Flag",
    keywords: [
      "mz",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f2-1f1ff",
        native: "🇲🇿"
      }
    ],
    version: 2
  },
  "flag-na": {
    id: "flag-na",
    name: "Namibia Flag",
    keywords: [
      "na",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f3-1f1e6",
        native: "🇳🇦"
      }
    ],
    version: 2
  },
  "flag-nc": {
    id: "flag-nc",
    name: "New Caledonia Flag",
    keywords: [
      "nc",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f3-1f1e8",
        native: "🇳🇨"
      }
    ],
    version: 2
  },
  "flag-ne": {
    id: "flag-ne",
    name: "Niger Flag",
    keywords: [
      "ne",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f3-1f1ea",
        native: "🇳🇪"
      }
    ],
    version: 2
  },
  "flag-nf": {
    id: "flag-nf",
    name: "Norfolk Island Flag",
    keywords: [
      "nf",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f3-1f1eb",
        native: "🇳🇫"
      }
    ],
    version: 2
  },
  "flag-ng": {
    id: "flag-ng",
    name: "Nigeria Flag",
    keywords: [
      "ng",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f3-1f1ec",
        native: "🇳🇬"
      }
    ],
    version: 2
  },
  "flag-ni": {
    id: "flag-ni",
    name: "Nicaragua Flag",
    keywords: [
      "ni",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f3-1f1ee",
        native: "🇳🇮"
      }
    ],
    version: 2
  },
  "flag-nl": {
    id: "flag-nl",
    name: "Netherlands Flag",
    keywords: [
      "nl",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f3-1f1f1",
        native: "🇳🇱"
      }
    ],
    version: 2
  },
  "flag-no": {
    id: "flag-no",
    name: "Norway Flag",
    keywords: [
      "no",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f3-1f1f4",
        native: "🇳🇴"
      }
    ],
    version: 2
  },
  "flag-np": {
    id: "flag-np",
    name: "Nepal Flag",
    keywords: [
      "np",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f3-1f1f5",
        native: "🇳🇵"
      }
    ],
    version: 2
  },
  "flag-nr": {
    id: "flag-nr",
    name: "Nauru Flag",
    keywords: [
      "nr",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f3-1f1f7",
        native: "🇳🇷"
      }
    ],
    version: 2
  },
  "flag-nu": {
    id: "flag-nu",
    name: "Niue Flag",
    keywords: [
      "nu",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f3-1f1fa",
        native: "🇳🇺"
      }
    ],
    version: 2
  },
  "flag-nz": {
    id: "flag-nz",
    name: "New Zealand Flag",
    keywords: [
      "nz",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f3-1f1ff",
        native: "🇳🇿"
      }
    ],
    version: 2
  },
  "flag-om": {
    id: "flag-om",
    name: "Oman Flag",
    keywords: [
      "om",
      "symbol",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f4-1f1f2",
        native: "🇴🇲"
      }
    ],
    version: 2
  },
  "flag-pa": {
    id: "flag-pa",
    name: "Panama Flag",
    keywords: [
      "pa",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f5-1f1e6",
        native: "🇵🇦"
      }
    ],
    version: 2
  },
  "flag-pe": {
    id: "flag-pe",
    name: "Peru Flag",
    keywords: [
      "pe",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f5-1f1ea",
        native: "🇵🇪"
      }
    ],
    version: 2
  },
  "flag-pf": {
    id: "flag-pf",
    name: "French Polynesia Flag",
    keywords: [
      "pf",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f5-1f1eb",
        native: "🇵🇫"
      }
    ],
    version: 2
  },
  "flag-pg": {
    id: "flag-pg",
    name: "Papua New Guinea Flag",
    keywords: [
      "pg",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f5-1f1ec",
        native: "🇵🇬"
      }
    ],
    version: 2
  },
  "flag-ph": {
    id: "flag-ph",
    name: "Philippines Flag",
    keywords: [
      "ph",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f5-1f1ed",
        native: "🇵🇭"
      }
    ],
    version: 2
  },
  "flag-pk": {
    id: "flag-pk",
    name: "Pakistan Flag",
    keywords: [
      "pk",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f5-1f1f0",
        native: "🇵🇰"
      }
    ],
    version: 2
  },
  "flag-pl": {
    id: "flag-pl",
    name: "Poland Flag",
    keywords: [
      "pl",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f5-1f1f1",
        native: "🇵🇱"
      }
    ],
    version: 2
  },
  "flag-pm": {
    id: "flag-pm",
    name: "St. Pierre & Miquelon Flag",
    keywords: [
      "pm",
      "st",
      "saint",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f5-1f1f2",
        native: "🇵🇲"
      }
    ],
    version: 2
  },
  "flag-pn": {
    id: "flag-pn",
    name: "Pitcairn Islands Flag",
    keywords: [
      "pn",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f5-1f1f3",
        native: "🇵🇳"
      }
    ],
    version: 2
  },
  "flag-pr": {
    id: "flag-pr",
    name: "Puerto Rico Flag",
    keywords: [
      "pr",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f5-1f1f7",
        native: "🇵🇷"
      }
    ],
    version: 2
  },
  "flag-ps": {
    id: "flag-ps",
    name: "Palestinian Territories Flag",
    keywords: [
      "ps",
      "palestine",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f5-1f1f8",
        native: "🇵🇸"
      }
    ],
    version: 2
  },
  "flag-pt": {
    id: "flag-pt",
    name: "Portugal Flag",
    keywords: [
      "pt",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f5-1f1f9",
        native: "🇵🇹"
      }
    ],
    version: 2
  },
  "flag-pw": {
    id: "flag-pw",
    name: "Palau Flag",
    keywords: [
      "pw",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f5-1f1fc",
        native: "🇵🇼"
      }
    ],
    version: 2
  },
  "flag-py": {
    id: "flag-py",
    name: "Paraguay Flag",
    keywords: [
      "py",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f5-1f1fe",
        native: "🇵🇾"
      }
    ],
    version: 2
  },
  "flag-qa": {
    id: "flag-qa",
    name: "Qatar Flag",
    keywords: [
      "qa",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f6-1f1e6",
        native: "🇶🇦"
      }
    ],
    version: 2
  },
  "flag-re": {
    id: "flag-re",
    name: "Réunion Flag",
    keywords: [
      "re",
      "reunion",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f7-1f1ea",
        native: "🇷🇪"
      }
    ],
    version: 2
  },
  "flag-ro": {
    id: "flag-ro",
    name: "Romania Flag",
    keywords: [
      "ro",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f7-1f1f4",
        native: "🇷🇴"
      }
    ],
    version: 2
  },
  "flag-rs": {
    id: "flag-rs",
    name: "Serbia Flag",
    keywords: [
      "rs",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f7-1f1f8",
        native: "🇷🇸"
      }
    ],
    version: 2
  },
  ru: {
    id: "ru",
    name: "Russia Flag",
    keywords: [
      "ru",
      "russian",
      "federation",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f7-1f1fa",
        native: "🇷🇺"
      }
    ],
    version: 1
  },
  "flag-rw": {
    id: "flag-rw",
    name: "Rwanda Flag",
    keywords: [
      "rw",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f7-1f1fc",
        native: "🇷🇼"
      }
    ],
    version: 2
  },
  "flag-sa": {
    id: "flag-sa",
    name: "Saudi Arabia Flag",
    keywords: [
      "sa",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f8-1f1e6",
        native: "🇸🇦"
      }
    ],
    version: 2
  },
  "flag-sb": {
    id: "flag-sb",
    name: "Solomon Islands Flag",
    keywords: [
      "sb",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f8-1f1e7",
        native: "🇸🇧"
      }
    ],
    version: 2
  },
  "flag-sc": {
    id: "flag-sc",
    name: "Seychelles Flag",
    keywords: [
      "sc",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f8-1f1e8",
        native: "🇸🇨"
      }
    ],
    version: 2
  },
  "flag-sd": {
    id: "flag-sd",
    name: "Sudan Flag",
    keywords: [
      "sd",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f8-1f1e9",
        native: "🇸🇩"
      }
    ],
    version: 2
  },
  "flag-se": {
    id: "flag-se",
    name: "Sweden Flag",
    keywords: [
      "se",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f8-1f1ea",
        native: "🇸🇪"
      }
    ],
    version: 2
  },
  "flag-sg": {
    id: "flag-sg",
    name: "Singapore Flag",
    keywords: [
      "sg",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f8-1f1ec",
        native: "🇸🇬"
      }
    ],
    version: 2
  },
  "flag-sh": {
    id: "flag-sh",
    name: "St. Helena Flag",
    keywords: [
      "sh",
      "st",
      "saint",
      "ascension",
      "tristan",
      "cunha",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f8-1f1ed",
        native: "🇸🇭"
      }
    ],
    version: 2
  },
  "flag-si": {
    id: "flag-si",
    name: "Slovenia Flag",
    keywords: [
      "si",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f8-1f1ee",
        native: "🇸🇮"
      }
    ],
    version: 2
  },
  "flag-sj": {
    id: "flag-sj",
    name: "Svalbard & Jan Mayen Flag",
    keywords: [
      "sj"
    ],
    skins: [
      {
        unified: "1f1f8-1f1ef",
        native: "🇸🇯"
      }
    ],
    version: 2
  },
  "flag-sk": {
    id: "flag-sk",
    name: "Slovakia Flag",
    keywords: [
      "sk",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f8-1f1f0",
        native: "🇸🇰"
      }
    ],
    version: 2
  },
  "flag-sl": {
    id: "flag-sl",
    name: "Sierra Leone Flag",
    keywords: [
      "sl",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f8-1f1f1",
        native: "🇸🇱"
      }
    ],
    version: 2
  },
  "flag-sm": {
    id: "flag-sm",
    name: "San Marino Flag",
    keywords: [
      "sm",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f8-1f1f2",
        native: "🇸🇲"
      }
    ],
    version: 2
  },
  "flag-sn": {
    id: "flag-sn",
    name: "Senegal Flag",
    keywords: [
      "sn",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f8-1f1f3",
        native: "🇸🇳"
      }
    ],
    version: 2
  },
  "flag-so": {
    id: "flag-so",
    name: "Somalia Flag",
    keywords: [
      "so",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f8-1f1f4",
        native: "🇸🇴"
      }
    ],
    version: 2
  },
  "flag-sr": {
    id: "flag-sr",
    name: "Suriname Flag",
    keywords: [
      "sr",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f8-1f1f7",
        native: "🇸🇷"
      }
    ],
    version: 2
  },
  "flag-ss": {
    id: "flag-ss",
    name: "South Sudan Flag",
    keywords: [
      "ss",
      "sd",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f8-1f1f8",
        native: "🇸🇸"
      }
    ],
    version: 2
  },
  "flag-st": {
    id: "flag-st",
    name: "São Tomé & Príncipe Flag",
    keywords: [
      "st",
      "sao",
      "tome",
      "principe",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f8-1f1f9",
        native: "🇸🇹"
      }
    ],
    version: 2
  },
  "flag-sv": {
    id: "flag-sv",
    name: "El Salvador Flag",
    keywords: [
      "sv",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f8-1f1fb",
        native: "🇸🇻"
      }
    ],
    version: 2
  },
  "flag-sx": {
    id: "flag-sx",
    name: "Sint Maarten Flag",
    keywords: [
      "sx",
      "dutch",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f8-1f1fd",
        native: "🇸🇽"
      }
    ],
    version: 2
  },
  "flag-sy": {
    id: "flag-sy",
    name: "Syria Flag",
    keywords: [
      "sy",
      "syrian",
      "arab",
      "republic",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f8-1f1fe",
        native: "🇸🇾"
      }
    ],
    version: 2
  },
  "flag-sz": {
    id: "flag-sz",
    name: "Eswatini Flag",
    keywords: [
      "sz",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f8-1f1ff",
        native: "🇸🇿"
      }
    ],
    version: 2
  },
  "flag-ta": {
    id: "flag-ta",
    name: "Tristan Da Cunha Flag",
    keywords: [
      "ta"
    ],
    skins: [
      {
        unified: "1f1f9-1f1e6",
        native: "🇹🇦"
      }
    ],
    version: 2
  },
  "flag-tc": {
    id: "flag-tc",
    name: "Turks & Caicos Islands Flag",
    keywords: [
      "tc",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f9-1f1e8",
        native: "🇹🇨"
      }
    ],
    version: 2
  },
  "flag-td": {
    id: "flag-td",
    name: "Chad Flag",
    keywords: [
      "td",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f9-1f1e9",
        native: "🇹🇩"
      }
    ],
    version: 2
  },
  "flag-tf": {
    id: "flag-tf",
    name: "French Southern Territories Flag",
    keywords: [
      "tf",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f9-1f1eb",
        native: "🇹🇫"
      }
    ],
    version: 2
  },
  "flag-tg": {
    id: "flag-tg",
    name: "Togo Flag",
    keywords: [
      "tg",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f9-1f1ec",
        native: "🇹🇬"
      }
    ],
    version: 2
  },
  "flag-th": {
    id: "flag-th",
    name: "Thailand Flag",
    keywords: [
      "th",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f9-1f1ed",
        native: "🇹🇭"
      }
    ],
    version: 2
  },
  "flag-tj": {
    id: "flag-tj",
    name: "Tajikistan Flag",
    keywords: [
      "tj",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f9-1f1ef",
        native: "🇹🇯"
      }
    ],
    version: 2
  },
  "flag-tk": {
    id: "flag-tk",
    name: "Tokelau Flag",
    keywords: [
      "tk",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f9-1f1f0",
        native: "🇹🇰"
      }
    ],
    version: 2
  },
  "flag-tl": {
    id: "flag-tl",
    name: "Timor-Leste Flag",
    keywords: [
      "tl",
      "timor",
      "leste",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f9-1f1f1",
        native: "🇹🇱"
      }
    ],
    version: 2
  },
  "flag-tm": {
    id: "flag-tm",
    name: "Turkmenistan Flag",
    keywords: [
      "tm",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f9-1f1f2",
        native: "🇹🇲"
      }
    ],
    version: 2
  },
  "flag-tn": {
    id: "flag-tn",
    name: "Tunisia Flag",
    keywords: [
      "tn",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f9-1f1f3",
        native: "🇹🇳"
      }
    ],
    version: 2
  },
  "flag-to": {
    id: "flag-to",
    name: "Tonga Flag",
    keywords: [
      "to",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f9-1f1f4",
        native: "🇹🇴"
      }
    ],
    version: 2
  },
  "flag-tr": {
    id: "flag-tr",
    name: "Turkey Flag",
    keywords: [
      "tr",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f9-1f1f7",
        native: "🇹🇷"
      }
    ],
    version: 2
  },
  "flag-tt": {
    id: "flag-tt",
    name: "Trinidad & Tobago Flag",
    keywords: [
      "tt",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f9-1f1f9",
        native: "🇹🇹"
      }
    ],
    version: 2
  },
  "flag-tv": {
    id: "flag-tv",
    name: "Tuvalu Flag",
    keywords: [
      "tv",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f9-1f1fb",
        native: "🇹🇻"
      }
    ],
    version: 2
  },
  "flag-tw": {
    id: "flag-tw",
    name: "Taiwan Flag",
    keywords: [
      "tw",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f9-1f1fc",
        native: "🇹🇼"
      }
    ],
    version: 2
  },
  "flag-tz": {
    id: "flag-tz",
    name: "Tanzania Flag",
    keywords: [
      "tz",
      "united",
      "republic",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1f9-1f1ff",
        native: "🇹🇿"
      }
    ],
    version: 2
  },
  "flag-ua": {
    id: "flag-ua",
    name: "Ukraine Flag",
    keywords: [
      "ua",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1fa-1f1e6",
        native: "🇺🇦"
      }
    ],
    version: 2
  },
  "flag-ug": {
    id: "flag-ug",
    name: "Uganda Flag",
    keywords: [
      "ug",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1fa-1f1ec",
        native: "🇺🇬"
      }
    ],
    version: 2
  },
  "flag-um": {
    id: "flag-um",
    name: "U.s. Outlying Islands Flag",
    keywords: [
      "um",
      "u",
      "s"
    ],
    skins: [
      {
        unified: "1f1fa-1f1f2",
        native: "🇺🇲"
      }
    ],
    version: 2
  },
  "flag-un": {
    id: "flag-un",
    name: "United Nations Flag",
    keywords: [
      "un",
      "banner"
    ],
    skins: [
      {
        unified: "1f1fa-1f1f3",
        native: "🇺🇳"
      }
    ],
    version: 4
  },
  us: {
    id: "us",
    name: "United States Flag",
    keywords: [
      "us",
      "america",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1fa-1f1f8",
        native: "🇺🇸"
      }
    ],
    version: 1
  },
  "flag-uy": {
    id: "flag-uy",
    name: "Uruguay Flag",
    keywords: [
      "uy",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1fa-1f1fe",
        native: "🇺🇾"
      }
    ],
    version: 2
  },
  "flag-uz": {
    id: "flag-uz",
    name: "Uzbekistan Flag",
    keywords: [
      "uz",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1fa-1f1ff",
        native: "🇺🇿"
      }
    ],
    version: 2
  },
  "flag-va": {
    id: "flag-va",
    name: "Vatican City Flag",
    keywords: [
      "va",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1fb-1f1e6",
        native: "🇻🇦"
      }
    ],
    version: 2
  },
  "flag-vc": {
    id: "flag-vc",
    name: "St. Vincent & Grenadines Flag",
    keywords: [
      "vc",
      "st",
      "saint",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1fb-1f1e8",
        native: "🇻🇨"
      }
    ],
    version: 2
  },
  "flag-ve": {
    id: "flag-ve",
    name: "Venezuela Flag",
    keywords: [
      "ve",
      "bolivarian",
      "republic",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1fb-1f1ea",
        native: "🇻🇪"
      }
    ],
    version: 2
  },
  "flag-vg": {
    id: "flag-vg",
    name: "British Virgin Islands Flag",
    keywords: [
      "vg",
      "bvi",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1fb-1f1ec",
        native: "🇻🇬"
      }
    ],
    version: 2
  },
  "flag-vi": {
    id: "flag-vi",
    name: "U.s. Virgin Islands Flag",
    keywords: [
      "vi",
      "u",
      "s",
      "us",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1fb-1f1ee",
        native: "🇻🇮"
      }
    ],
    version: 2
  },
  "flag-vn": {
    id: "flag-vn",
    name: "Vietnam Flag",
    keywords: [
      "vn",
      "viet",
      "nam",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1fb-1f1f3",
        native: "🇻🇳"
      }
    ],
    version: 2
  },
  "flag-vu": {
    id: "flag-vu",
    name: "Vanuatu Flag",
    keywords: [
      "vu",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1fb-1f1fa",
        native: "🇻🇺"
      }
    ],
    version: 2
  },
  "flag-wf": {
    id: "flag-wf",
    name: "Wallis & Futuna Flag",
    keywords: [
      "wf",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1fc-1f1eb",
        native: "🇼🇫"
      }
    ],
    version: 2
  },
  "flag-ws": {
    id: "flag-ws",
    name: "Samoa Flag",
    keywords: [
      "ws",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1fc-1f1f8",
        native: "🇼🇸"
      }
    ],
    version: 2
  },
  "flag-xk": {
    id: "flag-xk",
    name: "Kosovo Flag",
    keywords: [
      "xk",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1fd-1f1f0",
        native: "🇽🇰"
      }
    ],
    version: 2
  },
  "flag-ye": {
    id: "flag-ye",
    name: "Yemen Flag",
    keywords: [
      "ye",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1fe-1f1ea",
        native: "🇾🇪"
      }
    ],
    version: 2
  },
  "flag-yt": {
    id: "flag-yt",
    name: "Mayotte Flag",
    keywords: [
      "yt",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1fe-1f1f9",
        native: "🇾🇹"
      }
    ],
    version: 2
  },
  "flag-za": {
    id: "flag-za",
    name: "South Africa Flag",
    keywords: [
      "za",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ff-1f1e6",
        native: "🇿🇦"
      }
    ],
    version: 2
  },
  "flag-zm": {
    id: "flag-zm",
    name: "Zambia Flag",
    keywords: [
      "zm",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ff-1f1f2",
        native: "🇿🇲"
      }
    ],
    version: 2
  },
  "flag-zw": {
    id: "flag-zw",
    name: "Zimbabwe Flag",
    keywords: [
      "zw",
      "nation",
      "country",
      "banner"
    ],
    skins: [
      {
        unified: "1f1ff-1f1fc",
        native: "🇿🇼"
      }
    ],
    version: 2
  },
  "flag-england": {
    id: "flag-england",
    name: "England Flag",
    keywords: [
      "english"
    ],
    skins: [
      {
        unified: "1f3f4-e0067-e0062-e0065-e006e-e0067-e007f",
        native: "🏴󠁧󠁢󠁥󠁮󠁧󠁿"
      }
    ],
    version: 5
  },
  "flag-scotland": {
    id: "flag-scotland",
    name: "Scotland Flag",
    keywords: [
      "scottish"
    ],
    skins: [
      {
        unified: "1f3f4-e0067-e0062-e0073-e0063-e0074-e007f",
        native: "🏴󠁧󠁢󠁳󠁣󠁴󠁿"
      }
    ],
    version: 5
  },
  "flag-wales": {
    id: "flag-wales",
    name: "Wales Flag",
    keywords: [
      "welsh"
    ],
    skins: [
      {
        unified: "1f3f4-e0067-e0062-e0077-e006c-e0073-e007f",
        native: "🏴󠁧󠁢󠁷󠁬󠁳󠁿"
      }
    ],
    version: 5
  }
}, lx = {
  satisfied: "laughing",
  grinning_face_with_star_eyes: "star-struck",
  grinning_face_with_one_large_and_one_small_eye: "zany_face",
  smiling_face_with_smiling_eyes_and_hand_covering_mouth: "face_with_hand_over_mouth",
  face_with_finger_covering_closed_lips: "shushing_face",
  face_with_one_eyebrow_raised: "face_with_raised_eyebrow",
  face_with_open_mouth_vomiting: "face_vomiting",
  shocked_face_with_exploding_head: "exploding_head",
  serious_face_with_symbols_covering_mouth: "face_with_symbols_on_mouth",
  poop: "hankey",
  shit: "hankey",
  collision: "boom",
  raised_hand: "hand",
  hand_with_index_and_middle_fingers_crossed: "crossed_fingers",
  sign_of_the_horns: "the_horns",
  reversed_hand_with_middle_finger_extended: "middle_finger",
  thumbsup: "+1",
  thumbsdown: "-1",
  punch: "facepunch",
  mother_christmas: "mrs_claus",
  running: "runner",
  "man-with-bunny-ears-partying": "men-with-bunny-ears-partying",
  "woman-with-bunny-ears-partying": "women-with-bunny-ears-partying",
  women_holding_hands: "two_women_holding_hands",
  woman_and_man_holding_hands: "man_and_woman_holding_hands",
  couple: "man_and_woman_holding_hands",
  men_holding_hands: "two_men_holding_hands",
  paw_prints: "feet",
  flipper: "dolphin",
  honeybee: "bee",
  lady_beetle: "ladybug",
  cooking: "fried_egg",
  knife: "hocho",
  red_car: "car",
  sailboat: "boat",
  waxing_gibbous_moon: "moon",
  sun_small_cloud: "mostly_sunny",
  sun_behind_cloud: "barely_sunny",
  sun_behind_rain_cloud: "partly_sunny_rain",
  lightning_cloud: "lightning",
  tornado_cloud: "tornado",
  tshirt: "shirt",
  shoe: "mans_shoe",
  telephone: "phone",
  lantern: "izakaya_lantern",
  open_book: "book",
  envelope: "email",
  pencil: "memo",
  heavy_exclamation_mark: "exclamation",
  staff_of_aesculapius: "medical_symbol",
  "flag-cn": "cn",
  "flag-de": "de",
  "flag-es": "es",
  "flag-fr": "fr",
  uk: "gb",
  "flag-gb": "gb",
  "flag-it": "it",
  "flag-jp": "jp",
  "flag-kr": "kr",
  "flag-ru": "ru",
  "flag-us": "us"
}, cx = {
  cols: 61,
  rows: 61
}, vae = {
  categories: sx,
  emojis: ax,
  aliases: lx,
  sheet: cx
}, bae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  aliases: lx,
  categories: sx,
  default: vae,
  emojis: ax,
  sheet: cx
}, Symbol.toStringTag, { value: "Module" }));
function fx(t) {
  return t && t.__esModule ? t.default : t;
}
function Ti(t, e, n) {
  return e in t ? Object.defineProperty(t, e, {
    value: n,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : t[e] = n, t;
}
var Sp, je, dx, Wc, ux, f3, Z1 = {}, hx = [], kae = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;
function as(t, e) {
  for (var n in e) t[n] = e[n];
  return t;
}
function px(t) {
  var e = t.parentNode;
  e && e.removeChild(t);
}
function Zg(t, e, n) {
  var i, r, o, s = {};
  for (o in e) o == "key" ? i = e[o] : o == "ref" ? r = e[o] : s[o] = e[o];
  if (arguments.length > 2 && (s.children = arguments.length > 3 ? Sp.call(arguments, 2) : n), typeof t == "function" && t.defaultProps != null) for (o in t.defaultProps) s[o] === void 0 && (s[o] = t.defaultProps[o]);
  return _u(t, s, i, r, null);
}
function _u(t, e, n, i, r) {
  var o = {
    type: t,
    props: e,
    key: n,
    ref: i,
    __k: null,
    __: null,
    __b: 0,
    __e: null,
    __d: void 0,
    __c: null,
    __h: null,
    constructor: void 0,
    __v: r ?? ++dx
  };
  return r == null && je.vnode != null && je.vnode(o), o;
}
function eo() {
  return {
    current: null
  };
}
function Sl(t) {
  return t.children;
}
function Or(t, e) {
  this.props = t, this.context = e;
}
function xl(t, e) {
  if (e == null) return t.__ ? xl(t.__, t.__.__k.indexOf(t) + 1) : null;
  for (var n; e < t.__k.length; e++) if ((n = t.__k[e]) != null && n.__e != null) return n.__e;
  return typeof t.type == "function" ? xl(t) : null;
}
function mx(t) {
  var e, n;
  if ((t = t.__) != null && t.__c != null) {
    for (t.__e = t.__c.base = null, e = 0; e < t.__k.length; e++) if ((n = t.__k[e]) != null && n.__e != null) {
      t.__e = t.__c.base = n.__e;
      break;
    }
    return mx(t);
  }
}
function d3(t) {
  (!t.__d && (t.__d = !0) && Wc.push(t) && !eh.__r++ || f3 !== je.debounceRendering) && ((f3 = je.debounceRendering) || ux)(eh);
}
function eh() {
  for (var t; eh.__r = Wc.length; ) t = Wc.sort(function(e, n) {
    return e.__v.__b - n.__v.__b;
  }), Wc = [], t.some(function(e) {
    var n, i, r, o, s, a;
    e.__d && (s = (o = (n = e).__v).__e, (a = n.__P) && (i = [], (r = as({}, o)).__v = o.__v + 1, ok(a, o, r, n.__n, a.ownerSVGElement !== void 0, o.__h != null ? [
      s
    ] : null, i, s ?? xl(o), o.__h), bx(i, o), o.__e != s && mx(o)));
  });
}
function gx(t, e, n, i, r, o, s, a, l, c) {
  var f, d, u, h, p, m, v, y = i && i.__k || hx, C = y.length;
  for (n.__k = [], f = 0; f < e.length; f++) if ((h = n.__k[f] = (h = e[f]) == null || typeof h == "boolean" ? null : typeof h == "string" || typeof h == "number" || typeof h == "bigint" ? _u(null, h, null, null, h) : Array.isArray(h) ? _u(Sl, {
    children: h
  }, null, null, null) : h.__b > 0 ? _u(h.type, h.props, h.key, null, h.__v) : h) != null) {
    if (h.__ = n, h.__b = n.__b + 1, (u = y[f]) === null || u && h.key == u.key && h.type === u.type) y[f] = void 0;
    else for (d = 0; d < C; d++) {
      if ((u = y[d]) && h.key == u.key && h.type === u.type) {
        y[d] = void 0;
        break;
      }
      u = null;
    }
    ok(t, h, u = u || Z1, r, o, s, a, l, c), p = h.__e, (d = h.ref) && u.ref != d && (v || (v = []), u.ref && v.push(u.ref, null, h), v.push(d, h.__c || p, h)), p != null ? (m == null && (m = p), typeof h.type == "function" && h.__k === u.__k ? h.__d = l = yx(h, l, t) : l = vx(t, h, u, y, p, l), typeof n.type == "function" && (n.__d = l)) : l && u.__e == l && l.parentNode != t && (l = xl(u));
  }
  for (n.__e = m, f = C; f--; ) y[f] != null && (typeof n.type == "function" && y[f].__e != null && y[f].__e == n.__d && (n.__d = xl(i, f + 1)), wx(y[f], y[f]));
  if (v) for (f = 0; f < v.length; f++) kx(v[f], v[++f], v[++f]);
}
function yx(t, e, n) {
  for (var i, r = t.__k, o = 0; r && o < r.length; o++) (i = r[o]) && (i.__ = t, e = typeof i.type == "function" ? yx(i, e, n) : vx(n, i, i, r, i.__e, e));
  return e;
}
function th(t, e) {
  return e = e || [], t == null || typeof t == "boolean" || (Array.isArray(t) ? t.some(function(n) {
    th(n, e);
  }) : e.push(t)), e;
}
function vx(t, e, n, i, r, o) {
  var s, a, l;
  if (e.__d !== void 0) s = e.__d, e.__d = void 0;
  else if (n == null || r != o || r.parentNode == null) e: if (o == null || o.parentNode !== t) t.appendChild(r), s = null;
  else {
    for (a = o, l = 0; (a = a.nextSibling) && l < i.length; l += 2) if (a == r) break e;
    t.insertBefore(r, o), s = o;
  }
  return s !== void 0 ? s : r.nextSibling;
}
function wae(t, e, n, i, r) {
  var o;
  for (o in n) o === "children" || o === "key" || o in e || nh(t, o, null, n[o], i);
  for (o in e) r && typeof e[o] != "function" || o === "children" || o === "key" || o === "value" || o === "checked" || n[o] === e[o] || nh(t, o, e[o], n[o], i);
}
function u3(t, e, n) {
  e[0] === "-" ? t.setProperty(e, n) : t[e] = n == null ? "" : typeof n != "number" || kae.test(e) ? n : n + "px";
}
function nh(t, e, n, i, r) {
  var o;
  e: if (e === "style")
    if (typeof n == "string") t.style.cssText = n;
    else {
      if (typeof i == "string" && (t.style.cssText = i = ""), i) for (e in i) n && e in n || u3(t.style, e, "");
      if (n) for (e in n) i && n[e] === i[e] || u3(t.style, e, n[e]);
    }
  else if (e[0] === "o" && e[1] === "n") o = e !== (e = e.replace(/Capture$/, "")), e = e.toLowerCase() in t ? e.toLowerCase().slice(2) : e.slice(2), t.l || (t.l = {}), t.l[e + o] = n, n ? i || t.addEventListener(e, o ? p3 : h3, o) : t.removeEventListener(e, o ? p3 : h3, o);
  else if (e !== "dangerouslySetInnerHTML") {
    if (r) e = e.replace(/xlink[H:h]/, "h").replace(/sName$/, "s");
    else if (e !== "href" && e !== "list" && e !== "form" && e !== "tabIndex" && e !== "download" && e in t) try {
      t[e] = n ?? "";
      break e;
    } catch {
    }
    typeof n == "function" || (n != null && (n !== !1 || e[0] === "a" && e[1] === "r") ? t.setAttribute(e, n) : t.removeAttribute(e));
  }
}
function h3(t) {
  this.l[t.type + !1](je.event ? je.event(t) : t);
}
function p3(t) {
  this.l[t.type + !0](je.event ? je.event(t) : t);
}
function ok(t, e, n, i, r, o, s, a, l) {
  var c, f, d, u, h, p, m, v, y, C, k, _ = e.type;
  if (e.constructor !== void 0) return null;
  n.__h != null && (l = n.__h, a = e.__e = n.__e, e.__h = null, o = [
    a
  ]), (c = je.__b) && c(e);
  try {
    e: if (typeof _ == "function") {
      if (v = e.props, y = (c = _.contextType) && i[c.__c], C = c ? y ? y.props.value : c.__ : i, n.__c ? m = (f = e.__c = n.__c).__ = f.__E : ("prototype" in _ && _.prototype.render ? e.__c = f = new _(v, C) : (e.__c = f = new Or(v, C), f.constructor = _, f.render = Eae), y && y.sub(f), f.props = v, f.state || (f.state = {}), f.context = C, f.__n = i, d = f.__d = !0, f.__h = []), f.__s == null && (f.__s = f.state), _.getDerivedStateFromProps != null && (f.__s == f.state && (f.__s = as({}, f.__s)), as(f.__s, _.getDerivedStateFromProps(v, f.__s))), u = f.props, h = f.state, d) _.getDerivedStateFromProps == null && f.componentWillMount != null && f.componentWillMount(), f.componentDidMount != null && f.__h.push(f.componentDidMount);
      else {
        if (_.getDerivedStateFromProps == null && v !== u && f.componentWillReceiveProps != null && f.componentWillReceiveProps(v, C), !f.__e && f.shouldComponentUpdate != null && f.shouldComponentUpdate(v, f.__s, C) === !1 || e.__v === n.__v) {
          f.props = v, f.state = f.__s, e.__v !== n.__v && (f.__d = !1), f.__v = e, e.__e = n.__e, e.__k = n.__k, e.__k.forEach(function(S) {
            S && (S.__ = e);
          }), f.__h.length && s.push(f);
          break e;
        }
        f.componentWillUpdate != null && f.componentWillUpdate(v, f.__s, C), f.componentDidUpdate != null && f.__h.push(function() {
          f.componentDidUpdate(u, h, p);
        });
      }
      f.context = C, f.props = v, f.state = f.__s, (c = je.__r) && c(e), f.__d = !1, f.__v = e, f.__P = t, c = f.render(f.props, f.state, f.context), f.state = f.__s, f.getChildContext != null && (i = as(as({}, i), f.getChildContext())), d || f.getSnapshotBeforeUpdate == null || (p = f.getSnapshotBeforeUpdate(u, h)), k = c != null && c.type === Sl && c.key == null ? c.props.children : c, gx(t, Array.isArray(k) ? k : [
        k
      ], e, n, i, r, o, s, a, l), f.base = e.__e, e.__h = null, f.__h.length && s.push(f), m && (f.__E = f.__ = null), f.__e = !1;
    } else o == null && e.__v === n.__v ? (e.__k = n.__k, e.__e = n.__e) : e.__e = _ae(n.__e, e, n, i, r, o, s, l);
    (c = je.diffed) && c(e);
  } catch (S) {
    e.__v = null, (l || o != null) && (e.__e = a, e.__h = !!l, o[o.indexOf(a)] = null), je.__e(S, e, n);
  }
}
function bx(t, e) {
  je.__c && je.__c(e, t), t.some(function(n) {
    try {
      t = n.__h, n.__h = [], t.some(function(i) {
        i.call(n);
      });
    } catch (i) {
      je.__e(i, n.__v);
    }
  });
}
function _ae(t, e, n, i, r, o, s, a) {
  var l, c, f, d = n.props, u = e.props, h = e.type, p = 0;
  if (h === "svg" && (r = !0), o != null) {
    for (; p < o.length; p++) if ((l = o[p]) && "setAttribute" in l == !!h && (h ? l.localName === h : l.nodeType === 3)) {
      t = l, o[p] = null;
      break;
    }
  }
  if (t == null) {
    if (h === null) return document.createTextNode(u);
    t = r ? document.createElementNS("http://www.w3.org/2000/svg", h) : document.createElement(h, u.is && u), o = null, a = !1;
  }
  if (h === null) d === u || a && t.data === u || (t.data = u);
  else {
    if (o = o && Sp.call(t.childNodes), c = (d = n.props || Z1).dangerouslySetInnerHTML, f = u.dangerouslySetInnerHTML, !a) {
      if (o != null) for (d = {}, p = 0; p < t.attributes.length; p++) d[t.attributes[p].name] = t.attributes[p].value;
      (f || c) && (f && (c && f.__html == c.__html || f.__html === t.innerHTML) || (t.innerHTML = f && f.__html || ""));
    }
    if (wae(t, u, d, r, a), f) e.__k = [];
    else if (p = e.props.children, gx(t, Array.isArray(p) ? p : [
      p
    ], e, n, i, r && h !== "foreignObject", o, s, o ? o[0] : n.__k && xl(n, 0), a), o != null) for (p = o.length; p--; ) o[p] != null && px(o[p]);
    a || ("value" in u && (p = u.value) !== void 0 && (p !== d.value || p !== t.value || h === "progress" && !p) && nh(t, "value", p, d.value, !1), "checked" in u && (p = u.checked) !== void 0 && p !== t.checked && nh(t, "checked", p, d.checked, !1));
  }
  return t;
}
function kx(t, e, n) {
  try {
    typeof t == "function" ? t(e) : t.current = e;
  } catch (i) {
    je.__e(i, n);
  }
}
function wx(t, e, n) {
  var i, r;
  if (je.unmount && je.unmount(t), (i = t.ref) && (i.current && i.current !== t.__e || kx(i, null, e)), (i = t.__c) != null) {
    if (i.componentWillUnmount) try {
      i.componentWillUnmount();
    } catch (o) {
      je.__e(o, e);
    }
    i.base = i.__P = null;
  }
  if (i = t.__k) for (r = 0; r < i.length; r++) i[r] && wx(i[r], e, typeof t.type != "function");
  n || t.__e == null || px(t.__e), t.__e = t.__d = void 0;
}
function Eae(t, e, n) {
  return this.constructor(t, n);
}
function _x(t, e, n) {
  var i, r, o;
  je.__ && je.__(t, e), r = (i = typeof n == "function") ? null : n && n.__k || e.__k, o = [], ok(e, t = (!i && n || e).__k = Zg(Sl, null, [
    t
  ]), r || Z1, Z1, e.ownerSVGElement !== void 0, !i && n ? [
    n
  ] : r ? null : e.firstChild ? Sp.call(e.childNodes) : null, o, !i && n ? n : r ? r.__e : e.firstChild, i), bx(o, t);
}
Sp = hx.slice, je = {
  __e: function(t, e) {
    for (var n, i, r; e = e.__; ) if ((n = e.__c) && !n.__) try {
      if ((i = n.constructor) && i.getDerivedStateFromError != null && (n.setState(i.getDerivedStateFromError(t)), r = n.__d), n.componentDidCatch != null && (n.componentDidCatch(t), r = n.__d), r) return n.__E = n;
    } catch (o) {
      t = o;
    }
    throw t;
  }
}, dx = 0, Or.prototype.setState = function(t, e) {
  var n;
  n = this.__s != null && this.__s !== this.state ? this.__s : this.__s = as({}, this.state), typeof t == "function" && (t = t(as({}, n), this.props)), t && as(n, t), t != null && this.__v && (e && this.__h.push(e), d3(this));
}, Or.prototype.forceUpdate = function(t) {
  this.__v && (this.__e = !0, t && this.__h.push(t), d3(this));
}, Or.prototype.render = Sl, Wc = [], ux = typeof Promise == "function" ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, eh.__r = 0;
var Tae = 0;
function ce(t, e, n, i, r) {
  var o, s, a = {};
  for (s in e) s == "ref" ? o = e[s] : a[s] = e[s];
  var l = {
    type: t,
    props: a,
    key: n,
    ref: o,
    __k: null,
    __: null,
    __b: 0,
    __e: null,
    __d: void 0,
    __c: null,
    __h: null,
    constructor: void 0,
    __v: --Tae,
    __source: i,
    __self: r
  };
  if (typeof t == "function" && (o = t.defaultProps)) for (s in o) a[s] === void 0 && (a[s] = o[s]);
  return je.vnode && je.vnode(l), l;
}
function Cae(t, e) {
  try {
    window.localStorage[`emoji-mart.${t}`] = JSON.stringify(e);
  } catch {
  }
}
function Sae(t) {
  try {
    const e = window.localStorage[`emoji-mart.${t}`];
    if (e) return JSON.parse(e);
  } catch {
  }
}
var po = {
  set: Cae,
  get: Sae
};
const g0 = /* @__PURE__ */ new Map(), xae = [
  {
    v: 15,
    emoji: "🫨"
  },
  {
    v: 14,
    emoji: "🫠"
  },
  {
    v: 13.1,
    emoji: "😶‍🌫️"
  },
  {
    v: 13,
    emoji: "🥸"
  },
  {
    v: 12.1,
    emoji: "🧑‍🦰"
  },
  {
    v: 12,
    emoji: "🥱"
  },
  {
    v: 11,
    emoji: "🥰"
  },
  {
    v: 5,
    emoji: "🤩"
  },
  {
    v: 4,
    emoji: "👱‍♀️"
  },
  {
    v: 3,
    emoji: "🤣"
  },
  {
    v: 2,
    emoji: "👋🏻"
  },
  {
    v: 1,
    emoji: "🙃"
  }
];
function Aae() {
  for (const { v: t, emoji: e } of xae)
    if (Ex(e)) return t;
}
function Mae() {
  return !Ex("🇨🇦");
}
function Ex(t) {
  if (g0.has(t)) return g0.get(t);
  const e = Nae(t);
  return g0.set(t, e), e;
}
const Nae = (() => {
  let t = null;
  try {
    navigator.userAgent.includes("jsdom") || (t = document.createElement("canvas").getContext("2d", {
      willReadFrequently: !0
    }));
  } catch {
  }
  if (!t) return () => !1;
  const e = 25, n = 20, i = Math.floor(e / 2);
  return t.font = i + "px Arial, Sans-Serif", t.textBaseline = "top", t.canvas.width = n * 2, t.canvas.height = e, (r) => {
    t.clearRect(0, 0, n * 2, e), t.fillStyle = "#FF0000", t.fillText(r, 0, 22), t.fillStyle = "#0000FF", t.fillText(r, n, 22);
    const o = t.getImageData(0, 0, n, e).data, s = o.length;
    let a = 0;
    for (; a < s && !o[a + 3]; a += 4) ;
    if (a >= s) return !1;
    const l = n + a / 4 % n, c = Math.floor(a / 4 / n), f = t.getImageData(l, c, 1, 1).data;
    return !(o[a] !== f[0] || o[a + 2] !== f[2] || t.measureText(r).width >= n);
  };
})();
var m3 = {
  latestVersion: Aae,
  noCountryFlags: Mae
};
const ey = [
  "+1",
  "grinning",
  "kissing_heart",
  "heart_eyes",
  "laughing",
  "stuck_out_tongue_winking_eye",
  "sweat_smile",
  "joy",
  "scream",
  "disappointed",
  "unamused",
  "weary",
  "sob",
  "sunglasses",
  "heart"
];
let Nn = null;
function Oae(t) {
  Nn || (Nn = po.get("frequently") || {});
  const e = t.id || t;
  e && (Nn[e] || (Nn[e] = 0), Nn[e] += 1, po.set("last", e), po.set("frequently", Nn));
}
function Rae({ maxFrequentRows: t, perLine: e }) {
  if (!t) return [];
  Nn || (Nn = po.get("frequently"));
  let n = [];
  if (!Nn) {
    Nn = {};
    for (let o in ey.slice(0, e)) {
      const s = ey[o];
      Nn[s] = e - o, n.push(s);
    }
    return n;
  }
  const i = t * e, r = po.get("last");
  for (let o in Nn) n.push(o);
  if (n.sort((o, s) => {
    const a = Nn[s], l = Nn[o];
    return a == l ? o.localeCompare(s) : a - l;
  }), n.length > i) {
    const o = n.slice(i);
    n = n.slice(0, i);
    for (let s of o)
      s != r && delete Nn[s];
    r && n.indexOf(r) == -1 && (delete Nn[n[n.length - 1]], n.splice(-1, 1, r)), po.set("frequently", Nn);
  }
  return n;
}
var sk = {
  add: Oae,
  get: Rae,
  DEFAULTS: ey
}, Tx = {};
Tx = JSON.parse('{"search":"Search","search_no_results_1":"Oh no!","search_no_results_2":"That emoji couldn’t be found","pick":"Pick an emoji…","add_custom":"Add custom emoji","categories":{"activity":"Activity","custom":"Custom","flags":"Flags","foods":"Food & Drink","frequent":"Frequently used","nature":"Animals & Nature","objects":"Objects","people":"Smileys & People","places":"Travel & Places","search":"Search Results","symbols":"Symbols"},"skins":{"1":"Default","2":"Light","3":"Medium-Light","4":"Medium","5":"Medium-Dark","6":"Dark","choose":"Choose default skin tone"}}');
var oo = {
  autoFocus: {
    value: !1
  },
  dynamicWidth: {
    value: !1
  },
  emojiButtonColors: {
    value: null
  },
  emojiButtonRadius: {
    value: "100%"
  },
  emojiButtonSize: {
    value: 36
  },
  emojiSize: {
    value: 24
  },
  emojiVersion: {
    value: 15,
    choices: [
      1,
      2,
      3,
      4,
      5,
      11,
      12,
      12.1,
      13,
      13.1,
      14,
      15
    ]
  },
  exceptEmojis: {
    value: []
  },
  icons: {
    value: "auto",
    choices: [
      "auto",
      "outline",
      "solid"
    ]
  },
  locale: {
    value: "en",
    choices: [
      "en",
      "ar",
      "be",
      "cs",
      "de",
      "es",
      "fa",
      "fi",
      "fr",
      "hi",
      "it",
      "ja",
      "ko",
      "nl",
      "pl",
      "pt",
      "ru",
      "sa",
      "tr",
      "uk",
      "vi",
      "zh"
    ]
  },
  maxFrequentRows: {
    value: 4
  },
  navPosition: {
    value: "top",
    choices: [
      "top",
      "bottom",
      "none"
    ]
  },
  noCountryFlags: {
    value: !1
  },
  noResultsEmoji: {
    value: null
  },
  perLine: {
    value: 9
  },
  previewEmoji: {
    value: null
  },
  previewPosition: {
    value: "bottom",
    choices: [
      "top",
      "bottom",
      "none"
    ]
  },
  searchPosition: {
    value: "sticky",
    choices: [
      "sticky",
      "static",
      "none"
    ]
  },
  set: {
    value: "native",
    choices: [
      "native",
      "apple",
      "facebook",
      "google",
      "twitter"
    ]
  },
  skin: {
    value: 1,
    choices: [
      1,
      2,
      3,
      4,
      5,
      6
    ]
  },
  skinTonePosition: {
    value: "preview",
    choices: [
      "preview",
      "search",
      "none"
    ]
  },
  theme: {
    value: "auto",
    choices: [
      "auto",
      "light",
      "dark"
    ]
  },
  // Data
  categories: null,
  categoryIcons: null,
  custom: null,
  data: null,
  i18n: null,
  // Callbacks
  getImageURL: null,
  getSpritesheetURL: null,
  onAddCustomEmoji: null,
  onClickOutside: null,
  onEmojiSelect: null,
  // Deprecated
  stickySearch: {
    deprecated: !0,
    value: !0
  }
};
let xn = null, ot = null;
const y0 = {};
async function g3(t) {
  if (y0[t]) return y0[t];
  const n = await (await fetch(t)).json();
  return y0[t] = n, n;
}
let v0 = null, Cx = null, Sx = !1;
function Qf(t, { caller: e } = {}) {
  return v0 || (v0 = new Promise((n) => {
    Cx = n;
  })), t ? Iae(t) : e && !Sx && console.warn(`\`${e}\` requires data to be initialized first. Promise will be pending until \`init\` is called.`), v0;
}
async function Iae(t) {
  Sx = !0;
  let { emojiVersion: e, set: n, locale: i } = t;
  if (e || (e = oo.emojiVersion.value), n || (n = oo.set.value), i || (i = oo.locale.value), ot)
    ot.categories = ot.categories.filter((l) => !l.name);
  else {
    ot = (typeof t.data == "function" ? await t.data() : t.data) || await g3(`https://cdn.jsdelivr.net/npm/@emoji-mart/data@latest/sets/${e}/${n}.json`), ot.emoticons = {}, ot.natives = {}, ot.categories.unshift({
      id: "frequent",
      emojis: []
    });
    for (const l in ot.aliases) {
      const c = ot.aliases[l], f = ot.emojis[c];
      f && (f.aliases || (f.aliases = []), f.aliases.push(l));
    }
    ot.originalCategories = ot.categories;
  }
  if (xn = (typeof t.i18n == "function" ? await t.i18n() : t.i18n) || (i == "en" ? /* @__PURE__ */ fx(Tx) : await g3(`https://cdn.jsdelivr.net/npm/@emoji-mart/data@latest/i18n/${i}.json`)), t.custom) for (let l in t.custom) {
    l = parseInt(l);
    const c = t.custom[l], f = t.custom[l - 1];
    if (!(!c.emojis || !c.emojis.length)) {
      c.id || (c.id = `custom_${l + 1}`), c.name || (c.name = xn.categories.custom), f && !c.icon && (c.target = f.target || f), ot.categories.push(c);
      for (const d of c.emojis) ot.emojis[d.id] = d;
    }
  }
  t.categories && (ot.categories = ot.originalCategories.filter((l) => t.categories.indexOf(l.id) != -1).sort((l, c) => {
    const f = t.categories.indexOf(l.id), d = t.categories.indexOf(c.id);
    return f - d;
  }));
  let r = null, o = null;
  n == "native" && (r = m3.latestVersion(), o = t.noCountryFlags || m3.noCountryFlags());
  let s = ot.categories.length, a = !1;
  for (; s--; ) {
    const l = ot.categories[s];
    if (l.id == "frequent") {
      let { maxFrequentRows: d, perLine: u } = t;
      d = d >= 0 ? d : oo.maxFrequentRows.value, u || (u = oo.perLine.value), l.emojis = sk.get({
        maxFrequentRows: d,
        perLine: u
      });
    }
    if (!l.emojis || !l.emojis.length) {
      ot.categories.splice(s, 1);
      continue;
    }
    const { categoryIcons: c } = t;
    if (c) {
      const d = c[l.id];
      d && !l.icon && (l.icon = d);
    }
    let f = l.emojis.length;
    for (; f--; ) {
      const d = l.emojis[f], u = d.id ? d : ot.emojis[d], h = () => {
        l.emojis.splice(f, 1);
      };
      if (!u || t.exceptEmojis && t.exceptEmojis.includes(u.id)) {
        h();
        continue;
      }
      if (r && u.version > r) {
        h();
        continue;
      }
      if (o && l.id == "flags" && !Mx.includes(u.id)) {
        h();
        continue;
      }
      if (!u.search) {
        if (a = !0, u.search = "," + [
          [
            u.id,
            !1
          ],
          [
            u.name,
            !0
          ],
          [
            u.keywords,
            !1
          ],
          [
            u.emoticons,
            !1
          ]
        ].map(([m, v]) => {
          if (m)
            return (Array.isArray(m) ? m : [
              m
            ]).map((y) => (v ? y.split(/[-|_|\s]+/) : [
              y
            ]).map((C) => C.toLowerCase())).flat();
        }).flat().filter((m) => m && m.trim()).join(","), u.emoticons) for (const m of u.emoticons)
          ot.emoticons[m] || (ot.emoticons[m] = u.id);
        let p = 0;
        for (const m of u.skins) {
          if (!m) continue;
          p++;
          const { native: v } = m;
          v && (ot.natives[v] = u.id, u.search += `,${v}`);
          const y = p == 1 ? "" : `:skin-tone-${p}:`;
          m.shortcodes = `:${u.id}:${y}`;
        }
      }
    }
  }
  a && hs.reset(), Cx();
}
function xx(t, e, n) {
  t || (t = {});
  const i = {};
  for (let r in e) i[r] = Ax(r, t, e, n);
  return i;
}
function Ax(t, e, n, i) {
  const r = n[t];
  let o = i && i.getAttribute(t) || (e[t] != null && e[t] != null ? e[t] : null);
  return r && (o != null && r.value && typeof r.value != typeof o && (typeof r.value == "boolean" ? o = o != "false" : o = r.value.constructor(o)), r.transform && o && (o = r.transform(o)), (o == null || r.choices && r.choices.indexOf(o) == -1) && (o = r.value)), o;
}
const Lae = /^(?:\:([^\:]+)\:)(?:\:skin-tone-(\d)\:)?$/;
let ty = null;
function Dae(t) {
  return t.id ? t : ot.emojis[t] || ot.emojis[ot.aliases[t]] || ot.emojis[ot.natives[t]];
}
function Pae() {
  ty = null;
}
async function Fae(t, { maxResults: e, caller: n } = {}) {
  if (!t || !t.trim().length) return null;
  e || (e = 90), await Qf(null, {
    caller: n || "SearchIndex.search"
  });
  const i = t.toLowerCase().replace(/(\w)-/, "$1 ").split(/[\s|,]+/).filter((a, l, c) => a.trim() && c.indexOf(a) == l);
  if (!i.length) return;
  let r = ty || (ty = Object.values(ot.emojis)), o, s;
  for (const a of i) {
    if (!r.length) break;
    o = [], s = {};
    for (const l of r) {
      if (!l.search) continue;
      const c = l.search.indexOf(`,${a}`);
      c != -1 && (o.push(l), s[l.id] || (s[l.id] = 0), s[l.id] += l.id == a ? 0 : c + 1);
    }
    r = o;
  }
  return o.length < 2 || (o.sort((a, l) => {
    const c = s[a.id], f = s[l.id];
    return c == f ? a.id.localeCompare(l.id) : c - f;
  }), o.length > e && (o = o.slice(0, e))), o;
}
var hs = {
  search: Fae,
  get: Dae,
  reset: Pae,
  SHORTCODES_REGEX: Lae
};
const Mx = [
  "checkered_flag",
  "crossed_flags",
  "pirate_flag",
  "rainbow-flag",
  "transgender_flag",
  "triangular_flag_on_post",
  "waving_black_flag",
  "waving_white_flag"
];
function Bae(t, e) {
  return Array.isArray(t) && Array.isArray(e) && t.length === e.length && t.every((n, i) => n == e[i]);
}
async function Hae(t = 1) {
  for (let e in [
    ...Array(t).keys()
  ]) await new Promise(requestAnimationFrame);
}
function Nx(t, { skinIndex: e = 0 } = {}) {
  const n = t.skins[e] || (e = 0, t.skins[e]), i = {
    id: t.id,
    name: t.name,
    native: n.native,
    unified: n.unified,
    keywords: t.keywords,
    shortcodes: n.shortcodes || t.shortcodes
  };
  return t.skins.length > 1 && (i.skin = e + 1), n.src && (i.src = n.src), t.aliases && t.aliases.length && (i.aliases = t.aliases), t.emoticons && t.emoticons.length && (i.emoticons = t.emoticons), i;
}
async function $ae(t) {
  const e = await hs.search(t, {
    maxResults: 1,
    caller: "getEmojiDataFromNative"
  });
  if (!e || !e.length) return null;
  const n = e[0];
  let i = 0;
  for (let r of n.skins) {
    if (r.native == t) break;
    i++;
  }
  return Nx(n, {
    skinIndex: i
  });
}
const jae = {
  activity: {
    outline: /* @__PURE__ */ ce("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      children: /* @__PURE__ */ ce("path", {
        d: "M12 0C5.373 0 0 5.372 0 12c0 6.627 5.373 12 12 12 6.628 0 12-5.373 12-12 0-6.628-5.372-12-12-12m9.949 11H17.05c.224-2.527 1.232-4.773 1.968-6.113A9.966 9.966 0 0 1 21.949 11M13 11V2.051a9.945 9.945 0 0 1 4.432 1.564c-.858 1.491-2.156 4.22-2.392 7.385H13zm-2 0H8.961c-.238-3.165-1.536-5.894-2.393-7.385A9.95 9.95 0 0 1 11 2.051V11zm0 2v8.949a9.937 9.937 0 0 1-4.432-1.564c.857-1.492 2.155-4.221 2.393-7.385H11zm4.04 0c.236 3.164 1.534 5.893 2.392 7.385A9.92 9.92 0 0 1 13 21.949V13h2.04zM4.982 4.887C5.718 6.227 6.726 8.473 6.951 11h-4.9a9.977 9.977 0 0 1 2.931-6.113M2.051 13h4.9c-.226 2.527-1.233 4.771-1.969 6.113A9.972 9.972 0 0 1 2.051 13m16.967 6.113c-.735-1.342-1.744-3.586-1.968-6.113h4.899a9.961 9.961 0 0 1-2.931 6.113"
      })
    }),
    solid: /* @__PURE__ */ ce("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 512 512",
      children: /* @__PURE__ */ ce("path", {
        d: "M16.17 337.5c0 44.98 7.565 83.54 13.98 107.9C35.22 464.3 50.46 496 174.9 496c9.566 0 19.59-.4707 29.84-1.271L17.33 307.3C16.53 317.6 16.17 327.7 16.17 337.5zM495.8 174.5c0-44.98-7.565-83.53-13.98-107.9c-4.688-17.54-18.34-31.23-36.04-35.95C435.5 27.91 392.9 16 337 16c-9.564 0-19.59 .4707-29.84 1.271l187.5 187.5C495.5 194.4 495.8 184.3 495.8 174.5zM26.77 248.8l236.3 236.3c142-36.1 203.9-150.4 222.2-221.1L248.9 26.87C106.9 62.96 45.07 177.2 26.77 248.8zM256 335.1c0 9.141-7.474 16-16 16c-4.094 0-8.188-1.564-11.31-4.689L164.7 283.3C161.6 280.2 160 276.1 160 271.1c0-8.529 6.865-16 16-16c4.095 0 8.189 1.562 11.31 4.688l64.01 64C254.4 327.8 256 331.9 256 335.1zM304 287.1c0 9.141-7.474 16-16 16c-4.094 0-8.188-1.564-11.31-4.689L212.7 235.3C209.6 232.2 208 228.1 208 223.1c0-9.141 7.473-16 16-16c4.094 0 8.188 1.562 11.31 4.688l64.01 64.01C302.5 279.8 304 283.9 304 287.1zM256 175.1c0-9.141 7.473-16 16-16c4.094 0 8.188 1.562 11.31 4.688l64.01 64.01c3.125 3.125 4.688 7.219 4.688 11.31c0 9.133-7.468 16-16 16c-4.094 0-8.189-1.562-11.31-4.688l-64.01-64.01C257.6 184.2 256 180.1 256 175.1z"
      })
    })
  },
  custom: /* @__PURE__ */ ce("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 448 512",
    children: /* @__PURE__ */ ce("path", {
      d: "M417.1 368c-5.937 10.27-16.69 16-27.75 16c-5.422 0-10.92-1.375-15.97-4.281L256 311.4V448c0 17.67-14.33 32-31.1 32S192 465.7 192 448V311.4l-118.3 68.29C68.67 382.6 63.17 384 57.75 384c-11.06 0-21.81-5.734-27.75-16c-8.828-15.31-3.594-34.88 11.72-43.72L159.1 256L41.72 187.7C26.41 178.9 21.17 159.3 29.1 144C36.63 132.5 49.26 126.7 61.65 128.2C65.78 128.7 69.88 130.1 73.72 132.3L192 200.6V64c0-17.67 14.33-32 32-32S256 46.33 256 64v136.6l118.3-68.29c3.838-2.213 7.939-3.539 12.07-4.051C398.7 126.7 411.4 132.5 417.1 144c8.828 15.31 3.594 34.88-11.72 43.72L288 256l118.3 68.28C421.6 333.1 426.8 352.7 417.1 368z"
    })
  }),
  flags: {
    outline: /* @__PURE__ */ ce("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      children: /* @__PURE__ */ ce("path", {
        d: "M0 0l6.084 24H8L1.916 0zM21 5h-4l-1-4H4l3 12h3l1 4h13L21 5zM6.563 3h7.875l2 8H8.563l-2-8zm8.832 10l-2.856 1.904L12.063 13h3.332zM19 13l-1.5-6h1.938l2 8H16l3-2z"
      })
    }),
    solid: /* @__PURE__ */ ce("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 512 512",
      children: /* @__PURE__ */ ce("path", {
        d: "M64 496C64 504.8 56.75 512 48 512h-32C7.25 512 0 504.8 0 496V32c0-17.75 14.25-32 32-32s32 14.25 32 32V496zM476.3 0c-6.365 0-13.01 1.35-19.34 4.233c-45.69 20.86-79.56 27.94-107.8 27.94c-59.96 0-94.81-31.86-163.9-31.87C160.9 .3055 131.6 4.867 96 15.75v350.5c32-9.984 59.87-14.1 84.85-14.1c73.63 0 124.9 31.78 198.6 31.78c31.91 0 68.02-5.971 111.1-23.09C504.1 355.9 512 344.4 512 332.1V30.73C512 11.1 495.3 0 476.3 0z"
      })
    })
  },
  foods: {
    outline: /* @__PURE__ */ ce("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      children: /* @__PURE__ */ ce("path", {
        d: "M17 4.978c-1.838 0-2.876.396-3.68.934.513-1.172 1.768-2.934 4.68-2.934a1 1 0 0 0 0-2c-2.921 0-4.629 1.365-5.547 2.512-.064.078-.119.162-.18.244C11.73 1.838 10.798.023 9.207.023 8.579.022 7.85.306 7 .978 5.027 2.54 5.329 3.902 6.492 4.999 3.609 5.222 0 7.352 0 12.969c0 4.582 4.961 11.009 9 11.009 1.975 0 2.371-.486 3-1 .629.514 1.025 1 3 1 4.039 0 9-6.418 9-11 0-5.953-4.055-8-7-8M8.242 2.546c.641-.508.943-.523.965-.523.426.169.975 1.405 1.357 3.055-1.527-.629-2.741-1.352-2.98-1.846.059-.112.241-.356.658-.686M15 21.978c-1.08 0-1.21-.109-1.559-.402l-.176-.146c-.367-.302-.816-.452-1.266-.452s-.898.15-1.266.452l-.176.146c-.347.292-.477.402-1.557.402-2.813 0-7-5.389-7-9.009 0-5.823 4.488-5.991 5-5.991 1.939 0 2.484.471 3.387 1.251l.323.276a1.995 1.995 0 0 0 2.58 0l.323-.276c.902-.78 1.447-1.251 3.387-1.251.512 0 5 .168 5 6 0 3.617-4.187 9-7 9"
      })
    }),
    solid: /* @__PURE__ */ ce("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 512 512",
      children: /* @__PURE__ */ ce("path", {
        d: "M481.9 270.1C490.9 279.1 496 291.3 496 304C496 316.7 490.9 328.9 481.9 337.9C472.9 346.9 460.7 352 448 352H64C51.27 352 39.06 346.9 30.06 337.9C21.06 328.9 16 316.7 16 304C16 291.3 21.06 279.1 30.06 270.1C39.06 261.1 51.27 256 64 256H448C460.7 256 472.9 261.1 481.9 270.1zM475.3 388.7C478.3 391.7 480 395.8 480 400V416C480 432.1 473.3 449.3 461.3 461.3C449.3 473.3 432.1 480 416 480H96C79.03 480 62.75 473.3 50.75 461.3C38.74 449.3 32 432.1 32 416V400C32 395.8 33.69 391.7 36.69 388.7C39.69 385.7 43.76 384 48 384H464C468.2 384 472.3 385.7 475.3 388.7zM50.39 220.8C45.93 218.6 42.03 215.5 38.97 211.6C35.91 207.7 33.79 203.2 32.75 198.4C31.71 193.5 31.8 188.5 32.99 183.7C54.98 97.02 146.5 32 256 32C365.5 32 457 97.02 479 183.7C480.2 188.5 480.3 193.5 479.2 198.4C478.2 203.2 476.1 207.7 473 211.6C469.1 215.5 466.1 218.6 461.6 220.8C457.2 222.9 452.3 224 447.3 224H64.67C59.73 224 54.84 222.9 50.39 220.8zM372.7 116.7C369.7 119.7 368 123.8 368 128C368 131.2 368.9 134.3 370.7 136.9C372.5 139.5 374.1 141.6 377.9 142.8C380.8 143.1 384 144.3 387.1 143.7C390.2 143.1 393.1 141.6 395.3 139.3C397.6 137.1 399.1 134.2 399.7 131.1C400.3 128 399.1 124.8 398.8 121.9C397.6 118.1 395.5 116.5 392.9 114.7C390.3 112.9 387.2 111.1 384 111.1C379.8 111.1 375.7 113.7 372.7 116.7V116.7zM244.7 84.69C241.7 87.69 240 91.76 240 96C240 99.16 240.9 102.3 242.7 104.9C244.5 107.5 246.1 109.6 249.9 110.8C252.8 111.1 256 112.3 259.1 111.7C262.2 111.1 265.1 109.6 267.3 107.3C269.6 105.1 271.1 102.2 271.7 99.12C272.3 96.02 271.1 92.8 270.8 89.88C269.6 86.95 267.5 84.45 264.9 82.7C262.3 80.94 259.2 79.1 256 79.1C251.8 79.1 247.7 81.69 244.7 84.69V84.69zM116.7 116.7C113.7 119.7 112 123.8 112 128C112 131.2 112.9 134.3 114.7 136.9C116.5 139.5 118.1 141.6 121.9 142.8C124.8 143.1 128 144.3 131.1 143.7C134.2 143.1 137.1 141.6 139.3 139.3C141.6 137.1 143.1 134.2 143.7 131.1C144.3 128 143.1 124.8 142.8 121.9C141.6 118.1 139.5 116.5 136.9 114.7C134.3 112.9 131.2 111.1 128 111.1C123.8 111.1 119.7 113.7 116.7 116.7L116.7 116.7z"
      })
    })
  },
  frequent: {
    outline: /* @__PURE__ */ ce("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      children: [
        /* @__PURE__ */ ce("path", {
          d: "M13 4h-2l-.001 7H9v2h2v2h2v-2h4v-2h-4z"
        }),
        /* @__PURE__ */ ce("path", {
          d: "M12 0C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0m0 22C6.486 22 2 17.514 2 12S6.486 2 12 2s10 4.486 10 10-4.486 10-10 10"
        })
      ]
    }),
    solid: /* @__PURE__ */ ce("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 512 512",
      children: /* @__PURE__ */ ce("path", {
        d: "M256 512C114.6 512 0 397.4 0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256C512 397.4 397.4 512 256 512zM232 256C232 264 236 271.5 242.7 275.1L338.7 339.1C349.7 347.3 364.6 344.3 371.1 333.3C379.3 322.3 376.3 307.4 365.3 300L280 243.2V120C280 106.7 269.3 96 255.1 96C242.7 96 231.1 106.7 231.1 120L232 256z"
      })
    })
  },
  nature: {
    outline: /* @__PURE__ */ ce("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      children: [
        /* @__PURE__ */ ce("path", {
          d: "M15.5 8a1.5 1.5 0 1 0 .001 3.001A1.5 1.5 0 0 0 15.5 8M8.5 8a1.5 1.5 0 1 0 .001 3.001A1.5 1.5 0 0 0 8.5 8"
        }),
        /* @__PURE__ */ ce("path", {
          d: "M18.933 0h-.027c-.97 0-2.138.787-3.018 1.497-1.274-.374-2.612-.51-3.887-.51-1.285 0-2.616.133-3.874.517C7.245.79 6.069 0 5.093 0h-.027C3.352 0 .07 2.67.002 7.026c-.039 2.479.276 4.238 1.04 5.013.254.258.882.677 1.295.882.191 3.177.922 5.238 2.536 6.38.897.637 2.187.949 3.2 1.102C8.04 20.6 8 20.795 8 21c0 1.773 2.35 3 4 3 1.648 0 4-1.227 4-3 0-.201-.038-.393-.072-.586 2.573-.385 5.435-1.877 5.925-7.587.396-.22.887-.568 1.104-.788.763-.774 1.079-2.534 1.04-5.013C23.929 2.67 20.646 0 18.933 0M3.223 9.135c-.237.281-.837 1.155-.884 1.238-.15-.41-.368-1.349-.337-3.291.051-3.281 2.478-4.972 3.091-5.031.256.015.731.27 1.265.646-1.11 1.171-2.275 2.915-2.352 5.125-.133.546-.398.858-.783 1.313M12 22c-.901 0-1.954-.693-2-1 0-.654.475-1.236 1-1.602V20a1 1 0 1 0 2 0v-.602c.524.365 1 .947 1 1.602-.046.307-1.099 1-2 1m3-3.48v.02a4.752 4.752 0 0 0-1.262-1.02c1.092-.516 2.239-1.334 2.239-2.217 0-1.842-1.781-2.195-3.977-2.195-2.196 0-3.978.354-3.978 2.195 0 .883 1.148 1.701 2.238 2.217A4.8 4.8 0 0 0 9 18.539v-.025c-1-.076-2.182-.281-2.973-.842-1.301-.92-1.838-3.045-1.853-6.478l.023-.041c.496-.826 1.49-1.45 1.804-3.102 0-2.047 1.357-3.631 2.362-4.522C9.37 3.178 10.555 3 11.948 3c1.447 0 2.685.192 3.733.57 1 .9 2.316 2.465 2.316 4.48.313 1.651 1.307 2.275 1.803 3.102.035.058.068.117.102.178-.059 5.967-1.949 7.01-4.902 7.19m6.628-8.202c-.037-.065-.074-.13-.113-.195a7.587 7.587 0 0 0-.739-.987c-.385-.455-.648-.768-.782-1.313-.076-2.209-1.241-3.954-2.353-5.124.531-.376 1.004-.63 1.261-.647.636.071 3.044 1.764 3.096 5.031.027 1.81-.347 3.218-.37 3.235"
        })
      ]
    }),
    solid: /* @__PURE__ */ ce("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 576 512",
      children: /* @__PURE__ */ ce("path", {
        d: "M332.7 19.85C334.6 8.395 344.5 0 356.1 0C363.6 0 370.6 3.52 375.1 9.502L392 32H444.1C456.8 32 469.1 37.06 478.1 46.06L496 64H552C565.3 64 576 74.75 576 88V112C576 156.2 540.2 192 496 192H426.7L421.6 222.5L309.6 158.5L332.7 19.85zM448 64C439.2 64 432 71.16 432 80C432 88.84 439.2 96 448 96C456.8 96 464 88.84 464 80C464 71.16 456.8 64 448 64zM416 256.1V480C416 497.7 401.7 512 384 512H352C334.3 512 320 497.7 320 480V364.8C295.1 377.1 268.8 384 240 384C211.2 384 184 377.1 160 364.8V480C160 497.7 145.7 512 128 512H96C78.33 512 64 497.7 64 480V249.8C35.23 238.9 12.64 214.5 4.836 183.3L.9558 167.8C-3.331 150.6 7.094 133.2 24.24 128.1C41.38 124.7 58.76 135.1 63.05 152.2L66.93 167.8C70.49 182 83.29 191.1 97.97 191.1H303.8L416 256.1z"
      })
    })
  },
  objects: {
    outline: /* @__PURE__ */ ce("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      children: [
        /* @__PURE__ */ ce("path", {
          d: "M12 0a9 9 0 0 0-5 16.482V21s2.035 3 5 3 5-3 5-3v-4.518A9 9 0 0 0 12 0zm0 2c3.86 0 7 3.141 7 7s-3.14 7-7 7-7-3.141-7-7 3.14-7 7-7zM9 17.477c.94.332 1.946.523 3 .523s2.06-.19 3-.523v.834c-.91.436-1.925.689-3 .689a6.924 6.924 0 0 1-3-.69v-.833zm.236 3.07A8.854 8.854 0 0 0 12 21c.965 0 1.888-.167 2.758-.451C14.155 21.173 13.153 22 12 22c-1.102 0-2.117-.789-2.764-1.453z"
        }),
        /* @__PURE__ */ ce("path", {
          d: "M14.745 12.449h-.004c-.852-.024-1.188-.858-1.577-1.824-.421-1.061-.703-1.561-1.182-1.566h-.009c-.481 0-.783.497-1.235 1.537-.436.982-.801 1.811-1.636 1.791l-.276-.043c-.565-.171-.853-.691-1.284-1.794-.125-.313-.202-.632-.27-.913-.051-.213-.127-.53-.195-.634C7.067 9.004 7.039 9 6.99 9A1 1 0 0 1 7 7h.01c1.662.017 2.015 1.373 2.198 2.134.486-.981 1.304-2.058 2.797-2.075 1.531.018 2.28 1.153 2.731 2.141l.002-.008C14.944 8.424 15.327 7 16.979 7h.032A1 1 0 1 1 17 9h-.011c-.149.076-.256.474-.319.709a6.484 6.484 0 0 1-.311.951c-.429.973-.79 1.789-1.614 1.789"
        })
      ]
    }),
    solid: /* @__PURE__ */ ce("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 384 512",
      children: /* @__PURE__ */ ce("path", {
        d: "M112.1 454.3c0 6.297 1.816 12.44 5.284 17.69l17.14 25.69c5.25 7.875 17.17 14.28 26.64 14.28h61.67c9.438 0 21.36-6.401 26.61-14.28l17.08-25.68c2.938-4.438 5.348-12.37 5.348-17.7L272 415.1h-160L112.1 454.3zM191.4 .0132C89.44 .3257 16 82.97 16 175.1c0 44.38 16.44 84.84 43.56 115.8c16.53 18.84 42.34 58.23 52.22 91.45c.0313 .25 .0938 .5166 .125 .7823h160.2c.0313-.2656 .0938-.5166 .125-.7823c9.875-33.22 35.69-72.61 52.22-91.45C351.6 260.8 368 220.4 368 175.1C368 78.61 288.9-.2837 191.4 .0132zM192 96.01c-44.13 0-80 35.89-80 79.1C112 184.8 104.8 192 96 192S80 184.8 80 176c0-61.76 50.25-111.1 112-111.1c8.844 0 16 7.159 16 16S200.8 96.01 192 96.01z"
      })
    })
  },
  people: {
    outline: /* @__PURE__ */ ce("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      children: [
        /* @__PURE__ */ ce("path", {
          d: "M12 0C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0m0 22C6.486 22 2 17.514 2 12S6.486 2 12 2s10 4.486 10 10-4.486 10-10 10"
        }),
        /* @__PURE__ */ ce("path", {
          d: "M8 7a2 2 0 1 0-.001 3.999A2 2 0 0 0 8 7M16 7a2 2 0 1 0-.001 3.999A2 2 0 0 0 16 7M15.232 15c-.693 1.195-1.87 2-3.349 2-1.477 0-2.655-.805-3.347-2H15m3-2H6a6 6 0 1 0 12 0"
        })
      ]
    }),
    solid: /* @__PURE__ */ ce("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 512 512",
      children: /* @__PURE__ */ ce("path", {
        d: "M0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256zM256 432C332.1 432 396.2 382 415.2 314.1C419.1 300.4 407.8 288 393.6 288H118.4C104.2 288 92.92 300.4 96.76 314.1C115.8 382 179.9 432 256 432V432zM176.4 160C158.7 160 144.4 174.3 144.4 192C144.4 209.7 158.7 224 176.4 224C194 224 208.4 209.7 208.4 192C208.4 174.3 194 160 176.4 160zM336.4 224C354 224 368.4 209.7 368.4 192C368.4 174.3 354 160 336.4 160C318.7 160 304.4 174.3 304.4 192C304.4 209.7 318.7 224 336.4 224z"
      })
    })
  },
  places: {
    outline: /* @__PURE__ */ ce("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      children: [
        /* @__PURE__ */ ce("path", {
          d: "M6.5 12C5.122 12 4 13.121 4 14.5S5.122 17 6.5 17 9 15.879 9 14.5 7.878 12 6.5 12m0 3c-.275 0-.5-.225-.5-.5s.225-.5.5-.5.5.225.5.5-.225.5-.5.5M17.5 12c-1.378 0-2.5 1.121-2.5 2.5s1.122 2.5 2.5 2.5 2.5-1.121 2.5-2.5-1.122-2.5-2.5-2.5m0 3c-.275 0-.5-.225-.5-.5s.225-.5.5-.5.5.225.5.5-.225.5-.5.5"
        }),
        /* @__PURE__ */ ce("path", {
          d: "M22.482 9.494l-1.039-.346L21.4 9h.6c.552 0 1-.439 1-.992 0-.006-.003-.008-.003-.008H23c0-1-.889-2-1.984-2h-.642l-.731-1.717C19.262 3.012 18.091 2 16.764 2H7.236C5.909 2 4.738 3.012 4.357 4.283L3.626 6h-.642C1.889 6 1 7 1 8h.003S1 8.002 1 8.008C1 8.561 1.448 9 2 9h.6l-.043.148-1.039.346a2.001 2.001 0 0 0-1.359 2.097l.751 7.508a1 1 0 0 0 .994.901H3v1c0 1.103.896 2 2 2h2c1.104 0 2-.897 2-2v-1h6v1c0 1.103.896 2 2 2h2c1.104 0 2-.897 2-2v-1h1.096a.999.999 0 0 0 .994-.901l.751-7.508a2.001 2.001 0 0 0-1.359-2.097M6.273 4.857C6.402 4.43 6.788 4 7.236 4h9.527c.448 0 .834.43.963.857L19.313 9H4.688l1.585-4.143zM7 21H5v-1h2v1zm12 0h-2v-1h2v1zm2.189-3H2.811l-.662-6.607L3 11h18l.852.393L21.189 18z"
        })
      ]
    }),
    solid: /* @__PURE__ */ ce("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 512 512",
      children: /* @__PURE__ */ ce("path", {
        d: "M39.61 196.8L74.8 96.29C88.27 57.78 124.6 32 165.4 32H346.6C387.4 32 423.7 57.78 437.2 96.29L472.4 196.8C495.6 206.4 512 229.3 512 256V448C512 465.7 497.7 480 480 480H448C430.3 480 416 465.7 416 448V400H96V448C96 465.7 81.67 480 64 480H32C14.33 480 0 465.7 0 448V256C0 229.3 16.36 206.4 39.61 196.8V196.8zM109.1 192H402.9L376.8 117.4C372.3 104.6 360.2 96 346.6 96H165.4C151.8 96 139.7 104.6 135.2 117.4L109.1 192zM96 256C78.33 256 64 270.3 64 288C64 305.7 78.33 320 96 320C113.7 320 128 305.7 128 288C128 270.3 113.7 256 96 256zM416 320C433.7 320 448 305.7 448 288C448 270.3 433.7 256 416 256C398.3 256 384 270.3 384 288C384 305.7 398.3 320 416 320z"
      })
    })
  },
  symbols: {
    outline: /* @__PURE__ */ ce("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      children: /* @__PURE__ */ ce("path", {
        d: "M0 0h11v2H0zM4 11h3V6h4V4H0v2h4zM15.5 17c1.381 0 2.5-1.116 2.5-2.493s-1.119-2.493-2.5-2.493S13 13.13 13 14.507 14.119 17 15.5 17m0-2.986c.276 0 .5.222.5.493 0 .272-.224.493-.5.493s-.5-.221-.5-.493.224-.493.5-.493M21.5 19.014c-1.381 0-2.5 1.116-2.5 2.493S20.119 24 21.5 24s2.5-1.116 2.5-2.493-1.119-2.493-2.5-2.493m0 2.986a.497.497 0 0 1-.5-.493c0-.271.224-.493.5-.493s.5.222.5.493a.497.497 0 0 1-.5.493M22 13l-9 9 1.513 1.5 8.99-9.009zM17 11c2.209 0 4-1.119 4-2.5V2s.985-.161 1.498.949C23.01 4.055 23 6 23 6s1-1.119 1-3.135C24-.02 21 0 21 0h-2v6.347A5.853 5.853 0 0 0 17 6c-2.209 0-4 1.119-4 2.5s1.791 2.5 4 2.5M10.297 20.482l-1.475-1.585a47.54 47.54 0 0 1-1.442 1.129c-.307-.288-.989-1.016-2.045-2.183.902-.836 1.479-1.466 1.729-1.892s.376-.871.376-1.336c0-.592-.273-1.178-.818-1.759-.546-.581-1.329-.871-2.349-.871-1.008 0-1.79.293-2.344.879-.556.587-.832 1.181-.832 1.784 0 .813.419 1.748 1.256 2.805-.847.614-1.444 1.208-1.794 1.784a3.465 3.465 0 0 0-.523 1.833c0 .857.308 1.56.924 2.107.616.549 1.423.823 2.42.823 1.173 0 2.444-.379 3.813-1.137L8.235 24h2.819l-2.09-2.383 1.333-1.135zm-6.736-6.389a1.02 1.02 0 0 1 .73-.286c.31 0 .559.085.747.254a.849.849 0 0 1 .283.659c0 .518-.419 1.112-1.257 1.784-.536-.651-.805-1.231-.805-1.742a.901.901 0 0 1 .302-.669M3.74 22c-.427 0-.778-.116-1.057-.349-.279-.232-.418-.487-.418-.766 0-.594.509-1.288 1.527-2.083.968 1.134 1.717 1.946 2.248 2.438-.921.507-1.686.76-2.3.76"
      })
    }),
    solid: /* @__PURE__ */ ce("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 512 512",
      children: /* @__PURE__ */ ce("path", {
        d: "M500.3 7.251C507.7 13.33 512 22.41 512 31.1V175.1C512 202.5 483.3 223.1 447.1 223.1C412.7 223.1 383.1 202.5 383.1 175.1C383.1 149.5 412.7 127.1 447.1 127.1V71.03L351.1 90.23V207.1C351.1 234.5 323.3 255.1 287.1 255.1C252.7 255.1 223.1 234.5 223.1 207.1C223.1 181.5 252.7 159.1 287.1 159.1V63.1C287.1 48.74 298.8 35.61 313.7 32.62L473.7 .6198C483.1-1.261 492.9 1.173 500.3 7.251H500.3zM74.66 303.1L86.5 286.2C92.43 277.3 102.4 271.1 113.1 271.1H174.9C185.6 271.1 195.6 277.3 201.5 286.2L213.3 303.1H239.1C266.5 303.1 287.1 325.5 287.1 351.1V463.1C287.1 490.5 266.5 511.1 239.1 511.1H47.1C21.49 511.1-.0019 490.5-.0019 463.1V351.1C-.0019 325.5 21.49 303.1 47.1 303.1H74.66zM143.1 359.1C117.5 359.1 95.1 381.5 95.1 407.1C95.1 434.5 117.5 455.1 143.1 455.1C170.5 455.1 191.1 434.5 191.1 407.1C191.1 381.5 170.5 359.1 143.1 359.1zM440.3 367.1H496C502.7 367.1 508.6 372.1 510.1 378.4C513.3 384.6 511.6 391.7 506.5 396L378.5 508C372.9 512.1 364.6 513.3 358.6 508.9C352.6 504.6 350.3 496.6 353.3 489.7L391.7 399.1H336C329.3 399.1 323.4 395.9 321 389.6C318.7 383.4 320.4 376.3 325.5 371.1L453.5 259.1C459.1 255 467.4 254.7 473.4 259.1C479.4 263.4 481.6 271.4 478.7 278.3L440.3 367.1zM116.7 219.1L19.85 119.2C-8.112 90.26-6.614 42.31 24.85 15.34C51.82-8.137 93.26-3.642 118.2 21.83L128.2 32.32L137.7 21.83C162.7-3.642 203.6-8.137 231.6 15.34C262.6 42.31 264.1 90.26 236.1 119.2L139.7 219.1C133.2 225.6 122.7 225.6 116.7 219.1H116.7z"
      })
    })
  }
}, zae = {
  loupe: /* @__PURE__ */ ce("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 20 20",
    children: /* @__PURE__ */ ce("path", {
      d: "M12.9 14.32a8 8 0 1 1 1.41-1.41l5.35 5.33-1.42 1.42-5.33-5.34zM8 14A6 6 0 1 0 8 2a6 6 0 0 0 0 12z"
    })
  }),
  delete: /* @__PURE__ */ ce("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 20 20",
    children: /* @__PURE__ */ ce("path", {
      d: "M10 8.586L2.929 1.515 1.515 2.929 8.586 10l-7.071 7.071 1.414 1.414L10 11.414l7.071 7.071 1.414-1.414L11.414 10l7.071-7.071-1.414-1.414L10 8.586z"
    })
  })
};
var ih = {
  categories: jae,
  search: zae
};
function ny(t) {
  let { id: e, skin: n, emoji: i } = t;
  if (t.shortcodes) {
    const a = t.shortcodes.match(hs.SHORTCODES_REGEX);
    a && (e = a[1], a[2] && (n = a[2]));
  }
  if (i || (i = hs.get(e || t.native)), !i) return t.fallback;
  const r = i.skins[n - 1] || i.skins[0], o = r.src || (t.set != "native" && !t.spritesheet ? typeof t.getImageURL == "function" ? t.getImageURL(t.set, r.unified) : `https://cdn.jsdelivr.net/npm/emoji-datasource-${t.set}@15.0.1/img/${t.set}/64/${r.unified}.png` : void 0), s = typeof t.getSpritesheetURL == "function" ? t.getSpritesheetURL(t.set) : `https://cdn.jsdelivr.net/npm/emoji-datasource-${t.set}@15.0.1/img/${t.set}/sheets-256/64.png`;
  return /* @__PURE__ */ ce("span", {
    class: "emoji-mart-emoji",
    "data-emoji-set": t.set,
    children: o ? /* @__PURE__ */ ce("img", {
      style: {
        maxWidth: t.size || "1em",
        maxHeight: t.size || "1em",
        display: "inline-block"
      },
      alt: r.native || r.shortcodes,
      src: o
    }) : t.set == "native" ? /* @__PURE__ */ ce("span", {
      style: {
        fontSize: t.size,
        fontFamily: '"EmojiMart", "Segoe UI Emoji", "Segoe UI Symbol", "Segoe UI", "Apple Color Emoji", "Twemoji Mozilla", "Noto Color Emoji", "Android Emoji"'
      },
      children: r.native
    }) : /* @__PURE__ */ ce("span", {
      style: {
        display: "block",
        width: t.size,
        height: t.size,
        backgroundImage: `url(${s})`,
        backgroundSize: `${100 * ot.sheet.cols}% ${100 * ot.sheet.rows}%`,
        backgroundPosition: `${100 / (ot.sheet.cols - 1) * r.x}% ${100 / (ot.sheet.rows - 1) * r.y}%`
      }
    })
  });
}
const Uae = typeof window < "u" && window.HTMLElement ? window.HTMLElement : Object;
class Ox extends Uae {
  static get observedAttributes() {
    return Object.keys(this.Props);
  }
  update(e = {}) {
    for (let n in e) this.attributeChangedCallback(n, null, e[n]);
  }
  attributeChangedCallback(e, n, i) {
    if (!this.component) return;
    const r = Ax(e, {
      [e]: i
    }, this.constructor.Props, this);
    this.component.componentWillReceiveProps ? this.component.componentWillReceiveProps({
      [e]: r
    }) : (this.component.props[e] = r, this.component.forceUpdate());
  }
  disconnectedCallback() {
    this.disconnected = !0, this.component && this.component.unregister && this.component.unregister();
  }
  constructor(e = {}) {
    if (super(), this.props = e, e.parent || e.ref) {
      let n = null;
      const i = e.parent || (n = e.ref && e.ref.current);
      n && (n.innerHTML = ""), i && i.appendChild(this);
    }
  }
}
class Vae extends Ox {
  setShadow() {
    this.attachShadow({
      mode: "open"
    });
  }
  injectStyles(e) {
    if (!e) return;
    const n = document.createElement("style");
    n.textContent = e, this.shadowRoot.insertBefore(n, this.shadowRoot.firstChild);
  }
  constructor(e, { styles: n } = {}) {
    super(e), this.setShadow(), this.injectStyles(n);
  }
}
var Rx = {
  fallback: "",
  id: "",
  native: "",
  shortcodes: "",
  size: {
    value: "",
    transform: (t) => /\D/.test(t) ? t : `${t}px`
  },
  // Shared
  set: oo.set,
  skin: oo.skin
};
class ak extends Ox {
  async connectedCallback() {
    const e = xx(this.props, Rx, this);
    e.element = this, e.ref = (n) => {
      this.component = n;
    }, await Qf(), !this.disconnected && _x(/* @__PURE__ */ ce(ny, {
      ...e
    }), this);
  }
  constructor(e) {
    super(e);
  }
}
Ti(ak, "Props", Rx);
typeof customElements < "u" && !customElements.get("em-emoji") && customElements.define("em-emoji", ak);
var y3, iy = [], v3 = je.__b, b3 = je.__r, k3 = je.diffed, w3 = je.__c, _3 = je.unmount;
function Wae() {
  var t;
  for (iy.sort(function(e, n) {
    return e.__v.__b - n.__v.__b;
  }); t = iy.pop(); ) if (t.__P) try {
    t.__H.__h.forEach(Eu), t.__H.__h.forEach(ry), t.__H.__h = [];
  } catch (e) {
    t.__H.__h = [], je.__e(e, t.__v);
  }
}
je.__b = function(t) {
  v3 && v3(t);
}, je.__r = function(t) {
  b3 && b3(t);
  var e = t.__c.__H;
  e && (e.__h.forEach(Eu), e.__h.forEach(ry), e.__h = []);
}, je.diffed = function(t) {
  k3 && k3(t);
  var e = t.__c;
  e && e.__H && e.__H.__h.length && (iy.push(e) !== 1 && y3 === je.requestAnimationFrame || ((y3 = je.requestAnimationFrame) || function(n) {
    var i, r = function() {
      clearTimeout(o), E3 && cancelAnimationFrame(i), setTimeout(n);
    }, o = setTimeout(r, 100);
    E3 && (i = requestAnimationFrame(r));
  })(Wae));
}, je.__c = function(t, e) {
  e.some(function(n) {
    try {
      n.__h.forEach(Eu), n.__h = n.__h.filter(function(i) {
        return !i.__ || ry(i);
      });
    } catch (i) {
      e.some(function(r) {
        r.__h && (r.__h = []);
      }), e = [], je.__e(i, n.__v);
    }
  }), w3 && w3(t, e);
}, je.unmount = function(t) {
  _3 && _3(t);
  var e, n = t.__c;
  n && n.__H && (n.__H.__.forEach(function(i) {
    try {
      Eu(i);
    } catch (r) {
      e = r;
    }
  }), e && je.__e(e, n.__v));
};
var E3 = typeof requestAnimationFrame == "function";
function Eu(t) {
  var e = t.__c;
  typeof e == "function" && (t.__c = void 0, e());
}
function ry(t) {
  t.__c = t.__();
}
function qae(t, e) {
  for (var n in e) t[n] = e[n];
  return t;
}
function T3(t, e) {
  for (var n in t) if (n !== "__source" && !(n in e)) return !0;
  for (var i in e) if (i !== "__source" && t[i] !== e[i]) return !0;
  return !1;
}
function rh(t) {
  this.props = t;
}
(rh.prototype = new Or()).isPureReactComponent = !0, rh.prototype.shouldComponentUpdate = function(t, e) {
  return T3(this.props, t) || T3(this.state, e);
};
var C3 = je.__b;
je.__b = function(t) {
  t.type && t.type.__f && t.ref && (t.props.ref = t.ref, t.ref = null), C3 && C3(t);
};
var Gae = je.__e;
je.__e = function(t, e, n) {
  if (t.then) {
    for (var i, r = e; r = r.__; ) if ((i = r.__c) && i.__c) return e.__e == null && (e.__e = n.__e, e.__k = n.__k), i.__c(t, e);
  }
  Gae(t, e, n);
};
var S3 = je.unmount;
function b0() {
  this.__u = 0, this.t = null, this.__b = null;
}
function Ix(t) {
  var e = t.__.__c;
  return e && e.__e && e.__e(t);
}
function Jd() {
  this.u = null, this.o = null;
}
je.unmount = function(t) {
  var e = t.__c;
  e && e.__R && e.__R(), e && t.__h === !0 && (t.type = null), S3 && S3(t);
}, (b0.prototype = new Or()).__c = function(t, e) {
  var n = e.__c, i = this;
  i.t == null && (i.t = []), i.t.push(n);
  var r = Ix(i.__v), o = !1, s = function() {
    o || (o = !0, n.__R = null, r ? r(a) : a());
  };
  n.__R = s;
  var a = function() {
    if (!--i.__u) {
      if (i.state.__e) {
        var c = i.state.__e;
        i.__v.__k[0] = function d(u, h, p) {
          return u && (u.__v = null, u.__k = u.__k && u.__k.map(function(m) {
            return d(m, h, p);
          }), u.__c && u.__c.__P === h && (u.__e && p.insertBefore(u.__e, u.__d), u.__c.__e = !0, u.__c.__P = p)), u;
        }(c, c.__c.__P, c.__c.__O);
      }
      var f;
      for (i.setState({
        __e: i.__b = null
      }); f = i.t.pop(); ) f.forceUpdate();
    }
  }, l = e.__h === !0;
  i.__u++ || l || i.setState({
    __e: i.__b = i.__v.__k[0]
  }), t.then(s, s);
}, b0.prototype.componentWillUnmount = function() {
  this.t = [];
}, b0.prototype.render = function(t, e) {
  if (this.__b) {
    if (this.__v.__k) {
      var n = document.createElement("div"), i = this.__v.__k[0].__c;
      this.__v.__k[0] = function o(s, a, l) {
        return s && (s.__c && s.__c.__H && (s.__c.__H.__.forEach(function(c) {
          typeof c.__c == "function" && c.__c();
        }), s.__c.__H = null), (s = qae({}, s)).__c != null && (s.__c.__P === l && (s.__c.__P = a), s.__c = null), s.__k = s.__k && s.__k.map(function(c) {
          return o(c, a, l);
        })), s;
      }(this.__b, n, i.__O = i.__P);
    }
    this.__b = null;
  }
  var r = e.__e && Zg(Sl, null, t.fallback);
  return r && (r.__h = null), [
    Zg(Sl, null, e.__e ? null : t.children),
    r
  ];
};
var x3 = function(t, e, n) {
  if (++n[1] === n[0] && t.o.delete(e), t.props.revealOrder && (t.props.revealOrder[0] !== "t" || !t.o.size)) for (n = t.u; n; ) {
    for (; n.length > 3; ) n.pop()();
    if (n[1] < n[0]) break;
    t.u = n = n[2];
  }
};
(Jd.prototype = new Or()).__e = function(t) {
  var e = this, n = Ix(e.__v), i = e.o.get(t);
  return i[0]++, function(r) {
    var o = function() {
      e.props.revealOrder ? (i.push(r), x3(e, t, i)) : r();
    };
    n ? n(o) : o();
  };
}, Jd.prototype.render = function(t) {
  this.u = null, this.o = /* @__PURE__ */ new Map();
  var e = th(t.children);
  t.revealOrder && t.revealOrder[0] === "b" && e.reverse();
  for (var n = e.length; n--; ) this.o.set(e[n], this.u = [
    1,
    0,
    this.u
  ]);
  return t.children;
}, Jd.prototype.componentDidUpdate = Jd.prototype.componentDidMount = function() {
  var t = this;
  this.o.forEach(function(e, n) {
    x3(t, n, e);
  });
};
var Kae = typeof Symbol < "u" && Symbol.for && Symbol.for("react.element") || 60103, Yae = /^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|marker(?!H|W|U)|overline|paint|stop|strikethrough|stroke|text(?!L)|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/, Jae = typeof document < "u", Xae = function(t) {
  return (typeof Symbol < "u" && typeof Symbol() == "symbol" ? /fil|che|rad/i : /fil|che|ra/i).test(t);
};
Or.prototype.isReactComponent = {}, [
  "componentWillMount",
  "componentWillReceiveProps",
  "componentWillUpdate"
].forEach(function(t) {
  Object.defineProperty(Or.prototype, t, {
    configurable: !0,
    get: function() {
      return this["UNSAFE_" + t];
    },
    set: function(e) {
      Object.defineProperty(this, t, {
        configurable: !0,
        writable: !0,
        value: e
      });
    }
  });
});
var A3 = je.event;
function Qae() {
}
function Zae() {
  return this.cancelBubble;
}
function ele() {
  return this.defaultPrevented;
}
je.event = function(t) {
  return A3 && (t = A3(t)), t.persist = Qae, t.isPropagationStopped = Zae, t.isDefaultPrevented = ele, t.nativeEvent = t;
};
var M3 = {
  configurable: !0,
  get: function() {
    return this.class;
  }
}, N3 = je.vnode;
je.vnode = function(t) {
  var e = t.type, n = t.props, i = n;
  if (typeof e == "string") {
    var r = e.indexOf("-") === -1;
    for (var o in i = {}, n) {
      var s = n[o];
      Jae && o === "children" && e === "noscript" || o === "value" && "defaultValue" in n && s == null || (o === "defaultValue" && "value" in n && n.value == null ? o = "value" : o === "download" && s === !0 ? s = "" : /ondoubleclick/i.test(o) ? o = "ondblclick" : /^onchange(textarea|input)/i.test(o + e) && !Xae(n.type) ? o = "oninput" : /^onfocus$/i.test(o) ? o = "onfocusin" : /^onblur$/i.test(o) ? o = "onfocusout" : /^on(Ani|Tra|Tou|BeforeInp)/.test(o) ? o = o.toLowerCase() : r && Yae.test(o) ? o = o.replace(/[A-Z0-9]/, "-$&").toLowerCase() : s === null && (s = void 0), i[o] = s);
    }
    e == "select" && i.multiple && Array.isArray(i.value) && (i.value = th(n.children).forEach(function(a) {
      a.props.selected = i.value.indexOf(a.props.value) != -1;
    })), e == "select" && i.defaultValue != null && (i.value = th(n.children).forEach(function(a) {
      a.props.selected = i.multiple ? i.defaultValue.indexOf(a.props.value) != -1 : i.defaultValue == a.props.value;
    })), t.props = i, n.class != n.className && (M3.enumerable = "className" in n, n.className != null && (i.class = n.className), Object.defineProperty(i, "className", M3));
  }
  t.$$typeof = Kae, N3 && N3(t);
};
var O3 = je.__r;
je.__r = function(t) {
  O3 && O3(t), t.__c;
};
const tle = {
  light: "outline",
  dark: "solid"
};
class nle extends rh {
  renderIcon(e) {
    const { icon: n } = e;
    if (n) {
      if (n.svg) return /* @__PURE__ */ ce("span", {
        class: "flex",
        dangerouslySetInnerHTML: {
          __html: n.svg
        }
      });
      if (n.src) return /* @__PURE__ */ ce("img", {
        src: n.src
      });
    }
    const i = ih.categories[e.id] || ih.categories.custom, r = this.props.icons == "auto" ? tle[this.props.theme] : this.props.icons;
    return i[r] || i;
  }
  render() {
    let e = null;
    return /* @__PURE__ */ ce("nav", {
      id: "nav",
      class: "padding",
      "data-position": this.props.position,
      dir: this.props.dir,
      children: /* @__PURE__ */ ce("div", {
        class: "flex relative",
        children: [
          this.categories.map((n, i) => {
            const r = n.name || xn.categories[n.id], o = !this.props.unfocused && n.id == this.state.categoryId;
            return o && (e = i), /* @__PURE__ */ ce("button", {
              "aria-label": r,
              "aria-selected": o || void 0,
              title: r,
              type: "button",
              class: "flex flex-grow flex-center",
              onMouseDown: (s) => s.preventDefault(),
              onClick: () => {
                this.props.onClick({
                  category: n,
                  i
                });
              },
              children: this.renderIcon(n)
            });
          }),
          /* @__PURE__ */ ce("div", {
            class: "bar",
            style: {
              width: `${100 / this.categories.length}%`,
              opacity: e == null ? 0 : 1,
              transform: this.props.dir === "rtl" ? `scaleX(-1) translateX(${e * 100}%)` : `translateX(${e * 100}%)`
            }
          })
        ]
      })
    });
  }
  constructor() {
    super(), this.categories = ot.categories.filter((e) => !e.target), this.state = {
      categoryId: this.categories[0].id
    };
  }
}
class ile extends rh {
  shouldComponentUpdate(e) {
    for (let n in e)
      if (n != "children" && e[n] != this.props[n])
        return !0;
    return !1;
  }
  render() {
    return this.props.children;
  }
}
const Xd = {
  rowsPerRender: 10
};
class rle extends Or {
  getInitialState(e = this.props) {
    return {
      skin: po.get("skin") || e.skin,
      theme: this.initTheme(e.theme)
    };
  }
  componentWillMount() {
    this.dir = xn.rtl ? "rtl" : "ltr", this.refs = {
      menu: eo(),
      navigation: eo(),
      scroll: eo(),
      search: eo(),
      searchInput: eo(),
      skinToneButton: eo(),
      skinToneRadio: eo()
    }, this.initGrid(), this.props.stickySearch == !1 && this.props.searchPosition == "sticky" && (console.warn("[EmojiMart] Deprecation warning: `stickySearch` has been renamed `searchPosition`."), this.props.searchPosition = "static");
  }
  componentDidMount() {
    if (this.register(), this.shadowRoot = this.base.parentNode, this.props.autoFocus) {
      const { searchInput: e } = this.refs;
      e.current && e.current.focus();
    }
  }
  componentWillReceiveProps(e) {
    this.nextState || (this.nextState = {});
    for (const n in e) this.nextState[n] = e[n];
    clearTimeout(this.nextStateTimer), this.nextStateTimer = setTimeout(() => {
      let n = !1;
      for (const r in this.nextState)
        this.props[r] = this.nextState[r], (r === "custom" || r === "categories") && (n = !0);
      delete this.nextState;
      const i = this.getInitialState();
      if (n) return this.reset(i);
      this.setState(i);
    });
  }
  componentWillUnmount() {
    this.unregister();
  }
  async reset(e = {}) {
    await Qf(this.props), this.initGrid(), this.unobserve(), this.setState(e, () => {
      this.observeCategories(), this.observeRows();
    });
  }
  register() {
    document.addEventListener("click", this.handleClickOutside), this.observe();
  }
  unregister() {
    var e;
    document.removeEventListener("click", this.handleClickOutside), (e = this.darkMedia) == null || e.removeEventListener("change", this.darkMediaCallback), this.unobserve();
  }
  observe() {
    this.observeCategories(), this.observeRows();
  }
  unobserve({ except: e = [] } = {}) {
    Array.isArray(e) || (e = [
      e
    ]);
    for (const n of this.observers)
      e.includes(n) || n.disconnect();
    this.observers = [].concat(e);
  }
  initGrid() {
    const { categories: e } = ot;
    this.refs.categories = /* @__PURE__ */ new Map();
    const n = ot.categories.map((r) => r.id).join(",");
    this.navKey && this.navKey != n && this.refs.scroll.current && (this.refs.scroll.current.scrollTop = 0), this.navKey = n, this.grid = [], this.grid.setsize = 0;
    const i = (r, o) => {
      const s = [];
      s.__categoryId = o.id, s.__index = r.length, this.grid.push(s);
      const a = this.grid.length - 1, l = a % Xd.rowsPerRender ? {} : eo();
      return l.index = a, l.posinset = this.grid.setsize + 1, r.push(l), s;
    };
    for (let r of e) {
      const o = [];
      let s = i(o, r);
      for (let a of r.emojis)
        s.length == this.getPerLine() && (s = i(o, r)), this.grid.setsize += 1, s.push(a);
      this.refs.categories.set(r.id, {
        root: eo(),
        rows: o
      });
    }
  }
  initTheme(e) {
    if (e != "auto") return e;
    if (!this.darkMedia) {
      if (this.darkMedia = matchMedia("(prefers-color-scheme: dark)"), this.darkMedia.media.match(/^not/)) return "light";
      this.darkMedia.addEventListener("change", this.darkMediaCallback);
    }
    return this.darkMedia.matches ? "dark" : "light";
  }
  initDynamicPerLine(e = this.props) {
    if (!e.dynamicWidth) return;
    const { element: n, emojiButtonSize: i } = e, r = () => {
      const { width: s } = n.getBoundingClientRect();
      return Math.floor(s / i);
    }, o = new ResizeObserver(() => {
      this.unobserve({
        except: o
      }), this.setState({
        perLine: r()
      }, () => {
        this.initGrid(), this.forceUpdate(() => {
          this.observeCategories(), this.observeRows();
        });
      });
    });
    return o.observe(n), this.observers.push(o), r();
  }
  getPerLine() {
    return this.state.perLine || this.props.perLine;
  }
  getEmojiByPos([e, n]) {
    const i = this.state.searchResults || this.grid, r = i[e] && i[e][n];
    if (r)
      return hs.get(r);
  }
  observeCategories() {
    const e = this.refs.navigation.current;
    if (!e) return;
    const n = /* @__PURE__ */ new Map(), i = (s) => {
      s != e.state.categoryId && e.setState({
        categoryId: s
      });
    }, r = {
      root: this.refs.scroll.current,
      threshold: [
        0,
        1
      ]
    }, o = new IntersectionObserver((s) => {
      for (const l of s) {
        const c = l.target.dataset.id;
        n.set(c, l.intersectionRatio);
      }
      const a = [
        ...n
      ];
      for (const [l, c] of a) if (c) {
        i(l);
        break;
      }
    }, r);
    for (const { root: s } of this.refs.categories.values()) o.observe(s.current);
    this.observers.push(o);
  }
  observeRows() {
    const e = {
      ...this.state.visibleRows
    }, n = new IntersectionObserver((i) => {
      for (const r of i) {
        const o = parseInt(r.target.dataset.index);
        r.isIntersecting ? e[o] = !0 : delete e[o];
      }
      this.setState({
        visibleRows: e
      });
    }, {
      root: this.refs.scroll.current,
      rootMargin: `${this.props.emojiButtonSize * (Xd.rowsPerRender + 5)}px 0px ${this.props.emojiButtonSize * Xd.rowsPerRender}px`
    });
    for (const { rows: i } of this.refs.categories.values())
      for (const r of i) r.current && n.observe(r.current);
    this.observers.push(n);
  }
  preventDefault(e) {
    e.preventDefault();
  }
  unfocusSearch() {
    const e = this.refs.searchInput.current;
    e && e.blur();
  }
  navigate({ e, input: n, left: i, right: r, up: o, down: s }) {
    const a = this.state.searchResults || this.grid;
    if (!a.length) return;
    let [l, c] = this.state.pos;
    const f = (() => {
      if (l == 0 && c == 0 && !e.repeat && (i || o))
        return null;
      if (l == -1)
        return !e.repeat && (r || s) && n.selectionStart == n.value.length ? [
          0,
          0
        ] : null;
      if (i || r) {
        let d = a[l];
        const u = i ? -1 : 1;
        if (c += u, !d[c]) {
          if (l += u, d = a[l], !d)
            return l = i ? 0 : a.length - 1, c = i ? 0 : a[l].length - 1, [
              l,
              c
            ];
          c = i ? d.length - 1 : 0;
        }
        return [
          l,
          c
        ];
      }
      if (o || s) {
        l += o ? -1 : 1;
        const d = a[l];
        return d ? (d[c] || (c = d.length - 1), [
          l,
          c
        ]) : (l = o ? 0 : a.length - 1, c = o ? 0 : a[l].length - 1, [
          l,
          c
        ]);
      }
    })();
    if (f) e.preventDefault();
    else {
      this.state.pos[0] > -1 && this.setState({
        pos: [
          -1,
          -1
        ]
      });
      return;
    }
    this.setState({
      pos: f,
      keyboard: !0
    }, () => {
      this.scrollTo({
        row: f[0]
      });
    });
  }
  scrollTo({ categoryId: e, row: n }) {
    const i = this.state.searchResults || this.grid;
    if (!i.length) return;
    const r = this.refs.scroll.current, o = r.getBoundingClientRect();
    let s = 0;
    if (n >= 0 && (e = i[n].__categoryId), e && (s = (this.refs[e] || this.refs.categories.get(e).root).current.getBoundingClientRect().top - (o.top - r.scrollTop) + 1), n >= 0)
      if (!n) s = 0;
      else {
        const a = i[n].__index, l = s + a * this.props.emojiButtonSize, c = l + this.props.emojiButtonSize + this.props.emojiButtonSize * 0.88;
        if (l < r.scrollTop) s = l;
        else if (c > r.scrollTop + o.height) s = c - o.height;
        else return;
      }
    this.ignoreMouse(), r.scrollTop = s;
  }
  ignoreMouse() {
    this.mouseIsIgnored = !0, clearTimeout(this.ignoreMouseTimer), this.ignoreMouseTimer = setTimeout(() => {
      delete this.mouseIsIgnored;
    }, 100);
  }
  handleEmojiOver(e) {
    this.mouseIsIgnored || this.state.showSkins || this.setState({
      pos: e || [
        -1,
        -1
      ],
      keyboard: !1
    });
  }
  handleEmojiClick({ e, emoji: n, pos: i }) {
    if (this.props.onEmojiSelect && (!n && i && (n = this.getEmojiByPos(i)), n)) {
      const r = Nx(n, {
        skinIndex: this.state.skin - 1
      });
      this.props.maxFrequentRows && sk.add(r, this.props), this.props.onEmojiSelect(r, e);
    }
  }
  closeSkins() {
    this.state.showSkins && (this.setState({
      showSkins: null,
      tempSkin: null
    }), this.base.removeEventListener("click", this.handleBaseClick), this.base.removeEventListener("keydown", this.handleBaseKeydown));
  }
  handleSkinMouseOver(e) {
    this.setState({
      tempSkin: e
    });
  }
  handleSkinClick(e) {
    this.ignoreMouse(), this.closeSkins(), this.setState({
      skin: e,
      tempSkin: null
    }), po.set("skin", e);
  }
  renderNav() {
    return /* @__PURE__ */ ce(nle, {
      ref: this.refs.navigation,
      icons: this.props.icons,
      theme: this.state.theme,
      dir: this.dir,
      unfocused: !!this.state.searchResults,
      position: this.props.navPosition,
      onClick: this.handleCategoryClick
    }, this.navKey);
  }
  renderPreview() {
    const e = this.getEmojiByPos(this.state.pos), n = this.state.searchResults && !this.state.searchResults.length;
    return /* @__PURE__ */ ce("div", {
      id: "preview",
      class: "flex flex-middle",
      dir: this.dir,
      "data-position": this.props.previewPosition,
      children: [
        /* @__PURE__ */ ce("div", {
          class: "flex flex-middle flex-grow",
          children: [
            /* @__PURE__ */ ce("div", {
              class: "flex flex-auto flex-middle flex-center",
              style: {
                height: this.props.emojiButtonSize,
                fontSize: this.props.emojiButtonSize
              },
              children: /* @__PURE__ */ ce(ny, {
                emoji: e,
                id: n ? this.props.noResultsEmoji || "cry" : this.props.previewEmoji || (this.props.previewPosition == "top" ? "point_down" : "point_up"),
                set: this.props.set,
                size: this.props.emojiButtonSize,
                skin: this.state.tempSkin || this.state.skin,
                spritesheet: !0,
                getSpritesheetURL: this.props.getSpritesheetURL
              })
            }),
            /* @__PURE__ */ ce("div", {
              class: `margin-${this.dir[0]}`,
              children: e || n ? /* @__PURE__ */ ce("div", {
                class: `padding-${this.dir[2]} align-${this.dir[0]}`,
                children: [
                  /* @__PURE__ */ ce("div", {
                    class: "preview-title ellipsis",
                    children: e ? e.name : xn.search_no_results_1
                  }),
                  /* @__PURE__ */ ce("div", {
                    class: "preview-subtitle ellipsis color-c",
                    children: e ? e.skins[0].shortcodes : xn.search_no_results_2
                  })
                ]
              }) : /* @__PURE__ */ ce("div", {
                class: "preview-placeholder color-c",
                children: xn.pick
              })
            })
          ]
        }),
        !e && this.props.skinTonePosition == "preview" && this.renderSkinToneButton()
      ]
    });
  }
  renderEmojiButton(e, { pos: n, posinset: i, grid: r }) {
    const o = this.props.emojiButtonSize, s = this.state.tempSkin || this.state.skin, l = (e.skins[s - 1] || e.skins[0]).native, c = Bae(this.state.pos, n), f = n.concat(e.id).join("");
    return /* @__PURE__ */ ce(ile, {
      selected: c,
      skin: s,
      size: o,
      children: /* @__PURE__ */ ce("button", {
        "aria-label": l,
        "aria-selected": c || void 0,
        "aria-posinset": i,
        "aria-setsize": r.setsize,
        "data-keyboard": this.state.keyboard,
        title: this.props.previewPosition == "none" ? e.name : void 0,
        type: "button",
        class: "flex flex-center flex-middle",
        tabindex: "-1",
        onClick: (d) => this.handleEmojiClick({
          e: d,
          emoji: e
        }),
        onMouseEnter: () => this.handleEmojiOver(n),
        onMouseLeave: () => this.handleEmojiOver(),
        style: {
          width: this.props.emojiButtonSize,
          height: this.props.emojiButtonSize,
          fontSize: this.props.emojiSize,
          lineHeight: 0
        },
        children: [
          /* @__PURE__ */ ce("div", {
            "aria-hidden": "true",
            class: "background",
            style: {
              borderRadius: this.props.emojiButtonRadius,
              backgroundColor: this.props.emojiButtonColors ? this.props.emojiButtonColors[(i - 1) % this.props.emojiButtonColors.length] : void 0
            }
          }),
          /* @__PURE__ */ ce(ny, {
            emoji: e,
            set: this.props.set,
            size: this.props.emojiSize,
            skin: s,
            spritesheet: !0,
            getSpritesheetURL: this.props.getSpritesheetURL
          })
        ]
      })
    }, f);
  }
  renderSearch() {
    const e = this.props.previewPosition == "none" || this.props.skinTonePosition == "search";
    return /* @__PURE__ */ ce("div", {
      children: [
        /* @__PURE__ */ ce("div", {
          class: "spacer"
        }),
        /* @__PURE__ */ ce("div", {
          class: "flex flex-middle",
          children: [
            /* @__PURE__ */ ce("div", {
              class: "search relative flex-grow",
              children: [
                /* @__PURE__ */ ce("input", {
                  type: "search",
                  ref: this.refs.searchInput,
                  placeholder: xn.search,
                  onClick: this.handleSearchClick,
                  onInput: this.handleSearchInput,
                  onKeyDown: this.handleSearchKeyDown,
                  autoComplete: "off"
                }),
                /* @__PURE__ */ ce("span", {
                  class: "icon loupe flex",
                  children: ih.search.loupe
                }),
                this.state.searchResults && /* @__PURE__ */ ce("button", {
                  title: "Clear",
                  "aria-label": "Clear",
                  type: "button",
                  class: "icon delete flex",
                  onClick: this.clearSearch,
                  onMouseDown: this.preventDefault,
                  children: ih.search.delete
                })
              ]
            }),
            e && this.renderSkinToneButton()
          ]
        })
      ]
    });
  }
  renderSearchResults() {
    const { searchResults: e } = this.state;
    return e ? /* @__PURE__ */ ce("div", {
      class: "category",
      ref: this.refs.search,
      children: [
        /* @__PURE__ */ ce("div", {
          class: `sticky padding-small align-${this.dir[0]}`,
          children: xn.categories.search
        }),
        /* @__PURE__ */ ce("div", {
          children: e.length ? e.map((n, i) => /* @__PURE__ */ ce("div", {
            class: "flex",
            children: n.map((r, o) => this.renderEmojiButton(r, {
              pos: [
                i,
                o
              ],
              posinset: i * this.props.perLine + o + 1,
              grid: e
            }))
          })) : /* @__PURE__ */ ce("div", {
            class: `padding-small align-${this.dir[0]}`,
            children: this.props.onAddCustomEmoji && /* @__PURE__ */ ce("a", {
              onClick: this.props.onAddCustomEmoji,
              children: xn.add_custom
            })
          })
        })
      ]
    }) : null;
  }
  renderCategories() {
    const { categories: e } = ot, n = !!this.state.searchResults, i = this.getPerLine();
    return /* @__PURE__ */ ce("div", {
      style: {
        visibility: n ? "hidden" : void 0,
        display: n ? "none" : void 0,
        height: "100%"
      },
      children: e.map((r) => {
        const { root: o, rows: s } = this.refs.categories.get(r.id);
        return /* @__PURE__ */ ce("div", {
          "data-id": r.target ? r.target.id : r.id,
          class: "category",
          ref: o,
          children: [
            /* @__PURE__ */ ce("div", {
              class: `sticky padding-small align-${this.dir[0]}`,
              children: r.name || xn.categories[r.id]
            }),
            /* @__PURE__ */ ce("div", {
              class: "relative",
              style: {
                height: s.length * this.props.emojiButtonSize
              },
              children: s.map((a, l) => {
                const c = a.index - a.index % Xd.rowsPerRender, f = this.state.visibleRows[c], d = "current" in a ? a : void 0;
                if (!f && !d) return null;
                const u = l * i, h = u + i, p = r.emojis.slice(u, h);
                return p.length < i && p.push(...new Array(i - p.length)), /* @__PURE__ */ ce("div", {
                  "data-index": a.index,
                  ref: d,
                  class: "flex row",
                  style: {
                    top: l * this.props.emojiButtonSize
                  },
                  children: f && p.map((m, v) => {
                    if (!m) return /* @__PURE__ */ ce("div", {
                      style: {
                        width: this.props.emojiButtonSize,
                        height: this.props.emojiButtonSize
                      }
                    });
                    const y = hs.get(m);
                    return this.renderEmojiButton(y, {
                      pos: [
                        a.index,
                        v
                      ],
                      posinset: a.posinset + v,
                      grid: this.grid
                    });
                  })
                }, a.index);
              })
            })
          ]
        });
      })
    });
  }
  renderSkinToneButton() {
    return this.props.skinTonePosition == "none" ? null : /* @__PURE__ */ ce("div", {
      class: "flex flex-auto flex-center flex-middle",
      style: {
        position: "relative",
        width: this.props.emojiButtonSize,
        height: this.props.emojiButtonSize
      },
      children: /* @__PURE__ */ ce("button", {
        type: "button",
        ref: this.refs.skinToneButton,
        class: "skin-tone-button flex flex-auto flex-center flex-middle",
        "aria-selected": this.state.showSkins ? "" : void 0,
        "aria-label": xn.skins.choose,
        title: xn.skins.choose,
        onClick: this.openSkins,
        style: {
          width: this.props.emojiSize,
          height: this.props.emojiSize
        },
        children: /* @__PURE__ */ ce("span", {
          class: `skin-tone skin-tone-${this.state.skin}`
        })
      })
    });
  }
  renderLiveRegion() {
    const e = this.getEmojiByPos(this.state.pos), n = e ? e.name : "";
    return /* @__PURE__ */ ce("div", {
      "aria-live": "polite",
      class: "sr-only",
      children: n
    });
  }
  renderSkins() {
    const n = this.refs.skinToneButton.current.getBoundingClientRect(), i = this.base.getBoundingClientRect(), r = {};
    return this.dir == "ltr" ? r.right = i.right - n.right - 3 : r.left = n.left - i.left - 3, this.props.previewPosition == "bottom" && this.props.skinTonePosition == "preview" ? r.bottom = i.bottom - n.top + 6 : (r.top = n.bottom - i.top + 3, r.bottom = "auto"), /* @__PURE__ */ ce("div", {
      ref: this.refs.menu,
      role: "radiogroup",
      dir: this.dir,
      "aria-label": xn.skins.choose,
      class: "menu hidden",
      "data-position": r.top ? "top" : "bottom",
      style: r,
      children: [
        ...Array(6).keys()
      ].map((o) => {
        const s = o + 1, a = this.state.skin == s;
        return /* @__PURE__ */ ce("div", {
          children: [
            /* @__PURE__ */ ce("input", {
              type: "radio",
              name: "skin-tone",
              value: s,
              "aria-label": xn.skins[s],
              ref: a ? this.refs.skinToneRadio : null,
              defaultChecked: a,
              onChange: () => this.handleSkinMouseOver(s),
              onKeyDown: (l) => {
                (l.code == "Enter" || l.code == "Space" || l.code == "Tab") && (l.preventDefault(), this.handleSkinClick(s));
              }
            }),
            /* @__PURE__ */ ce("button", {
              "aria-hidden": "true",
              tabindex: "-1",
              onClick: () => this.handleSkinClick(s),
              onMouseEnter: () => this.handleSkinMouseOver(s),
              onMouseLeave: () => this.handleSkinMouseOver(),
              class: "option flex flex-grow flex-middle",
              children: [
                /* @__PURE__ */ ce("span", {
                  class: `skin-tone skin-tone-${s}`
                }),
                /* @__PURE__ */ ce("span", {
                  class: "margin-small-lr",
                  children: xn.skins[s]
                })
              ]
            })
          ]
        });
      })
    });
  }
  render() {
    const e = this.props.perLine * this.props.emojiButtonSize;
    return /* @__PURE__ */ ce("section", {
      id: "root",
      class: "flex flex-column",
      dir: this.dir,
      style: {
        width: this.props.dynamicWidth ? "100%" : `calc(${e}px + (var(--padding) + var(--sidebar-width)))`
      },
      "data-emoji-set": this.props.set,
      "data-theme": this.state.theme,
      "data-menu": this.state.showSkins ? "" : void 0,
      children: [
        this.props.previewPosition == "top" && this.renderPreview(),
        this.props.navPosition == "top" && this.renderNav(),
        this.props.searchPosition == "sticky" && /* @__PURE__ */ ce("div", {
          class: "padding-lr",
          children: this.renderSearch()
        }),
        /* @__PURE__ */ ce("div", {
          ref: this.refs.scroll,
          class: "scroll flex-grow padding-lr",
          children: /* @__PURE__ */ ce("div", {
            style: {
              width: this.props.dynamicWidth ? "100%" : e,
              height: "100%"
            },
            children: [
              this.props.searchPosition == "static" && this.renderSearch(),
              this.renderSearchResults(),
              this.renderCategories()
            ]
          })
        }),
        this.props.navPosition == "bottom" && this.renderNav(),
        this.props.previewPosition == "bottom" && this.renderPreview(),
        this.state.showSkins && this.renderSkins(),
        this.renderLiveRegion()
      ]
    });
  }
  constructor(e) {
    super(), Ti(this, "darkMediaCallback", () => {
      this.props.theme == "auto" && this.setState({
        theme: this.darkMedia.matches ? "dark" : "light"
      });
    }), Ti(this, "handleClickOutside", (n) => {
      const { element: i } = this.props;
      n.target != i && (this.state.showSkins && this.closeSkins(), this.props.onClickOutside && this.props.onClickOutside(n));
    }), Ti(this, "handleBaseClick", (n) => {
      this.state.showSkins && (n.target.closest(".menu") || (n.preventDefault(), n.stopImmediatePropagation(), this.closeSkins()));
    }), Ti(this, "handleBaseKeydown", (n) => {
      this.state.showSkins && n.key == "Escape" && (n.preventDefault(), n.stopImmediatePropagation(), this.closeSkins());
    }), Ti(this, "handleSearchClick", () => {
      this.getEmojiByPos(this.state.pos) && this.setState({
        pos: [
          -1,
          -1
        ]
      });
    }), Ti(this, "handleSearchInput", async () => {
      const n = this.refs.searchInput.current;
      if (!n) return;
      const { value: i } = n, r = await hs.search(i), o = () => {
        this.refs.scroll.current && (this.refs.scroll.current.scrollTop = 0);
      };
      if (!r) return this.setState({
        searchResults: r,
        pos: [
          -1,
          -1
        ]
      }, o);
      const s = n.selectionStart == n.value.length ? [
        0,
        0
      ] : [
        -1,
        -1
      ], a = [];
      a.setsize = r.length;
      let l = null;
      for (let c of r)
        (!a.length || l.length == this.getPerLine()) && (l = [], l.__categoryId = "search", l.__index = a.length, a.push(l)), l.push(c);
      this.ignoreMouse(), this.setState({
        searchResults: a,
        pos: s
      }, o);
    }), Ti(this, "handleSearchKeyDown", (n) => {
      const i = n.currentTarget;
      switch (n.stopImmediatePropagation(), n.key) {
        case "ArrowLeft":
          this.navigate({
            e: n,
            input: i,
            left: !0
          });
          break;
        case "ArrowRight":
          this.navigate({
            e: n,
            input: i,
            right: !0
          });
          break;
        case "ArrowUp":
          this.navigate({
            e: n,
            input: i,
            up: !0
          });
          break;
        case "ArrowDown":
          this.navigate({
            e: n,
            input: i,
            down: !0
          });
          break;
        case "Enter":
          n.preventDefault(), this.handleEmojiClick({
            e: n,
            pos: this.state.pos
          });
          break;
        case "Escape":
          n.preventDefault(), this.state.searchResults ? this.clearSearch() : this.unfocusSearch();
          break;
      }
    }), Ti(this, "clearSearch", () => {
      const n = this.refs.searchInput.current;
      n && (n.value = "", n.focus(), this.handleSearchInput());
    }), Ti(this, "handleCategoryClick", ({ category: n, i }) => {
      this.scrollTo(i == 0 ? {
        row: -1
      } : {
        categoryId: n.id
      });
    }), Ti(this, "openSkins", (n) => {
      const { currentTarget: i } = n, r = i.getBoundingClientRect();
      this.setState({
        showSkins: r
      }, async () => {
        await Hae(2);
        const o = this.refs.menu.current;
        o && (o.classList.remove("hidden"), this.refs.skinToneRadio.current.focus(), this.base.addEventListener("click", this.handleBaseClick, !0), this.base.addEventListener("keydown", this.handleBaseKeydown, !0));
      });
    }), this.observers = [], this.state = {
      pos: [
        -1,
        -1
      ],
      perLine: this.initDynamicPerLine(e),
      visibleRows: {
        0: !0
      },
      ...this.getInitialState(e)
    };
  }
}
class lk extends Vae {
  async connectedCallback() {
    const e = xx(this.props, oo, this);
    e.element = this, e.ref = (n) => {
      this.component = n;
    }, await Qf(e), !this.disconnected && _x(/* @__PURE__ */ ce(rle, {
      ...e
    }), this.shadowRoot);
  }
  constructor(e) {
    super(e, {
      styles: /* @__PURE__ */ fx(Lx)
    });
  }
}
Ti(lk, "Props", oo);
typeof customElements < "u" && !customElements.get("em-emoji-picker") && customElements.define("em-emoji-picker", lk);
var Lx = {};
Lx = `:host {
  width: min-content;
  height: 435px;
  min-height: 230px;
  border-radius: var(--border-radius);
  box-shadow: var(--shadow);
  --border-radius: 10px;
  --category-icon-size: 18px;
  --font-family: -apple-system, BlinkMacSystemFont, "Helvetica Neue", sans-serif;
  --font-size: 15px;
  --preview-placeholder-size: 21px;
  --preview-title-size: 1.1em;
  --preview-subtitle-size: .9em;
  --shadow-color: 0deg 0% 0%;
  --shadow: .3px .5px 2.7px hsl(var(--shadow-color) / .14), .4px .8px 1px -3.2px hsl(var(--shadow-color) / .14), 1px 2px 2.5px -4.5px hsl(var(--shadow-color) / .14);
  display: flex;
}

[data-theme="light"] {
  --em-rgb-color: var(--rgb-color, 34, 36, 39);
  --em-rgb-accent: var(--rgb-accent, 34, 102, 237);
  --em-rgb-background: var(--rgb-background, 255, 255, 255);
  --em-rgb-input: var(--rgb-input, 255, 255, 255);
  --em-color-border: var(--color-border, rgba(0, 0, 0, .05));
  --em-color-border-over: var(--color-border-over, rgba(0, 0, 0, .1));
}

[data-theme="dark"] {
  --em-rgb-color: var(--rgb-color, 222, 222, 221);
  --em-rgb-accent: var(--rgb-accent, 58, 130, 247);
  --em-rgb-background: var(--rgb-background, 21, 22, 23);
  --em-rgb-input: var(--rgb-input, 0, 0, 0);
  --em-color-border: var(--color-border, rgba(255, 255, 255, .1));
  --em-color-border-over: var(--color-border-over, rgba(255, 255, 255, .2));
}

#root {
  --color-a: rgb(var(--em-rgb-color));
  --color-b: rgba(var(--em-rgb-color), .65);
  --color-c: rgba(var(--em-rgb-color), .45);
  --padding: 12px;
  --padding-small: calc(var(--padding) / 2);
  --sidebar-width: 16px;
  --duration: 225ms;
  --duration-fast: 125ms;
  --duration-instant: 50ms;
  --easing: cubic-bezier(.4, 0, .2, 1);
  width: 100%;
  text-align: left;
  border-radius: var(--border-radius);
  background-color: rgb(var(--em-rgb-background));
  position: relative;
}

@media (prefers-reduced-motion) {
  #root {
    --duration: 0;
    --duration-fast: 0;
    --duration-instant: 0;
  }
}

#root[data-menu] button {
  cursor: auto;
}

#root[data-menu] .menu button {
  cursor: pointer;
}

:host, #root, input, button {
  color: rgb(var(--em-rgb-color));
  font-family: var(--font-family);
  font-size: var(--font-size);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  line-height: normal;
}

*, :before, :after {
  box-sizing: border-box;
  min-width: 0;
  margin: 0;
  padding: 0;
}

.relative {
  position: relative;
}

.flex {
  display: flex;
}

.flex-auto {
  flex: none;
}

.flex-center {
  justify-content: center;
}

.flex-column {
  flex-direction: column;
}

.flex-grow {
  flex: auto;
}

.flex-middle {
  align-items: center;
}

.flex-wrap {
  flex-wrap: wrap;
}

.padding {
  padding: var(--padding);
}

.padding-t {
  padding-top: var(--padding);
}

.padding-lr {
  padding-left: var(--padding);
  padding-right: var(--padding);
}

.padding-r {
  padding-right: var(--padding);
}

.padding-small {
  padding: var(--padding-small);
}

.padding-small-b {
  padding-bottom: var(--padding-small);
}

.padding-small-lr {
  padding-left: var(--padding-small);
  padding-right: var(--padding-small);
}

.margin {
  margin: var(--padding);
}

.margin-r {
  margin-right: var(--padding);
}

.margin-l {
  margin-left: var(--padding);
}

.margin-small-l {
  margin-left: var(--padding-small);
}

.margin-small-lr {
  margin-left: var(--padding-small);
  margin-right: var(--padding-small);
}

.align-l {
  text-align: left;
}

.align-r {
  text-align: right;
}

.color-a {
  color: var(--color-a);
}

.color-b {
  color: var(--color-b);
}

.color-c {
  color: var(--color-c);
}

.ellipsis {
  white-space: nowrap;
  max-width: 100%;
  width: auto;
  text-overflow: ellipsis;
  overflow: hidden;
}

.sr-only {
  width: 1px;
  height: 1px;
  position: absolute;
  top: auto;
  left: -10000px;
  overflow: hidden;
}

a {
  cursor: pointer;
  color: rgb(var(--em-rgb-accent));
}

a:hover {
  text-decoration: underline;
}

.spacer {
  height: 10px;
}

[dir="rtl"] .scroll {
  padding-left: 0;
  padding-right: var(--padding);
}

.scroll {
  padding-right: 0;
  overflow-x: hidden;
  overflow-y: auto;
}

.scroll::-webkit-scrollbar {
  width: var(--sidebar-width);
  height: var(--sidebar-width);
}

.scroll::-webkit-scrollbar-track {
  border: 0;
}

.scroll::-webkit-scrollbar-button {
  width: 0;
  height: 0;
  display: none;
}

.scroll::-webkit-scrollbar-corner {
  background-color: rgba(0, 0, 0, 0);
}

.scroll::-webkit-scrollbar-thumb {
  min-height: 20%;
  min-height: 65px;
  border: 4px solid rgb(var(--em-rgb-background));
  border-radius: 8px;
}

.scroll::-webkit-scrollbar-thumb:hover {
  background-color: var(--em-color-border-over) !important;
}

.scroll:hover::-webkit-scrollbar-thumb {
  background-color: var(--em-color-border);
}

.sticky {
  z-index: 1;
  background-color: rgba(var(--em-rgb-background), .9);
  -webkit-backdrop-filter: blur(4px);
  backdrop-filter: blur(4px);
  font-weight: 500;
  position: sticky;
  top: -1px;
}

[dir="rtl"] .search input[type="search"] {
  padding: 10px 2.2em 10px 2em;
}

[dir="rtl"] .search .loupe {
  left: auto;
  right: .7em;
}

[dir="rtl"] .search .delete {
  left: .7em;
  right: auto;
}

.search {
  z-index: 2;
  position: relative;
}

.search input, .search button {
  font-size: calc(var(--font-size)  - 1px);
}

.search input[type="search"] {
  width: 100%;
  background-color: var(--em-color-border);
  transition-duration: var(--duration);
  transition-property: background-color, box-shadow;
  transition-timing-function: var(--easing);
  border: 0;
  border-radius: 10px;
  outline: 0;
  padding: 10px 2em 10px 2.2em;
  display: block;
}

.search input[type="search"]::-ms-input-placeholder {
  color: inherit;
  opacity: .6;
}

.search input[type="search"]::placeholder {
  color: inherit;
  opacity: .6;
}

.search input[type="search"], .search input[type="search"]::-webkit-search-decoration, .search input[type="search"]::-webkit-search-cancel-button, .search input[type="search"]::-webkit-search-results-button, .search input[type="search"]::-webkit-search-results-decoration {
  -webkit-appearance: none;
  -ms-appearance: none;
  appearance: none;
}

.search input[type="search"]:focus {
  background-color: rgb(var(--em-rgb-input));
  box-shadow: inset 0 0 0 1px rgb(var(--em-rgb-accent)), 0 1px 3px rgba(65, 69, 73, .2);
}

.search .icon {
  z-index: 1;
  color: rgba(var(--em-rgb-color), .7);
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

.search .loupe {
  pointer-events: none;
  left: .7em;
}

.search .delete {
  right: .7em;
}

svg {
  fill: currentColor;
  width: 1em;
  height: 1em;
}

button {
  -webkit-appearance: none;
  -ms-appearance: none;
  appearance: none;
  cursor: pointer;
  color: currentColor;
  background-color: rgba(0, 0, 0, 0);
  border: 0;
}

#nav {
  z-index: 2;
  padding-top: 12px;
  padding-bottom: 12px;
  padding-right: var(--sidebar-width);
  position: relative;
}

#nav button {
  color: var(--color-b);
  transition: color var(--duration) var(--easing);
}

#nav button:hover {
  color: var(--color-a);
}

#nav svg, #nav img {
  width: var(--category-icon-size);
  height: var(--category-icon-size);
}

#nav[dir="rtl"] .bar {
  left: auto;
  right: 0;
}

#nav .bar {
  width: 100%;
  height: 3px;
  background-color: rgb(var(--em-rgb-accent));
  transition: transform var(--duration) var(--easing);
  border-radius: 3px 3px 0 0;
  position: absolute;
  bottom: -12px;
  left: 0;
}

#nav button[aria-selected] {
  color: rgb(var(--em-rgb-accent));
}

#preview {
  z-index: 2;
  padding: calc(var(--padding)  + 4px) var(--padding);
  padding-right: var(--sidebar-width);
  position: relative;
}

#preview .preview-placeholder {
  font-size: var(--preview-placeholder-size);
}

#preview .preview-title {
  font-size: var(--preview-title-size);
}

#preview .preview-subtitle {
  font-size: var(--preview-subtitle-size);
}

#nav:before, #preview:before {
  content: "";
  height: 2px;
  position: absolute;
  left: 0;
  right: 0;
}

#nav[data-position="top"]:before, #preview[data-position="top"]:before {
  background: linear-gradient(to bottom, var(--em-color-border), transparent);
  top: 100%;
}

#nav[data-position="bottom"]:before, #preview[data-position="bottom"]:before {
  background: linear-gradient(to top, var(--em-color-border), transparent);
  bottom: 100%;
}

.category:last-child {
  min-height: calc(100% + 1px);
}

.category button {
  font-family: -apple-system, BlinkMacSystemFont, Helvetica Neue, sans-serif;
  position: relative;
}

.category button > * {
  position: relative;
}

.category button .background {
  opacity: 0;
  background-color: var(--em-color-border);
  transition: opacity var(--duration-fast) var(--easing) var(--duration-instant);
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}

.category button:hover .background {
  transition-duration: var(--duration-instant);
  transition-delay: 0s;
}

.category button[aria-selected] .background {
  opacity: 1;
}

.category button[data-keyboard] .background {
  transition: none;
}

.row {
  width: 100%;
  position: absolute;
  top: 0;
  left: 0;
}

.skin-tone-button {
  border: 1px solid rgba(0, 0, 0, 0);
  border-radius: 100%;
}

.skin-tone-button:hover {
  border-color: var(--em-color-border);
}

.skin-tone-button:active .skin-tone {
  transform: scale(.85) !important;
}

.skin-tone-button .skin-tone {
  transition: transform var(--duration) var(--easing);
}

.skin-tone-button[aria-selected] {
  background-color: var(--em-color-border);
  border-top-color: rgba(0, 0, 0, .05);
  border-bottom-color: rgba(0, 0, 0, 0);
  border-left-width: 0;
  border-right-width: 0;
}

.skin-tone-button[aria-selected] .skin-tone {
  transform: scale(.9);
}

.menu {
  z-index: 2;
  white-space: nowrap;
  border: 1px solid var(--em-color-border);
  background-color: rgba(var(--em-rgb-background), .9);
  -webkit-backdrop-filter: blur(4px);
  backdrop-filter: blur(4px);
  transition-property: opacity, transform;
  transition-duration: var(--duration);
  transition-timing-function: var(--easing);
  border-radius: 10px;
  padding: 4px;
  position: absolute;
  box-shadow: 1px 1px 5px rgba(0, 0, 0, .05);
}

.menu.hidden {
  opacity: 0;
}

.menu[data-position="bottom"] {
  transform-origin: 100% 100%;
}

.menu[data-position="bottom"].hidden {
  transform: scale(.9)rotate(-3deg)translateY(5%);
}

.menu[data-position="top"] {
  transform-origin: 100% 0;
}

.menu[data-position="top"].hidden {
  transform: scale(.9)rotate(3deg)translateY(-5%);
}

.menu input[type="radio"] {
  clip: rect(0 0 0 0);
  width: 1px;
  height: 1px;
  border: 0;
  margin: 0;
  padding: 0;
  position: absolute;
  overflow: hidden;
}

.menu input[type="radio"]:checked + .option {
  box-shadow: 0 0 0 2px rgb(var(--em-rgb-accent));
}

.option {
  width: 100%;
  border-radius: 6px;
  padding: 4px 6px;
}

.option:hover {
  color: #fff;
  background-color: rgb(var(--em-rgb-accent));
}

.skin-tone {
  width: 16px;
  height: 16px;
  border-radius: 100%;
  display: inline-block;
  position: relative;
  overflow: hidden;
}

.skin-tone:after {
  content: "";
  mix-blend-mode: overlay;
  background: linear-gradient(rgba(255, 255, 255, .2), rgba(0, 0, 0, 0));
  border: 1px solid rgba(0, 0, 0, .8);
  border-radius: 100%;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  box-shadow: inset 0 -2px 3px #000, inset 0 1px 2px #fff;
}

.skin-tone-1 {
  background-color: #ffc93a;
}

.skin-tone-2 {
  background-color: #ffdab7;
}

.skin-tone-3 {
  background-color: #e7b98f;
}

.skin-tone-4 {
  background-color: #c88c61;
}

.skin-tone-5 {
  background-color: #a46134;
}

.skin-tone-6 {
  background-color: #5d4437;
}

[data-index] {
  justify-content: space-between;
}

[data-emoji-set="twitter"] .skin-tone:after {
  box-shadow: none;
  border-color: rgba(0, 0, 0, .5);
}

[data-emoji-set="twitter"] .skin-tone-1 {
  background-color: #fade72;
}

[data-emoji-set="twitter"] .skin-tone-2 {
  background-color: #f3dfd0;
}

[data-emoji-set="twitter"] .skin-tone-3 {
  background-color: #eed3a8;
}

[data-emoji-set="twitter"] .skin-tone-4 {
  background-color: #cfad8d;
}

[data-emoji-set="twitter"] .skin-tone-5 {
  background-color: #a8805d;
}

[data-emoji-set="twitter"] .skin-tone-6 {
  background-color: #765542;
}

[data-emoji-set="google"] .skin-tone:after {
  box-shadow: inset 0 0 2px 2px rgba(0, 0, 0, .4);
}

[data-emoji-set="google"] .skin-tone-1 {
  background-color: #f5c748;
}

[data-emoji-set="google"] .skin-tone-2 {
  background-color: #f1d5aa;
}

[data-emoji-set="google"] .skin-tone-3 {
  background-color: #d4b48d;
}

[data-emoji-set="google"] .skin-tone-4 {
  background-color: #aa876b;
}

[data-emoji-set="google"] .skin-tone-5 {
  background-color: #916544;
}

[data-emoji-set="google"] .skin-tone-6 {
  background-color: #61493f;
}

[data-emoji-set="facebook"] .skin-tone:after {
  border-color: rgba(0, 0, 0, .4);
  box-shadow: inset 0 -2px 3px #000, inset 0 1px 4px #fff;
}

[data-emoji-set="facebook"] .skin-tone-1 {
  background-color: #f5c748;
}

[data-emoji-set="facebook"] .skin-tone-2 {
  background-color: #f1d5aa;
}

[data-emoji-set="facebook"] .skin-tone-3 {
  background-color: #d4b48d;
}

[data-emoji-set="facebook"] .skin-tone-4 {
  background-color: #aa876b;
}

[data-emoji-set="facebook"] .skin-tone-5 {
  background-color: #916544;
}

[data-emoji-set="facebook"] .skin-tone-6 {
  background-color: #61493f;
}

`;
const ole = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  get Data() {
    return ot;
  },
  Emoji: ak,
  FrequentlyUsed: sk,
  get I18n() {
    return xn;
  },
  Picker: lk,
  SafeFlags: Mx,
  SearchIndex: hs,
  Store: po,
  getEmojiDataFromNative: $ae,
  init: Qf
}, Symbol.toStringTag, { value: "Module" }));
export {
  hle as default
};
